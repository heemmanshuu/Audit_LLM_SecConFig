---
# Source: teredix/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-teredix
  labels:
    helm.sh/chart: teredix-0.0.2
    app.kubernetes.io/name: teredix
    app.kubernetes.io/instance: my-teredix
    app.kubernetes.io/managed-by: Helm
---
# Source: teredix/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-teredix-configmap
data:
    KEY: value
---
# Source: teredix/templates/configmap.yaml
kind: ConfigMap
apiVersion: v1
metadata:
  name: my-teredix-configmap-volume
data:
  config.yaml: |
    null
---
# Source: teredix/templates/services.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-teredix-api
  labels:
    helm.sh/chart: teredix-0.0.2
    app.kubernetes.io/name: teredix
    app.kubernetes.io/instance: my-teredix
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: teredix
    app.kubernetes.io/instance: my-teredix
---
# Source: teredix/templates/services.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-teredix-metrics
  annotations:
    prometheus.io/path: /metrics
    prometheus.io/port: "2112"
    prometheus.io/scrape: "true"
  labels:
    helm.sh/chart: teredix-0.0.2
    app.kubernetes.io/name: teredix
    app.kubernetes.io/instance: my-teredix
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 2112
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: teredix
    app.kubernetes.io/instance: my-teredix
---
# Source: teredix/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-teredix
  labels:
    helm.sh/chart: teredix-0.0.2
    app.kubernetes.io/name: teredix
    app.kubernetes.io/instance: my-teredix
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: teredix
      app.kubernetes.io/instance: my-teredix
  template:
    metadata:
      labels:
        app.kubernetes.io/name: teredix
        app.kubernetes.io/instance: my-teredix
    spec:
      serviceAccountName: my-teredix
      securityContext:
        {}
      containers:
        - name: teredix
          securityContext:
            {}
          image: "ghcr.io/shaharia-lab/teredix:0.0.2"
          command: ["/usr/local/bin/teredix"]
          args: ["discover", "--config", "/config/config.yaml"]
          envFrom:
            - configMapRef:
                name: my-teredix-configmap
          volumeMounts:
              - name: appconfig-volume
                mountPath: /config
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /ping
              port: http
            initialDelaySeconds: 10
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 2
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ping
              port: http
            initialDelaySeconds: 10
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 2
          resources:
            {}
      volumes:
        - name: appconfig-volume
          configMap:
            name: my-teredix-configmap-volume
---
# Source: teredix/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: my-teredix
  labels:
    helm.sh/chart: teredix-0.0.2
    app.kubernetes.io/name: teredix
    app.kubernetes.io/instance: my-teredix
    app.kubernetes.io/managed-by: Helm
spec:
  rules:
