---
# Source: plane/templates/secrets/postgres.yaml
apiVersion: v1
kind: Secret
metadata:
  name: postgres
  labels:
    app.kubernetes.io/name: plane
    helm.sh/chart: plane-1.0.22
    app.kubernetes.io/instance: my-plane
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  username: cG9zdGdyZXM=
  password: 
  host:
---
# Source: plane/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: plane
  labels:
    app.kubernetes.io/name: plane
    helm.sh/chart: plane-1.0.22
    app.kubernetes.io/instance: my-plane
    app.kubernetes.io/managed-by: Helm
rules:
  # TODO: narrow api groups
  - apiGroups:
      - '*'
    resources:
      - '*'
    verbs:
      - '*'
---
# Source: plane/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: plane
  labels:
    app.kubernetes.io/name: plane
    helm.sh/chart: plane-1.0.22
    app.kubernetes.io/instance: my-plane
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: plane
subjects:
  - kind: ServiceAccount
    name: default
    namespace: default
---
# Source: plane/templates/releases/plane.yaml
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: my-plane-release
  labels:
    app.kubernetes.io/name: plane
    helm.sh/chart: plane-1.0.22
    app.kubernetes.io/instance: my-plane
    app.kubernetes.io/managed-by: Helm
spec:
  interval: 5m
  chart:
    spec:
      chart: plane
      version: "1.0.22"
      sourceRef:
        apiVersion: source.toolkit.fluxcd.io/v1beta1
        kind: HelmRepository
        name: codechem
  values:
    planeVersion: stable
    dockerRegistry:
      enabled: false
    ingress:
      enabled: false
      appHost: 
      ingressClass: nginx
      ingress_annotations:
    ssl:
      createIssuer: false
    redis:
      local_setup: true
      image: valkey/valkey:7.2.5-alpine
      servicePort: 6379
      storageClass: 
      volumeSize: 1Gi
      pullPolicy: IfNotPresent
      assign_cluster_ip: false
    postgres:
      local_setup: false
    minio:
      local_setup: false

    web:
      replicas: 1
      memoryLimit: 512Mi
      cpuLimit: 200m
      image: makeplane/plane-frontend
      pullPolicy: 
      assign_cluster_ip: true

    space:
      replicas: 1
      memoryLimit: 1000Mi
      cpuLimit: 500m
      image: makeplane/plane-space
      pullPolicy: 
      assign_cluster_ip: true

    admin:
      replicas: 1
      memoryLimit: 1000Mi
      cpuLimit: 500m
      image: makeplane/plane-admin
      pullPolicy: 
      assign_cluster_ip: true

    api:
      replicas: 1
      memoryLimit: 1000Mi
      cpuLimit: 500m
      image: makeplane/plane-backend
      pullPolicy: 
      assign_cluster_ip: false

    worker:
      replicas: 1
      memoryLimit: 1000Mi
      cpuLimit: 500m
      image: makeplane/plane-backend
      pullPolicy: 

    beatworker:
      replicas: 1
      memoryLimit: 1000Mi
      cpuLimit: 500m
      image: makeplane/plane-backend
      pullPolicy: 

    env:
      pgdb_remote_url: postgres://postgres:@:3306/plane

      # DATA STORE
      docstore_bucket: "uploads"
      doc_upload_size_limit: "5242880" # 5MB

      # REQUIRED IF MINIO LOCAL SETUP IS FALSE
      aws_access_key: ""
      aws_secret_access_key: ""
      aws_region: ""
      aws_s3_endpoint_url: ""

      secret_key: "60gp0byfz2dvffa45cxl20p1scy9xbpf6d8c5y0geejgkyp1b5"

      sentry_dsn: ""
      sentry_environment: ""

      cors_allowed_origins: ""
      default_cluster_domain: cluster.local
---
# Source: plane/templates/releases/plane.yaml
apiVersion: source.toolkit.fluxcd.io/v1beta1
kind: HelmRepository
metadata:
  name: codechem
  labels:
    app.kubernetes.io/name: plane
    helm.sh/chart: plane-1.0.22
    app.kubernetes.io/instance: my-plane
    app.kubernetes.io/managed-by: Helm
spec:
  interval: 5m
  url: https://charts.codechem.com
