---
# Source: tegola-vector-tiles/templates/networkpolicy.yaml
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: tegola-vector-tiles-my-tegola-vector-tiles
  labels:
    app: tegola-vector-tiles
    chart: tegola-vector-tiles-0.1.14
    release: my-tegola-vector-tiles
    heritage: Helm
spec:
  podSelector:
    matchLabels:
      app: tegola-vector-tiles
      release: my-tegola-vector-tiles
  policyTypes:
    - Ingress
  ingress:
    - ports:
      - port: 8080
        protocol: TCP
---
# Source: tegola-vector-tiles/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: tegola-vector-tiles-my-tegola-vector-tiles-secret-config
  labels:
    app: tegola-vector-tiles
    chart: tegola-vector-tiles-0.1.14
    release: my-tegola-vector-tiles
    heritage: Helm
type: Opaque
data:
  AWS_ACCESS_KEY_ID: "czNfY29tcGF0aWJsZV9zd2lmdF9rZXlfaWQ="
  AWS_SECRET_ACCESS_KEY: "czNfY29tcGF0aWJsZV9zd2lmdF9zZWNyZXRfYWNjZXNzX2tleQ=="
  TEGOLA_POSTGRES_PASSWORD: "c2VjcmV0"
---
# Source: tegola-vector-tiles/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: config-my-tegola-vector-tiles
  labels:
    app: tegola-vector-tiles
    chart: tegola-vector-tiles-0.1.14
    release: my-tegola-vector-tiles
    heritage: Helm
data:
  config.toml: |-     
    
    [observer]
    type = "prometheus"
    
    [[providers]]
    name = "osm"
    type = "mvt_postgis"
    host = "postgres-postgis"
    max_connections = 
    port = "5432"
    database = "gis"
    user = "default"
    password = "${TEGOLA_POSTGRES_PASSWORD}"
    
      [[providers.layers]]
      name = "landuse"
      geometry_fieldname = "geom"
      geometry_type = "polygon"
      id_fieldname = "osm_id"
      sql = "SELECT class, osm_id, way_area, z_order, ST_AsMVTGeom(geometry, !BBOX!) AS geom FROM layer_landuse(!BBOX!, !ZOOM!)"
    
      [[providers.layers]]
      name = "waterway"
      geometry_fieldname = "geom"
      geometry_type = "linestring"
      id_fieldname = "osm_id"
      sql = "SELECT class, osm_id, ST_AsMVTGeom(geometry, !BBOX!) AS geom FROM layer_waterway(!BBOX!, !ZOOM!)"
    
      [[providers.layers]]
      name = "water"
      geometry_type = "polygon"
      geometry_fieldname = "geom"
      id_fieldname = "osm_id"
      sql = "SELECT osm_id, ST_AsMVTGeom(geometry, !BBOX!) AS geom FROM layer_water(!BBOX!, !ZOOM!)"
    
      [[providers.layers]]
      name = "aeroway"
      geometry_type = "polygon"
      geometry_fieldname = "geom"
      id_fieldname = "osm_id"
      sql = "SELECT osm_id, ST_AsMVTGeom(geometry, !BBOX!) AS geom, type FROM layer_aeroway(!BBOX!, !ZOOM!)"
    
      [[providers.layers]]
      name = "road"
      geometry_type = "linestring"
      geometry_fieldname = "geom"
      id_fieldname = "osm_id"
      sql = "SELECT osm_id, ST_AsMVTGeom(geometry, !BBOX!) AS geom, class, z_order, 'is' FROM layer_transportation(!BBOX!, !ZOOM!)"
    
      [[providers.layers]]
      name = "admin"
      geometry_type = "linestring"
      geometry_fieldname = "geom"
      fields = [ "admin_level", "disputed", "maritime", "osm_id" ]
      sql = "SELECT osm_id, ST_AsMVTGeom(geometry, !BBOX!) AS geom, admin_level, maritime, disputed FROM layer_admin(!BBOX!, !ZOOM!)"
    
      [[providers.layers]]
      name = "country_label"
      geometry_type = "point"
      geometry_fieldname = "geom"
      id_fieldname = "osm_id"
      sql = "SELECT osm_id, ST_AsMVTGeom(geometry, !BBOX!, 4096, 1024) AS geom, name, name_, scalerank, code FROM layer_country_label(!BBOX!, !ZOOM!, !PIXEL_WIDTH!)"
    
      [[providers.layers]]
      name = "poi_label"
      geometry_type = "point"
      geometry_fieldname = "geom"
      id_fieldname = "osm_id"
      sql = "SELECT osm_id, ST_AsMVTGeom(geometry, !BBOX!) AS geom, localrank, scalerank, maki, name FROM layer_poi_label(!BBOX!, !ZOOM!)"
    
      [[providers.layers]]
      name = "road_label"
      geometry_type = "linestring"
      geometry_fieldname = "geom"
      id_fieldname = "osm_id"
      sql = "SELECT osm_id, ST_AsMVTGeom(geometry, !BBOX!) AS geom, shield, name, name_, ref, reflen, len FROM layer_transportation_name(!BBOX!, !ZOOM!)"
    
      [[providers.layers]]
      name = "place_label"
      geometry_type = "point"
      geometry_fieldname = "geom"
      id_fieldname = "osm_id"
      sql = "SELECT osm_id, ST_AsMVTGeom(geometry, !BBOX!, 4096, 1024) AS geom, ldir, localrank, name, name_, osm_id, type FROM layer_place_label(!BBOX!, !ZOOM!, !PIXEL_WIDTH!)"
    
      [[providers.layers]]
      name = "building"
      geometry_type = "polygon"
      geometry_fieldname = "geom"
      id_fieldname = "osm_id"
      sql = "SELECT osm_id, ST_AsMVTGeom(geometry, !BBOX!) AS geom FROM layer_building(!BBOX!, !ZOOM!)"
    
    [[maps]]
    name = "osm"
    attribution = 'Map data Â© <a href="http://openstreetmap.org/copyright">OpenStreetMap contributors</a>'
    center = [ -122.4144, 37.7907, 14.0 ]
    tile_buffer = 8
    
      [[maps.layers]]
      provider_layer = "osm.landuse"
      min_zoom = 7
      max_zoom = 15
    
      [[maps.layers]]
      provider_layer = "osm.waterway"
      min_zoom = 8
      max_zoom = 15
    
      [[maps.layers]]
      provider_layer = "osm.water"
      min_zoom = 0
      max_zoom = 15
    
      [[maps.layers]]
      provider_layer = "osm.aeroway"
      min_zoom = 12
      max_zoom = 15
    
      [[maps.layers]]
      provider_layer = "osm.road"
      min_zoom = 6
      max_zoom = 15
    
      [[maps.layers]]
      provider_layer = "osm.admin"
      min_zoom = 0
      max_zoom = 15
    
      [[maps.layers]]
      provider_layer = "osm.country_label"
      min_zoom = 3
      max_zoom = 10
    
      [[maps.layers]]
      provider_layer = "osm.poi_label"
      min_zoom = 14
      max_zoom = 15
    
      [[maps.layers]]
      provider_layer = "osm.road_label"
      min_zoom = 11
      max_zoom = 15
    
      [[maps.layers]]
      provider_layer = "osm.place_label"
      min_zoom = 3
      max_zoom = 15
    
      [[maps.layers]]
      provider_layer = "osm.building"
      min_zoom = 14
      max_zoom = 15
---
# Source: tegola-vector-tiles/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: tegola-vector-tiles-my-tegola-vector-tiles
  labels:
    app: tegola-vector-tiles
    chart: tegola-vector-tiles-0.1.14
    release: my-tegola-vector-tiles
    heritage: Helm
spec:
  type: NodePort
  selector:
    app: tegola-vector-tiles
    release: my-tegola-vector-tiles
  ports:
    - name: http
      targetPort: 8080
      port: 8080
---
# Source: tegola-vector-tiles/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tegola-vector-tiles-my-tegola-vector-tiles
  labels:
    app: tegola-vector-tiles
    chart: tegola-vector-tiles-0.1.14
    release: my-tegola-vector-tiles
    heritage: Helm
spec:
  selector:
    matchLabels:
      app: tegola-vector-tiles
      release: my-tegola-vector-tiles
  replicas: 1
  template:
    metadata:
      labels:
        app: tegola-vector-tiles
        release: my-tegola-vector-tiles
        routed_via: my-tegola-vector-tiles
      annotations:
        checksum/secrets: b1f42ce896dd4049ee06128aece910b806cf979c028ceb203efa2c154e9648a2
        prometheus.io/port: "8080"
        prometheus.io/scrape: "true"        
    spec:
      containers:
        # The main application container
        - name: tegola-vector-tiles-my-tegola-vector-tiles
          image: "docker-registry.wikimedia.org/wikimedia/operations-software-tegola:latest"
          imagePullPolicy: IfNotPresent
          args:
            - serve
            - --logger
            - zap
            - --config
            - /etc/tegola/config.toml
          ports:
            - containerPort: 8080
          livenessProbe:
            tcpSocket:
              port: 8080
          readinessProbe:
            httpGet:
              path: /capabilities
              port: 8080
          env:
            - name: SERVICE_IDENTIFIER
              value: tegola-vector-tiles-my-tegola-vector-tiles
            - name: TEGOLA_BROKER_URL
              value: "kafka://kafka-hostname:9092"
            - name: TEGOLA_CONFIG_PATH
              value: "/etc/tegola/config.toml"
            - name: TEGOLA_PATH
              value: "/srv/service/cmd/tegola/tegola"
            - name: TEGOLA_QUEUE_NAME
              value: "tegola-maps-tile-pregeneration"
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: tegola-vector-tiles-my-tegola-vector-tiles-secret-config
                  key: AWS_ACCESS_KEY_ID
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: tegola-vector-tiles-my-tegola-vector-tiles-secret-config
                  key: AWS_SECRET_ACCESS_KEY
            - name: TEGOLA_POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: tegola-vector-tiles-my-tegola-vector-tiles-secret-config
                  key: TEGOLA_POSTGRES_PASSWORD
          resources:
            requests:
              cpu: 1m
              memory: 200Mi
            limits:
              cpu: 1m
              memory: 400Mi
          volumeMounts:
            - name: config-volume
              mountPath: /etc/tegola          
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
               drop:
               - ALL
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault        
      volumes:        
        - name: config-volume
          configMap:
            name: config-my-tegola-vector-tiles
