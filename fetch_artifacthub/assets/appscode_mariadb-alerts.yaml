---
# Source: mariadb-alerts/templates/alert.yaml
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: my-mariadb-alerts
  namespace: default
  labels:
    helm.sh/chart: mariadb-alerts-v2023.05.09
    app.kubernetes.io/name: mariadb-alerts
    app.kubernetes.io/instance: my-mariadb-alerts
    app.kubernetes.io/version: "v0.2.0"
    app.kubernetes.io/managed-by: Helm
    release: kube-prometheus-stack
spec:
  groups:
  - name: mariadb.database.default.my-mariadb-alerts.rules
    rules:
    - alert: MySQLInstanceDown
      expr: mysql_up{job="my-mariadb-alerts-stats",namespace="default"} == 0
      for: 0m
      labels:
        severity: critical
        k8s_group: kubedb.com
        k8s_kind: MariaDB
        k8s_resource: mariadbs
        app: my-mariadb-alerts
        app_namespace: default
      annotations:
        summary: MySQL instance down (instance {{ $labels.pod }})
        description: "MySQL instance is down on {{ $labels.pod }}\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"
    - alert: MySQLServiceDown
      expr: sum by (service) (mysql_up{job="my-mariadb-alerts-stats",namespace="default"}) == 0
      for: 0m
      labels:
        severity: critical
        k8s_group: kubedb.com
        k8s_kind: MariaDB
        k8s_resource: mariadbs
        app: my-mariadb-alerts
        app_namespace: default
      annotations:
        summary: MySQL service down (instance {{ $labels.pod }})
        description: "MySQL service is down on {{ $labels.pod }}\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"
    - alert: MySQLTooManyConnections
      expr: max_over_time(mysql_global_status_threads_connected{job="my-mariadb-alerts-stats",namespace="default"}[1m]) / mysql_global_variables_max_connections{job="my-mariadb-alerts-stats",namespace="default"} * 100 > 80
      for: 2m
      labels:
        severity: warning
        k8s_group: kubedb.com
        k8s_kind: MariaDB
        k8s_resource: mariadbs
        app: my-mariadb-alerts
        app_namespace: default
      annotations:
        summary: MySQL too many connections (> 80%) (instance {{ $labels.pod }})
        description: "More than 80% of MySQL connections are in use on {{ $labels.pod }}\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"
    - alert: MySQLHighThreadsRunning
      expr: max_over_time(mysql_global_status_threads_running{job="my-mariadb-alerts-stats",namespace="default"}[1m]) / mysql_global_variables_max_connections{job="my-mariadb-alerts-stats",namespace="default"} * 100 > 60
      for: 2m
      labels:
        severity: warning
        k8s_group: kubedb.com
        k8s_kind: MariaDB
        k8s_resource: mariadbs
        app: my-mariadb-alerts
        app_namespace: default
      annotations:
        summary: MySQL high threads running (> 60%) (instance {{ $labels.pod }})
        description: "More than 60% of MySQL threads are in use on {{ $labels.pod }}\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"
    - alert: MySQLSlowQueries
      expr: increase(mysql_global_status_slow_queries{job="my-mariadb-alerts-stats",namespace="default"}[1m]) > 0
      for: 2m
      labels:
        severity: warning
        k8s_group: kubedb.com
        k8s_kind: MariaDB
        k8s_resource: mariadbs
        app: my-mariadb-alerts
        app_namespace: default
      annotations:
        summary: MySQL slow queries on (instance {{ $labels.pod }})
        description: "MySQL server mysql has some new slow query.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"
    - alert: MySQLInnoDBLogWaits
      expr: rate(mysql_global_status_innodb_log_waits{job="my-mariadb-alerts-stats",namespace="default"}[15m]) > 10
      for: 0m
      labels:
        severity: warning
        k8s_group: kubedb.com
        k8s_kind: MariaDB
        k8s_resource: mariadbs
        app: my-mariadb-alerts
        app_namespace: default
      annotations:
        summary: MySQL InnoDB log waits (> 10) (instance {{ $labels.pod }})
        description: "MySQL innodb log writes stalling\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"
    - alert: MySQLRestarted
      expr: mysql_global_status_uptime{job="my-mariadb-alerts-stats",namespace="default"} < 60
      for: 0m
      labels:
        severity: warning
        k8s_group: kubedb.com
        k8s_kind: MariaDB
        k8s_resource: mariadbs
        app: my-mariadb-alerts
        app_namespace: default
      annotations:
        summary: MySQL restarted (60 second ago) (instance {{ $labels.pod }})
        description: "MySQL restarted\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"
    - alert: MySQLHighQPS
      expr: rate(mysql_global_status_queries{job="my-mariadb-alerts-stats",namespace="default"}[1m]) > 1000
      for: 0m
      labels:
        severity: critical
        k8s_group: kubedb.com
        k8s_kind: MariaDB
        k8s_resource: mariadbs
        app: my-mariadb-alerts
        app_namespace: default
      annotations:
        summary: MySQL has high queries per second (> 1000) (instance {{ $labels.pod }})
        description: "MySQL has high QPS on (instance {{ $labels.pod }})\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"
    - alert: MySQLHighIncomingBytes
      expr: rate(mysql_global_status_bytes_received{job="my-mariadb-alerts-stats",namespace="default"}[1m]) > 1.048576e+06
      for: 0m
      labels:
        severity: critical
        k8s_group: kubedb.com
        k8s_kind: MariaDB
        k8s_resource: mariadbs
        app: my-mariadb-alerts
        app_namespace: default
      annotations:
        summary: MySQL has high incoming bytes second (> 1.048576e+06) (instance {{ $labels.pod }})
        description: "MySQL has high incoming bytes per second on (instance {{ $labels.pod }})\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"
    - alert: MySQLHighOutgoingBytes
      expr: rate(mysql_global_status_bytes_sent{job="my-mariadb-alerts-stats",namespace="default"}[1m]) > 1.048576e+06
      for: 0m
      labels:
        severity: critical
        k8s_group: kubedb.com
        k8s_kind: MariaDB
        k8s_resource: mariadbs
        app: my-mariadb-alerts
        app_namespace: default
      annotations:
        summary: MySQL has high outgoing bytes second (> 1.048576e+06) (instance {{ $labels.pod }})
        description: "MySQL has high outgoing bytes per second on (instance {{ $labels.pod }})\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"
    - alert: MySQLTooManyOpenFiles
      expr: max_over_time(mysql_global_status_open_files{job="my-mariadb-alerts-stats",namespace="default"}[1m]) / mysql_global_variables_open_files_limit{job="my-mariadb-alerts-stats",namespace="default"} * 100 > 80
      for: 2m
      labels:
        severity: warning
        k8s_group: kubedb.com
        k8s_kind: MariaDB
        k8s_resource: mariadbs
        app: my-mariadb-alerts
        app_namespace: default
      annotations:
        summary: MySQL too many opened files (> 80%) (instance {{ $labels.pod }})
        description: "MySQL too many opened files on (instance {{ $labels.pod }})\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"
  - name: mariadb.cluster.default.my-mariadb-alerts.rules
    rules:
    - alert: GaleraReplicationLatencyTooLong
      expr: mysql_galera_evs_repl_latency_avg_seconds{job="my-mariadb-alerts-stats",namespace="default"} > 0.1
      for: 5m
      labels:
        severity: warning
        k8s_group: kubedb.com
        k8s_kind: MariaDB
        k8s_resource: mariadbs
        app: my-mariadb-alerts
        app_namespace: default
      annotations:
        summary: MariaDB Galera Cluster latency too long ( > 0.1 second,) (instance {{ $labels.pod }})
        description: "MariaDB Galera Cluster latency too long on {{ $labels.pod }}\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"
  - name: mariadb.provisioner.default.my-mariadb-alerts.rules
    rules:
    - alert: KubeDBMariaDBPhaseNotReady
      expr: kubedb_com_mariadb_status_phase{phase="NotReady",app="my-mariadb-alerts",namespace="default"} == 1
      for: 1m
      labels:
        severity: critical
        k8s_group: kubedb.com
        k8s_kind: MariaDB
        k8s_resource: mariadbs
        app: my-mariadb-alerts
        app_namespace: default
      annotations:
        summary: KubeDB MariaDB Phase NotReady (mariadb {{ $labels.mariadb }})
        description: "KubeDB MariaDB Phase not ready on {{ $labels.mariadb }}\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"
    - alert: KubeDBMariaDBPhaseCritical
      expr: kubedb_com_mariadb_status_phase{phase="Critical",app="my-mariadb-alerts",namespace="default"} == 1
      for: 15m
      labels:
        severity: warning
        k8s_group: kubedb.com
        k8s_kind: MariaDB
        k8s_resource: mariadbs
        app: my-mariadb-alerts
        app_namespace: default
      annotations:
        summary: KubeDB MariaDB Phase Critical (mariadb {{ $labels.mariadb }})
        description: "KubeDB MariaDB Phase Critical {{ $labels.mariadb }}\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"
  - name: mariadb.opsManager.default.my-mariadb-alerts.rules
    rules:
    - alert: KubeDBMariaDBOpsRequestStatusProgressingToLong
      expr: ops_kubedb_com_mariadbopsrequest_status_phase{phase="Progressing",app="my-mariadb-alerts",namespace="default"} == 1
      for: 30m
      labels:
        severity: critical
        k8s_group: kubedb.com
        k8s_kind: MariaDB
        k8s_resource: mariadbs
        app: my-mariadb-alerts
        app_namespace: default
      annotations:
        summary: MariaDBOpsRequest is in progressing status for too long (mariadbopsrequest {{ $labels.mariadbopsrequest }})
        description: "MariaDBOpsRequest {{ $labels.mariadbopsrequest }} is in progressing status for too long\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"
    - alert: KubeDBMariaDBOpsRequestFailed
      expr: ops_kubedb_com_mariadbopsrequest_status_phase{phase="Failed",app="my-mariadb-alerts",namespace="default"} == 1
      for: 0m
      labels:
        severity: critical
        k8s_group: kubedb.com
        k8s_kind: MariaDB
        k8s_resource: mariadbs
        app: my-mariadb-alerts
        app_namespace: default
      annotations:
        summary: MariaDBOpsRequest failed (mariadbopsrequest {{ $labels.mariadbopsrequest }})
        description: "MariaDBOpsRequest {{ $labels.mariadbopsrequest }} failed \n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"
  - name: mariadb.stash.default.my-mariadb-alerts.rules
    rules:
    - alert: MariaDBStashBackupSessionFailed
      expr: stash_backup_session_success * on(invoker_name, invoker_kind) group_left(target_name, target_kind) stash_appscode_com_backupconfiguration_info{target_name="my-mariadb-alerts", target_kind="AppBinding", namespace="default"} == 0
      for: 0m
      labels:
        severity: critical
        k8s_group: kubedb.com
        k8s_kind: MariaDB
        k8s_resource: mariadbs
        app: my-mariadb-alerts
        app_namespace: default
      annotations:
        summary: MariaDB Stash backup session failed (invoker_name {{ $labels.invoker_name }})
        description: "MariaDB Stash backupsession failed {{ $labels.invoker_name }} \n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"
    - alert: MariaDBStashRestoreSessionFailed
      expr: stash_restore_session_success * on(invoker_name, invoker_kind) group_left(target_name, target_kind) stash_appscode_com_restoresession_info{target_name="my-mariadb-alerts", target_kind="AppBinding", namespace="default"} == 0
      for: 0m
      labels:
        severity: critical
        k8s_group: kubedb.com
        k8s_kind: MariaDB
        k8s_resource: mariadbs
        app: my-mariadb-alerts
        app_namespace: default
      annotations:
        summary: MariaDB Stash restore session failed (invoker_name {{ $labels.invoker_name }})
        description: "MariaDB Stash restore session failed {{ $labels.invoker_name }} \n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"
    - alert: MariaDBStashNoBackupSessionForTooLong
      expr: time() - stash_backup_last_success_time_seconds + on(invoker_name, invoker_kind) group_left(target_name, target_kind) stash_appscode_com_backupconfiguration_info{target_name="my-mariadb-alerts", target_kind="AppBinding", namespace="default"} - 1 > 18000
      for: 0m
      labels:
        severity: warning
        k8s_group: kubedb.com
        k8s_kind: MariaDB
        k8s_resource: mariadbs
        app: my-mariadb-alerts
        app_namespace: default
      annotations:
        summary: MariaDB Stash no backup for last 18000 second (invoker_name {{ $labels.invoker_name }})
        description: "MariaDB Stash no backup for too long {{ $labels.invoker_name }} \n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"
    - alert: MariaDBStashRepositoryCorrupted
      expr: stash_repository_integrity * on(invoker_name, invoker_kind) group_left(target_name, target_kind, repository) stash_appscode_com_backupconfiguration_info{target_name="my-mariadb-alerts", target_kind="AppBinding", namespace="default"}
      for: 5m
      labels:
        severity: critical
        k8s_group: kubedb.com
        k8s_kind: MariaDB
        k8s_resource: mariadbs
        app: my-mariadb-alerts
        app_namespace: default
      annotations:
        summary: MariaDB Stash repository corrupted (invoker_name {{ $labels.invoker_name }})
        description: "MariaDB Stash repository corrupted {{ $labels.invoker_name }} \n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"
    - alert: MariaDBStashRepositoryStorageRunningLow
      expr: stash_repository_size_bytes * on(invoker_name, invoker_kind) group_left(target_name, target_kind, repository) stash_appscode_com_backupconfiguration_info{target_name="my-mariadb-alerts", target_kind="AppBinding", namespace="default"} > 1.073741824e+10
      for: 5m
      labels:
        severity: warning
        k8s_group: kubedb.com
        k8s_kind: MariaDB
        k8s_resource: mariadbs
        app: my-mariadb-alerts
        app_namespace: default
      annotations:
        summary: MariaDB Stash Repository storage more than 1.073741824e+10 byte. (invoker_name {{ $labels.invoker_name }})
        description: "MariaDB Stash Repository storage running low {{ $labels.invoker_name }} \n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"
    - alert: MariaDBStashBackupSessionPeriodTooLong
      expr: stash_backup_session_duration_seconds * on(invoker_name, invoker_kind) group_left(target_name, target_kind, repository) stash_appscode_com_backupconfiguration_info{target_name="my-mariadb-alerts", target_kind="AppBinding", namespace="default"} > 1800
      for: 0m
      labels:
        severity: warning
        k8s_group: kubedb.com
        k8s_kind: MariaDB
        k8s_resource: mariadbs
        app: my-mariadb-alerts
        app_namespace: default
      annotations:
        summary:  MariaDB Stash backup session took more than 1800 second to complete. (invoker_name {{ $labels.invoker_name }})
        description: "MariaDB Stash backup session taking to long to complete {{ $labels.invoker_name }} \n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"
    - alert: MariaDBStashRestoreSessionPeriodTooLong
      expr: stash_restore_session_duration_seconds * on(invoker_name, invoker_kind) group_left(target_name, target_kind, repository) stash_appscode_com_restoresession_info{target_name="my-mariadb-alerts", target_kind="AppBinding", namespace="default"} > 1800
      for: 0m
      labels:
        severity: warning
        k8s_group: kubedb.com
        k8s_kind: MariaDB
        k8s_resource: mariadbs
        app: my-mariadb-alerts
        app_namespace: default
      annotations:
        summary:  MariaDB Stash restore session took more than 1800 second to complete. (invoker_name {{ $labels.invoker_name }})
        description: "MariaDB Stash restore session taking to long to complete {{ $labels.invoker_name }} \n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"
  - name: mariadb.schemaManager.default.my-mariadb-alerts.rules
    rules:
    - alert: KubeDBMariaDBSchemaPendingForTooLong
      expr: schema_kubedb_com_mariadbdatabase_status_phase{phase="Pending",app="my-mariadb-alerts",app_namespace="default"} == 1
      for: 30m
      labels:
        severity: warning
        k8s_group: kubedb.com
        k8s_kind: MariaDB
        k8s_resource: mariadbs
        app: my-mariadb-alerts
        app_namespace: default
      annotations:
        summary: KubeDB schema pending for too long for (mariadbdatabase {{ $labels.mariadbdatabase }})
        description: "KubeDB schema pending for too long.\n {{ $labels.mariadbdatabase }} \n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"
    - alert: KubeDBMariaDBSchemaInProgressForTooLong
      expr: schema_kubedb_com_mariadbdatabase_status_phase{phase="InProgress",app="my-mariadb-alerts",app_namespace="default"} == 1
      for: 30m
      labels:
        severity: warning
        k8s_group: kubedb.com
        k8s_kind: MariaDB
        k8s_resource: mariadbs
        app: my-mariadb-alerts
        app_namespace: default
      annotations:
        summary: KubeDB schema is in progress for too long for (mariadbdatabase {{ $labels.mariadbdatabase }})
        description: "KubeDB schema is in progress for too long.\n {{ $labels.mariadbdatabase }} \n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"
    - alert: KubeDBMariaDBSchemaTerminatingForTooLong
      expr: schema_kubedb_com_mariadbdatabase_status_phase{phase="Terminating",app="my-mariadb-alerts",app_namespace="default"} == 1
      for: 30m
      labels:
        severity: warning
        k8s_group: kubedb.com
        k8s_kind: MariaDB
        k8s_resource: mariadbs
        app: my-mariadb-alerts
        app_namespace: default
      annotations:
        summary: KubeDB schema terminating for too long for (mariadbdatabase {{ $labels.mariadbdatabase }})
        description: "KubeDB schema terminating for too long.\n {{ $labels.mariadbdatabase }} \n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"
    - alert: KubeDBMariaDBSchemaFailed
      expr: schema_kubedb_com_mariadbdatabase_status_phase{phase="Failed",app="my-mariadb-alerts",app_namespace="default"} == 1
      for: 0m
      labels:
        severity: warning
        k8s_group: kubedb.com
        k8s_kind: MariaDB
        k8s_resource: mariadbs
        app: my-mariadb-alerts
        app_namespace: default
      annotations:
        summary: KubeDB schema failed for (mariadbdatabase {{ $labels.mariadbdatabase }})
        description: "KubeDB schema failed.\n {{ $labels.mariadbdatabase }} \n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"
    - alert: KubeDBMariaDBSchemaExpired
      expr: schema_kubedb_com_mariadbdatabase_status_phase{phase="Expired",app="my-mariadb-alerts",app_namespace="default"} == 1
      for: 0m
      labels:
        severity: warning
        k8s_group: kubedb.com
        k8s_kind: MariaDB
        k8s_resource: mariadbs
        app: my-mariadb-alerts
        app_namespace: default
      annotations:
        summary: KubeDB schema expired for (mariadbdatabase {{ $labels.mariadbdatabase }})
        description: "KubeDB schema expired.\n {{ $labels.mariadbdatabase }} \n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"
