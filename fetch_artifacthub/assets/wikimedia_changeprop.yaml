---
# Source: changeprop/templates/networkpolicy.yaml
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: changeprop-my-changeprop
  labels:
    app: changeprop
    chart: changeprop-0.15.8
    release: my-changeprop
    heritage: Helm
spec:
  podSelector:
    matchLabels:
      app: changeprop
      release: my-changeprop
  policyTypes:
    - Ingress
  ingress:
    - ports:
      - port: 7272
        protocol: TCP
---
# Source: changeprop/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: changeprop-my-changeprop-secret-config
  labels:
    app: changeprop
    chart: changeprop-0.15.8
    release: my-changeprop
    heritage: Helm
type: Opaque
---
# Source: changeprop/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: changeprop-my-changeprop-base-config
  labels:
    app: changeprop
    chart: changeprop-0.15.8
    release: my-changeprop
    heritage: Helm
data:
  config.yaml: |-     # service-runner Changeprop app config.yaml.
    spec: &spec
      x-sub-request-filters:
        - type: default
          name: http
          options:
            allow:
              - pattern: /^https?:\/\//
                forward_headers:
                  user-agent: true
      title: The Change Propagation root
      paths:
        /{api:sys}/links:
          x-modules:
            - path: sys/dep_updates.js
              options:
                templates:
                  mw_api:
                    uri: http://localhost/w/api.php
                    headers:
                      host: '{{message.meta.domain}}'
                    body:
                      formatversion: 2
        /{api:sys}/queue:
          x-modules:
            - path: sys/kafka.js
              options:
                metadata_broker_list:
                  - localhost
                dc_name: datacenter1
                consumer:
                  fetch.message.max.bytes: 4194304
                  log.connection.close: false
                  security.protocol: ssl
                  ssl.ca.location: /etc/ssl/certs/wmf-ca-certificates.crt
                producer:
                  compression.codec: snappy
                  log.connection.close: false
                  security.protocol: ssl
                  ssl.ca.location: /etc/ssl/certs/wmf-ca-certificates.crt
                concurrency: 50
                startup_delay: 60000
                blacklist:
                  # Wikipedia
                  en.wikipedia.org:
                    - 'User:B-bot/Event_log'
                    - 'User:DeltaQuad/UAA/Wait'
                    - 'User:JamesR/AdminStats'
                    - 'User:Kudpung/Dashboard'
                    # Various dashboards
                    - 'User:Breawycker/Wikipedia'
                    - 'User:Sonia/dashboard'
                    - 'User:Ocaasi/dashboard'
                    - 'User:Nolelover'
                    - 'User:Calmer_Waters'
                    - '/User%3ARedwolf24\//'
                    - 'User:Technical_13/dashboard'
                    - 'Template:Cratstats'
                    # Cyberbot is creating 90% of null edits
                    - '/User:Cyberbot_I\//'
                    - '/User:Cyberbot_II\//'
                    - '/User:Cyberpower678\//'
                    - '/User:Darts170Darts170\//'
                    - 'صارف:Cyberbot_I/Run/Adminstats'
                    - 'Defnyddiwr:Cyberbot_I/Run/Adminstats'
                    - 'User:Pentjuuu!.!/sandbox'
                    - 'User:AllyD/CSDlog'
                    - 'User:Peter_I._Vardy/sandbox-13'
                    - 'User:I_dream_of_horses/CSD_log'
                    - 'User:MJ180MJ180/sandbox'
                  test.wikipedia.org:
                    - 'T274359'
                  commons.wikimedia.org:
                    # T353876
                    - '/File:Brezina_-_Brunelli/'
                    - '/File:Claus_-_Conkle/'
                templates:
    
                  summary_definition_rerender: &summary_definition_rerender_spec
                    topic: 'resource_change'
                    limiters:
                      blacklist: 'summary:{message.meta.uri}'
                    cases:
                      - match:
                          meta:
                            uri: '/^https?:\/\/[^\/]+\/api\/rest_v1\/page\/html\/([^\/]+)$/'
                          tags:
                            - restbase
                        match_not:
                          - meta:
                              domain: '/wiktionary\.org$/'
                          - meta:
                              domain: /\.wikidata\.org$/
                        exec:
                          method: get
                          # Don't encode title since it should be already encoded
                          uri: 'http://localhost:7231/{{message.meta.domain}}/v1/page/summary/{{match.meta.uri[1]}}'
                          query:
                            redirect: false
                          headers:
                            cache-control: no-cache
                      - match:
                          meta:
                            # These URIs are coming from RESTBase, so we know that article titles will be normalized
                            # and main namespace articles will not have : (uri-encoded, so %3a or %3A)
                            uri: '/^https?:\/\/[^\/]+\/api\/rest_v1\/page\/html\/((?:(?!%3a|%3A|\/).)+)$/'
                            domain: '/^en\.wiktionary\.org$/'
                          tags:
                            - restbase
                        exec:
                          method: post
                          uri: '/sys/queue/events'
                          body:
                            - $schema: '/resource_change/1.0.0'
                              meta:
                                # Don't encode title since it should be already encoded
                                uri: 'http://{{message.meta.domain}}/api/rest_v1/page/definition/{{match.meta.uri[1]}}'
                                stream: 'resource-purge'
                                domain: '{{message.meta.domain}}'
                                dt: '{{message.meta.dt}}'
                              root_event: '{{message.root_event}}'
    
                  summary_definition_rerender_transcludes: &summary_definition_rerender_transcludes_spec
                    <<: *summary_definition_rerender_spec
                    topic: 'change-prop.transcludes.resource-change'
    
    
                  media-list_rerender: &media-list_rerender_spec
                    topic: 'resource_change'
                    match:
                      meta:
                        uri: '/^https?:\/\/[^\/]+\/api\/rest_v1\/page\/html\/([^/]+)$/'
                        domain: '/\.(wikipedia|wikivoyage|wiktionary)\.org$/'
                      tags:
                        - restbase
                    exec:
                      method: get
                      # Don't encode title since it should be already encoded
                      uri: 'http://localhost:7231/{{message.meta.domain}}/v1/page/media-list/{{match.meta.uri[1]}}'
                      query:
                        redirect: false
                      headers:
                        cache-control: no-cache
                    limiters:
                      blacklist: 'media-list:{message.meta.uri}'
    
                  media-list_rerender_transcludes: &media-list_rerender_transcludes_spec
                    <<: *media-list_rerender_spec
                    topic: 'change-prop.transcludes.resource-change'
    
                  mobile-html_rerender: &mobile-html_rerender_spec
                    topic: 'resource_change'
                    match:
                      meta:
                        uri: '/^https?:\/\/[^\/]+\/api\/rest_v1\/page\/html\/([^/]+)$/'
                        domain: '/\.(wikipedia|wikivoyage|wiktionary)\.org$/'
                      tags:
                        - restbase
                    exec:
                      method: get
                      # Don't encode title since it should be already encoded
                      uri: 'http://localhost:7231/{{message.meta.domain}}/v1/page/mobile-html/{{match.meta.uri[1]}}'
                      query:
                        redirect: false
                      headers:
                        cache-control: no-cache
                    limiters:
                      blacklist: 'mobile-html:{message.meta.uri}'
    
                  mobile-html_rerender_transcludes: &mobile-html_rerender_transcludes_spec
                    <<: *mobile-html_rerender_spec
                    topic: 'change-prop.transcludes.resource-change'
    
                  generate_purge_varnish: &purge_varnish_spec
                    enable_blacklist: false
                    topic: 'resource_change'
                    match:
                      meta:
                        uri: '/^https?:\/\/[^\/]+\/api\/rest_v1\/(?<title>.+)$/'
                      tags:
                        - restbase
                    match_not:
                      meta:
                        domain: /\.wikidata\.org$/
                    exec:
                      method: 'post'
                      uri: '/sys/queue/events'
                      body:
                        - $schema: '/resource_change/1.0.0'
                          meta:
                            uri: '{{message.meta.uri}}'
                            stream: 'resource-purge'
                            domain: '{{message.meta.domain}}'
                            dt: '{{message.meta.dt}}'
                          root_event: '{{message.root_event}}'
    
                  generate_purge_varnish_transcludes: &purge_varnish_transcludes_spec
                    <<: *purge_varnish_spec
                    topic: 'change-prop.transcludes.resource-change'
    # RESTBase update jobs
    
                  mw_purge:
                    topic: resource_change
                    limiters:
                      blacklist: 'html:{message.meta.uri}'
                    cases:
                      - match:
                          meta:
                            uri: '/^https?:\/\/[^\/]+\/wiki\/(?<title>.+)$/'
                            domain: '/\.wikipedia\.org$/'
                          tags:
                            - purge
                        exec: &mw_purge_wikipedia_rerender
                          - method: get
                            # This even comes directly from MediaWiki, so title is encoded in MW-specific way.
                            # Re-encode the title in standard `encodeURIComponent` encoding.
                            uri: 'http://localhost:7231/{{message.meta.domain}}/v1/page/html/{decode(match.meta.uri.title)}'
                            headers:
                              cache-control: no-cache
                              if-unmodified-since: '{{date(message.meta.dt)}}'
                            query:
                              redirect: false
                            # The HTML might not change but sometimes editors use a purge to drop incorrectly rendered summary/MCS
                            # content, so let's purge them as well just in case. The rate is low.
                          - method: get
                            uri: 'http://localhost:7231/{{message.meta.domain}}/v1/page/summary/{decode(match.meta.uri.title)}'
                            headers:
                              cache-control: no-cache
                              if-unmodified-since: '{{date(message.meta.dt)}}'
                            query:
                              redirect: false
                      - match:
                          meta:
                            uri: '/^https?:\/\/[^\/]+\/wiki\/(?<title>.+)$/'
                            domain: '/wiktionary.org$/'
                          tags:
                            - purge
                        exec: &mw_purge_wiktionary_rerender
                          - method: get
                            # This even comes directly from MediaWiki, so title is encoded in MW-specific way.
                            # Re-encode the title in standard `encodeURIComponent` encoding.
                            uri: 'http://localhost:7231/{{message.meta.domain}}/v1/page/html/{decode(match.meta.uri.title)}'
                            headers:
                              cache-control: no-cache
                              if-unmodified-since: '{{date(message.meta.dt)}}'
                            query:
                              redirect: false
                      - match:
                          meta:
                            uri: '/^https?:\/\/[^\/]+\/wiki\/(?<title>.+)$/'
                          tags:
                            - purge
                        match_not: &others_match_not
                          - meta:
                              domain: '/\.wikipedia\.org$/'
                          - meta:
                              domain: '/\.wiktionary\.org$/'
                          - meta:
                              domain: /\.wikidata\.org$/
                            page_namespace: 0
                          - meta:
                              domain: /\.wikidata\.org$/
                            page_namespace: 120
                        exec: &mw_purge_others_rerender
                          - method: get
                            # This even comes directly from MediaWiki, so title is encoded in MW-specific way.
                            # Re-encode the title in standard `encodeURIComponent` encoding.
                            uri: 'http://localhost:7231/{{message.meta.domain}}/v1/page/html/{decode(match.meta.uri.title)}'
                            headers:
                              cache-control: no-cache
                              if-unmodified-since: '{{date(message.meta.dt)}}'
                            query:
                              redirect: false
                            # The HTML might not change but sometimes editors use a purge to drop incorrectly rendered summary/MCS
                            # content, so let's purge them as well just in case. The rate is low.
                          - method: get
                            uri: 'http://localhost:7231/{{message.meta.domain}}/v1/page/summary/{decode(match.meta.uri.title)}'
                            headers:
                              cache-control: no-cache
                              if-unmodified-since: '{{date(message.meta.dt)}}'
                            query:
                              redirect: false
                  null_edit:
                    topic: resource_change
                    ignore:
                      status:
                        - 403 # Ignoring 403 since some of the pages with high number of null_edit events are blacklisted
                        - 412
                    limiters:
                      blacklist: 'html:{message.meta.uri}'
                    cases:
                      - match:
                          meta:
                            uri: '/^https?:\/\/[^\/]+\/wiki\/(?<title>.+)$/'
                            domain: '/\.wikipedia\.org$/'
                          tags:
                            - null_edit
                        exec: *mw_purge_wikipedia_rerender
                      - match:
                          meta:
                            uri: '/^https?:\/\/[^\/]+\/wiki\/(?<title>.+)$/'
                            domain: '/wiktionary.org$/'
                          tags:
                            - null_edit
                        exec: *mw_purge_wiktionary_rerender
                      - match:
                          meta:
                            uri: '/^https?:\/\/[^\/]+\/wiki\/(?<title>.+)$/'
                          tags:
                            - null_edit
                        match_not: &others_match_not
                           - meta:
                               domain: '/\.wikipedia\.org$/'
                           - meta:
                               domain: '/\.wiktionary\.org$/'
                           - meta:
                               domain: /\.wikidata\.org$/
                             page_namespace: 0
                           - meta:
                               domain: /\.wikidata\.org$/
                             page_namespace: 120
                        exec: *mw_purge_others_rerender
                  on_wikidata_description_change:
                    topic: change-prop.wikidata.resource-change
                    cases:
                      - match:
                          meta:
                            uri: '/https?:\/\/[^\/]+\/wiki\/(?<title>.+)/'
                            domain: '/\.wikipedia\.org$/'
                          tags: [ 'wikidata' ]
                        exec:
                          - method: get
                            uri: 'http://localhost:7231/{{message.meta.domain}}/v1/page/summary/{{match.meta.uri.title}}'
                            headers:
                              cache-control: no-cache
                              if-unmodified-since: '{{date(message.meta.dt)}}'
                            query:
                              redirect: false
                          - method: get
                            uri: 'http://localhost:7231/{{message.meta.domain}}/v1/page/mobile-html/{{match.meta.uri.title}}'
                            headers:
                              cache-control: no-cache
                            query:
                              redirect: false
                      - match:
                          meta:
                            uri: '/https?:\/\/[^\/]+\/wiki\/(?<title>.+)/'
                          tags: [ 'wikidata' ]
                        match_not: *others_match_not
                        exec:
                          - method: get
                            uri: 'http://localhost:7231/{{message.meta.domain}}/v1/page/summary/{{match.meta.uri.title}}'
                            headers:
                              cache-control: no-cache
                              if-unmodified-since: '{{date(message.meta.dt)}}'
                            query:
                              redirect: false
    
                  page_edit:
                    topic: mediawiki.revision-create
                    limiters:
                      blacklist: 'html:{message.meta.uri}'
                    retry_on:
                      status:
                        - '5xx'
                        - 404 # Sometimes occasional 404s happen because of the mysql replication lag, so retry
                    match:
                      rev_content_changed: true
                    match_not:
                      - meta:
                          domain: /\.wikidata\.org$/
                        page_namespace: 0
                      - meta:
                          domain: /\.wikidata\.org$/
                        page_namespace: 120
                        # Block Scribunto Module dependencies as they create a lot of load
                        # with supposingly very low actual effect
                      - meta:
                          domain: '/wiktionary\.org$/'
                        page_namespace: 828
                    exec:
                      - method: get
                        uri: 'http://localhost:7231/{{message.meta.domain}}/v1/page/html/{message.page_title}/{{message.rev_id}}'
                        headers:
                          cache-control: no-cache
                          x-restbase-parentrevision: '{{message.rev_parent_id}}'
                          if-unmodified-since: '{{date(message.meta.dt)}}'
                        query:
                          redirect: false
                      - method: post
                        uri: '/sys/links/transcludes/{message.page_title}'
                        body: '{{globals.message}}'
    
                  revision_visibility_change:
                    enable_blacklist: false
                    topic: mediawiki.revision-visibility-change
                    ignore:
                      status:
                        - 403 # When the revision is hidden 403 will be returned by RESTBase, it's a valid situation
                        - 412
                    match_not:
                      - meta:
                          domain: /\.wikidata\.org$/
                        page_namespace: 0
                      - meta:
                          domain: /\.wikidata\.org$/
                        page_namespace: 120
                    exec:
                      - method: get
                        uri: 'http://localhost:7231/{{message.meta.domain}}/v1/page/title/{message.page_title}/{{message.rev_id}}'
                        headers:
                          cache-control: no-cache
                        query:
                          redirect: false
                      # For page revision restriction RESTBase doesn't emit resource_change events, and to go through
                      # the normal purge chain (html update -> html resource_change -> summary update -> summary resource_change)
                      # we need to add many workarounds/shortcurst in RESTBase. So having this list here is an OK compromise.
                      # Only purge the URIs with a rev_id since the latest revision can not be restricted.
                      - method: 'post'
                        uri: '/sys/queue/events'
                        body:
                          - $schema: '/resource_change/1.0.0'
                            meta:
                              uri: 'http://{{message.meta.domain}}/api/rest_v1/page/html/{message.page_title}/{{message.rev_id}}'
                              stream: 'resource-purge'
                              domain: '{{message.meta.domain}}'
                              dt: '{{message.meta.dt}}'
    
                          - $schema: '/resource_change/1.0.0'
                            meta:
                              uri: 'http://{{message.meta.domain}}/api/rest_v1/page/media-list/{message.page_title}/{{message.rev_id}}'
                              stream: 'resource-purge'
                              domain: '{{message.meta.domain}}'
                              dt: '{{message.meta.dt}}'
    
                          - $schema: '/resource_change/1.0.0'
                            meta:
                              uri: 'http://{{message.meta.domain}}/api/rest_v1/page/mobile-html/{message.page_title}/{{message.rev_id}}'
                              stream: 'resource-purge'
                              domain: '{{message.meta.domain}}'
                              dt: '{{message.meta.dt}}'
    
    
                  page_delete:
                    disable_blacklist: true
                    topics:
                      - mediawiki.page-delete
                      - mediawiki.page-suppress
                    ignore:
                      status:
                        - 404 # 404 is a normal response for page deletion
                        - 412
                    match_not:
                      - meta:
                          domain: /\.wikidata\.org$/
                        page_namespace: 0
                      - meta:
                          domain: /\.wikidata\.org$/
                        page_namespace: 120
                    exec:
                      - method: get
                        uri: 'http://localhost:7231/{{message.meta.domain}}/v1/page/title/{message.page_title}'
                        headers:
                          cache-control: no-cache
                        query:
                          redirect: false
                      # The links to the deleted page should become red again
                      - method: post
                        uri: '/sys/links/backlinks/{message.page_title}'
                        body: '{{globals.message}}'
                      # For page deletion RESTBase doesn't emit resource_change events, and to go through
                      # the normal purge chain (html update -> html resource_change -> summary update -> summary resource_change)
                      # we need to add many workarounds/shortcurst in RESTBase. So having this list here is an OK compromise.
                      - method: post
                        uri: '/sys/queue/events'
                        body:
                          - $schema: '/resource_change/1.0.0'
                            meta:
                              uri: 'http://{{message.meta.domain}}/api/rest_v1/page/html/{message.page_title}'
                              stream: 'resource-purge'
                              domain: '{{message.meta.domain}}'
                              dt: '{{message.meta.dt}}'
                          - $schema: '/resource_change/1.0.0'
                            meta:
                              uri: 'http://{{message.meta.domain}}/api/rest_v1/page/html/{message.page_title}/{{message.rev_id}}'
                              stream: 'resource-purge'
                              domain: '{{message.meta.domain}}'
                              dt: '{{message.meta.dt}}'
                          - $schema: '/resource_change/1.0.0'
                            meta:
                              uri: 'http://{{message.meta.domain}}/api/rest_v1/page/summary/{message.page_title}'
                              stream: 'resource-purge'
                              domain: '{{message.meta.domain}}'
                              dt: '{{message.meta.dt}}'
                          - $schema: '/resource_change/1.0.0'
                            meta:
                              uri: 'http://{{message.meta.domain}}/api/rest_v1/page/definition/{message.page_title}'
                              stream: 'resource-purge'
                              domain: '{{message.meta.domain}}'
                              dt: '{{message.meta.dt}}'
    
                          - $schema: '/resource_change/1.0.0'
                            meta:
                              uri: 'http://{{message.meta.domain}}/api/rest_v1/page/media-list/{message.page_title}'
                              stream: 'resource-purge'
                              domain: '{{message.meta.domain}}'
                              dt: '{{message.meta.dt}}'
                          - $schema: '/resource_change/1.0.0'
                            meta:
                              uri: 'http://{{message.meta.domain}}/api/rest_v1/page/media-list/{message.page_title}/{{message.rev_id}}'
                              stream: 'resource-purge'
                              domain: '{{message.meta.domain}}'
                              dt: '{{message.meta.dt}}'
    
                          - $schema: '/resource_change/1.0.0'
                            meta:
                              uri: 'http://{{message.meta.domain}}/api/rest_v1/page/mobile-html/{message.page_title}'
                              stream: 'resource-purge'
                              domain: '{{message.meta.domain}}'
                              dt: '{{message.meta.dt}}'
                          - $schema: '/resource_change/1.0.0'
                            meta:
                              uri: 'http://{{message.meta.domain}}/api/rest_v1/page/mobile-html/{message.page_title}/{{message.rev_id}}'
                              stream: 'resource-purge'
                              domain: '{{message.meta.domain}}'
                              dt: '{{message.meta.dt}}'
    
    
                  page_restore:
                    disable_blacklist: true
                    topic: mediawiki.page-undelete
                    match_not:
                      - meta:
                          domain: /\.wikidata\.org$/
                        page_namespace: 0
                      - meta:
                          domain: /\.wikidata\.org$/
                        page_namespace: 120
                    exec:
                      - method: get
                        uri: 'http://localhost:7231/{{message.meta.domain}}/v1/page/title/{message.page_title}'
                        headers:
                          cache-control: no-cache
                        query:
                          redirect: false
                      # The links to the restored page should not be red any more
                      - method: post
                        uri: '/sys/links/backlinks/{message.page_title}'
                        body: '{{globals.message}}'
    
                  page_move:
                    disable_blacklist: true
                    topic: mediawiki.page-move
                    match_not:
                      - meta:
                          domain: /\.wikidata\.org$/
                        page_namespace: 0
                      - meta:
                          domain: /\.wikidata\.org$/
                        page_namespace: 120
                    exec:
                      - method: get
                        uri: 'http://localhost:7231/{{message.meta.domain}}/v1/page/html/{message.page_title}/{{message.rev_id}}'
                        headers:
                          cache-control: no-cache
                          if-unmodified-since: '{{date(message.meta.dt)}}'
                        query:
                          redirect: false
                      - method: get
                        uri: 'http://localhost:7231/{{message.meta.domain}}/v1/page/title/{message.prior_state.page_title}'
                        headers:
                          cache-control: no-cache
                        query:
                          redirect: false
    
                  on_transclusion_update:
                    concurrency: 100
                    topic: change-prop.transcludes.resource-change
                    limiters:
                      blacklist: 'html:{message.meta.uri}'
                    cases:
                      - match:
                          $schema: '/^\/resource_change\/.*/'
                          meta:
                            uri: '/https?:\/\/[^\/]+\/wiki\/(?<title>.+)/'
                          tags: [ 'transcludes' ]
                        exec:
                          method: get
                          uri: 'http://localhost:7231/{{message.meta.domain}}/v1/page/html/{{match.meta.uri.title}}'
                          headers:
                            cache-control: no-cache
                            if-unmodified-since: '{{date(message.root_event.dt)}}'
                            x-restbase-mode: '{{message.tags[1]}}'
                          query:
                            redirect: false
                        match_not:
                          meta:
                            domain: ceb.wikipedia.org
                      - match:
                          $schema: '/^\/change-prop\/continue\/.*/'
                        match_not:
                          - meta:
                              domain: ceb.wikipedia.org
                          - original_event:
                              # Block Scribunto Module dependencies as they create a lot of load
                              # with supposingly very low actual effect
                              meta:
                                domain: '/wiktionary\.org$/'
                              page_namespace: 828
                        exec:
                          method: post
                          uri: '/sys/links/transcludes/{message.original_event.page_title}'
                          body: '{{globals.message}}'
    
                  page_create:
                    topic: mediawiki.page-create
                    retry_on:
                      status:
                        - '5xx'
                        - 404 # Sometimes occasional 404s happen because of the mysql replication lag, so retry
                    match_not:
                      - meta:
                          domain: /\.wikidata\.org$/
                        page_namespace: 0
                      - meta:
                          domain: /\.wikidata\.org$/
                        page_namespace: 120
                    exec:
                      - method: post
                        uri: '/sys/links/backlinks/{message.page_title}'
                        body: '{{globals.message}}'
    
                  on_backlinks_update:
                    topic: change-prop.backlinks.resource-change
                    limiters:
                      blacklist: 'html:{message.meta.uri}'
                    cases:
                      - match:
                          $schema: '/^\/resource_change\/.*/'
                          meta:
                            uri: '/https?:\/\/[^\/]+\/wiki\/(?<title>.+)/'
                          tags: [ 'backlinks' ]
                        exec:
                          method: get
                          uri: 'http://localhost:7231/{{message.meta.domain}}/v1/page/html/{{match.meta.uri.title}}'
                          headers:
                            cache-control: no-cache
                            if-unmodified-since: '{{date(message.root_event.dt)}}'
                            x-restbase-mode: '{{message.tags[1]}}'
                          query:
                            redirect: false
                      - match:
                          $schema: '/^\/change-prop\/continue\/.*/'
                        exec:
                          method: post
                          uri: '/sys/links/backlinks/{message.original_event.page_title}'
                          body: '{{globals.message}}'
    
                  wikidata_description_on_edit:
                    topic: mediawiki.revision-create
                    cases:
                      - match:
                          meta:
                            domain: www.wikidata.org
                          page_namespace: 0
                          # It's impossible to modify a comment in wikidata while editing the entity.
                          comment: '/wbeditentity|wbsetdescription|undo|restore/'
                          rev_content_changed: true
                        exec:
                          method: post
                          uri: '/sys/links/wikidata_descriptions'
                          body: '{{globals.message}}'
                      - match:
                          meta:
                            domain: www.wikidata.org
                          page_namespace: 0
                          rev_is_revert: true
                        exec:
                          method: post
                          uri: '/sys/links/wikidata_descriptions'
                          body: '{{globals.message}}'
    
                  wikidata_description_on_undelete:
                    topic: mediawiki.page-undelete
                    match:
                      meta:
                        domain: www.wikidata.org
                      page_namespace: 0
                    exec:
                      method: post
                      uri: '/sys/links/wikidata_descriptions'
                      body: '{{globals.message}}'
    
                  # Rerender summary when pageimages page property change
                  page_images_summary:
                    topic: mediawiki.page-properties-change
                    # We don't support 'OR' in the match section, so workaround it by 2 cases with identical exec
                    cases:
                      - match:
                          added_properties:
                            page_image: '/.+/' # Regex that matches anything just to check the prop is set
                        match_not:
                          - meta:
                              domain: /\.wikidata\.org$/
                            page_namespace: 0
                          - meta:
                              domain: /\.wikidata\.org$/
                            page_namespace: 120
                        exec:
                          method: get
                          uri: 'http://localhost:7231/{{message.meta.domain}}/v1/page/summary/{message.page_title}'
                          headers:
                            cache-control: no-cache
                            if-unmodified-since: '{{date(message.meta.dt)}}'
                          query:
                            redirect: false
                      - match:
                          removed_properties:
                            page_image: '/.+/' # Regex that matches anything just to check the prop is set
                        match_not:
                          - meta:
                              domain: /\.wikidata\.org$/
                            page_namespace: 0
                          - meta:
                              domain: /\.wikidata\.org$/
                            page_namespace: 120
                        exec:
                          method: get
                          uri: 'http://localhost:7231/{{message.meta.domain}}/v1/page/summary/{message.page_title}'
                          headers:
                            cache-control: no-cache
                            if-unmodified-since: '{{date(message.meta.dt)}}'
                          query:
                            redirect: false
    # Number of worker processes to spawn.
    # Set to 0 to run everything in a single process without clustering.
    # Use 'ncpu' to run as many workers as there are CPU units
    num_workers: 0
    
    # Number of workers to start in parallel after the first worker.
    # The first worker is always started independently. After it has completed
    # its start-up, this number controls the number of workers to start in
    # parallel until `num_workers` have been started. Note that setting this
    # number to a too high a value might lead to high resource consumption
    # (especially of CPU) during the start-up process.
    startup_concurrency: 4
    
    # Log error messages and gracefully restart a worker if v8 reports that it
    # uses more heap (note: not RSS) than this many mb.
    worker_heap_limit_mb: 750
    
    worker_heartbeat_timeout: false
    
    # Logger info
    logging:
      level:  debug
      sampled_levels:
        error/commit_check: 1
      streams:
        - type: stdout
          named_levels: true
    
    # Statsd metrics reporter
    
    metrics:
      name: changeprop
      host: localhost
      port: 9125
      type: statsd
    
    services:
      - name: changeprop
        # a relative path or the name of an npm package, if different from name
        module: hyperswitch
        # per-service config
        conf:
          cors: "*"
          port: 7272
          # interface: localhost # uncomment to only listen on localhost
          # URL of the outbound proxy to use (complete with protocol)
          proxy: 
          # the list of domains for which not to use the proxy defined above
          # no_proxy_list:
          #   - domain1.com
          #   - domain2.org
          # the list of incoming request headers that can be logged; if left empty,
          # the following headers are allowed: cache-control, content-length,
          # content-type, if-match, user-agent, x-request-id
          # log_header_whitelist:
          #   - cache-control
          #   - content-length
          #   - content-type
          #   - if-match
          #   - user-agent
          #   - x-request-id
          user_agent: ChangePropagation/WMF
          spec: *spec
---
# Source: changeprop/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: changeprop-my-changeprop
  labels:
    app: changeprop
    chart: changeprop-0.15.8
    release: my-changeprop
    heritage: Helm
spec:
  type: NodePort
  selector:
    app: changeprop
    release: my-changeprop
    routed_via: my-changeprop
  ports:
    - name: changeprop
      targetPort: 7272
      port: 7272
---
# Source: changeprop/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: changeprop-my-changeprop
  labels:
    app: changeprop
    chart: changeprop-0.15.8
    release: my-changeprop
    heritage: Helm
spec:
  selector:
    matchLabels:
      app: changeprop
      release: my-changeprop
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  replicas: 1
  template:
    metadata:
      labels:
        app: changeprop
        release: my-changeprop
        routed_via: my-changeprop
      annotations:
        checksum/config: 5a0229e20960dbfd02d0ec877d39252f553f52923cc57fc942e76d05e014c234
        checksum/secrets: 9e2d31b8231047bd6b30261fd695086dcb658cbbbcb67c4289328db3be13a7f6
        prometheus.io/port: "9102"
        prometheus.io/scrape: "true"
        
    spec:
      containers:
        # The main application container
        - name: changeprop-my-changeprop
          image: "docker-registry.wikimedia.org/wikimedia/mediawiki-services-change-propagation:latest"
          imagePullPolicy: IfNotPresent
          command:
            - node
          args:
            - server.js
            - -c
            - /etc/changeprop/config.yaml
          ports:
            - containerPort: 7272
          livenessProbe:
            initialDelaySeconds: 60
            tcpSocket:
              port: 7272
          env:
            - name: SERVICE_IDENTIFIER
              value: changeprop-my-changeprop
            - name: NODE_EXTRA_CA_CERTS
              value: /etc/ssl/certs/wmf-ca-certificates.crt
          resources:
            requests:
              cpu: 500m
              memory: 300Mi
            limits:
              cpu: 1
              memory: 600Mi
          volumeMounts:
            - name: my-changeprop-base-config
              mountPath: /etc/changeprop          
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
               drop:
               - ALL
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
        
      volumes:
        - name: my-changeprop-base-config
          configMap:
            name: changeprop-my-changeprop-base-config
---
# Source: changeprop/templates/tests/test-service-checker.yaml
apiVersion: v1
kind: Pod
metadata:
  name: 'changeprop-my-changeprop-service-checker'
  annotations:
    "helm.sh/hook": test
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  containers:
  - name: 'changeprop-my-changeprop-service-checker'
    image: "docker-registry.wikimedia.org/service-checker"
    imagePullPolicy: IfNotPresent
    args: ["-t", "5", '$(CHANGEPROP_MY_CHANGEPROP_SERVICE_HOST)', 'http://changeprop-my-changeprop:7272']    
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
         drop:
         - ALL
      runAsNonRoot: true
      seccompProfile:
        type: RuntimeDefault
  dnsPolicy: ClusterFirst
  restartPolicy: Never
