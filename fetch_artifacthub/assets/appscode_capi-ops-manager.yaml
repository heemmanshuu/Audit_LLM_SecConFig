---
# Source: capi-ops-manager/templates/rbac/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-capi-ops-manager
  namespace: default
  labels:
    helm.sh/chart: capi-ops-manager-v2024.8.14
    app.kubernetes.io/name: capi-ops-manager
    app.kubernetes.io/instance: my-capi-ops-manager
    app.kubernetes.io/version: "v0.0.2"
    app.kubernetes.io/managed-by: Helm
---
# Source: capi-ops-manager/templates/webhook/cert.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-capi-ops-manager-webhook-cert
  namespace: default
  labels:
    helm.sh/chart: capi-ops-manager-v2024.8.14
    app.kubernetes.io/name: capi-ops-manager
    app.kubernetes.io/instance: my-capi-ops-manager
    app.kubernetes.io/version: "v0.0.2"
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lRZmVqK29OQUdxMk1mdi9HNUszc0thakFOQmdrcWhraUc5dzBCQVFzRkFEQU4KTVFzd0NRWURWUVFERXdKallUQWVGdzB5TkRBNU1UWXdPRFF4TkRsYUZ3MHpOREE1TVRRd09EUXhORGxhTUEweApDekFKQmdOVkJBTVRBbU5oTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUE0QVdBCmNyUStoVE85R3BKWFh2cHpuZjA4NFh3bm01VUNRTTB5RmxqdExCdjdmUHc0RTVDQXFZQzlRN2JHUWczZ1dpUTAKK2Z4M2p4VVJSOUlzWnZhQzE2QzIrVEZHSnY1dzRtRndhck5yNklkUzJUdVM1czBON05jY0JGSFQ4N2VaREQrMgphWnp5UWNrNkVqalRCSkdaRkgvNW9JYVozSk1GUTEwdk5VdTdNeGdLWS9HaUZCd2ZwSUk5YWhFcEh1U3lXVWYxCmpGaWJiVmRLZ2pOc29RR0F4Q2pkRW9NVmJLNE43cm5CY2E2TXpUK2QyK1NlMGhTZGVLWW9pdk5kVzlyOVQ5VFoKZ0dDYy9ZUFIzd2pMTzk0Y2NCenFqK05Hdy9OTk1xTU5IWWZQSVpJaUIwUy9IbkM5R2FSNXFPS0hHRlVzcDBCQQp6eGtqOFlFUXdtd09ieUVmRHdJREFRQUJvMkV3WHpBT0JnTlZIUThCQWY4RUJBTUNBcVF3SFFZRFZSMGxCQll3CkZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUUKRk8zNi9TR0JML08wWmNOT3NxNzk1d1Z0Sm9jbU1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQUc5QXpGT01hcgpOQzZGemNOMDNFQjJ0ZmF0N0RNWDJIK08xb0dyWklEQUJXRkRJa2Y2WEphamZzcTdPM1NQcXorSjVjVkluZTBhCk9YSXQrSGl5ODdNbFM1SkoyU3hpbXRMT3hTS05SYXQrRUEzS2xGem94WTlxNVFMbERYekdHajFGZG1xd01BbmgKVDEvajhoRCtCVjBlR1E2QVVLY21sa2VST2VSTk1Mdjc3OEZBZnd5c0traWdPQ1l5YllKemVwSDk3cFFQQ2k5cwpvQ21zaTN3SER0alNkUjkxNEZGYWs1VmpDVmlXQWdOZkx1RWUzL09pM2Zsc0NGSG54UWRMWXFxQzROSWd3bmlVClFyeDQ5eER5ZHBBb3crSENQT20rOTNHZzZ3eGVXYUxpL2xNb2ZVdVUxVWczKzdLMFRoSTB3Z200VHgydFVJcjIKM1JQTU9DcVpjSDNLCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURlVENDQW1HZ0F3SUJBZ0lSQUpuQ1BGcG8vTXlZRnR0R0hha2RKaGd3RFFZSktvWklodmNOQVFFTEJRQXcKRFRFTE1Ba0dBMVVFQXhNQ1kyRXdIaGNOTWpRd09URTJNRGcwTVRRNVdoY05NelF3T1RFME1EZzBNVFE1V2pBbQpNU1F3SWdZRFZRUURFeHR0ZVMxallYQnBMVzl3Y3kxdFlXNWhaMlZ5TFhkbFltaHZiMnN3Z2dFaU1BMEdDU3FHClNJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUNjMkxnM1JHTExUalVPUkIzT1RlaFBYRm91WVV0Sm9DR3YKY1BTdXhud1VvT2paZU80QlZNZFBkam9wZXBta1NjU29CbkhWeElNZ2d2VndheldzNU1jYzMzYkFUU01RVEVBWQpSSkJjUWtmNndyMFVGNUM0NHVIYjFkcVd3c21UMExPN3ZTMWpZVzJ3Nkg3QTNhdThrMnovbWFyTnNlTmNmMTdQCit0VE9zZXZaRnBKNlg5bkJzSFBSSDg4b25VTEtBNVROMkJtWFpYQ3FTenZTaDA3bUhENHdpZWk1aTc5Y21vWGkKVzZnK0JkUHlWVzNsbFhzQ1QxWSs0ZlZzV0tFTU5rVWdPL0wveVNwVUljT0FiMzFTRlE2eWF1YVVRbmFiU3pzZApNL3FCN1k4aFZ1YXRESWJKdTVkaFlIVjFuZU5tMmNYMTI2YUkxWDVjR3YwYXRTc29ianJEQWdNQkFBR2pnYm93CmdiY3dEZ1lEVlIwUEFRSC9CQVFEQWdXZ01CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0QKQWpBTUJnTlZIUk1CQWY4RUFqQUFNQjhHQTFVZEl3UVlNQmFBRk8zNi9TR0JML08wWmNOT3NxNzk1d1Z0Sm9jbQpNRmNHQTFVZEVRUlFNRTZDSTIxNUxXTmhjR2t0YjNCekxXMWhibUZuWlhJdGQyVmlhRzl2YXk1a1pXWmhkV3gwCmdpZHRlUzFqWVhCcExXOXdjeTF0WVc1aFoyVnlMWGRsWW1odmIyc3VaR1ZtWVhWc2RDNXpkbU13RFFZSktvWkkKaHZjTkFRRUxCUUFEZ2dFQkFDclpGSWZRTnM5LzZwZHdkdWxTWWFMYVBMZmRlT1BVV0dhTnVubk1XWjFYaXFwSApBRkdiSU9yQzBBR2JQQ1dER0FhNE14blJ0MDJ4SGZ2dVZWUFk5My9VQ1c0amlqZnBKc1kvQXF5NmREczdoZ1k4CktrSk1LcytjUlAwa1RzUGZCcWMvU0FqRXE4ZzZuWGV6SXd3cXlMQTc5K24rWC9Sbk9FSi9zT05YZzNtS0dLT3YKRWl5bXc1VEd1aWowMk5tQlk5OWd0dzVqalJYMnhGZGE1dG0ycTYzSkZlRHMwRERiU0NGN2FGNWg1WHUyRFhPawpIdUdQTzJJM0grSFlOK05CeTJsV0YvN2QxV2xuS1c5VHA3UStxTzZjb1NOdDBDcnVsN2VPdzM3MHBiMEIwUjlTCk5ERzZuN2E4NTBZS3hjc3hVbmExbXkyc0tadlpsYUxNRWFnRXppdz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBbk5pNE4wUml5MDQxRGtRZHprM29UMXhhTG1GTFNhQWhyM0QwcnNaOEZLRG8yWGp1CkFWVEhUM1k2S1hxWnBFbkVxQVp4MWNTRElJTDFjR3Mxck9USEhOOTJ3RTBqRUV4QUdFU1FYRUpIK3NLOUZCZVEKdU9MaDI5WGFsc0xKazlDenU3MHRZMkZ0c09oK3dOMnJ2Sk5zLzVtcXpiSGpYSDllei9yVXpySHIyUmFTZWwvWgp3YkJ6MFIvUEtKMUN5Z09VemRnWmwyVndxa3M3MG9kTzVodytNSW5vdVl1L1hKcUY0bHVvUGdYVDhsVnQ1WlY3CkFrOVdQdUgxYkZpaEREWkZJRHZ5LzhrcVZDSERnRzk5VWhVT3Ntcm1sRUoybTBzN0hUUDZnZTJQSVZibXJReUcKeWJ1WFlXQjFkWjNqWnRuRjlkdW1pTlYrWEJyOUdyVXJLRzQ2d3dJREFRQUJBb0lCQVFDUjhDaC83QmFNbXFsTgpLOTRiM211Z3BBcVpDeGhWV2pUZG5CbGZJZm5ENi9DY29TTzdnMW1zT3hKbEU5a3ZmeUFIUTIvWittNFQ2eVphClFyYi90eUw1WDRlTDZIb09xUlFlUUhXZUVtSU5GZk4rWldyWVRPcmdkTHhkK01JODBqemFHMnpIQXBsZ3VRTnYKaXhKSGRWaysvb2xwdVBJWFY4QXRmbk5TRzBTYWlTd0wvZ3lSWFRRcUtNV2lueFp3a2l6SEphT1VEbjFJNUlOMgpzZisvbThuZGYxeDEvWG1jNS8xdG5FVG5WMlhVUndJQWNTZzVGUTVOMUtaZFBOYjRHMyt4QVJSNy9lejZLa2xqCmxjTjZ2UGFrMUJ3U051QzlrTU5ET3VrYW9iSmhWRzFnYWk5MGd2N0NTRitTS0VST1NCc0gvY1hpWU1VNUd0c3cKMjZvUmNqekpBb0dCQU03L21DZlpEN3NKQlg2M3RvcWxBRXNOLzgxNVcyWWI4T2pJSis0Qjk3dkVPWFZjUUlNQQp5ZzQ1ZkhDQjJjZ1ltdFd1SFdDSlNJcGZ2TU80MktVUFVJTzNkcTh3eVNMbHlUS3BwdW5Jb3RMK2F0SDh5UlRTCndIc2JxbTU2QU1KTW1ybDRnT0ovOEVkU3lZNHJCcGhmN042TURhbnB4QlBSSDlxOXhiZTJER0xGQW9HQkFNSDUKMlluOGtmQVdOdElWUEVZRHdKeUFsdUgxcHc5RHlrQU5KRFFWOXRYclV4dTJzSjUwb3JPcFdnL3pYa2ZrNEMzNgo3VDMzbmV5dlhLalZRSmw3ZVhUTWk0OGNYY3lsM3F0d2FpNG1LWFBER2liRzIrdm8ybWswYWdXRStQRHdkdnE4ClRhMW5YQ2dmYy9SUTZPL2tGVVd2MmhQNnRRSUFMQ2VzeHRXQjBsL25Bb0dBWG9QT0VjUEdydnY3aWxTUUFOWSsKUUFid1dmMmpnZ2dZQS9JQWFXaDBtVU9MaU03S2xnWnlPL1I3b1ZOcEFUaGEybDVhQTQ0cmxTTUpxY1JwQjFUcQp5bm1tczI5dko0UU1UaG13b09aL2toK2czcWl4bDlSekZzTVhHc0tTUGlXRU1GT1paZEpOQUFRSkMrVVJhZG5DCjZnckE0bWhlb3ozRmNiZGM0L2szeHBFQ2dZRUFpT1MxOUo3TnMzMUo1UXRkaFIvaXo5QWtLNFY5QjlYVXAwMWUKN205Tnl2eVBvM0JUeHhBVFB1M1doSWxCVVVXaVBIRG8reUdFVDJRVzVZUFNXajc4b1VRMWZhTU1RNEFQM0RleQpoNjBnOWZTTHdTLzRSczRIVGRYU3VPQjErendKQzd6V3FQalgzZTBNblRCNG84djRnenl1a0FrUHMwREI2S0lUCmxOeFF4cU1DZ1lFQXRzK3VRMTdHSUVFVUhONm44SHlEeUJOZ2t4K3lPVnRNZ3VlYUNrckRGZXdyNHp4NWJMcWsKTEFJaHVaK3JLNzVCdGMyazl4WjZEd3BNa2o5SlFPTElnZ1FGeWJYSDE4bUNPRXBybzNoVE1iVHhyZUtHM1MrcQpaQlBsTnVMVDB2ZnMyTStGcXhsblhPeUpNVFY1ZmRaUCtHOElvQXlBT2NtYjBHQzBvUUNhV1Q0PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: capi-ops-manager/templates/rbac/auth_proxy.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-capi-ops-manager-auth-proxy
rules:
  - apiGroups:
      - authentication.k8s.io
    resources:
      - tokenreviews
    verbs:
      - create
  - apiGroups:
      - authorization.k8s.io
    resources:
      - subjectaccessreviews
    verbs:
      - create
---
# Source: capi-ops-manager/templates/rbac/auth_proxy.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-capi-ops-manager-auth-proxy
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-capi-ops-manager-auth-proxy
subjects:
  - kind: ServiceAccount
    name: my-capi-ops-manager
    namespace: default
---
# Source: capi-ops-manager/templates/rbac/cluster_role_binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-capi-ops-manager
  labels:
    helm.sh/chart: capi-ops-manager-v2024.8.14
    app.kubernetes.io/name: capi-ops-manager
    app.kubernetes.io/instance: my-capi-ops-manager
    app.kubernetes.io/version: "v0.0.2"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: my-capi-ops-manager
  namespace: default
---
# Source: capi-ops-manager/templates/webhook/monitoring/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-capi-ops-manager
  namespace: default
  labels:
    helm.sh/chart: capi-ops-manager-v2024.8.14
    app.kubernetes.io/name: capi-ops-manager
    app.kubernetes.io/instance: my-capi-ops-manager
    app.kubernetes.io/version: "v0.0.2"
    app.kubernetes.io/managed-by: Helm
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: https
  selector:
    app.kubernetes.io/component: webhook-server
    app.kubernetes.io/name: capi-ops-manager
    app.kubernetes.io/instance: my-capi-ops-manager
---
# Source: capi-ops-manager/templates/webhook/webhook_service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-capi-ops-manager-webhook
  namespace: default
  labels:
    helm.sh/chart: capi-ops-manager-v2024.8.14
    app.kubernetes.io/name: capi-ops-manager
    app.kubernetes.io/instance: my-capi-ops-manager
    app.kubernetes.io/version: "v0.0.2"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    app.kubernetes.io/component: webhook-server
    app.kubernetes.io/name: capi-ops-manager
    app.kubernetes.io/instance: my-capi-ops-manager
  ports:
  - port: 443
    protocol: TCP
    targetPort: 9443
---
# Source: capi-ops-manager/templates/operator/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-capi-ops-manager-operator
  namespace: default
  labels:
    app.kubernetes.io/component: operator
    helm.sh/chart: capi-ops-manager-v2024.8.14
    app.kubernetes.io/name: capi-ops-manager
    app.kubernetes.io/instance: my-capi-ops-manager
    app.kubernetes.io/version: "v0.0.2"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: operator
      app.kubernetes.io/name: capi-ops-manager
      app.kubernetes.io/instance: my-capi-ops-manager
  template:
    metadata:
      labels:
        app.kubernetes.io/component: operator
        app.kubernetes.io/name: capi-ops-manager
        app.kubernetes.io/instance: my-capi-ops-manager
      annotations:
    spec:
      
      serviceAccountName: my-capi-ops-manager
      volumes:
      - name: temp-dir
        emptyDir: {}
      - name: etc-xdg
        emptyDir: {}
      - name: config
        emptyDir: {}
      containers:
      - name: operator
        volumeMounts:
          - mountPath: /tmp
            name: temp-dir
          - mountPath: /etc/xdg
            name: etc-xdg
          - mountPath: /.config
            name: config
        image: "ghcr.io/appscode/capi-ops-manager:v0.0.2"
        imagePullPolicy: IfNotPresent
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65534
          seccompProfile:
            type: RuntimeDefault
        args:
          - operator
        resources:
          requests:
            cpu: 100m
      securityContext:
        fsGroup: 65535
      nodeSelector:
        kubernetes.io/os: linux
---
# Source: capi-ops-manager/templates/webhook/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-capi-ops-manager-webhook-server
  namespace: default
  labels:
    app.kubernetes.io/component: webhook-server
    helm.sh/chart: capi-ops-manager-v2024.8.14
    app.kubernetes.io/name: capi-ops-manager
    app.kubernetes.io/instance: my-capi-ops-manager
    app.kubernetes.io/version: "v0.0.2"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: webhook-server
      app.kubernetes.io/name: capi-ops-manager
      app.kubernetes.io/instance: my-capi-ops-manager
  template:
    metadata:
      labels:
        app.kubernetes.io/component: webhook-server
        app.kubernetes.io/name: capi-ops-manager
        app.kubernetes.io/instance: my-capi-ops-manager
      annotations:
        checksum/apiregistration.yaml: 62b6063de4721d4fa9a1ac6de1015e6e517b40d1161fbffe8ed74bec78dbf5ee
    spec:
      
      serviceAccountName: my-capi-ops-manager
      containers:
      - name: webhook-server
        image: "ghcr.io/appscode/capi-ops-manager:v0.0.2"
        imagePullPolicy: IfNotPresent
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65534
          seccompProfile:
            type: RuntimeDefault
        args:
          - webhook
          - --webhook-name=my-capi-ops-manager
        ports:
        - name: webhook-server
          containerPort: 9443
          protocol: TCP
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        resources:
          requests:
            cpu: 100m
        volumeMounts:
        - name: serving-cert
          mountPath: /var/serving-cert
          readOnly: true
      - name: kube-rbac-proxy
        image: "ghcr.io/appscode/kube-rbac-proxy:v0.11.0"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65534
          seccompProfile:
            type: RuntimeDefault
        args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=10
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        resources:
          requests:
            cpu: 100m
      volumes:
      - name: serving-cert
        secret:
          defaultMode: 420
          secretName: my-capi-ops-manager-webhook-cert
      securityContext:
        fsGroup: 65535
      nodeSelector:
        kubernetes.io/os: linux
---
# Source: capi-ops-manager/templates/webhook/mutating_webhook.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: my-capi-ops-manager
  labels:
    helm.sh/chart: capi-ops-manager-v2024.8.14
    app.kubernetes.io/name: capi-ops-manager
    app.kubernetes.io/instance: my-capi-ops-manager
    app.kubernetes.io/version: "v0.0.2"
    app.kubernetes.io/managed-by: Helm
webhooks:
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: my-capi-ops-manager-webhook
        namespace: default
        path: /mutate-ops-klusters-dev-v1alpha1-clusteropsrequest
      caBundle: bm90LWNhLWNlcnQ=
    failurePolicy: Fail
    name: capi-ops-managers.ops.klusters.dev
    rules:
      - apiGroups:
          - ops.klusters.dev
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - clusteropsrequests
    sideEffects: None
---
# Source: capi-ops-manager/templates/webhook/validating_webhook.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: my-capi-ops-manager
  labels:
    helm.sh/chart: capi-ops-manager-v2024.8.14
    app.kubernetes.io/name: capi-ops-manager
    app.kubernetes.io/instance: my-capi-ops-manager
    app.kubernetes.io/version: "v0.0.2"
    app.kubernetes.io/managed-by: Helm
webhooks:
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: my-capi-ops-manager-webhook
        namespace: default
        path: /validate-ops-klusters-dev-v1alpha1-clusteropsrequest
      caBundle: bm90LWNhLWNlcnQ=
    failurePolicy: Fail
    name: capi-ops-managers.ops.klusters.dev
    rules:
      - apiGroups:
          - ops.klusters.dev
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - clusteropsrequests
    sideEffects: None
---
# Source: capi-ops-manager/templates/rbac/user_roles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: appscode:my-capi-ops-manager:edit
  labels:
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
- apiGroups:
  - catalog.klusters.dev
  - ops.klusters.dev
  resources:
  - "*"
  verbs: ["*"]
---
# Source: capi-ops-manager/templates/rbac/user_roles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: appscode:my-capi-ops-manager:view
  labels:
    rbac.authorization.k8s.io/aggregate-to-view: "true"
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
- apiGroups:
  - catalog.klusters.dev
  - ops.klusters.dev
  resources:
  - "*"
  verbs: ["get", "list", "watch"]
