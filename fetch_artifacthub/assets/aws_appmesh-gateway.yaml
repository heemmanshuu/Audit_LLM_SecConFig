---
# Source: appmesh-gateway/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-appmesh-gateway
  namespace: default
  labels:
    app.kubernetes.io/name: appmesh-gateway
    helm.sh/chart: appmesh-gateway-0.1.5
    app.kubernetes.io/instance: my-appmesh-gateway
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: appmesh-gateway/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-appmesh-gateway
  namespace: default
  labels:
    app.kubernetes.io/name: appmesh-gateway
    helm.sh/chart: appmesh-gateway-0.1.5
    app.kubernetes.io/instance: my-appmesh-gateway
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
spec:
  type: LoadBalancer
  externalTrafficPolicy: Cluster
  ports:
  - port: 80
    targetPort: http
    name: http
    protocol: TCP
  selector:
    app.kubernetes.io/name: my-appmesh-gateway
---
# Source: appmesh-gateway/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-appmesh-gateway
  namespace: default
  labels:
    app.kubernetes.io/name: appmesh-gateway
    helm.sh/chart: appmesh-gateway-0.1.5
    app.kubernetes.io/instance: my-appmesh-gateway
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 10%
  selector:
    matchLabels:
      app.kubernetes.io/name: my-appmesh-gateway
  template:
    metadata:
      labels:
        app.kubernetes.io/name: my-appmesh-gateway
        app.kubernetes.io/component: "appmesh-gateway"
      annotations:
    spec:
      serviceAccountName: my-appmesh-gateway
      terminationGracePeriodSeconds: 30
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: appmesh-gateway
                topologyKey: kubernetes.io/hostname
              weight: 100
      containers:
      - name: envoy
        image: "840364872350.dkr.ecr.us-west-2.amazonaws.com/aws-appmesh-envoy:v1.15.1.0-prod"
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8088
          name: http
          protocol: TCP
        - containerPort: 9901
          name: http-admin
          protocol: TCP
        livenessProbe:
          exec:
            command:
              - sh
              - -c
              - >-
                curl -s http://localhost:9901/server_info | grep state | grep -q LIVE
        readinessProbe:
          initialDelaySeconds: 5
          tcpSocket:
            port: http-admin
        resources:
          requests:
            cpu: 100m
            memory: 64Mi
---
# Source: appmesh-gateway/templates/gateway.yaml
apiVersion: appmesh.k8s.aws/v1beta2
kind: VirtualGateway
metadata:
  name: my-appmesh-gateway
  namespace: default
  labels:
    app.kubernetes.io/name: appmesh-gateway
    helm.sh/chart: appmesh-gateway-0.1.5
    app.kubernetes.io/instance: my-appmesh-gateway
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  namespaceSelector:
    matchLabels:
      appmesh.k8s.aws/sidecarInjectorWebhook: enabled
  podSelector:
    matchLabels:
      app.kubernetes.io/name: my-appmesh-gateway
  listeners:
    - portMapping:
        port: 8088
        protocol: http
  logging:
    accessLog:
      file:
        path: "/dev/stdout"
