---
# Source: nacos/charts/mysql/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-nacos-mysql
  namespace: "default"
  labels:
    app.kubernetes.io/name: mysql
    helm.sh/chart: mysql-9.5.0
    app.kubernetes.io/instance: my-nacos
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "8.0.32"
  annotations:
automountServiceAccountToken: true
secrets:
  - name: my-nacos-mysql
---
# Source: nacos/charts/mysql/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-nacos-mysql
  namespace: "default"
  labels:
    app.kubernetes.io/name: mysql
    helm.sh/chart: mysql-9.5.0
    app.kubernetes.io/instance: my-nacos
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "8.0.32"
type: Opaque
data:
  mysql-root-password: "bmFjb3M="
  mysql-password: "bmFjb3M="
  mysql-replication-password: "cmVwbGljYXRvcg=="
---
# Source: nacos/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-nacos
  namespace: "default"
  labels:
    app.kubernetes.io/name: nacos
    helm.sh/chart: nacos-2.1.7
    app.kubernetes.io/instance: my-nacos
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "2.4.0"
type: Opaque
data:
  mysqlMasterHost: "bXktbmFjb3MtbXlzcWwtcHJpbWFyeQ=="
  mysqlDatabase: "bmFjb3M="
  mysqlMasterPort: MzMwNg==
  mysqlMasterUser: "bmFjb3M="
  mysqlMasterPassword: "bmFjb3M="
  mysqlSlaveHost: "bXktbmFjb3MtbXlzcWwtc2Vjb25kYXJ5"
  mysqlSlavePort: MzMwNg==
---
# Source: nacos/charts/mysql/templates/primary/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-nacos-mysql-primary
  namespace: "default"
  labels:
    app.kubernetes.io/name: mysql
    helm.sh/chart: mysql-9.5.0
    app.kubernetes.io/instance: my-nacos
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "8.0.32"
    app.kubernetes.io/component: primary
data:
  my.cnf: |-
    [mysqld]
    skip_ssl
    default_authentication_plugin=mysql_native_password
    skip-name-resolve
    explicit_defaults_for_timestamp
    basedir=/opt/bitnami/mysql
    plugin_dir=/opt/bitnami/mysql/lib/plugin
    port=3306
    socket=/opt/bitnami/mysql/tmp/mysql.sock
    datadir=/bitnami/mysql/data
    tmpdir=/opt/bitnami/mysql/tmp
    max_allowed_packet=16M
    bind-address=0.0.0.0
    pid-file=/opt/bitnami/mysql/tmp/mysqld.pid
    log-error=/opt/bitnami/mysql/logs/mysqld.log
    default-time_zone = '+8:00'
    character-set-server=utf8mb4
    collation-server = utf8mb4_unicode_ci
    
    [client]
    port=3306
    socket=/opt/bitnami/mysql/tmp/mysql.sock
    plugin_dir=/opt/bitnami/mysql/lib/plugin
    default-character-set=utf8mb4
    
    [manager]
    port=3306
    socket=/opt/bitnami/mysql/tmp/mysql.sock
    pid-file=/opt/bitnami/mysql/tmp/mysqld.pid
---
# Source: nacos/charts/mysql/templates/secondary/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-nacos-mysql-secondary
  namespace: "default"
  labels:
    app.kubernetes.io/name: mysql
    helm.sh/chart: mysql-9.5.0
    app.kubernetes.io/instance: my-nacos
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "8.0.32"
    app.kubernetes.io/component: secondary
data:
  my.cnf: |-
    [mysqld]
    skip_ssl
    default_authentication_plugin=mysql_native_password
    skip-name-resolve
    explicit_defaults_for_timestamp
    basedir=/opt/bitnami/mysql
    plugin_dir=/opt/bitnami/mysql/lib/plugin
    port=3306
    socket=/opt/bitnami/mysql/tmp/mysql.sock
    datadir=/bitnami/mysql/data
    tmpdir=/opt/bitnami/mysql/tmp
    max_allowed_packet=16M
    bind-address=0.0.0.0
    pid-file=/opt/bitnami/mysql/tmp/mysqld.pid
    log-error=/opt/bitnami/mysql/logs/mysqld.log
    default-time_zone = '+8:00'
    character-set-server=utf8mb4
    collation-server = utf8mb4_unicode_ci
    
    [client]
    port=3306
    socket=/opt/bitnami/mysql/tmp/mysql.sock
    plugin_dir=/opt/bitnami/mysql/lib/plugin
    default-character-set=UTF8
    
    [manager]
    port=3306
    socket=/opt/bitnami/mysql/tmp/mysql.sock
    pid-file=/opt/bitnami/mysql/tmp/mysqld.pid
---
# Source: nacos/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-nacos
  namespace: default
  labels:
    app.kubernetes.io/name: nacos
    helm.sh/chart: nacos-2.1.7
    app.kubernetes.io/instance: my-nacos
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "2.4.0"
data:
  sql_files: "https://raw.githubusercontent.com/alibaba/nacos/2.4.0/distribution/conf/mysql-schema.sql"
---
# Source: nacos/charts/mysql/templates/primary/svc-headless.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-nacos-mysql-primary-headless
  namespace: "default"
  labels:
    app.kubernetes.io/name: mysql
    helm.sh/chart: mysql-9.5.0
    app.kubernetes.io/instance: my-nacos
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "8.0.32"
    app.kubernetes.io/component: primary
spec:
  type: ClusterIP
  clusterIP: None
  publishNotReadyAddresses: true
  ports:
    - name: mysql
      port: 3306
      targetPort: mysql
  selector: 
    app.kubernetes.io/name: mysql
    app.kubernetes.io/instance: my-nacos
    app.kubernetes.io/component: primary
---
# Source: nacos/charts/mysql/templates/primary/svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-nacos-mysql-primary
  namespace: "default"
  labels:
    app.kubernetes.io/name: mysql
    helm.sh/chart: mysql-9.5.0
    app.kubernetes.io/instance: my-nacos
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "8.0.32"
    app.kubernetes.io/component: primary
  annotations:
spec:
  type: ClusterIP
  sessionAffinity: None
  ports:
    - name: mysql
      port: 3306
      protocol: TCP
      targetPort: mysql
      nodePort: null
  selector: 
    app.kubernetes.io/name: mysql
    app.kubernetes.io/instance: my-nacos
    app.kubernetes.io/component: primary
---
# Source: nacos/charts/mysql/templates/secondary/svc-headless.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-nacos-mysql-secondary-headless
  namespace: "default"
  labels:
    app.kubernetes.io/name: mysql
    helm.sh/chart: mysql-9.5.0
    app.kubernetes.io/instance: my-nacos
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "8.0.32"
    app.kubernetes.io/component: secondary
spec:
  type: ClusterIP
  clusterIP: None
  publishNotReadyAddresses: true
  ports:
    - name: mysql
      port: 3306
      targetPort: mysql
  selector: 
    app.kubernetes.io/name: mysql
    app.kubernetes.io/instance: my-nacos
    app.kubernetes.io/component: secondary
---
# Source: nacos/charts/mysql/templates/secondary/svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-nacos-mysql-secondary
  namespace: "default"
  labels:
    app.kubernetes.io/name: mysql
    helm.sh/chart: mysql-9.5.0
    app.kubernetes.io/instance: my-nacos
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "8.0.32"
    app.kubernetes.io/component: secondary
  annotations:
spec:
  type: ClusterIP
  sessionAffinity: None
  ports:
    - name: mysql
      port: 3306
      protocol: TCP
      targetPort: mysql
      nodePort: null
  selector: 
    app.kubernetes.io/name: mysql
    app.kubernetes.io/instance: my-nacos
    app.kubernetes.io/component: secondary
---
# Source: nacos/templates/service-headless.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    # 1.13 以前版本
    #service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
  name: my-nacos-headless
  namespace: default
  labels:
    app.kubernetes.io/name: nacos
    helm.sh/chart: nacos-2.1.7
    app.kubernetes.io/instance: my-nacos
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "2.4.0"
spec:
  type: ClusterIP
  clusterIP: None
  # 1.13 以后版本
  publishNotReadyAddresses: true
  ports:
    - name: http
      targetPort: http
      port: 8848
      protocol: TCP
  selector:
    app.kubernetes.io/name: nacos
    app.kubernetes.io/instance: my-nacos
---
# Source: nacos/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-nacos
  namespace: default
  labels:
    app.kubernetes.io/name: nacos
    helm.sh/chart: nacos-2.1.7
    app.kubernetes.io/instance: my-nacos
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "2.4.0"
spec:
  type: ClusterIP
  ports:
    - name: http
      targetPort: http
      port: 8848
      protocol: TCP
  selector:
    app.kubernetes.io/name: nacos
    app.kubernetes.io/instance: my-nacos
---
# Source: nacos/charts/mysql/templates/primary/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: my-nacos-mysql-primary
  namespace: "default"
  labels:
    app.kubernetes.io/name: mysql
    helm.sh/chart: mysql-9.5.0
    app.kubernetes.io/instance: my-nacos
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "8.0.32"
    app.kubernetes.io/component: primary
spec:
  replicas: 1
  podManagementPolicy: ""
  selector:
    matchLabels: 
      app.kubernetes.io/name: mysql
      app.kubernetes.io/instance: my-nacos
      app.kubernetes.io/component: primary
  serviceName: my-nacos-mysql-primary
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      annotations:
        checksum/configuration: 464e3059bf780b23fc4a35631e87ab3c520560d9ae90395a3ec651b98e4958ff
      labels:
        app.kubernetes.io/name: mysql
        helm.sh/chart: mysql-9.5.0
        app.kubernetes.io/instance: my-nacos
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/version: "8.0.32"
        app.kubernetes.io/component: primary
    spec:
      serviceAccountName: my-nacos-mysql
      
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/instance: my-nacos
                    app.kubernetes.io/name: mysql
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      securityContext:
        fsGroup: 1001
      initContainers:
      containers:
        - name: mysql
          image: docker.io/bitnami/mysql:8.0.32-debian-11-r8
          imagePullPolicy: "IfNotPresent"
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
            runAsUser: 1001
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: my-nacos-mysql
                  key: mysql-root-password
            - name: MYSQL_USER
              value: "nacos"
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: my-nacos-mysql
                  key: mysql-password
            - name: MYSQL_DATABASE
              value: "nacos"
            - name: MYSQL_REPLICATION_MODE
              value: "master"
            - name: MYSQL_REPLICATION_USER
              value: "replicator"
            - name: MYSQL_REPLICATION_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: my-nacos-mysql
                  key: mysql-replication-password
          envFrom:
          ports:
            - name: mysql
              containerPort: 3306
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
            exec:
              command:
                - /bin/bash
                - -ec
                - |
                  password_aux="${MYSQL_ROOT_PASSWORD:-}"
                  if [[ -f "${MYSQL_ROOT_PASSWORD_FILE:-}" ]]; then
                      password_aux=$(cat "$MYSQL_ROOT_PASSWORD_FILE")
                  fi
                  mysqladmin status -uroot -p"${password_aux}"
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
            exec:
              command:
                - /bin/bash
                - -ec
                - |
                  password_aux="${MYSQL_ROOT_PASSWORD:-}"
                  if [[ -f "${MYSQL_ROOT_PASSWORD_FILE:-}" ]]; then
                      password_aux=$(cat "$MYSQL_ROOT_PASSWORD_FILE")
                  fi
                  mysqladmin status -uroot -p"${password_aux}"
          startupProbe:
            failureThreshold: 10
            initialDelaySeconds: 15
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
            exec:
              command:
                - /bin/bash
                - -ec
                - |
                  password_aux="${MYSQL_ROOT_PASSWORD:-}"
                  if [[ -f "${MYSQL_ROOT_PASSWORD_FILE:-}" ]]; then
                      password_aux=$(cat "$MYSQL_ROOT_PASSWORD_FILE")
                  fi
                  mysqladmin status -uroot -p"${password_aux}"
          resources: 
            limits: {}
            requests: {}
          volumeMounts:
            - name: data
              mountPath: /bitnami/mysql
            - name: config
              mountPath: /opt/bitnami/mysql/conf/my.cnf
              subPath: my.cnf
      volumes:
        - name: config
          configMap:
            name: my-nacos-mysql-primary
        - name: data
          emptyDir: {}
---
# Source: nacos/charts/mysql/templates/secondary/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: my-nacos-mysql-secondary
  namespace: "default"
  labels:
    app.kubernetes.io/name: mysql
    helm.sh/chart: mysql-9.5.0
    app.kubernetes.io/instance: my-nacos
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "8.0.32"
    app.kubernetes.io/component: secondary
spec:
  replicas: 1
  podManagementPolicy: ""
  selector:
    matchLabels: 
      app.kubernetes.io/name: mysql
      app.kubernetes.io/instance: my-nacos
      app.kubernetes.io/component: secondary
  serviceName: my-nacos-mysql-secondary
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      annotations:
        checksum/configuration: af1b7274dd944d53e02f55bf9520343698ecd7c79a9525c72e059c35a0078f2a
      labels:
        app.kubernetes.io/name: mysql
        helm.sh/chart: mysql-9.5.0
        app.kubernetes.io/instance: my-nacos
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/version: "8.0.32"
        app.kubernetes.io/component: secondary
    spec:
      serviceAccountName: my-nacos-mysql
      
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/instance: my-nacos
                    app.kubernetes.io/name: mysql
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      securityContext:
        fsGroup: 1001
      initContainers:
      containers:
        - name: mysql
          image: docker.io/bitnami/mysql:8.0.32-debian-11-r8
          imagePullPolicy: "IfNotPresent"
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
            runAsUser: 1001
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: MYSQL_REPLICATION_MODE
              value: "slave"
            - name: MYSQL_MASTER_HOST
              value: my-nacos-mysql-primary
            - name: MYSQL_MASTER_PORT_NUMBER
              value: "3306"
            - name: MYSQL_MASTER_ROOT_USER
              value: "root"
            - name: MYSQL_REPLICATION_USER
              value: "replicator"
            - name: MYSQL_MASTER_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: my-nacos-mysql
                  key: mysql-root-password
            - name: MYSQL_REPLICATION_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: my-nacos-mysql
                  key: mysql-replication-password
            - name: TZ
              value: Asia/Shanghai
          envFrom:
          ports:
            - name: mysql
              containerPort: 3306
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
            exec:
              command:
                - /bin/bash
                - -ec
                - |
                  password_aux="${MYSQL_MASTER_ROOT_PASSWORD:-}"
                  if [[ -f "${MYSQL_MASTER_ROOT_PASSWORD_FILE:-}" ]]; then
                      password_aux=$(cat "$MYSQL_MASTER_ROOT_PASSWORD_FILE")
                  fi
                  mysqladmin status -uroot -p"${password_aux}"
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
            exec:
              command:
                - /bin/bash
                - -ec
                - |
                  password_aux="${MYSQL_MASTER_ROOT_PASSWORD:-}"
                  if [[ -f "${MYSQL_MASTER_ROOT_PASSWORD_FILE:-}" ]]; then
                      password_aux=$(cat "$MYSQL_MASTER_ROOT_PASSWORD_FILE")
                  fi
                  mysqladmin status -uroot -p"${password_aux}"
          startupProbe:
            failureThreshold: 15
            initialDelaySeconds: 15
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
            exec:
              command:
                - /bin/bash
                - -ec
                - |
                  password_aux="${MYSQL_MASTER_ROOT_PASSWORD:-}"
                  if [[ -f "${MYSQL_MASTER_ROOT_PASSWORD_FILE:-}" ]]; then
                      password_aux=$(cat "$MYSQL_MASTER_ROOT_PASSWORD_FILE")
                  fi
                  mysqladmin status -uroot -p"${password_aux}"
          resources: 
            limits: {}
            requests: {}
          volumeMounts:
            - name: data
              mountPath: /bitnami/mysql
            - name: config
              mountPath: /opt/bitnami/mysql/conf/my.cnf
              subPath: my.cnf
      volumes:
        - name: config
          configMap:
            name: my-nacos-mysql-secondary
        - name: data
          emptyDir: {}
---
# Source: nacos/templates/deployment-statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: my-nacos
  namespace: default
  labels:
    app.kubernetes.io/name: nacos
    helm.sh/chart: nacos-2.1.7
    app.kubernetes.io/instance: my-nacos
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "2.4.0"
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: nacos
      app.kubernetes.io/instance: my-nacos
  replicas: 3
  serviceName: my-nacos-headless
  podManagementPolicy: 
  template:
    metadata:
      labels:
        app.kubernetes.io/name: nacos
        helm.sh/chart: nacos-2.1.7
        app.kubernetes.io/instance: my-nacos
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/version: "2.4.0"
      annotations:
        pod.alpha.kubernetes.io/initialized: "true"
    spec:
      automountServiceAccountToken: false
      shareProcessNamespace: false
      serviceAccountName: default
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/instance: my-nacos
                    app.kubernetes.io/name: nacos
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      hostNetwork: false
      hostIPC: false
      
      initContainers:
        - name: peer-finder-plugin-install
          image: docker.io/nacos/nacos-peer-finder-plugin:latest
          imagePullPolicy: "IfNotPresent"
          volumeMounts:
            - mountPath: /home/nacos/plugins
              name: data-storage
              subPath: plugins
            - mountPath: /home/nacos/data
              name: data-storage
              subPath: data
            - mountPath: /home/nacos/logs
              name: data-storage
              subPath: logs
      containers:
        - name: nacos
          image: docker.io/nacos/nacos-server:v2.4.0
          imagePullPolicy: "IfNotPresent"
          env:
            - name: NACOS_REPLICAS
              value: "3"
            - name: NACOS_SERVERS
              value: my-nacos-0.my-nacos-headless:8848 my-nacos-1.my-nacos-headless:8848 my-nacos-2.my-nacos-headless:8848 
            - name: DOMAIN_NAME
              value: "cluster.local"
            - name: SERVICE_NAME
              value: my-nacos-headless
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: MYSQL_SERVICE_HOST
              valueFrom:
                secretKeyRef:
                  name: my-nacos
                  key: mysqlMasterHost
            - name: MYSQL_SERVICE_DB_NAME
              valueFrom:
                secretKeyRef:
                  name: my-nacos
                  key: mysqlDatabase
            - name: MYSQL_SERVICE_PORT
              valueFrom:
                secretKeyRef:
                  name: my-nacos
                  key: mysqlMasterPort
            - name: MYSQL_SERVICE_USER
              valueFrom:
                secretKeyRef:
                  name: my-nacos
                  key: mysqlMasterUser
            - name: MYSQL_SERVICE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: my-nacos
                  key: mysqlMasterPassword
            - name: NACOS_SERVER_PORT
              value: "8848"
            - name: NACOS_APPLICATION_PORT
              value: "8848"
            - name: PREFER_HOST_MODE
              value: hostname
            - name: TZ
              value: Asia/Shanghai
            - name: SPRING_DATASOURCE_PLATFORM
              value: mysql
            - name: NACOS_AUTH_USER_AGENT_AUTH_WHITE_ENABLE
              value: "false"
            - name: NACOS_AUTH_ENABLE
              value: "true"
            - name: NACOS_AUTH_TOKEN
              value: SecretKey012345678901234567890123456789012345678901234567890123456789
            - name: NACOS_AUTH_IDENTITY_KEY
              value: example
            - name: NACOS_AUTH_IDENTITY_VALUE
              value: example
          envFrom:
          ports:
            - name: http
              containerPort: 8848
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /nacos/v1/console/health/liveness
              port: http
            initialDelaySeconds: 60
            periodSeconds: 30
            timeoutSeconds: 
            successThreshold: 
            failureThreshold: 
          readinessProbe:
            httpGet:
              path: /nacos/v1/console/health/readiness
              port: http
            initialDelaySeconds: 60
            periodSeconds: 30
            timeoutSeconds: 
            successThreshold: 
            failureThreshold: 
          volumeMounts:
            - mountPath: /home/nacos/plugins
              name: data-storage
              subPath: plugins
            - mountPath: /home/nacos/data
              name: data-storage
              subPath: data
            - mountPath: /home/nacos/logs
              name: data-storage
              subPath: logs
      volumes:
        - name: data-storage
          emptyDir: {}
---
# Source: nacos/templates/job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: my-nacos-init-db
  annotations:
    "helm.sh/hook-weight": "-1"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
  labels:
    app.kubernetes.io/name: nacos
    helm.sh/chart: nacos-2.1.7
    app.kubernetes.io/instance: my-nacos
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "2.4.0"
    app.kubernetes.io/component: mysql
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/name: nacos
        helm.sh/chart: nacos-2.1.7
        app.kubernetes.io/instance: my-nacos
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/version: "2.4.0"
        app.kubernetes.io/component: mysql
    spec:
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/instance: my-nacos
                    app.kubernetes.io/name: nacos
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      
      containers:
      - name: import-nacos-mysql-sql
        image: docker.io/ygqygq2/mysql-exec-sql:latest
        imagePullPolicy: IfNotPresent
        env: 
          - name: SQL_FILES
            valueFrom:
              configMapKeyRef:
                name: my-nacos
                key: sql_files
          - name: MYSQL_HOST
            valueFrom:
              secretKeyRef:
                name: my-nacos
                key: mysqlMasterHost
          - name: MYSQL_DB
            valueFrom:
              secretKeyRef:
                name: my-nacos
                key: mysqlDatabase
          - name: MYSQL_PORT
            valueFrom:
              secretKeyRef:
                name: my-nacos
                key: mysqlMasterPort
          - name: MYSQL_USER
            valueFrom:
              secretKeyRef:
                name: my-nacos
                key: mysqlMasterUser
          - name: MYSQL_PASSWD
            valueFrom:
              secretKeyRef:
                name: my-nacos
                key: mysqlMasterPassword
      restartPolicy: OnFailure
  parallelism: 1
  completions: 1
  backoffLimit: 6
---
# Source: nacos/templates/test/test-nacos.yaml
apiVersion: v1
kind: Pod
metadata:
  name: my-nacos-test
  annotations:
    "helm.sh/hook": test-success
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  containers:
  - name: my-nacos-test
    image: nginx:latest
    command: ["sh", "-c", "curl -I -m 10 -o /dev/null -s -w %{http_code} http://$NACOS_SERVICE_HOST:$NACOS_SERVER_PORT/nacos/"]
    env:
    - name: NACOS_SERVER_PORT
      value: "8848"
    - name: NACOS_SERVICE_HOST 
      value: my-nacos
  restartPolicy: Never
