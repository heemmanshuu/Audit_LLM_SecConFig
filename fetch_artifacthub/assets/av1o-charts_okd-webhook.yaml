---
# Source: okd-webhook/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-okd-webhook
  labels:
    helm.sh/chart: okd-webhook-0.1.0
    app.kubernetes.io/name: okd-webhook
    app.kubernetes.io/instance: my-okd-webhook
    app.kubernetes.io/version: "v0.1.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: okd-webhook/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-okd-webhook
  labels:
    helm.sh/chart: okd-webhook-0.1.0
    app.kubernetes.io/name: okd-webhook
    app.kubernetes.io/instance: my-okd-webhook
    app.kubernetes.io/version: "v0.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 443
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: okd-webhook
    app.kubernetes.io/instance: my-okd-webhook
---
# Source: okd-webhook/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-okd-webhook
  labels:
    helm.sh/chart: okd-webhook-0.1.0
    app.kubernetes.io/name: okd-webhook
    app.kubernetes.io/instance: my-okd-webhook
    app.kubernetes.io/version: "v0.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: okd-webhook
      app.kubernetes.io/instance: my-okd-webhook
  template:
    metadata:
      labels:
        app.kubernetes.io/name: okd-webhook
        app.kubernetes.io/instance: my-okd-webhook
    spec:
      serviceAccountName: my-okd-webhook
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsNonRoot: true
        runAsUser: 1001
      containers:
        - name: okd-webhook
          securityContext:
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
          image: "registry.gitlab.com/av1o/okd-webhook:v0.1.0"
          imagePullPolicy: IfNotPresent
          args:
            - -tlsCertFile=/etc/webhook/certs/tls.crt
            - -tlsKeyFile=/etc/webhook/certs/tls.key
            - -port=8443
            - -debug
          ports:
            - name: http
              containerPort: 8443
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: http
              scheme: HTTPS
          readinessProbe:
            httpGet:
              path: /healthz
              port: http
              scheme: HTTPS
          resources:
            {}
          volumeMounts:
            - mountPath: /etc/webhook/certs
              name: certs
      volumes:
        - name: certs
          secret:
            optional: false
            secretName:
---
# Source: okd-webhook/templates/mwc.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: my-okd-webhook
  labels:
    helm.sh/chart: okd-webhook-0.1.0
    app.kubernetes.io/name: okd-webhook
    app.kubernetes.io/instance: my-okd-webhook
    app.kubernetes.io/version: "v0.1.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
webhooks:
  - admissionReviewVersions:
      - v1
    clientConfig:
      caBundle: 
      service:
        name: my-okd-webhook
        namespace: default
        path: /mutate
        port: 443
    name: okd.dcas.dev
    sideEffects: NoneOnDryRun
    namespaceSelector:
      {}
    objectSelector:
      {}
    rules:
      - apiGroups:
          - ""
        apiVersions:
          - v1
        operations:
          - CREATE
          - UPDATE
        resources:
          - pods
        scope: "*"
