---
# Source: lightrun-k8s-operator/templates/deployment.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-lightrun-k8s-operator-controller-manager
  labels:
    helm.sh/chart: lightrun-k8s-operator-0.3.5
    app.kubernetes.io/name: lightrun-k8s-operator
    app.kubernetes.io/instance: my-lightrun-k8s-operator
    app.kubernetes.io/managed-by: Helm
---
# Source: lightrun-k8s-operator/templates/manager-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-lightrun-k8s-operator-manager-role-rw
  labels:
    helm.sh/chart: lightrun-k8s-operator-0.3.5
    app.kubernetes.io/name: lightrun-k8s-operator
    app.kubernetes.io/instance: my-lightrun-k8s-operator
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - agents.lightrun.com
    resources:
      - lightrunjavaagents
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - agents.lightrun.com
    resources:
      - lightrunjavaagents/finalizers
    verbs:
      - update
  - apiGroups:
      - agents.lightrun.com
    resources:
      - lightrunjavaagents/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - apps
    resources:
      - deployments
    verbs:
      - get
      - list
      - patch
      - watch
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - get
      - list
      - watch
---
# Source: lightrun-k8s-operator/templates/metrics-reader-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-lightrun-k8s-operator-metrics-reader
  labels:
    helm.sh/chart: lightrun-k8s-operator-0.3.5
    app.kubernetes.io/name: lightrun-k8s-operator
    app.kubernetes.io/instance: my-lightrun-k8s-operator
    app.kubernetes.io/managed-by: Helm
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
# Source: lightrun-k8s-operator/templates/manager-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-lightrun-k8s-operator-manager-rolebinding-rw
  labels:
    helm.sh/chart: lightrun-k8s-operator-0.3.5
    app.kubernetes.io/name: lightrun-k8s-operator
    app.kubernetes.io/instance: my-lightrun-k8s-operator
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: 'my-lightrun-k8s-operator-manager-role-rw'
subjects:
- kind: ServiceAccount
  name: 'my-lightrun-k8s-operator-controller-manager'
  namespace: 'default'
---
# Source: lightrun-k8s-operator/templates/leader-election-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: my-lightrun-k8s-operator-leader-election-role
  labels:
    helm.sh/chart: lightrun-k8s-operator-0.3.5
    app.kubernetes.io/name: lightrun-k8s-operator
    app.kubernetes.io/instance: my-lightrun-k8s-operator
    app.kubernetes.io/managed-by: Helm
  namespace: 'default'
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
---
# Source: lightrun-k8s-operator/templates/leader-election-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: my-lightrun-k8s-operator-leader-election-rolebinding
  labels:
    helm.sh/chart: lightrun-k8s-operator-0.3.5
    app.kubernetes.io/name: lightrun-k8s-operator
    app.kubernetes.io/instance: my-lightrun-k8s-operator
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: 'my-lightrun-k8s-operator-leader-election-role'
subjects:
- kind: ServiceAccount
  name: 'my-lightrun-k8s-operator-controller-manager'
  namespace: 'default'
---
# Source: lightrun-k8s-operator/templates/metrics-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-lightrun-k8s-operator-controller-manager-metrics-service
  labels:
    control-plane: controller-manager
    helm.sh/chart: lightrun-k8s-operator-0.3.5
    app.kubernetes.io/name: lightrun-k8s-operator
    app.kubernetes.io/instance: my-lightrun-k8s-operator
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  selector:
    control-plane: controller-manager
    app.kubernetes.io/name: lightrun-k8s-operator
    app.kubernetes.io/instance: my-lightrun-k8s-operator
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 8080
---
# Source: lightrun-k8s-operator/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-lightrun-k8s-operator-controller-manager
  labels:
    control-plane: controller-manager
    helm.sh/chart: lightrun-k8s-operator-0.3.5
    app.kubernetes.io/name: lightrun-k8s-operator
    app.kubernetes.io/instance: my-lightrun-k8s-operator
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
      app.kubernetes.io/name: lightrun-k8s-operator
      app.kubernetes.io/instance: my-lightrun-k8s-operator
  template:
    metadata:
      labels:
        control-plane: controller-manager
        app.kubernetes.io/name: lightrun-k8s-operator
        app.kubernetes.io/instance: my-lightrun-k8s-operator
      annotations:
        kubectl.kubernetes.io/default-container: manager
    spec:
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=:8080
        - --leader-elect
        - --zap-log-level=info
        command:
        - /manager
        image: lightruncom/lightrun-k8s-operator:0.3.5
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - "ALL"
      securityContext:
        runAsNonRoot: true
        seccompProfile: #require kube version 1.19+
          type: RuntimeDefault
      serviceAccountName: my-lightrun-k8s-operator-controller-manager
      terminationGracePeriodSeconds: 10
