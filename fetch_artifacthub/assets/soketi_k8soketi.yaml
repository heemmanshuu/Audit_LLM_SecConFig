---
# Source: k8soketi/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-k8soketi
  labels:
    helm.sh/chart: k8soketi-1.0.1
    app.kubernetes.io/name: k8soketi
    app.kubernetes.io/instance: my-k8soketi
    app: soketi
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: k8soketi/templates/serviceaccount-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: my-k8soketi
  labels:
    app.kubernetes.io/component: controller
    helm.sh/chart: k8soketi-1.0.1
    app.kubernetes.io/name: k8soketi
    app.kubernetes.io/instance: my-k8soketi
    app: soketi
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups: [""]
    resources:
      - pods
    verbs:
      - get
      - patch
  - apiGroups: [""]
    resources:
      - events
    verbs:
      - create
  - apiGroups:
    - discovery.k8s.io
    resources:
      - endpointslices
    verbs:
      - list
---
# Source: k8soketi/templates/serviceaccount-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: my-k8soketi
  labels:
    app.kubernetes.io/component: controller
    helm.sh/chart: k8soketi-1.0.1
    app.kubernetes.io/name: k8soketi
    app.kubernetes.io/instance: my-k8soketi
    app: soketi
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
subjects:
- kind: ServiceAccount
  name: my-k8soketi
roleRef:
  kind: Role
  name: my-k8soketi
  apiGroup: rbac.authorization.k8s.io
---
# Source: k8soketi/templates/service-metrics.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-k8soketi-metrics
  labels:
    helm.sh/chart: k8soketi-1.0.1
    app.kubernetes.io/name: k8soketi
    app.kubernetes.io/instance: my-k8soketi
    app: soketi
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 9601
      targetPort: 9601
      protocol: TCP
      name: metrics
  selector:
    app.kubernetes.io/name: k8soketi
    app.kubernetes.io/instance: my-k8soketi
    app: soketi
    ws.soketi.app/serves-metrics: "yes"
---
# Source: k8soketi/templates/service-ws-peer.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-k8soketi-peer
  labels:
    helm.sh/chart: k8soketi-1.0.1
    app.kubernetes.io/name: k8soketi
    app.kubernetes.io/instance: my-k8soketi
    app: soketi
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 6002
      targetPort: 6002
      protocol: TCP
      name: peer
  selector:
    app.kubernetes.io/name: k8soketi
    app.kubernetes.io/instance: my-k8soketi
    app: soketi
---
# Source: k8soketi/templates/service-ws-peer.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-k8soketi-peer-headless
  labels:
    helm.sh/chart: k8soketi-1.0.1
    app.kubernetes.io/name: k8soketi
    app.kubernetes.io/instance: my-k8soketi
    app: soketi
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  clusterIP: None
  ports:
    - port: 6002
      targetPort: 6002
      protocol: TCP
      name: peer
  selector:
    app.kubernetes.io/name: k8soketi
    app.kubernetes.io/instance: my-k8soketi
    app: soketi
---
# Source: k8soketi/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-k8soketi
  labels:
    helm.sh/chart: k8soketi-1.0.1
    app.kubernetes.io/name: k8soketi
    app.kubernetes.io/instance: my-k8soketi
    app: soketi
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
spec:
  type: ClusterIP
  ports:
    - port: 6001
      targetPort: 6001
      protocol: TCP
      name: soketi
  selector:
    app.kubernetes.io/name: k8soketi
    app.kubernetes.io/instance: my-k8soketi
    app: soketi
    k8s.soketi.app/low-memory: "no"
---
# Source: k8soketi/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-k8soketi-headless
  labels:
    helm.sh/chart: k8soketi-1.0.1
    app.kubernetes.io/name: k8soketi
    app.kubernetes.io/instance: my-k8soketi
    app: soketi
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  clusterIP: None
  ports:
    - port: 6001
      targetPort: 6001
      protocol: TCP
      name: soketi
  selector:
    app.kubernetes.io/name: k8soketi
    app.kubernetes.io/instance: my-k8soketi
    app: soketi
---
# Source: k8soketi/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-k8soketi
  labels:
    helm.sh/chart: k8soketi-1.0.1
    app.kubernetes.io/name: k8soketi
    app.kubernetes.io/instance: my-k8soketi
    app: soketi
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: k8soketi
      app.kubernetes.io/instance: my-k8soketi
      app: soketi
      k8s.soketi.app/serves-metrics: "yes"
  template:
    metadata:
      labels:
        app.kubernetes.io/name: k8soketi
        app.kubernetes.io/instance: my-k8soketi
        app: soketi
        k8s.soketi.app/serves-metrics: "yes"
    spec:

      terminationGracePeriodSeconds: 30

      serviceAccountName: my-k8soketi

      securityContext:
        {}

      containers:
        - name: k8soketi
          securityContext:
            {}
          image: "quay.io/soketi/k8soketi:0.1-18-debian"
          imagePullPolicy: IfNotPresent
          ports:
            - name: soketi
              containerPort: 6001
              protocol: TCP
            - name: metrics
              containerPort: 9601
              protocol: TCP
            - name: peer
              containerPort: 6002
              protocol: TCP
          command:
            - node
            - --optimize_for_size
            - --optimize-for-size
            - /app/bin/server.js
            - start
            - --metrics
            - --verbose
            - --accept-traffic-threshold=70
          env:
            - name: PORT
              value: "6001"
            - name: METRICS_SERVER_PORT
              value: "9601"
            - name: KUBE_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: KUBE_POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: KUBE_POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: KUBE_SERVICES
              value: my-k8soketi-peer
            - name: PEER_WS_PORT
              value: "6002"
            - name: NODE_OPTIONS
              value: "--es-module-specifier-resolution=node"
            - name: PEER_INACTIVITY_TIMEOUT
              value: "10"
            - name: WS_GRACE_PERIOD
              value: "10"
            - name: MODE
              value: full
          livenessProbe:
            failureThreshold: 1
            httpGet:
              httpHeaders:
              - name: X-Kube-Healthcheck
                value: "Yes"
              path: /
              port: 6001
            initialDelaySeconds: 5
            periodSeconds: 2
            successThreshold: 1
          readinessProbe:
            failureThreshold: 1
            httpGet:
              httpHeaders:
              - name: X-Kube-Healthcheck
                value: "Yes"
              path: /ready
              port: 6001
            initialDelaySeconds: 5
            periodSeconds: 1
            successThreshold: 1
          resources:
            requests:
              cpu: 500m
              memory: 256Mi
---
# Source: k8soketi/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "my-k8soketi-test-connection"
  labels:
    helm.sh/chart: k8soketi-1.0.1
    app.kubernetes.io/name: k8soketi
    app.kubernetes.io/instance: my-k8soketi
    app: soketi
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['my-k8soketi:6001']
  restartPolicy: Never
