---
# Source: eshoponabp/charts/gateway-web-public/templates/gateway-web-public-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-eshoponabp-gateway-web-public-configmap
data:
  yarp.json: |-
    {
    "ReverseProxy": {
      "Routes": {
        "Account Service": {
          "ClusterId": "account-cluster",
          "Match": {
            "Path": "/api/account/{**everything}"
          }
        },
        "Administration Service": {
          "ClusterId": "administration-cluster",
          "Match": {
            "Path": "/api/abp/{**everything}"
          }
        },
        "Catalog Service": {
          "ClusterId": "catalog-cluster",
          "Match": {
            "Path": "/api/catalog/{**everything}"
          }
        },      
        "Basket Service": {
          "ClusterId": "basket-cluster",
          "Match": {
            "Path": "/api/basket/{**everything}"
          }
        },
        "Ordering Service": {
          "ClusterId": "ordering-cluster",
          "Match": {
            "Path": "/api/ordering/{**everything}"
          }
        },
        "Payment Service": {
          "ClusterId": "payment-cluster",
          "Match": {
            "Path": "/api/payment/{**everything}"
          }
        },
        "product-picture-route": {
          "ClusterId": "product-picture-cluster",
          "Match": {
            "Path": "/product-images/{**everything}",
            "Methods" : [ "GET" ]
          }
        }
      },
      "Clusters": {
        "account-cluster": {
          "Destinations": {
            "destination1": {
              "Address": "http://eshop-st-authserver"
            }
          }
        },
        "administration-cluster": {
          "Destinations": {
            "destination1": {
              "Address": "http://eshop-st-administration"
            }
          }
        },
        "catalog-cluster": {
          "Destinations": {
            "destination1": {
              "Address": "http://eshop-st-catalog"
            }
          }
        },
        "product-picture-cluster": {
          "Destinations": {
            "destination1": {
              "Address": "http://eshop-st-catalog"
            }
          }
        },
        "basket-cluster": {
          "Destinations": {
            "destination1": {
              "Address": "http://eshop-st-basket"
            }
          }
        },
        "ordering-cluster": {
          "Destinations": {
            "destination1": {
              "Address": "http://eshop-st-ordering"
            }
          }
        },
        "payment-cluster": {
          "Destinations": {
            "destination1": {
              "Address": "http://eshop-st-payment"
            }
          }
        }
      }
    }
    }
---
# Source: eshoponabp/charts/gateway-web/templates/gateway-web-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-eshoponabp-gateway-web-configmap
data:
  yarp.json: |-
    {
    "ReverseProxy": {
      "Routes": {
        "Account Service": {
          "ClusterId": "account-cluster",
          "Match": {
            "Path": "/api/account/{**everything}"
          }
        },
        "Identity Service": {
          "ClusterId": "identity-cluster",
          "Match": {
            "Path": "/api/identity/{**everything}"
          }
        },
        "Administration Service": {
          "ClusterId": "administration-cluster",
          "Match": {
            "Path": "/api/abp/{**everything}"
          }
        },
        "feature-management-route": {
          "ClusterId": "feature-management-cluster",
          "Match": {
            "Path": "/api/feature-management/{**everything}"
          }
        },
        "permission-management-route": {
          "ClusterId": "permission-management-cluster",
          "Match": {
            "Path": "/api/permission-management/{**everything}"
          }
        },
        "setting-management-route": {
          "ClusterId": "setting-management-cluster",
          "Match": {
            "Path": "/api/setting-management/{**everything}"
          }
        },
        "Catalog Service": {
          "ClusterId": "catalogCluster",
          "Match": {
            "Path": "/api/catalog/{**everything}"
          }
        },
        "Ordering Service": {
          "ClusterId": "orderingCluster",
          "Match": {
            "Path": "/api/ordering/{**everything}"
          }
        }
      },
      "Clusters": {
        "account-cluster": {
          "Destinations": {
            "destination1": {
              "Address": "http://eshop-st-authserver"
            }
          }
        },
        "identity-cluster": {
          "Destinations": {
            "destination1": {
              "Address": "http://eshop-st-identity"
            }
          }
        },
        "administration-cluster": {
          "Destinations": {
            "destination1": {
              "Address": "http://eshop-st-administration"
            }
          }
        },
        "feature-management-cluster": {
          "Destinations": {
            "destination1": {
              "Address": "http://eshop-st-administration"
            }
          }
        },
        "permission-management-cluster": {
          "Destinations": {
            "destination1": {
              "Address": "http://eshop-st-administration"
            }
          }
        },
        "setting-management-cluster": {
          "Destinations": {
            "destination1": {
              "Address": "http://eshop-st-administration"
            }
          }
        },
        "catalogCluster": {
          "Destinations": {
            "destination1": {
              "Address": "http://eshop-st-catalog"
            }
          }
        },
        "orderingCluster": {
          "Destinations": {
            "destination1": {
              "Address": "http://eshop-st-ordering"
            }
          }
        }
      }
    }
    }
---
# Source: eshoponabp/charts/web/templates/web-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-eshoponabp-web-configmap
data:
  dynamic-env.json: |-
    {
        "production": "true",
        "application": {
            "baseUrl": "https://eshop-st-web",
            "name": "EShopOnAbp",
            "logoUrl": ""
        },
        "oAuthConfig": {
            "issuer": "http://eshop-st-authserver",
            "redirectUri": "https://eshop-st-web",
            "requireHttps": false,
            "clientId": "Web",
            "responseType": "code",
            "scope": "offline_access openid profile email phone AccountService IdentityService AdministrationService CatalogService OrderingService",
            "strictDiscoveryDocumentValidation": false,
            "skipIssuerCheck": true
        },
        "apis": {
            "default": {
                "url": "https://eshop-st-gateway-web",
                "rootNamespace": "EShopOnAbp"
            }
        }
    }
---
# Source: eshoponabp/charts/administration/templates/administration-service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    name: my-eshoponabp-administration
  name: my-eshoponabp-administration
spec:
  ports:
    - name: "80"
      port: 80
    - name: "443"
      port: 443
  selector:
    app: my-eshoponabp-administration
---
# Source: eshoponabp/charts/authserver/templates/authserver-service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    name: my-eshoponabp-authserver
  name: my-eshoponabp-authserver
spec:
  ports:
    - name: "80"
      port: 80
    - name: "443"
      port: 443
  selector:
    app: my-eshoponabp-authserver
---
# Source: eshoponabp/charts/basket/templates/basket-service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    name: my-eshoponabp-basket
  name: my-eshoponabp-basket
spec:
  ports:
    - name: "80"
      port: 80
    - name: "443"
      port: 443
  selector:
    app: my-eshoponabp-basket
---
# Source: eshoponabp/charts/catalog/templates/catalog-service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    name: my-eshoponabp-catalog
  name: my-eshoponabp-catalog
spec:
  ports:
    - name: "http"
      port: 80
      targetPort: http
      protocol: TCP
    - name: grpc
      targetPort: grpc
      protocol: TCP
      port: 81
  selector:
    app: my-eshoponabp-catalog
---
# Source: eshoponabp/charts/gateway-web-public/templates/gateway-web-public-service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    name: my-eshoponabp-gateway-web-public
  name: my-eshoponabp-gateway-web-public
spec:
  ports:
    - name: "80"
      port: 80
    - name: "443"
      port: 443
  selector:
    app: my-eshoponabp-gateway-web-public
---
# Source: eshoponabp/charts/gateway-web/templates/gateway-web-service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    name: my-eshoponabp-gateway-web
  name: my-eshoponabp-gateway-web
spec:
  ports:
    - name: "80"
      port: 80
    - name: "443"
      port: 443
  selector:
    app: my-eshoponabp-gateway-web
---
# Source: eshoponabp/charts/identity/templates/identity-service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    name: my-eshoponabp-identity
  name: my-eshoponabp-identity
spec:
  ports:
    - name: "80"
      port: 80
    - name: "443"
      port: 443
  selector:
    app: my-eshoponabp-identity
---
# Source: eshoponabp/charts/mongodb/templates/mongodb-service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    name: my-eshoponabp-mongodb
  name: my-eshoponabp-mongodb
spec:
  type: ClusterIP
  ports:
    - name: mongodb
      port: 27017
  selector:
    app: my-eshoponabp-mongodb
---
# Source: eshoponabp/charts/ordering/templates/ordering-service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    name: my-eshoponabp-ordering
  name: my-eshoponabp-ordering
spec:
  ports:
    - name: "80"
      port: 80
    - name: "443"
      port: 443
  selector:
    app: my-eshoponabp-ordering
---
# Source: eshoponabp/charts/payment/templates/payment-service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    name: my-eshoponabp-payment
  name: my-eshoponabp-payment
spec:
  ports:
    - name: "80"
      port: 80
    - name: "443"
      port: 443
  selector:
    app: my-eshoponabp-payment
---
# Source: eshoponabp/charts/postgresdb/templates/postgres-service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    name: my-eshoponabp-postgresdb
  name: my-eshoponabp-postgresdb
spec:
  type: ClusterIP
  ports:
    - name: postgres
      port: 5432
  selector:
    app: my-eshoponabp-postgresdb
---
# Source: eshoponabp/charts/public-web/templates/public-web-service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    name: my-eshoponabp-public-web
  name: my-eshoponabp-public-web
spec:
  ports:
    - name: "80"
      port: 80
    - name: "443"
      port: 443
  selector:
    app: my-eshoponabp-public-web
---
# Source: eshoponabp/charts/rabbitmq/templates/rabbitmq-service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    name: my-eshoponabp-rabbitmq
  name: my-eshoponabp-rabbitmq
spec:
  type: ClusterIP
  ports:
    - name: http
      protocol: TCP
      port: 15672
      targetPort: 15672
    - name: amqp
      protocol: TCP
      port: 5672
      targetPort: 5672
  selector:
    app: my-eshoponabp-rabbitmq
---
# Source: eshoponabp/charts/redis/templates/redis-service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    name: my-eshoponabp-redis
  name: my-eshoponabp-redis
spec:
  type: ClusterIP
  ports:
    - name: redis
      port: 6379
  selector:
    app: my-eshoponabp-redis
---
# Source: eshoponabp/charts/web/templates/web-service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    name: my-eshoponabp-web
  name: my-eshoponabp-web
spec:
  ports:
    - name: "80"
      port: 80
    - name: "443"
      port: 443
  selector:
    app: my-eshoponabp-web
---
# Source: eshoponabp/charts/administration/templates/administration-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-eshoponabp-administration
spec:
  selector:
    matchLabels:
      app: my-eshoponabp-administration
  template:
    metadata:
      labels:
        app: my-eshoponabp-administration
    spec:
      containers:
      - image: ghcr.io/volosoft/eshoponabp/service-administration:1.0.0
        imagePullPolicy: IfNotPresent
        name: my-eshoponabp-administration
        ports:
        - name: http
          containerPort: 80
        - name: https
          containerPort: 443
        env:
        - name: App__SelfUrl
          value: "https://eshop-st-administration"
        - name: RemoteServices__AbpIdentity__BaseUrl
          value: "https://eshop-st-identity"
        - name: RemoteServices__AbpIdentity__UseCurrentAccessToken
          value: "false"  
        - name: App__CorsOrigins
          value: "https://eshop-st-gateway-web,https://eshop-st-gateway-web-public,https://eshop-st-gateway-internal"
        - name: IdentityClients__Default__Authority
          value: "https://eshop-st-authserver"
        - name: "ConnectionStrings__AdministrationService"
          value: "Host=eshop-st-postgresdb;Port=5432;Database=EShopOnAbp_Administration;User ID=postgres;password=myPassw0rd;Pooling=false"
        - name: "DOTNET_ENVIRONMENT"
          value: "Staging"
        - name: "Redis__Configuration"
          value: "eshop-st-redis"
        - name: "AuthServer__Authority"
          value: "http://eshop-st-authserver"
        - name: "AuthServer__RequireHttpsMetadata"
          value: "false"
        - name: "AuthServer__SwaggerClientId"
          value: "WebGateway_Swagger"
        - name: "AuthServer__SwaggerClientSecret"
          value: "1q2w3e*"  
        - name: "StringEncryption__DefaultPassPhrase"
          value: "gsKnGZ041HLL4IM8"
        - name: "RabbitMQ__Connections__Default__HostName"
          value: "eshop-st-rabbitmq"
        - name: "ElasticSearch__Url"
          value: "eshop-st-elasticsearch"
---
# Source: eshoponabp/charts/authserver/templates/authserver-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-eshoponabp-authserver
spec:
  selector:
    matchLabels:
      app: my-eshoponabp-authserver
  template:
    metadata:
      labels:
        app: my-eshoponabp-authserver
    spec:
      containers:
      - image: ghcr.io/volosoft/eshoponabp/app-authserver:1.0.0
        imagePullPolicy: IfNotPresent
        name: my-eshoponabp-authserver
        ports:
        - name: http
          containerPort: 80
        - name: https
          containerPort: 443
        env:
        - name: App__SelfUrl
          value: "https://eshop-st-authserver"
        - name: App__CorsOrigins
          value: "https://eshop-st-gateway-web,https://eshop-st-gateway-web-public,https://eshop-st-identity,https://eshop-st-administration,https://eshop-st-basket,https://eshop-st-catalog,https://eshop-st-ordering,https://eshop-st-payment,https://eshop-st-web,https://eshop-st-public-web"        
        - name: App__RedirectAllowedUrls
          value: "https://eshop-st-web"
        - name: "ConnectionStrings__IdentityService"
          value: "Host=eshop-st-postgresdb;Port=5432;Database=EShopOnAbp_Identity;User ID=postgres;password=myPassw0rd;Pooling=false"
        - name: "ConnectionStrings__AdministrationService"
          value: "Host=eshop-st-postgresdb;Port=5432;Database=EShopOnAbp_Administration;User ID=postgres;password=myPassw0rd;Pooling=false"
        - name: "AuthServer__Authority"
          value: "http://eshop-st-authserver"
        - name: "AuthServer__RequireHttpsMetadata"
          value: "false"
        - name: "AuthServer__SwaggerClientId"
          value: "WebGateway_Swagger"
        - name: "AuthServer__SwaggerClientSecret"
          value: "1q2w3e*"
        - name: "DOTNET_ENVIRONMENT"
          value: "Staging"
        - name: "Redis__Configuration"
          value: "eshop-st-redis"
        - name: "StringEncryption__DefaultPassPhrase"
          value: "gsKnGZ041HLL4IM8"
        - name: "RabbitMQ__Connections__Default__HostName"
          value: "eshop-st-rabbitmq"
        - name: "ElasticSearch__Url"
          value: "eshop-st-elasticsearch"
---
# Source: eshoponabp/charts/basket/templates/basket-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-eshoponabp-basket
spec:
  selector:
    matchLabels:
      app: my-eshoponabp-basket
  template:
    metadata:
      labels:
        app: my-eshoponabp-basket
    spec:
      containers:
      - image: ghcr.io/volosoft/eshoponabp/service-basket:1.0.0
        imagePullPolicy: IfNotPresent
        name: my-eshoponabp-basket
        ports:
        - name: http
          containerPort: 80
        - name: https
          containerPort: 443
        env:
        - name: App__SelfUrl
          value: "https://eshop-st-basket"
        - name: App__CorsOrigins
          value: "https://eshop-st-gateway-web,https://eshop-st-gateway-web-public,https://eshop-st-public-web"
        - name: "ConnectionStrings__AdministrationService"
          value: Host=eshop-st-postgresdb;Port=5432;Database=EShopOnAbp_Administration;User ID=postgres;password=myPassw0rd;Pooling=false
        - name: "DOTNET_ENVIRONMENT"
          value: "Staging"
        - name: "Redis__Configuration"
          value: "eshop-st-redis"
        - name: "RabbitMQ__Connections__Default__HostName"
          value: "eshop-st-rabbitmq"
        - name: "ElasticSearch__Url"
          value: "eshop-st-elasticsearch"   
        - name: "AuthServer__Authority"
          value: "http://eshop-st-authserver"
        - name: "AuthServer__RequireHttpsMetadata"
          value: "false"
        - name: "AuthServer__SwaggerClientId"
          value: ""
        - name: "AuthServer__SwaggerClientSecret"
          value: ""
        - name: "StringEncryption__DefaultPassPhrase"
          value: "gsKnGZ041HLL4IM8"
        - name: "RemoteServices__Catalog__BaseUrl"
          value: "http://eshop-st-catalog:80"
        - name: "RemoteServices__Catalog__GrpcUrl"
          value: "http://eshop-st-catalog:81"
---
# Source: eshoponabp/charts/catalog/templates/catalog-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-eshoponabp-catalog
spec:
  selector:
    matchLabels:
      app: my-eshoponabp-catalog
  template:
    metadata:
      labels:
        app: my-eshoponabp-catalog
    spec:
      containers:
      - image: ghcr.io/volosoft/eshoponabp/service-catalog:1.0.0
        imagePullPolicy: IfNotPresent
        name: my-eshoponabp-catalog
        ports:
        - name: http
          containerPort: 80
          protocol: TCP
        - name: grpc
          containerPort: 81
          protocol: TCP
        env:
        - name: "ASPNETCORE_URLS"
          value: "http://+:80;http://+:81" 
        - name: "DOTNET_ENVIRONMENT"
          value: "Staging"         
        - name: App__SelfUrl
          value: "https://eshop-st-catalog"
        - name: App__CorsOrigins
          value: "https://eshop-st-gateway-web,https://eshop-st-gateway-web-public,https://eshop-st-public-web,https://eshop-st-web"
        - name: "ConnectionStrings__CatalogService"
          value: "mongodb://eshop-st-mongodb/EShopOnAbp_Catalog"
        - name: "ConnectionStrings__AdministrationService"
          value: "Host=eshop-st-postgresdb;Port=5432;Database=EShopOnAbp_Administration;User ID=postgres;password=myPassw0rd;Pooling=false"        
        - name: "Redis__Configuration"
          value: "eshop-st-redis"
        - name: "RabbitMQ__Connections__Default__HostName"
          value: "eshop-st-rabbitmq"
        - name: "ElasticSearch__Url"
          value: "eshop-st-elasticsearch"   
        - name: "AuthServer__Authority"
          value: "http://eshop-st-authserver"
        - name: "AuthServer__RequireHttpsMetadata"
          value: "false"
        - name: "AuthServer__SwaggerClientId"
          value: "WebGateway_Swagger"
        - name: "AuthServer__SwaggerClientSecret"
          value: "1q2w3e*"
        - name: "StringEncryption__DefaultPassPhrase"
          value: "gsKnGZ041HLL4IM8"
        - name: "Kestrel__Endpoints__Http__Url"
          value: "http://eshop-st-catalog:80"
        - name: "Kestrel__Endpoints__Http__Protocols"
          value: "Http1AndHttp2"
        - name: "Kestrel__Endpoints__gRPC__Url"
          value: "http://eshop-st-catalog:81"
        - name: "Kestrel__Endpoints__gRPC__Protocols"
          value: "Http2"
---
# Source: eshoponabp/charts/gateway-web-public/templates/gateway-web-public-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-eshoponabp-gateway-web-public
spec:
  selector:
    matchLabels:
      app: my-eshoponabp-gateway-web-public
  template:
    metadata:
      labels:
        app: my-eshoponabp-gateway-web-public
    spec:
      containers:
      - image: ghcr.io/volosoft/eshoponabp/gateway-web-public:1.0.0
        imagePullPolicy: IfNotPresent
        name: my-eshoponabp-gateway-web-public
        ports:
        - name: http
          containerPort: 80
        - name: https
          containerPort: 443
        volumeMounts:
        - name: config-volume
          mountPath: /app/yarp.json
          subPath: yarp.json
        env:
        - name: App__SelfUrl
          value: "https://eshop-st-gateway-web-public"
        - name: "DOTNET_ENVIRONMENT"
          value: "Staging"
        - name: "Redis__Configuration"
          value: "eshop-st-redis"
        - name: "RabbitMQ__Connections__Default__HostName"
          value: "eshop-st-rabbitmq"  
        - name: "AuthServer__Authority"
          value: "http://eshop-st-authserver"
        - name: "AuthServer__RequireHttpsMetadata"
          value: "false"
        - name: "AuthServer__SwaggerClientId"
          value: "WebGateway_Swagger"
        - name: "AuthServer__SwaggerClientSecret"
          value: "1q2w3e*"
        - name: "ElasticSearch__Url"
          value: "eshop-st-elasticsearch"
      volumes:
      - name: config-volume
        configMap:
          name: my-eshoponabp-gateway-web-public-configmap
---
# Source: eshoponabp/charts/gateway-web/templates/gateway-web-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-eshoponabp-gateway-web
spec:
  selector:
    matchLabels:
      app: my-eshoponabp-gateway-web
  template:
    metadata:
      labels:
        app: my-eshoponabp-gateway-web
    spec:
      containers:
      - image: ghcr.io/volosoft/eshoponabp/gateway-web:1.0.0
        imagePullPolicy: IfNotPresent
        name: my-eshoponabp-gateway-web
        ports:
        - name: http
          containerPort: 80
        - name: https
          containerPort: 443
        volumeMounts:
        - name: config-volume
          mountPath: /app/yarp.json
          subPath: yarp.json
        env:
        - name: App__SelfUrl
          value: "https://eshop-st-gateway-web"
        - name: App__CorsOrigins
          value: "https://eshop-st-web"  
        - name: GlobalConfiguration__BaseUrl
          value: "http://eshop-st-gateway-public"
        - name: "DOTNET_ENVIRONMENT"
          value: "Staging"
        - name: "Redis__Configuration"
          value: "eshop-st-redis"
        - name: "RabbitMQ__Connections__Default__HostName"
          value: "eshop-st-rabbitmq"  
        - name: "AuthServer__Authority"
          value: "http://eshop-st-authserver"
        - name: "AuthServer__RequireHttpsMetadata"
          value: "false"
        - name: "AuthServer__SwaggerClientId"
          value: "WebGateway_Swagger"
        - name: "AuthServer__SwaggerClientSecret"
          value: "1q2w3e*"  
        - name: "ElasticSearch__Url"
          value: "eshop-st-elasticsearch"          
        - name: "StringEncryption__DefaultPassPhrase"
          value: "gsKnGZ041HLL4IM8"
      volumes:
      - name: config-volume
        configMap:
          name: my-eshoponabp-gateway-web-configmap
---
# Source: eshoponabp/charts/identity/templates/identity-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-eshoponabp-identity
spec:
  selector:
    matchLabels:
      app: my-eshoponabp-identity
  template:
    metadata:
      labels:
        app: my-eshoponabp-identity
    spec:
      containers:
      - image: ghcr.io/volosoft/eshoponabp/service-identity:1.0.0
        imagePullPolicy: IfNotPresent
        name: my-eshoponabp-identity
        ports:
        - name: http
          containerPort: 80
        - name: https
          containerPort: 443
        env:
        - name: App__SelfUrl
          value: "https://eshop-st-identity"
        - name: App__CorsOrigins
          value: "https://eshop-st-gateway-web,https://eshop-st-gateway-web-public"
        - name: "ConnectionStrings__IdentityService"
          value: Host=eshop-st-postgresdb;Port=5432;Database=EShopOnAbp_Identity;User ID=postgres;password=myPassw0rd;Pooling=false
        - name: "ConnectionStrings__AdministrationService"
          value: Host=eshop-st-postgresdb;Port=5432;Database=EShopOnAbp_Administration;User ID=postgres;password=myPassw0rd;Pooling=false
        - name: "DOTNET_ENVIRONMENT"
          value: "Staging"
        - name: "Redis__Configuration"
          value: "eshop-st-redis"
        - name: "RabbitMQ__Connections__Default__HostName"
          value: "eshop-st-rabbitmq"
        - name: "ElasticSearch__Url"
          value: "eshop-st-elasticsearch"   
        - name: "AuthServer__Authority"
          value: "http://eshop-st-authserver"
        - name: "AuthServer__RequireHttpsMetadata"
          value: "false"
        - name: "AuthServer__SwaggerClientId"
          value: "WebGateway_Swagger"
        - name: "AuthServer__SwaggerClientSecret"
          value: "1q2w3e*"  
        - name: "StringEncryption__DefaultPassPhrase"
          value: "gsKnGZ041HLL4IM8"             
        - name: "IdentityServerClients__Web__RootUrl"
          value: https://eshop-st-web/
        - name: "IdentityServerClients__PublicWeb__RootUrl"
          value: https://eshop-st-public-web/
        - name: "IdentityServerClients__PublicWebGateway__RootUrl"
          value: https://eshop-st-gateway-web-public/
        - name: "IdentityServerClients__WebGateway__RootUrl"
          value: https://eshop-st-gateway-web/  
        - name: "IdentityServerClients__IdentityService__RootUrl"
          value: https://eshop-st-identity/
        - name: "IdentityServerClients__AdministrationService__RootUrl"
          value: https://eshop-st-administration/
        - name: "IdentityServerClients__AccountService__RootUrl"
          value: https://eshop-st-authserver/
        - name: "IdentityServerClients__BasketService__RootUrl"
          value: https://eshop-st-basket/
        - name: "IdentityServerClients__CatalogService__RootUrl"
          value: https://eshop-st-catalog/
        - name: "IdentityServerClients__OrderingService__RootUrl"
          value: https://eshop-st-ordering/
        - name: "IdentityServerClients__PaymentService__RootUrl"
          value: https://eshop-st-payment/
---
# Source: eshoponabp/charts/ordering/templates/ordering-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-eshoponabp-ordering
spec:
  selector:
    matchLabels:
      app: my-eshoponabp-ordering
  template:
    metadata:
      labels:
        app: my-eshoponabp-ordering
    spec:
      containers:
      - image: ghcr.io/volosoft/eshoponabp/service-ordering:1.0.1
        imagePullPolicy: IfNotPresent
        name: my-eshoponabp-ordering
        ports:
        - name: http
          containerPort: 80
        - name: https
          containerPort: 443
        env:
        - name: App__SelfUrl
          value: "https://eshop-st-ordering"
        - name: App__CorsOrigins
          value: "https://eshop-st-gateway-web,https://eshop-st-gateway-web-public"
        - name: "ConnectionStrings__OrderingService"
          value: Host=eshop-st-postgresdb;Port=5432;Database=EShopOnAbp_Ordering;User ID=postgres;password=myPassw0rd;Pooling=false  
        - name: "ConnectionStrings__AdministrationService"
          value: Host=eshop-st-postgresdb;Port=5432;Database=EShopOnAbp_Administration;User ID=postgres;password=myPassw0rd;Pooling=false
        - name: "DOTNET_ENVIRONMENT"
          value: "Staging"
        - name: "Redis__Configuration"
          value: "eshop-st-redis"
        - name: "RabbitMQ__Connections__Default__HostName"
          value: "eshop-st-rabbitmq"
        - name: "ElasticSearch__Url"
          value: "eshop-st-elasticsearch"   
        - name: "AuthServer__Authority"
          value: "http://eshop-st-authserver"
        - name: "AuthServer__RequireHttpsMetadata"
          value: "false"
        - name: "AuthServer__SwaggerClientId"
          value: "WebGateway_Swagger"
        - name: "AuthServer__SwaggerClientSecret"
          value: "1q2w3e*"
        - name: "StringEncryption__DefaultPassPhrase"
          value: "gsKnGZ041HLL4IM8"
---
# Source: eshoponabp/charts/payment/templates/payment-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-eshoponabp-payment
spec:
  selector:
    matchLabels:
      app: my-eshoponabp-payment
  template:
    metadata:
      labels:
        app: my-eshoponabp-payment
    spec:
      containers:
      - image: ghcr.io/volosoft/eshoponabp/service-payment:1.0.0
        imagePullPolicy: IfNotPresent
        name: my-eshoponabp-payment
        ports:
        - name: http
          containerPort: 80
        - name: https
          containerPort: 443
        env:
        - name: App__SelfUrl
          value: "https://eshop-st-payment"
        - name: App__CorsOrigins
          value: "https://eshop-st-gateway-web,https://eshop-st-gateway-web-public"
        - name: "ConnectionStrings__PaymentService"
          value: Host=eshop-st-postgresdb;Port=5432;Database=EShopOnAbp_Payment;User ID=postgres;password=myPassw0rd;Pooling=false  
        - name: "ConnectionStrings__AdministrationService"
          value: Host=eshop-st-postgresdb;Port=5432;Database=EShopOnAbp_Administration;User ID=postgres;password=myPassw0rd;Pooling=false
        - name: "DOTNET_ENVIRONMENT"
          value: "Staging"
        - name: "Redis__Configuration"
          value: "eshop-st-redis"
        - name: "RabbitMQ__Connections__Default__HostName"
          value: "eshop-st-rabbitmq"
        - name: "ElasticSearch__Url"
          value: "eshop-st-elasticsearch"   
        - name: "AuthServer__Authority"
          value: "http://eshop-st-authserver"
        - name: "AuthServer__RequireHttpsMetadata"
          value: "false"
        - name: "AuthServer__SwaggerClientId"
          value: "WebGateway_Swagger"
        - name: "AuthServer__SwaggerClientSecret"
          value: "1q2w3e*"
        - name: "StringEncryption__DefaultPassPhrase"
          value: "gsKnGZ041HLL4IM8"
---
# Source: eshoponabp/charts/public-web/templates/public-web-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-eshoponabp-public-web
spec:
  selector:
    matchLabels:
      app: my-eshoponabp-public-web
  template:
    metadata:
      labels:
        app: my-eshoponabp-public-web
    spec:
      containers:
      - image: ghcr.io/volosoft/eshoponabp/app-publicweb:1.0.0
        imagePullPolicy: IfNotPresent
        name: my-eshoponabp-public-web
        ports:
        - name: http
          containerPort: 80
        - name: https
          containerPort: 443
        env:
        - name: App__SelfUrl
          value: "https://eshop-st-public-web" 
        - name: RemoteServices__Default__BaseUrl
          value: "http://eshop-st-gateway-web-public/"
        - name: "AuthServer__Authority"
          value: "http://eshop-st-authserver"
        - name: "AuthServer__RequireHttpsMetadata"
          value: "false"
        - name: "AuthServer__IsOnProd"
          value: "false"
        - name: "AuthServer__MetaAddress"
          value: "http://eshop-st-authserver"   
        - name: "DOTNET_ENVIRONMENT"
          value: "Staging"
        - name: "Redis__Configuration"
          value: "eshop-st-redis"     
        - name: "StringEncryption__DefaultPassPhrase"
          value: "gsKnGZ041HLL4IM8"
        - name: "RabbitMQ__Connections__Default__HostName"
          value: "eshop-st-rabbitmq"
        - name: "ElasticSearch__Url"
          value: "eshop-st-elasticsearch"
        - name: "ReverseProxy__Clusters__cluster1__Destinations__destination1__Address"
          value: "http://eshop-st-gateway-web-public/"
---
# Source: eshoponabp/charts/redis/templates/redis.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-eshoponabp-redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: my-eshoponabp-redis
  template:
    metadata:
      labels:
        app: my-eshoponabp-redis
    spec:
      containers:
        - image: redis:alpine
          name: my-eshoponabp-redis
          ports:
            - name: redis
              containerPort: 6379
---
# Source: eshoponabp/charts/web/templates/web-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-eshoponabp-web
spec:
  selector:
    matchLabels:
      app: my-eshoponabp-web
  template:
    metadata:
      labels:
        app: my-eshoponabp-web
    spec:
      containers:
      - image: ghcr.io/volosoft/eshoponabp/app-web:1.0.0
        imagePullPolicy: IfNotPresent
        name: my-eshoponabp-web
        ports:
        - name: http
          containerPort: 80
        - name: https
          containerPort: 443
        volumeMounts:
        - name: config-volume
          mountPath: /usr/share/nginx/html/dynamic-env.json
          subPath: dynamic-env.json
        env:
      volumes:
      - name: config-volume
        configMap:
          name: my-eshoponabp-web-configmap
---
# Source: eshoponabp/charts/mongodb/templates/mongodb-deployment.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: my-eshoponabp-mongodb
spec:
  serviceName: my-eshoponabp-mongodb
  replicas: 1
  selector:
    matchLabels:
      app: my-eshoponabp-mongodb
  template:
    metadata:
      labels:
        app: my-eshoponabp-mongodb
    spec:
      containers:
        - image: "mongo:4.2"
          name: my-eshoponabp-mongodb
          ports:
            - name: mongo
              containerPort: 27017
---
# Source: eshoponabp/charts/postgresdb/templates/postgres-deployment.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: my-eshoponabp-postgresdb
spec:
  serviceName: my-eshoponabp-postgresdb
  replicas: 1
  selector:
    matchLabels:
      app: my-eshoponabp-postgresdb
  template:
    metadata:
      labels:
        app: my-eshoponabp-postgresdb
    spec:
      containers:
        - image: "postgres:14.1"
          name: my-eshoponabp-postgresdb
          ports:
            - name: postgres
              containerPort: 5432
          env:
          - name: POSTGRES_PASSWORD
            value: "myPassw0rd"
---
# Source: eshoponabp/charts/rabbitmq/templates/rabbitmq.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: my-eshoponabp-rabbitmq
spec:
  serviceName: my-eshoponabp-rabbitmq
  replicas: 1
  selector:
    matchLabels:
      app: my-eshoponabp-rabbitmq
  template:
    metadata:
      labels:
        app: my-eshoponabp-rabbitmq
    spec:
      containers:
        - image: rabbitmq:management-alpine
          name: my-eshoponabp-rabbitmq
          ports:
            - name: http
              protocol: TCP
              containerPort: 15672
            - name: amqp
              protocol: TCP
              containerPort: 5672
---
# Source: eshoponabp/charts/administration/templates/administration-ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: my-eshoponabp-administration-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-buffer-size: 32k
    nginx.ingress.kubernetes.io/proxy-buffers-number: "8"
    cert-manager.io/cluster-issuer: letsencrypt
spec:
  ingressClassName: nginx
  tls:
  - hosts:
      - eshop-st-administration
    secretName: eshop-wildcard-tls
  rules:
  - host: "eshop-st-administration"
    http:
      paths:
      - path: /
      
        pathType: Prefix
        backend:
          service:
            name: my-eshoponabp-administration
            port:
              number: 80
---
# Source: eshoponabp/charts/authserver/templates/authserver-ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: my-eshoponabp-authserver-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-buffer-size: 32k
    nginx.ingress.kubernetes.io/proxy-buffers-number: "8"
    cert-manager.io/cluster-issuer: letsencrypt
spec:
  ingressClassName: nginx
  tls:
  - hosts:
      - eshop-st-authserver
    secretName: eshop-wildcard-tls
  rules:
  - host: "eshop-st-authserver"
    http:
      paths:
      - path: /
      
        pathType: Prefix
        backend:
          service:
            name: my-eshoponabp-authserver
            port:
              number: 80
---
# Source: eshoponabp/charts/basket/templates/basket-ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: my-eshoponabp-basket-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-buffer-size: 32k
    nginx.ingress.kubernetes.io/proxy-buffers-number: "8"
    cert-manager.io/cluster-issuer: letsencrypt
spec:
  ingressClassName: nginx
  tls:
  - hosts:
      - eshop-st-basket
    secretName: eshop-wildcard-tls
  rules:
  - host: "eshop-st-basket"
    http:
      paths:
      - path: /
      
        pathType: Prefix
        backend:
          service:
            name: my-eshoponabp-basket
            port:
              number: 80
---
# Source: eshoponabp/charts/catalog/templates/catalog-ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: my-eshoponabp-catalog-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-buffer-size: 32k
    nginx.ingress.kubernetes.io/proxy-buffers-number: "8"
    cert-manager.io/cluster-issuer: letsencrypt
spec:
  ingressClassName: nginx
  tls:
  - hosts:
      - eshop-st-catalog
    secretName: eshop-wildcard-tls
  rules:
  - host: "eshop-st-catalog"
    http:
      paths:
      - path: /
      
        pathType: Prefix
        backend:
          service:
            name: my-eshoponabp-catalog
            port:
              number: 80
---
# Source: eshoponabp/charts/gateway-web-public/templates/gateway-web-public-ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: my-eshoponabp-gateway-web-public-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-buffer-size: 32k
    nginx.ingress.kubernetes.io/proxy-buffers-number: "8"
    cert-manager.io/cluster-issuer: letsencrypt
spec:
  ingressClassName: nginx
  tls:
  - hosts:
      - eshop-st-gateway-web-public
    secretName: eshop-wildcard-tls
  rules:
  - host: "eshop-st-gateway-web-public"
    http:
      paths:
      - path: /
      
        pathType: Prefix
        backend:
          service:
            name: my-eshoponabp-gateway-web-public
            port:
              number: 80
---
# Source: eshoponabp/charts/gateway-web/templates/gateway-web-ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: my-eshoponabp-gateway-web-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-buffer-size: 32k
    nginx.ingress.kubernetes.io/proxy-buffers-number: "8"
    cert-manager.io/cluster-issuer: letsencrypt
spec:
  ingressClassName: nginx
  tls:
  - hosts:
      - eshop-st-gateway-web
    secretName: eshop-wildcard-tls
  rules:
  - host: "eshop-st-gateway-web"
    http:
      paths:
      - path: /
      
        pathType: Prefix
        backend:
          service:
            name: my-eshoponabp-gateway-web
            port:
              number: 80
---
# Source: eshoponabp/charts/identity/templates/identity-ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: my-eshoponabp-identity-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-buffer-size: 32k
    nginx.ingress.kubernetes.io/proxy-buffers-number: "8"
    cert-manager.io/cluster-issuer: letsencrypt
spec:
  ingressClassName: nginx
  tls:
  - hosts:
      - eshop-st-identity
    secretName: eshop-wildcard-tls
  rules:
  - host: "eshop-st-identity"
    http:
      paths:
      - path: /
      
        pathType: Prefix
        backend:
          service:
            name: my-eshoponabp-identity
            port:
              number: 80
---
# Source: eshoponabp/charts/ordering/templates/ordering-ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: my-eshoponabp-ordering-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-buffer-size: 32k
    nginx.ingress.kubernetes.io/proxy-buffers-number: "8"
    cert-manager.io/cluster-issuer: letsencrypt
spec:
  ingressClassName: nginx
  tls:
  - hosts:
      - eshop-st-ordering
    secretName: eshop-wildcard-tls
  rules:
  - host: "eshop-st-ordering"
    http:
      paths:
      - path: /
      
        pathType: Prefix
        backend:
          service:
            name: my-eshoponabp-ordering
            port:
              number: 80
---
# Source: eshoponabp/charts/payment/templates/payment-ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: my-eshoponabp-payment-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-buffer-size: 32k
    nginx.ingress.kubernetes.io/proxy-buffers-number: "8"
    cert-manager.io/cluster-issuer: letsencrypt
spec:
  ingressClassName: nginx
  tls:
  - hosts:
      - eshop-st-payment
    secretName: eshop-wildcard-tls
  rules:
  - host: "eshop-st-payment"
    http:
      paths:
      - path: /
      
        pathType: Prefix
        backend:
          service:
            name: my-eshoponabp-payment
            port:
              number: 80
---
# Source: eshoponabp/charts/public-web/templates/public-web-ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: my-eshoponabp-public-web-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-buffer-size: 32k
    nginx.ingress.kubernetes.io/proxy-buffers-number: "8"
    cert-manager.io/cluster-issuer: letsencrypt
spec:
  ingressClassName: nginx
  tls:
  - hosts:
      - eshop-st-public-web
    secretName: eshop-wildcard-tls
  rules:
  - host: "eshop-st-public-web"
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: my-eshoponabp-public-web
            port:
              number: 80
---
# Source: eshoponabp/charts/web/templates/web-ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: my-eshoponabp-web-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-buffer-size: 32k
    nginx.ingress.kubernetes.io/proxy-buffers-number: "8"
    cert-manager.io/cluster-issuer: letsencrypt
spec:
  ingressClassName: nginx
  tls:
  - hosts:
      - eshop-st-web
    secretName: eshop-wildcard-tls
  rules:
  - host: "eshop-st-web"
    http:
      paths:
      - path: /
      
        pathType: Prefix
        backend:
          service:
            name: my-eshoponabp-web
            port:
              number: 80
