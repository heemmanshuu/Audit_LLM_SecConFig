---
# Source: license-proxyserver-addon-manager/templates/k8s/addon.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: license-proxyserver-addon
---
# Source: license-proxyserver-addon-manager/templates/k8s/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: license-proxyserver-addon-manager
  namespace: license-proxyserver-addon
---
# Source: license-proxyserver-addon-manager/templates/k8s/addon.yaml
apiVersion: v1
kind: Secret
metadata:
  name: license-issuer-token
  namespace: license-proxyserver-addon
type: Opaque
stringData:
  token: ""
---
# Source: license-proxyserver-addon-manager/templates/k8s/cluster_role.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: license-proxyserver-addon-manager
rules:
  - apiGroups: [""]
    resources: ["configmaps", "events", "namespace", "secrets"]
    verbs: ["get", "list", "watch", "create", "update", "delete", "deletecollection", "patch"]
  - apiGroups: ["coordination.k8s.io"]
    resources: ["leases"]
    verbs: ["get", "list", "watch", "create", "update", "patch"]
  - apiGroups: ["rbac.authorization.k8s.io"]
    resources: ["roles", "rolebindings"]
    verbs: ["get", "list", "watch", "create", "update", "delete"]
  - apiGroups: ["authorization.k8s.io"]
    resources: ["subjectaccessreviews"]
    verbs: ["get", "create"]
  - apiGroups: ["certificates.k8s.io"]
    resources: ["certificatesigningrequests", "certificatesigningrequests/approval"]
    verbs: ["get", "list", "watch", "create", "update"]
  - apiGroups: ["certificates.k8s.io"]
    resources: ["signers"]
    verbs: ["approve"]
  - apiGroups: ["cluster.open-cluster-management.io"]
    resources: ["managedclusters"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["work.open-cluster-management.io"]
    resources: ["manifestworks"]
    verbs: ["create", "update", "get", "list", "watch", "delete", "deletecollection", "patch"]
  - apiGroups: ["addon.open-cluster-management.io"]
    resources: ["managedclusteraddons/finalizers"]
    verbs: ["update"]
  - apiGroups: [ "addon.open-cluster-management.io" ]
    resources: [ "clustermanagementaddons/finalizers" ]
    verbs: [ "update" ]
  - apiGroups: ["addon.open-cluster-management.io"]
    resources: ["clustermanagementaddons/status"]
    verbs: ["update", "patch"]
  - apiGroups: ["addon.open-cluster-management.io"]
    resources: ["clustermanagementaddons"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["addon.open-cluster-management.io"]
    resources: ["managedclusteraddons"]
    verbs: ["get", "list", "watch", "create", "update", "delete"]
  - apiGroups: ["addon.open-cluster-management.io"]
    resources: ["managedclusteraddons/status"]
    verbs: ["update", "patch"]
---
# Source: license-proxyserver-addon-manager/templates/k8s/cluster_role_binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: license-proxyserver-addon-manager
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: license-proxyserver-addon-manager
subjects:
  - kind: ServiceAccount
    name: license-proxyserver-addon-manager
    namespace: license-proxyserver-addon
---
# Source: license-proxyserver-addon-manager/templates/deployment.yaml
kind: Deployment
apiVersion: apps/v1
metadata:
  name: license-proxyserver-addon-manager
  namespace: license-proxyserver-addon
  labels:
    app: license-proxyserver-addon-manager
spec:
  replicas: 1
  selector:
    matchLabels:
      app: license-proxyserver-addon-manager
  template:
    metadata:
      labels:
        app: license-proxyserver-addon-manager
    spec:
      serviceAccount: license-proxyserver-addon-manager
      automountServiceAccountToken: true
      containers:
        - name: manager
          image: ghcr.io/appscode/license-proxyserver:v0.0.8
          imagePullPolicy: Always
          args:
            - manager
            - --registryFQDN=ghcr.io
            - --baseURL=
            - --token=$(PLATFORM_API_TOKEN)
          env:
            - name: PLATFORM_API_TOKEN
              valueFrom:
                secretKeyRef:
                  name: license-issuer-token
                  key: token
          volumeMounts:
      volumes:
---
# Source: license-proxyserver-addon-manager/templates/k8s/addon.yaml
apiVersion: addon.open-cluster-management.io/v1alpha1
kind: ClusterManagementAddOn
metadata:
  name: license-proxyserver
  annotations:
    addon.open-cluster-management.io/lifecycle: "addon-manager"
spec:
  addOnMeta:
    displayName: license-proxyserver-addon-manager
    description: AppsCode License Proxy Server Addon Manager
  installStrategy:
    type: Placements
    placements:
      - name: global
        namespace: license-proxyserver-addon
  supportedConfigs:
    - group: ""
      resource: secrets
      defaultConfig:
        name: license-proxyserver-config
        namespace: license-proxyserver-addon
---
# Source: license-proxyserver-addon-manager/templates/k8s/addon.yaml
apiVersion: cluster.open-cluster-management.io/v1beta2
kind: ManagedClusterSetBinding
metadata:
  name: global
  namespace: license-proxyserver-addon
spec:
  clusterSet: global
---
# Source: license-proxyserver-addon-manager/templates/k8s/addon.yaml
apiVersion: work.open-cluster-management.io/v1alpha1
kind: ManifestWorkReplicaSet
metadata:
  name: license-addon-agent-roles
  namespace: license-proxyserver-addon
spec:
  placementRefs:
    - name: global
  manifestWorkTemplate:
    # deleteOption:
    #   propagationPolicy: SelectivelyOrphan
    #   selectivelyOrphans:
    #     orphaningRules:
    #       - group: ''
    #         name: ocm-ns
    #         namespace: ''
    #         resource: Namespace
    # manifestConfigs:
    #   - feedbackRules:
    #       - jsonPaths:
    #           - name: lastScheduleTime
    #             path: .status.lastScheduleTime
    #           - name: lastSuccessfulTime
    #             path: .status.lastSuccessfulTime
    #         type: JSONPaths
    #     resourceIdentifier:
    #       group: batch
    #       name: sync-cronjob
    #       namespace: ocm-ns
    #       resource: cronjobs
    workload:
      manifests:
        - apiVersion: rbac.authorization.k8s.io/v1
          kind: ClusterRole
          metadata:
            name: open-cluster-management:klusterlet-work:license-syncer
            labels:
              open-cluster-management.io/aggregate-to-work: "true"  # with this label, the clusterRole will be selected to aggregate
          rules:
            # Get cluster id
            - apiGroups:
              - ""
              resources:
              - namespaces
              verbs: ["get"]
            # ocm cluster claim
            - apiGroups:
              - cluster.open-cluster-management.io
              resources:
              - clusterclaims
              verbs: ["get", "create", "update"]
            # ocm cluster name detection
            - apiGroups:
              - operator.open-cluster-management.io
              resources:
              - klusterlets
              verbs: ["get"]
---
# Source: license-proxyserver-addon-manager/templates/k8s/addon.yaml
apiVersion: cluster.open-cluster-management.io/v1beta1
kind: Placement
metadata:
  name: global
  namespace: license-proxyserver-addon
spec:
  clusterSets:
    - global
