---
# Source: kubedb-provider-azure/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-kubedb-provider-azure
  namespace: default
  labels:
    helm.sh/chart: kubedb-provider-azure-v2024.8.21
    app.kubernetes.io/name: kubedb-provider-azure
    app.kubernetes.io/instance: my-kubedb-provider-azure
    app.kubernetes.io/version: "v0.9.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: kubedb-provider-azure/templates/cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-kubedb-provider-azure
  labels:
    helm.sh/chart: kubedb-provider-azure-v2024.8.21
    app.kubernetes.io/name: kubedb-provider-azure
    app.kubernetes.io/instance: my-kubedb-provider-azure
    app.kubernetes.io/version: "v0.9.0"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - azure.kubedb.com
  - cache.azure.kubedb.com
  - cosmosdb.azure.kubedb.com
  - dbformariadb.azure.kubedb.com
  - dbformysql.azure.kubedb.com
  - dbforpostgresql.azure.kubedb.com
  - keyvault.azure.kubedb.com
  - network.azure.kubedb.com
  - storage.azure.kubedb.com
  - sql.azure.kubedb.com
  - authorization.azure.kubedb.com
  resources: ["*"]
  verbs: ["*"]
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs: ["*"]
- apiGroups: [""]
  resources:
    - nodes
    - secrets
  verbs: ["create", "list", "watch", "get"]
- apiGroups: [""]
  resources:
    - serviceaccounts
  verbs: ["create", "get", "patch", "list", "watch"]
- apiGroups:
    - ""
  resources:
    - events
  verbs: ["*"]
---
# Source: kubedb-provider-azure/templates/cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-kubedb-provider-azure
  labels:
    helm.sh/chart: kubedb-provider-azure-v2024.8.21
    app.kubernetes.io/name: kubedb-provider-azure
    app.kubernetes.io/instance: my-kubedb-provider-azure
    app.kubernetes.io/version: "v0.9.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-kubedb-provider-azure
subjects:
- kind: ServiceAccount
  name: my-kubedb-provider-azure
  namespace: default
---
# Source: kubedb-provider-azure/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-kubedb-provider-azure
  namespace: default
  labels:
    helm.sh/chart: kubedb-provider-azure-v2024.8.21
    app.kubernetes.io/name: kubedb-provider-azure
    app.kubernetes.io/instance: my-kubedb-provider-azure
    app.kubernetes.io/version: "v0.9.0"
    app.kubernetes.io/managed-by: Helm
spec:
  ports:
  # Port used to expose admission webhook apiserver
  - name: metrics
    port: 8080
    targetPort: 8080
  - name: webhook
    port: 443
    targetPort: 9443
  selector:
    app.kubernetes.io/name: kubedb-provider-azure
    app.kubernetes.io/instance: my-kubedb-provider-azure
---
# Source: kubedb-provider-azure/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-kubedb-provider-azure
  namespace: default
  labels:
    helm.sh/chart: kubedb-provider-azure-v2024.8.21
    app.kubernetes.io/name: kubedb-provider-azure
    app.kubernetes.io/instance: my-kubedb-provider-azure
    app.kubernetes.io/version: "v0.9.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kubedb-provider-azure
      app.kubernetes.io/instance: my-kubedb-provider-azure
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kubedb-provider-azure
        app.kubernetes.io/instance: my-kubedb-provider-azure
    spec:
      
      serviceAccountName: my-kubedb-provider-azure
      securityContext:
        {}
      containers:
        - name: kubedb-provider-azure
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 65534
            seccompProfile:
              type: RuntimeDefault
          image: ghcr.io/kubedb/provider-azure:v0.9.0
          imagePullPolicy: Always
          args:
          - --debug
          ports:
          - containerPort: 8080
            name: metrics
            protocol: TCP
          - containerPort: 9443
            name: webhook
            protocol: TCP
          # ports:
          #   - name: metrics
          #     containerPort: 8080
          #     protocol: TCP
          #   - name: http
          #     containerPort: 8081
          #     protocol: TCP
          # livenessProbe:
          #   httpGet:
          #     path: /healthz
          #     port: http
          # readinessProbe:
          #   httpGet:
          #     path: /readyz
          #     port: http
          resources:
            {}
          volumeMounts:
            - name: tmp
              mountPath: /tmp
      volumes:
        - name: tmp
          emptyDir: {}
---
# Source: kubedb-provider-azure/templates/provider-config.yaml
apiVersion: azure.kubedb.com/v1beta1
kind: ProviderConfig
metadata:
  name: my-kubedb-provider-azure
spec:
  credentials:
    source: Secret
    secretRef:
      namespace: capi-cluster
      name: azure-credential
      key: credential_json
