---
# Source: ts3-manager/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-ts3-manager
  labels:
    app.kubernetes.io/name: ts3-manager-0.0.3
    app: ts3-manager-0.0.3
    helm.sh/chart: ts3-manager-0.0.3
    app.kubernetes.io/name: ts3-manager
    app.kubernetes.io/instance: my-ts3-manager
    app: ts3-manager
    app.kubernetes.io/version: "v2.2.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: ts3-manager/templates/secret-env.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-ts3-manager-secret-env
stringData:
  {}
---
# Source: ts3-manager/templates/configmap-env.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-ts3-manager-env
data:
  {}
---
# Source: ts3-manager/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-ts3-manager
  labels:
    app.kubernetes.io/name: ts3-manager-0.0.3
    app: ts3-manager-0.0.3
    helm.sh/chart: ts3-manager-0.0.3
    app.kubernetes.io/name: ts3-manager
    app.kubernetes.io/instance: my-ts3-manager
    app: ts3-manager
    app.kubernetes.io/version: "v2.2.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: 8080
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: ts3-manager
    app.kubernetes.io/instance: my-ts3-manager
    app: ts3-manager
---
# Source: ts3-manager/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-ts3-manager
  labels:
    app.kubernetes.io/name: ts3-manager-0.0.3
    app: ts3-manager-0.0.3
    helm.sh/chart: ts3-manager-0.0.3
    app.kubernetes.io/name: ts3-manager
    app.kubernetes.io/instance: my-ts3-manager
    app: ts3-manager
    app.kubernetes.io/version: "v2.2.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 50%
      maxUnavailable: 50%
  selector:
    matchLabels:
      app.kubernetes.io/name: ts3-manager
      app.kubernetes.io/instance: my-ts3-manager
      app: ts3-manager
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ts3-manager
        app.kubernetes.io/instance: my-ts3-manager
        app: ts3-manager
        version: "v2.2.0"
      annotations:
    spec:
      automountServiceAccountToken: true
      terminationGracePeriodSeconds: 30
      serviceAccountName: my-ts3-manager
      automountServiceAccountToken: true
      securityContext:
        fsGroup: 2000
      containers:
        - name: ts3-manager
          securityContext:
            readOnlyRootFilesystem: false
            runAsNonRoot: false
            runAsUser: 0
          image: "joni1802/ts3-manager:v2.2.0"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          envFrom:
            - configMapRef:
                name: my-ts3-manager-env
            - secretRef:
                name: my-ts3-manager-secret-env
          env:
            - name: BASE_URL
              value: "https://domain.local"
            - name: APPLICATION_NAME
              value: "my-ts3-manager"
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 5
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 4
          
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 15
            periodSeconds: 3
            timeoutSeconds: 2
            successThreshold: 1
            failureThreshold: 4
          
          resources:
            {}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              podAffinityTerm:
                topologyKey: kubernetes.io/hostname
                labelSelector:
                  matchExpressions:
                    - key: app.kubernetes.io/name
                      operator: In
                      values:
                        - "my-ts3-manager"
---
# Source: ts3-manager/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "my-ts3-manager-test-connection"
  labels:
    app.kubernetes.io/name: ts3-manager-0.0.3
    app: ts3-manager-0.0.3
    helm.sh/chart: ts3-manager-0.0.3
    app.kubernetes.io/name: ts3-manager
    app.kubernetes.io/instance: my-ts3-manager
    app: ts3-manager
    app.kubernetes.io/version: "v2.2.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test-success
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['my-ts3-manager:8080']
  restartPolicy: Never
