---
# Source: managed-serviceaccount-manager/templates/k8s/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: managed-serviceaccount-manager
  namespace: default
---
# Source: managed-serviceaccount-manager/templates/k8s/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: open-cluster-management:managed-serviceaccount:addon-manager
rules:
  - apiGroups:
      - cluster.open-cluster-management.io
    resources:
      - managedclusters
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - addon.open-cluster-management.io
    resources:
      - clustermanagementaddons
    verbs:
      - get
      - list
      - watch
      - patch
  - apiGroups:
      - addon.open-cluster-management.io
    resources:
      - clustermanagementaddons/finalizers
    verbs:
      - update
  - apiGroups:
      - addon.open-cluster-management.io
    resources:
      - managedclusteraddons
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - addon.open-cluster-management.io
    resources:
      - managedclusteraddons/status
    verbs:
      - update
      - patch
  - apiGroups:
      - addon.open-cluster-management.io
    resources:
      - managedclusteraddons/finalizers
    verbs:
      - update
  - apiGroups:
      - addon.open-cluster-management.io
    resources:
      - addondeploymentconfigs
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - authentication.open-cluster-management.io
    resources:
      - managedserviceaccounts
      - managedserviceaccounts/status
    verbs:
      - get
      - list
      - watch
      - update
      - patch
  - apiGroups:
      - certificates.k8s.io
    resources:
      - certificatesigningrequests
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - certificates.k8s.io
    resources:
      - certificatesigningrequests/approval
      - certificatesigningrequests/status
    verbs:
      - update
  - apiGroups:
      - certificates.k8s.io
    resources:
      - signers
    verbs:
      - approve
      - sign
    resourceNames:
      - kubernetes.io/kube-apiserver-client
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - get
      - list
      - watch
      - create
      - update
  - apiGroups:
      - ""
    resources:
      - configmaps
      - events
    verbs:
      - get
      - create
      - update
      - patch
  - apiGroups:
      - rbac.authorization.k8s.io
    resources:
      - roles
      - rolebindings
    verbs:
      - get
      - create
      - update
  - apiGroups:
      - work.open-cluster-management.io
    resources:
      - manifestworks
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
---
# Source: managed-serviceaccount-manager/templates/k8s/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: open-cluster-management:managed-serviceaccount:addon-manager
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: open-cluster-management:managed-serviceaccount:addon-manager
subjects:
  - kind: ServiceAccount
    name: managed-serviceaccount-manager
    namespace: default
---
# Source: managed-serviceaccount-manager/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: managed-serviceaccount-manager
  namespace: default
  labels:
    helm.sh/chart: managed-serviceaccount-manager-v2024.7.10
    app.kubernetes.io/name: managed-serviceaccount-manager
    app.kubernetes.io/instance: my-managed-serviceaccount-manager
    app.kubernetes.io/version: "v0.6.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: managed-serviceaccount-manager
      app.kubernetes.io/instance: my-managed-serviceaccount-manager
  template:
    metadata:
      labels:
        helm.sh/chart: managed-serviceaccount-manager-v2024.7.10
        app.kubernetes.io/name: managed-serviceaccount-manager
        app.kubernetes.io/instance: my-managed-serviceaccount-manager
        app.kubernetes.io/version: "v0.6.0"
        app.kubernetes.io/managed-by: Helm
    spec:
      serviceAccount: managed-serviceaccount-manager
      automountServiceAccountToken: true
      containers:
        - name: manager
          image: ghcr.io/kluster-manager/managed-serviceaccount:v0.6.0
          imagePullPolicy: Always
          command:
            - /manager
          args:
            - --agent-image-name=ghcr.io/kluster-manager/managed-serviceaccount:v0.6.0
            - --feature-gates=EphemeralIdentity=false
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: NAMESPACE
              value: default
          volumeMounts:
      volumes:
---
# Source: managed-serviceaccount-manager/templates/k8s/addon.yaml
apiVersion: addon.open-cluster-management.io/v1alpha1
kind: ClusterManagementAddOn
metadata:
  name: managed-serviceaccount
  annotations:
    addon.open-cluster-management.io/lifecycle: "addon-manager"
spec:
  addOnMeta:
    displayName: managed-serviceaccount-manager
    description: A Helm chart for Managed ServiceAccount Addon Manager
  installStrategy:
    type: Placements
    placements:
      - name: global
        namespace: default
---
# Source: managed-serviceaccount-manager/templates/k8s/addon.yaml
apiVersion: cluster.open-cluster-management.io/v1beta2
kind: ManagedClusterSetBinding
metadata:
  name: global
  namespace: default
spec:
  clusterSet: global
---
# Source: managed-serviceaccount-manager/templates/k8s/addon.yaml
apiVersion: cluster.open-cluster-management.io/v1beta1
kind: Placement
metadata:
  name: global
  namespace: default
spec:
  clusterSets:
    - global
  tolerations:
    - key: cluster.open-cluster-management.io/unreachable
      operator: Exists
      tolerationSeconds: 604800
    - key: cluster.open-cluster-management.io/unavailable
      operator: Exists
      tolerationSeconds: 604800
