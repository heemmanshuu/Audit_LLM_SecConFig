---
# Source: kubevault-webhook-server/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-kubevault-webhook-server
  namespace: default
  labels:
    helm.sh/chart: kubevault-webhook-server-v0.18.0
    app.kubernetes.io/name: kubevault-webhook-server
    app.kubernetes.io/instance: my-kubevault-webhook-server
    app.kubernetes.io/version: "v0.18.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: kubevault-webhook-server/templates/apiregistration.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-kubevault-webhook-server-apiserver-cert
  namespace: default
  labels:
    helm.sh/chart: kubevault-webhook-server-v0.18.0
    app.kubernetes.io/name: kubevault-webhook-server
    app.kubernetes.io/instance: my-kubevault-webhook-server
    app.kubernetes.io/version: "v0.18.0"
    app.kubernetes.io/managed-by: Helm
type: kubernetes.io/tls
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCakNDQWU2Z0F3SUJBZ0lSQU9sVjdLU1R5akhzeUpRcUxwZGZQL1F3RFFZSktvWklodmNOQVFFTEJRQXcKRFRFTE1Ba0dBMVVFQXhNQ1kyRXdIaGNOTWpRd09URTJNRGcxTURFeFdoY05NelF3T1RFME1EZzFNREV4V2pBTgpNUXN3Q1FZRFZRUURFd0pqWVRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTTI1CmYyQ0h3STg3M24zUmh5TzhqNk9tdEYwNFFLN213S2xINjFNSlM1c3ZNV2pjN3B2dXdGQjd6b21nTDArSnd6NTgKL0pVVVRodFl5SFdXYTdyNk9xUlpxRytycldwdGZpSzRkQm1WT0N2LzNURm5NbURIOWlJS2h0QnNUNThyWk8zcwphQVNhT1lFWTBFNFVwT09YeGR6NDdvUHNOMlBwM0k3WXl5Mm02cjREMmlIclRLLytOQVAwZ1gzRUROV2dOUy9WCllFRGZsY2NTTk4vNlN3OVZ3MU5BeUZOSWRFQ0djZFZvSXZqV1RnNjRrZU1rOE9na1lHSVdjMVhEQWxMclFKZlUKQjBSK0RZMEVSaUpibUhoSGdvRS8xaVYyV0ZmRVdpTFU2cUdybWFYNzFFN2NwOXdJSFM0WXZ4cWtjdk1HM1lTOAplSk0rR0xESDRuYlNlMEpvU2VFQ0F3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trTUIwR0ExVWRKUVFXCk1CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVcKQkJRaXUwMzAyOXBURWVHdXZkVkQwd3QxQmwraHd6QU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFwTDBQcGZBRwozU1FvRTRVSG0rbnJ2cHhDVFdpc3Q0MCtOSWtYdGlaRXJBb2hPUDVLWDE3WDJqOXo5WVRMMUh4NzlNK0NNZ21jCmFmV3ZmMGtwcGhTd1hPbFZKU1A5WmQwamtxVi9uMVg4TU54MXVXbkJuM1pBOEh6bFp0Rk90THQ2enJHSnBuc28KSVRsaGVIVGFtcnlZTDREa3d2TEJWL0Y5RW5jZEpyZjdXaTRVZU5MYVdkWUhXQW1nRFM0dVJsK0hoOUZkNW9ITQpNQVRiYTIzSlVRdXBBd0FYOHZsL09qWXBiS21RbEt1R2E4ZFNxRThubGEveFc1dGkzRUwxMVlTbHpsQm45bW1jCkpBMWFKMVNEdldpWHhROGUxNDA4N3pkblBXc29JZVBjWng5TDJEY3VBVGRnNVFmZURwQWpDaGNRY2d5aWRUeVgKallPV0tCQTZGeDhDQmc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURlRENDQW1DZ0F3SUJBZ0lRWDE0OFhsdWI3cVZUMU4wK29NREkxREFOQmdrcWhraUc5dzBCQVFzRkFEQU4KTVFzd0NRWURWUVFERXdKallUQWVGdzB5TkRBNU1UWXdPRFV3TVRKYUZ3MHpOREE1TVRRd09EVXdNVEphTUNZeApKREFpQmdOVkJBTVRHMjE1TFd0MVltVjJZWFZzZEMxM1pXSm9iMjlyTFhObGNuWmxjakNDQVNJd0RRWUpLb1pJCmh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTHp6NzNqRVNyV0l1bVdIU3czWmdlQmlmRTlLblR1RVByVXUKK1ZhKy9PSEx0QlBRRk9lZzN1T2VvWml5RWo2bkw2VG5XdmRFcElydEIwT3JzMFArQWppdjBZS0Y3ZDBKN2RRNApIL1ZONVh4THBkclIvNDY4TlhPMU1ybEJWZmdNNW5MTUNsdWJiM1NLWlQ2dGZ3em16a2F1VGY2Vy9nM3BOdUp2CjNuUXJibmNFWGdoVEhhNDdqYys3Um1GZE9UUjdBNHpwQ3VSZSt2eUo0dVVsaWVxOWUwYUNTcytPblFKYkdEdkcKYThoeE9IMGVBdWRTa1JGTSt5aHEyTmQvTmZsK1NDQVZiYytHSm1odGowM3RFcUd5cmwxREt6TDV6a3huVEwvNQpFaDZvU2hhazZIOGNDTG1qNnhFd2JMN3dwWVVOSnlldzNmcUNUQU1TVXE1cW5tZVpxbjBDQXdFQUFhT0J1akNCCnR6QU9CZ05WSFE4QkFmOEVCQU1DQmFBd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUMKTUF3R0ExVWRFd0VCL3dRQ01BQXdId1lEVlIwakJCZ3dGb0FVSXJ0TjlOdmFVeEhocnIzVlE5TUxkUVpmb2NNdwpWd1lEVlIwUkJGQXdUb0lqYlhrdGEzVmlaWFpoZFd4MExYZGxZbWh2YjJzdGMyVnlkbVZ5TG1SbFptRjFiSFNDCkoyMTVMV3QxWW1WMllYVnNkQzEzWldKb2IyOXJMWE5sY25abGNpNWtaV1poZFd4MExuTjJZekFOQmdrcWhraUcKOXcwQkFRc0ZBQU9DQVFFQXRXUHBtaFUvUk1maDRTMUp0SWNlL3BJdEN6RnZvUkN1VGFWMkxpblp6QjRYdFRpSQpjY1lvdmhsejFxb1BjQ0ttNFREOGgwRzkrL1N3eEdYdXdLYldmQnd5RFFjZ2lVRWdOOFdCNnJ5NFV4WUlqMjl0ClpHaUwxaFRKL01JQ0Fza0VVS2x2Qk85WEpZNnZBWDg4TXdYT0k2aEVKVkpTaXppVnd5UDcrQVRnQVZlTXlZVlkKckJOYWlpbUFCcTlTcVgrSWFBY0JWMDhubXMyeE53ZCtvWXl2Nml2dWVxQzlXUG9rbUpPbldKeFNtdGFQZ2dTUApmVGNicERuUldpSkJwU2RqUnl6WHpXNjFINGVzb0JwUUFTaTZWd3QwRjZUbHhhUUVxMWg5REZBcGZNMnJraVB0CnE0amhlRkRhRVZXbktMVU9uNm1oZEJadzBWaTEycUJpbjd2KzhnPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdlBQdmVNUkt0WWk2WllkTERkbUI0R0o4VDBxZE80USt0Uzc1VnI3ODRjdTBFOUFVCjU2RGU0NTZobUxJU1BxY3ZwT2RhOTBTa2l1MEhRNnV6US80Q09LL1Jnb1h0M1FudDFEZ2Y5VTNsZkV1bDJ0SC8KanJ3MWM3VXl1VUZWK0F6bWNzd0tXNXR2ZElwbFBxMS9ET2JPUnE1Ti9wYitEZWsyNG0vZWRDdHVkd1JlQ0ZNZApyanVOejd0R1lWMDVOSHNEak9rSzVGNzYvSW5pNVNXSjZyMTdSb0pLejQ2ZEFsc1lPOFpyeUhFNGZSNEM1MUtSCkVVejdLR3JZMTM4MStYNUlJQlZ0ejRZbWFHMlBUZTBTb2JLdVhVTXJNdm5PVEdkTXYva1NIcWhLRnFUb2Z4d0kKdWFQckVUQnN2dkNsaFEwbko3RGQrb0pNQXhKU3JtcWVaNW1xZlFJREFRQUJBb0lCQUNlMzN3Nnp0RUNValJucQpab3h5dkNvK2lZTGhYRXUyY0xnRk44UlVRVFAxYmRUOFdHaVlHRUlnaGpkaXR4TVVjWjlvUW1iWHR2Njg5Rm4xCkxhbU5LMHBmS3RzVTYvc2Fxek9BMkxibnVPVjN3VlZON3pwQnRicXN6QXpFL3gwMUdQdm9pQVRabDRRWDAxQnAKaDl0ZWFOM1NwZkp1S3RraHZMZThiRFpmS3NrNWRVeTIyYWR4Zk5SSlQ1b2c2RVdpL1cvVDNZWXViZEtxU0xnNQp1WXMxWHZQSzBJeUp2QTNoajZhaFpXeTBYSUIydXdzZXJuRmVyQWpwNFhLTXNYYnJ5UkF2cFFEb0oyUDdwTDdjClZEMnN4cStvNlJQNTc5UTdpMnFhbmx1eDh5VVJ2NU0yWnMvSlhYbTl2aXRVaDVOczF0eC9WZmdtRjBBU0E0b00Kb1hHUEdnRUNnWUVBMW9qcGpEd1N3M2xrU3BnUmlyRkRYSmhMb083U29OL25qL24wSXY4OS90T0pReEdzZGNMWApiSEFOeXpIeWZrS1k0YWRjL1hBNUJqWlJCcTFLSmdjYlk3UmttTGJneGE0dkZtVHpCdDMwcjB3eWZFZEZhbmlFCkc4bnFPUmIyNFJvTUNXaGNvUkdrWVdQVEVXTFJsOHFUa1g2TnBHUnNOTXhRV3RjN0JHUUh5S2tDZ1lFQTRYazkKY2ZYM1dydFJReFRPd2svZUdWL3RKYThvRSt3RTAxRnR1aFNNclZhTGlGa3grWjJEdDRsbHZ2Tmdock41QmR4NApoVnRDWTJrNFFOWmxKNnA3M2tCcWtQOXRCMDJwcFZCdFdoTFFEV2VZWm00dENPRU9UM2pGUGJVSHFDL3hyN2l1ClJWa3o2eVN1clkwaFlOVW5DSTJyRHUzZkdKWUhMYnJ2d252NlU3VUNnWUEyR1FRN2xwSnN0Rm16N2JET3RuQjAKRXZ0UE02bnRZMGl6SjZhR2hMS1BaYXhCTzEydnZGZ3lRZmRZZTluWU9OYndZQkcwM3UyaVFXUWhPT1Z2dlc4TQpyMXFHbitjQ01qQXhoM2M1RGhNN2VRMXFCVmJkeUZJWDU4eW1aTUlRZFU3L3VFOVRWbTJMR1c4Si9VODQ1WjVjCm0vci9yMHNSN1V0OS9MUW5JVXBOTVFLQmdDRVJzeDFmd2VPZ3pZNVZJdTRFNE1JLyszd25jRzFibEdtWjY4bjYKOFpjS3RuUk5BTE5ua3NYOGROdkl2a09EVnlDdzhVdzkwa0xhVDlIU29BdHRTYldUSlE0WEtGcUYzWGZOai94QgovaG01TS9UeCs5RHRrVGUrc3M4V0dnVms0c0d2Q0lCTFVQNFA1ejYxRUV3dmR3WWVJUlNUZHNFWVgvMHBDYmt3CmpjcHhBb0dCQUw1SDdVaXFFa3M5OGs0bm1XRnV0NW5qeE1mSWtJcXpsaDJjeXl5VVJrZjZBdktlR2d4UUlURzEKRnFoUjNxVzFyZ1JIeEVZN2ZxdkpiNktqQ1FCQkNrSDJGQkdtT2E0eW9qODI5SndBb3BhNFVvMTVaUFh1dDMwNgpWaW1mRGppUThVRTdEUW5ZTEJ2aytQTEoxZlRZc1pJYlBkSXdDK0w0U2hwblU3WkU5empwCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: kubevault-webhook-server/templates/cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-kubevault-webhook-server
  labels:
    helm.sh/chart: kubevault-webhook-server-v0.18.0
    app.kubernetes.io/name: kubevault-webhook-server
    app.kubernetes.io/instance: my-kubevault-webhook-server
    app.kubernetes.io/version: "v0.18.0"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs: ["*"]
- apiGroups:
  - apiregistration.k8s.io
  resources:
  - apiservices
  verbs: ["get"]
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - mutatingwebhookconfigurations
  - validatingwebhookconfigurations
  verbs: ["get", "list", "watch", "patch"]
- apiGroups:
  - apps
  resources:
  - deployments
  - replicasets
  verbs: ["get", "list", "watch"]
- apiGroups:
  - storage.k8s.io
  resources:
  - storageclasses
  verbs: ["get"]
- apiGroups:
  - ""
  resources:
  - events
  verbs: ["create"]
- apiGroups:
  - ""
  resources:
  - nodes
  - namespaces
  verbs: ["get", "list", "watch"]
- apiGroups:
  - ""
  resources:
  - secrets
  verbs: ["get"]
- apiGroups:
  - kubevault.com
  - catalog.kubevault.com
  - engine.kubevault.com
  - policy.kubevault.com
  resources:
  - "*"
  verbs: ["get", "list", "watch"]
- apiGroups:
  - appcatalog.appscode.com
  resources:
  - "*"
  verbs: ["*"]
---
# Source: kubevault-webhook-server/templates/cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-kubevault-webhook-server
  labels:
    helm.sh/chart: kubevault-webhook-server-v0.18.0
    app.kubernetes.io/name: kubevault-webhook-server
    app.kubernetes.io/instance: my-kubevault-webhook-server
    app.kubernetes.io/version: "v0.18.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-kubevault-webhook-server
subjects:
- kind: ServiceAccount
  name: my-kubevault-webhook-server
  namespace: default
---
# Source: kubevault-webhook-server/templates/license-checker-cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-kubevault-webhook-server-license-checker
  labels:
    helm.sh/chart: kubevault-webhook-server-v0.18.0
    app.kubernetes.io/name: kubevault-webhook-server
    app.kubernetes.io/instance: my-kubevault-webhook-server
    app.kubernetes.io/version: "v0.18.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: appscode:license-checker
subjects:
- kind: ServiceAccount
  name: my-kubevault-webhook-server
  namespace: default
---
# Source: kubevault-webhook-server/templates/license-reader-cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-kubevault-webhook-server-license-reader
  labels:
    helm.sh/chart: kubevault-webhook-server-v0.18.0
    app.kubernetes.io/name: kubevault-webhook-server
    app.kubernetes.io/instance: my-kubevault-webhook-server
    app.kubernetes.io/version: "v0.18.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: appscode:license-reader
subjects:
- kind: ServiceAccount
  name: my-kubevault-webhook-server
  namespace: default
---
# Source: kubevault-webhook-server/templates/webhook-eas-rbac.yaml
# to delegate authentication and authorization
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-kubevault-webhook-server-apiserver-auth-delegator
  labels:
    helm.sh/chart: kubevault-webhook-server-v0.18.0
    app.kubernetes.io/name: kubevault-webhook-server
    app.kubernetes.io/instance: my-kubevault-webhook-server
    app.kubernetes.io/version: "v0.18.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  kind: ClusterRole
  apiGroup: rbac.authorization.k8s.io
  name: system:auth-delegator
subjects:
- kind: ServiceAccount
  name: my-kubevault-webhook-server
  namespace: default
---
# Source: kubevault-webhook-server/templates/webhook-eas-rbac.yaml
# to read the config for terminating authentication
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: my-kubevault-webhook-server-apiserver-extension-server-authentication-reader
  namespace: kube-system
  labels:
    helm.sh/chart: kubevault-webhook-server-v0.18.0
    app.kubernetes.io/name: kubevault-webhook-server
    app.kubernetes.io/instance: my-kubevault-webhook-server
    app.kubernetes.io/version: "v0.18.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  kind: Role
  apiGroup: rbac.authorization.k8s.io
  name: extension-apiserver-authentication-reader
subjects:
- kind: ServiceAccount
  name: my-kubevault-webhook-server
  namespace: default
---
# Source: kubevault-webhook-server/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-kubevault-webhook-server
  namespace: default
  labels:
    helm.sh/chart: kubevault-webhook-server-v0.18.0
    app.kubernetes.io/name: kubevault-webhook-server
    app.kubernetes.io/instance: my-kubevault-webhook-server
    app.kubernetes.io/version: "v0.18.0"
    app.kubernetes.io/managed-by: Helm
spec:
  ports:
  - name: operator
    port: 443
    targetPort: operator
  selector:
    app.kubernetes.io/name: kubevault-webhook-server
    app.kubernetes.io/instance: my-kubevault-webhook-server
---
# Source: kubevault-webhook-server/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-kubevault-webhook-server
  namespace: default
  labels:
    helm.sh/chart: kubevault-webhook-server-v0.18.0
    app.kubernetes.io/name: kubevault-webhook-server
    app.kubernetes.io/instance: my-kubevault-webhook-server
    app.kubernetes.io/version: "v0.18.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kubevault-webhook-server
      app.kubernetes.io/instance: my-kubevault-webhook-server
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kubevault-webhook-server
        app.kubernetes.io/instance: my-kubevault-webhook-server
      annotations:
        reload: idYdzGFU
    spec:
      
      serviceAccountName: my-kubevault-webhook-server
      containers:
      - name: operator
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65534
        image: ghcr.io/kubevault/vault-operator:v0.18.0
        imagePullPolicy: IfNotPresent
        args:
        - run
        - --v=3
        - --secure-port=8443
        - --audit-log-path=-
        - --cluster-name=
        - --tls-cert-file=/var/serving-cert/tls.crt
        - --tls-private-key-file=/var/serving-cert/tls.key
        - --authorization-always-allow-paths=/healthz,/readyz,/livez,/convert
        - --enable-mutating-webhook=true
        - --enable-validating-webhook=true
        - --use-kubeapiserver-fqdn-for-aks=true
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        ports:
        - name: operator
          containerPort: 8443
        volumeMounts:
        - mountPath: /tmp
          name: tmpdir
        - mountPath: /var/serving-cert
          name: serving-cert
        resources:
          {}
      volumes:
      - name: tmpdir
        emptyDir: {}
      - name: serving-cert
        secret:
          defaultMode: 420
          secretName: my-kubevault-webhook-server-apiserver-cert
      securityContext:
        {}
      nodeSelector:
        kubernetes.io/os: linux
---
# Source: kubevault-webhook-server/templates/apiregistration.yaml
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  name: v1alpha1.validators.kubevault.com
  labels:
    app.kubernetes.io/component: kubevault-core
    helm.sh/chart: kubevault-webhook-server-v0.18.0
    app.kubernetes.io/name: kubevault-webhook-server
    app.kubernetes.io/instance: my-kubevault-webhook-server
    app.kubernetes.io/version: "v0.18.0"
    app.kubernetes.io/managed-by: Helm
spec:
  group: validators.kubevault.com
  version: v1alpha1
  service:
    namespace: default
    name: my-kubevault-webhook-server
  caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCakNDQWU2Z0F3SUJBZ0lSQU9sVjdLU1R5akhzeUpRcUxwZGZQL1F3RFFZSktvWklodmNOQVFFTEJRQXcKRFRFTE1Ba0dBMVVFQXhNQ1kyRXdIaGNOTWpRd09URTJNRGcxTURFeFdoY05NelF3T1RFME1EZzFNREV4V2pBTgpNUXN3Q1FZRFZRUURFd0pqWVRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTTI1CmYyQ0h3STg3M24zUmh5TzhqNk9tdEYwNFFLN213S2xINjFNSlM1c3ZNV2pjN3B2dXdGQjd6b21nTDArSnd6NTgKL0pVVVRodFl5SFdXYTdyNk9xUlpxRytycldwdGZpSzRkQm1WT0N2LzNURm5NbURIOWlJS2h0QnNUNThyWk8zcwphQVNhT1lFWTBFNFVwT09YeGR6NDdvUHNOMlBwM0k3WXl5Mm02cjREMmlIclRLLytOQVAwZ1gzRUROV2dOUy9WCllFRGZsY2NTTk4vNlN3OVZ3MU5BeUZOSWRFQ0djZFZvSXZqV1RnNjRrZU1rOE9na1lHSVdjMVhEQWxMclFKZlUKQjBSK0RZMEVSaUpibUhoSGdvRS8xaVYyV0ZmRVdpTFU2cUdybWFYNzFFN2NwOXdJSFM0WXZ4cWtjdk1HM1lTOAplSk0rR0xESDRuYlNlMEpvU2VFQ0F3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trTUIwR0ExVWRKUVFXCk1CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVcKQkJRaXUwMzAyOXBURWVHdXZkVkQwd3QxQmwraHd6QU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFwTDBQcGZBRwozU1FvRTRVSG0rbnJ2cHhDVFdpc3Q0MCtOSWtYdGlaRXJBb2hPUDVLWDE3WDJqOXo5WVRMMUh4NzlNK0NNZ21jCmFmV3ZmMGtwcGhTd1hPbFZKU1A5WmQwamtxVi9uMVg4TU54MXVXbkJuM1pBOEh6bFp0Rk90THQ2enJHSnBuc28KSVRsaGVIVGFtcnlZTDREa3d2TEJWL0Y5RW5jZEpyZjdXaTRVZU5MYVdkWUhXQW1nRFM0dVJsK0hoOUZkNW9ITQpNQVRiYTIzSlVRdXBBd0FYOHZsL09qWXBiS21RbEt1R2E4ZFNxRThubGEveFc1dGkzRUwxMVlTbHpsQm45bW1jCkpBMWFKMVNEdldpWHhROGUxNDA4N3pkblBXc29JZVBjWng5TDJEY3VBVGRnNVFmZURwQWpDaGNRY2d5aWRUeVgKallPV0tCQTZGeDhDQmc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  groupPriorityMinimum: 10000
  versionPriority: 15
---
# Source: kubevault-webhook-server/templates/apiregistration.yaml
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  name: v1alpha1.mutators.kubevault.com
  labels:
    app.kubernetes.io/component: kubevault-core
    helm.sh/chart: kubevault-webhook-server-v0.18.0
    app.kubernetes.io/name: kubevault-webhook-server
    app.kubernetes.io/instance: my-kubevault-webhook-server
    app.kubernetes.io/version: "v0.18.0"
    app.kubernetes.io/managed-by: Helm
spec:
  group: mutators.kubevault.com
  version: v1alpha1
  service:
    namespace: default
    name: my-kubevault-webhook-server
  caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCakNDQWU2Z0F3SUJBZ0lSQU9sVjdLU1R5akhzeUpRcUxwZGZQL1F3RFFZSktvWklodmNOQVFFTEJRQXcKRFRFTE1Ba0dBMVVFQXhNQ1kyRXdIaGNOTWpRd09URTJNRGcxTURFeFdoY05NelF3T1RFME1EZzFNREV4V2pBTgpNUXN3Q1FZRFZRUURFd0pqWVRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTTI1CmYyQ0h3STg3M24zUmh5TzhqNk9tdEYwNFFLN213S2xINjFNSlM1c3ZNV2pjN3B2dXdGQjd6b21nTDArSnd6NTgKL0pVVVRodFl5SFdXYTdyNk9xUlpxRytycldwdGZpSzRkQm1WT0N2LzNURm5NbURIOWlJS2h0QnNUNThyWk8zcwphQVNhT1lFWTBFNFVwT09YeGR6NDdvUHNOMlBwM0k3WXl5Mm02cjREMmlIclRLLytOQVAwZ1gzRUROV2dOUy9WCllFRGZsY2NTTk4vNlN3OVZ3MU5BeUZOSWRFQ0djZFZvSXZqV1RnNjRrZU1rOE9na1lHSVdjMVhEQWxMclFKZlUKQjBSK0RZMEVSaUpibUhoSGdvRS8xaVYyV0ZmRVdpTFU2cUdybWFYNzFFN2NwOXdJSFM0WXZ4cWtjdk1HM1lTOAplSk0rR0xESDRuYlNlMEpvU2VFQ0F3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trTUIwR0ExVWRKUVFXCk1CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVcKQkJRaXUwMzAyOXBURWVHdXZkVkQwd3QxQmwraHd6QU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFwTDBQcGZBRwozU1FvRTRVSG0rbnJ2cHhDVFdpc3Q0MCtOSWtYdGlaRXJBb2hPUDVLWDE3WDJqOXo5WVRMMUh4NzlNK0NNZ21jCmFmV3ZmMGtwcGhTd1hPbFZKU1A5WmQwamtxVi9uMVg4TU54MXVXbkJuM1pBOEh6bFp0Rk90THQ2enJHSnBuc28KSVRsaGVIVGFtcnlZTDREa3d2TEJWL0Y5RW5jZEpyZjdXaTRVZU5MYVdkWUhXQW1nRFM0dVJsK0hoOUZkNW9ITQpNQVRiYTIzSlVRdXBBd0FYOHZsL09qWXBiS21RbEt1R2E4ZFNxRThubGEveFc1dGkzRUwxMVlTbHpsQm45bW1jCkpBMWFKMVNEdldpWHhROGUxNDA4N3pkblBXc29JZVBjWng5TDJEY3VBVGRnNVFmZURwQWpDaGNRY2d5aWRUeVgKallPV0tCQTZGeDhDQmc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  groupPriorityMinimum: 10000
  versionPriority: 15
---
# Source: kubevault-webhook-server/templates/apiregistration.yaml
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  name: v1alpha1.validators.engine.kubevault.com
  labels:
    app.kubernetes.io/component: kubevault-engine
    helm.sh/chart: kubevault-webhook-server-v0.18.0
    app.kubernetes.io/name: kubevault-webhook-server
    app.kubernetes.io/instance: my-kubevault-webhook-server
    app.kubernetes.io/version: "v0.18.0"
    app.kubernetes.io/managed-by: Helm
spec:
  group: validators.engine.kubevault.com
  version: v1alpha1
  service:
    namespace: default
    name: my-kubevault-webhook-server
  caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCakNDQWU2Z0F3SUJBZ0lSQU9sVjdLU1R5akhzeUpRcUxwZGZQL1F3RFFZSktvWklodmNOQVFFTEJRQXcKRFRFTE1Ba0dBMVVFQXhNQ1kyRXdIaGNOTWpRd09URTJNRGcxTURFeFdoY05NelF3T1RFME1EZzFNREV4V2pBTgpNUXN3Q1FZRFZRUURFd0pqWVRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTTI1CmYyQ0h3STg3M24zUmh5TzhqNk9tdEYwNFFLN213S2xINjFNSlM1c3ZNV2pjN3B2dXdGQjd6b21nTDArSnd6NTgKL0pVVVRodFl5SFdXYTdyNk9xUlpxRytycldwdGZpSzRkQm1WT0N2LzNURm5NbURIOWlJS2h0QnNUNThyWk8zcwphQVNhT1lFWTBFNFVwT09YeGR6NDdvUHNOMlBwM0k3WXl5Mm02cjREMmlIclRLLytOQVAwZ1gzRUROV2dOUy9WCllFRGZsY2NTTk4vNlN3OVZ3MU5BeUZOSWRFQ0djZFZvSXZqV1RnNjRrZU1rOE9na1lHSVdjMVhEQWxMclFKZlUKQjBSK0RZMEVSaUpibUhoSGdvRS8xaVYyV0ZmRVdpTFU2cUdybWFYNzFFN2NwOXdJSFM0WXZ4cWtjdk1HM1lTOAplSk0rR0xESDRuYlNlMEpvU2VFQ0F3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trTUIwR0ExVWRKUVFXCk1CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVcKQkJRaXUwMzAyOXBURWVHdXZkVkQwd3QxQmwraHd6QU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFwTDBQcGZBRwozU1FvRTRVSG0rbnJ2cHhDVFdpc3Q0MCtOSWtYdGlaRXJBb2hPUDVLWDE3WDJqOXo5WVRMMUh4NzlNK0NNZ21jCmFmV3ZmMGtwcGhTd1hPbFZKU1A5WmQwamtxVi9uMVg4TU54MXVXbkJuM1pBOEh6bFp0Rk90THQ2enJHSnBuc28KSVRsaGVIVGFtcnlZTDREa3d2TEJWL0Y5RW5jZEpyZjdXaTRVZU5MYVdkWUhXQW1nRFM0dVJsK0hoOUZkNW9ITQpNQVRiYTIzSlVRdXBBd0FYOHZsL09qWXBiS21RbEt1R2E4ZFNxRThubGEveFc1dGkzRUwxMVlTbHpsQm45bW1jCkpBMWFKMVNEdldpWHhROGUxNDA4N3pkblBXc29JZVBjWng5TDJEY3VBVGRnNVFmZURwQWpDaGNRY2d5aWRUeVgKallPV0tCQTZGeDhDQmc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  groupPriorityMinimum: 10000
  versionPriority: 15
---
# Source: kubevault-webhook-server/templates/apiregistration.yaml
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  name: v1alpha1.mutators.engine.kubevault.com
  labels:
    app.kubernetes.io/component: kubevault-engine
    helm.sh/chart: kubevault-webhook-server-v0.18.0
    app.kubernetes.io/name: kubevault-webhook-server
    app.kubernetes.io/instance: my-kubevault-webhook-server
    app.kubernetes.io/version: "v0.18.0"
    app.kubernetes.io/managed-by: Helm
spec:
  group: mutators.engine.kubevault.com
  version: v1alpha1
  service:
    namespace: default
    name: my-kubevault-webhook-server
  caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCakNDQWU2Z0F3SUJBZ0lSQU9sVjdLU1R5akhzeUpRcUxwZGZQL1F3RFFZSktvWklodmNOQVFFTEJRQXcKRFRFTE1Ba0dBMVVFQXhNQ1kyRXdIaGNOTWpRd09URTJNRGcxTURFeFdoY05NelF3T1RFME1EZzFNREV4V2pBTgpNUXN3Q1FZRFZRUURFd0pqWVRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTTI1CmYyQ0h3STg3M24zUmh5TzhqNk9tdEYwNFFLN213S2xINjFNSlM1c3ZNV2pjN3B2dXdGQjd6b21nTDArSnd6NTgKL0pVVVRodFl5SFdXYTdyNk9xUlpxRytycldwdGZpSzRkQm1WT0N2LzNURm5NbURIOWlJS2h0QnNUNThyWk8zcwphQVNhT1lFWTBFNFVwT09YeGR6NDdvUHNOMlBwM0k3WXl5Mm02cjREMmlIclRLLytOQVAwZ1gzRUROV2dOUy9WCllFRGZsY2NTTk4vNlN3OVZ3MU5BeUZOSWRFQ0djZFZvSXZqV1RnNjRrZU1rOE9na1lHSVdjMVhEQWxMclFKZlUKQjBSK0RZMEVSaUpibUhoSGdvRS8xaVYyV0ZmRVdpTFU2cUdybWFYNzFFN2NwOXdJSFM0WXZ4cWtjdk1HM1lTOAplSk0rR0xESDRuYlNlMEpvU2VFQ0F3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trTUIwR0ExVWRKUVFXCk1CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVcKQkJRaXUwMzAyOXBURWVHdXZkVkQwd3QxQmwraHd6QU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFwTDBQcGZBRwozU1FvRTRVSG0rbnJ2cHhDVFdpc3Q0MCtOSWtYdGlaRXJBb2hPUDVLWDE3WDJqOXo5WVRMMUh4NzlNK0NNZ21jCmFmV3ZmMGtwcGhTd1hPbFZKU1A5WmQwamtxVi9uMVg4TU54MXVXbkJuM1pBOEh6bFp0Rk90THQ2enJHSnBuc28KSVRsaGVIVGFtcnlZTDREa3d2TEJWL0Y5RW5jZEpyZjdXaTRVZU5MYVdkWUhXQW1nRFM0dVJsK0hoOUZkNW9ITQpNQVRiYTIzSlVRdXBBd0FYOHZsL09qWXBiS21RbEt1R2E4ZFNxRThubGEveFc1dGkzRUwxMVlTbHpsQm45bW1jCkpBMWFKMVNEdldpWHhROGUxNDA4N3pkblBXc29JZVBjWng5TDJEY3VBVGRnNVFmZURwQWpDaGNRY2d5aWRUeVgKallPV0tCQTZGeDhDQmc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  groupPriorityMinimum: 10000
  versionPriority: 15
---
# Source: kubevault-webhook-server/templates/apiregistration.yaml
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  name: v1alpha1.mutators.policy.kubevault.com
  labels:
    app.kubernetes.io/component: kubevault-policy
    helm.sh/chart: kubevault-webhook-server-v0.18.0
    app.kubernetes.io/name: kubevault-webhook-server
    app.kubernetes.io/instance: my-kubevault-webhook-server
    app.kubernetes.io/version: "v0.18.0"
    app.kubernetes.io/managed-by: Helm
spec:
  group: mutators.policy.kubevault.com
  version: v1alpha1
  service:
    namespace: default
    name: my-kubevault-webhook-server
  caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCakNDQWU2Z0F3SUJBZ0lSQU9sVjdLU1R5akhzeUpRcUxwZGZQL1F3RFFZSktvWklodmNOQVFFTEJRQXcKRFRFTE1Ba0dBMVVFQXhNQ1kyRXdIaGNOTWpRd09URTJNRGcxTURFeFdoY05NelF3T1RFME1EZzFNREV4V2pBTgpNUXN3Q1FZRFZRUURFd0pqWVRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTTI1CmYyQ0h3STg3M24zUmh5TzhqNk9tdEYwNFFLN213S2xINjFNSlM1c3ZNV2pjN3B2dXdGQjd6b21nTDArSnd6NTgKL0pVVVRodFl5SFdXYTdyNk9xUlpxRytycldwdGZpSzRkQm1WT0N2LzNURm5NbURIOWlJS2h0QnNUNThyWk8zcwphQVNhT1lFWTBFNFVwT09YeGR6NDdvUHNOMlBwM0k3WXl5Mm02cjREMmlIclRLLytOQVAwZ1gzRUROV2dOUy9WCllFRGZsY2NTTk4vNlN3OVZ3MU5BeUZOSWRFQ0djZFZvSXZqV1RnNjRrZU1rOE9na1lHSVdjMVhEQWxMclFKZlUKQjBSK0RZMEVSaUpibUhoSGdvRS8xaVYyV0ZmRVdpTFU2cUdybWFYNzFFN2NwOXdJSFM0WXZ4cWtjdk1HM1lTOAplSk0rR0xESDRuYlNlMEpvU2VFQ0F3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trTUIwR0ExVWRKUVFXCk1CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVcKQkJRaXUwMzAyOXBURWVHdXZkVkQwd3QxQmwraHd6QU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFwTDBQcGZBRwozU1FvRTRVSG0rbnJ2cHhDVFdpc3Q0MCtOSWtYdGlaRXJBb2hPUDVLWDE3WDJqOXo5WVRMMUh4NzlNK0NNZ21jCmFmV3ZmMGtwcGhTd1hPbFZKU1A5WmQwamtxVi9uMVg4TU54MXVXbkJuM1pBOEh6bFp0Rk90THQ2enJHSnBuc28KSVRsaGVIVGFtcnlZTDREa3d2TEJWL0Y5RW5jZEpyZjdXaTRVZU5MYVdkWUhXQW1nRFM0dVJsK0hoOUZkNW9ITQpNQVRiYTIzSlVRdXBBd0FYOHZsL09qWXBiS21RbEt1R2E4ZFNxRThubGEveFc1dGkzRUwxMVlTbHpsQm45bW1jCkpBMWFKMVNEdldpWHhROGUxNDA4N3pkblBXc29JZVBjWng5TDJEY3VBVGRnNVFmZURwQWpDaGNRY2d5aWRUeVgKallPV0tCQTZGeDhDQmc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  groupPriorityMinimum: 10000
  versionPriority: 15
---
# Source: kubevault-webhook-server/templates/license.yaml
# if license file is provided, then create a secret for license
---
# Source: kubevault-webhook-server/templates/core/mutating-webhook.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: mutators.kubevault.com
  labels:
    app.kubernetes.io/component: kubevault-core
    helm.sh/chart: kubevault-webhook-server-v0.18.0
    app.kubernetes.io/name: kubevault-webhook-server
    app.kubernetes.io/instance: my-kubevault-webhook-server
    app.kubernetes.io/version: "v0.18.0"
    app.kubernetes.io/managed-by: Helm
webhooks:
- name: vaultserverwebhook.mutators.kubevault.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/mutators.kubevault.com/v1alpha1/vaultserverwebhooks
    caBundle: dW5rbm93bg==
  rules:
  - operations:
    - CREATE
    - UPDATE
    apiGroups:
    - kubevault.com
    apiVersions:
    - "*"
    resources:
    - vaultservers
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
---
# Source: kubevault-webhook-server/templates/engine/mutating-webhook.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: mutators.engine.kubevault.com
  labels:
    app.kubernetes.io/component: kubevault-engine
    helm.sh/chart: kubevault-webhook-server-v0.18.0
    app.kubernetes.io/name: kubevault-webhook-server
    app.kubernetes.io/instance: my-kubevault-webhook-server
    app.kubernetes.io/version: "v0.18.0"
    app.kubernetes.io/managed-by: Helm
webhooks:
- name: secretaccessrequestwebhook.mutators.engine.kubevault.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/mutators.engine.kubevault.com/v1alpha1/secretaccessrequestwebhooks
    caBundle: dW5rbm93bg==
  rules:
  - operations:
    - CREATE
    - UPDATE
    apiGroups:
    - engine.kubevault.com
    apiVersions:
    - "*"
    resources:
    - secretaccessrequests
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
---
# Source: kubevault-webhook-server/templates/policy/mutating-webhook.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: mutators.policy.kubevault.com
  labels:
    app.kubernetes.io/component: kubevault-policy
    helm.sh/chart: kubevault-webhook-server-v0.18.0
    app.kubernetes.io/name: kubevault-webhook-server
    app.kubernetes.io/instance: my-kubevault-webhook-server
    app.kubernetes.io/version: "v0.18.0"
    app.kubernetes.io/managed-by: Helm
webhooks:
- name: vaultpolicybindingwebhook.mutators.policy.kubevault.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/mutators.policy.kubevault.com/v1alpha1/vaultpolicybindingwebhooks
    caBundle: dW5rbm93bg==
  rules:
  - operations:
    - CREATE
    - UPDATE
    apiGroups:
    - policy.kubevault.com
    apiVersions:
    - "*"
    resources:
    - vaultpolicybindings
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
---
# Source: kubevault-webhook-server/templates/core/validating-webhook.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: validators.kubevault.com
  labels:
    app.kubernetes.io/component: kubevault-core
    helm.sh/chart: kubevault-webhook-server-v0.18.0
    app.kubernetes.io/name: kubevault-webhook-server
    app.kubernetes.io/instance: my-kubevault-webhook-server
    app.kubernetes.io/version: "v0.18.0"
    app.kubernetes.io/managed-by: Helm
webhooks:
- name: vaultserverwebhook.validators.kubevault.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.kubevault.com/v1alpha1/vaultserverwebhooks
    caBundle: dW5rbm93bg==
  rules:
  - operations:
    - CREATE
    - UPDATE
    - DELETE
    apiGroups:
    - kubevault.com
    apiVersions:
    - "*"
    resources:
    - vaultservers
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
---
# Source: kubevault-webhook-server/templates/engine/validating-webhook.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: validators.engine.kubevault.com
  labels:
    app.kubernetes.io/component: kubevault-engine
    helm.sh/chart: kubevault-webhook-server-v0.18.0
    app.kubernetes.io/name: kubevault-webhook-server
    app.kubernetes.io/instance: my-kubevault-webhook-server
    app.kubernetes.io/version: "v0.18.0"
    app.kubernetes.io/managed-by: Helm
webhooks:
- name: secretaccessrequestwebhook.validators.engine.kubevault.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.engine.kubevault.com/v1alpha1/secretaccessrequestwebhooks
    caBundle: dW5rbm93bg==
  rules:
  - operations:
    - CREATE
    - UPDATE
    apiGroups:
    - engine.kubevault.com
    apiVersions:
    - "*"
    resources:
    - secretaccessrequests
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
---
# Source: kubevault-webhook-server/templates/garbage-collector-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kubevault:garbage-collector:psp
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
- apiGroups:
  - policy
  verbs: ["use"]
  resources:
  - podsecuritypolicies
---
# Source: kubevault-webhook-server/templates/license-checker-cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: appscode:license-checker
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
# Get cluster id
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs: ["get"]
# Issue license
- apiGroups:
  - proxyserver.licenses.appscode.com
  resources:
  - licenserequests
  verbs: ["create"]
# Detect workload/owner of operator pod
- apiGroups:
  - ""
  resources:
  - pods
  verbs: ["get"]
- apiGroups:
  - apps
  resources:
  - deployments
  - replicasets
  verbs: ["get"]
# Write events in case of license verification failure
- apiGroups:
  - ""
  resources:
  - events
  verbs: ["get", "list", "create", "patch"]
---
# Source: kubevault-webhook-server/templates/license-reader-cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: appscode:license-reader
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
# Detect license server endpoint for kubevault addons
- apiGroups:
  - apiregistration.k8s.io
  resources:
  - apiservices
  verbs: ["get"]
- nonResourceURLs:
  - /appscode/license
  verbs: ["get"]
---
# Source: kubevault-webhook-server/templates/garbage-collector-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kubevault:garbage-collector:psp
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubevault:garbage-collector:psp
subjects:
- kind: ServiceAccount
  name: generic-garbage-collector
  namespace: kubevault
