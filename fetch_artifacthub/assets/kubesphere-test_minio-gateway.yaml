---
# Source: minio-gateway/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-minio-gateway
  namespace: default
  labels:
    app.kubernetes.io/name: minio-gateway
    helm.sh/chart: minio-gateway-0.1.0
    app.kubernetes.io/instance: my-minio-gateway
    app.kubernetes.io/managed-by: Helm
secrets:
  - name: my-minio-gateway
---
# Source: minio-gateway/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-minio-gateway
  namespace: default
  labels:
    app.kubernetes.io/name: minio-gateway
    helm.sh/chart: minio-gateway-0.1.0
    app.kubernetes.io/instance: my-minio-gateway
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  access-key: "bFh5ZkhudzRndQ=="
  secret-key: "TFUzUXBaYnptRUtQdUNQdndldU54YmhyYm5xdzVaMXdiU1pTdjhHQw=="
  key.json: ""
---
# Source: minio-gateway/templates/pvc.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: my-minio-gateway
  namespace: default
  labels:
    app.kubernetes.io/name: minio-gateway
    helm.sh/chart: minio-gateway-0.1.0
    app.kubernetes.io/instance: my-minio-gateway
    app.kubernetes.io/managed-by: Helm
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "8Gi"
---
# Source: minio-gateway/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-minio-gateway
  namespace: default
  labels:
    app.kubernetes.io/name: minio-gateway
    helm.sh/chart: minio-gateway-0.1.0
    app.kubernetes.io/instance: my-minio-gateway
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  
  ports:
    - name: minio
      port: 9000
      targetPort: minio
      nodePort: null
    - name: console
      port: 9001
      targetPort: console
      nodePort: null
  selector:
    app.kubernetes.io/name: minio-gateway
    app.kubernetes.io/instance: my-minio-gateway
---
# Source: minio-gateway/templates/standalone/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-minio-gateway
  namespace: default
  labels:
    app.kubernetes.io/name: minio-gateway
    helm.sh/chart: minio-gateway-0.1.0
    app.kubernetes.io/instance: my-minio-gateway
    app.kubernetes.io/managed-by: Helm
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: minio-gateway
      app.kubernetes.io/instance: my-minio-gateway
  template:
    metadata:
      labels:
        app.kubernetes.io/name: minio-gateway
        helm.sh/chart: minio-gateway-0.1.0
        app.kubernetes.io/instance: my-minio-gateway
        app.kubernetes.io/managed-by: Helm
      annotations:
        checksum/credentials-secret: 922b7763b1797fd666284ab39cd5ace6a2ac75e9cd8f20ab236bc3942a9e897e
    spec:
      
      serviceAccountName: my-minio-gateway
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: minio-gateway
                    app.kubernetes.io/instance: my-minio-gateway
                namespaces:
                  - "default"
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      securityContext:
        fsGroup: 1001
      containers:
        - name: minio
          image: docker.io/minio/minio:latest
          imagePullPolicy: "IfNotPresent"
          securityContext:
            runAsNonRoot: true
            runAsUser: 1001
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: MINIO_SCHEME
              value: "http"
            - name: MINIO_FORCE_NEW_KEYS
              value: "no"
            - name: MINIO_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: my-minio-gateway
                  key: access-key
            - name: MINIO_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: my-minio-gateway
                  key: secret-key
            - name: MINIO_BROWSER
              value: "on"
            - name: MINIO_PROMETHEUS_AUTH_TYPE
              value: "public"
          envFrom:
          ports:
            - name: minio
              containerPort: 9000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /minio/health/live
              port: minio
              scheme: "HTTP"
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 5
          readinessProbe:
            tcpSocket:
              port: minio
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 5
          resources:
            limits: {}
            requests: {}
          volumeMounts:
            - name: data
              mountPath: /data
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: my-minio-gateway
