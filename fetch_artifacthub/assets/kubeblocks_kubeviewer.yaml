---
# Source: kubeviewer/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-kubeviewer
  labels:
    helm.sh/chart: kubeviewer-0.1.17
    app.kubernetes.io/name: kubeviewer
    app.kubernetes.io/instance: my-kubeviewer
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
automountServiceAccountToken:
---
# Source: kubeviewer/templates/rbac/auth_proxy_client_clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-kubeviewer-metrics-reader
  labels:
    helm.sh/chart: kubeviewer-0.1.17
    app.kubernetes.io/name: kubeviewer
    app.kubernetes.io/instance: my-kubeviewer
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
rules:
  - nonResourceURLs:
    - "/metrics"
    verbs:
    - get
---
# Source: kubeviewer/templates/rbac/auth_proxy_role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-kubeviewer-proxy-role
  labels:
    helm.sh/chart: kubeviewer-0.1.17
    app.kubernetes.io/name: kubeviewer
    app.kubernetes.io/instance: my-kubeviewer
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
    - authentication.k8s.io
    resources:
    - tokenreviews
    verbs:
    - create
  - apiGroups:
    - authorization.k8s.io
    resources:
    - subjectaccessreviews
    verbs:
    - create
---
# Source: kubeviewer/templates/rbac/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-kubeviewer
  labels:
    helm.sh/chart: kubeviewer-0.1.17
    app.kubernetes.io/name: kubeviewer
    app.kubernetes.io/instance: my-kubeviewer
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
    - ""
    resources:
    - configmaps
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - endpoints
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - events
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - persistentvolumeclaims
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - secrets
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - serviceaccounts
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - services
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - apps
    resources:
    - statefulsets
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - apps.kubeblocks.io
    resources:
    - clusters
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - apps.kubeblocks.io
    resources:
    - components
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - apps.kubeblocks.io
    resources:
    - configurations
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - batch
    resources:
    - jobs
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - dataprotection.kubeblocks.io
    resources:
    - backuppolicies
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - dataprotection.kubeblocks.io
    resources:
    - backups
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - dataprotection.kubeblocks.io
    resources:
    - backupschedules
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - dataprotection.kubeblocks.io
    resources:
    - restores
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - policy
    resources:
    - poddisruptionbudgets
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - rbac.authorization.k8s.io
    resources:
    - clusterrolebindings
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - rbac.authorization.k8s.io
    resources:
    - rolebindings
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - view.apecloud.io
    resources:
    - viewdefinitions
    verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - view.apecloud.io
    resources:
    - viewdefinitions/finalizers
    verbs:
    - update
  - apiGroups:
    - view.apecloud.io
    resources:
    - viewdefinitions/status
    verbs:
    - get
    - patch
    - update
  - apiGroups:
    - view.apecloud.io
    resources:
    - views
    verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - view.apecloud.io
    resources:
    - views/finalizers
    verbs:
    - update
  - apiGroups:
    - view.apecloud.io
    resources:
    - views/status
    verbs:
    - get
    - patch
    - update
  - apiGroups:
    - workloads.kubeblocks.io
    resources:
    - replicatedstatemachines
    verbs:
    - get
    - list
    - watch
---
# Source: kubeviewer/templates/rbac/view_editor_role.yaml
# permissions for end users to edit views.
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-kubeviewer-view-editor-role
  labels:
    helm.sh/chart: kubeviewer-0.1.17
    app.kubernetes.io/name: kubeviewer
    app.kubernetes.io/instance: my-kubeviewer
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
    - view.apecloud.io
    resources:
    - views
    verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - view.apecloud.io
    resources:
    - views/status
    verbs:
    - get
---
# Source: kubeviewer/templates/rbac/view_viewer_role.yaml
# permissions for end users to view views.
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-kubeviewer-view-viewer-role
  labels:
    helm.sh/chart: kubeviewer-0.1.17
    app.kubernetes.io/name: kubeviewer
    app.kubernetes.io/instance: my-kubeviewer
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
    - view.apecloud.io
    resources:
    - views
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - view.apecloud.io
    resources:
    - views/status
    verbs:
    - get
---
# Source: kubeviewer/templates/rbac/viewdefinition_editor_role.yaml
# permissions for end users to edit viewdefinitions.
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-kubeviewer-viewdef-editor-role
  labels:
    helm.sh/chart: kubeviewer-0.1.17
    app.kubernetes.io/name: kubeviewer
    app.kubernetes.io/instance: my-kubeviewer
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
    - view.apecloud.io
    resources:
    - viewdefinitions
    verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - view.apecloud.io
    resources:
    - viewdefinitions/status
    verbs:
    - get
---
# Source: kubeviewer/templates/rbac/viewdefinition_viewer_role.yaml
# permissions for end users to view viewdefinitions.
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-kubeviewer-viewdef-viewer-role
  labels:
    helm.sh/chart: kubeviewer-0.1.17
    app.kubernetes.io/name: kubeviewer
    app.kubernetes.io/instance: my-kubeviewer
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
    - view.apecloud.io
    resources:
    - viewdefinitions
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - view.apecloud.io
    resources:
    - viewdefinitions/status
    verbs:
    - get
---
# Source: kubeviewer/templates/rbac/auth_proxy_role_binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-kubeviewer-proxy-rolebinding
  labels:
    helm.sh/chart: kubeviewer-0.1.17
    app.kubernetes.io/name: kubeviewer
    app.kubernetes.io/instance: my-kubeviewer
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: proxy-role
subjects:
  - kind: ServiceAccount
    name: controller-manager
    namespace: default
---
# Source: kubeviewer/templates/rbac/role_binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-kubeviewer
  labels:
    helm.sh/chart: kubeviewer-0.1.17
    app.kubernetes.io/name: kubeviewer
    app.kubernetes.io/instance: my-kubeviewer
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm

roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-kubeviewer
subjects:
  - kind: ServiceAccount
    name: my-kubeviewer
    namespace: default
---
# Source: kubeviewer/templates/rbac/leader_election_role.yaml
# permissions to do leader election.
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: my-kubeviewer-leader-election-role
  labels:
    helm.sh/chart: kubeviewer-0.1.17
    app.kubernetes.io/name: kubeviewer
    app.kubernetes.io/instance: my-kubeviewer
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
    - ""
    resources:
    - configmaps
    verbs:
    - get
    - list
    - watch
    - create
    - update
    - patch
    - delete
  - apiGroups:
    - coordination.k8s.io
    resources:
    - leases
    verbs:
    - get
    - list
    - watch
    - create
    - update
    - patch
    - delete
  - apiGroups:
    - ""
    resources:
    - events
    verbs:
    - create
    - patch
---
# Source: kubeviewer/templates/rbac/leader_election_role_binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: my-kubeviewer-leader-election-rolebinding
  labels:
    helm.sh/chart: kubeviewer-0.1.17
    app.kubernetes.io/name: kubeviewer
    app.kubernetes.io/instance: my-kubeviewer
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: leader-election-role
subjects:
  - kind: ServiceAccount
    name: controller-manager
    namespace: default
---
# Source: kubeviewer/templates/rbac/auth_proxy_service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-kubeviewer-metrics-service
  labels:
    helm.sh/chart: kubeviewer-0.1.17
    app.kubernetes.io/name: kubeviewer
    app.kubernetes.io/instance: my-kubeviewer
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
  namespace: default
spec:
    ports:
    - name: https
      port: 8443
      protocol: TCP
      targetPort: https
    selector:
      control-plane: controller-manager
---
# Source: kubeviewer/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-kubeviewer
  labels:
    helm.sh/chart: kubeviewer-0.1.17
    app.kubernetes.io/name: kubeviewer
    app.kubernetes.io/instance: my-kubeviewer
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kubeviewer
      app.kubernetes.io/instance: my-kubeviewer
  template:
    metadata:
      labels:
        helm.sh/chart: kubeviewer-0.1.17
        app.kubernetes.io/name: kubeviewer
        app.kubernetes.io/instance: my-kubeviewer
        app.kubernetes.io/version: "1.16.0"
        app.kubernetes.io/managed-by: Helm
    spec:
      serviceAccountName: my-kubeviewer
      securityContext:
        {}
      containers:
        - name: kubeviewer
          securityContext:
            {}
          image: "apecloud-registry.cn-zhangjiakou.cr.aliyuncs.com/apecloud/kubeviewer:0.1.17"
          imagePullPolicy: IfNotPresent
          ports:
            - name: webhook-server
              containerPort: 9443
              protocol: TCP
            - name: health
              containerPort: 8081
              protocol: TCP
            - name: metrics
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: health
            initialDelaySeconds: 15
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /readyz
              port: health
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
            {}
---
# Source: kubeviewer/templates/cr/cluster_view_definition.yaml
apiVersion: view.apecloud.io/v1alpha1
kind: ViewDefinition
metadata:
  name: cluster-viewdef
  namespace: default
spec:
  target:
    group: ""
    version: "v1"
    kind: "Event"
    fieldPath:
      status: "message"
  involvedObjects:
    - group: "apps.kubeblocks.io"
      version: "v1alpha1"
      kind: "Cluster"
    - group: ""
      version: "v1"
      kind: "Pod"
    - group: ""
      version: "v1"
      kind: "Endpoints"
    - group: ""
      version: "v1"
      kind: "Service"
    - group: ""
      version: "v1"
      kind: "PersistentVolumeClaim"
    - group: "apps"
      version: "v1"
      kind: "StatefulSet"
    - group: "apps.kubeblocks.io"
      version: "v1alpha1"
      kind: "Component"
    - group: "dataprotection.kubeblocks.io"
      version: "v1alpha1"
      kind: "BackupPolicy"
    - group: "dataprotection.kubeblocks.io"
      version: "v1alpha1"
      kind: "BackupSchedule"
    - group: "dataprotection.kubeblocks.io"
      version: "v1alpha1"
      kind: "Backup"
    - group: "workloads.kubeblocks.io"
      version: "v1alpha1"
      kind: "ReplicatedStateMachine"
    - group: "workloads.kubeblocks.io"
      version: "v1alpha1"
      kind: "InstanceSet"
    - group: "apps.kubeblocks.io"
      version: "v1alpha1"
      kind: "Configuration"
    - group: "policy"
      version: "v1"
      kind: "PodDisruptionBudget"
    - group: ""
      version: "v1"
      kind: "Secret"
    - group: ""
      version: "v1"
      kind: "ConfigMap"
    - group: "dataprotection.kubeblocks.io"
      version: "v1alpha1"
      kind: "Restore"
    - group: ""
      version: "v1"
      kind: "ServiceAccount"
    - group: "rbac.authorization.k8s.io"
      version: "v1"
      kind: "RoleBinding"
    - group: "rbac.authorization.k8s.io"
      version: "v1"
      kind: "ClusterRoleBinding"
    - group: "batch"
      version: "v1"
      kind: "Job"
  totalExpression: "1"
  completedExpression: "target.message.endsWith(\"current phase is Running\")?1:0"
  progressCompleteOperation:
    mode: "Regex"
    regex: 'Cluster: (?P<name>[^\s]+) is ready, current phase is Running'
    messageTemplate: "Cluster: {{name}} is create successfully and ready now"
---
# Source: kubeviewer/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "my-kubeviewer-test-connection"
  labels:
    helm.sh/chart: kubeviewer-0.1.17
    app.kubernetes.io/name: kubeviewer
    app.kubernetes.io/instance: my-kubeviewer
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['my-kubeviewer:80']
  restartPolicy: Never
