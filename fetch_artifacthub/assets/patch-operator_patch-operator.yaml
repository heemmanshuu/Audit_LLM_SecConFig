---
# Source: patch-operator/templates/v1_serviceaccount_controller-manager.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: controller-manager
  namespace: default
---
# Source: patch-operator/templates/v1_configmap_patch-operator-manager-config.yaml
apiVersion: v1
data:
  controller_manager_config.yaml: |
    apiVersion: controller-runtime.sigs.k8s.io/v1alpha1
    kind: ControllerManagerConfig
    health:
      healthProbeBindAddress: :8081
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
    leaderElection:
      leaderElect: true
      resourceName: 8dcd3a3f.redhat.io
kind: ConfigMap
metadata:
  name: patch-operator-manager-config
  namespace: default
---
# Source: patch-operator/templates/rbac.authorization.k8s.io_v1_clusterrole_patch-operator-manager-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: patch-operator-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - get
  - list
  - patch
  - watch
- apiGroups:
  - ""
  resources:
  - groups
  - serviceaccounts
  - users
  verbs:
  - impersonate
- apiGroups:
  - ""
  resources:
  - serviceaccounts/token
  verbs:
  - create
- apiGroups:
  - '*'
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - authentication.k8s.io
  resources:
  - '*'
  verbs:
  - impersonate
- apiGroups:
  - redhatcop.redhat.io
  resources:
  - patches
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - redhatcop.redhat.io
  resources:
  - patches/finalizers
  verbs:
  - update
- apiGroups:
  - redhatcop.redhat.io
  resources:
  - patches/status
  verbs:
  - get
  - patch
  - update
---
# Source: patch-operator/templates/rbac.authorization.k8s.io_v1_clusterrole_patch-operator-metrics-reader.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: patch-operator-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
# Source: patch-operator/templates/rbac.authorization.k8s.io_v1_clusterrole_patch-operator-proxy-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: patch-operator-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
# Source: patch-operator/templates/rbac.authorization.k8s.io_v1_clusterrolebinding_patch-operator-manager-rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: patch-operator-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: patch-operator-manager-role
subjects:
- kind: ServiceAccount
  name: controller-manager
  namespace: default
---
# Source: patch-operator/templates/rbac.authorization.k8s.io_v1_clusterrolebinding_patch-operator-proxy-rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: patch-operator-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: patch-operator-proxy-role
subjects:
- kind: ServiceAccount
  name: controller-manager
  namespace: default
---
# Source: patch-operator/templates/rbac.authorization.k8s.io_v1_role_patch-operator-leader-election-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: patch-operator-leader-election-role
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
# Source: patch-operator/templates/rbac.authorization.k8s.io_v1_role_patch-operator-prometheus-k8s.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: patch-operator-prometheus-k8s
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - endpoints
  - pods
  - services
  verbs:
  - get
  - list
  - watch
---
# Source: patch-operator/templates/rbac.authorization.k8s.io_v1_rolebinding_patch-operator-leader-election-rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: patch-operator-leader-election-rolebinding
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: patch-operator-leader-election-role
subjects:
- kind: ServiceAccount
  name: controller-manager
  namespace: default
---
# Source: patch-operator/templates/rbac.authorization.k8s.io_v1_rolebinding_patch-operator-prometheus-k8s.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: patch-operator-prometheus-k8s
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: patch-operator-prometheus-k8s
subjects:
- kind: ServiceAccount
  name: prometheus-k8s
  namespace: openshift-monitoring
---
# Source: patch-operator/templates/v1_service_patch-operator-controller-manager-metrics-service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    service.alpha.openshift.io/serving-cert-secret-name: patch-operator-certs
  labels:
    control-plane: patch-operator
  name: patch-operator-controller-manager-metrics-service
  namespace: default
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: https
  selector:
    control-plane: patch-operator
---
# Source: patch-operator/templates/v1_service_patch-operator-webhook-service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    service.alpha.openshift.io/serving-cert-secret-name: webhook-server-cert
  name: patch-operator-webhook-service
  namespace: default
spec:
  ports:
  - port: 443
    protocol: TCP
    targetPort: 9443
  selector:
    control-plane: patch-operator
---
# Source: patch-operator/templates/manager.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-patch-operator
  labels:
    helm.sh/chart: patch-operator-v0.1.11
    app.kubernetes.io/name: patch-operator
    app.kubernetes.io/instance: my-patch-operator
    app.kubernetes.io/version: "v0.1.11"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: patch-operator
      app.kubernetes.io/instance: my-patch-operator
      control-plane: patch-operator
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: patch-operator
        app.kubernetes.io/instance: my-patch-operator
        control-plane: patch-operator
    spec:
      serviceAccountName: controller-manager   
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --tls-cert-file=/etc/certs/tls/tls.crt
        - --tls-private-key-file=/etc/certs/tls/tls.key
        - --v=0
        image: "quay.io/redhat-cop/kube-rbac-proxy:v0.11.0"
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
        volumeMounts:
        - mountPath: /etc/certs/tls
          name: patch-operator-certs
        imagePullPolicy: IfNotPresent
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 5m
            memory: 64Mi
      - command:
        - /manager
        args:
        - --leader-elect
        image: "quay.io/redhat-cop/patch-operator:v0.1.11"
        imagePullPolicy: IfNotPresent
        volumeMounts:
        - name: webhook-server-cert
          readOnly: true
          mountPath: /tmp/k8s-webhook-server/serving-certs        
        name: patch-operator
        resources:
          requests:
            cpu: 100m
            memory: 250Mi
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
      volumes:
      - name: patch-operator-certs
        secret:
          defaultMode: 420
          secretName: patch-operator-certs  
      - name: webhook-server-cert
        secret:
          secretName: webhook-server-cert
          defaultMode: 420
---
# Source: patch-operator/templates/admissionregistration.k8s.io_v1_mutatingwebhookconfiguration_patch-operator-mutating-webhook-configuration.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: 'default/serving-cert'
  creationTimestamp: null
  name: patch-operator-mutating-webhook-configuration
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: patch-operator-webhook-service
      namespace: default
      path: /mutate-redhatcop-redhat-io-v1alpha1-patch
  failurePolicy: Fail
  name: mpatch.kb.io
  rules:
  - apiGroups:
    - redhatcop.redhat.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    resources:
    - patches
  sideEffects: None
---
# Source: patch-operator/templates/monitoring.coreos.com_v1_servicemonitor_patch-operator-controller-manager-metrics-monitor.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  labels:
    control-plane: patch-operator
  name: patch-operator-controller-manager-metrics-monitor
  namespace: default
spec:
  endpoints:
  - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
    interval: 30s
    port: https
    scheme: https
    tlsConfig:
      ca:
        secret:
          key: tls.crt
          name: patch-operator-certs
          optional: false
      serverName: patch-operator-controller-manager-metrics-service.default.svc
  selector:
    matchLabels:
      control-plane: patch-operator
---
# Source: patch-operator/templates/admissionregistration.k8s.io_v1_validatingwebhookconfiguration_patch-operator-validating-webhook-configuration.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: 'default/serving-cert'
  creationTimestamp: null
  name: patch-operator-validating-webhook-configuration
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: patch-operator-webhook-service
      namespace: default
      path: /validate-redhatcop-redhat-io-v1alpha1-patch
  failurePolicy: Fail
  name: vpatch.kb.io
  rules:
  - apiGroups:
    - redhatcop.redhat.io
    apiVersions:
    - v1alpha1
    operations:
    - UPDATE
    resources:
    - patches
  sideEffects: None
