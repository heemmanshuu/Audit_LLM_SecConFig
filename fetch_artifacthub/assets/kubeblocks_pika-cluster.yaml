---
# Source: pika-cluster/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kb-my-pika-cluster
  labels:
    
    helm.sh/chart: pika-cluster-3.5.1
    app.kubernetes.io/name: pika-cluster
    app.kubernetes.io/instance: my-pika-cluster
    app.kubernetes.io/version: "3.5.1"
    app.kubernetes.io/managed-by: Helm
---
# Source: pika-cluster/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: kb-my-pika-cluster
  namespace: default
  labels:
    
    helm.sh/chart: pika-cluster-3.5.1
    app.kubernetes.io/name: pika-cluster
    app.kubernetes.io/instance: my-pika-cluster
    app.kubernetes.io/version: "3.5.1"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
---
# Source: pika-cluster/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: kb-my-pika-cluster
  labels:
    
    helm.sh/chart: pika-cluster-3.5.1
    app.kubernetes.io/name: pika-cluster
    app.kubernetes.io/instance: my-pika-cluster
    app.kubernetes.io/version: "3.5.1"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kb-my-pika-cluster
subjects:
  - kind: ServiceAccount
    name: kb-my-pika-cluster
    namespace: default
---
# Source: pika-cluster/templates/cluster.yaml
apiVersion: apps.kubeblocks.io/v1alpha1
kind: Cluster
metadata:
  name: my-pika-cluster
  labels: 
    helm.sh/chart: pika-cluster-3.5.1
    app.kubernetes.io/name: pika-cluster
    app.kubernetes.io/instance: my-pika-cluster
    app.kubernetes.io/version: "3.5.1"
    app.kubernetes.io/managed-by: Helm
spec:
  clusterDefinitionRef: pika  # ref clusterDefinition.name
  clusterVersionRef: pika-3.5.1 # ref clusterVersion.name
  terminationPolicy: Delete
  affinity:
    topologyKeys: 
      - kubernetes.io/hostname
  componentSpecs:
    - name: pika-group-1 # user-defined
      componentDefRef: pika-group # ref clusterDefinition componentDefs.name
      monitor: false
      enabledLogs:     null
      replicas: 2
      serviceAccountName: kb-my-pika-cluster
      switchPolicy:
        type: Noop
      resources:
        limits:
          cpu: "500m"
          memory: "3Gi"
        requests:
          cpu: "500m"
          memory: "1Gi"
      volumeClaimTemplates:
        - name: data # ref clusterdefinition components.containers.volumeMounts.name
          spec:
            storageClassName: 
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: 10Gi
    - name: pika-group-2 # user-defined
      componentDefRef: pika-group # ref clusterDefinition componentDefs.name
      monitor: false
      enabledLogs:     null
      replicas: 2
      serviceAccountName: kb-my-pika-cluster
      switchPolicy:
        type: Noop
      resources:
        limits:
          cpu: "500m"
          memory: "3Gi"
        requests:
          cpu: "500m"
          memory: "1Gi"
      volumeClaimTemplates:
        - name: data # ref clusterdefinition components.containers.volumeMounts.name
          spec:
            storageClassName: 
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: 10Gi
    - name: etcd # user-defined
      componentDefRef: etcd # ref clusterdefinition components.name
      monitor: false
      replicas: 3
      resources:
        limits:
          cpu: "500m"
          memory: "3Gi"
        requests:
          cpu: "500m"
          memory: "1Gi"
      volumeClaimTemplates:
        - name: data # ref clusterdefinition components.containers.volumeMounts.name
          spec:
            storageClassName: 
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: 10Gi
    - name: codis-proxy
      componentDefRef: codis-proxy # ref clusterDefinition componentDefs.name
      replicas: 2
      resources:
        limits:
          cpu: "500m"
          memory: "3Gi"
        requests:
          cpu: "500m"
          memory: "1Gi"
    - name: codis-fe
      componentDefRef: codis-fe # ref clusterDefinition componentDefs.name
      replicas: 1
      resources:
        limits:
          cpu: "500m"
          memory: "3Gi"
        requests:
          cpu: "500m"
          memory: "1Gi"
    - name: codis-dashboard
      componentDefRef: codis-dashboard # ref clusterDefinition componentDefs.name
      replicas: 1
      resources:
        limits:
          cpu: "500m"
          memory: "3Gi"
        requests:
          cpu: "500m"
          memory: "1Gi"
