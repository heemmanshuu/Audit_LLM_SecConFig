---
# Source: mod-chart/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-mod-chart
  namespace: "default"
  labels:
    app.kubernetes.io/instance: my-mod-chart
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mod-chart
    app.kubernetes.io/version: 1.0.0
    helm.sh/chart: mod-chart-4.0.0
  annotations:
spec:
  type: ClusterIP
  sessionAffinity: None
  ports:
    - name: http
      targetPort: http
      port: 8080
      protocol: TCP
  selector:
    app.kubernetes.io/instance: my-mod-chart
    app.kubernetes.io/name: mod-chart
---
# Source: mod-chart/templates/deployment-statefulset.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-mod-chart
  namespace: "default"
  labels:
    app.kubernetes.io/instance: my-mod-chart
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mod-chart
    app.kubernetes.io/version: 1.0.0
    helm.sh/chart: mod-chart-4.0.0
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: my-mod-chart
      app.kubernetes.io/name: mod-chart
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: my-mod-chart
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: mod-chart
        app.kubernetes.io/version: 1.0.0
        helm.sh/chart: mod-chart-4.0.0
    spec:
      automountServiceAccountToken: 
      shareProcessNamespace: false
      serviceAccountName: default
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/instance: my-mod-chart
                    app.kubernetes.io/name: mod-chart
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      hostNetwork: false
      hostIPC: false
      
      containers:
        - name: mod-chart
          image: docker.io/bitnami/nginx:latest
          imagePullPolicy: "IfNotPresent"
          env:
          envFrom:
          resources:
            limits: {}
            requests: {}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: http
            initialDelaySeconds: 10
            periodSeconds: 20
            timeoutSeconds: 
            successThreshold: 
            failureThreshold: 
          readinessProbe:
            tcpSocket:
              port: http
            initialDelaySeconds: 10
            periodSeconds: 20
            timeoutSeconds: 
            successThreshold: 
            failureThreshold: 
          volumeMounts:
            - mountPath: /app/data
              name: data-storage
      volumes:
        - name: data-storage
          emptyDir: {}
