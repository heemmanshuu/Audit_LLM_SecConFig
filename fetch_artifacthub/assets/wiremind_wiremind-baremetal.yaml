---
# Source: wiremind-baremetal/templates/baremetal-secret.yml
apiVersion: v1
kind: Secret
metadata:
  name: my-wiremind-baremetal-installer
type: Opaque
stringData:
  password: setthisvalue
  password: setthisvalue
---
# Source: wiremind-baremetal/templates/baremetal-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-wiremind-baremetal-installer
data:
  decrypt-and-mount.sh: |
    #!/bin/sh
    set -x
    set -e
  
    RAID_DEVICE="/dev/md/md0"
    DECRYPTED_LUKS_DEVICE_NAME="md0crypt"
    DECRYPTED_LUKS_DEVICE="/dev/mapper/md0crypt"
    LVM_PARTITION_DEVICES="/dev/md0cryptlvm/persistentvolume*"
  
    # Check if raid device exists
    set +e
  
    device_details=$(mdadm -D "$RAID_DEVICE")
    if [[ "$?" != "0" ]]; then
        echo "Raid device <${RAID_DEVICE}> not found, skipping"
        exit 0
    fi
  
    set -e
  
    wmb_decrypt_device() {
      if ! cryptsetup status $DECRYPTED_LUKS_DEVICE_NAME; then
          echo "Decrypting the device $DECRYPTED_LUKS_DEVICE_NAME."
          set +x  # Do not log password, please.
          # XXX: this will actually hang (even if successfully opening) when run like this.
          # When run locally, even from a script, it works.
          # It will anyway get killed by the livenessprobe.
          echo -n "$password" | cryptsetup luksOpen --verbose $RAID_DEVICE $DECRYPTED_LUKS_DEVICE_NAME --verbose --debug --allow-discards --key-file -
          echo "Done decrypting the device $DECRYPTED_LUKS_DEVICE_NAME."
          set -x
      fi
  
      # Check, will exit non-0 if failed
      cryptsetup status $DECRYPTED_LUKS_DEVICE
      pvscan
      vgscan
    }
  
  
    wmb_mount_partition_devices() {
      # Mount every /dev/md0cryptlvm/persistentvolumeX to /mnt/persistentvolumeX
      for PARTITION_DEVICE in $LVM_PARTITION_DEVICES; do
          # When there is no matching device
          if [ "$PARTITION_DEVICE" = "$LVM_PARTITION_DEVICES" ]; then
            echo "No lvm partition found"
            continue
          fi
          if ! findmnt "$PARTITION_DEVICE"; then
              mount -t ext4 "$PARTITION_DEVICE" /mnt/$(basename "$PARTITION_DEVICE")
          fi
      done
    }
  
  
    wmb_check_partition_devices_mounts() {
      for PARTITION_DEVICE in $LVM_PARTITION_DEVICES; do
          # When there is no matching device
          if [ "$PARTITION_DEVICE" = "$LVM_PARTITION_DEVICES" ]; then
            echo "No lvm partition found"
            continue
          fi
          echo "Checking $PARTITION_DEVICE mount point..."
          findmnt "$PARTITION_DEVICE"
      done
    }
  
    # Decrypt
    wmb_decrypt_device
  
    # Topolvm manages the mounts/checks on its own.
    if [[ -z "$TOPOLVM_ENABLED" ]]; then
        wmb_mount_partition_devices
        wmb_check_partition_devices_mounts
    fi
  main.sh: |
    #!/bin/sh
    set -x
    set -e
  
    # Copy scripts to host
    cp /baremetal-config/decrypt-and-mount.sh /host-tmp/decrypt-and-mount.sh  # /host-tmp represents /tmp/bare-metal-daemonset for the host
  
    # This will execute the check / mount scripts in the root namespace
    while true; do
        /usr/bin/nsenter -m/proc/1/ns/mnt /tmp/bare-metal-daemonset/decrypt-and-mount.sh
        # Refresh liveness probe
        touch /tmp/raidLivenessFile
        sleep 30
    done
---
# Source: wiremind-baremetal/templates/baremetal-daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: my-wiremind-baremetal-installer
spec:
  selector:
    matchLabels:
      job: my-wiremind-baremetal-installer
  template:
    metadata:
      labels:
        job: my-wiremind-baremetal-installer
      annotations:
        checksum/config: c679fe83b70afd196bbb02d6791d8e2bf03f1b7d268ae9377ac27f334fe46876
    spec:
      containers:
      - image: "alpine:3.18.0"
        command:
        - /baremetal-config/main.sh
        name: my-wiremind-baremetal-installer
        envFrom:
          - secretRef:
              name: my-wiremind-baremetal-installer
        volumeMounts:
        - name: my-wiremind-baremetal-install-script
          mountPath: /baremetal-config
        - name: my-wiremind-baremetal-host-mount
          mountPath: /host-tmp
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - find /tmp/raidLivenessFile -mmin -1 | grep /tmp/raidLivenessFile
          failureThreshold: 1
          initialDelaySeconds: 30
          periodSeconds: 120
          timeoutSeconds: 30
        securityContext:
          privileged: true
      volumes:
      - name: my-wiremind-baremetal-install-script
        configMap:
          name: my-wiremind-baremetal-installer
          defaultMode: 0777
      - name: my-wiremind-baremetal-host-mount
        hostPath:
          path: /tmp/bare-metal-daemonset
      hostPID: true
