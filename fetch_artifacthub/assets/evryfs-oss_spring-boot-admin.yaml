---
# Source: spring-boot-admin/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-spring-boot-admin
  labels:
    app.kubernetes.io/name: spring-boot-admin
    helm.sh/chart: spring-boot-admin-0.1.10
    app.kubernetes.io/instance: my-spring-boot-admin
    app.kubernetes.io/managed-by: Helm
---
# Source: spring-boot-admin/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-spring-boot-admin
  labels:
    app.kubernetes.io/name: spring-boot-admin
    helm.sh/chart: spring-boot-admin-0.1.10
    app.kubernetes.io/instance: my-spring-boot-admin
    app.kubernetes.io/managed-by: Helm
data:
  application.yaml: |- 
    server:
      forward-headers-strategy: NATIVE
    spring:
      cloud:
        kubernetes:
          discovery:
            # set this to false if running namespaced
            all-namespaces: true
      boot:
        admin:
          # set this to the ingress url and protocol
          # ui:
          #   public-url: http://chart-example.local
          discovery:
            instances-metadata:
              spring-boot: "true"
---
# Source: spring-boot-admin/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-spring-boot-admin
  labels:
    app.kubernetes.io/name: spring-boot-admin
    helm.sh/chart: spring-boot-admin-0.1.10
    app.kubernetes.io/instance: my-spring-boot-admin
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - ""
  resources:
  - services
  - pods
  - endpoints
  verbs:
  - get
  - list
  - watch
---
# Source: spring-boot-admin/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-spring-boot-admin
  labels:
    app.kubernetes.io/name: spring-boot-admin
    helm.sh/chart: spring-boot-admin-0.1.10
    app.kubernetes.io/instance: my-spring-boot-admin
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-spring-boot-admin
subjects:
- apiGroup: ""
  kind: ServiceAccount
  name: my-spring-boot-admin
  namespace: default
---
# Source: spring-boot-admin/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-spring-boot-admin
  labels:
    app.kubernetes.io/name: spring-boot-admin
    helm.sh/chart: spring-boot-admin-0.1.10
    app.kubernetes.io/instance: my-spring-boot-admin
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: spring-boot-admin
    app.kubernetes.io/instance: my-spring-boot-admin
---
# Source: spring-boot-admin/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-spring-boot-admin
  labels:
    app.kubernetes.io/name: spring-boot-admin
    helm.sh/chart: spring-boot-admin-0.1.10
    app.kubernetes.io/instance: my-spring-boot-admin
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: spring-boot-admin
      app.kubernetes.io/instance: my-spring-boot-admin
  template:
    metadata:
      annotations:
        checksum/config: 0ebfd0260588673db23d0f5797e099fe4532a16ea7ad7f2ba242b5c0d26e35b5
      labels:
        app.kubernetes.io/name: spring-boot-admin
        app.kubernetes.io/instance: my-spring-boot-admin
    spec:
      
      serviceAccountName: my-spring-boot-admin
      securityContext:
        {}
      containers:
        - name: spring-boot-admin
          securityContext:
            readOnlyRootFilesystem: true
          image: quay.io/evryfs/spring-boot-admin:2.7.10
          imagePullPolicy: IfNotPresent
          env: 
          - name: LOADER_PATH
            value: /app/resources
          volumeMounts:
          - name: config
            mountPath: /app/resources
          - name: tmp
            mountPath: /tmp
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: actuator/health/liveness
              port: http
          readinessProbe:
            httpGet:
              path: actuator/health/readiness
              port: http
          resources:
            {}
      volumes:
      - name: config
        configMap:
          name: my-spring-boot-admin
      - name: tmp
        emptyDir: {}
