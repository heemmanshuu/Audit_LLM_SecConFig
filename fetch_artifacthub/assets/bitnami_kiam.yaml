---
# Source: kiam/templates/agent/agent-networkpolicy.yaml
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: my-kiam-agent
  namespace: "default"
  labels:
    app.kubernetes.io/instance: my-kiam
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kiam
    app.kubernetes.io/version: 4.2.0
    helm.sh/chart: kiam-2.2.14
    app.kubernetes.io/component: agent
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/instance: my-kiam
      app.kubernetes.io/name: kiam
      app.kubernetes.io/component: agent
  policyTypes:
    - Ingress
    - Egress
  egress:
    - {}
  ingress:
---
# Source: kiam/templates/server/server-networkpolicy.yaml
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: my-kiam-server
  namespace: "default"
  labels:
    app.kubernetes.io/instance: my-kiam
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kiam
    app.kubernetes.io/version: 4.2.0
    helm.sh/chart: kiam-2.2.14
    app.kubernetes.io/component: server
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/instance: my-kiam
      app.kubernetes.io/name: kiam
      app.kubernetes.io/component: server
  policyTypes:
    - Ingress
    - Egress
  egress:
    - {}
  ingress:
    - ports:
        - port: 8443
---
# Source: kiam/templates/agent/agent-service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-kiam-agent
  namespace: "default"
  labels:
    app.kubernetes.io/instance: my-kiam
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kiam
    app.kubernetes.io/version: 4.2.0
    helm.sh/chart: kiam-2.2.14
    app.kubernetes.io/component: agent
automountServiceAccountToken: false
---
# Source: kiam/templates/server/server-service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-kiam-server
  namespace: "default"
  labels:
    app.kubernetes.io/instance: my-kiam
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kiam
    app.kubernetes.io/version: 4.2.0
    helm.sh/chart: kiam-2.2.14
    app.kubernetes.io/component: server
automountServiceAccountToken: false
---
# Source: kiam/templates/agent/agent-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  labels:
    app.kubernetes.io/instance: my-kiam
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kiam
    app.kubernetes.io/version: 4.2.0
    helm.sh/chart: kiam-2.2.14
    app.kubernetes.io/component: agent
  name: my-kiam-agent
  namespace: "default"
type: Opaque
data:
  cert.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFakNDQWZxZ0F3SUJBZ0lSQU5icEhIZ2NXTlRnVmFSZ0hiTWxWMjB3RFFZSktvWklodmNOQVFFTEJRQXcKRWpFUU1BNEdBMVVFQXhNSGEybGhiUzFqWVRBZUZ3MHlOREE1TVRZd09ETTNOVEZhRncweU5UQTVNVFl3T0RNMwpOVEZhTUJVeEV6QVJCZ05WQkFNVENrdHBZVzBnUVdkbGJuUXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQzVSdUxOemw5ZG5BS3luRGdMTzd2Mjh2dW0vOFp0YWxFTVVHZHdnc2pzUFZSbnVTT3QKVWpzbHRYaU1HbWRpQ3lsaEJIZWxnTkZBcmwxYXkzQy8zUFhPNTFudUh2VjNhL3pueHpWSFBrVzN0dldBU05EQgo3M2pzbHA4Y3ZqdVN1M3QxZVliQzQ3cFQzbmNlMmkvdk9SQWtmNis2SUVOeElFVXdvWktkK2t2ZFQ4bzgxeUdIClVCRFBIZTZNLysvTm9SYUp5WTNmeURWWGdZdFhxZFVONnFGc2ZObGIvcUVLeHJZQjlPTllWQ1NHQVZVdXVBUmoKRTE4Ui9DU2VJc2xGamZBMUUvRzA0a3hDODVxSHNVdFB4ZG1ISUpwK3FXKzR5dUVqK2dkajZKanMyMmxMMVIrNwo5ZWRzekxMMnBwbXlwbTFVSEI1Q0lMU1o3TDl4ZHRkcHdON3JBZ01CQUFHallEQmVNQTRHQTFVZER3RUIvd1FFCkF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXcKQURBZkJnTlZIU01FR0RBV2dCUmlyaS80SGRremEzZDBqRnhaOWJtUHR3RDJ1REFOQmdrcWhraUc5dzBCQVFzRgpBQU9DQVFFQWI5Y0huQllwVnNhMnZ0SWhTQ2MyRzNyZENLc24xNlh5N09FMzVrZUZlZW5SRkpjZWptampLOEVWCmoveVZrLzRSaUZ1dFVxR3l1dGd3S28zdzhqczBxejJZT09OK3FGZmxZSFpsU2pzRGdzbGo3RExISEgrOGFwcUwKMHFOVnIvVXhucFRIU3VwVURqVjhWb3MxQVNNVzhkQ1puaVVjSEJsUDF1M0pmZUl3V29uOXBWMlpGcE13WkRFagpseWlJaGdZRHpvbW5RWnJzNitNK3VNZktTMzhqTGNtdStpRHpLSFlYMmFCQjYvWU0vNnFZNFpDU29oR1AvMXpEClA0NCt6L2lmV3hwcGpzaWtpUmUyRXgyWUFkQ3JDeTdvWUZRdWtPSzRiN0s5SE9oL29TOHF2ZmNLcWlBZFFwdG8KRG1Bc1pmYVZsR3RuWDhnY05WOWJyazVHS0k1bDVnPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  key.pem: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdVViaXpjNWZYWndDc3B3NEN6dTc5dkw3cHYvR2JXcFJERkJuY0lMSTdEMVVaN2tqCnJWSTdKYlY0akJwbllnc3BZUVIzcFlEUlFLNWRXc3R3djl6MXp1ZFo3aDcxZDJ2ODU4YzFSejVGdDdiMWdFalEKd2U5NDdKYWZITDQ3a3J0N2RYbUd3dU82VTk1M0h0b3Y3emtRSkgrdnVpQkRjU0JGTUtHU25mcEwzVS9LUE5jaApoMUFRengzdWpQL3Z6YUVXaWNtTjM4ZzFWNEdMVjZuVkRlcWhiSHpaVy82aENzYTJBZlRqV0ZRa2hnRlZMcmdFCll4TmZFZndrbmlMSlJZM3dOUlB4dE9KTVF2T2FoN0ZMVDhYWmh5Q2FmcWx2dU1yaEkvb0hZK2lZN050cFM5VWYKdS9YbmJNeXk5cWFac3FadFZCd2VRaUMwbWV5L2NYYlhhY0RlNndJREFRQUJBb0lCQUVJMzJwSFI0M1d5YjZoawpld2RReHlKQXY3NTFCZmRQR3o1NmNpM2RJSENHanVjdlhWZngzdC9nVndCRDQ1VkFCZjc5dU1GM0k5S3BQd1pYClZhbk5FREZ0c0UrUjB3dG1saEpFdVg4SCs2VG9pQi9jWm5nWjNhODVPZzdzMHAvajBBRXhlUCtvb295ZEl4ZnMKeFZzTG13QmdmbTdZWHlKTWRVNG5RUjZqT1lBVUNyZFc2ZTgyK2pXZ1RqM3BUK3NQeE05UFVHSFBIT0dxOEMrdwp4TEt2UEtKWmF6QldQSXEvaDlSb1h1VWx3NlBVZWRsS3YybkFncGlxWWdJVHhEY2VSVXpJM2s0YU4wRmgxYjB1CkFHc1Rxb0hHREZZQjREMUFwdFR5QjhkVy9DZHE2ME4xQyt2LzB4RmJ0WUVIUnc0TDJWTGhnOUVHa1lST2JjY0gKVnBFRk9jRUNnWUVBd25IR1RBZitYdUpkMDc0amIvWnZKdTVCc0JoaDNxU3hQRUdxOXFzMVVpZkhpeTB6Tk91Qwp4QlBnMU5vbmlrdnhxNVY3NGZTUVJEaEtvL3I4YWxLZWdBellwb2xYRjNSRk5WSVBIbzNKMHltbmFFelVncVJPCmpuRHMvNXIySmtyak5wYjlmZlNTTW1GQVQveUlTQ0dyTjIwSm5CUStYNlVSNzJ3U3c1L2RLQXNDZ1lFQTgrNG4KUEg2dnFWOFQyUEhuN0NoNFB4TVdIYjljZVFlOHdmMjEvSzFRTCtUL3B3VVZVVXBobHh0c0gyVWdzUkxndnZmWQpMVnNNTXlmT1pIMHUrdWI1STQxY0dsRGNzVE1Xd2xiSkNJbHByeks0N0tPZ2F4M2xwaVptenNpdjlXdTNEUjJ5Ckk4NUhIWForeXJ1akpKNzQxYmMyenZhblM4eUpZeTVKbngrK0VLRUNnWUVBcEtXK3FjYmpCK2xhVmQvZEZnTncKWDJERVVwNXkwUnBYMFpReGRpbkhQc2ZjV2VkdVF0TmhxVExENExqUlhuT3NNZ1NrSDlMOURpYzBYT0k4TnJPNgo3dWJ4MVNMYWtrdXNCdGh6WVFYaTdtR0pGZkpveUM3bExneEZRck11MTRIMkg5VisxTmJ4cktOWTErSVliQ3ZHClZXcUpCcGJGc2l1T29sTzdGOWNZWjcwQ2dZRUEzN3NaeGNTMHZYWjFMOUNBMWZ3d2ZqbTFXVWVCTzRrN09mckkKaHA4NEl4VzQzcW9zNlVoOXhpaml2TkQyY1ROTmJCcks3cDdKeThuQTVpNWpmc0dHMVhMOGZTNlpuUFdzOUViQgpVTkVvWEFiNzBpQXFMTlZaSTFHcGpoUklQNk95VzVkWElydzZRZTNEVVpOVWlXdzk4MWQrTDhuUG5CaFlFdDRMCnJLVmlvTUVDZ1lCQmo5d3ZvcDFpbE51a1dkQjNxWXlVd0RiSmZndFYxUDBpN2ZTNzk3UFh3aU5KYW5HK3BBOWUKZk1GYW91dE9hQ292K1FIZndseUN1aVRKRkRmYzNOL1NzWUJYNVV5Ymo0dWVyejBWRldLOHhsSXNWYysvTVQzdApUM2JzS05UODV3djRMRGdxMmxobHUzSndaUUcxaWsyWGM0WW1wazB4WG4vcWxRR0Vkd0dVU3c9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
  ca.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFRENDQWZpZ0F3SUJBZ0lSQUloWExsNFY0Yk5HaW04RUtZWWxhaUl3RFFZSktvWklodmNOQVFFTEJRQXcKRWpFUU1BNEdBMVVFQXhNSGEybGhiUzFqWVRBZUZ3MHlOREE1TVRZd09ETTNOVEZhRncweU5UQTVNVFl3T0RNMwpOVEZhTUJJeEVEQU9CZ05WQkFNVEIydHBZVzB0WTJFd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3CmdnRUtBb0lCQVFDb2VwNzRVakc2bDhmU2FvWTk0bXcrWEwxVm1haGlRdzNrVENUVUV2NE1IeEtXNmF1em5CRWsKUWhCalZhZEF0eWx5SDQ1S1ZhUXVTU3B2YkxadGtNTm5YWC8zcmEyL0ZHZS9NQkoySWpVd2h1V0UwQ1lFTGlUSwp0aXBSWHF1dEtkZ2p4MXNFN2hLbEtuWks5NHI5WEpNZ0xMdVU2aEtwK0VyWjN6SE1rSGtlb21leGRrVmR5L011CmtXUUNEQ0VmR2pGSWdLTUZWU2dUOGFVQWpZRzVBS0VyWTRYWTE0ZG1rbVVCQXpPQkw1b3BXdHA4Zi9ad3RCSHAKNmFKcjFFTm41WDQvcUxqcmUraEVId0ltdERFRTBFUCt3aDY4blpGUkdTbWFJYk5IYlhicmJPMDdJSkljM3N0TgpNdFFSRTN6OUdpbmdzQlRad0cvb1dUK0NnMitZVThZcEFnTUJBQUdqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDCnBEQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVVlxNHYrQjNaTTJ0M2RJeGNXZlc1ajdjQTlyZ3dEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUJKdWh1TTNQWS9QdVZhcy9mdlRsNmlodUlWNmpaZTBPOVJFZ1BCVXdPZE1ZRTF5Rk13Rm1LRzYzWUNmCjdXdkFpOFN1bzJ1cWV0MzdXWTV6NG4rK1I5eHZKaWQwZWRYZzhDUGhYR0tGVW5rMDkwYTltbWR6dlpSWlZLNG0KWnJHUWg4ZlBuMG91VWhYeGl6bnIxQUVLeUNCWVl4ckZuSEhNTzFMZStXU0U4Zm9tV3NJaEordnNGdDZjZ25sdApwOXE4WVdUdTRPR2NPeDBMYXNIRlFkeDlCcnpaZy9mczRPVUdCZXkzMTdib0p2aEZwUkRTREREMVNrSjlmb1diClgrL25rbUFkMElTUVBtUWx4QThKWUpwN3NxSWZBNUNNdFYyanFFT1BuVk9Dd0tPc015QUlXckMzR29CSmxTZXQKMTBhOTF1THkwNllJOVBZTTMzTEJ2bWYvVWpVPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
---
# Source: kiam/templates/server/server-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  labels:
    app.kubernetes.io/instance: my-kiam
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kiam
    app.kubernetes.io/version: 4.2.0
    helm.sh/chart: kiam-2.2.14
    app.kubernetes.io/component: server
  name: my-kiam-server
  namespace: "default"
type: Opaque
data:
  cert.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURkRENDQWx5Z0F3SUJBZ0lRVnlqODRscE5hRURjb3kwczk4b0UzVEFOQmdrcWhraUc5dzBCQVFzRkFEQVMKTVJBd0RnWURWUVFERXdkcmFXRnRMV05oTUI0WERUSTBNRGt4TmpBNE16YzFNVm9YRFRJMU1Ea3hOakE0TXpjMQpNVm93RmpFVU1CSUdBMVVFQXhNTFMybGhiU0JUWlhKMlpYSXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ3FzQktOL0JzM0JpNkgzU0lPMmdSMFBFcGlQQkI0Unh0eThhMGZ3SGlZdXFwLzJiY3MKbWVCbkV1bHVXK2RJS3d2L1l5bnQrVTNMQUJsdHNsdHRFRnFRRTdwK3dYTDdFYndyaWdNM0F4OExmRFJ2R0E5VwoyZi9td2dKYzFRU1l0bitHY0ZyYXJFT0dtajFMenIzY1RMQisrL1UyRDd1UHNsamd1c2hxVE1NZFloWUE2dXpOClBXZ2JNQzdqVFE0c3JQWkswdFZSTWJPenVwYlduZGlVQ3hUaXZSMmMzN1dJbThUZlcvT2FZUTVkQ1pFT0oyL20KRkkvWWZOQjdKSElsN0hsRGFqZlBlNWlEOHFLN05nU2pEMnYwN2JZNjc2czFQV0FFSi80Y09vaEtweWpHb0JUQQpIUFBTRmR6MHFUNitqQnJXNzJTWGJ2QjgrVVRTa29ZNnlvRjNBZ01CQUFHamdjRXdnYjR3RGdZRFZSMFBBUUgvCkJBUURBZ1dnTUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndNQkJnZ3JCZ0VGQlFjREFqQU1CZ05WSFJNQkFmOEUKQWpBQU1COEdBMVVkSXdRWU1CYUFGR0t1TC9nZDJUTnJkM1NNWEZuMXVZKzNBUGE0TUY0R0ExVWRFUVJYTUZXQwpEbTE1TFd0cFlXMHRjMlZ5ZG1WeWdpQnRlUzFyYVdGdExYTmxjblpsY2pvbElXUW9abXh2WVhRMk5EMDRORFF6CktZSWJNVEkzTGpBdU1DNHhPaVVoWkNobWJHOWhkRFkwUFRnME5ETXBod1IvQUFBQk1BMEdDU3FHU0liM0RRRUIKQ3dVQUE0SUJBUUEyZVd0MTVnQU9CMEx6dTV2NUhKVE5pTnd3VUplSWtEeWpKc0hHZmI4WlJNUVQwWURUTnJicgpPN0Y2ZENQbTkyNktyeUxyZlZyck5UQzZYSzdXZ0xsUEJVNTEydTdDV1NNaExjdTdkNVJKdWpSMW5KYW40eWJnCnhDclBiMTEvVTF6VFVTd0svdUIzN0dpTE9Bcmt3eUFuOTUvSndISVkzbWVmaExLRW5lNU1NUVNxalg5UDRLQXkKcVc4Szk0Ym1NYkJmRnVMVSt3Z1JPTC9kVzAwNFRMN2JaZ0Z6cXF2TEpkbXpXZC8wbjdRT0hibU5qaFQ0bUVCSgpPREtpbE9zMytmTloxOHNzLzl6bmxaZFd6dnpneEJ3dXJtVVcvTkc2UVlQRGVQQjMyQ0dPKytKdDEzVEVqZ3Y3CkhqSU9FQS81L1M5ZWVkNWNoMFcvYkZ5ZkRwUUVQRkl0Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  key.pem: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBcXJBU2pmd2JOd1l1aDkwaUR0b0VkRHhLWWp3UWVFY2Jjdkd0SDhCNG1McXFmOW0zCkxKbmdaeExwYmx2blNDc0wvMk1wN2ZsTnl3QVpiYkpiYlJCYWtCTzZmc0Z5K3hHOEs0b0ROd01mQzN3MGJ4Z1AKVnRuLzVzSUNYTlVFbUxaL2huQmEycXhEaHBvOVM4NjkzRXl3ZnZ2MU5nKzdqN0pZNExySWFrekRIV0lXQU9ycwp6VDFvR3pBdTQwME9MS3oyU3RMVlVUR3pzN3FXMXAzWWxBc1U0cjBkbk4rMWlKdkUzMXZ6bW1FT1hRbVJEaWR2CjVoU1AySHpRZXlSeUpleDVRMm8zejN1WWcvS2l1ellFb3c5cjlPMjJPdStyTlQxZ0JDZitIRHFJU3Fjb3hxQVUKd0J6ejBoWGM5S2srdm93YTF1OWtsMjd3ZlBsRTBwS0dPc3FCZHdJREFRQUJBb0lCQUFUdXpicDR2TGljWHgvaQpEaWZydVJFNjVOTnQ5UFBrNmpBcU45eWhEVnNzbWR6VUIrMHNEVVl0VDcyMnZqcGh0QmtQWHBqWUNaMkNSVG5jClc3UU5NdkRUQVNMRXFIUUZFVEVZN2ZyYkJqeW92RU14cU0vVHdRZUVOOWxDOXIwTEdTaGpldHl5K2NpY0VJVnUKVmlKVnZRd09jQW05N3FlNmVjTVU0dEhmb2d2cFM2NjBOZ29iM0V4ZXRVZHo3YVF6em1WQmNxNkJwK1pBNk9OMwprNWlFZ0pCVDM3T2oyUHdyZThOSnhiR0djNk5YbURsenF2STRXZXFYbHpQSE96cWh4S3dyanlvTjFlcU9OdXVNCjhlYjNNUElCN3hEcVdRZ3lsRlpwcDJHaEN1UkphSTd2SUlLSU9CWjJBTXBraXZMNUs2RmI0SjdUcXI1bnpLU0cKajFrTTFsRUNnWUVBMkJ1bkhtNFR0aW5VV1lGSFpYWWRreU0raVc4WEcwOFE1NGcxU01pd2RHK3V5UklKZUQxdQp1Rk5HbGxwODFnbWg5b3NXU1oyYnVEdTVnMVhCSXhjRnFJSnRpdHo2cU5vREhJbExOajdJU0kxRjVGemNmV3lNClo3VytKblhkaDlHaDB0NU1IRW4zVEwxRUk5NTM4NmNER1hlZVZOek1GSXg1dkRDcDRZVFJlTjBDZ1lFQXlqSU4KWHE3c1JwZDVXTDEvK0N2MDh4aDJURzRXZkVxYUh5dStZZE56V2NnbVlxcEJlWk1GRExhV2NyTk5PRnFKYy92cQorc2FLSCs2OUhKS0tvL1dnV3FFT20yMmpSWk0xNFZPNTgzQkxlYjlrb2l6UnhFaFdtN2hpQjkxejZNWkxQSE5SCm5OM2FzQzQzdk5GWlpBY0hiOTFiRVB4SmNGYmcrdS9lN2NCOWxHTUNnWUI4K2FEdnpDRENHL2FkdkZHWnIzRHoKQWxMTUQ5NkJBSHg2S1I4SGRHZjNMZzhhWUwveE5UV3VpeG9ySVRGSVpsR3Z6a2VaVXZnVzF4TTFqSVlnME5PSQoyOFNWcGEyZnNGUlVVR0dhZ1R3NkdOanVjM1ZmWTBMZlJ3OHNGc1dDSWcwL2NTYjZ4UnVxMlZscWxPRXhtc2dFCkZsVU9KcEl1My80V2d0MzdlVi9hVVFLQmdFdU53bk16OS9RMDI5SXVGV2g5dkcwdUlkNVRjTEdIQ3VwRTVVSVcKeWs2dFBMSzNuZm00MXpVMThTZnhHaFRKdC8wUUVIRWV5VFEvZUlqNXRUYXBMUDlRbVcyNDNUNjlVRy9mWW1lMQorVzRIOTZtbUI4aEpvNXRTbmNjRW1EQk9FSVVKTG1Eb2diUTl3UFFjWWtPL1lLY0xWdUVVOUxnMnJxRDJDeDVhClJGS3pBb0dBUVFxVno3aTRRLzAyb05oMlQzZHFNY1AzZm1Uajh4MkthZnJjMUt6QTZsaWtUNGh6bGVzby9ZSTcKcEtFV2lFWjhMajkwZW5RYWlOM2MzcjJaSEViZWM3eDVlelFhdnNYcUpXdnFNenp1ZmRoaDVhejA0eEU4V2I0SAo1QUFhYWdLMVVZaDVoUDJvOXFvY3R0Z1kzOS8yQVJrTkwxN0FHMFl6TjJIQnpQUEdzMjg9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
  ca.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFRENDQWZpZ0F3SUJBZ0lSQUloWExsNFY0Yk5HaW04RUtZWWxhaUl3RFFZSktvWklodmNOQVFFTEJRQXcKRWpFUU1BNEdBMVVFQXhNSGEybGhiUzFqWVRBZUZ3MHlOREE1TVRZd09ETTNOVEZhRncweU5UQTVNVFl3T0RNMwpOVEZhTUJJeEVEQU9CZ05WQkFNVEIydHBZVzB0WTJFd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3CmdnRUtBb0lCQVFDb2VwNzRVakc2bDhmU2FvWTk0bXcrWEwxVm1haGlRdzNrVENUVUV2NE1IeEtXNmF1em5CRWsKUWhCalZhZEF0eWx5SDQ1S1ZhUXVTU3B2YkxadGtNTm5YWC8zcmEyL0ZHZS9NQkoySWpVd2h1V0UwQ1lFTGlUSwp0aXBSWHF1dEtkZ2p4MXNFN2hLbEtuWks5NHI5WEpNZ0xMdVU2aEtwK0VyWjN6SE1rSGtlb21leGRrVmR5L011CmtXUUNEQ0VmR2pGSWdLTUZWU2dUOGFVQWpZRzVBS0VyWTRYWTE0ZG1rbVVCQXpPQkw1b3BXdHA4Zi9ad3RCSHAKNmFKcjFFTm41WDQvcUxqcmUraEVId0ltdERFRTBFUCt3aDY4blpGUkdTbWFJYk5IYlhicmJPMDdJSkljM3N0TgpNdFFSRTN6OUdpbmdzQlRad0cvb1dUK0NnMitZVThZcEFnTUJBQUdqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDCnBEQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVVlxNHYrQjNaTTJ0M2RJeGNXZlc1ajdjQTlyZ3dEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUJKdWh1TTNQWS9QdVZhcy9mdlRsNmlodUlWNmpaZTBPOVJFZ1BCVXdPZE1ZRTF5Rk13Rm1LRzYzWUNmCjdXdkFpOFN1bzJ1cWV0MzdXWTV6NG4rK1I5eHZKaWQwZWRYZzhDUGhYR0tGVW5rMDkwYTltbWR6dlpSWlZLNG0KWnJHUWg4ZlBuMG91VWhYeGl6bnIxQUVLeUNCWVl4ckZuSEhNTzFMZStXU0U4Zm9tV3NJaEordnNGdDZjZ25sdApwOXE4WVdUdTRPR2NPeDBMYXNIRlFkeDlCcnpaZy9mczRPVUdCZXkzMTdib0p2aEZwUkRTREREMVNrSjlmb1diClgrL25rbUFkMElTUVBtUWx4QThKWUpwN3NxSWZBNUNNdFYyanFFT1BuVk9Dd0tPc015QUlXckMzR29CSmxTZXQKMTBhOTF1THkwNllJOVBZTTMzTEJ2bWYvVWpVPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
---
# Source: kiam/templates/server/server-read-clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: my-kiam-server-read
  labels:
    app.kubernetes.io/instance: my-kiam
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kiam
    app.kubernetes.io/version: 4.2.0
    helm.sh/chart: kiam-2.2.14
    app.kubernetes.io/component: server
rules:
  - apiGroups:
      - ""
    resources:
      - namespaces
      - pods
    verbs:
      - watch
      - get
      - list
---
# Source: kiam/templates/server/server-write-clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  labels:
    app.kubernetes.io/instance: my-kiam
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kiam
    app.kubernetes.io/version: 4.2.0
    helm.sh/chart: kiam-2.2.14
    app.kubernetes.io/component: server
  name: my-kiam-server-write
rules:
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
---
# Source: kiam/templates/server/server-read-clusterrolebinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  labels:
    app.kubernetes.io/instance: my-kiam
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kiam
    app.kubernetes.io/version: 4.2.0
    helm.sh/chart: kiam-2.2.14
    app.kubernetes.io/component: server
  name: my-kiam-server-read
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-kiam-server-read
subjects:
  - kind: ServiceAccount
    name: my-kiam-server
    namespace: "default"
---
# Source: kiam/templates/server/server-write-clusterrolebinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  labels:
    app.kubernetes.io/instance: my-kiam
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kiam
    app.kubernetes.io/version: 4.2.0
    helm.sh/chart: kiam-2.2.14
    app.kubernetes.io/component: server
  name: my-kiam-server-write
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-kiam-server-write
subjects:
  - kind: ServiceAccount
    name: my-kiam-server
    namespace: "default"
---
# Source: kiam/templates/server/server-service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: my-kiam
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kiam
    app.kubernetes.io/version: 4.2.0
    helm.sh/chart: kiam-2.2.14
    app.kubernetes.io/component: server
  name: my-kiam-server
  namespace: "default"
spec:
  type: ClusterIP
  clusterIP: None
  sessionAffinity: None
  ports:
    - name: grpclb
      port: 8443
      targetPort: 8443
      protocol: TCP
      nodePort: null
  selector:
    app.kubernetes.io/instance: my-kiam
    app.kubernetes.io/name: kiam
    app.kubernetes.io/component: server
---
# Source: kiam/templates/agent/agent-daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app.kubernetes.io/instance: my-kiam
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kiam
    app.kubernetes.io/version: 4.2.0
    helm.sh/chart: kiam-2.2.14
    app.kubernetes.io/component: agent
  name: my-kiam-agent
  namespace: "default"
spec:
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/instance: my-kiam
      app.kubernetes.io/name: kiam
      app.kubernetes.io/component: agent
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: my-kiam
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: kiam
        app.kubernetes.io/version: 4.2.0
        helm.sh/chart: kiam-2.2.14
        app.kubernetes.io/component: agent
    spec:
      
      automountServiceAccountToken: false
      serviceAccountName: my-kiam-agent
      dnsPolicy: ClusterFirstWithHostNet
      hostNetwork: true
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/instance: my-kiam
                    app.kubernetes.io/name: kiam
                    app.kubernetes.io/component: agent
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      securityContext:
        fsGroup: 1001
        fsGroupChangePolicy: Always
        supplementalGroups: []
        sysctls: []
      containers:
        - name: agent
          image: docker.io/bitnami/kiam:4.2.0-debian-12-r40
          imagePullPolicy: IfNotPresent
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - NET_ADMIN
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 0
            runAsNonRoot: false
            runAsUser: 0
            seLinuxOptions: {}
            seccompProfile:
              type: RuntimeDefault
          command:
            - kiam
            - agent
          args:
            - --no-iptables-remove
            - --host-interface=cali+
            - --json-log
            - --level=info
            - --port=8183
            - --cert=/bitnami/kiam/tls/cert.pem
            - --key=/bitnami/kiam/tls/key.pem
            - --ca=/bitnami/kiam/tls/ca.pem
            - --server-address=my-kiam-server:8443
            - --gateway-timeout-creation=1s
          env:
            - name: HOST_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          envFrom:
          ports:
          resources:
            limits:
              cpu: 150m
              ephemeral-storage: 2Gi
              memory: 192Mi
            requests:
              cpu: 100m
              ephemeral-storage: 50Mi
              memory: 128Mi
          livenessProbe:
            httpGet:
              path: /health
              port: 8183
            initialDelaySeconds: 5
            periodSeconds: 30
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 5
          readinessProbe:
            httpGet:
              path: /ping
              port: 8183
            initialDelaySeconds: 5
            periodSeconds: 30
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 5
          volumeMounts:
            - name: empty-dir
              mountPath: /tmp
              subPath: tmp-dir
            - mountPath: /bitnami/kiam/tls
              name: tls
            - mountPath: /etc/ssl/certs
              name: ssl-certs
              readOnly: true
            - mountPath: /var/run/xtables.lock
              name: xtables
      volumes:
        - name: empty-dir
          emptyDir: {}
        - name: tls
          secret:
            secretName: my-kiam-agent
        - name: ssl-certs
          hostPath:
            path: /etc/ssl/certs
        - name: xtables
          hostPath:
            path: /run/xtables.lock
            type: FileOrCreate
---
# Source: kiam/templates/server/server-daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app.kubernetes.io/instance: my-kiam
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kiam
    app.kubernetes.io/version: 4.2.0
    helm.sh/chart: kiam-2.2.14
    app.kubernetes.io/component: server
  name: my-kiam-server
  namespace: "default"
spec:
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/instance: my-kiam
      app.kubernetes.io/name: kiam
      app.kubernetes.io/component: server
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: my-kiam
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: kiam
        app.kubernetes.io/version: 4.2.0
        helm.sh/chart: kiam-2.2.14
        app.kubernetes.io/component: server
    spec:
      
      automountServiceAccountToken: true
      serviceAccountName: my-kiam-server
      dnsPolicy: Default
      hostNetwork: false
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/instance: my-kiam
                    app.kubernetes.io/name: kiam
                    app.kubernetes.io/component: server
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      securityContext:
        fsGroup: 1001
        fsGroupChangePolicy: Always
        supplementalGroups: []
        sysctls: []
      containers:
        - name: server
          image: docker.io/bitnami/kiam:4.2.0-debian-12-r40
          imagePullPolicy: IfNotPresent
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsNonRoot: false
            runAsUser: 1001
            seLinuxOptions: {}
            seccompProfile:
              type: RuntimeDefault
          command:
            - kiam
            - server
          args:
            - --json-log
            - --level=info
            - --bind=0.0.0.0:8443
            - --cert=/bitnami/kiam/tls/cert.pem
            - --key=/bitnami/kiam/tls/key.pem
            - --ca=/bitnami/kiam/tls/ca.pem
            - --role-base-arn-autodetect
            - --session-duration=15m
            - --sync=1m
          ports:
            - name: grpclb
              containerPort: 8443
              protocol: TCP
          envFrom:
          resources:
            limits:
              cpu: 150m
              ephemeral-storage: 2Gi
              memory: 192Mi
            requests:
              cpu: 100m
              ephemeral-storage: 50Mi
              memory: 128Mi
          livenessProbe:
            exec:
              command:
                - kiam
                - health
                - --cert=/bitnami/kiam/tls/cert.pem
                - --key=/bitnami/kiam/tls/key.pem
                - --ca=/bitnami/kiam/tls/ca.pem
                - --server-address=127.0.0.1:8443
                - --server-address-refresh=4s
                - --timeout=10s
                - --gateway-timeout-creation=1s
            initialDelaySeconds: 5
            periodSeconds: 30
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 5
          readinessProbe:
            exec:
              command:
                - kiam
                - health
                - --cert=/bitnami/kiam/tls/cert.pem
                - --key=/bitnami/kiam/tls/key.pem
                - --ca=/bitnami/kiam/tls/ca.pem
                - --server-address=127.0.0.1:8443
                - --server-address-refresh=2s
                - --timeout=5s
                - --gateway-timeout-creation=1s
            initialDelaySeconds: 5
            periodSeconds: 30
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 5
          volumeMounts:
            - name: empty-dir
              mountPath: /tmp
              subPath: tmp-dir
            - mountPath: /bitnami/kiam/tls
              name: tls
            - mountPath: /etc/ssl/certs
              name: ssl-certs
              readOnly: true
      volumes:
        - name: empty-dir
          emptyDir: {}
        - name: tls
          secret:
            secretName: my-kiam-server
        - name: ssl-certs
          hostPath:
            path: /etc/ssl/certs
