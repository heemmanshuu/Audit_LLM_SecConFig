---
# Source: fireboom/charts/fireboom/templates/configmap.yaml
kind: ConfigMap
apiVersion: v1
metadata:
  name: my-fireboom-fireboom-cfgmap
data:
  .env.prod: >-
    FB_API_LISTEN_HOST="0.0.0.0"

    FB_API_LISTEN_PORT=9991

    FB_API_PUBLIC_URL="http://localhost:9991"

    FB_API_INTERNAL_URL="http://localhost:9991"

    FB_SERVER_LISTEN_HOST="0.0.0.0"

    FB_SERVER_LISTEN_PORT=9992

    FB_SERVER_URL="http://localhost:9992"

    FB_CSRF_TOKEN_SECRET="fpSBRDjfsLif"

    FB_LOG_LEVEL="debug"

    FB_REPO_URL_MIRROR="https://git.fireboom.io/{orgName}/{repoName}.git"

    FB_RAW_URL_MIRROR="https://raw.git.fireboom.io/{orgName}/{repoName}/{branchName}/{filePath}"

    FB_FILES_URL="https://files.fireboom.io"

    FB_SECURE_COOKIE_BLOCK_KEY="bTATeVrsXewgQgimaawrheTRGrsQkJdI"

    FB_SECURE_COOKIE_HASH_KEY="RICzkHxxgksUABpXwSkyZVtohWPJXXwD"
    
    SYSTEM_AUTH_KEY="FTSboqPerrjIGgESrESqnXVqdXr"

    OIDC_API_URL="http://my-fireboom-oidc:9825"
  authentication.key: "ngrwpCFnrHWLDM6Dk3X1LBUSaUJtHhjk"
---
# Source: fireboom/charts/oidc/templates/configmap.yaml
kind: ConfigMap
apiVersion: v1
metadata:
  name: my-fireboom-oidc-cfgmap
data:
  YUDAI_DB_URL: "postgresql://postgres:postgres@postgres:5432/oidc"
  token_jwt_key.key: |
    -----BEGIN RSA PRIVATE KEY-----
    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
    -----END RSA PRIVATE KEY-----
    
  token_jwt_key.pem: |-
    -----BEGIN CERTIFICATE-----
    MIIFDjCCAvagAwIBAgIRALXSDBYhivHMix1SOdGOnZIwDQYJKoZIhvcNAQELBQAw
    ETEPMA0GA1UEAxMGZmJDZXJ0MB4XDTI0MDkxNjA5NTU0NloXDTQ0MDkxMTA5NTU0
    NlowETEPMA0GA1UEAxMGZmJDZXJ0MIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIIC
    CgKCAgEAwAI8UOkpqeheGMJjETteAPrNTBkx61vhUmuKvJW7W2DvaGVzjujSBlSm
    tnmu/6X2RoI9l30q388ZgVxmzs+UmXouOU4teu2t+qnGa2Aax4wunK5Uhv+Bl3dP
    UYLoPITZLgo4sqYFA0aF23cRInWEKOwnc2TQTyI1J6zcA3Cu0r0shQkf8SkxVlXe
    ycs1lPApZqodgsK4GotLgHBnfagU+djCZ7/ebW+Gd7wVWKmhEib5o16436VBVFSj
    mIBhEXWREO5hcJR5mEvqB6PBDOMT6DiaPToZ81PrT6b+aZIyuieftN9+X3043RUu
    x+NMy91X34IdbUMSW1hAXOSmg0WpnhBeT25K5kAi3lrdCQ1fcBZ+bQ3Wlfe9ZcA1
    /W5ejlRW1vtXNzzBDoxmDu5h5VEbi7vdKpO52xP2GRdwsdkmhGamemuHrnbLfFjB
    qSYq5P8d2mcOVx6c27/pNsRIIwlNTW2vKkcj6XhgZ9T7XAzYVeHga640TCefMsPz
    JwWLASjBuR5C7m8Z55aq8QkANw0G2tuSGOhMkiBzWbp0qk5184Je5r48IO0WIO8W
    OxUzR+DD5vTGRovIEOTKBx0ISsOFX/qhFfIc4vk4cBrYfpPUF42jlpTf4dM8HKwb
    fPdGQO5Qo25A1uBf7jSXjq5N9RZBAErM6/eO46UuKXvC1xfGtbECAwEAAaNhMF8w
    DgYDVR0PAQH/BAQDAgKkMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAP
    BgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBRSqozBwgBFj8V30GEdNR73Iyid6zAN
    BgkqhkiG9w0BAQsFAAOCAgEAj1YWiftqYkWrsx78JIb2f6cPJ7HIbDd5opNpUpTv
    AFXSwo6LivALZJ7dgGE+k5LEI8qzv6cTpezPXO38msrZaIp6McL3vdfpeXmTycFw
    81U+4eu8V/WX/yiaOKve2pEUre03juPAeGrMaqukmqRy9jbra1KC/6M+zwYoyrwT
    ftU0sOfr+lSdAjDrECeye+4H/+kN3/+cVBorR2gxZqQWfPuBcKlKB+W8GekgrboC
    cJgNU80HvULsTXJ7IAh0Ubs7damBOSVaFt68JCBRyp0ujYBF8LL6WK3pUEV6FPnJ
    F2aVj1JmpoIrrug6wd2rixKiuU1qJxrCER7ZhFgUm7055VG3BEc63OihLHGz1i9W
    UNgyJ7JjDNiktvsbPmZzEa8GebplgbSqN06YoU6HZcmdkwFoYnyHba0Kg7qAxmCI
    qm4RMlWoFHl31+MlMCke7Kjqe/IvEXO7R1hpcDa+Z138YqeVdobFp8GKzn6xra/3
    Vzvz9yYTsvoKXCScMAL0zwmK6xWZvuPM2m6VGMPjs+sv6Aeg3SW/itQ7f+y5FNp3
    bsALpD5/SPa86layMhBOcsz8+tQAfaHjDI80wKy6e7nYSFb7w156UGTP5WAWysf1
    84jePrxnlPOKzNHXcnnhaWgij9esceNFKGy9zsF/RB/pTdoDGO1YzndmMByTc/LW
    jj4=
    -----END CERTIFICATE-----
---
# Source: fireboom/charts/fireboom/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-fireboom-fireboom
  labels:
    helm.sh/chart: fireboom-0.1.14
    app.kubernetes.io/name: fireboom
    app.kubernetes.io/instance: my-fireboom
    app.kubernetes.io/version: "0.1.14"
    app: fireboom
    version: v1
  annotations:
    
    servicemesh.kubesphere.io/enabled: 'true'
    kubesphere.io/serviceType: statelessservice
    kubesphere.io/description: Fireboom server
spec:
  type: ClusterIP
  ports:
    - port: 9123
      targetPort: 9123
      protocol: TCP
      name: http-9123
    - port: 9991
      targetPort: 9991
      protocol: TCP
      name: http-9991
  selector:
      app.kubernetes.io/name: fireboom
      app.kubernetes.io/instance: my-fireboom
---
# Source: fireboom/charts/oidc/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-fireboom-oidc
  labels:
    helm.sh/chart: oidc-0.1.14
    app.kubernetes.io/name: oidc
    app.kubernetes.io/instance: my-fireboom
    app.kubernetes.io/version: "0.1.14"
    app: oidc
    version: v1
  annotations:
    
    kubesphere.io/serviceType: statelessservice
    kubesphere.io/description: OpenID Connect (OIDC) service for Fireboom
spec:
  type: ClusterIP
  ports:
    - port: 9825
      targetPort: 9825
      protocol: TCP
      name: http-9825
  selector:
      app.kubernetes.io/name: oidc
      app.kubernetes.io/instance: my-fireboom
---
# Source: fireboom/charts/web/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-fireboom-web
  labels:
    helm.sh/chart: web-0.1.14
    app.kubernetes.io/name: web
    app.kubernetes.io/instance: my-fireboom
    app.kubernetes.io/version: "0.1.14"
    app: web
    version: v1
  annotations:
    
    kubesphere.io/serviceType: statelessservice
    kubesphere.io/description: Frontend pages
spec:
  type: NodePort
  ports:
    - port: 80
      targetPort: 80
      protocol: TCP
      name: http-80
  selector:
      app.kubernetes.io/name: web
      app.kubernetes.io/instance: my-fireboom
---
# Source: fireboom/charts/fireboom/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-fireboom-fireboom
  labels:
    helm.sh/chart: fireboom-0.1.14
    app.kubernetes.io/name: fireboom
    app.kubernetes.io/instance: my-fireboom
    app.kubernetes.io/version: "0.1.14"
    app: fireboom
    version: v1
  annotations:
    
    servicemesh.kubesphere.io/enabled: 'true'
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: fireboom
      app.kubernetes.io/instance: my-fireboom
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: 'true'
      labels:
        app.kubernetes.io/name: fireboom
        app.kubernetes.io/instance: my-fireboom
    spec:
      
      serviceAccount: default
      serviceAccountName: default
      restartPolicy: Always
      volumes:
        - name: share-app
          emptyDir: {}
        - name: mount-env
          configMap:
            name: my-fireboom-fireboom-cfgmap
            items:
              - key: .env.prod
                path: .env.prod
            defaultMode: 420
        - name: mount-auth-key
          configMap:
            name: my-fireboom-fireboom-cfgmap
            items:
              - key: authentication.key
                path: authentication.key
            defaultMode: 420
      initContainers:
        - name: fb-data
          image: ":latest"
          volumeMounts:
            - name: share-app
              mountPath: /app
          imagePullPolicy: IfNotPresent
        - name: fb-build
          image: 'fireboomapi/fireboom:v2.0.10'
          args:
            - build
          volumeMounts:
            - name: share-app
              mountPath: /app
            - name: mount-env
              readOnly: true
              mountPath: /app/.env.prod
              subPath: .env.prod
          imagePullPolicy: IfNotPresent
      containers:
        - name: fireboom
          image: 'fireboomapi/fireboom:v2.0.10'
          imagePullPolicy: IfNotPresent
          ports:
            - name: http-9123
              containerPort: 9123
              protocol: TCP
            - name: http-9991
              containerPort: 9991
              protocol: TCP
          volumeMounts:
            - name: share-app
              mountPath: /app
            - name: mount-env
              readOnly: true
              mountPath: /app/.env.prod
              subPath: .env.prod
            - name: mount-auth-key
              readOnly: true
              mountPath: /app/authentication.key
              subPath: authentication.key
          livenessProbe:
            httpGet:
              path: /
              port: 9991
              scheme: HTTP
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /
              port: 9991
              scheme: HTTP
            timeoutSeconds: 3
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          startupProbe:
            httpGet:
              path: /
              port: 9991
              scheme: HTTP
            initialDelaySeconds: 3
            timeoutSeconds: 3
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          resources:
            {}
        - name: fireboom-hook
          image: ":latest"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http-9992
              containerPort: 9992
              protocol: TCP
          volumeMounts:
            - name: share-app
              mountPath: /app
            - name: mount-env
              readOnly: true
              mountPath: /app/.env.prod
              subPath: .env.prod
          livenessProbe:
            httpGet:
              path: /health
              port: 9992
              scheme: HTTP
          readinessProbe:
            httpGet:
              path: /health
              port: 9992
              scheme: HTTP
          startupProbe:
            httpGet:
              path: /health
              port: 9992
              scheme: HTTP
          resources:
            {}
---
# Source: fireboom/charts/oidc/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-fireboom-oidc
  labels:
    helm.sh/chart: oidc-0.1.14
    app.kubernetes.io/name: oidc
    app.kubernetes.io/instance: my-fireboom
    app.kubernetes.io/version: "0.1.14"
    app: oidc
    version: v1
  annotations:
    
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: oidc
      app.kubernetes.io/instance: my-fireboom
  template:
    metadata:
      annotations:
      labels:
        app.kubernetes.io/name: oidc
        app.kubernetes.io/instance: my-fireboom
    spec:
      
      serviceAccount: default
      serviceAccountName: default
      restartPolicy: Always
      volumes:
        - name: cert-volume
          configMap:
            name: my-fireboom-oidc-cfgmap
            items:
              - key: token_jwt_key.key
                path: token_jwt_key.key
              - key: token_jwt_key.pem
                path: token_jwt_key.pem
            defaultMode: 420
      containers:
        - name: oidc
          image: "fireboomapi/yudai:master"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http-9825
              containerPort: 9825
              protocol: TCP
          env:
            - name: YUDAI_DB_URL
              valueFrom:
                configMapKeyRef:
                  name: my-fireboom-oidc-cfgmap
                  key: YUDAI_DB_URL
          volumeMounts:
            - name: cert-volume
              readOnly: true
              mountPath: /yudai/cert
          livenessProbe:
            httpGet:
              path: /
              port: 9825
              scheme: HTTP
            timeoutSeconds: 3
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /
              port: 9825
              scheme: HTTP
            timeoutSeconds: 3
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          resources:
            {}
---
# Source: fireboom/charts/web/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-fireboom-web
  labels:
    helm.sh/chart: web-0.1.14
    app.kubernetes.io/name: web
    app.kubernetes.io/instance: my-fireboom
    app.kubernetes.io/version: "0.1.14"
    app: web
    version: v1
  annotations:
    
spec:
  replicas: 
  selector:
    matchLabels:
      app.kubernetes.io/name: web
      app.kubernetes.io/instance: my-fireboom
  template:
    metadata:
      annotations:
      labels:
        app.kubernetes.io/name: web
        app.kubernetes.io/instance: my-fireboom
    spec:
      
      serviceAccount: default
      serviceAccountName: default
      restartPolicy: Always
      containers:
        - name: web
          image: ":latest"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http-80
              containerPort: 80
              protocol: TCP
          env:
            - name: FB_API_URL
              value: 'my-fireboom-fireboom:9991'
          livenessProbe:
            httpGet:
              path: /
              port: 80
              scheme: HTTP
            timeoutSeconds: 3
            periodSeconds: 30
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /
              port: 80
              scheme: HTTP
            timeoutSeconds: 3
            periodSeconds: 30
            successThreshold: 1
            failureThreshold: 3
          resources:
            {}
