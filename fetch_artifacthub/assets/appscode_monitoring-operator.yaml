---
# Source: monitoring-operator/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-monitoring-operator
  namespace: default
  labels:
    helm.sh/chart: monitoring-operator-v0.0.10
    app.kubernetes.io/name: monitoring-operator
    app.kubernetes.io/instance: my-monitoring-operator
    app.kubernetes.io/version: "v0.0.10"
    app.kubernetes.io/managed-by: Helm
---
# Source: monitoring-operator/templates/apiregistration.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-monitoring-operator-apiserver-cert
  namespace: default
  labels:
    helm.sh/chart: monitoring-operator-v0.0.10
    app.kubernetes.io/name: monitoring-operator
    app.kubernetes.io/instance: my-monitoring-operator
    app.kubernetes.io/version: "v0.0.10"
    app.kubernetes.io/managed-by: Helm
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURhakNDQWxLZ0F3SUJBZ0lSQUx2cWJ5SSt4OHFHV0VMWFdreDNZT2N3RFFZSktvWklodmNOQVFFTEJRQXcKRFRFTE1Ba0dBMVVFQXhNQ1kyRXdIaGNOTWpRd09URTJNRGcwT0RJeVdoY05NelF3T1RFME1EZzBPREl5V2pBaApNUjh3SFFZRFZRUURFeFp0ZVMxdGIyNXBkRzl5YVc1bkxXOXdaWEpoZEc5eU1JSUJJakFOQmdrcWhraUc5dzBCCkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXZocTZQNEpBRHlIYUhkWXZVNGh2QnpVZjBlR1FsMEFxMmlOUHF4SDYKVnpxQldtSDlYTDZnbzJQcnNxRXZnZjVBbkRkZmJxSVJsdCtkZDhzaEYvcnRnMlh0Q3hLNDIzRDd4NTVBU29weAppQXpxNytVbHRLdERZek80eWgvNXNuNEJzZFEzZ3Q4NTJpRDZ5bloxNlpseGIzbjd3NUJPMWc0VG1Rd2NDUDlyClduV1VGNG1qVStHUG9JMEpiS2ZHbzlYYlhoWmY2Q0lrNGxpakVVQ29KKy9Gc1p2UVRwaW1US2FXeCtJRnJuVW0KV2U2YkZvMVVNd2trVk5JblNmeHdYUlR3d29TY0lqaXgwa1dHdzMxZTBFeG5SaU5jbmNpRGdwSldWMlZyK203agpvekMxSTVEcm1Ia1FDbnk0dmVtd2FVcUVBb2E5ZDZxSzZIeXNLT1o1bkNEZHh3SURBUUFCbzRHd01JR3RNQTRHCkExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0RBWUQKVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCUlhIdHJjemRFSzJZeXo0bW9BekVpUThaQzhhakJOQmdOVgpIUkVFUmpCRWdoNXRlUzF0YjI1cGRHOXlhVzVuTFc5d1pYSmhkRzl5TG1SbFptRjFiSFNDSW0xNUxXMXZibWwwCmIzSnBibWN0YjNCbGNtRjBiM0l1WkdWbVlYVnNkQzV6ZG1Nd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFBN24KYnJ4a3Y0d0NlLy83bWVGalpFRHd0b3c2WU9nVHVkK2I2WitkWTRYbmphbHF0SDQ3OE5lQUhmWlhuRFVZSmZjYQp5Y0ZGNmlWYXcrV1RLVFBndGd5Z3o2MG5pWGlINll2YVhZeU1mMkZpVTltZ3RHUXlLTUFkSGh1ZDJIS2I1VjFFCmNBcEZhV0tyZ0phbi9Nc0wzNWZoRUd2UDBESUh0bWRQKytFQ3lVNWlRN3JmY0tIb2hYVEhxeGlQMWxSZURER0cKbXZLSHNVeXFvWnlKS3RtWTc0eVhwcFRVdjdJWlZldnZwZ2NCWDVEYlVzL0N5RGJ1aFpuQ2lOUUREelZKUGdvZwpiYWNQRjB0WWNCVzhjNWpQM09PTk1nTHRrdjdXMUVxMzk2eWdEQXA2ZHBCUG9DYlFUVGdySGFyM1dBeDVtZDdmCkNoWWFOQ3FJTVRqL045M1dlTXc9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdmhxNlA0SkFEeUhhSGRZdlU0aHZCelVmMGVHUWwwQXEyaU5QcXhINlZ6cUJXbUg5ClhMNmdvMlByc3FFdmdmNUFuRGRmYnFJUmx0K2RkOHNoRi9ydGcyWHRDeEs0MjNEN3g1NUFTb3B4aUF6cTcrVWwKdEt0RFl6TzR5aC81c240QnNkUTNndDg1MmlENnluWjE2Wmx4YjNuN3c1Qk8xZzRUbVF3Y0NQOXJXbldVRjRtagpVK0dQb0kwSmJLZkdvOVhiWGhaZjZDSWs0bGlqRVVDb0orL0ZzWnZRVHBpbVRLYVd4K0lGcm5VbVdlNmJGbzFVCk13a2tWTkluU2Z4d1hSVHd3b1NjSWppeDBrV0d3MzFlMEV4blJpTmNuY2lEZ3BKV1YyVnIrbTdqb3pDMUk1RHIKbUhrUUNueTR2ZW13YVVxRUFvYTlkNnFLNkh5c0tPWjVuQ0RkeHdJREFRQUJBb0lCQUhYaElPaE1uZWhFTjNvVQozQmZTRy9hK0xGTDZxYXdBTUJJL255RVc3c0swRm8yekFXWkhGbGo2bHFhWGFGd1ZDbjlUbnF0OWQ2YTBWbkozCjFMZUg4MHR0SW9XaFFGdGlQZDNUOVUzRGR3N0Q0OUtKcHMzVy9OeEFzQzgxa0tIcm5LVm1VRjJvaWJrR2hqeVIKSkNDTDgxa0tyT0RoVk9GS3JVQlR6L2FNVzBjbFcremZWRGo5Yjd1d0FMaGtvOTRDbkhiRlVtSFhlQm8yakxoUgpmOS9tdEorRVZjek4xdnFuc2JWak43dUhkZ1VCTzhuaWsrWU5oWWJNR0Y1Q2Jpa1VKMWZUNWdKN1F4eGJBTjhQCk1ybDdkWlBkdlQ0UUJUTlNqK3BSZ1NpWmF3WFEvOHI4bVJJdFVFZER2Yk1FMnVOczhaUitDdzU5aHFHdlRpTDgKSkp5cDZoRUNnWUVBMnpDZ20yMFRuelROZWlrMndwS2dhS2RqMmFyaWdyOUd5RnI2a1RHYW9nQzQ5a1ZCOXhMVQpTL2VyMHBwTUtRai9UMWNLZUJReFpuaVpvRlFOUGVIaXpVM0lqc3Q5Vmltam9yRGM0SzZ2ZmpIZDh0RnBtaVZEClhDTllZYmNDRXJJelhZempaRzY0WnpST2tUaHRYUmtxK1prZzF4S2xtUXZzRFRrbjE3dmk1UE1DZ1lFQTNnZW8KN3NCNjlSQVhoZ25YdUw3OEFZMk0yOHJERVNMMi8vbDV5RWowRmU1d1pNaFhwKzJLNTF5OFVtaHFQaWtXczJGNwpjTHdleWxHVlV3emx1NC9iTnd3eFJrOHRVYWhSRXFuai8rOWFxNno1MHhvMldPaHc5amRySlVtbE5qNFZRZkdLCktYODFvRTJ1bnVyMGNnQ2pDdzB3SVUzcjdiaXlJcXVZTzZSbjZOMENnWUVBb0I5UjlMa21VSE8rZDdPTDhYQTAKQnIvaHphMXNjNTlRRWlXRVRuVXlSWTdKai83Z1JhSlh2SGRkNmlnVjR4UlRqcDVEWTUwOHlXTG90NXN2WVRtVworZXdNeTJRVVY5RnJYUHBmSVRQN3QvQ3Q5eWpNUUhOZ1ZmcnNJZFlUaVp6c3NUYXZGenRiTXVtZlM2OHhGWVhCClF6MStKQi9YSVlyNEVtRGlubEwvV2NrQ2dZRUFxWk5rSE9WNWc0NEV5V1RmRThVYUovMTZaYXdaREErT1lyYWgKb3F6RmI3S3F1TzZpdENraSs4M0NMNVo3L25uWFVxM1RYNmp1UTB2SUpxUWxHZm1uVGdYTDVJMDRhYk9LS0IwRgpmRVhORkcyS2FRY09GeDJBbVN4K2N2NHFacUZJRHhOeG1Id0Y4eWNoaFZLaDNDaE1YbloyR2htdlplSzRldTVmCjJMMmFkeWtDZ1lCM2tlL0xiQUhNdGtNK2xVSHNoRFVSRFN5OW1FTG54TisrcUxkRkpNU2JvRnRUeVdTZ3BsVTUKbytmaWl6L1hSMndxMGdMblA5ejMxMFNsNHVTL3dieDBaQ1FnczVxa1dSVFdKYktFejN0VmRoZTlqRWRDOXY0SQpqTHlMMldCOHV6S2V4ZTNyejZVNm1kUWRxRTNEN1hQVWh0SHVyRXhyT2tVaWpwcFpLMCtQZHc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: monitoring-operator/templates/cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-monitoring-operator
  labels:
    helm.sh/chart: monitoring-operator-v0.0.10
    app.kubernetes.io/name: monitoring-operator
    app.kubernetes.io/instance: my-monitoring-operator
    app.kubernetes.io/version: "v0.0.10"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs: ["*"]
- apiGroups:
  - ui.openviz.dev
  resources:
  - "*"
  verbs: ["*"]
- apiGroups:
  - openviz.dev
  resources:
  - "*"
  verbs: ["get", "list", "watch"]
- apiGroups:
  - appcatalog.appscode.com
  resources:
  - "*"
  verbs: ["get", "list", "watch"]
- apiGroups:
  - ""
  resources:
  - configmaps
  - secrets
  - nodes
  verbs: ["get", "list", "watch"]
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterroles
  - clusterrolebindings
  - roles
  - rolebindings
  verbs: ["get", "list", "watch"]
# permissions for prometheus syncer
- apiGroups:
  - monitoring.coreos.com
  resources:
  - prometheuses
  verbs: ["get", "list", "watch", "update", "patch"]
- apiGroups:
  - apps
  resources:
  - deployments
  verbs: ["get", "list", "watch"]
- apiGroups:
  - meta.k8s.appscode.com
  resources:
  - resourcequeries
  verbs: ["create"]
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs: ["get", "list", "watch"]
- apiGroups:
  - ""
  resources:
  - serviceaccounts
  verbs: ["get", "list", "watch", "create", "update", "patch"]
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - roles
  - rolebindings
  verbs: ["get", "list", "watch", "create", "update", "patch"]
- apiGroups:
  - ""
  resources:
  - services/proxy
  verbs: ["*"]
- apiGroups:
  - charts.x-helm.dev
  resources:
  - clusterchartpresets
  - chartpresets
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
- apiGroups:
  - appcatalog.appscode.com
  resources:
  - appbindings
  verbs: ["get", "list", "watch", "create", "update", "patch"]
# permissions for service monitor syncer
- apiGroups:
  - monitoring.coreos.com
  resources:
  - servicemonitors
  verbs: ["get", "list", "watch", "create", "update", "patch"]
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  - secrets
  verbs: ["get", "list", "watch", "create", "update", "patch"]
---
# Source: monitoring-operator/templates/apiregistration.yaml
# to delegate authentication and authorization
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-monitoring-operator-apiserver-auth-delegator
  labels:
    helm.sh/chart: monitoring-operator-v0.0.10
    app.kubernetes.io/name: monitoring-operator
    app.kubernetes.io/instance: my-monitoring-operator
    app.kubernetes.io/version: "v0.0.10"
    app.kubernetes.io/managed-by: Helm
roleRef:
  kind: ClusterRole
  apiGroup: rbac.authorization.k8s.io
  name: system:auth-delegator
subjects:
- kind: ServiceAccount
  name: my-monitoring-operator
  namespace: default
---
# Source: monitoring-operator/templates/cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-monitoring-operator
  labels:
    helm.sh/chart: monitoring-operator-v0.0.10
    app.kubernetes.io/name: monitoring-operator
    app.kubernetes.io/instance: my-monitoring-operator
    app.kubernetes.io/version: "v0.0.10"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-monitoring-operator
subjects:
- kind: ServiceAccount
  name: my-monitoring-operator
  namespace: default
---
# Source: monitoring-operator/templates/apiregistration.yaml
# to read the config for terminating authentication
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: my-monitoring-operator-apiserver-extension-server-authentication-reader
  namespace: kube-system
  labels:
    helm.sh/chart: monitoring-operator-v0.0.10
    app.kubernetes.io/name: monitoring-operator
    app.kubernetes.io/instance: my-monitoring-operator
    app.kubernetes.io/version: "v0.0.10"
    app.kubernetes.io/managed-by: Helm
roleRef:
  kind: Role
  apiGroup: rbac.authorization.k8s.io
  name: extension-apiserver-authentication-reader
subjects:
- kind: ServiceAccount
  name: my-monitoring-operator
  namespace: default
---
# Source: monitoring-operator/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-monitoring-operator
  namespace: default
  labels:
    helm.sh/chart: monitoring-operator-v0.0.10
    app.kubernetes.io/name: monitoring-operator
    app.kubernetes.io/instance: my-monitoring-operator
    app.kubernetes.io/version: "v0.0.10"
    app.kubernetes.io/managed-by: Helm
spec:
  ports:
  # Port used to expose admission webhook apiserver
  - name: api
    port: 443
    targetPort: 8443
  selector:
    app.kubernetes.io/name: monitoring-operator
    app.kubernetes.io/instance: my-monitoring-operator
---
# Source: monitoring-operator/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-monitoring-operator
  namespace: default
  labels:
    helm.sh/chart: monitoring-operator-v0.0.10
    app.kubernetes.io/name: monitoring-operator
    app.kubernetes.io/instance: my-monitoring-operator
    app.kubernetes.io/version: "v0.0.10"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: monitoring-operator
      app.kubernetes.io/instance: my-monitoring-operator
  template:
    metadata:
      labels:
        app.kubernetes.io/name: monitoring-operator
        app.kubernetes.io/instance: my-monitoring-operator
      annotations:
        checksum/apiregistration.yaml: e986d05ab29c27306b4926e392891b9e2dfe45cc24caa90bbca78a3c52c44bb9
    spec:
      
      serviceAccountName: my-monitoring-operator
      containers:
      - name: operator
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65534
        image: ghcr.io/appscode/grafana-tools:v0.0.10
        imagePullPolicy: IfNotPresent
        args:
        - ui-server
        - --v=3
        - --secure-port=8443
        - --audit-log-path=-
        - --tls-cert-file=/var/serving-cert/tls.crt
        - --tls-private-key-file=/var/serving-cert/tls.key
        - --use-kubeapiserver-fqdn-for-aks=true
        - --baseURL=
        - --token=$(PLATFORM_API_TOKEN)
        ports:
        - containerPort: 8443
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        resources:
          {}
        volumeMounts:
        - mountPath: /var/serving-cert
          name: serving-cert
      volumes:
      - name: serving-cert
        secret:
          defaultMode: 420
          secretName: my-monitoring-operator-apiserver-cert
      securityContext:
        fsGroup: 65535
---
# Source: monitoring-operator/templates/apiregistration.yaml
# register as aggregated apiserver
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  name: v1alpha1.ui.openviz.dev
  labels:
    helm.sh/chart: monitoring-operator-v0.0.10
    app.kubernetes.io/name: monitoring-operator
    app.kubernetes.io/instance: my-monitoring-operator
    app.kubernetes.io/version: "v0.0.10"
    app.kubernetes.io/managed-by: Helm
spec:
  group: ui.openviz.dev
  version: v1alpha1
  service:
    namespace: default
    name: my-monitoring-operator
  caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCakNDQWU2Z0F3SUJBZ0lSQUo0NElDLzMvR0ZDTFhTbnJQTXptazB3RFFZSktvWklodmNOQVFFTEJRQXcKRFRFTE1Ba0dBMVVFQXhNQ1kyRXdIaGNOTWpRd09URTJNRGcwT0RJeVdoY05NelF3T1RFME1EZzBPREl5V2pBTgpNUXN3Q1FZRFZRUURFd0pqWVRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBT3A5Cm54OFE0bWd3RmVJUmg2b2VyV2Q0QndCZmZnL1EwSGFwWm4zdDR1QTdCVVdNWStxRDFuVklkellaTFY2NDJyYjIKNzMyYm1ZOTB4TDhKUWhXa21pb3dyNWI1cUJoaWI1UnZCT3hNeWJGUS9nVmxRRmp0OTUvazdDdjBOVHJjdHQ0MwpxcVZhb291SjdwUHZxa3Zpb2dsKzZlNTQzYkNSTjFieFB1MXRxUXpLV1RtbzArTW9WQUhaUFh2V2dMTjZzalo5Cmx2b1NEekNXUi8xOWZNQjdReGtTRm8vbXgrMHM5V0pQcEkzK0c4Mm9VL2x2NnA0UDkvbEN2WUJXL2puWVMvN3EKU2RmenFnU3lkcnQ3bThaNUNYcEJwYk1OMXI1TU9WQWlXSWR3dmtRRzZ3bVVzTi8xdnlWSGZRL1JYQnhXQ1lRSwpCMXk5d1VuT1BORjZVTUx6d3lNQ0F3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trTUIwR0ExVWRKUVFXCk1CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVcKQkJSWEh0cmN6ZEVLMll5ejRtb0F6RWlROFpDOGFqQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUF2ZmVBV25PaAorblc4VzQyWERLU3dtNW45cHpnMGI5N3ZmelN4ak0yb0RDZTdhcmxWOFcrbHZENVhSTGNjQnVFendKUTB2M2xiClloa1AwdElyUTVNN2g1ZlpCb3BCdWRpZ3crZmhyZXhyU01ISWNQbWREQWh2VENaQi9oRFJ5N01LZkJwUXNnVHMKQlhJQ0xvcHVvU3NlWUhuaG8veHFFVytVamZhVDhJKzhYOUdPajhWTmVWMmJ4c2J2QXZ5SHY5S01UT1NESzg1QQo4VURvRUgxNi85d0ZVeTc5TFB3eGRKdENuVTZRSGxaZUp1MWNPZUMyOGs4SnFRVW85WFpLNHJUNm1remdVbmRjCm4zMDZ1ditEcnM3MDZMZnU3aER0S3Fxb1c1b0F2VFIwUGp6RHNsQng3ZTA1Z1I0YjZiRHJFU2VINXB0OUVzOEwKZjgwMks5a2U0dmI1MXc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  groupPriorityMinimum: 10000
  versionPriority: 15
---
# Source: monitoring-operator/templates/user-roles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kubeops:identity:admin
  labels:
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
    rbac.authorization.k8s.io/aggregate-to-view: "true"
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
- apiGroups:
  - identity.k8s.appscode.com
  resources:
  - whoamis
  verbs: ["create"]
