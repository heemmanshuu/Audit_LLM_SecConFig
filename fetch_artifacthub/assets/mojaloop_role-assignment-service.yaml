---
# Source: role-assignment-service/templates/service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-role-assignment-service
  namespace: "default"
  labels:
    app.kubernetes.io/name: role-assignment-service
    helm.sh/chart: role-assignment-service-3.1.0
    app.kubernetes.io/instance: my-role-assignment-service
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: role-assignment-service
---
# Source: role-assignment-service/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-role-assignment-service-config
  labels:
    app.kubernetes.io/name: role-assignment-service
    helm.sh/chart: role-assignment-service-3.1.0
    app.kubernetes.io/instance: my-role-assignment-service
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: role-assignment-service
data:
  default.json: |
    {
      "AUTO_GRANT_PORTAL_ADMIN_ROLES": [
        "manager"
      ],
      "CENTRAL_SERVICE_ADMIN_URL": "http://my-role-assignment-service-admin-api-svc:80",
      "CORS_WHITELIST": [
        "http://reporting-hub-bop-shell.local",
        "http://reporting-hub-bop-role-ui.local"
      ],
      "ENDPOINT_CACHE_CONFIG": {
        "expiresIn": 180000,
        "generateTimeout": 30000
      },
      "ERROR_HANDLING": {
        "includeCauseExtension": true,
        "truncateExtensions": true
      },
      "HOST": "0.0.0.0",
      "INSPECT": {
        "COLOR": true,
        "DEPTH": 4,
        "SHOW_HIDDEN": false
      },
      "INSTRUMENTATION": {
        "METRICS": {
          "DISABLED": false,
          "config": {
            "defaultLabels": {
              "serviceName": "role-assignment-service"
            },
            "prefix": "moja_ra_api",
            "timeout": 5000
          },
          "labels": {
            "eventId": "*"
          }
        }
      },
      "KEYCLOAK_CLIENT_ID": "admin-cli",
      "KEYCLOAK_PASSWORD": "admin",
      "KEYCLOAK_REALM": "master",
      "KEYCLOAK_REFRESH_INTERVAL": "58000",
      "KEYCLOAK_URL": "http://keycloak:8080",
      "KEYCLOAK_USER": "admin",
      "ORY_KETO_READ_SERVICE_URL": "http://keto-read:80",
      "ORY_KETO_WRITE_SERVICE_URL": "http://keto-write:80",
      "PORT": 3008,
      "ROLES_LIST": [
        "USER_ROLE_abc7a2fd-4acf-4547-a194-1673f63eb37c",
        "ADMIN_ROLE_6c1ec084-86d4-4915-ba81-6c59b87a65a6"
      ],
      "ROLE_OPERATOR_SERVICE_URL": "http://my-role-assignment-service-security-role-perm-operator-svc:80"
    }
---
# Source: role-assignment-service/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-role-assignment-service
  namespace: "default"
  labels:
    app.kubernetes.io/name: role-assignment-service
    helm.sh/chart: role-assignment-service-3.1.0
    app.kubernetes.io/instance: my-role-assignment-service
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: role-assignment-service
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 80
      targetPort: 3008
      protocol: TCP
  selector:
    app.kubernetes.io/name: role-assignment-service
    app.kubernetes.io/instance: my-role-assignment-service
    app.kubernetes.io/component: role-assignment-service
---
# Source: role-assignment-service/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-role-assignment-service
  namespace: "default"
  labels:
    app.kubernetes.io/name: role-assignment-service
    helm.sh/chart: role-assignment-service-3.1.0
    app.kubernetes.io/instance: my-role-assignment-service
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: role-assignment-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: role-assignment-service
      app.kubernetes.io/instance: my-role-assignment-service
      app.kubernetes.io/component: role-assignment-service
  template:
    metadata:
      annotations: 
        checksum/config: d7e434a0e683d806bcfffb02244e833ca08624e301e814a47478a45f25ee9975
        prometheus.io/port: "3008"
        prometheus.io/scrape: "true"
      labels:
        app.kubernetes.io/name: role-assignment-service
        helm.sh/chart: role-assignment-service-3.1.0
        app.kubernetes.io/instance: my-role-assignment-service
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: role-assignment-service
        app.kubernetes.io/version: 3.1.0
    spec:
      serviceAccountName: my-role-assignment-service
      
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: role-assignment-service
                    app.kubernetes.io/instance: my-role-assignment-service
                    app.kubernetes.io/component: role-assignment-service
                namespaces:
                  - "default"
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      securityContext:
        fsGroup: 1001
      initContainers:
      containers:
        - name: role-assignment-service
          image: docker.io/mojaloop/role-assignment-service:v2.1.0
          imagePullPolicy: IfNotPresent
          securityContext:
            runAsUser: 1001
          command:
            - npm
            - start
          ports:
            - name: http
              containerPort: 3008
          readinessProbe:
            httpGet:
              path: /health
              port: 3008
            initialDelaySeconds: 15
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /health
              port: 3008
            initialDelaySeconds: 15
            periodSeconds: 15
          volumeMounts:
            - name: my-role-assignment-service-config-volume
              mountPath: /opt/app/config
      volumes:
        - name: my-role-assignment-service-config-volume
          configMap:
            name: my-role-assignment-service-config
            items:
            - key: default.json
              path: default.json
---
# Source: role-assignment-service/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: my-role-assignment-service
  namespace: "default"
  labels:
    app.kubernetes.io/name: role-assignment-service
    helm.sh/chart: role-assignment-service-3.1.0
    app.kubernetes.io/instance: my-role-assignment-service
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: role-assignment-service
spec:
  ## TODO: add this as an option, and it depends on stable API ingress version
  # ingressClassName: "external-lb"
  rules:
    - host: role-assignment-service.local
      http:
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name: my-role-assignment-service
                port:
                  name: http
