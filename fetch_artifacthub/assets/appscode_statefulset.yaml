---
# Source: statefulset/templates/rbac/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-statefulset
  namespace: default
  labels:
    helm.sh/chart: statefulset-v0.0.1
    app.kubernetes.io/name: statefulset
    app.kubernetes.io/instance: my-statefulset
    app.kubernetes.io/version: "v0.0.1"
    app.kubernetes.io/managed-by: Helm
---
# Source: statefulset/templates/apiserver_cert.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-statefulset-apiserver-cert
  namespace: default
  labels:
    helm.sh/chart: statefulset-v0.0.1
    app.kubernetes.io/name: statefulset
    app.kubernetes.io/instance: my-statefulset
    app.kubernetes.io/version: "v0.0.1"
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCakNDQWU2Z0F3SUJBZ0lSQUtVSlQ1ank5b3J4WWxTRElTVEJma3N3RFFZSktvWklodmNOQVFFTEJRQXcKRFRFTE1Ba0dBMVVFQXhNQ1kyRXdIaGNOTWpRd09URTJNRGt3TVRJd1doY05NelF3T1RFME1Ea3dNVEl3V2pBTgpNUXN3Q1FZRFZRUURFd0pqWVRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBT0hMCjRLSGtJSm9lSmh1dlRNQ1E4SFowanJ0SjF5YmRGZjF2SWdmbE8yVThpSzZYY09UTlR3NzIvS3JFRzhMdE1oelMKSGlMWDU3OEpKL0gwYWpselVVRFNDRHplTXE0dVQ4UldMamhQZ2lFNHp6YklVWjQ5dW51LzJtYytyS3Q4N0xxcwo1MFU4QnVxKys5N2M0cURiZm5mWUVMUlZrZnZKTkxVRVJRaVljVU56OFEvZnpQb3pjM3EwdDFTOG5NSG5MR0RjClNzc2ZVUCtoaTZsOGVBSzlMcmZGWTdaVDdudFlXRDViVzRHUVNLaC8vaE1VaElndGk1UndtK2lPbUdXZmRTa04KL1Y5YldMb2JMTlNINmgxVTNVelZXSkc4MWtMNTRZekVKWGc2WmozZU85Y1Z4UXBndTBncHZWQnBaTUJoUnRISQpKWVo5eGFSUGJXU2xiZzVMb0RzQ0F3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trTUIwR0ExVWRKUVFXCk1CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVcKQkJRWnR0VkNocWhSL2Q0K3JwTjFGVWUxcTRTNjV6QU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFDV0lpNlRxVwpCa290OVhCOE5POFYyMG8vRURmdk5TRE12M3c2UjNXd1dXd1RxdmxmMWpTWldjM1V4K2FJVlAycUYrSjFrekNZCi9tbDZtbm5ybmxkcXM4L3JoRUVNWXY3bzhTRThmUjZsNktNZVE0akd1SVdEWU1OVG9DbWZnOHRGeVJJZ2tsQXkKSVRZQ1BrRy9vSHg1d2Z4NzY5WlNRNE00elAwRnJYbnhpbk9aWHN1R002Z3A0V00wSVgwQXF1STUyQXhhNmxVegp5UFgwcnc2YWRXZXpzWHJOd29XSHZncVMwN0UvNi9vNm9ENnRzZHZ0WmJVSEhMVE84V3d1TC9WeEtmWmxuMUsrCkxaSDVvRTdHc1RRcnhrbmZrYWVlYUlsVGxtU3BaL0swOFMwUm5qRWZxRUhNUFBhK3BMZklxZ3ExWWw2V2JhSjQKTW4zV3N2QmJOUVU5T0E9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURhakNDQWxLZ0F3SUJBZ0lSQU9FM1JKWlVhcjJ1RStqU3MrczVONmN3RFFZSktvWklodmNOQVFFTEJRQXcKRFRFTE1Ba0dBMVVFQXhNQ1kyRXdIaGNOTWpRd09URTJNRGt3TVRJd1doY05NelF3T1RFME1Ea3dNVEl3V2pBaApNUjh3SFFZRFZRUURFeFp0ZVMxemRHRjBaV1oxYkhObGRDMTNaV0pvYjI5ck1JSUJJakFOQmdrcWhraUc5dzBCCkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQTQ5SmhlZDg4TDl4S1E3VmlxZXc5VTZwUzMvbnV0MUp5VTdIQTdSQUUKejQ3cExBZWRtUFJTNFo0aU00c3N5WGV3YVV5ZFdtSjFySGNIeG0zclYvTGE0Z1pMeWtaZnZ0dnkrSmNOSW5pcApoRVZnTGNXNjRIK2tWK3Q0UU5ZNnNXTnlKRURodjhnQ1lQWDR0NExwTGZLNWNibjZxc3c2RHdWeFY1eUxQclB4CkV5cnllbmQxbTJnWU8zUldzSkFhYTJzaGRWazkybFF2dm1PcjhvM3hXVHU3L0ltaWJmbjY3U2xCUEx2MUlzWEoKUkg1ZDdYeEI4dFdOUHBEVFlWUEM4TTJSL1dJR0tPclBNb2h6aXhLOEowYndhN2NMMUpnb1NQSlcrcTZMUHAwdwpkTXdJV1Q3Sys4dlFzRHRrQnIyQ1NLNWxpWjE3cExvVFVvVll1S2g2VGp2NkFRSURBUUFCbzRHd01JR3RNQTRHCkExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0RBWUQKVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCUVp0dFZDaHFoUi9kNCtycE4xRlVlMXE0UzY1ekJOQmdOVgpIUkVFUmpCRWdoNXRlUzF6ZEdGMFpXWjFiSE5sZEMxM1pXSm9iMjlyTG1SbFptRjFiSFNDSW0xNUxYTjBZWFJsClpuVnNjMlYwTFhkbFltaHZiMnN1WkdWbVlYVnNkQzV6ZG1Nd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFHNU4KRnlwTGxwODI1RjZUNFRGWnlleFRadjJYaTNCZnBYemtvVmZYamNKNlpBcFlHN2V0L1NBdHlyQkdCd25mNURvaQpaV3dLalNkOURubHl0dHI0TkxSU3U2ZzFoa21sNVVlN2Y2bGxrTFJSZXJnSERGclBSUDJkbUk3S1BBUVFWQU1ECkdhaEZIQUlXdUdzSFhJN1NJUTE4YWF4dkJoVS9xOUtHdU83SHFHWk5QcVVkSGZWa1RXR1pMcFhKczhJWTQvdFoKZk1JUlI2VDFDdkVaUXVKaWluTGEwZGR3b29Fa2FsY2syd0duV25wRUFKUzFPUVBkanVtZHVBSS9CTGVTT0xUMApacGVEclZvKytEQTFFNWJYbktiVFI0dWIvZXhrbFhWbHVpSWxMTzEyZVc4N0x0Ly9EakRzb3RTQ0MwcDVBSWxuCm9sZmljUGFBdGw0VXl2ZW10N2c9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBNDlKaGVkODhMOXhLUTdWaXFldzlVNnBTMy9udXQxSnlVN0hBN1JBRXo0N3BMQWVkCm1QUlM0WjRpTTRzc3lYZXdhVXlkV21KMXJIY0h4bTNyVi9MYTRnWkx5a1pmdnR2eStKY05JbmlwaEVWZ0xjVzYKNEgra1YrdDRRTlk2c1dOeUpFRGh2OGdDWVBYNHQ0THBMZks1Y2JuNnFzdzZEd1Z4VjV5TFByUHhFeXJ5ZW5kMQptMmdZTzNSV3NKQWFhMnNoZFZrOTJsUXZ2bU9yOG8zeFdUdTcvSW1pYmZuNjdTbEJQTHYxSXNYSlJINWQ3WHhCCjh0V05QcERUWVZQQzhNMlIvV0lHS09yUE1vaHppeEs4SjBid2E3Y0wxSmdvU1BKVytxNkxQcDB3ZE13SVdUN0sKKzh2UXNEdGtCcjJDU0s1bGlaMTdwTG9UVW9WWXVLaDZUanY2QVFJREFRQUJBb0lCQVFEY3M5V01uQytSYWdaagoyNWR1YUJidE0yYS81ajlWUjBETVJicFJyaUFLOXpaNldoSlp0KytHOUl2TGhUdHBIVk5BWDJGY3kxK1dLV1hWCjNHeU9zZzFMdzYrdWtFaDIvRnRBYWd6bVpTQkxyRzNGU2ZXRlFRSnp6Z0NjUnkxcTVaMFE4KzMrdllOWWJWRjYKYmc3NVhWZzdqV0VDRDREN1JsbUw5M0tKMXdabmVuS1VYOXI2MlhJNjA5WkI5aUUwQ00weVBuU3dlNGRsN053MApnbm9SME9pRXRXN1dpRitDOWVTb2pxTy9nQStFL2NJbnJlejkxR3BWTVNDSzNJQWJYbDVsVVd0Ykw0UXQ2aWNkClJub2hJV2xXSVE1RUdzMzdSY0JjU2M1cjZIcnl2bDAvODk5SDlhUUtlTVFuV1g5S2Z1MUFzdHJ1amxmYU9MS2YKSVVOQWVJSFZBb0dCQU95a0tTMUlwdG11Sk11U3ZBemdtUFZOY202T2JKWTdkN1g0K2c3OVdGcDZOcUhQUVMrZwpOWmpuNUpzbmcyTXZSUWZhUTdXVkw4dDNUUDI2K0FMei9uZXcyR2FraEF3MFp6MlhYM2pneVRFYXhOT1NUMmhtClFNVWtHSENMOXhzeFhUVjFrUUpRVmNnMjVualAzYzdjbkltVEZlV1JZc1ZwV1Nxc1kxVWFBdDRUQW9HQkFQWjEKaE83MmhFWHhJSjdVcXFoZ3ZLam9Za09EUGR4aUx1eEhyOFMrelZQVld2blVka3VGNVpjN3E4cGJzYkQzOXhwUgora2JEVjRIdEZ0SDUvMzljTENtbW12L0lqTS9od3d2NnAwVDRjQldaVko2dUY3bk05Zy9nWEJZUjdnN3RqTWh6CjZQS0ROVDVwZzZJZlRwdWFuK1g0OE1GalFnMlRLL1Z2eGVWU3NQb2JBb0dBSTdNMFh4ZUp6R2RBTjlJQU9yVWIKZms1YnlDQUdjN2V1L0szK0U0clc3SGRwakltMjNOZC9ubnpGZVQ3QnpKSFNDVGc5Wk1TSC9Gc1lLMk1zalUyQQpBMUNUcFJDR3QweWtrcDhta1JiZ1kxOFZlSkduRnludDlZL1hmQXN4a1ZHbUxTMTZYZTMrc3dETlRrYVZ3T0o1Clh5dm9ic1M3TU9zT3Y2aFlKL3VQbVM4Q2dZQW5OajFuTTZ1SjRUcGFhdVdZRW9RUnI1OXF0R2ZVTjM3VnN2WWgKTEdaSXIwcGhNMDk2NXB2SHV3T3pGM0duQVZ5OFFFeThrM25KdnlvQlVIQTVHRFlpamxKYzNkQ2hobjdjMmcxZwo2TklVYmFmTDgxRHRDOUllWm9qZ0xnd2RMZWhYUURIUTI5Vk56OFhVdG54d1AyS3ZXVE1jNGFqeHRmZXBmaFlUClRWdkEvd0tCZ0JHWTQvSXRXSlQrTzNUeGxmbU0xdXRoZWlDQmxyc3BscVNoMVQ3d2k4bDhOb241VjVvUG9VaS8KdmJNeTBlRUZFMmdwT3pjMExPMGU3U3Fod1pDY2dDV3pyaXE2eU9jMlFyUTJjWTZtSk1WVmRNZmVINldKcWVyTgpzRmd3QWNPUjFUbzJPQTZpTVllK3ljVTdIdmpaZ3lzZ3ZBRU41TlBlTTIrZmR2UmkyTzc0Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: statefulset/templates/rbac/auth_proxy.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-statefulset-auth-proxy
rules:
  - apiGroups:
      - authentication.k8s.io
    resources:
      - tokenreviews
    verbs:
      - create
  - apiGroups:
      - authorization.k8s.io
    resources:
      - subjectaccessreviews
    verbs:
      - create
---
# Source: statefulset/templates/rbac/cluster_role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-statefulset
  labels:
    helm.sh/chart: statefulset-v0.0.1
    app.kubernetes.io/name: statefulset
    app.kubernetes.io/instance: my-statefulset
    app.kubernetes.io/version: "v0.0.1"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs: ["get", "create", "patch", "update"]
  - apiGroups:
      - admissionregistration.k8s.io
    resources:
      - mutatingwebhookconfigurations
      - validatingwebhookconfigurations
    verbs: ["*"]
  - apiGroups:
      - apps.k8s.appscode.com
    resources:
      - "*"
    verbs: ["*"]
  - apiGroups:
      - ""
    resources:
      - events
    verbs: ["create", "patch"]
  - apiGroups:
      - ""
    resources:
      - pods
      - persistentvolumeclaims
    verbs: ["*"]
  - apiGroups:
      - apps
    resources:
      - controllerrevisions
    verbs: ["*"]
---
# Source: statefulset/templates/rbac/metrics_reader.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-statefulset-metrics-reader
rules:
  - nonResourceURLs:
      - /metrics
    verbs:
      - get
---
# Source: statefulset/templates/rbac/auth_proxy.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-statefulset-auth-proxy
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-statefulset-auth-proxy
subjects:
  - kind: ServiceAccount
    name: my-statefulset
    namespace: default
---
# Source: statefulset/templates/rbac/cluster_role_binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-statefulset
  labels:
    helm.sh/chart: statefulset-v0.0.1
    app.kubernetes.io/name: statefulset
    app.kubernetes.io/instance: my-statefulset
    app.kubernetes.io/version: "v0.0.1"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-statefulset
subjects:
- kind: ServiceAccount
  name: my-statefulset
  namespace: default
---
# Source: statefulset/templates/rbac/leader_election.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: my-statefulset-leader-election
  namespace: default
  labels:
    helm.sh/chart: statefulset-v0.0.1
    app.kubernetes.io/name: statefulset
    app.kubernetes.io/instance: my-statefulset
    app.kubernetes.io/version: "v0.0.1"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
---
# Source: statefulset/templates/rbac/leader_election.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: my-statefulset-leader-election
  namespace: default
  labels:
    helm.sh/chart: statefulset-v0.0.1
    app.kubernetes.io/name: statefulset
    app.kubernetes.io/instance: my-statefulset
    app.kubernetes.io/version: "v0.0.1"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: my-statefulset-leader-election
subjects:
  - kind: ServiceAccount
    name: my-statefulset
    namespace: default
---
# Source: statefulset/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-statefulset
  namespace: default
  labels:
    helm.sh/chart: statefulset-v0.0.1
    app.kubernetes.io/name: statefulset
    app.kubernetes.io/instance: my-statefulset
    app.kubernetes.io/version: "v0.0.1"
    app.kubernetes.io/managed-by: Helm
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: https
  selector:
    app.kubernetes.io/name: statefulset
    app.kubernetes.io/instance: my-statefulset
---
# Source: statefulset/templates/webhooks/webhook_service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-statefulset-webhook
  namespace: default
  labels:
    helm.sh/chart: statefulset-v0.0.1
    app.kubernetes.io/name: statefulset
    app.kubernetes.io/instance: my-statefulset
    app.kubernetes.io/version: "v0.0.1"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    app.kubernetes.io/component: webhook-server
    app.kubernetes.io/name: statefulset
    app.kubernetes.io/instance: my-statefulset
  ports:
  - port: 443
    protocol: TCP
    targetPort: 9443
---
# Source: statefulset/templates/operator.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-statefulset-operator
  namespace: default
  labels:
    app.kubernetes.io/component: operator
    helm.sh/chart: statefulset-v0.0.1
    app.kubernetes.io/name: statefulset
    app.kubernetes.io/instance: my-statefulset
    app.kubernetes.io/version: "v0.0.1"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: operator
      app.kubernetes.io/name: statefulset
      app.kubernetes.io/instance: my-statefulset
  template:
    metadata:
      labels:
        app.kubernetes.io/component: operator
        app.kubernetes.io/name: statefulset
        app.kubernetes.io/instance: my-statefulset
      annotations:
        checksum/apiregistration.yaml: 49c36f69338e1cc4e7603dee3c91d442736765b3527edb6572e99e3eaacd010c
    spec:
      
      serviceAccountName: my-statefulset
      containers:
      - name: operator
        image: "ghcr.io/appscode/statefulset:v0.0.1"
        imagePullPolicy: IfNotPresent
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65534
        args:
          - operator
        resources:
          requests:
            cpu: 100m
      securityContext:
        fsGroup: 65535
      nodeSelector:
        kubernetes.io/os: linux
---
# Source: statefulset/templates/webhook-server.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-statefulset-webhook-server
  namespace: default
  labels:
    app.kubernetes.io/component: webhook-server
    helm.sh/chart: statefulset-v0.0.1
    app.kubernetes.io/name: statefulset
    app.kubernetes.io/instance: my-statefulset
    app.kubernetes.io/version: "v0.0.1"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: webhook-server
      app.kubernetes.io/name: statefulset
      app.kubernetes.io/instance: my-statefulset
  template:
    metadata:
      labels:
        app.kubernetes.io/component: webhook-server
        app.kubernetes.io/name: statefulset
        app.kubernetes.io/instance: my-statefulset
      annotations:
        checksum/apiregistration.yaml: 029d4093c54bee87108d7ed697b80fd13828ca23dea5d1a6aafc8f5c0825b9f5
    spec:
      
      serviceAccountName: my-statefulset
      containers:
      - name: webhook-server
        image: "ghcr.io/appscode/statefulset:v0.0.1"
        imagePullPolicy: IfNotPresent
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65534
        args:
          - webhook
          - --webhook-name=my-statefulset
        ports:
        - name: webhook-server
          containerPort: 9443
          protocol: TCP
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        resources:
          requests:
            cpu: 100m
        volumeMounts:
        - name: serving-cert
          mountPath: /var/serving-cert
          readOnly: true
      - name: kube-rbac-proxy
        image: "ghcr.io/appscode/kube-rbac-proxy:v0.11.0"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65534
        args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=10
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
      volumes:
      - name: serving-cert
        secret:
          defaultMode: 420
          secretName: my-statefulset-apiserver-cert
      securityContext:
        fsGroup: 65535
      nodeSelector:
        kubernetes.io/os: linux
---
# Source: statefulset/templates/cleaner/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-statefulset-cleaner
  namespace: default
  labels:
    helm.sh/chart: statefulset-v0.0.1
    app.kubernetes.io/name: statefulset
    app.kubernetes.io/instance: my-statefulset
    app.kubernetes.io/version: "v0.0.1"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": pre-delete
    "helm.sh/hook-delete-policy": hook-succeeded,hook-failed
---
# Source: statefulset/templates/cleaner/cluster_role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-statefulset-cleaner
  labels:
    helm.sh/chart: statefulset-v0.0.1
    app.kubernetes.io/name: statefulset
    app.kubernetes.io/instance: my-statefulset
    app.kubernetes.io/version: "v0.0.1"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": pre-delete
    "helm.sh/hook-delete-policy": hook-succeeded,hook-failed
rules:
  - apiGroups:
      - admissionregistration.k8s.io
    resources:
      - mutatingwebhookconfigurations
      - validatingwebhookconfigurations
    verbs: ["delete"]
  - apiGroups:
      - apps.k8s.appscode.com
    resources:
      - "*"
    verbs: ["delete"]
  - apiGroups:
      - batch
    resources:
      - jobs
    verbs: ["delete"]
---
# Source: statefulset/templates/rbac/user_roles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: appscode:my-statefulset:edit
  labels:
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
- apiGroups:
  - apps.k8s.appscode.com
  resources:
  - "*"
  verbs: ["*"]
---
# Source: statefulset/templates/rbac/user_roles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: appscode:my-statefulset:view
  labels:
    rbac.authorization.k8s.io/aggregate-to-view: "true"
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
- apiGroups:
  - apps.k8s.appscode.com
  resources:
  - "*"
  verbs: ["get", "list", "watch"]
---
# Source: statefulset/templates/cleaner/cluster_rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-statefulset-cleaner
  labels:
    helm.sh/chart: statefulset-v0.0.1
    app.kubernetes.io/name: statefulset
    app.kubernetes.io/instance: my-statefulset
    app.kubernetes.io/version: "v0.0.1"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": pre-delete
    "helm.sh/hook-delete-policy": hook-succeeded,hook-failed
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-statefulset-cleaner
subjects:
  - kind: ServiceAccount
    name: my-statefulset-cleaner
    namespace: default
---
# Source: statefulset/templates/cleaner/job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: my-statefulset-cleaner
  namespace: default
  labels:
    helm.sh/chart: statefulset-v0.0.1
    app.kubernetes.io/name: statefulset
    app.kubernetes.io/instance: my-statefulset
    app.kubernetes.io/version: "v0.0.1"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": pre-delete
    "helm.sh/hook-delete-policy": hook-succeeded,hook-failed
spec:
  backoffLimit: 3
  activeDeadlineSeconds: 120
  template:
    spec:
      
      serviceAccountName: my-statefulset-cleaner
      containers:
      - name: busybox
        image: "ghcr.io/appscode/kubectl-nonroot:v1.24"
        command:
          - sh
          - -c
          - "sleep 2; \
           kubectl delete job my-statefulset-crd-installer -n default || true; \
           kubectl delete functions.stash.appscode.com update-status pvc-backup pvc-restore || true; \
           kubectl delete tasks.stash.appscode.com pvc-backup pvc-restore || true;"
        imagePullPolicy: IfNotPresent
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65534
      restartPolicy: Never
---
# Source: statefulset/templates/webhooks/mutating_webhook.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: my-statefulset
  labels:
    helm.sh/chart: statefulset-v0.0.1
    app.kubernetes.io/name: statefulset
    app.kubernetes.io/instance: my-statefulset
    app.kubernetes.io/version: "v0.0.1"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
webhooks:
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: my-statefulset-webhook
        namespace: default
        path: /mutate-apps-k8s-appscode-com-v1-statefulset
      caBundle: bm90LWNhLWNlcnQ=
    failurePolicy: Fail
    name: statefulsets.apps.k8s.appscode.com
    rules:
      - apiGroups:
          - apps.k8s.appscode.com
        apiVersions:
          - v1
        operations:
          - CREATE
          - UPDATE
        resources:
          - statefulsets
    sideEffects: None
---
# Source: statefulset/templates/webhooks/validating_webhook.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: my-statefulset
  labels:
    helm.sh/chart: statefulset-v0.0.1
    app.kubernetes.io/name: statefulset
    app.kubernetes.io/instance: my-statefulset
    app.kubernetes.io/version: "v0.0.1"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
webhooks:
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: my-statefulset-webhook
        namespace: default
        path: /validate-apps-k8s-appscode-com-v1-statefulset
      caBundle: bm90LWNhLWNlcnQ=
    failurePolicy: Fail
    name: statefulsets.apps.k8s.appscode.com
    rules:
      - apiGroups:
          - apps.k8s.appscode.com
        apiVersions:
          - v1
        operations:
          - CREATE
          - UPDATE
        resources:
          - statefulsets
    sideEffects: None
