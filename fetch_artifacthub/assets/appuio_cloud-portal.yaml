---
# Source: cloud-portal/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-cloud-portal
  labels:
    helm.sh/chart: cloud-portal-0.4.1
    app.kubernetes.io/name: cloud-portal
    app.kubernetes.io/instance: my-cloud-portal
    app.kubernetes.io/version: "v0.2.1"
    app.kubernetes.io/managed-by: Helm
---
# Source: cloud-portal/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-cloud-portal-frontend
  labels:
    helm.sh/chart: cloud-portal-0.4.1
    app.kubernetes.io/name: cloud-portal
    app.kubernetes.io/instance: my-cloud-portal
    app.kubernetes.io/version: "v0.2.1"
    app.kubernetes.io/managed-by: Helm
data:
  config.json: |
    {}
---
# Source: cloud-portal/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-cloud-portal
  labels:
    helm.sh/chart: cloud-portal-0.4.1
    app.kubernetes.io/name: cloud-portal
    app.kubernetes.io/instance: my-cloud-portal
    app.kubernetes.io/version: "v0.2.1"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: cloud-portal
    app.kubernetes.io/instance: my-cloud-portal
---
# Source: cloud-portal/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-cloud-portal
  labels:
    helm.sh/chart: cloud-portal-0.4.1
    app.kubernetes.io/name: cloud-portal
    app.kubernetes.io/instance: my-cloud-portal
    app.kubernetes.io/version: "v0.2.1"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: cloud-portal
      app.kubernetes.io/instance: my-cloud-portal
  template:
    metadata:
      annotations:
        configmap.kubernetes.io/checksum: 6e43927a210b54e5fe059d26bd6a0c24c5b4290e023fb7228f8955272f45c130
      labels:
        app.kubernetes.io/name: cloud-portal
        app.kubernetes.io/instance: my-cloud-portal
    spec:
      serviceAccountName: my-cloud-portal
      securityContext:
        {}
      containers:
        - name: cloud-portal
          securityContext:
            {}
          image: "ghcr.io/appuio/cloud-portal:v0.2.1"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          volumeMounts:
            - name: config
              mountPath: /usr/share/nginx/html/config.json
              subPath: config.json
          resources:
            limits:
              memory: 128Mi
            requests:
              cpu: 20m
              memory: 32Mi
      volumes:
        - name: config
          configMap:
            name: my-cloud-portal-frontend
            items:
              - key: config.json
                path: config.json
