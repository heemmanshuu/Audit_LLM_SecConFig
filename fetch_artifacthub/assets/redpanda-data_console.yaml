---
# Source: console/templates/serviceaccount.yaml
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: my-console
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: my-console
  namespace: default
---
# Source: console/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: my-console
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: my-console
stringData:
  enterprise-license: ""
  kafka-protobuf-git-basicauth-password: ""
  kafka-sasl-aws-msk-iam-secret-key: ""
  kafka-sasl-password: ""
  kafka-schema-registry-password: ""
  kafka-schemaregistry-tls-ca: ""
  kafka-schemaregistry-tls-cert: ""
  kafka-schemaregistry-tls-key: ""
  kafka-tls-ca: ""
  kafka-tls-cert: ""
  kafka-tls-key: ""
  login-github-oauth-client-secret: ""
  login-github-personal-access-token: ""
  login-google-groups-service-account.json: ""
  login-google-oauth-client-secret: ""
  login-jwt-secret: 5L81UB833gqtJVlWavULEMC2HGjx3ed7
  login-oidc-client-secret: ""
  login-okta-client-secret: ""
  login-okta-directory-api-token: ""
  redpanda-admin-api-password: ""
  redpanda-admin-api-tls-ca: ""
  redpanda-admin-api-tls-cert: ""
  redpanda-admin-api-tls-key: ""
type: Opaque
---
# Source: console/templates/configmap.yaml
apiVersion: v1
data:
  config.yaml: |
    # from .Values.console.config
    {}
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: my-console
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: my-console
---
# Source: console/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: my-console
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: my-console
  namespace: default
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 0
  selector:
    app.kubernetes.io/instance: my-console
    app.kubernetes.io/name: console
  type: ClusterIP
---
# Source: console/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: my-console
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: my-console
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: my-console
      app.kubernetes.io/name: console
  strategy: {}
  template:
    metadata:
      annotations:
        checksum/config: 59a1f10eae8de2d6167b722d1dd43a20af957d140e04859ac6582db368cbe082
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: my-console
        app.kubernetes.io/name: console
    spec:
      affinity: {}
      automountServiceAccountToken: true
      containers:
      - args:
        - --config.filepath=/etc/console/configs/config.yaml
        command: null
        env:
        - name: LOGIN_JWTSECRET
          valueFrom:
            secretKeyRef:
              key: login-jwt-secret
              name: my-console
        envFrom: []
        image: docker.redpanda.com/redpandadata/console:v2.7.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 0
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: console
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        securityContext:
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /etc/console/configs
          name: configs
          readOnly: true
        - mountPath: /etc/console/secrets
          name: secrets
          readOnly: true
      imagePullSecrets: []
      initContainers: []
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 99
        runAsUser: 99
      serviceAccountName: my-console
      tolerations: []
      topologySpreadConstraints: []
      volumes:
      - configMap:
          name: my-console
        name: configs
      - name: secrets
        secret:
          secretName: my-console
---
# Source: console/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "my-console-test-connection"
  namespace: "default"
  labels:
    app.kubernetes.io/instance: my-console
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['my-console:8080']
  restartPolicy: Never
  priorityClassName:
