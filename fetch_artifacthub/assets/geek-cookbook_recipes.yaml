---
# Source: recipes/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-recipes-config
  labels:
    helm.sh/chart: recipes-6.6.2
    app.kubernetes.io/name: recipes
    app.kubernetes.io/instance: my-recipes
    app.kubernetes.io/version: "1.0.5.2"
    app.kubernetes.io/managed-by: Helm
data:
  nginx-config: |-
    events {
      worker_connections 1024;
    }
    http {
      include /etc/nginx/mime.types;
      server {
        listen 80;
        server_name _;
        client_max_body_size 128M;
        # serve media files
        location /media/ {
          alias /media/;
        }
        # serve static files
        location /static/ {
          alias /static/;
        }
        # pass requests for dynamic content to gunicorn
        location / {
          proxy_set_header Host $host;
          proxy_set_header REMOTE-USER $http_x_authentik_username;
          proxy_pass http://localhost:8080;
        }
      }
    }
---
# Source: recipes/templates/common.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-recipes
  labels:
    app.kubernetes.io/instance: my-recipes
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: recipes
    app.kubernetes.io/version: 1.0.5.2
    helm.sh/chart: recipes-6.6.2
  annotations:
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: http
    protocol: TCP
    name: http
  selector:
    app.kubernetes.io/name: recipes
    app.kubernetes.io/instance: my-recipes
---
# Source: recipes/templates/common.yaml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-recipes
  labels:
    app.kubernetes.io/instance: my-recipes
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: recipes
    app.kubernetes.io/version: 1.0.5.2
    helm.sh/chart: recipes-6.6.2
spec:
  revisionHistoryLimit: 3
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: recipes
      app.kubernetes.io/instance: my-recipes
  template:
    metadata:
      labels:
        app.kubernetes.io/name: recipes
        app.kubernetes.io/instance: my-recipes
    spec:
      
      serviceAccountName: default
      automountServiceAccountToken: true
      dnsPolicy: ClusterFirst
      enableServiceLinks: true
      containers:
        - name: my-recipes
          image: "vabene1111/recipes:1.0.5.2"
          imagePullPolicy: IfNotPresent
          env:
            - name: ALLOWED_HOSTS
              value: '*'
            - name: COMMENT_PREF_DEFAULT
              value: "1"
            - name: DB_ENGINE
              value: django.db.backends.sqlite3
            - name: DEBUG
              value: "0"
            - name: FRACTION_PREF_DEFAULT
              value: "0"
            - name: GUNICORN_MEDIA
              value: "0"
            - name: POSTGRES_DB
              value: null
            - name: POSTGRES_HOST
              value: null
            - name: POSTGRES_PASSWORD
              value: null
            - name: POSTGRES_PORT
              value: null
            - name: POSTGRES_USER
              value: null
            - name: REVERSE_PROXY_AUTH
              value: "0"
            - name: SECRET_KEY
              value: changeme
            - name: SHOPPING_MIN_AUTOSYNC_INTERVAL
              value: "5"
            - name: TIMEZONE
              value: UTC
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          volumeMounts:
            - name: recipes-config
              mountPath: /app/config.json
              subPath: config.json
            - name: static
              mountPath: /opt/recipes/staticfiles
          livenessProbe:
            tcpSocket:
              port: 80
            initialDelaySeconds: 0
            failureThreshold: 3
            timeoutSeconds: 1
            periodSeconds: 10
          readinessProbe:
            tcpSocket:
              port: 80
            initialDelaySeconds: 0
            failureThreshold: 3
            timeoutSeconds: 1
            periodSeconds: 10
          startupProbe:
            tcpSocket:
              port: 80
            initialDelaySeconds: 0
            failureThreshold: 30
            timeoutSeconds: 1
            periodSeconds: 5
        - image: nginx:1.21.6
          imagePullPolicy: IfNotPresent
          name: nginx
          ports:
          - containerPort: 80
            name: http
          volumeMounts:
          - mountPath: /etc/nginx/nginx.conf
            name: recipes-config
            readOnly: true
            subPath: nginx-config
          - mountPath: /static
            name: static
      volumes:
        - name: recipes-config
          configMap:
            name: my-recipes-config
        - name: static
          emptyDir:
            {}
