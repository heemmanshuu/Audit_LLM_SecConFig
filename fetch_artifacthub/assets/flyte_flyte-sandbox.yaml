---
# Source: flyte-sandbox/charts/flyte-binary/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-flyte-sandbox
  namespace: "default"
  labels:
    helm.sh/chart: flyte-binary-v1.13.1
    app.kubernetes.io/name: flyte-sandbox
    app.kubernetes.io/instance: my-flyte-sandbox
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
---
# Source: flyte-sandbox/charts/kubernetes-dashboard/templates/serviceaccount.yaml
# Copyright 2017 The Kubernetes Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/name: kubernetes-dashboard
    helm.sh/chart: kubernetes-dashboard-6.0.0
    app.kubernetes.io/instance: my-flyte-sandbox
    app.kubernetes.io/version: "2.7.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
  name: my-flyte-sandbox-kubernetes-dashboard
---
# Source: flyte-sandbox/charts/minio/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-flyte-sandbox-minio
  namespace: "default"
  labels:
    app.kubernetes.io/name: minio
    helm.sh/chart: minio-12.6.7
    app.kubernetes.io/instance: my-flyte-sandbox
    app.kubernetes.io/managed-by: Helm
automountServiceAccountToken: true
secrets:
  - name: my-flyte-sandbox-minio
---
# Source: flyte-sandbox/charts/docker-registry/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-flyte-sandbox-docker-registry-secret
  namespace: default
  labels:
    app: docker-registry
    chart: docker-registry-2.2.2
    heritage: Helm
    release: my-flyte-sandbox
type: Opaque
data:
  haSharedSecret: "eXdkM3JENWlXVDdEVzdMeQ=="
  proxyUsername: ""
  proxyPassword: ""
---
# Source: flyte-sandbox/charts/flyte-binary/templates/config-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-flyte-sandbox-config-secret
  namespace: "default"
  labels:
    helm.sh/chart: flyte-binary-v1.13.1
    app.kubernetes.io/name: flyte-sandbox
    app.kubernetes.io/instance: my-flyte-sandbox
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
type: Opaque
stringData:
  012-database-secrets.yaml: |
    database:
      postgres:
        password: "postgres"
  013-storage-secrets.yaml: |
    storage:
      stow:
        config:
          access_key_id: "minio"
          secret_key: "miniostorage"
---
# Source: flyte-sandbox/charts/kubernetes-dashboard/templates/secret.yaml
# Copyright 2017 The Kubernetes Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# kubernetes-dashboard-certs
apiVersion: v1
kind: Secret
metadata:
  labels:
    app.kubernetes.io/name: kubernetes-dashboard
    helm.sh/chart: kubernetes-dashboard-6.0.0
    app.kubernetes.io/instance: my-flyte-sandbox
    app.kubernetes.io/version: "2.7.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
  name: my-flyte-sandbox-kubernetes-dashboard-certs
type: Opaque
---
# Source: flyte-sandbox/charts/kubernetes-dashboard/templates/secret.yaml
# kubernetes-dashboard-csrf
apiVersion: v1
kind: Secret
metadata:
  labels:

    app.kubernetes.io/name: kubernetes-dashboard
    helm.sh/chart: kubernetes-dashboard-6.0.0
    app.kubernetes.io/instance: my-flyte-sandbox
    app.kubernetes.io/version: "2.7.0"
    app.kubernetes.io/managed-by: Helm
  name: kubernetes-dashboard-csrf
type: Opaque
---
# Source: flyte-sandbox/charts/kubernetes-dashboard/templates/secret.yaml
# kubernetes-dashboard-key-holder
apiVersion: v1
kind: Secret
metadata:
  labels:

    app.kubernetes.io/name: kubernetes-dashboard
    helm.sh/chart: kubernetes-dashboard-6.0.0
    app.kubernetes.io/instance: my-flyte-sandbox
    app.kubernetes.io/version: "2.7.0"
    app.kubernetes.io/managed-by: Helm
  name: kubernetes-dashboard-key-holder
type: Opaque
---
# Source: flyte-sandbox/charts/minio/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-flyte-sandbox-minio
  namespace: "default"
  labels:
    app.kubernetes.io/name: minio
    helm.sh/chart: minio-12.6.7
    app.kubernetes.io/instance: my-flyte-sandbox
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  root-user: "bWluaW8="
  root-password: "bWluaW9zdG9yYWdl"
---
# Source: flyte-sandbox/charts/postgresql/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-flyte-sandbox-postgresql
  namespace: "default"
  labels:
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-12.8.1
    app.kubernetes.io/instance: my-flyte-sandbox
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  postgres-password: "cG9zdGdyZXM="
  # We don't auto-generate LDAP password when it's not provided as we do for other passwords
---
# Source: flyte-sandbox/charts/docker-registry/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-flyte-sandbox-docker-registry-config
  namespace: default
  labels:
    app: docker-registry
    chart: docker-registry-2.2.2
    heritage: Helm
    release: my-flyte-sandbox
data:
  config.yml: |-
    health:
      storagedriver:
        enabled: true
        interval: 10s
        threshold: 3
    http:
      addr: :5000
      debug:
        addr: :5001
        prometheus:
          enabled: false
          path: /metrics
      headers:
        X-Content-Type-Options:
        - nosniff
    log:
      fields:
        service: registry
    storage:
      cache:
        blobdescriptor: inmemory
    version: 0.1
---
# Source: flyte-sandbox/charts/flyte-binary/templates/cluster-resource-templates.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-flyte-sandbox-cluster-resource-templates
  namespace: "default"
  labels:
    helm.sh/chart: flyte-binary-v1.13.1
    app.kubernetes.io/name: flyte-sandbox
    app.kubernetes.io/instance: my-flyte-sandbox
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
data:
  namespace.yaml: |
    apiVersion: v1
    kind: Namespace
    metadata:
      name: '{{ namespace }}'
---
# Source: flyte-sandbox/charts/flyte-binary/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-flyte-sandbox-config
  namespace: "default"
  labels:
    helm.sh/chart: flyte-binary-v1.13.1
    app.kubernetes.io/name: flyte-sandbox
    app.kubernetes.io/instance: my-flyte-sandbox
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
data:
  000-core.yaml: |
    admin:
      endpoint: localhost:8089
      insecure: true
    catalog-cache:
      endpoint: localhost:8081
      insecure: true
      type: datacatalog
    cluster_resources:
      standaloneDeployment: false
      templatePath: /etc/flyte/cluster-resource-templates
    logger:
      show-source: true
      level: 5
    propeller:
      create-flyteworkflow-crd: true
    webhook:
      certDir: /var/run/flyte/certs
      localCert: true
      secretName: my-flyte-sandbox-webhook-secret
      serviceName: my-flyte-sandbox-webhook
      servicePort: 443
    flyte:
      admin:
        disableClusterResourceManager: false
        disableScheduler: false
        disabled: false
        seedProjects:
        - flytesnacks
      dataCatalog:
        disabled: false
      propeller:
        disableWebhook: false
        disabled: false
  001-plugins.yaml: |
    tasks:
      task-plugins:
        default-for-task-types:
          container: container
          container_array: k8s-array
          sidecar: sidecar
        enabled-plugins:
        - container
        - sidecar
        - k8s-array
        - agent-service
    plugins:
      logs:
        kubernetes-enabled: true
        kubernetes-template-uri: http://localhost:30080/kubernetes-dashboard/#/log/{{.namespace }}/{{ .podName }}/pod?namespace={{ .namespace }}
        cloudwatch-enabled: false
        stackdriver-enabled: false
      k8s:
        co-pilot:
          image: "cr.flyte.org/flyteorg/flytecopilot-release:v1.13.1"
      k8s-array:
        logs:
          config:
            kubernetes-enabled: true
            kubernetes-template-uri: http://localhost:30080/kubernetes-dashboard/#/log/{{.namespace }}/{{ .podName }}/pod?namespace={{ .namespace }}
            cloudwatch-enabled: false
            stackdriver-enabled: false
  002-database.yaml: |
    database:
      postgres:
        username: postgres
        host: my-flyte-sandbox-postgresql
        port: 5432
        dbname: flyte
        options: "sslmode=disable"
  003-storage.yaml: |
    propeller:
      rawoutput-prefix: s3://my-s3-bucket/data
    storage:
      type: stow
      stow:
        kind: s3
        config:
          region: us-east-1
          disable_ssl: true
          v2_signing: true
          endpoint: http://my-flyte-sandbox-minio.default:9000
          auth_type: accesskey
      container: my-s3-bucket
  100-inline-config.yaml: |
    plugins:
      k8s:
        default-env-vars:
        - FLYTE_AWS_ENDPOINT: http://my-flyte-sandbox-minio.default:9000
        - FLYTE_AWS_ACCESS_KEY_ID: minio
        - FLYTE_AWS_SECRET_ACCESS_KEY: miniostorage
    storage:
      signedURL:
        stowConfigOverride:
          endpoint: http://localhost:30002
    task_resources:
      defaults:
        cpu: 500m
        ephemeralStorage: 0
        gpu: 0
        memory: 1Gi
      limits:
        cpu: 0
        ephemeralStorage: 0
        gpu: 0
        memory: 0
---
# Source: flyte-sandbox/charts/kubernetes-dashboard/templates/configmap.yaml
# Copyright 2017 The Kubernetes Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/name: kubernetes-dashboard
    helm.sh/chart: kubernetes-dashboard-6.0.0
    app.kubernetes.io/instance: my-flyte-sandbox
    app.kubernetes.io/version: "2.7.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
  name: kubernetes-dashboard-settings
data:
---
# Source: flyte-sandbox/templates/config/cluster-resource-template-inline-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-flyte-sandbox-extra-cluster-resource-templates
  namespace: "default"
---
# Source: flyte-sandbox/templates/config/configuration-inline-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-flyte-sandbox-extra-config
  namespace: "default"
---
# Source: flyte-sandbox/templates/proxy/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-flyte-sandbox-proxy-config
  namespace: "default"
  labels:
    helm.sh/chart: flyte-sandbox-0.1.0
    app.kubernetes.io/name: flyte-sandbox
    app.kubernetes.io/instance: my-flyte-sandbox
    app.kubernetes.io/version: "1.16.1"
    app.kubernetes.io/managed-by: Helm
data:
  envoy.yaml: |
    admin:
        access_log_path: /dev/stdout
    static_resources:
        listeners:
            - address:
                  socket_address:
                      address: 0.0.0.0
                      port_value: 8000
              filter_chains:
                  - filters:
                        - name: envoy.filters.network.http_connection_manager
                          typed_config:
                              "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                              stat_prefix: ingress_http
                              codec_type: AUTO
                              upgrade_configs:
                                  - upgrade_type: websocket
                              route_config:
                                  name: local_route
                                  virtual_hosts:
                                      - name: backend
                                        domains:
                                            - "*"
                                        routes:
                                            - match:
                                                  path: "/"
                                              redirect:
                                                  path_redirect: "/console/"
                                            - match:
                                                  prefix: "/.well-known"
                                              route:
                                                  cluster: flyte
                                            - match:
                                                  prefix: "/__webpack_hmr"
                                              route:
                                                  cluster: flyte
                                            - match:
                                                  prefix: "/api"
                                              route:
                                                  cluster: flyte
                                            - match:
                                                  prefix: "/callback"
                                              route:
                                                  cluster: flyte
                                            - match:
                                                  prefix: "/config"
                                              route:
                                                  cluster: flyte
                                            - match:
                                                  prefix: "/console"
                                              route:
                                                  cluster: flyte
                                            - match:
                                                  prefix: "/healthcheck"
                                              route:
                                                  cluster: flyte
                                            - match:
                                                  prefix: "/login"
                                              route:
                                                  cluster: flyte
                                            - match:
                                                  prefix: "/logout"
                                              route:
                                                  cluster: flyte
                                            - match:
                                                  prefix: "/me"
                                              route:
                                                  cluster: flyte
                                            - match:
                                                  prefix: "/oauth2"
                                              route:
                                                  cluster: flyte
                                            - match:
                                                  prefix: "/v1"
                                              route:
                                                  cluster: flyte
                                            - match:
                                                  prefix: "/flyteidl.service.AdminService"
                                              route:
                                                  cluster: flyte_grpc
                                            - match:
                                                  prefix: "/flyteidl.service.AuthMetadataService"
                                              route:
                                                  cluster: flyte_grpc
                                            - match:
                                                  prefix: "/flyteidl.service.DataProxyService"
                                              route:
                                                  cluster: flyte_grpc
                                            - match:
                                                  prefix: "/flyteidl.service.IdentityService"
                                              route:
                                                  cluster: flyte_grpc
                                            - match:
                                                  prefix: "/grpc.health.v1.Health"
                                              route:
                                                  cluster: flyte_grpc
                                            - match:
                                                  prefix: "/flyteidl.service.SignalService"
                                              route:
                                                  cluster: flyte_grpc
                                            - match:
                                                  path: "/kubernetes-dashboard"
                                              redirect:
                                                  path_redirect: "/kubernetes-dashboard/"
                                            - match:
                                                  prefix: "/kubernetes-dashboard/"
                                              route:
                                                  cluster: kubernetes-dashboard
                                                  prefix_rewrite: /
                                            - match:
                                                  path: "/minio"
                                              redirect:
                                                  path_redirect: "/minio/"
                                            - match:
                                                  prefix: "/minio/"
                                              route:
                                                  cluster: minio
                                                  prefix_rewrite: /
                              http_filters:
                                  - name: envoy.filters.http.router
                                    typed_config:
                                      "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
        clusters:
            - name: flyte
              connect_timeout: 0.25s
              type: STRICT_DNS
              lb_policy: ROUND_ROBIN
              load_assignment:
                  cluster_name: flyte
                  endpoints:
                      - lb_endpoints:
                            - endpoint:
                                  address:
                                      socket_address:
                                          address: my-flyte-sandbox-http
                                          port_value: 8088
            - name: flyte_grpc
              connect_timeout: 0.25s
              type: STRICT_DNS
              lb_policy: ROUND_ROBIN
              http2_protocol_options: {}
              load_assignment:
                  cluster_name: flyte_grpc
                  endpoints:
                      - lb_endpoints:
                            - endpoint:
                                  address:
                                      socket_address:
                                          address: my-flyte-sandbox-grpc
                                          port_value: 8089
            - name: kubernetes-dashboard
              connect_timeout: 0.25s
              type: STRICT_DNS
              lb_policy: ROUND_ROBIN
              load_assignment:
                  cluster_name: kubernetes-dashboard
                  endpoints:
                      - lb_endpoints:
                            - endpoint:
                                  address:
                                      socket_address:
                                          address: my-flyte-sandbox-kubernetes-dashboard
                                          port_value: 80
            - name: minio
              connect_timeout: 0.25s
              type: STRICT_DNS
              lb_policy: ROUND_ROBIN
              load_assignment:
                  cluster_name: minio
                  endpoints:
                      - lb_endpoints:
                            - endpoint:
                                  address:
                                      socket_address:
                                          address: my-flyte-sandbox-minio
                                          port_value: 9001
---
# Source: flyte-sandbox/templates/storage/db/pv.yaml
apiVersion: v1
kind: PersistentVolume
metadata:
  name: my-flyte-sandbox-db-storage
  namespace: "default"
  labels:
    helm.sh/chart: flyte-sandbox-0.1.0
    app.kubernetes.io/name: flyte-sandbox
    app.kubernetes.io/instance: my-flyte-sandbox
    app.kubernetes.io/version: "1.16.1"
    app.kubernetes.io/managed-by: Helm
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  capacity:
    storage: 1Gi
  hostPath:
    path: "/var/lib/flyte/storage/db"
---
# Source: flyte-sandbox/templates/storage/minio/pv.yaml
apiVersion: v1
kind: PersistentVolume
metadata:
  name: my-flyte-sandbox-minio-storage
  namespace: "default"
  labels:
    helm.sh/chart: flyte-sandbox-0.1.0
    app.kubernetes.io/name: flyte-sandbox
    app.kubernetes.io/instance: my-flyte-sandbox
    app.kubernetes.io/version: "1.16.1"
    app.kubernetes.io/managed-by: Helm
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  capacity:
    storage: 1Gi
  hostPath:
    path: "/var/lib/flyte/storage/minio"
---
# Source: flyte-sandbox/templates/storage/db/pvc.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: my-flyte-sandbox-db-storage
  namespace: "default"
  labels:
    helm.sh/chart: flyte-sandbox-0.1.0
    app.kubernetes.io/name: flyte-sandbox
    app.kubernetes.io/instance: my-flyte-sandbox
    app.kubernetes.io/version: "1.16.1"
    app.kubernetes.io/managed-by: Helm
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  volumeName: my-flyte-sandbox-db-storage
---
# Source: flyte-sandbox/templates/storage/minio/pvc.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: my-flyte-sandbox-minio-storage
  namespace: "default"
  labels:
    helm.sh/chart: flyte-sandbox-0.1.0
    app.kubernetes.io/name: flyte-sandbox
    app.kubernetes.io/instance: my-flyte-sandbox
    app.kubernetes.io/version: "1.16.1"
    app.kubernetes.io/managed-by: Helm
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  volumeName: my-flyte-sandbox-minio-storage
---
# Source: flyte-sandbox/charts/flyte-binary/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-flyte-sandbox-cluster-role
  namespace: "default"
  labels:
    helm.sh/chart: flyte-binary-v1.13.1
    app.kubernetes.io/name: flyte-sandbox
    app.kubernetes.io/instance: my-flyte-sandbox
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
rules:
  - apiGroups:
    - ""
    resources:
    - namespaces
    - resourcequotas
    - secrets
    - serviceaccounts
    verbs:
    - create
    - get
    - list
    - patch
    - update
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - ""
    resources:
    - events
    verbs:
    - create
    - delete
    - patch
    - update
  - apiGroups:
    - ""
    resources:
    - podtemplates
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - flyte.lyft.com
    resources:
    - flyteworkflows
    verbs:
    - create
    - delete
    - deletecollection
    - get
    - list
    - patch
    - post
    - update
    - watch
  - apiGroups:
    - apiextensions.k8s.io
    resources:
    - customresourcedefinitions
    verbs:
    - create
    - get
    - list
  - apiGroups:
    - admissionregistration.k8s.io
    resources:
    - mutatingwebhookconfigurations
    verbs:
    - create
    - get
    - list
    - patch
    - update
  - apiGroups:
    - '*'
    resources:
    - '*'
    verbs:
    - '*'
---
# Source: flyte-sandbox/charts/kubernetes-dashboard/templates/clusterrole-readonly.yaml
# Copyright 2017 The Kubernetes Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: "my-flyte-sandbox-kubernetes-dashboard-readonly"
  labels:
    app.kubernetes.io/name: kubernetes-dashboard
    helm.sh/chart: kubernetes-dashboard-6.0.0
    app.kubernetes.io/instance: my-flyte-sandbox
    app.kubernetes.io/version: "2.7.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
      - endpoints
      - persistentvolumeclaims
      - pods
      - replicationcontrollers
      - replicationcontrollers/scale
      - serviceaccounts
      - services
      - nodes
      - persistentvolumeclaims
      - persistentvolumes
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - bindings
      - events
      - limitranges
      - namespaces/status
      - pods/log
      - pods/status
      - replicationcontrollers/status
      - resourcequotas
      - resourcequotas/status
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - namespaces
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - apps
    resources:
      - daemonsets
      - deployments
      - deployments/scale
      - replicasets
      - replicasets/scale
      - statefulsets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - autoscaling
    resources:
      - horizontalpodautoscalers
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - batch
    resources:
      - cronjobs
      - jobs
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - extensions
    resources:
      - daemonsets
      - deployments
      - deployments/scale
      - ingresses
      - networkpolicies
      - replicasets
      - replicasets/scale
      - replicationcontrollers/scale
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - policy
    resources:
      - poddisruptionbudgets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - networking.k8s.io
    resources:
      - networkpolicies
      - ingresses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - storage.k8s.io
    resources:
      - storageclasses
      - volumeattachments
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - rbac.authorization.k8s.io
    resources:
      - clusterrolebindings
      - clusterroles
      - roles
      - rolebindings
    verbs:
      - get
      - list
      - watch
---
# Source: flyte-sandbox/charts/flyte-binary/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-flyte-sandbox-cluster-role-binding
  namespace: "default"
  labels:
    helm.sh/chart: flyte-binary-v1.13.1
    app.kubernetes.io/name: flyte-sandbox
    app.kubernetes.io/instance: my-flyte-sandbox
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-flyte-sandbox-cluster-role
subjects:
  - kind: ServiceAccount
    name: my-flyte-sandbox
    namespace: "default"
---
# Source: flyte-sandbox/charts/kubernetes-dashboard/templates/clusterrolebinding-readonly.yaml
# Copyright 2017 The Kubernetes Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-flyte-sandbox-kubernetes-dashboard-readonly
  labels:
    app.kubernetes.io/name: kubernetes-dashboard
    helm.sh/chart: kubernetes-dashboard-6.0.0
    app.kubernetes.io/instance: my-flyte-sandbox
    app.kubernetes.io/version: "2.7.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-flyte-sandbox-kubernetes-dashboard-readonly
subjects:
  - kind: ServiceAccount
    name: my-flyte-sandbox-kubernetes-dashboard
    namespace: default
---
# Source: flyte-sandbox/charts/kubernetes-dashboard/templates/role.yaml
# Copyright 2017 The Kubernetes Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: my-flyte-sandbox-kubernetes-dashboard
  labels:
    app.kubernetes.io/name: kubernetes-dashboard
    helm.sh/chart: kubernetes-dashboard-6.0.0
    app.kubernetes.io/instance: my-flyte-sandbox
    app.kubernetes.io/version: "2.7.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
rules:
    # Allow Dashboard to get, update and delete Dashboard exclusive secrets.
  - apiGroups: [""]
    resources: ["secrets"]
    resourceNames: ["kubernetes-dashboard-key-holder", "kubernetes-dashboard-certs", "kubernetes-dashboard-csrf"]
    verbs: ["get", "update", "delete"]
    # Allow Dashboard to get and update 'kubernetes-dashboard-settings' config map.
  - apiGroups: [""]
    resources: ["configmaps"]
    resourceNames: ["kubernetes-dashboard-settings"]
    verbs: ["get", "update"]
    # Allow Dashboard to get metrics.
  - apiGroups: [""]
    resources: ["services"]
    resourceNames: ["heapster", "dashboard-metrics-scraper"]
    verbs: ["proxy"]
  - apiGroups: [""]
    resources: ["services/proxy"]
    resourceNames: ["heapster", "http:heapster:", "https:heapster:", "dashboard-metrics-scraper", "http:dashboard-metrics-scraper"]
    verbs: ["get"]
---
# Source: flyte-sandbox/charts/kubernetes-dashboard/templates/rolebinding.yaml
# Copyright 2017 The Kubernetes Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: my-flyte-sandbox-kubernetes-dashboard
  labels:
    app.kubernetes.io/name: kubernetes-dashboard
    helm.sh/chart: kubernetes-dashboard-6.0.0
    app.kubernetes.io/instance: my-flyte-sandbox
    app.kubernetes.io/version: "2.7.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: my-flyte-sandbox-kubernetes-dashboard
subjects:
  - kind: ServiceAccount
    name: my-flyte-sandbox-kubernetes-dashboard
    namespace: default
---
# Source: flyte-sandbox/charts/docker-registry/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-flyte-sandbox-docker-registry
  namespace: default
  labels:
    app: docker-registry
    chart: docker-registry-2.2.2
    release: my-flyte-sandbox
    heritage: Helm
spec:
  type: NodePort
  ports:
    - port: 5000
      protocol: TCP
      name: http-5000
      targetPort: 5000
      nodePort: 30000
  selector:
    app: docker-registry
    release: my-flyte-sandbox
---
# Source: flyte-sandbox/charts/flyte-binary/templates/service/grpc.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-flyte-sandbox-grpc
  namespace: "default"
  labels:
    helm.sh/chart: flyte-binary-v1.13.1
    app.kubernetes.io/name: flyte-sandbox
    app.kubernetes.io/instance: my-flyte-sandbox
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
spec:
  type: ClusterIP
  ports:
    - name: grpc
      port: 8089
      targetPort: grpc
      nodePort: null
  selector:
    app.kubernetes.io/name: flyte-sandbox
    app.kubernetes.io/instance: my-flyte-sandbox
    app.kubernetes.io/component: flyte-binary
---
# Source: flyte-sandbox/charts/flyte-binary/templates/service/http.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-flyte-sandbox-http
  namespace: "default"
  labels:
    helm.sh/chart: flyte-binary-v1.13.1
    app.kubernetes.io/name: flyte-sandbox
    app.kubernetes.io/instance: my-flyte-sandbox
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 8088
      targetPort: http
      nodePort: null
  selector:
    app.kubernetes.io/name: flyte-sandbox
    app.kubernetes.io/instance: my-flyte-sandbox
    app.kubernetes.io/component: flyte-binary
---
# Source: flyte-sandbox/charts/flyte-binary/templates/service/webhook.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-flyte-sandbox-webhook
  namespace: "default"
  labels:
    helm.sh/chart: flyte-binary-v1.13.1
    app.kubernetes.io/name: flyte-sandbox
    app.kubernetes.io/instance: my-flyte-sandbox
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
spec:
  type: ClusterIP
  ports:
    - name: webhook
      port: 443
      targetPort: webhook
  selector:
    app.kubernetes.io/name: flyte-sandbox
    app.kubernetes.io/instance: my-flyte-sandbox
    app.kubernetes.io/component: flyte-binary
---
# Source: flyte-sandbox/charts/kubernetes-dashboard/templates/service.yaml
# Copyright 2017 The Kubernetes Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
kind: Service
metadata:
  name: my-flyte-sandbox-kubernetes-dashboard
  labels:
    
    app.kubernetes.io/name: kubernetes-dashboard
    helm.sh/chart: kubernetes-dashboard-6.0.0
    app.kubernetes.io/instance: my-flyte-sandbox
    app.kubernetes.io/version: "2.7.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: kubernetes-dashboard
    
    kubernetes.io/cluster-service: "true"
  annotations:
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: http
    name: http
  selector:

    app.kubernetes.io/name: kubernetes-dashboard
    app.kubernetes.io/instance: my-flyte-sandbox
    app.kubernetes.io/component: kubernetes-dashboard
---
# Source: flyte-sandbox/charts/minio/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-flyte-sandbox-minio
  namespace: "default"
  labels:
    app.kubernetes.io/name: minio
    helm.sh/chart: minio-12.6.7
    app.kubernetes.io/instance: my-flyte-sandbox
    app.kubernetes.io/managed-by: Helm
spec:
  type: NodePort
  externalTrafficPolicy: "Cluster"
  ports:
    - name: minio-api
      port: 9000
      targetPort: minio-api
      nodePort: 30002
    - name: minio-console
      port: 9001
      targetPort: minio-console
  selector:
    app.kubernetes.io/name: minio
    app.kubernetes.io/instance: my-flyte-sandbox
---
# Source: flyte-sandbox/charts/postgresql/templates/primary/svc-headless.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-flyte-sandbox-postgresql-hl
  namespace: "default"
  labels:
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-12.8.1
    app.kubernetes.io/instance: my-flyte-sandbox
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: primary
    # Use this annotation in addition to the actual publishNotReadyAddresses
    # field below because the annotation will stop being respected soon but the
    # field is broken in some versions of Kubernetes:
    # https://github.com/kubernetes/kubernetes/issues/58662
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
spec:
  type: ClusterIP
  clusterIP: None
  # We want all pods in the StatefulSet to have their addresses published for
  # the sake of the other Postgresql pods even before they're ready, since they
  # have to be able to talk to each other in order to become ready.
  publishNotReadyAddresses: true
  ports:
    - name: tcp-postgresql
      port: 5432
      targetPort: tcp-postgresql
  selector:
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/instance: my-flyte-sandbox
    app.kubernetes.io/component: primary
---
# Source: flyte-sandbox/charts/postgresql/templates/primary/svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-flyte-sandbox-postgresql
  namespace: "default"
  labels:
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-12.8.1
    app.kubernetes.io/instance: my-flyte-sandbox
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: primary
spec:
  type: NodePort
  externalTrafficPolicy: "Cluster"
  sessionAffinity: None
  ports:
    - name: tcp-postgresql
      port: 5432
      targetPort: tcp-postgresql
      nodePort: 30001
  selector:
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/instance: my-flyte-sandbox
    app.kubernetes.io/component: primary
---
# Source: flyte-sandbox/templates/proxy/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-flyte-sandbox-proxy
  namespace: "default"
  labels:
    helm.sh/chart: flyte-sandbox-0.1.0
    app.kubernetes.io/name: flyte-sandbox
    app.kubernetes.io/instance: my-flyte-sandbox
    app.kubernetes.io/version: "1.16.1"
    app.kubernetes.io/managed-by: Helm
spec:
  type: NodePort
  ports:
    - port: 8000
      nodePort: 30080
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: flyte-sandbox
    app.kubernetes.io/instance: my-flyte-sandbox
    app.kubernetes.io/component: proxy
---
# Source: flyte-sandbox/charts/docker-registry/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-flyte-sandbox-docker-registry
  namespace: default
  labels:
    app: docker-registry
    chart: docker-registry-2.2.2
    release: my-flyte-sandbox
    heritage: Helm
spec:
  selector:
    matchLabels:
      app: docker-registry
      release: my-flyte-sandbox
  replicas: 1
  minReadySeconds: 5
  template:
    metadata:
      labels:
        app: docker-registry
        release: my-flyte-sandbox
      annotations:
        checksum/config: e86b1d30fee6061179baaf8dbf167612ad11d4b883e518e4e85dbb3872f18591
        checksum/secret: 091428bfdc750ade9bbd5224924861f8b8d3463daa7540a5f0709cdbf036752c
    spec:
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
      containers:
        - name: docker-registry
          image: "registry:sandbox"
          imagePullPolicy: Never
          command:
          - /bin/registry
          - serve
          - /etc/docker/registry/config.yml
          ports:
            - containerPort: 5000
          livenessProbe:
            httpGet:
              path: /
              port: 5000
          readinessProbe:
            httpGet:
              path: /
              port: 5000
          resources: 
            {}
          env: 
            - name: REGISTRY_HTTP_SECRET
              valueFrom:
                secretKeyRef:
                  name: my-flyte-sandbox-docker-registry-secret
                  key: haSharedSecret
            - name: REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY
              value: "/var/lib/registry"
          volumeMounts: 
            - name: "my-flyte-sandbox-docker-registry-config"
              mountPath: "/etc/docker/registry"
            - name: data
              mountPath: /var/lib/registry/
      volumes: 
        - name: my-flyte-sandbox-docker-registry-config
          configMap:
            name: my-flyte-sandbox-docker-registry-config
        - name: data
          emptyDir: {}
---
# Source: flyte-sandbox/charts/flyte-binary/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-flyte-sandbox
  namespace: "default"
  labels:
    helm.sh/chart: flyte-binary-v1.13.1
    app.kubernetes.io/name: flyte-sandbox
    app.kubernetes.io/instance: my-flyte-sandbox
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: flyte-sandbox
      app.kubernetes.io/instance: my-flyte-sandbox
      app.kubernetes.io/component: flyte-binary
  template:
    metadata:
      labels:
        app.kubernetes.io/name: flyte-sandbox
        app.kubernetes.io/instance: my-flyte-sandbox
        app.kubernetes.io/component: flyte-binary
      annotations:
        checksum/configuration: 739c57aecc46c7d2a319fc165454fb7b86a8ff0315af8316e181b4561aa96c31
        checksum/configuration-secret: 8495d0499b8917cbf5930aad2eaafe7b322762181eb022e72b1c8e1a4a013b13
        checksum/cluster-resource-templates: 942146c8d57a0f3b3b708f9232b2ccc9fc0429b17ac2f4d52bf5bd9363874ce7
    spec:
      serviceAccountName: my-flyte-sandbox
      initContainers:
        - name: wait-for-db
          image: "bitnami/postgresql:sandbox"
          imagePullPolicy: "Never"
          command:
            - sh
            - -ec
          args:
            - |
              until pg_isready \
                -h my-flyte-sandbox-postgresql \
                -p 5432 \
                -U postgres
              do
                echo waiting for database
                sleep 0.1
              done
      containers:
        - name: flyte
          image: "flyte-binary:sandbox"
          imagePullPolicy: "Never"
          args:
            - start
            - --config
            - /etc/flyte/config.d/*.yaml
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          ports:
            - name: http
              containerPort: 8088
            - name: grpc
              containerPort: 8089
            - name: webhook
              containerPort: 9443
          livenessProbe:
            httpGet:
              path: /healthcheck
              port: http
            initialDelaySeconds: 30
          readinessProbe:
            httpGet:
              path: /healthcheck
              port: http
            initialDelaySeconds: 30
          volumeMounts:
            - name: cluster-resource-templates
              mountPath: /etc/flyte/cluster-resource-templates
            - name: config
              mountPath: /etc/flyte/config.d
            - name: state
              mountPath: /var/run/flyte
      volumes:
        - name: cluster-resource-templates
          projected:
            sources:
            - configMap:
                name: my-flyte-sandbox-cluster-resource-templates
            - configMap:
                name: my-flyte-sandbox-extra-cluster-resource-templates
        - name: config
          projected:
            sources:
            - configMap:
                name: my-flyte-sandbox-config
            - secret:
                name: my-flyte-sandbox-config-secret
            - configMap:
                name: my-flyte-sandbox-extra-config
        - name: state
          emptyDir: {}
---
# Source: flyte-sandbox/charts/kubernetes-dashboard/templates/deployment.yaml
# Copyright 2017 The Kubernetes Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-flyte-sandbox-kubernetes-dashboard
  annotations:
  labels:
    app.kubernetes.io/name: kubernetes-dashboard
    helm.sh/chart: kubernetes-dashboard-6.0.0
    app.kubernetes.io/instance: my-flyte-sandbox
    app.kubernetes.io/version: "2.7.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: kubernetes-dashboard
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
    type: RollingUpdate
  selector:
    matchLabels:

      app.kubernetes.io/name: kubernetes-dashboard
      app.kubernetes.io/instance: my-flyte-sandbox
      app.kubernetes.io/component: kubernetes-dashboard
  template:
    metadata:
      annotations:
      labels:
        app.kubernetes.io/name: kubernetes-dashboard
        helm.sh/chart: kubernetes-dashboard-6.0.0
        app.kubernetes.io/instance: my-flyte-sandbox
        app.kubernetes.io/version: "2.7.0"
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: kubernetes-dashboard
    spec:
      securityContext:

        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: my-flyte-sandbox-kubernetes-dashboard
      containers:
      - name: kubernetes-dashboard
        image: "kubernetesui/dashboard:sandbox"
        imagePullPolicy: Never
        args:
          - --namespace=default
          - --metrics-provider=none

          - --enable-insecure-login
          - --enable-skip-login
        ports:
        - name: http
          containerPort: 9090
          protocol: TCP
        volumeMounts:
        - name: kubernetes-dashboard-certs
          mountPath: /certs
          # Create on-disk volume to store exec logs
        - mountPath: /tmp
          name: tmp-volume
        livenessProbe:
          httpGet:
            scheme: HTTP
            path: /
            port: 9090
          initialDelaySeconds: 30
          timeoutSeconds: 30
        resources:

          limits:
            cpu: 2
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 200Mi
        securityContext:

          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsGroup: 2001
          runAsUser: 1001
      volumes:
      - name: kubernetes-dashboard-certs
        secret:
          secretName: my-flyte-sandbox-kubernetes-dashboard-certs
      - name: tmp-volume
        emptyDir: {}
---
# Source: flyte-sandbox/charts/minio/templates/standalone/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-flyte-sandbox-minio
  namespace: "default"
  labels:
    app.kubernetes.io/name: minio
    helm.sh/chart: minio-12.6.7
    app.kubernetes.io/instance: my-flyte-sandbox
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: minio
      app.kubernetes.io/instance: my-flyte-sandbox
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: minio
        helm.sh/chart: minio-12.6.7
        app.kubernetes.io/instance: my-flyte-sandbox
        app.kubernetes.io/managed-by: Helm
      annotations:
        checksum/credentials-secret: bdab84257600573b2d6f76542610447f80b9f6b07e804dc6bfde088e7edb9162
    spec:
      
      serviceAccountName: my-flyte-sandbox-minio
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: minio
                    app.kubernetes.io/instance: my-flyte-sandbox
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      securityContext:
        fsGroup: 1001
      initContainers:
        - name: volume-permissions
          image: docker.io/bitnami/os-shell:sandbox
          imagePullPolicy: "Never"
          command:
            - /bin/bash
            - -ec
            - |
              chown -R 1001:1001 /data
          securityContext:
            runAsUser: 0
          resources:
            limits: {}
            requests: {}
          volumeMounts:
            - name: data
              mountPath: /data
      containers:
        - name: minio
          image: docker.io/bitnami/minio:sandbox
          imagePullPolicy: "Never"
          securityContext:
            runAsNonRoot: true
            runAsUser: 1001
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: MINIO_SCHEME
              value: "http"
            - name: MINIO_FORCE_NEW_KEYS
              value: "no"
            - name: MINIO_ROOT_USER
              valueFrom:
                secretKeyRef:
                  name: my-flyte-sandbox-minio
                  key: root-user
            - name: MINIO_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: my-flyte-sandbox-minio
                  key: root-password
            - name: MINIO_DEFAULT_BUCKETS
              value: my-s3-bucket
            - name: MINIO_BROWSER
              value: "on"
            - name: MINIO_PROMETHEUS_AUTH_TYPE
              value: "public"
            - name: MINIO_CONSOLE_PORT_NUMBER
              value: "9001"
            - name: MINIO_BROWSER_REDIRECT_URL
              value: http://localhost:30080/minio
          envFrom:
          ports:
            - name: minio-api
              containerPort: 9000
              protocol: TCP
            - name: minio-console
              containerPort: 9001
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /minio/health/live
              port: minio-api
              scheme: "HTTP"
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 5
          readinessProbe:
            tcpSocket:
              port: minio-api
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 5
          resources:
            limits: {}
            requests: {}
          volumeMounts:
            - name: data
              mountPath: /data
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: my-flyte-sandbox-minio-storage
---
# Source: flyte-sandbox/templates/buildkit/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-flyte-sandbox-buildkit
  namespace: "default"
  labels:
    helm.sh/chart: flyte-sandbox-0.1.0
    app.kubernetes.io/name: flyte-sandbox
    app.kubernetes.io/instance: my-flyte-sandbox
    app.kubernetes.io/version: "1.16.1"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: flyte-sandbox
      app.kubernetes.io/instance: my-flyte-sandbox
      app.kubernetes.io/component: buildkit
  template:
    metadata:
      labels:
        app.kubernetes.io/name: flyte-sandbox
        app.kubernetes.io/instance: my-flyte-sandbox
        app.kubernetes.io/component: buildkit
    spec:
      dnsPolicy: ClusterFirstWithHostNet
      hostNetwork: true
      containers:
        - name: buildkit
          image: "moby/buildkit:sandbox"
          imagePullPolicy: "Never"
          args:
            - --addr
            - unix:///run/buildkit/buildkitd.sock
            - --addr
            - tcp://0.0.0.0:30003
          ports:
            - name: tcp
              containerPort: 30003
              protocol: TCP
          readinessProbe:
            exec:
              command:
              - buildctl
              - debug
              - workers
            initialDelaySeconds: 5
            periodSeconds: 30
          livenessProbe:
            exec:
              command:
              - buildctl
              - debug
              - workers
            initialDelaySeconds: 5
            periodSeconds: 30
          securityContext:
            privileged: true
---
# Source: flyte-sandbox/templates/proxy/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-flyte-sandbox-proxy
  namespace: "default"
  labels:
    helm.sh/chart: flyte-sandbox-0.1.0
    app.kubernetes.io/name: flyte-sandbox
    app.kubernetes.io/instance: my-flyte-sandbox
    app.kubernetes.io/version: "1.16.1"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: flyte-sandbox
      app.kubernetes.io/instance: my-flyte-sandbox
      app.kubernetes.io/component: proxy
  template:
    metadata:
      labels:
        app.kubernetes.io/name: flyte-sandbox
        app.kubernetes.io/instance: my-flyte-sandbox
        app.kubernetes.io/component: proxy
    spec:
      containers:
        - name: proxy
          image: "envoyproxy/envoy:sandbox"
          imagePullPolicy: "Never"
          ports:
            - name: http
              containerPort: 8000
          volumeMounts:
            - name: config
              mountPath: /etc/envoy
          livenessProbe:
            tcpSocket:
              port: http
            initialDelaySeconds: 30
          readinessProbe:
            tcpSocket:
              port: http
      volumes:
        - name: config
          configMap:
            name: my-flyte-sandbox-proxy-config
---
# Source: flyte-sandbox/charts/postgresql/templates/primary/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: my-flyte-sandbox-postgresql
  namespace: "default"
  labels:
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-12.8.1
    app.kubernetes.io/instance: my-flyte-sandbox
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: primary
spec:
  replicas: 1
  serviceName: my-flyte-sandbox-postgresql-hl
  updateStrategy:
    rollingUpdate: {}
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: postgresql
      app.kubernetes.io/instance: my-flyte-sandbox
      app.kubernetes.io/component: primary
  template:
    metadata:
      name: my-flyte-sandbox-postgresql
      labels:
        app.kubernetes.io/name: postgresql
        helm.sh/chart: postgresql-12.8.1
        app.kubernetes.io/instance: my-flyte-sandbox
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: primary
    spec:
      serviceAccountName: default
      
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: postgresql
                    app.kubernetes.io/instance: my-flyte-sandbox
                    app.kubernetes.io/component: primary
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      securityContext:
        fsGroup: 1001
      hostNetwork: false
      hostIPC: false
      initContainers:
        - name: init-chmod-data
          image: docker.io/bitnami/os-shell:sandbox
          imagePullPolicy: "Never"
          resources:
            limits: {}
            requests: {}
          command:
            - /bin/sh
            - -ec
            - |
              chown 1001:1001 /bitnami/postgresql
              mkdir -p /bitnami/postgresql/data
              chmod 700 /bitnami/postgresql/data
              find /bitnami/postgresql -mindepth 1 -maxdepth 1 -not -name "conf" -not -name ".snapshot" -not -name "lost+found" | \
                xargs -r chown -R 1001:1001
          securityContext:
            runAsGroup: 0
            runAsNonRoot: false
            runAsUser: 0
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - name: data
              mountPath: /bitnami/postgresql
      containers:
        - name: postgresql
          image: docker.io/bitnami/postgresql:sandbox
          imagePullPolicy: "Never"
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            runAsGroup: 0
            runAsNonRoot: true
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: POSTGRESQL_PORT_NUMBER
              value: "5432"
            - name: POSTGRESQL_VOLUME_DIR
              value: "/bitnami/postgresql"
            - name: PGDATA
              value: "/bitnami/postgresql/data"
            # Authentication
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: my-flyte-sandbox-postgresql
                  key: postgres-password
            # Replication
            # Initdb
            # Standby
            # LDAP
            - name: POSTGRESQL_ENABLE_LDAP
              value: "no"
            # TLS
            - name: POSTGRESQL_ENABLE_TLS
              value: "no"
            # Audit
            - name: POSTGRESQL_LOG_HOSTNAME
              value: "false"
            - name: POSTGRESQL_LOG_CONNECTIONS
              value: "false"
            - name: POSTGRESQL_LOG_DISCONNECTIONS
              value: "false"
            - name: POSTGRESQL_PGAUDIT_LOG_CATALOG
              value: "off"
            # Others
            - name: POSTGRESQL_CLIENT_MIN_MESSAGES
              value: "error"
            - name: POSTGRESQL_SHARED_PRELOAD_LIBRARIES
              value: "pgaudit"
          ports:
            - name: tcp-postgresql
              containerPort: 5432
          livenessProbe:
            failureThreshold: 6
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
            exec:
              command:
                - /bin/sh
                - -c
                - exec pg_isready -U "postgres" -h 127.0.0.1 -p 5432
          readinessProbe:
            failureThreshold: 6
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
            exec:
              command:
                - /bin/sh
                - -c
                - -e
                - |
                  exec pg_isready -U "postgres" -h 127.0.0.1 -p 5432
                  [ -f /opt/bitnami/postgresql/tmp/.initialized ] || [ -f /bitnami/postgresql/.initialized ]
          resources:
            limits: {}
            requests:
              cpu: 250m
              memory: 256Mi
          volumeMounts:
            - name: data
              mountPath: /bitnami/postgresql
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: my-flyte-sandbox-db-storage
---
# Source: flyte-sandbox/charts/kubernetes-dashboard/templates/clusterrole-metrics.yaml
# Copyright 2017 The Kubernetes Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
# Source: flyte-sandbox/charts/kubernetes-dashboard/templates/clusterrolebinding-metrics.yaml
# Copyright 2017 The Kubernetes Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
# Source: flyte-sandbox/charts/kubernetes-dashboard/templates/extra-manifests.yaml
# Copyright 2017 The Kubernetes Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
---
# Source: flyte-sandbox/charts/kubernetes-dashboard/templates/ingress.yaml
# Copyright 2017 The Kubernetes Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
# Source: flyte-sandbox/charts/kubernetes-dashboard/templates/networkpolicy.yaml
# Copyright 2017 The Kubernetes Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
# Source: flyte-sandbox/charts/kubernetes-dashboard/templates/pdb.yaml
# Copyright 2017 The Kubernetes Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
# Source: flyte-sandbox/charts/kubernetes-dashboard/templates/psp.yaml
# Copyright 2017 The Kubernetes Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
# Source: flyte-sandbox/charts/kubernetes-dashboard/templates/servicemonitor.yaml
# Copyright 2017 The Kubernetes Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
