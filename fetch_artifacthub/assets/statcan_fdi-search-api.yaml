---
# Source: fdi-search-api/templates/secret/application_id.yaml
apiVersion: v1
kind: Secret
metadata:
  name: fdi-search-api-application-id
  labels:
    app.kubernetes.io/name: fdi-search-api
    helm.sh/chart: fdi-search-api-1.0.0
    app.kubernetes.io/instance: my-fdi-search-api
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  application_id: "YXBwSUQ="
---
# Source: fdi-search-api/templates/secret/es-passwords.yaml
apiVersion: v1
kind: Secret
metadata:
  name: fdi-search-api-es-password
  labels:
    app.kubernetes.io/name: fdi-search-api
    helm.sh/chart: fdi-search-api-1.0.0
    app.kubernetes.io/instance: my-fdi-search-api
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  password: ""
---
# Source: fdi-search-api/templates/secret/register.yaml
apiVersion: v1
kind: Secret
metadata:
  name: artifactory-prod
type: kubernetes.io/dockerconfigjson
data:
  .dockerconfigjson: >-
    ewogICAgImF1dGhzIjogewogICAgICAgICJhcnRpZmFjdG9yeS5jbG91ZC5zdGF0Y2FuLmNhIjogewogICAgICAgICAgICAidXNlcm5hbWUiOiAic3ZjLWNucy1rOHMtY2FuY2VudHJhbC0wMS1kZXZlbG9wbWVudCIsCiAgICAgICAgICAgICJwYXNzd29yZCI6ICJBS0NwOGs4dDR5QjFYZEJDQ2JiSG9oQ0RKa0dKYTdDY3FUZWJHYTNQNUNncnltd3BQc3hBb1BnV01TRXVLWHlxcHpZOEV1QktTIiwKICAgICAgICAgICAgImVtYWlsIjogInN0YXRjYW4uY3dtZC1jc2VwLWNucy1kaW1jdC1wYXNpLXNpbi5zdGF0Y2FuQHN0YXRjYW4uZ2MuY2EiLAogICAgICAgICAgICAiYXV0aCI6ICJjM1pqTFdOdWN5MXJPSE10WTJGdVkyVnVkSEpoYkMwd01TMWtaWFpsYkc5d2JXVnVkRHBCUzBOd09HczRkRFI1UWpGWVpFSkRRMkppU0c5b1EwUkthMGRLWVRkRFkzRlVaV0pIWVROUU5VTm5jbmx0ZDNCUWMzaEJiMUJuVjAxVFJYVkxXSGx4Y0hwWk9FVjFRa3RUIgogICAgICAgIH0KICAgIH0KfQo=
---
# Source: fdi-search-api/templates/svc/portal.yaml
apiVersion: v1
kind: Service
metadata:
  name: fdi-search-api
  labels:
    app.kubernetes.io/name: fdi-search-api
    helm.sh/chart: fdi-search-api-1.0.0
    app.kubernetes.io/instance: my-fdi-search-api
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8000
      targetPort: 8000
      protocol: TCP
      name: fdi-search-api
  selector:
    app.kubernetes.io/name: fdi-search-api
    app.kubernetes.io/instance: my-fdi-search-api
    app.kubernetes.io/component: fdi-search-api
---
# Source: fdi-search-api/templates/deploy/portal.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fdi-search-api
  labels:
    app.kubernetes.io/name: fdi-search-api
    helm.sh/chart: fdi-search-api-1.0.0
    app.kubernetes.io/instance: my-fdi-search-api
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: fdi-search-api
      app.kubernetes.io/instance: my-fdi-search-api
      app.kubernetes.io/component: fdi-search-api
  template:
    metadata:
      labels:
        app.kubernetes.io/name: fdi-search-api
        app.kubernetes.io/instance: my-fdi-search-api
        app.kubernetes.io/component: fdi-search-api
    spec:
      containers:
        - name: fdi-search-api
          image: "repo:v3.0.2"
          imagePullPolicy: Always
          ports:
            - name: fdi-search-api
              containerPort: 8000
              protocol: TCP
          command: ["sh"]
          args: ["-c", "python setup.py develop && daaas run --host 0.0.0.0 --port 8000"]
          env:
          - name: ES_PASSWORDS
            valueFrom:
              secretKeyRef:
                name: "fdi-search-api-es-passwords"
                key: passwords
          - name: APPLICATION_ID
            valueFrom:
              secretKeyRef:
                name: "fdi-search-api-application-id"
                key: application_id
          - name: ES_CONNECTION
            value: 
          
          # livenessProbe:
          #   httpGet:
          #     path: /
          #     port: fdi-search-api
          # readinessProbe:
          #   httpGet:
          #     path: /
          #     port: fdi-search-api
          resources:
            {}
      imagePullSecrets:
        - name: image
---
# Source: fdi-search-api/templates/ing/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: fdi-search-api
  labels:
    app.kubernetes.io/name: fdi-search-api
    helm.sh/chart: fdi-search-api-1.0.0
    app.kubernetes.io/instance: my-fdi-search-api
    app.kubernetes.io/managed-by: Helm
  annotations:
    kubernetes.io/ingress.class: istio
spec:
  rules:
    - host: "host"
      http:
        paths:
          - path: /*
            pathType: ImplementationSpecific
            backend:
              service:
                name: fdi-search-api
                port: 
                  number: 8000
---
# Source: fdi-search-api/templates/dr/destrule.yaml
apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  name: fdi-search-api
  labels:
    app: fdi-search-api
    chart: fdi-search-api-1.0.0
    release: my-fdi-search-api
    heritage: Helm
spec:
  host: "fdi-search-api.default.svc.cluster.local"
  trafficPolicy:
    tls:
      mode: "DISABLE"
