---
# Source: service-backend/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-service-backend-cred
  namespace: default
  labels:
    helm.sh/chart: service-backend-v2024.2.11
    app.kubernetes.io/name: service-backend
    app.kubernetes.io/instance: my-service-backend
    app.kubernetes.io/version: "v0.0.1"
    app.kubernetes.io/managed-by: Helm
type: Opaque
stringData:
  api-token: ''
---
# Source: service-backend/templates/cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-service-backend
  labels:
    helm.sh/chart: service-backend-v2024.2.11
    app.kubernetes.io/name: service-backend
    app.kubernetes.io/instance: my-service-backend
    app.kubernetes.io/version: "v0.0.1"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - kube-bind.appscode.com
  resources: ["*"]
  verbs: ["*"]
- apiGroups:
  - kubedb.com
  resources: ["*"]
  verbs: ["get", "list", "watch"]
- apiGroups:
  - kubevault.com
  resources: ["*"]
  verbs: ["get", "list", "watch"]
---
# Source: service-backend/templates/cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-service-backend
  labels:
    helm.sh/chart: service-backend-v2024.2.11
    app.kubernetes.io/name: service-backend
    app.kubernetes.io/instance: my-service-backend
    app.kubernetes.io/version: "v0.0.1"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-service-backend
subjects:
- kind: ServiceAccount
  name: default
  namespace: default
---
# Source: service-backend/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-service-backend
  namespace: default
  labels:
    helm.sh/chart: service-backend-v2024.2.11
    app.kubernetes.io/name: service-backend
    app.kubernetes.io/instance: my-service-backend
    app.kubernetes.io/version: "v0.0.1"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: service-backend
    app.kubernetes.io/instance: my-service-backend
---
# Source: service-backend/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-service-backend
  namespace: default
  labels:
    helm.sh/chart: service-backend-v2024.2.11
    app.kubernetes.io/name: service-backend
    app.kubernetes.io/instance: my-service-backend
    app.kubernetes.io/version: "v0.0.1"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: service-backend
      app.kubernetes.io/instance: my-service-backend
  template:
    metadata:
      labels:
        app.kubernetes.io/name: service-backend
        app.kubernetes.io/instance: my-service-backend
    spec:
      
      serviceAccountName: default
      securityContext:
        {}
      containers:
        - name: service-backend
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 65534
          image: ghcr.io/appscode/service-provider:v0.0.1
          imagePullPolicy: 
          args:
            - server
            - --oidc-issuer-url=https://appscode.com/accounts/
            - --oidc-callback-url=https://appscode.com/bind/callback
            - --namespace-prefix=ace-
            - --oidc-issuer-client-id=
            - --oidc-issuer-client-secret=
            - --cookie-signing-key=
            - --cookie-encryption-key=
            - --consumer-scope=Namespaced
            - --base-url=https://appscode.com
          ports:
          - containerPort: 3003
            name: http
            protocol: TCP
          resources:
            null
