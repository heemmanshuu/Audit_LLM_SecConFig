---
# Source: tfy-inferentia-operator/templates/neuron-device-plugin.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-tfy-inferentia-operator-neuron-device-plugin
  namespace: default
---
# Source: tfy-inferentia-operator/templates/neuron-scheduler-extension.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-tfy-inferentia-operator-scheduler-extension
  namespace: default
---
# Source: tfy-inferentia-operator/templates/neuron-scheduler.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-tfy-inferentia-operator-neuron-scheduler
  namespace: default
---
# Source: tfy-inferentia-operator/templates/neuron-scheduler.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-tfy-inferentia-operator-neuron-scheduler-config
  namespace: default
data:
  neuron-scheduler-config.yaml: |
    apiVersion: kubescheduler.config.k8s.io/v1beta2
    kind: KubeSchedulerConfiguration
    profiles:
      - schedulerName: neuron-scheduler
    extenders:
      - urlPrefix: 'http://my-tfy-inferentia-operator-scheduler-extension.default.svc.cluster.local:12345'
        filterVerb: filter
        bindVerb: bind
        enableHTTPS: false
        nodeCacheCapable: true
        managedResources:
          - name: 'aws.amazon.com/neuron'
            ignoredByScheduler: false
          - name: 'aws.amazon.com/neuroncore'
            ignoredByScheduler: false
          - name: 'aws.amazon.com/neurondevice'
            ignoredByScheduler: false
        ignorable: false
    leaderElection:
      leaderElect: true
      resourceNamespace: default
      resourceName: my-tfy-inferentia-operator-neuron-scheduler
---
# Source: tfy-inferentia-operator/templates/neuron-device-plugin.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: my-tfy-inferentia-operator-neuron-device-plugin
rules:
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - update
  - patch
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes/status
  verbs:
  - patch
  - update
---
# Source: tfy-inferentia-operator/templates/neuron-scheduler-extension.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: my-tfy-inferentia-operator-scheduler-extension
rules:
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes/status
  verbs:
  - update
  - patch
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - update
  - patch
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - bindings
  - pods/binding
  verbs:
  - create
---
# Source: tfy-inferentia-operator/templates/neuron-scheduler.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: my-tfy-inferentia-operator-neuron-scheduler
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - list
  - update
---
# Source: tfy-inferentia-operator/templates/neuron-device-plugin.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: my-tfy-inferentia-operator-neuron-device-plugin
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-tfy-inferentia-operator-neuron-device-plugin
subjects:
- kind: ServiceAccount
  name: my-tfy-inferentia-operator-neuron-device-plugin
  namespace: default
---
# Source: tfy-inferentia-operator/templates/neuron-scheduler-extension.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: my-tfy-inferentia-operator-scheduler-extension
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-tfy-inferentia-operator-scheduler-extension
subjects:
- kind: ServiceAccount
  name: my-tfy-inferentia-operator-scheduler-extension
  namespace: default
---
# Source: tfy-inferentia-operator/templates/neuron-scheduler.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-tfy-inferentia-operator-neuron-scheduler-as-kube-scheduler
subjects:
- kind: ServiceAccount
  name: my-tfy-inferentia-operator-neuron-scheduler
  namespace: default
roleRef:
  kind: ClusterRole
  name: system:kube-scheduler
  apiGroup: rbac.authorization.k8s.io
---
# Source: tfy-inferentia-operator/templates/neuron-scheduler.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-tfy-inferentia-operator-neuron-scheduler-as-volume-scheduler
subjects:
- kind: ServiceAccount
  name: my-tfy-inferentia-operator-neuron-scheduler
  namespace: default
roleRef:
  kind: ClusterRole
  name: system:volume-scheduler
  apiGroup: rbac.authorization.k8s.io
---
# Source: tfy-inferentia-operator/templates/neuron-scheduler.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: my-tfy-inferentia-operator-neuron-scheduler
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-tfy-inferentia-operator-neuron-scheduler
subjects:
- kind: ServiceAccount
  name: my-tfy-inferentia-operator-neuron-scheduler
  namespace: default
---
# Source: tfy-inferentia-operator/templates/neuron-scheduler-extension.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-tfy-inferentia-operator-scheduler-extension
  namespace: default
  labels:
    app: my-tfy-inferentia-operator-scheduler
    component: scheduler-extension
spec:
  ports:
  - port: 12345
    name: http
    targetPort: 12345
  selector:
    app: my-tfy-inferentia-operator-scheduler
    component: scheduler-extension
---
# Source: tfy-inferentia-operator/templates/neuron-device-plugin.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: my-tfy-inferentia-operator-neuron-device-plugin
  namespace: default
spec:
  selector:
    matchLabels:
      name: my-tfy-inferentia-operator-neuron-device-plugin-ds
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        name: my-tfy-inferentia-operator-neuron-device-plugin-ds
    spec:
      serviceAccount: my-tfy-inferentia-operator-neuron-device-plugin
      tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: aws.amazon.com/neuron
          operator: Exists
      priorityClassName: "system-node-critical"
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: node.kubernetes.io/instance-type
                operator: In
                values:
                - inf1.xlarge
                - inf1.2xlarge
                - inf1.6xlarge
                - inf1.24xlarge
                - inf2.xlarge
                - inf2.4xlarge
                - inf2.8xlarge
                - inf2.24xlarge
                - inf2.48xlarge
                - trn1.2xlarge
                - trn1.32xlarge
                - trn1n.32xlarge
      containers:
      - image: public.ecr.aws/neuron/neuron-device-plugin:2.16.18.0
        imagePullPolicy: Always
        name: neuron-device-plugin
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop: ["ALL"]
        volumeMounts:
          - name: device-plugin
            mountPath: /var/lib/kubelet/device-plugins
          - name: infa-map
            mountPath: /run
      volumes:
        - name: device-plugin
          hostPath:
            path: /var/lib/kubelet/device-plugins
        - name: infa-map
          hostPath:
            path: /run
---
# Source: tfy-inferentia-operator/templates/neuron-scheduler-extension.yaml
kind: Deployment
apiVersion: apps/v1
metadata:
  name: my-tfy-inferentia-operator-scheduler-extension
  namespace: default
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        app: my-tfy-inferentia-operator-scheduler
        component: scheduler-extension
  template:
    metadata:
      labels:
        app: my-tfy-inferentia-operator-scheduler
        component: scheduler-extension
    spec:
      priorityClassName: system-cluster-critical
      serviceAccountName: my-tfy-inferentia-operator-scheduler-extension
      schedulerName: neuron-scheduler 
      tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
      containers:
        - name: scheduler-exp
          image: public.ecr.aws/neuron/neuron-scheduler:2.18.3.0
          resources:
            null
          env:
          - name: PORT
            value: "12345"

# service.yaml
---
# Source: tfy-inferentia-operator/templates/neuron-scheduler.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    component: scheduler
    tier: control-plane
  name: my-tfy-inferentia-operator-neuron-scheduler
  namespace: default
spec:
  selector:
    matchLabels:
      app: my-tfy-inferentia-operator-neuron-scheduler
      component: scheduler
      tier: control-plane
  replicas: 1
  template:
    metadata:
      labels:
        app: my-tfy-inferentia-operator-neuron-scheduler
        component: scheduler
        tier: control-plane
        version: second
    spec:
      priorityClassName: system-cluster-critical
      serviceAccountName: my-tfy-inferentia-operator-neuron-scheduler
      tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
      containers:
      - image: registry.k8s.io/kube-scheduler:v1.27.7
        args:
          - "--config=/etc/kubernetes/neuron-scheduler/neuron-scheduler-config.yaml"
          - "--leader-elect=true"
          - "--v=2"
          - "--lock-object-name=neuron-scheduler"
          - "--pod-max-in-unschedulable-pods-duration=30s"
        command:
        - /usr/local/bin/kube-scheduler
        image: registry.k8s.io/kube-scheduler:v1.27.7
        livenessProbe:
          httpGet:
            path: /healthz
            port: 10259
            scheme: HTTPS
          initialDelaySeconds: 15
        name: neuron-scheduler
        readinessProbe:
          httpGet:
            path: /healthz
            port: 10259
            scheme: HTTPS
        resources:
          requests:
            cpu: 100m
            memory: 50Mi
        volumeMounts:
          - name: config-volume
            mountPath: /etc/kubernetes/neuron-scheduler
      volumes:
        - name: config-volume
          configMap:
            name: my-tfy-inferentia-operator-neuron-scheduler-config
