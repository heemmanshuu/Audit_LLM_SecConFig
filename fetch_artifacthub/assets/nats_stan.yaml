---
# Source: stan/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-stan-config
  labels:
    app: my-stan
    chart: stan-0.13.0
data:
  stan.conf: |-
    #########################
    # NATS Streaming Config #
    #########################
    streaming {
      id: my-stan

      ###############################
      #  Store Config               #
      ###############################
      store: "file"
      dir: /data/stan/store
      partitioning: false
    }

    ###############################################
    #                                             #
    #            Embedded NATS Config             #
    #                                             #
    ###############################################
    
    
    # PID file shared with configuration reloader.
    pid_file: "/var/run/stan/stan.pid"
    
    ###############
    #             #
    # Monitoring  #
    #             #
    ###############
    http: 8222
    server_name: $POD_NAME
---
# Source: stan/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-stan
  labels:
    app: my-stan
    chart: stan-0.13.0
spec:
  selector:
    app: my-stan
  clusterIP: None
  ports:
  - name: metrics
    port: 7777
  - name: monitor
    port: 8222
  - name: client
    port: 4222
    appProtocol: tcp
---
# Source: stan/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: my-stan
  labels:
    app: my-stan
    chart: stan-0.13.0
spec:
  selector:
    matchLabels:
      app: my-stan

  replicas: 1

  # NATS Streaming service name
  serviceName: my-stan

  template:
    metadata:
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: "7777"
        prometheus.io/scrape: "true"
      labels:
        app: my-stan
        chart: stan-0.13.0
    spec:
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          name: my-stan-config
          defaultMode: 0755
        name: config-volume

      # Local volume shared with the reloader.
      - name: pid
        emptyDir: {}

      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - my-stan
            topologyKey: kubernetes.io/hostname
      containers:
        ####################
        #  NATS Streaming  #
        ####################
        - name: stan
          image: nats-streaming:0.23.2
          args:
          - -sc
          - /etc/stan-config/stan.conf
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: CLUSTER_ADVERTISE
            value: $(POD_NAME).my-stan.$(POD_NAMESPACE).svc
          - name: STAN_SERVICE_NAME
            value: my-stan
          - name: STAN_REPLICAS
            value: "1"
          ports:
          - containerPort: 8222
            name: monitor
          - containerPort: 7777
            name: metrics
          readinessProbe:
            httpGet:
              path: /streaming/serverz
              port: monitor
            timeoutSeconds: 2

          volumeMounts:
          - name: config-volume
            mountPath: /etc/stan-config
          - name: my-stan-pvc
            mountPath: /data/stan
          - name: pid
            mountPath: /var/run/stan
        #################################
        #                               #
        #  NATS Prometheus Exporter     #
        #                               #
        #################################
        - name: metrics
          image: natsio/prometheus-nats-exporter:latest
          args:
          - -connz
          - -routez
          - -subz
          - -varz
          - -channelz
          - -serverz
          - http://localhost:8222/
          ports:
          - containerPort: 7777
            name: metrics
  volumeClaimTemplates:
  - metadata:
      name: my-stan-pvc
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 1Gi
