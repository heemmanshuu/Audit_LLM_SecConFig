---
# Source: sample-bookinfo/templates/details.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    
    helm.sh/chart: sample-bookinfo-1.0.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-sample-bookinfo
    app.kubernetes.io/name: sample-bookinfo
    app.kubernetes.io/version: 1.0.0
    app: details
  annotations:
    kubesphere.io/workloadType: Deployment
    servicemesh.kubesphere.io/enabled: 'true'
  name: details
spec:
  type: ClusterIP
  sessionAffinity: None
  selector:
    app: details
    
    helm.sh/chart: sample-bookinfo-1.0.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-sample-bookinfo
    app.kubernetes.io/name: sample-bookinfo
    app.kubernetes.io/version: 1.0.0
  ports:
    - name: http-web
      protocol: TCP
      port: 9080
      targetPort: 9080
---
# Source: sample-bookinfo/templates/productpage.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app: productpage
    
    helm.sh/chart: sample-bookinfo-1.0.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-sample-bookinfo
    app.kubernetes.io/name: sample-bookinfo
    app.kubernetes.io/version: 1.0.0
  annotations:
    kubesphere.io/workloadType: Deployment
    servicemesh.kubesphere.io/enabled: 'true'
  name: productpage
spec:
  type: ClusterIP
  sessionAffinity: None
  selector:
    app: productpage
    
    helm.sh/chart: sample-bookinfo-1.0.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-sample-bookinfo
    app.kubernetes.io/name: sample-bookinfo
    app.kubernetes.io/version: 1.0.0
  ports:
    - name: http-web
      protocol: TCP
      port: 9080
      targetPort: 9080
---
# Source: sample-bookinfo/templates/ratings.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app: ratings
    
    helm.sh/chart: sample-bookinfo-1.0.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-sample-bookinfo
    app.kubernetes.io/name: sample-bookinfo
    app.kubernetes.io/version: 1.0.0
  annotations:
    kubesphere.io/workloadType: Deployment
    servicemesh.kubesphere.io/enabled: 'true'
  name: ratings
spec:
  type: ClusterIP
  sessionAffinity: None
  selector:
    app: ratings
    
    helm.sh/chart: sample-bookinfo-1.0.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-sample-bookinfo
    app.kubernetes.io/name: sample-bookinfo
    app.kubernetes.io/version: 1.0.0
  ports:
    - name: http-web
      protocol: TCP
      port: 9080
      targetPort: 9080
---
# Source: sample-bookinfo/templates/reviews.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app: reviews
    
    helm.sh/chart: sample-bookinfo-1.0.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-sample-bookinfo
    app.kubernetes.io/name: sample-bookinfo
    app.kubernetes.io/version: 1.0.0
  annotations:
    kubesphere.io/workloadType: Deployment
    servicemesh.kubesphere.io/enabled: 'true'
  name: reviews
spec:
  type: ClusterIP
  sessionAffinity: None
  selector:
    app: reviews
    
    helm.sh/chart: sample-bookinfo-1.0.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-sample-bookinfo
    app.kubernetes.io/name: sample-bookinfo
    app.kubernetes.io/version: 1.0.0
  ports:
    - name: http-web
      protocol: TCP
      port: 9080
      targetPort: 9080
---
# Source: sample-bookinfo/templates/details-v1.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kubesphere.io/isElasticReplicas: 'false'
    servicemesh.kubesphere.io/enabled: 'true'
  labels:
    
    helm.sh/chart: sample-bookinfo-1.0.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-sample-bookinfo
    app.kubernetes.io/name: sample-bookinfo
    app.kubernetes.io/version: 1.0.0
    app: details
    version: v1
  name: details-v1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: details
      version: v1
      
      helm.sh/chart: sample-bookinfo-1.0.0
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/instance: my-sample-bookinfo
      app.kubernetes.io/name: sample-bookinfo
      app.kubernetes.io/version: 1.0.0
  template:
    metadata:
      labels:
        app: details
        version: v1
        
        helm.sh/chart: sample-bookinfo-1.0.0
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/instance: my-sample-bookinfo
        app.kubernetes.io/name: sample-bookinfo
        app.kubernetes.io/version: 1.0.0
      annotations:
        sidecar.istio.io/inject: 'true'
    spec:
      containers:
        - name: details
          resources:
            requests:
              cpu: 10m
              memory: 10Mi
            limits:
              cpu: '1'
              memory: 1000Mi
          imagePullPolicy: IfNotPresent
          image: kubesphere/examples-bookinfo-details-v1:1.13.0
          ports:
            - name: http-web
              protocol: TCP
              containerPort: 9080
      serviceAccount: default
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
---
# Source: sample-bookinfo/templates/productpage-v1.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kubesphere.io/isElasticReplicas: 'false'
    servicemesh.kubesphere.io/enabled: 'true'
  labels:
    app: productpage
    version: v1
    
    helm.sh/chart: sample-bookinfo-1.0.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-sample-bookinfo
    app.kubernetes.io/name: sample-bookinfo
    app.kubernetes.io/version: 1.0.0
  name: productpage-v1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: productpage
      version: v1
      
      helm.sh/chart: sample-bookinfo-1.0.0
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/instance: my-sample-bookinfo
      app.kubernetes.io/name: sample-bookinfo
      app.kubernetes.io/version: 1.0.0
  template:
    metadata:
      labels:
        app: productpage
        version: v1
        
        helm.sh/chart: sample-bookinfo-1.0.0
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/instance: my-sample-bookinfo
        app.kubernetes.io/name: sample-bookinfo
        app.kubernetes.io/version: 1.0.0
      annotations:
        sidecar.istio.io/inject: 'true'
    spec:
      containers:
        - name: productpage
          resources:
            requests:
              cpu: 10m
              memory: 10Mi
            limits:
              cpu: '1'
              memory: 1000Mi
          imagePullPolicy: IfNotPresent
          image: kubesphere/examples-bookinfo-productpage-v1:1.13.0
          ports:
            - name: http-web
              protocol: TCP
              containerPort: 9080
      serviceAccount: default
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
---
# Source: sample-bookinfo/templates/ratings-v1.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kubesphere.io/isElasticReplicas: 'false'
    servicemesh.kubesphere.io/enabled: 'true'
  labels:
    app: ratings
    version: v1
    
    helm.sh/chart: sample-bookinfo-1.0.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-sample-bookinfo
    app.kubernetes.io/name: sample-bookinfo
    app.kubernetes.io/version: 1.0.0
  name: ratings-v1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ratings
      version: v1
      
      helm.sh/chart: sample-bookinfo-1.0.0
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/instance: my-sample-bookinfo
      app.kubernetes.io/name: sample-bookinfo
      app.kubernetes.io/version: 1.0.0

  template:
    metadata:
      labels:
        app: ratings
        version: v1
        
        helm.sh/chart: sample-bookinfo-1.0.0
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/instance: my-sample-bookinfo
        app.kubernetes.io/name: sample-bookinfo
        app.kubernetes.io/version: 1.0.0
      annotations:
        sidecar.istio.io/inject: 'true'
    spec:
      containers:
        - name: ratings
          resources:
            requests:
              cpu: 10m
              memory: 10Mi
            limits:
              cpu: '1'
              memory: 1000Mi
          imagePullPolicy: IfNotPresent
          image: kubesphere/examples-bookinfo-ratings-v1:1.13.0
          ports:
            - name: http-web
              protocol: TCP
              containerPort: 9080
      serviceAccount: default
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
---
# Source: sample-bookinfo/templates/reviews-v1.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kubesphere.io/isElasticReplicas: 'false'
    servicemesh.kubesphere.io/enabled: 'true'
  labels:
    app: reviews
    version: v2
    
    helm.sh/chart: sample-bookinfo-1.0.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-sample-bookinfo
    app.kubernetes.io/name: sample-bookinfo
    app.kubernetes.io/version: 1.0.0
  name: reviews-v2
spec:
  replicas: 1
  selector:
    matchLabels:
      app: reviews
      version: v2
      
      helm.sh/chart: sample-bookinfo-1.0.0
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/instance: my-sample-bookinfo
      app.kubernetes.io/name: sample-bookinfo
      app.kubernetes.io/version: 1.0.0
  template:
    metadata:
      labels:
        app: reviews
        version: v2
        
        helm.sh/chart: sample-bookinfo-1.0.0
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/instance: my-sample-bookinfo
        app.kubernetes.io/name: sample-bookinfo
        app.kubernetes.io/version: 1.0.0
      annotations:
        sidecar.istio.io/inject: 'true'
    spec:
      containers:
        - name: reviews
          resources:
            requests:
              cpu: 10m
              memory: 10Mi
            limits:
              cpu: '1'
              memory: 1000Mi
          imagePullPolicy: Always
          image: kubesphere/examples-bookinfo-reviews-v2:1.13.0
          ports:
            - name: http-web
              protocol: TCP
              containerPort: 9080
      serviceAccount: default
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
---
# Source: sample-bookinfo/templates/ingress.yaml
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations: 
    nginx.ingress.kubernetes.io/upstream-vhost: productpage.default.svc.cluster.local
  labels:
    
    helm.sh/chart: sample-bookinfo-1.0.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-sample-bookinfo
    app.kubernetes.io/name: sample-bookinfo
    app.kubernetes.io/version: 1.0.0
  name: bookinfo-ingress
spec:
  rules:
    - http:
        paths:
          - path: /
            backend:
              serviceName: productpage
              servicePort: 9080
      host: productpage.servicemesh.10.160.19.23.nip.io
---
# Source: sample-bookinfo/templates/application.yaml
apiVersion: app.k8s.io/v1beta1
kind: Application
metadata:
  name: sample-bookinfo
  labels:
    
    helm.sh/chart: sample-bookinfo-1.0.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-sample-bookinfo
    app.kubernetes.io/name: sample-bookinfo
    app.kubernetes.io/version: 1.0.0
  annotations:
    servicemesh.kubesphere.io/enabled: 'true'
spec:
  selector:
    matchLabels:
      app.kubernetes.io/version: 1.0.0
      app.kubernetes.io/name: sample-bookinfo
  addOwnerRef: true
  descriptor:
    icons:
      - src: '/assets/bookinfo.svg'
  componentKinds:
    - group: ''
      kind: Service
    - group: apps
      kind: Deployment
    - group: apps
      kind: StatefulSet
    - group: extensions
      kind: Ingress
    - group: servicemesh.kubesphere.io
      kind: Strategy
    - group: servicemesh.kubesphere.io
      kind: ServicePolicy
