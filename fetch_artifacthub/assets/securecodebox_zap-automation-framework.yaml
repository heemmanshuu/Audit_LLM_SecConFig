---
# Source: zap-automation-framework/templates/zap-entry-point.yaml
# SPDX-FileCopyrightText: the secureCodeBox authors
#
# SPDX-License-Identifier: Apache-2.0

kind: ConfigMap
apiVersion: v1
metadata:
  name: zap-automation-framework-entrypoint
data:
  zap-entrypoint.bash: |

    # ensures that zap still exits with a exit code of zero when the scan logged warnings: see https://www.zaproxy.org/docs/automate/automation-framework/
    ./zap.sh -cmd $@ || [ $? -ne 1 ]
---
# Source: zap-automation-framework/templates/cascading-rules.yaml
# SPDX-FileCopyrightText: the secureCodeBox authors
#
# SPDX-License-Identifier: Apache-2.0

# We only want to import the default cascading rules if they are enabled
---
# Source: zap-automation-framework/templates/zap-parse-definition.yaml
# SPDX-FileCopyrightText: the secureCodeBox authors
#
# SPDX-License-Identifier: Apache-2.0

apiVersion: "execution.securecodebox.io/v1"
kind: ParseDefinition
metadata:
  name: "zap-xml"
spec:
  image: "docker.io/securecodebox/parser-zap-automation-framework:4.8.0"
  imagePullPolicy: IfNotPresent
  ttlSecondsAfterFinished: 
  env:
    []
  scopeLimiterAliases:
    {}
  affinity:
    {}
  tolerations:
    []
---
# Source: zap-automation-framework/templates/zap-scan-type.yaml
# SPDX-FileCopyrightText: the secureCodeBox authors
#
# SPDX-License-Identifier: Apache-2.0

apiVersion: "execution.securecodebox.io/v1"
kind: ScanType
metadata:
  name: "zap-automation-framework"
spec:
  extractResults:
    type: zap-xml
    location: "/home/securecodebox/zap-results.xml"
  jobTemplate:
    spec:
      suspend: false
      template:
        spec:
          restartPolicy: Never
          affinity:
            {}
          tolerations:
            []
          securityContext:
            {}
          containers:
            - name: zap-automation-framework
              image: "softwaresecurityproject/zap-stable:2.15.0"
              imagePullPolicy: IfNotPresent
              command:
                - "bash"
                - "/zap/zap-entrypoint.bash"
              resources:
                {}
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                  - all
                privileged: false
                readOnlyRootFilesystem: false
                runAsNonRoot: false
              env:
                []
              envFrom:
                []
              volumeMounts:
                - mountPath: /zap/wrk
                  name: zap-workdir
                - mountPath: /zap/zap-entrypoint.bash
                  name: zap-automation-framework-entrypoint
                  readOnly: true
                  subPath: zap-entrypoint.bash
          volumes:
            - emptyDir: {}
              name: zap-workdir
            - configMap:
                name: zap-automation-framework-entrypoint
              name: zap-automation-framework-entrypoint
