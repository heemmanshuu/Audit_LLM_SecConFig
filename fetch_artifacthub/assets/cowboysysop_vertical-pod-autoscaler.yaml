---
# Source: vertical-pod-autoscaler/templates/admission-controller/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-vertical-pod-autoscaler-admission-controller
  labels:
    helm.sh/chart: vertical-pod-autoscaler-9.9.0
    app.kubernetes.io/name: vertical-pod-autoscaler
    app.kubernetes.io/instance: my-vertical-pod-autoscaler
    app.kubernetes.io/version: "1.2.1"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: admission-controller
---
# Source: vertical-pod-autoscaler/templates/recommender/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-vertical-pod-autoscaler-recommender
  labels:
    helm.sh/chart: vertical-pod-autoscaler-9.9.0
    app.kubernetes.io/name: vertical-pod-autoscaler
    app.kubernetes.io/instance: my-vertical-pod-autoscaler
    app.kubernetes.io/version: "1.2.1"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: recommender
---
# Source: vertical-pod-autoscaler/templates/updater/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-vertical-pod-autoscaler-updater
  labels:
    helm.sh/chart: vertical-pod-autoscaler-9.9.0
    app.kubernetes.io/name: vertical-pod-autoscaler
    app.kubernetes.io/instance: my-vertical-pod-autoscaler
    app.kubernetes.io/version: "1.2.1"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: updater
---
# Source: vertical-pod-autoscaler/templates/admission-controller/tls-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-vertical-pod-autoscaler-admission-controller-tls
  labels:
    helm.sh/chart: vertical-pod-autoscaler-9.9.0
    app.kubernetes.io/name: vertical-pod-autoscaler
    app.kubernetes.io/instance: my-vertical-pod-autoscaler
    app.kubernetes.io/version: "1.2.1"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: admission-controller
type: Opaque
data:
  ca.crt: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURYekNDQWtlZ0F3SUJBZ0lRTGdRQ3p0S3IvVDFLSG5BTXl0MFc5akFOQmdrcWhraUc5dzBCQVFzRkFEQTYKTVRnd05nWURWUVFERXk5dGVTMTJaWEowYVdOaGJDMXdiMlF0WVhWMGIzTmpZV3hsY2kxaFpHMXBjM05wYjI0dApZMjl1ZEhKdmJHeGxjakFlRncweU5EQTVNVFl3T0RFeE1qWmFGdzB5TlRBNU1UWXdPREV4TWpaYU1Eb3hPREEyCkJnTlZCQU1UTDIxNUxYWmxjblJwWTJGc0xYQnZaQzFoZFhSdmMyTmhiR1Z5TFdGa2JXbHpjMmx2YmkxamIyNTAKY205c2JHVnlNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXNMeVVDWU1oMjhEUAp0V2lPb1ptU2FHTkJhMjhjQ0pTYWpoN3pjcGpQZ05LMjFvVnZSMTRQdGFuUkg2TmM3S0NyTGxZeWR5WWNadHFVCkxJUTJMS29Xb05OUmN6eERFMWVDdEZYWGFwZnVZL1lFR2N0d0JUaFlrYS8rM3ZBeUx2M2txbHFwaWtsSk5BUWsKNU0vbWlrMnNzcWVzRGJaL2UvTjNsTWtOV3l1N1JhVU5KdTdWYjN0S0RWMjVLc3crTmVUcjgxV1drcndJL2xVbApUN0tLRmE1TXJZUnozVm5XdUZjMXM3YVdnVXlBMlB2OEE0enVCUTVOR01PaFV2SVg2dWFnUmhIMUs5S0tRWEZUCkRBbmNKcExzRGJETFE5YTJmclVVY3RzejBmTmprZ0pRK0pTRE0vNUtJMWMvR0h4blJFczF4aGMxK1FSK0UxUEEKTklmUU5iZ21EUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFQkFNQ0FxUXdIUVlEVlIwbEJCWXdGQVlJS3dZQgpCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZHODZqdkpiClptbjdFY05sLzIwcDZ5akw4SHhoTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFBNGxEU2duTzVJSmUwUW1ubUUKUGpZd3FIdE9NUjhvb1hOYTJCckVVSy90bC9nN1JLYXBFRFdxMlRJcTdBaS94WUJieTlFbmFpZkl2cTJoZE1iMwpXRzk2ejZZaU93Wlo1dnBRWktUdlVnTVNWVzA1OFA5SVBqY2xGQys4d2ZsaUswcnNNOTZNRFJRSlp5RXgvT0pDCnFRb2JQZFNyUU1Gc3dCZHAwMllocmwxMlA4SWw0UlNDUGZzbVd0R1lqWGRvdFRFRTdkSjN0M1J5bUd4WHhaREwKTjNJWCtFaFVQbDdLM2ZQcXlNa2hudzNUUG9PYzRnRFZrcXdOZnVVV1Vaa2RncDdjb250SmhTMCtMMkR1TkZXQgp1ZlNQVm8vdHl6bDBUVUUxcDNaM0ZBQU9UY1lvM1JlQUpoT1hIVzdRcWk2V1gzUGpqM04xM1VKeEtKeW1mc2dGCmY2WjQKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
  tls.crt: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURiVENDQWxXZ0F3SUJBZ0lSQUpiajFYVXRnMDRkQ1BGSjRON0NSZEV3RFFZSktvWklodmNOQVFFTEJRQXcKT2pFNE1EWUdBMVVFQXhNdmJYa3RkbVZ5ZEdsallXd3RjRzlrTFdGMWRHOXpZMkZzWlhJdFlXUnRhWE56YVc5dQpMV052Ym5SeWIyeHNaWEl3SGhjTk1qUXdPVEUyTURneE1USTJXaGNOTWpVd09URTJNRGd4TVRJMldqQWlNU0F3CkhnWURWUVFERXhkMmNHRXRkMlZpYUc5dmF5NWtaV1poZFd4MExuTjJZekNDQVNJd0RRWUpLb1pJaHZjTkFRRUIKQlFBRGdnRVBBRENDQVFvQ2dnRUJBTUtTSDRPTCtWNEMzaXVRcHhhZnJYa3g0UjdXM2ltcmhCOFNBckRiTzMrdgo1aEFhVklTV20xUkVoYUhJV2s4aVpSZUxoWnJGQVFzdkp1STRPN3dMOXZ1YVltMEpFVnUvT29Lc0ZrRmVnemFRCnRodEUvc0h4eHZQVTZZZGdrejhkVlNsODEvN2R2by9mSVVKckVrZXhYbkZnbzYvVmpsQkpGRWwvOEF5Qi9tREcKdUlJV1Q3anc5QlJSdnpTMHRYQTR3U2ZnczZOeS9GckgwUCtJQmRIcmlxVnpRUGtFSHlKQWxKQTY2SXVWL3IyYQpQWmRLOTkzYVoxUHNsOWlFZmVmSXJJK2hiV1pBVllCWGRJTm51b0hsWjBLb0t6Q0RHaHpiUVZHdlRZYkhJaHd4CnhidnFXUTRWVlh2TXErS3NKL28wSVNrVktUU1ozUlUwVFhUdFBDbUlBYWNDQXdFQUFhT0JoVENCZ2pBT0JnTlYKSFE4QkFmOEVCQU1DQmFBd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQXdHQTFVZApFd0VCL3dRQ01BQXdId1lEVlIwakJCZ3dGb0FVYnpxTzhsdG1hZnNSdzJYL2JTbnJLTXZ3ZkdFd0lnWURWUjBSCkJCc3dHWUlYZG5CaExYZGxZbWh2YjJzdVpHVm1ZWFZzZEM1emRtTXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUIKQUdKZkR2bEN0NVdmSm5TZGIrOUFGZWYwcGorcExKQ3FBL1NHMHNJdEg5eUVlRU5jb3c1ZUM0MGl0VVpSdVlqTgpwQ3RUbE12S29wenZRcXZoM3N3eHRqcHE0ZmRZbUlLQ2F3TzhQTVBiZUFlYzlGWVBkQVJyODFJYXgyam1ic1Z6CnRNSWFHdmNXQ3ZTNXhCMWtpdEtSajBVTGxNdG9DNHpEMEY1K1BWRmpTSGZFWDNiM0RlN1lhWE1MWFBaVmkrazkKVjhwYzJxVTVIR0duT1UxdzkvZWxQb093QWI2aUhvak1sQzV0eTkxL2tnL09QWHRlaGxRR1kySkxwOUEzdUdUWQo1ZFZROVNsK2RHaVdIclNRMlV5QmF4bjZueGFEMVh5L0NCVHlWV3I5R3owenh6RGloS1V5QkR0Rmp0QjFOamR2CmwwY1RxTHhJclpSNUxiRnJybU5aUjRZPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
  tls.key: "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBd3BJZmc0djVYZ0xlSzVDbkZwK3RlVEhoSHRiZUthdUVIeElDc05zN2Y2L21FQnBVCmhKYWJWRVNGb2NoYVR5SmxGNHVGbXNVQkN5OG00amc3dkF2Mis1cGliUWtSVzc4Nmdxd1dRVjZETnBDMkcwVCsKd2ZIRzg5VHBoMkNUUHgxVktYelgvdDIrajk4aFFtc1NSN0ZlY1dDanI5V09VRWtVU1gvd0RJSCtZTWE0Z2haUAp1UEQwRkZHL05MUzFjRGpCSitDem8zTDhXc2ZRLzRnRjBldUtwWE5BK1FRZklrQ1VrRHJvaTVYK3ZabzlsMHIzCjNkcG5VK3lYMklSOTU4aXNqNkZ0WmtCVmdGZDBnMmU2Z2VWblFxZ3JNSU1hSE50QlVhOU5oc2NpSERIRnUrcFoKRGhWVmU4eXI0cXduK2pRaEtSVXBOSm5kRlRSTmRPMDhLWWdCcHdJREFRQUJBb0lCQUNvWi9sR3pweGp0bSs5bgpWSkJ6cXREUHR6dTZHTWFCZzR4SmxHVjZlc3h0WG1YYm5MQTMrcEpvWlZZVmlWMFlQekd5RWcza1ZRNTdmSGwwCjI1QWNNcXhNd3NGL05jOVplS3F2Mi96M0c0TmlHdFdadjFwdUc3UEZQV2I2d2NIbGNma1JONWZCbWF0K0I2OWMKaGM4WGxTMEpVVUlKL3NwbWxjbzFzZGF6QmowZ1Fob09Va0R1UXVIakNVWU1XbFZoWWpEd1IxU0ErQ2ovSkM3Rwo5eHZBMkpZMVpLUDY5aDJqTU9jL1RJWFoyeCtqWlVGRkxRc0c5MFRpTkVGVHFRMjdqcG9TVXJUdjBVb1VwM01hCkFTNDFNZkh4WEpUVTBiZ0ptSnhHNmVoYXQwNXZaWjZPejdlSnF6REFxakdaYlJFQVFjOXEwTVp4b3N5VXprZUgKSXQ1TXdiRUNnWUVBMEY2Mi92RFhycHZWZjRnRDFES0taSTRtWUFKejZVVXlCQ0sxMzVrelZjMXRnd0hPZnA5QwpNS2RrUlh3WGdZTHVNMUdLRm1DeFl3OXJVTDFiOVJsN2ExVHQ0d0dYRStTTnNSUVBtcUc5RjQvc1lTc2xvMkNhCnRmSlJ4K01TbHo5V1EvMmlUYnBObk4xM1d1NUJ0a2c1VzhFZjRiR0lWVUwrTXYxQW9CakJOY2tDZ1lFQTd3dnEKS3g2MFdCMnpvVjlLRUtJVFB1OUprU2UzS1FBZGtZdExQeEVQTm1VMXc1Szh5SE5mZDBXUnpyNlRwWjhSMXMregpsckhJVjFRODhudzZLaWFETUdsSEZoUFFPaWVmV1ZQcUlHblJWUnlEdnNuM09UdlNmRnJ6ZXJhRnhtV0UxaXpBCi9XY1NOYi9sS0hvSEpQSjA1Z096eURQTEZnUHZRQ0w3dWM3UjgrOENnWUFkTEtYQ25FWVdsSXNZQ0J0QklySnQKMGRsZHAvcEN0d1dCdnJwb1RETDcySDkwMEZQeE5xczExTG9kWUhxS0Q2TDZYSGhSR2NpOGJmUkFvY0syVnBNSgpQQ0x5bmM1aFlxYlVIRkx5KzZKV0lqaWVna1FLMUFQVlpkQTloSFdkNTZoVWJMYkUyMGp5cGErSWM4T1BtaDB0CjA2UjdIVGhSZDhmUHE5WFlsSjY0d1FLQmdHL1ZIeVExSlNIa0kxbG5mdnJ4R0JmbFVvRjZGeEl6WDZIcmpMUmcKZ3NGcjhBOGk0dmJVSXVGbHhxVDJPNVRNS2toWXV5ZlEzRzBlbDdUSnNWeHUwQWtoOTRPNG1UM2JzNHpTMlVGNAp2OW9Wa1B6ODk0L3JFTG5rd3V1eDREdkUyclJvRTVGNVd1ZVNjdDdRMSs3TkR5dGNxQXNOVUFGb3JkRlBqSHlNCjZXUTVBb0dBUjVSWUxaMkNrT2xISlVubWlIcGJDMHJGMmh5bnBRWjdITGt6YnVUSTNVZ3N5WWRoWmtUa0NoQWkKSGNSTHF2c215cG9nTDF4d2lNdHdkTTdDak9ISk4xaURObGpoSkQ0Q0R2d3dBKzczWE9EZW5BRjBmZ21tLzhEMwpzaTFxY0NKRDdXQUNoR0RGWXdyR2s5UjE5QnNOMmhkWCtWNkdIVzY0K0M1cFdMZTh3OU09Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg=="
---
# Source: vertical-pod-autoscaler/templates/admission-controller/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-vertical-pod-autoscaler-admission-controller
  labels:
    helm.sh/chart: vertical-pod-autoscaler-9.9.0
    app.kubernetes.io/name: vertical-pod-autoscaler
    app.kubernetes.io/instance: my-vertical-pod-autoscaler
    app.kubernetes.io/version: "1.2.1"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: admission-controller
rules:
  # system:vpa-target-reader
  - apiGroups:
      - "*"
    resources:
      - "*/scale"
    verbs:
      - get
      - watch
  - apiGroups:
      - ""
    resources:
      - replicationcontrollers
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - apps
    resources:
      - daemonsets
      - deployments
      - replicasets
      - statefulsets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - batch
    resources:
      - jobs
      - cronjobs
    verbs:
      - get
      - list
      - watch
  # system:vpa-admission-controller
  - apiGroups:
      - ""
    resources:
      - pods
      - configmaps
      - nodes
      - limitranges
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - "admissionregistration.k8s.io"
    resources:
      - mutatingwebhookconfigurations
    verbs:
      - create
      - delete
      - get
      - list
  - apiGroups:
      - "poc.autoscaling.k8s.io"
    resources:
      - verticalpodautoscalers
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - "autoscaling.k8s.io"
    resources:
      - verticalpodautoscalers
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - "coordination.k8s.io"
    resources:
      - leases
    verbs:
      - create
      - update
      - get
      - list
      - watch
---
# Source: vertical-pod-autoscaler/templates/recommender/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-vertical-pod-autoscaler-recommender
  labels:
    helm.sh/chart: vertical-pod-autoscaler-9.9.0
    app.kubernetes.io/name: vertical-pod-autoscaler
    app.kubernetes.io/instance: my-vertical-pod-autoscaler
    app.kubernetes.io/version: "1.2.1"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: recommender
rules:
  # system:metrics-reader
  - apiGroups:
      - "metrics.k8s.io"
    resources:
      - pods
    verbs:
      - get
      - list
  # system:vpa-actor
  - apiGroups:
      - ""
    resources:
      - pods
      - nodes
      - limitranges
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - get
      - list
      - watch
      - create
  - apiGroups:
      - "poc.autoscaling.k8s.io"
    resources:
      - verticalpodautoscalers
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - "autoscaling.k8s.io"
    resources:
      - verticalpodautoscalers
    verbs:
      - get
      - list
      - watch
  # system:vpa-status-actor
  - apiGroups:
      - "autoscaling.k8s.io"
    resources:
      - verticalpodautoscalers/status
    verbs:
      - get
      - patch
  # system:vpa-checkpoint-actor
  - apiGroups:
      - "poc.autoscaling.k8s.io"
    resources:
      - verticalpodautoscalercheckpoints
    verbs:
      - get
      - list
      - watch
      - create
      - patch
      - delete
  - apiGroups:
      - "autoscaling.k8s.io"
    resources:
      - verticalpodautoscalercheckpoints
    verbs:
      - get
      - list
      - watch
      - create
      - patch
      - delete
  - apiGroups:
      - ""
    resources:
      - namespaces
    verbs:
      - get
      - list
  # system:vpa-target-reader
  - apiGroups:
      - "*"
    resources:
      - "*/scale"
    verbs:
      - get
      - watch
  - apiGroups:
      - ""
    resources:
      - replicationcontrollers
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - apps
    resources:
      - daemonsets
      - deployments
      - replicasets
      - statefulsets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - batch
    resources:
      - jobs
      - cronjobs
    verbs:
      - get
      - list
      - watch
  # system:leader-locking-vpa-recommender
  - apiGroups:
      - "coordination.k8s.io"
    resources:
      - leases
    verbs:
      - create
  - apiGroups:
      - "coordination.k8s.io"
    resourceNames:
      - vpa-recommender
    resources:
      - leases
    verbs:
      - get
      - watch
      - update
---
# Source: vertical-pod-autoscaler/templates/updater/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-vertical-pod-autoscaler-updater
  labels:
    helm.sh/chart: vertical-pod-autoscaler-9.9.0
    app.kubernetes.io/name: vertical-pod-autoscaler
    app.kubernetes.io/instance: my-vertical-pod-autoscaler
    app.kubernetes.io/version: "1.2.1"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: updater
rules:
  # system:vpa-actor
  - apiGroups:
      - ""
    resources:
      - pods
      - nodes
      - limitranges
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - get
      - list
      - watch
      - create
  - apiGroups:
      - "poc.autoscaling.k8s.io"
    resources:
      - verticalpodautoscalers
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - "autoscaling.k8s.io"
    resources:
      - verticalpodautoscalers
    verbs:
      - get
      - list
      - watch
  # system:vpa-target-reader
  - apiGroups:
      - "*"
    resources:
      - "*/scale"
    verbs:
      - get
      - watch
  - apiGroups:
      - ""
    resources:
      - replicationcontrollers
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - apps
    resources:
      - daemonsets
      - deployments
      - replicasets
      - statefulsets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - batch
    resources:
      - jobs
      - cronjobs
    verbs:
      - get
      - list
      - watch
  # system:evictioner
  - apiGroups:
      - "apps"
      - "extensions"
    resources:
      - replicasets
    verbs:
      - get
  - apiGroups:
      - ""
    resources:
      - pods/eviction
    verbs:
      - create
  # system:vpa-status-reader
  - apiGroups:
      - "coordination.k8s.io"
    resources:
      - leases
    verbs:
      - get
      - list
      - watch
  # system:leader-locking-vpa-updater
  - apiGroups:
      - "coordination.k8s.io"
    resources:
      - leases
    verbs:
      - create
  - apiGroups:
      - "coordination.k8s.io"
    resourceNames:
      - vpa-updater
    resources:
      - leases
    verbs:
      - get
      - watch
      - update
---
# Source: vertical-pod-autoscaler/templates/admission-controller/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-vertical-pod-autoscaler-admission-controller
  labels:
    helm.sh/chart: vertical-pod-autoscaler-9.9.0
    app.kubernetes.io/name: vertical-pod-autoscaler
    app.kubernetes.io/instance: my-vertical-pod-autoscaler
    app.kubernetes.io/version: "1.2.1"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: admission-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-vertical-pod-autoscaler-admission-controller
subjects:
  - kind: ServiceAccount
    name: my-vertical-pod-autoscaler-admission-controller
    namespace: "default"
---
# Source: vertical-pod-autoscaler/templates/recommender/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-vertical-pod-autoscaler-recommender
  labels:
    helm.sh/chart: vertical-pod-autoscaler-9.9.0
    app.kubernetes.io/name: vertical-pod-autoscaler
    app.kubernetes.io/instance: my-vertical-pod-autoscaler
    app.kubernetes.io/version: "1.2.1"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: recommender
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-vertical-pod-autoscaler-recommender
subjects:
  - kind: ServiceAccount
    name: my-vertical-pod-autoscaler-recommender
    namespace: "default"
---
# Source: vertical-pod-autoscaler/templates/updater/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-vertical-pod-autoscaler-updater
  labels:
    helm.sh/chart: vertical-pod-autoscaler-9.9.0
    app.kubernetes.io/name: vertical-pod-autoscaler
    app.kubernetes.io/instance: my-vertical-pod-autoscaler
    app.kubernetes.io/version: "1.2.1"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: updater
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-vertical-pod-autoscaler-updater
subjects:
  - kind: ServiceAccount
    name: my-vertical-pod-autoscaler-updater
    namespace: "default"
---
# Source: vertical-pod-autoscaler/templates/admission-controller/metrics-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-vertical-pod-autoscaler-admission-controller-metrics
  labels:
    helm.sh/chart: vertical-pod-autoscaler-9.9.0
    app.kubernetes.io/name: vertical-pod-autoscaler
    app.kubernetes.io/instance: my-vertical-pod-autoscaler
    app.kubernetes.io/version: "1.2.1"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: admission-controller
spec:
  type: ClusterIP
  ports:
    - port: 8944
      targetPort: http-metrics
      protocol: TCP
      name: http-metrics
  selector:
    app.kubernetes.io/name: vertical-pod-autoscaler
    app.kubernetes.io/instance: my-vertical-pod-autoscaler
    app.kubernetes.io/component: admission-controller
---
# Source: vertical-pod-autoscaler/templates/admission-controller/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: vpa-webhook
  labels:
    helm.sh/chart: vertical-pod-autoscaler-9.9.0
    app.kubernetes.io/name: vertical-pod-autoscaler
    app.kubernetes.io/instance: my-vertical-pod-autoscaler
    app.kubernetes.io/version: "1.2.1"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: admission-controller
spec:
  type: ClusterIP
  sessionAffinity: None
  ports:
    - port: 443
      targetPort: https
      protocol: TCP
      name: https
  selector:
    app.kubernetes.io/name: vertical-pod-autoscaler
    app.kubernetes.io/instance: my-vertical-pod-autoscaler
    app.kubernetes.io/component: admission-controller
---
# Source: vertical-pod-autoscaler/templates/recommender/metrics-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-vertical-pod-autoscaler-recommender-metrics
  labels:
    helm.sh/chart: vertical-pod-autoscaler-9.9.0
    app.kubernetes.io/name: vertical-pod-autoscaler
    app.kubernetes.io/instance: my-vertical-pod-autoscaler
    app.kubernetes.io/version: "1.2.1"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: recommender
spec:
  type: ClusterIP
  ports:
    - port: 8942
      targetPort: http-metrics
      protocol: TCP
      name: http-metrics
  selector:
    app.kubernetes.io/name: vertical-pod-autoscaler
    app.kubernetes.io/instance: my-vertical-pod-autoscaler
    app.kubernetes.io/component: recommender
---
# Source: vertical-pod-autoscaler/templates/updater/metrics-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-vertical-pod-autoscaler-updater-metrics
  labels:
    helm.sh/chart: vertical-pod-autoscaler-9.9.0
    app.kubernetes.io/name: vertical-pod-autoscaler
    app.kubernetes.io/instance: my-vertical-pod-autoscaler
    app.kubernetes.io/version: "1.2.1"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: updater
spec:
  type: ClusterIP
  ports:
    - port: 8943
      targetPort: http-metrics
      protocol: TCP
      name: http-metrics
  selector:
    app.kubernetes.io/name: vertical-pod-autoscaler
    app.kubernetes.io/instance: my-vertical-pod-autoscaler
    app.kubernetes.io/component: updater
---
# Source: vertical-pod-autoscaler/templates/admission-controller/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-vertical-pod-autoscaler-admission-controller
  labels:
    helm.sh/chart: vertical-pod-autoscaler-9.9.0
    app.kubernetes.io/name: vertical-pod-autoscaler
    app.kubernetes.io/instance: my-vertical-pod-autoscaler
    app.kubernetes.io/version: "1.2.1"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: admission-controller
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: vertical-pod-autoscaler
      app.kubernetes.io/instance: my-vertical-pod-autoscaler
      app.kubernetes.io/component: admission-controller
  template:
    metadata:
      labels:
        app.kubernetes.io/name: vertical-pod-autoscaler
        app.kubernetes.io/instance: my-vertical-pod-autoscaler
        app.kubernetes.io/component: admission-controller
      annotations:
        checksum/tls-secret: ca9725211c8441f3586abcb415d562db4bcd9425d08d73e47dde8c0b05eaeb46
    spec:
      
      serviceAccountName: my-vertical-pod-autoscaler-admission-controller
      securityContext:
        runAsGroup: 65534
        runAsNonRoot: true
        runAsUser: 65534
      containers:
        - name: admission-controller
          securityContext:
            {}
          image: registry.k8s.io/autoscaling/vpa-admission-controller:1.2.1
          imagePullPolicy: IfNotPresent
          args:
            - --address=:8944
            - --port=8000
            - --client-ca-file=/tls-secret/ca.crt
            - --tls-cert-file=/tls-secret/tls.crt
            - --tls-private-key=/tls-secret/tls.key
            - --v=2
          env:
            - name: NAMESPACE
              value: default
          ports:
            - name: https
              containerPort: 8000
              protocol: TCP
            - name: http-metrics
              containerPort: 8944
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health-check
              port: http-metrics
            initialDelaySeconds: 0
            periodSeconds: 10
            timeoutSeconds: 1
            failureThreshold: 3
            successThreshold: 1
          readinessProbe:
            httpGet:
              path: /health-check
              port: http-metrics
            initialDelaySeconds: 0
            periodSeconds: 10
            timeoutSeconds: 1
            failureThreshold: 3
            successThreshold: 1
          resources:
            {}
          volumeMounts:
            - name: tls-secret
              mountPath: /tls-secret
              readOnly: true
      volumes:
        - name: tls-secret
          secret:
            secretName: my-vertical-pod-autoscaler-admission-controller-tls
---
# Source: vertical-pod-autoscaler/templates/recommender/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-vertical-pod-autoscaler-recommender
  labels:
    helm.sh/chart: vertical-pod-autoscaler-9.9.0
    app.kubernetes.io/name: vertical-pod-autoscaler
    app.kubernetes.io/instance: my-vertical-pod-autoscaler
    app.kubernetes.io/version: "1.2.1"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: recommender
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: vertical-pod-autoscaler
      app.kubernetes.io/instance: my-vertical-pod-autoscaler
      app.kubernetes.io/component: recommender
  template:
    metadata:
      labels:
        app.kubernetes.io/name: vertical-pod-autoscaler
        app.kubernetes.io/instance: my-vertical-pod-autoscaler
        app.kubernetes.io/component: recommender
    spec:
      
      serviceAccountName: my-vertical-pod-autoscaler-recommender
      securityContext:
        runAsGroup: 65534
        runAsNonRoot: true
        runAsUser: 65534
      containers:
        - name: recommender
          securityContext:
            {}
          image: registry.k8s.io/autoscaling/vpa-recommender:1.2.1
          imagePullPolicy: IfNotPresent
          args:
            - --address=:8942
            - --v=2
          ports:
            - name: http-metrics
              containerPort: 8942
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health-check
              port: http-metrics
            initialDelaySeconds: 0
            periodSeconds: 10
            timeoutSeconds: 1
            failureThreshold: 3
            successThreshold: 1
          readinessProbe:
            httpGet:
              path: /health-check
              port: http-metrics
            initialDelaySeconds: 0
            periodSeconds: 10
            timeoutSeconds: 1
            failureThreshold: 3
            successThreshold: 1
          resources:
            {}
          volumeMounts:
      volumes:
---
# Source: vertical-pod-autoscaler/templates/updater/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-vertical-pod-autoscaler-updater
  labels:
    helm.sh/chart: vertical-pod-autoscaler-9.9.0
    app.kubernetes.io/name: vertical-pod-autoscaler
    app.kubernetes.io/instance: my-vertical-pod-autoscaler
    app.kubernetes.io/version: "1.2.1"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: updater
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: vertical-pod-autoscaler
      app.kubernetes.io/instance: my-vertical-pod-autoscaler
      app.kubernetes.io/component: updater
  template:
    metadata:
      labels:
        app.kubernetes.io/name: vertical-pod-autoscaler
        app.kubernetes.io/instance: my-vertical-pod-autoscaler
        app.kubernetes.io/component: updater
    spec:
      
      serviceAccountName: my-vertical-pod-autoscaler-updater
      securityContext:
        runAsGroup: 65534
        runAsNonRoot: true
        runAsUser: 65534
      containers:
        - name: updater
          securityContext:
            {}
          image: registry.k8s.io/autoscaling/vpa-updater:1.2.1
          imagePullPolicy: IfNotPresent
          args:
            - --address=:8943
            - --v=2
          env:
            - name: NAMESPACE
              value: default
          ports:
            - name: http-metrics
              containerPort: 8943
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health-check
              port: http-metrics
            initialDelaySeconds: 0
            periodSeconds: 10
            timeoutSeconds: 1
            failureThreshold: 3
            successThreshold: 1
          readinessProbe:
            httpGet:
              path: /health-check
              port: http-metrics
            initialDelaySeconds: 0
            periodSeconds: 10
            timeoutSeconds: 1
            failureThreshold: 3
            successThreshold: 1
          resources:
            {}
          volumeMounts:
      volumes:
---
# Source: vertical-pod-autoscaler/templates/crds/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-vertical-pod-autoscaler-crds
  labels:
    helm.sh/chart: vertical-pod-autoscaler-9.9.0
    app.kubernetes.io/name: vertical-pod-autoscaler
    app.kubernetes.io/instance: my-vertical-pod-autoscaler
    app.kubernetes.io/version: "1.2.1"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: crds
  annotations:
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
---
# Source: vertical-pod-autoscaler/templates/crds/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-vertical-pod-autoscaler-crds
  labels:
    helm.sh/chart: vertical-pod-autoscaler-9.9.0
    app.kubernetes.io/name: vertical-pod-autoscaler
    app.kubernetes.io/instance: my-vertical-pod-autoscaler
    app.kubernetes.io/version: "1.2.1"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: crds
  annotations:
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
data:
  verticalpodautoscalercheckpoints.yaml: |
    apiVersion: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    metadata:
      name: verticalpodautoscalercheckpoints.autoscaling.k8s.io
      labels:
        helm.sh/chart: vertical-pod-autoscaler-9.9.0
        app.kubernetes.io/name: vertical-pod-autoscaler
        app.kubernetes.io/instance: my-vertical-pod-autoscaler
        app.kubernetes.io/version: "1.2.1"
        app.kubernetes.io/managed-by: Helm
      annotations:
        api-approved.kubernetes.io: https://github.com/kubernetes/kubernetes/pull/63797
    spec:
      group: autoscaling.k8s.io
      names:
        kind: VerticalPodAutoscalerCheckpoint
        listKind: VerticalPodAutoscalerCheckpointList
        plural: verticalpodautoscalercheckpoints
        shortNames:
        - vpacheckpoint
        singular: verticalpodautoscalercheckpoint
      scope: Namespaced
      versions:
      - name: v1
        schema:
          openAPIV3Schema:
            description: VerticalPodAutoscalerCheckpoint is the checkpoint of the internal
              state of VPA that is used for recovery after recommender's restart.
            properties:
              apiVersion:
                description: 'APIVersion defines the versioned schema of this representation
                  of an object. Servers should convert recognized schemas to the latest
                  internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                type: string
              kind:
                description: 'Kind is a string value representing the REST resource this
                  object represents. Servers may infer this from the endpoint the client
                  submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                type: string
              metadata:
                type: object
              spec:
                description: 'Specification of the checkpoint. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status.'
                properties:
                  containerName:
                    description: Name of the checkpointed container.
                    type: string
                  vpaObjectName:
                    description: Name of the VPA object that stored VerticalPodAutoscalerCheckpoint
                      object.
                    type: string
                type: object
              status:
                description: Data of the checkpoint.
                properties:
                  cpuHistogram:
                    description: Checkpoint of histogram for consumption of CPU.
                    properties:
                      bucketWeights:
                        description: Map from bucket index to bucket weight.
                        type: object
                        x-kubernetes-preserve-unknown-fields: true
                      referenceTimestamp:
                        description: Reference timestamp for samples collected within
                          this histogram.
                        format: date-time
                        nullable: true
                        type: string
                      totalWeight:
                        description: Sum of samples to be used as denominator for weights
                          from BucketWeights.
                        type: number
                    type: object
                  firstSampleStart:
                    description: Timestamp of the fist sample from the histograms.
                    format: date-time
                    nullable: true
                    type: string
                  lastSampleStart:
                    description: Timestamp of the last sample from the histograms.
                    format: date-time
                    nullable: true
                    type: string
                  lastUpdateTime:
                    description: The time when the status was last refreshed.
                    format: date-time
                    nullable: true
                    type: string
                  memoryHistogram:
                    description: Checkpoint of histogram for consumption of memory.
                    properties:
                      bucketWeights:
                        description: Map from bucket index to bucket weight.
                        type: object
                        x-kubernetes-preserve-unknown-fields: true
                      referenceTimestamp:
                        description: Reference timestamp for samples collected within
                          this histogram.
                        format: date-time
                        nullable: true
                        type: string
                      totalWeight:
                        description: Sum of samples to be used as denominator for weights
                          from BucketWeights.
                        type: number
                    type: object
                  totalSamplesCount:
                    description: Total number of samples in the histograms.
                    type: integer
                  version:
                    description: Version of the format of the stored data.
                    type: string
                type: object
            type: object
        served: true
        storage: true
      - name: v1beta2
        schema:
          openAPIV3Schema:
            description: VerticalPodAutoscalerCheckpoint is the checkpoint of the internal
              state of VPA that is used for recovery after recommender's restart.
            properties:
              apiVersion:
                description: 'APIVersion defines the versioned schema of this representation
                  of an object. Servers should convert recognized schemas to the latest
                  internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                type: string
              kind:
                description: 'Kind is a string value representing the REST resource this
                  object represents. Servers may infer this from the endpoint the client
                  submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                type: string
              metadata:
                type: object
              spec:
                description: 'Specification of the checkpoint. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status.'
                properties:
                  containerName:
                    description: Name of the checkpointed container.
                    type: string
                  vpaObjectName:
                    description: Name of the VPA object that stored VerticalPodAutoscalerCheckpoint
                      object.
                    type: string
                type: object
              status:
                description: Data of the checkpoint.
                properties:
                  cpuHistogram:
                    description: Checkpoint of histogram for consumption of CPU.
                    properties:
                      bucketWeights:
                        description: Map from bucket index to bucket weight.
                        type: object
                        x-kubernetes-preserve-unknown-fields: true
                      referenceTimestamp:
                        description: Reference timestamp for samples collected within
                          this histogram.
                        format: date-time
                        nullable: true
                        type: string
                      totalWeight:
                        description: Sum of samples to be used as denominator for weights
                          from BucketWeights.
                        type: number
                    type: object
                  firstSampleStart:
                    description: Timestamp of the fist sample from the histograms.
                    format: date-time
                    nullable: true
                    type: string
                  lastSampleStart:
                    description: Timestamp of the last sample from the histograms.
                    format: date-time
                    nullable: true
                    type: string
                  lastUpdateTime:
                    description: The time when the status was last refreshed.
                    format: date-time
                    nullable: true
                    type: string
                  memoryHistogram:
                    description: Checkpoint of histogram for consumption of memory.
                    properties:
                      bucketWeights:
                        description: Map from bucket index to bucket weight.
                        type: object
                        x-kubernetes-preserve-unknown-fields: true
                      referenceTimestamp:
                        description: Reference timestamp for samples collected within
                          this histogram.
                        format: date-time
                        nullable: true
                        type: string
                      totalWeight:
                        description: Sum of samples to be used as denominator for weights
                          from BucketWeights.
                        type: number
                    type: object
                  totalSamplesCount:
                    description: Total number of samples in the histograms.
                    type: integer
                  version:
                    description: Version of the format of the stored data.
                    type: string
                type: object
            type: object
        served: true
        storage: false
    
  verticalpodautoscalers.yaml: |
    apiVersion: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    metadata:
      name: verticalpodautoscalers.autoscaling.k8s.io
      labels:
        helm.sh/chart: vertical-pod-autoscaler-9.9.0
        app.kubernetes.io/name: vertical-pod-autoscaler
        app.kubernetes.io/instance: my-vertical-pod-autoscaler
        app.kubernetes.io/version: "1.2.1"
        app.kubernetes.io/managed-by: Helm
      annotations:
        api-approved.kubernetes.io: https://github.com/kubernetes/kubernetes/pull/63797
    spec:
      group: autoscaling.k8s.io
      names:
        kind: VerticalPodAutoscaler
        listKind: VerticalPodAutoscalerList
        plural: verticalpodautoscalers
        shortNames:
        - vpa
        singular: verticalpodautoscaler
      scope: Namespaced
      versions:
      - additionalPrinterColumns:
        - jsonPath: .spec.updatePolicy.updateMode
          name: Mode
          type: string
        - jsonPath: .status.recommendation.containerRecommendations[0].target.cpu
          name: CPU
          type: string
        - jsonPath: .status.recommendation.containerRecommendations[0].target.memory
          name: Mem
          type: string
        - jsonPath: .status.conditions[?(@.type=='RecommendationProvided')].status
          name: Provided
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
        name: v1
        schema:
          openAPIV3Schema:
            description: VerticalPodAutoscaler is the configuration for a vertical pod
              autoscaler, which automatically manages pod resources based on historical
              and real time resource utilization.
            properties:
              apiVersion:
                description: 'APIVersion defines the versioned schema of this representation
                  of an object. Servers should convert recognized schemas to the latest
                  internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                type: string
              kind:
                description: 'Kind is a string value representing the REST resource this
                  object represents. Servers may infer this from the endpoint the client
                  submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                type: string
              metadata:
                type: object
              spec:
                description: 'Specification of the behavior of the autoscaler. More info:
                  https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status.'
                properties:
                  recommenders:
                    description: Recommender responsible for generating recommendation
                      for this object. List should be empty (then the default recommender
                      will generate the recommendation) or contain exactly one recommender.
                    items:
                      description: VerticalPodAutoscalerRecommenderSelector points to
                        a specific Vertical Pod Autoscaler recommender. In the future
                        it might pass parameters to the recommender.
                      properties:
                        name:
                          description: Name of the recommender responsible for generating
                            recommendation for this object.
                          type: string
                      required:
                      - name
                      type: object
                    type: array
                  resourcePolicy:
                    description: Controls how the autoscaler computes recommended resources.
                      The resource policy may be used to set constraints on the recommendations
                      for individual containers. If any individual containers need to
                      be excluded from getting the VPA recommendations, then it must be
                      disabled explicitly by setting mode to "Off" under containerPolicies.
                      If not specified, the autoscaler computes recommended resources
                      for all containers in the pod, without additional constraints.
                    properties:
                      containerPolicies:
                        description: Per-container resource policies.
                        items:
                          description: ContainerResourcePolicy controls how autoscaler
                            computes the recommended resources for a specific container.
                          properties:
                            containerName:
                              description: Name of the container or DefaultContainerResourcePolicy,
                                in which case the policy is used by the containers that
                                don't have their own policy specified.
                              type: string
                            controlledResources:
                              description: Specifies the type of recommendations that
                                will be computed (and possibly applied) by VPA. If not
                                specified, the default of [ResourceCPU, ResourceMemory]
                                will be used.
                              items:
                                description: ResourceName is the name identifying various
                                  resources in a ResourceList.
                                type: string
                              type: array
                            controlledValues:
                              description: Specifies which resource values should be controlled.
                                The default is "RequestsAndLimits".
                              enum:
                              - RequestsAndLimits
                              - RequestsOnly
                              type: string
                            maxAllowed:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: Specifies the maximum amount of resources that
                                will be recommended for the container. The default is
                                no maximum.
                              type: object
                            minAllowed:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: Specifies the minimal amount of resources that
                                will be recommended for the container. The default is
                                no minimum.
                              type: object
                            mode:
                              description: Whether autoscaler is enabled for the container.
                                The default is "Auto".
                              enum:
                              - Auto
                              - "Off"
                              type: string
                          type: object
                        type: array
                    type: object
                  targetRef:
                    description: TargetRef points to the controller managing the set of
                      pods for the autoscaler to control - e.g. Deployment, StatefulSet.
                      VerticalPodAutoscaler can be targeted at controller implementing
                      scale subresource (the pod set is retrieved from the controller's
                      ScaleStatus) or some well known controllers (e.g. for DaemonSet
                      the pod set is read from the controller's spec). If VerticalPodAutoscaler
                      cannot use specified target it will report ConfigUnsupported condition.
                      Note that VerticalPodAutoscaler does not require full implementation
                      of scale subresource - it will not use it to modify the replica
                      count. The only thing retrieved is a label selector matching pods
                      grouped by the target resource.
                    properties:
                      apiVersion:
                        description: API version of the referent
                        type: string
                      kind:
                        description: 'Kind of the referent; More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                        type: string
                      name:
                        description: 'Name of the referent; More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                        type: string
                    required:
                    - kind
                    - name
                    type: object
                    x-kubernetes-map-type: atomic
                  updatePolicy:
                    description: Describes the rules on how changes are applied to the
                      pods. If not specified, all fields in the `PodUpdatePolicy` are
                      set to their default values.
                    properties:
                      evictionRequirements:
                        description: EvictionRequirements is a list of EvictionRequirements
                          that need to evaluate to true in order for a Pod to be evicted.
                          If more than one EvictionRequirement is specified, all of them
                          need to be fulfilled to allow eviction.
                        items:
                          description: EvictionRequirement defines a single condition
                            which needs to be true in order to evict a Pod
                          properties:
                            changeRequirement:
                              description: EvictionChangeRequirement refers to the relationship
                                between the new target recommendation for a Pod and its
                                current requests, what kind of change is necessary for
                                the Pod to be evicted
                              enum:
                              - TargetHigherThanRequests
                              - TargetLowerThanRequests
                              type: string
                            resources:
                              description: Resources is a list of one or more resources
                                that the condition applies to. If more than one resource
                                is given, the EvictionRequirement is fulfilled if at least
                                one resource meets `changeRequirement`.
                              items:
                                description: ResourceName is the name identifying various
                                  resources in a ResourceList.
                                type: string
                              type: array
                          required:
                          - changeRequirement
                          - resources
                          type: object
                        type: array
                      minReplicas:
                        description: Minimal number of replicas which need to be alive
                          for Updater to attempt pod eviction (pending other checks like
                          PDB). Only positive values are allowed. Overrides global '--min-replicas'
                          flag.
                        format: int32
                        type: integer
                      updateMode:
                        description: Controls when autoscaler applies changes to the pod
                          resources. The default is 'Auto'.
                        enum:
                        - "Off"
                        - Initial
                        - Recreate
                        - Auto
                        type: string
                    type: object
                required:
                - targetRef
                type: object
              status:
                description: Current information about the autoscaler.
                properties:
                  conditions:
                    description: Conditions is the set of conditions required for this
                      autoscaler to scale its target, and indicates whether or not those
                      conditions are met.
                    items:
                      description: VerticalPodAutoscalerCondition describes the state
                        of a VerticalPodAutoscaler at a certain point.
                      properties:
                        lastTransitionTime:
                          description: lastTransitionTime is the last time the condition
                            transitioned from one status to another
                          format: date-time
                          type: string
                        message:
                          description: message is a human-readable explanation containing
                            details about the transition
                          type: string
                        reason:
                          description: reason is the reason for the condition's last transition.
                          type: string
                        status:
                          description: status is the status of the condition (True, False,
                            Unknown)
                          type: string
                        type:
                          description: type describes the current condition
                          type: string
                      required:
                      - status
                      - type
                      type: object
                    type: array
                  recommendation:
                    description: The most recently computed amount of resources recommended
                      by the autoscaler for the controlled pods.
                    properties:
                      containerRecommendations:
                        description: Resources recommended by the autoscaler for each
                          container.
                        items:
                          description: RecommendedContainerResources is the recommendation
                            of resources computed by autoscaler for a specific container.
                            Respects the container resource policy if present in the spec.
                            In particular the recommendation is not produced for containers
                            with `ContainerScalingMode` set to 'Off'.
                          properties:
                            containerName:
                              description: Name of the container.
                              type: string
                            lowerBound:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: Minimum recommended amount of resources. Observes
                                ContainerResourcePolicy. This amount is not guaranteed
                                to be sufficient for the application to operate in a stable
                                way, however running with less resources is likely to
                                have significant impact on performance/availability.
                              type: object
                            target:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: Recommended amount of resources. Observes ContainerResourcePolicy.
                              type: object
                            uncappedTarget:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: The most recent recommended resources target
                                computed by the autoscaler for the controlled pods, based
                                only on actual resource usage, not taking into account
                                the ContainerResourcePolicy. May differ from the Recommendation
                                if the actual resource usage causes the target to violate
                                the ContainerResourcePolicy (lower than MinAllowed or
                                higher that MaxAllowed). Used only as status indication,
                                will not affect actual resource assignment.
                              type: object
                            upperBound:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: Maximum recommended amount of resources. Observes
                                ContainerResourcePolicy. Any resources allocated beyond
                                this value are likely wasted. This value may be larger
                                than the maximum amount of application is actually capable
                                of consuming.
                              type: object
                          required:
                          - target
                          type: object
                        type: array
                    type: object
                type: object
            required:
            - spec
            type: object
        served: true
        storage: true
        subresources:
          status: {}
      - deprecated: true
        deprecationWarning: autoscaling.k8s.io/v1beta2 API is deprecated
        name: v1beta2
        schema:
          openAPIV3Schema:
            description: VerticalPodAutoscaler is the configuration for a vertical pod
              autoscaler, which automatically manages pod resources based on historical
              and real time resource utilization.
            properties:
              apiVersion:
                description: 'APIVersion defines the versioned schema of this representation
                  of an object. Servers should convert recognized schemas to the latest
                  internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                type: string
              kind:
                description: 'Kind is a string value representing the REST resource this
                  object represents. Servers may infer this from the endpoint the client
                  submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                type: string
              metadata:
                type: object
              spec:
                description: 'Specification of the behavior of the autoscaler. More info:
                  https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status.'
                properties:
                  resourcePolicy:
                    description: Controls how the autoscaler computes recommended resources.
                      The resource policy may be used to set constraints on the recommendations
                      for individual containers. If not specified, the autoscaler computes
                      recommended resources for all containers in the pod, without additional
                      constraints.
                    properties:
                      containerPolicies:
                        description: Per-container resource policies.
                        items:
                          description: ContainerResourcePolicy controls how autoscaler
                            computes the recommended resources for a specific container.
                          properties:
                            containerName:
                              description: Name of the container or DefaultContainerResourcePolicy,
                                in which case the policy is used by the containers that
                                don't have their own policy specified.
                              type: string
                            maxAllowed:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: Specifies the maximum amount of resources that
                                will be recommended for the container. The default is
                                no maximum.
                              type: object
                            minAllowed:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: Specifies the minimal amount of resources that
                                will be recommended for the container. The default is
                                no minimum.
                              type: object
                            mode:
                              description: Whether autoscaler is enabled for the container.
                                The default is "Auto".
                              enum:
                              - Auto
                              - "Off"
                              type: string
                          type: object
                        type: array
                    type: object
                  targetRef:
                    description: TargetRef points to the controller managing the set of
                      pods for the autoscaler to control - e.g. Deployment, StatefulSet.
                      VerticalPodAutoscaler can be targeted at controller implementing
                      scale subresource (the pod set is retrieved from the controller's
                      ScaleStatus) or some well known controllers (e.g. for DaemonSet
                      the pod set is read from the controller's spec). If VerticalPodAutoscaler
                      cannot use specified target it will report ConfigUnsupported condition.
                      Note that VerticalPodAutoscaler does not require full implementation
                      of scale subresource - it will not use it to modify the replica
                      count. The only thing retrieved is a label selector matching pods
                      grouped by the target resource.
                    properties:
                      apiVersion:
                        description: API version of the referent
                        type: string
                      kind:
                        description: 'Kind of the referent; More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                        type: string
                      name:
                        description: 'Name of the referent; More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                        type: string
                    required:
                    - kind
                    - name
                    type: object
                    x-kubernetes-map-type: atomic
                  updatePolicy:
                    description: Describes the rules on how changes are applied to the
                      pods. If not specified, all fields in the `PodUpdatePolicy` are
                      set to their default values.
                    properties:
                      updateMode:
                        description: Controls when autoscaler applies changes to the pod
                          resources. The default is 'Auto'.
                        enum:
                        - "Off"
                        - Initial
                        - Recreate
                        - Auto
                        type: string
                    type: object
                required:
                - targetRef
                type: object
              status:
                description: Current information about the autoscaler.
                properties:
                  conditions:
                    description: Conditions is the set of conditions required for this
                      autoscaler to scale its target, and indicates whether or not those
                      conditions are met.
                    items:
                      description: VerticalPodAutoscalerCondition describes the state
                        of a VerticalPodAutoscaler at a certain point.
                      properties:
                        lastTransitionTime:
                          description: lastTransitionTime is the last time the condition
                            transitioned from one status to another
                          format: date-time
                          type: string
                        message:
                          description: message is a human-readable explanation containing
                            details about the transition
                          type: string
                        reason:
                          description: reason is the reason for the condition's last transition.
                          type: string
                        status:
                          description: status is the status of the condition (True, False,
                            Unknown)
                          type: string
                        type:
                          description: type describes the current condition
                          type: string
                      required:
                      - status
                      - type
                      type: object
                    type: array
                  recommendation:
                    description: The most recently computed amount of resources recommended
                      by the autoscaler for the controlled pods.
                    properties:
                      containerRecommendations:
                        description: Resources recommended by the autoscaler for each
                          container.
                        items:
                          description: RecommendedContainerResources is the recommendation
                            of resources computed by autoscaler for a specific container.
                            Respects the container resource policy if present in the spec.
                            In particular the recommendation is not produced for containers
                            with `ContainerScalingMode` set to 'Off'.
                          properties:
                            containerName:
                              description: Name of the container.
                              type: string
                            lowerBound:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: Minimum recommended amount of resources. Observes
                                ContainerResourcePolicy. This amount is not guaranteed
                                to be sufficient for the application to operate in a stable
                                way, however running with less resources is likely to
                                have significant impact on performance/availability.
                              type: object
                            target:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: Recommended amount of resources. Observes ContainerResourcePolicy.
                              type: object
                            uncappedTarget:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: The most recent recommended resources target
                                computed by the autoscaler for the controlled pods, based
                                only on actual resource usage, not taking into account
                                the ContainerResourcePolicy. May differ from the Recommendation
                                if the actual resource usage causes the target to violate
                                the ContainerResourcePolicy (lower than MinAllowed or
                                higher that MaxAllowed). Used only as status indication,
                                will not affect actual resource assignment.
                              type: object
                            upperBound:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: Maximum recommended amount of resources. Observes
                                ContainerResourcePolicy. Any resources allocated beyond
                                this value are likely wasted. This value may be larger
                                than the maximum amount of application is actually capable
                                of consuming.
                              type: object
                          required:
                          - target
                          type: object
                        type: array
                    type: object
                type: object
            required:
            - spec
            type: object
        served: true
        storage: false
        subresources:
          status: {}
---
# Source: vertical-pod-autoscaler/templates/tests/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-vertical-pod-autoscaler-tests
  labels:
    helm.sh/chart: vertical-pod-autoscaler-9.9.0
    app.kubernetes.io/name: vertical-pod-autoscaler
    app.kubernetes.io/instance: my-vertical-pod-autoscaler
    app.kubernetes.io/version: "1.2.1"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: tests
  annotations:
    helm.sh/hook: test
data:
  test_all.py: |
    import requests


    def test_admission_controller_service_connection():
        url = "https://vpa-webhook.default.svc:443/"
        verify = "/admission-controller-tls-secret/ca.crt"

        response = requests.get(url, verify=verify)

        assert response.status_code == 200


    def test_admission_controller_metrics_service_connection():
        url = "http://my-vertical-pod-autoscaler-admission-controller-metrics:8944/metrics"

        response = requests.get(url)

        assert response.status_code == 200


    def test_recommender_metrics_service_connection():
        url = "http://my-vertical-pod-autoscaler-recommender-metrics:8942/metrics"

        response = requests.get(url)

        assert response.status_code == 200


    def test_updater_metrics_service_connection():
        url = "http://my-vertical-pod-autoscaler-updater-metrics:8943/metrics"

        response = requests.get(url)

        assert response.status_code == 200
---
# Source: vertical-pod-autoscaler/templates/crds/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-vertical-pod-autoscaler-crds
  labels:
    helm.sh/chart: vertical-pod-autoscaler-9.9.0
    app.kubernetes.io/name: vertical-pod-autoscaler
    app.kubernetes.io/instance: my-vertical-pod-autoscaler
    app.kubernetes.io/version: "1.2.1"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: crds
  annotations:
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
rules:
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - create
      - get
      - patch
---
# Source: vertical-pod-autoscaler/templates/crds/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-vertical-pod-autoscaler-crds
  labels:
    helm.sh/chart: vertical-pod-autoscaler-9.9.0
    app.kubernetes.io/name: vertical-pod-autoscaler
    app.kubernetes.io/instance: my-vertical-pod-autoscaler
    app.kubernetes.io/version: "1.2.1"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: crds
  annotations:
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-vertical-pod-autoscaler-crds
subjects:
  - kind: ServiceAccount
    name: my-vertical-pod-autoscaler-crds
    namespace: "default"
---
# Source: vertical-pod-autoscaler/templates/tests/pod.yaml
apiVersion: v1
kind: Pod
metadata:
  name: my-vertical-pod-autoscaler-tests
  labels:
    helm.sh/chart: vertical-pod-autoscaler-9.9.0
    app.kubernetes.io/name: vertical-pod-autoscaler
    app.kubernetes.io/instance: my-vertical-pod-autoscaler
    app.kubernetes.io/version: "1.2.1"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: tests
  annotations:
    helm.sh/hook: test
spec:
  
  containers:
    - name: tests
      image: ghcr.io/cowboysysop/pytest:1.0.41
      imagePullPolicy: IfNotPresent
      volumeMounts:
        - name: tests
          mountPath: /tests
          readOnly: true
        - name: admission-controller-tls-secret
          mountPath: /admission-controller-tls-secret
          readOnly: true
      workingDir: /tests
  restartPolicy: Never
  volumes:
    - name: tests
      configMap:
        name: my-vertical-pod-autoscaler-tests
    - name: admission-controller-tls-secret
      secret:
        secretName: my-vertical-pod-autoscaler-admission-controller-tls
---
# Source: vertical-pod-autoscaler/templates/crds/job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: my-vertical-pod-autoscaler-crds
  labels:
    helm.sh/chart: vertical-pod-autoscaler-9.9.0
    app.kubernetes.io/name: vertical-pod-autoscaler
    app.kubernetes.io/instance: my-vertical-pod-autoscaler
    app.kubernetes.io/version: "1.2.1"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: crds
  annotations:
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/name: vertical-pod-autoscaler
        app.kubernetes.io/instance: my-vertical-pod-autoscaler
        app.kubernetes.io/component: crds
    spec:
      
      serviceAccountName: my-vertical-pod-autoscaler-crds
      securityContext:
        runAsGroup: 1001
        runAsNonRoot: true
        runAsUser: 1001
      containers:
        - name: kubectl
          securityContext:
            {}
          image: docker.io/bitnami/kubectl:1.29.3
          imagePullPolicy: IfNotPresent
          args:
            - apply
            - --filename=/config/verticalpodautoscalercheckpoints.yaml
            - --filename=/config/verticalpodautoscalers.yaml
          resources:
            {}
          volumeMounts:
            - name: config
              mountPath: /config
              readOnly: true
      restartPolicy: Never
      volumes:
        - name: config
          configMap:
            name: my-vertical-pod-autoscaler-crds
