---
# Source: tracing/templates/observability-selfcert.yaml
apiVersion: v1
kind: Secret
metadata:
  name: "jaeger-operator-service-cert"
type: kubernetes.io/tls
data:
  tls.crt: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURvekNDQW91Z0F3SUJBZ0lSQVB0QUJ0Nm5ZZURCRlRDOVllQmJnZlF3RFFZSktvWklodmNOQVFFTEJRQXcKSERFYU1CZ0dBMVVFQXhNUmMyVnNabk5wWjI1bFpDMXBjM04xWlhJd0hoY05NalF3T1RFMk1EZzFOREUwV2hjTgpNelF3T1RFME1EZzFOREUwV2pBbk1TVXdJd1lEVlFRREV4eHFZV1ZuWlhJdGIzQmxjbUYwYjNJdGMyVnlkbWxqClpTMWpaWEowTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF5dzh4eTJ1UXpzTFgKZFdtdHFLYU1ZNmNkZzZ0UDVRc2ZRZ3QzUzJUODVrZmZ3U1lLanROSmNaaUlCWnlwL2haaDFYSkhnem55U0JycgpHblJkYncxdzRaMWRMN3B3NlVVejRkZGFyUGxiMGJMdzNoVVZubVl1VlNFVzZtUUpNWnljYXEyMTAzeklPK2NlCklnNXJzdW9zQnYxNnR5U25iZXI3Z3NvN0ZSMklRUU1QSytXRU9aSXdyM09ycTRzb1E5NEkySTg1eDdrRjZDc1YKNTNJQnVMLzRYMEF1MmxBRWt3NElPclM2RHptamkrektYUFc5bTFPeHRrM01MTDFXYzdIQjNhQjArZlRJRUVKZgoyaDZEckcrRDdTcXFkbTZFT3lJVmkyU2NDTUFoRXppUWYzdzBhQ2RUTjNreEVobU5jaTZvMWpyTVBwYm5Xci9GCncyL1gvS0tUOFFJREFRQUJvNEhVTUlIUk1BNEdBMVVkRHdFQi93UUVBd0lGb0RBZEJnTlZIU1VFRmpBVUJnZ3IKQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3REFZRFZSMFRBUUgvQkFJd0FEQWZCZ05WSFNNRUdEQVdnQlNMb2VmYwpsVFVKK3JRdkdOSjl5YzRNSkhOUy9EQnhCZ05WSFJFRWFqQm9naXRxWVdWblpYSXRiM0JsY21GMGIzSXRkMlZpCmFHOXZheTF6WlhKMmFXTmxMbVJsWm1GMWJIUXVjM1pqZ2pscVlXVm5aWEl0YjNCbGNtRjBiM0l0ZDJWaWFHOXYKYXkxelpYSjJhV05sTG1SbFptRjFiSFF1YzNaakxtTnNkWE4wWlhJdWJHOWpZV3d3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFKeGt3VDFIUFFaVXpCVHNxODE2bGRVQTZJeTNJZE9OejdRRnpBQ21FcUtvcW5mL2NKRjhBaHlsClNmdnZnYW1aMUhaZCtzYVNBLzVKaUgzMW9DZlJYdy8xVldid0lZVktvald2L2ZDYytZKy9KMmhQcG43ZHlOdVEKa2h0ZzB5QWF5VU91QTJBUUFER2U3SXY3UkFxOFcrbXFvNHJaemN2U2Jna3MyVkNVQVRQK3VEc3BuTTFCTGxOUApBYzdZc3JQVGladWF0dlNWdEVER1NNdXBXT1JHVEZmZUwzZUx1anR0SWYvcWMyZytTdjIvSDdQZ2RQNG9GcTlJCmx1Z3FpSFhLb2RDZHdQN3dRTlN1REtMWVJSVVo3a3BHWTdUelZwN2hiN0lRRERRbS9heFQ0NzhIQWYrWDRwcEYKcWRhS0M3c1ZtZzVUdnhnSDBJaVlMU2hac3kxTmF4bz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
  tls.key: "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBeXc4eHkydVF6c0xYZFdtdHFLYU1ZNmNkZzZ0UDVRc2ZRZ3QzUzJUODVrZmZ3U1lLCmp0TkpjWmlJQlp5cC9oWmgxWEpIZ3pueVNCcnJHblJkYncxdzRaMWRMN3B3NlVVejRkZGFyUGxiMGJMdzNoVVYKbm1ZdVZTRVc2bVFKTVp5Y2FxMjEwM3pJTytjZUlnNXJzdW9zQnYxNnR5U25iZXI3Z3NvN0ZSMklRUU1QSytXRQpPWkl3cjNPcnE0c29ROTRJMkk4NXg3a0Y2Q3NWNTNJQnVMLzRYMEF1MmxBRWt3NElPclM2RHptamkrektYUFc5Cm0xT3h0azNNTEwxV2M3SEIzYUIwK2ZUSUVFSmYyaDZEckcrRDdTcXFkbTZFT3lJVmkyU2NDTUFoRXppUWYzdzAKYUNkVE4za3hFaG1OY2k2bzFqck1QcGJuV3IvRncyL1gvS0tUOFFJREFRQUJBb0lCQUVjREZrL2tXeXpqbU1QWAo1RUpSbEZFWlZVb0J0QndPaXF6bkk1MzdRRElzT29UcWo5Q285VXREbzNZSzlxd0VHY3l5ZlczWDZ2SHFjQU85ClpCdDlJTmZWMTR2a2NLNHpaRlI3b3B0UlRSb0ZzUlNKWFJrYTlPTVNnbGdRQ2VNT3VPalp2UGVyOEw1Nk1lQ0oKR0lMbVArVmw2ZTk0WXhFZWx6eURDcXgwdW55NVBLV1puY2NodWxMK1pCSHQ1UThnU0lrZmtjYWU3NFl4bjhDSgpscUluOUEvOUZtR0xDTnBEcGJXamlKYnFWOTBGTGpPYm9OYlFYQU9Pa3NwWFpwS29RMm1Yb09aOHBSTHU2d3N4CnJZSldJWlYyNU5OL0NLY3VtZkRUV2J1UUNUYjN5akE2M01kb0JmakRYUWVTQnI5aUxpcDFEajJQNWRvQVZmN2IKMDNKSllpMENnWUVBM25uVXhKYW5XNGN5S2JhaTBZT2EwMnEzVTcwQktMTmlwSExsUUZhMlY5aW5uRkhQeE1uego3NXBZaitLa1RrZ1J6eU10WVRTNjVoVDRueCtTTURXanNGVnBRTU04ZjZXdExpVFRodzhBMzErRmFXQVQwY1lECjRDOHRabjJnVEhmYk1FV2k1QjRGZWJZYkUyeE5kdWwwQWhUbE9lOUFjZ0RKL3d2MHNIRUc2eE1DZ1lFQTZhaGIKSDdYZDVKalQrZVRqK0x3ZFhvcGJ6YlpFVE0xTEc1ZG9LVXhXMysvczNkVXdIN3h6d1psNkNwUytBVEtDSExjTgp0WVQ1OXBRem9SaGJ5SlZOeW8rY0RPSTV3YkQycnllVnkwY21WS0IrcU5FTy8zV2hCQ250Rkk5aDhtV0puaHMxCnFrcm50OGxEZ3dDOXFnOVRYcG8vcnFFcWVuZmh2Tm9GSHI0SHdXc0NnWUVBMEZjdFBuQ0xCM2JETGpjZm9LN3IKQmNPeExOVVp5Y0M3eHA3bU8yczQxV2xLQldURCtsalpmTytBc2pZZmdrT1JrZll5WUE2ZVhDc1ZiUWFHdzJqbwpBcERwd1VGVVhZR01mV0wxU0V4dmw3OS9VMkFyRDA2dGdIc052Q1kzUUlVWm1jb01zaTIvR096RnpGbW03WTNRCkdzYndwMkY3YTRkN29zSFNnbzFHV2tzQ2dZQjJJNWx2UHhVaUwrTjl4aTA5NWw4ekhlR3M4U3MzYWRVLzdoM00KUTd6cEhQWTJjMFFSeDhiL2JBbzRyMXdpWHRkS2pZTnc4L3N1b1dBNVk0ZUVzM2pSb2lyVW1NMTdFVzZvd09zTQpETDFrcklGZCtkWUxjLzRsak0xQ1Ivek9BbWpDZUI5NktzVmVOM1RiRjlUTjExSGYwejIvbmQxTWJyREVPN2U3CkEzb0lZUUtCZ0Q0SnlqYkVzZDRkeHRZdXZQVldyMWxCQTA1aEkwNFNPMlF1L0ZaVitTUStjTi9uNUdQeVpTQUQKa3A2WHhyd2lqSUlhWE1TZHQ0azZ4SmVYUmhGc2ZzMkR3ZWFkQk5BdXRPTDRtOWlwS1B4SG5BY3k2NzFaWjAxcAp3OXlqMlZnZTg2ZG56QjNzS3Urazg0WjR0TnowUE1MQ0xIVFJrd2p5M1Bsd2RodkdBejViCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg=="
  ca.crt: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURJekNDQWd1Z0F3SUJBZ0lRQVlMMUtkYW94Q0lleWNXZEZkZUlmakFOQmdrcWhraUc5dzBCQVFzRkFEQWMKTVJvd0dBWURWUVFERXhGelpXeG1jMmxuYm1Wa0xXbHpjM1ZsY2pBZUZ3MHlOREE1TVRZd09EVTBNVFJhRncwegpOREE1TVRRd09EVTBNVFJhTUJ3eEdqQVlCZ05WQkFNVEVYTmxiR1p6YVdkdVpXUXRhWE56ZFdWeU1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXFMa2xQVTltY2hkWVJia2VDRFFsVGVvMTBUQXkKQ3BKVHl0Q1ZValU1YXJ4Ylh2MjJpVlJmNWJhSkJiNlNDUjZJaUxGd0dzQ3htdEVPVzl1alFmbm1PdEd3ZnlzKwoveFhiNlJKZTN3cmRML250c1hMdkpPZmFKZlhSbmdvM01oZk9ZSWhYVnJYTEYxMmtMNlNFalBHNjNMZElHcTFvCnlsdkJZM1lXWDhVemlseHgzbG9Ud015Y0RXM2Q4RWhQUGFTc1poN1BJcFJMSDdkZ29vQldOL1lBQ0d5b1E3Z00KZTIwdTRJcFV3T0V1eVFBSmVFRy9FTGxqMTFObFNLY2xBSlViaC8zZEN5UzJRWmZUZDl0TFhYMmQwdDhKOXg2Zwo3MHF5Qk9EUG9YdnhPdkRsWFdhcUM1VitmdmtaWHlOeDJSdEVRZUNWWUVUenVNWnBrclBjQTdzMWt3SURBUUFCCm8yRXdYekFPQmdOVkhROEJBZjhFQkFNQ0FxUXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0VHQ0NzR0FRVUYKQndNQ01BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZJdWg1OXlWTlFuNnRDOFkwbjNKemd3awpjMUw4TUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFDWk4zN2VZWEdmMVlycHlNY1BvL3Z1QmQxQlVtbmgxelE0CndyakJmcmdCQUF3bGRNTnJkdHlBL1VQb1UwaERvckc5K2hEZkIweVl5UENhUGVmcklMcFpoNHRrakJVNmxlak8KTlBkY0RYZFUzL2dLdEpWYzdOMzVvL2hmMGhYa1R0SFJrNnpIZWE1bXRlSDFpZUlLZ1ZMeUdHN25mL3hmR0w1bQprNGRiYmlkME9sNGlDc3BsNUIvSmhBbndtRjFYcTFwbEZVR3I1dmVLNWRKcFlGckRrRWVXMEk3dy9XMlpINzBhCittQ2xYTTNhUEZhUWlid2owWm4vVHRrbkp6d0VFcXNGSmM4bUY1Wk1UaEMrWDN3dEZyRDZaN2I1YTlacmt0cWoKNUMrQU9vQS9XdWlYLzk4K3FzdzNldXpiemhWV3hmR2tYa0xYbTQvTUxZNzNmaFNYcE8xSwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
---
# Source: tracing/templates/observability.yaml
apiVersion: v1
data:
  PROMETHEUS_SERVER_URL: ""
kind: Secret
metadata:
  name: jaeger-spm
  namespace: default
type: Opaque
---
# Source: tracing/templates/configmap-values.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: kubegems-my-tracing-values
  namespace: kubegems-installer
data:
  enabled: "true"
  jaeger.address: http://jaeger-query.default:16686
  jaeger.collector.address: jaeger-operator-jaeger-collector.default:14268
  jaeger.proto.address: jaeger-operator-jaeger-collector.default:14250
  jaeger.otlp.grpc.address: jaeger-operator-jaeger-collector.default:4317
  jaeger.otlp.http.address: jaeger-operator-jaeger-collector.default:4318
  jaeger.zipkin.address: jaeger-operator-jaeger-collector.default:9411
---
# Source: tracing/templates/observability.yaml
kind: Service
apiVersion: v1
metadata:
  name: jaeger-query  # jaeger-operator's svc name is jaeger-operator-jaeger-query,create a new service for jaeger-query
  namespace: default
spec:
  selector:
    app: jaeger
    app.kubernetes.io/component: query
  ports:
    - name: http-query
      port: 16686
      targetPort: 16686
    - name: grpc-query
      port: 16685
      targetPort: 16685
---
# Source: tracing/templates/elasticsearech.yaml
# https://github.com/elastic/helm-charts
apiVersion: plugins.kubegems.io/v1beta1
kind: Plugin
metadata:
  name: elasticsearch
  namespace: default
spec:
  kind: helm
  url: https://helm.elastic.co
  version: 7.17.1
  values:
    replicas: 1
    minimumMasterNodes: 1
    clusterHealthCheckParams: "wait_for_status=yellow&timeout=1s"
    # image: "docker.elastic.co/elasticsearch/elasticsearch"
    
    volumeClaimTemplate:
      storageClassName:
---
# Source: tracing/templates/observability.yaml
# https://github.com/jaegertracing/helm-charts
apiVersion: plugins.kubegems.io/v1beta1
kind: Plugin
metadata:
  name: jaeger-operator
  namespace: default
spec:
  kind: helm
  url: https://jaegertracing.github.io/helm-charts
  version: 2.34.0
  values:
    image:
      # repository: docker.io/jaegertracing/jaeger-operator
      
      tag: 1.36.0
    rbac:
      clusterRole: true
    certs:
      issuer:
        create: false
      certificate:
        create: false
    webhooks:
      mutatingWebhook:
        create: false
      validatingWebhook:
        create: false
    jaeger:
      create: true
      spec:
        strategy: production
        ingress:
          enabled: false
        query:
          # image: jaegertracing/jaeger-query
          
          metricsStorage:
            type: prometheus
        ingester:
          # image: jaegertracing/jaeger-ingester
          
        agent:
          # image: jaegertracing/jaeger-agent
          
        collector:
          # image: jaegertracing/jaeger-collector
          
          options:
            collector.zipkin.host-port: "9411"
        storage:
          secretName: jaeger-spm
          dependencies:
            enabled: false
          type: elasticsearch
          esIndexCleaner:
            # image: jaegertracing/jaeger-es-index-cleaner
            
          options:
            es:
              server-urls: http://elasticsearch-master.observability:9200
              num-shards: 5
              num-replicas: 1
              timeout: 30s
