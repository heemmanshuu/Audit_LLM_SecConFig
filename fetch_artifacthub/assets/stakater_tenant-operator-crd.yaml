---
# Source: tenant-operator-crd/templates/tronador.stakater.com_testenvconfigs.yaml
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.3.0
  creationTimestamp: null
  name: testenvconfigs.tronador.stakater.com
spec:
  group: tronador.stakater.com
  names:
    kind: TestEnvConfig
    listKind: TestEnvConfigList
    plural: testenvconfigs
    singular: testenvconfig
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: TestEnvConfig is the Schema for the testenvconfigs API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: TestEnvConfigSpec defines the desired state of TestEnvConfig
          properties:
            application:
              properties:
                chart:
                  properties:
                    chartPullSecret:
                      description: ChartPullSecret holds the reference to the authentication
                        secret for accessing the Helm repository using HTTPS basic
                        auth. NOT IMPLEMENTED!
                      properties:
                        name:
                          type: string
                      required:
                      - name
                      type: object
                    git:
                      description: Git URL is the URL of the Git repository, e.g.
                        `git@github.com:org/repo`, `http://github.com/org/repo`, or
                        `ssh://git@example.com:2222/org/repo.git`.
                      type: string
                    name:
                      description: Name is the name of the Helm chart _without_ an
                        alias, e.g. redis (for `helm upgrade [flags] stable/redis`).
                      type: string
                    path:
                      description: Path is the path to the chart relative to the repository
                        root.
                      type: string
                    ref:
                      description: Ref is the Git branch (or other reference) to use.
                        Defaults to 'master', or the configured default Git ref.
                      type: string
                    repository:
                      description: RepoURL is the URL of the Helm repository, e.g.
                        `https://kubernetes-charts.storage.googleapis.com` or `https://charts.example.com`.
                      type: string
                    secretRef:
                      description: SecretRef holds the authentication secret for accessing
                        the Git repository (over HTTPS). The credentials will be added
                        to an HTTPS GitURL before the mirror is started.
                      properties:
                        name:
                          type: string
                        namespace:
                          type: string
                      required:
                      - name
                      type: object
                    skipDepUpdate:
                      description: SkipDepUpdate will tell the operator to skip running
                        'helm dep update' before installing or upgrading the chart,
                        the chart dependencies _must_ be present for this to succeed.
                      type: boolean
                    version:
                      description: Version is the targeted Helm chart version, e.g.
                        7.0.1.
                      type: string
                  type: object
                image:
                  properties:
                    imageArgs:
                      type: string
                    imagePath:
                      type: string
                    imageRepo:
                      description: 'OPTIONAL: if not in this repo, the name of the
                        container registry'
                      type: string
                    imageTag:
                      description: The specific tag of image in the `ImageRepo`
                      type: string
                  type: object
                values:
                  type: object
                valuesFrom:
                  items:
                    properties:
                      chartFileRef:
                        description: The reference to a local chart file with release
                          values.
                        properties:
                          optional:
                            description: Optional will mark this ChartFileSelector
                              as optional. The result of this are that operations
                              are permitted without the source, due to it e.g. being
                              temporarily unavailable.
                            type: boolean
                          path:
                            description: Path is the file path to the source relative
                              to the chart root.
                            type: string
                        required:
                        - path
                        type: object
                      configMapKeyRef:
                        description: The reference to a config map with release values.
                        properties:
                          key:
                            type: string
                          name:
                            type: string
                          namespace:
                            type: string
                          optional:
                            type: boolean
                        required:
                        - name
                        type: object
                      externalSourceRef:
                        description: The reference to an external source with release
                          values.
                        properties:
                          optional:
                            description: Optional will mark this ExternalSourceSelector
                              as optional. The result of this are that operations
                              are permitted without the source, due to it e.g. being
                              temporarily unavailable.
                            type: boolean
                          url:
                            description: URL is the URL of the external source.
                            type: string
                        required:
                        - url
                        type: object
                      secretKeyRef:
                        description: The reference to a secret with release values.
                        properties:
                          key:
                            type: string
                          name:
                            type: string
                          namespace:
                            type: string
                          optional:
                            type: boolean
                        required:
                        - name
                        type: object
                    type: object
                  type: array
              required:
              - chart
              - image
              type: object
            dependencies:
              properties:
                direct:
                  items:
                    properties:
                      git:
                        description: Git URL is the URL of the Git repository, e.g.
                          `git@github.com:org/repo`, `http://github.com/org/repo`,
                          or `ssh://git@example.com:2222/org/repo.git`.
                        type: string
                      name:
                        description: Name is the name of the Helm chart _without_
                          an alias, e.g. redis (for `helm upgrade [flags] stable/redis`).
                        type: string
                      path:
                        description: Path is the path to the chart relative to the
                          repository root.
                        type: string
                      ref:
                        description: Ref is the Git branch (or other reference) to
                          use. Defaults to 'master', or the configured default Git
                          ref.
                        type: string
                      repository:
                        description: RepoURL is the URL of the Helm repository, e.g.
                          `https://kubernetes-charts.storage.googleapis.com` or `https://charts.example.com`.
                        type: string
                      skipDepUpdate:
                        description: // SecretRef holds the authentication secret
                          for accessing the Git // repository (over HTTPS). The credentials
                          will be added to an // HTTPS GitURL before the mirror is
                          started. // +optional // reserved yet SecretRef *ObjectReference
                          `json:"secretRef,omitempty"` SkipDepUpdate will tell the
                          operator to skip running 'helm dep update' before installing
                          or upgrading the chart, the chart dependencies _must_ be
                          present for this to succeed.
                        type: boolean
                      version:
                        description: Version is the targeted Helm chart version, e.g.
                          7.0.1.
                        type: string
                    required:
                    - name
                    type: object
                  type: array
                environment:
                  items:
                    properties:
                      git:
                        description: Git URL is the URL of the Git repository, e.g.
                          `git@github.com:org/repo`, `http://github.com/org/repo`,
                          or `ssh://git@example.com:2222/org/repo.git`.
                        type: string
                      name:
                        description: Name is the name of the Helm chart _without_
                          an alias, e.g. redis (for `helm upgrade [flags] stable/redis`).
                        type: string
                      path:
                        description: Path is the path to the chart relative to the
                          repository root.
                        type: string
                      ref:
                        description: Ref is the Git branch (or other reference) to
                          use. Defaults to 'master', or the configured default Git
                          ref.
                        type: string
                      repository:
                        description: RepoURL is the URL of the Helm repository, e.g.
                          `https://kubernetes-charts.storage.googleapis.com` or `https://charts.example.com`.
                        type: string
                      skipDepUpdate:
                        description: // SecretRef holds the authentication secret
                          for accessing the Git // repository (over HTTPS). The credentials
                          will be added to an // HTTPS GitURL before the mirror is
                          started. // +optional // reserved yet SecretRef *ObjectReference
                          `json:"secretRef,omitempty"` SkipDepUpdate will tell the
                          operator to skip running 'helm dep update' before installing
                          or upgrading the chart, the chart dependencies _must_ be
                          present for this to succeed.
                        type: boolean
                      version:
                        description: Version is the targeted Helm chart version, e.g.
                          7.0.1.
                        type: string
                    required:
                    - name
                    type: object
                  type: array
              type: object
            notification:
              properties:
                slack:
                  properties:
                    channels:
                      items:
                        type: string
                      type: array
                    users:
                      items:
                        type: string
                      type: array
                  type: object
                template:
                  description: Set omitempty once a default template is done
                  type: string
              required:
              - slack
              - template
              type: object
            targetBranch:
              description: Foo is an example field of TestEnvConfig. Edit TestEnvConfig_types.go
                to remove/update
              type: string
          required:
          - application
          - dependencies
          - notification
          - targetBranch
          type: object
        status:
          description: TestEnvConfigStatus defines the observed state of TestEnvConfig
          properties:
            conditions:
              items:
                description: "Condition contains details for one aspect of the current
                  state of this API Resource. --- This struct is intended for direct
                  use as an array at the field path .status.conditions.  For example,
                  type FooStatus struct{     // Represents the observations of a foo's
                  current state.     // Known .status.conditions.type are: \"Available\",
                  \"Progressing\", and \"Degraded\"     // +patchMergeKey=type     //
                  +patchStrategy=merge     // +listType=map     // +listMapKey=type
                  \    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                  patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                  \n     // other fields }"
                properties:
                  lastTransitionTime:
                    description: lastTransitionTime is the last time the condition
                      transitioned from one status to another. This should be when
                      the underlying condition changed.  If that is not known, then
                      using the time when the API field changed is acceptable.
                    format: date-time
                    type: string
                  message:
                    description: message is a human readable message indicating details
                      about the transition. This may be an empty string.
                    maxLength: 32768
                    type: string
                  observedGeneration:
                    description: observedGeneration represents the .metadata.generation
                      that the condition was set based upon. For instance, if .metadata.generation
                      is currently 12, but the .status.conditions[x].observedGeneration
                      is 9, the condition is out of date with respect to the current
                      state of the instance.
                    format: int64
                    minimum: 0
                    type: integer
                  reason:
                    description: reason contains a programmatic identifier indicating
                      the reason for the condition's last transition. Producers of
                      specific condition types may define expected values and meanings
                      for this field, and whether the values are considered a guaranteed
                      API. The value should be a CamelCase string. This field may
                      not be empty.
                    maxLength: 1024
                    minLength: 1
                    pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                    type: string
                  status:
                    description: status of the condition, one of True, False, Unknown.
                    enum:
                    - "True"
                    - "False"
                    - Unknown
                    type: string
                  type:
                    description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      --- Many .condition.type values are consistent across resources
                      like Available, but because arbitrary conditions can be useful
                      (see .node.status.conditions), the ability to deconflict is
                      important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                    maxLength: 316
                    pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                    type: string
                required:
                - lastTransitionTime
                - message
                - reason
                - status
                - type
                type: object
              type: array
            currentPhase:
              type: string
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
