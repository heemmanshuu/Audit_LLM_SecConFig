---
# Source: akto-mini-runtime/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-akto-mini-runtime-keel
  labels:
    app: my-akto-mini-runtime-keel
    helm.sh/chart: akto-mini-runtime-0.1.4
    app.kubernetes.io/name: akto-mini-runtime
    app.kubernetes.io/version: "0.1.4"
    app.kubernetes.io/managed-by: Helm
  annotations:
    {}
---
# Source: akto-mini-runtime/templates/keel-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-akto-mini-runtime-keel
  labels:
    helm.sh/chart: akto-mini-runtime-0.1.4
    app.kubernetes.io/name: akto-mini-runtime
    app.kubernetes.io/version: "0.1.4"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - watch
  - list
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - ""
  - extensions
  - apps
  - batch
  resources:
  - pods
  - replicasets
  - replicationcontrollers
  - statefulsets
  - deployments
  - daemonsets
  - jobs
  - cronjobs
  verbs:
  - get
  - delete
  - watch
  - list
  - update
- apiGroups:
  - ""
  resources:
  - configmaps
  - pods/portforward
  verbs:
  - get
  - create
  - update
---
# Source: akto-mini-runtime/templates/keel-rbac-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-akto-mini-runtime-keel
  labels:
    helm.sh/chart: akto-mini-runtime-0.1.4
    app.kubernetes.io/name: akto-mini-runtime
    app.kubernetes.io/version: "0.1.4"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: 'my-akto-mini-runtime-keel'
subjects:
- kind: ServiceAccount
  name: 'my-akto-mini-runtime-keel'
  namespace: 'default'
---
# Source: akto-mini-runtime/templates/keel.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-akto-mini-runtime-keel
  labels:
    app: keel
    helm.sh/chart: akto-mini-runtime-0.1.4
    app.kubernetes.io/name: akto-mini-runtime
    app.kubernetes.io/version: "0.1.4"
    app.kubernetes.io/managed-by: Helm
spec:
  type: LoadBalancer
  selector:
    app: my-akto-mini-runtime-keel
    app.kubernetes.io/name: akto-mini-runtime
  ports:
  - name: keel
    port: 9300
    protocol: TCP
    targetPort: 9300
---
# Source: akto-mini-runtime/templates/mini-runtime.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-akto-mini-runtime-mini-runtime
  labels:
    helm.sh/chart: akto-mini-runtime-0.1.4
    app.kubernetes.io/name: akto-mini-runtime
    app.kubernetes.io/version: "0.1.4"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  selector:
    app: my-akto-mini-runtime-mini-runtime
    app.kubernetes.io/name: akto-mini-runtime
  ports:
  - port: 9092
    targetPort: 9092
---
# Source: akto-mini-runtime/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-akto-mini-runtime-mini-runtime
  annotations:
    keel.sh/policy: force
    keel.sh/trigger: poll
    keel.sh/pollSchedule: "@every 60m"
  labels:
    helm.sh/chart: akto-mini-runtime-0.1.4
    app.kubernetes.io/name: akto-mini-runtime
    app.kubernetes.io/version: "0.1.4"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: my-akto-mini-runtime-mini-runtime
      app.kubernetes.io/name: akto-mini-runtime
  template:
    metadata:
      labels:
        app: my-akto-mini-runtime-mini-runtime
        app.kubernetes.io/name: akto-mini-runtime
    spec:
      containers:
      - env:
        - name: AKTO_ACCOUNT_NAME
          value: "Helios"
        - name: IS_KUBERNETES
          value: "true"
        - name: RUNTIME_MODE
          value: "hybrid"
        - name: AKTO_CONFIG_NAME
          value: "staging"
        - name: AKTO_INSTANCE_TYPE
          value: "DASHBOARD"
        - name: AKTO_KAFKA_BROKER_MAL
          value: "localhost:29092"
        - name: AKTO_KAFKA_BROKER_URL
          value: "127.0.0.1:29092"
        - name: AKTO_KAFKA_GROUP_ID_CONFIG
          value: "asdf"
        - name: AKTO_KAFKA_MAX_POLL_RECORDS_CONFIG
          value: "100"
        - name: AKTO_KAFKA_TOPIC_NAME
          value: "akto.api.logs"
        - name: AKTO_TRAFFIC_BATCH_SIZE
          value: "100"
        - name: AKTO_TRAFFIC_BATCH_TIME_SECS
          value: "10"
        - name: PUPPETEER_REPLAY_SERVICE_URL
          value: "http://akto-puppeteer-replay:3000"
        - name: AKTO_MONGO_CONN
          value: ""
        - name: USE_HOSTNAME
          value: "true"
        - name: DATABASE_ABSTRACTOR_SERVICE_URL
          value: "https://aquaman.akto.io"
        - name: DATABASE_ABSTRACTOR_SERVICE_TOKEN
          value: ""
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: "cluster.local"
        image: public.ecr.aws/aktosecurity/akto-api-security-mini-runtime:testruntime
        imagePullPolicy: Always
        name: akto-api-security-runtime
        resources:
          limits:
            cpu: 3
            memory: 8Gi
          requests:
            cpu: 2
            memory: 4Gi
      - env:
        - name: ZOOKEEPER_CLIENT_PORT
          value: "2181"
        - name: ZOOKEEPER_SERVERS
          value: "zoo1:2888:3888"
        - name: ZOOKEEPER_SERVER_ID
          value: "1"
        - name: KAFKA_OPTS
          value: "-Dzookeeper.admin.enableServer=false"
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: "cluster.local"
        image: confluentinc/cp-zookeeper:6.2.11-1-ubi8
        name: zoo1
        ports:
        - containerPort: 2181
        resources:
          limits:
            cpu: 2
            memory: 4Gi
          requests:
            cpu: 1
            memory: 2Gi
      - env:
        - name: MY_POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: KAFKA_ADVERTISED_LISTENERS
          value: "LISTENER_DOCKER_EXTERNAL_LOCALHOST://localhost:29092, LISTENER_DOCKER_EXTERNAL_DIFFHOST://my-akto-mini-runtime-mini-runtime.default.svc.cluster.local:9092"
        - name: KAFKA_BROKER_ID
          value: "1"
        - name: KAFKA_CLEANUP_POLICY
          value: "delete"
        - name: KAFKA_CREATE_TOPICS
          value: "akto.api.logs:3:3"
        - name: KAFKA_INTER_BROKER_LISTENER_NAME
          value: "LISTENER_DOCKER_EXTERNAL_LOCALHOST"
        - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
          value: "LISTENER_DOCKER_EXTERNAL_LOCALHOST:PLAINTEXT, LISTENER_DOCKER_EXTERNAL_DIFFHOST:PLAINTEXT"
        - name: KAFKA_LOG_CLEANER_ENABLE
          value: "true"
        - name: KAFKA_LOG_RETENTION_BYTES
          value: "10737418240"
        - name: KAFKA_LOG_RETENTION_CHECK_INTERVAL_MS
          value: "60000"
        - name: KAFKA_LOG_RETENTION_HOURS
          value: "5"
        - name: KAFKA_LOG_SEGMENT_BYTES
          value: "104857600"
        - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
          value: "1"
        - name: KAFKA_TRANSACTION_STATE_LOG_MIN_ISR
          value: "1"
        - name: KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR
          value: "1"
        - name: KAFKA_ZOOKEEPER_CONNECT
          value: "127.0.0.1:2181"
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: "cluster.local"
        image: confluentinc/cp-kafka:6.2.11-1-ubi8
        name: kafka1
        ports:
        - containerPort: 9092
        - containerPort: 19092
        - containerPort: 29092
        - containerPort: 9999
        resources:
          limits:
            cpu: 2
            memory: 8Gi
          requests:
            cpu: 1
            memory: 4Gi
      restartPolicy: Always
---
# Source: akto-mini-runtime/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-akto-mini-runtime-keel
  labels:
    app: keel
    helm.sh/chart: akto-mini-runtime-0.1.4
    app.kubernetes.io/name: akto-mini-runtime
    app.kubernetes.io/version: "0.1.4"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: my-akto-mini-runtime-keel
      app.kubernetes.io/name: akto-mini-runtime
  template:
    metadata:
      labels:
        app: my-akto-mini-runtime-keel
        app.kubernetes.io/name: akto-mini-runtime
    spec:
      containers:
      - command:
        - /bin/keel
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: AWS_ACCESS_KEY_ID
          value: ""
        - name: AWS_SECRET_ACCESS_KEY
          value: ""
        - name: AWS_REGION
          value: ""
        - name: WEBHOOK_ENDPOINT
          value: ""
        - name: MATTERMOST_ENDPOINT
          value: ""
        - name: HIPCHAT_TOKEN
          value: ""
        - name: HIPCHAT_CHANNELS
          value: ""
        - name: HIPCHAT_APPROVALS_CHANNEL
          value: ""
        - name: HIPCHAT_APPROVALS_BOT_NAME
          value: ""
        - name: HIPCHAT_APPROVALS_USER_NAME
          value: ""
        - name: HIPCHAT_APPROVALS_PASSWORT
          value: ""
        - name: NOTIFICATION_LEVEL
          value: "info"
        - name: INSECURE_REGISTRY
          value: "true"
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: "cluster.local"
        image: keelhq/keel:latest
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /healthz
            port: 9300
          initialDelaySeconds: 30
          timeoutSeconds: 10
        name: keel
        ports:
        - containerPort: 9300
        resources:
          limits:
            cpu: 100m
            memory: 128Mi
          requests:
            cpu: 50m
            memory: 64Mi
      serviceAccountName: my-akto-mini-runtime-keel
---
# Source: akto-mini-runtime/templates/hpa.yaml
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: my-akto-mini-runtime-mini-runtime
  labels:
    helm.sh/chart: akto-mini-runtime-0.1.4
    app.kubernetes.io/name: akto-mini-runtime
    app.kubernetes.io/version: "0.1.4"
    app.kubernetes.io/managed-by: Helm
spec:
  maxReplicas: 2
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: my-akto-mini-runtime-mini-runtime
  targetCPUUtilizationPercentage: 80
