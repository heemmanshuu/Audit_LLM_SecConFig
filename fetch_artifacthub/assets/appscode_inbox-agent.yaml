---
# Source: inbox-agent/templates/rbac/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-inbox-agent
  namespace: default
  labels:
    helm.sh/chart: inbox-agent-v2024.5.3
    app.kubernetes.io/name: inbox-agent
    app.kubernetes.io/instance: my-inbox-agent
    app.kubernetes.io/version: "v0.0.1"
    app.kubernetes.io/managed-by: Helm
---
# Source: inbox-agent/templates/operator/apiregistration.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-inbox-agent-apiserver-cert
  namespace: default
  labels:
    helm.sh/chart: inbox-agent-v2024.5.3
    app.kubernetes.io/name: inbox-agent
    app.kubernetes.io/instance: my-inbox-agent
    app.kubernetes.io/version: "v0.0.1"
    app.kubernetes.io/managed-by: Helm
type: kubernetes.io/tls
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCakNDQWU2Z0F3SUJBZ0lSQUtLWHlybkYwZWhpUUM2RTlBdlQ2UzB3RFFZSktvWklodmNOQVFFTEJRQXcKRFRFTE1Ba0dBMVVFQXhNQ1kyRXdIaGNOTWpRd09URTJNRGcwTWpRMVdoY05NelF3T1RFME1EZzBNalExV2pBTgpNUXN3Q1FZRFZRUURFd0pqWVRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBT1N1Cmt4NHY5aGZ0WWJjUDBkYkVyK3JJRGlpbGtxaDhFR3BwZ1FyU0Q3OWU1T0hhUDhXYU1VWnNwSlhSRUozYWxHMy8KRThmQzBZMU5pWWlyWG90VkVuYys5UW9rVi9VMHRHMTBsSlRVUURvQ3F0dGtIMTQxS29hUEdTUE54ek5IZ01rWApUUDBvdk5xbmVtaXhMek1hb3hRSmxVS3BUd2UvOTVkVDVoQ0d0aHJqd3c3K3lLa1huajhiVjBUZ3RWUjBXSmxpCm9xaGZ3VW04ZHc3QU5Yb09LVUNaNndseTQ0alNSZW50b2xYWlVzTnBrMGkxaFZzQVZjT0NYc1BOTTZZQ1ZPT1gKcXRuWVh2U2IvaWN1M0wwaFF5OTFhZmR0cTk3N2I1SHVBL0pWTVpXc3lFWEZ4cUdOT2tUcWM2Ykw4YS9LR2NFegoxdFl6K0F3Vmo4WlBITzJzUC9zQ0F3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trTUIwR0ExVWRKUVFXCk1CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVcKQkJSbE5OdXpabVErbmZvK1NlMVRzK1VKaUlWZGlUQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUF0VE1oMy9ZNApTQW9aVTRwVXJxKzU4UG9IbHZiTWpsb2doTkV5K0x2Rzdya0hJcU5UbGJKbExuSnlmRUZyVUUwYkZoOGtibVBaCm4rR1JnTnVjTkdrT2NTVWI4U0grVUErTDN2TkRjREVpQlRDTi95Y2RFUEZNQjRzUXhxRi8xWXZDYlZJSUx6ZzQKZjV2ajA4aHBxQklaWVVEU1FmU1QwVDNYcEozSVR2V0kzOEp6RDBPaVdkOXFBRE1HbHVuV1UxbFg0dnFGMnZkaApaVVBnTEcxMlBRYTA5SzNDUjF4RGJpdTFBZXZtYnh1dHpEc3NpNWxnZXpuODRFdXFraTkrLy8rakFMczdKcHFHCmoxT1FFWURpUFRkeEU5MStGUStCa0FBMXpoWWNoa3lsb05Xd0FhWGVnZkdoL2NKSDY4M1JLODhVTDBxeEtwcnAKRXgwWDJxbnJHcXJTZHc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVVENDQWptZ0F3SUJBZ0lRR3V6Y2pyaE00UUVGczRpL2trRTlhVEFOQmdrcWhraUc5dzBCQVFzRkFEQU4KTVFzd0NRWURWUVFERXdKallUQWVGdzB5TkRBNU1UWXdPRFF5TkRWYUZ3MHpOREE1TVRRd09EUXlORFZhTUJreApGekFWQmdOVkJBTVREbTE1TFdsdVltOTRMV0ZuWlc1ME1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBCk1JSUJDZ0tDQVFFQW8rVUNma3dZeDhnbU5QRmQzeGdSVmo0TXkwQlFIOVppcm1EZVFSa1BaeXhZSEUydEx2YmcKQlE1NDFPOXN5aFY3Mm9RU3gvOEMzNGwyN1ZhSlFaVHIxekV5aHY3NVNGdExUczVVei9URHNmWUVndVczWnpUeAppbnN4NFNpM0t6dkd4SG9xUnRIYzg3UFcyZWpjWmtsUHQ1bzlhTDJOa2x6OUZmeElqcGNITG44b01jbGQvbjdwCkZJZWlCWmRXcnpCcVpTUzhmMWw1b2UxTkg2ZmZOMm9OZU9CbEY0eVl4dnlIYnVkN0pkaFFNZHgxcjVFSGZDTDYKbERrdkd2dE1aN0h1U1RKVFVGY3FDMkFDVjRMcTQwWTZKZVkvZE1NWEtmb0Nod1lVS3BKS2FnWG5FbnR6QWpxKwpFYW1ZQWgxRTN3NG5XOWRvOERoQmlzaHRVcnZNa0FScDlRSURBUUFCbzRHZ01JR2RNQTRHQTFVZER3RUIvd1FFCkF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXcKQURBZkJnTlZIU01FR0RBV2dCUmxOTnV6Wm1RK25mbytTZTFUcytVSmlJVmRpVEE5QmdOVkhSRUVOakEwZ2hadAplUzFwYm1KdmVDMWhaMlZ1ZEM1a1pXWmhkV3gwZ2hwdGVTMXBibUp2ZUMxaFoyVnVkQzVrWldaaGRXeDBMbk4yCll6QU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFwSmVqQmF1a2RzbksxSDRkOHJuaG5TVHRkRUhJMVZ4dmVzRjcKWmlid2FLM2pDV3BzYjhOUSs1T2krays1RExTK0c3TXAvaFBRZWpVNk1UM0w0a2xnYW9aY0lNbmdXVW1kd09PcgpPRTdsbGtxNHBoL0s2UjFnQTd5TEdVREh0bktjSWdqODloQTU2ZVhNaVZxRC82di9FYkVCWSsrcHlacDlIbWtDCnJjcmtqeThCRlNibGNoSThBbUhLUTA0cHhpekVvaEI2NjhVTVduZ003QmpIQVNSemcvVGp4WjNoalkyLzZXSUYKdXVqQkoxSWNRZHFCUURmZlZ5bFpvK0hBOHJwZjNndzZ6cDA2MDNaeW9BbG1WOWJKQ0N3anhjdVl6Mk5pN0trbApZajdCeDhRT0pLVW9wZzlVUVpiSkdyUHFqcXBUMlVwSVBHVTNNY294ZHRxMXlIZStYQT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBbytVQ2Zrd1l4OGdtTlBGZDN4Z1JWajRNeTBCUUg5WmlybURlUVJrUFp5eFlIRTJ0Ckx2YmdCUTU0MU85c3loVjcyb1FTeC84QzM0bDI3VmFKUVpUcjF6RXlodjc1U0Z0TFRzNVV6L1REc2ZZRWd1VzMKWnpUeGluc3g0U2kzS3p2R3hIb3FSdEhjODdQVzJlamNaa2xQdDVvOWFMMk5rbHo5RmZ4SWpwY0hMbjhvTWNsZAovbjdwRkllaUJaZFdyekJxWlNTOGYxbDVvZTFOSDZmZk4yb05lT0JsRjR5WXh2eUhidWQ3SmRoUU1keDFyNUVICmZDTDZsRGt2R3Z0TVo3SHVTVEpUVUZjcUMyQUNWNExxNDBZNkplWS9kTU1YS2ZvQ2h3WVVLcEpLYWdYbkVudHoKQWpxK0VhbVlBaDFFM3c0blc5ZG84RGhCaXNodFVydk1rQVJwOVFJREFRQUJBb0lCQVFDYmg0ZUdNdENSUmU1Nwo3MUVWbE5GZTlpTk4vZ29MTEhjWTQvUUY4ckliUm9tVzBsKzJZYkRWRzVhdSswWlJ2M0Y1UER4V2JqbGJ5Q2VECnNzc3Q0UlN0Y1pKeGFTVkc5TnZTUFJ0ZS9QZDR1ZTR1Q2JDeDBCd25QaUZuZWl2WWF6R0U0aW1jYXlzeVdVZGEKSXhDRVFLM1ZuaGtJZkZrTXZCR3YrMmtmWjFMNVcweElFZHkrRURrTWJNZUF0SWFNUGY4RkI0N3hjY3A5RjFoZApCb2FGM2RTQ3FMcGpDSDRMRUdQWmFzay9qNjFQQktROUtSRy9kOGRHT2Y4Rm5ZK3RuQUJ4cmdWSGRFd1VKQmJCCm5yZTV0NzRCQUJXZ2wrSFl4SXZvdXVxeHlWS25wQkNCN0RZcXJaMnh4TEJTMTBtM1UvWCszaGFRZkFhRG1vMmMKYXdIQjNRMUJBb0dCQU5wdVFubDRtTjJlc3Mxb2xCTkM2QW44L0dUSWM3R0J2V1RHS2dXRFFXM2Rzb3hjdDVwSgpBNXB1cERHbGlwNWwzSlV2eTdEK0RmNC9yOFBIT08xUi9ETDlWazE3KzE5Wk1vZGhzS251TFBSd3pmTXh6NE5PCk5tMXMwTDh4Zm11cUVlZFh5SGtURStEbkN4ZjNIVFNmMVFyaUFLR1BMb2pkcnlQUGdiKzBxc2tyQW9HQkFNQVYKZHhENnJvK1hJZ0RBRVNGTjFpREY2bnV6L3llZ3ppWHBSUkJpQXp6aEVZbnBnK3BTK014czhEblpnZ0F0SXNVSApJQmtrSktINlRYYnJsUGpCNHg0WXdndUpiNGtRYkdYdFhsM1Y0Z3lpM0FJWmlSSXRKQzQ5U0s1TEg1TTBLMXFvCmVDRW9vZXhBUndkYS9VKytBNlM2MDVoY1NRenAwVnpIOHlBN2s4bGZBb0dCQUpWSkhFZVc0NnM4Qm1vYTJuRWIKbmlrTmJaYVg1WEpoQUljNlpJZm1BRGJOZVhVeS9RMEdiOThCVlZqVkVodFY5TjlGamtwR0tGd25QTUpxaTM2dgpOTlhJalU1aHVSaWVoc2srUEJhM3dLUEQ0UTRnY2ZvRTMzQUVHZHRDUVd2bURWeDJnMzQwU3JiQVViV3NYNXFTCnpuRWtxMWUvMndjUnM5eWV1c2ZCKzZPSEFvR0FGd0g3TXhOejJVczNEWFAwR1ZNamRPV0FBclU2dU5wd0Z1WnMKR1Z4RUd3U3lmeHh6YXB2cHBVTGZPMjZzUGEwcVh3Tk5ldlZ6VmR1UGI5RWtGTy9VYm9SMHFjRWFsUVpjbFpEcgpIcjVCeDFXeW1LWEtYMXo4Mm5VSXdhZko3bTN2UzNxbWVRSk84dWQ0R285eGpCMnNmZ3pLejVNdVJOZTA5aklWCkV5VlB2RzBDZ1lFQXh3RXJYRkdidmQ0aHRsOWtMYTJtVktDVGkwdlRtL1BlelZIU2lwVGM5K2NYY0lReW02d1cKWmVuWkxsQS9lYjYwOEZUMjc0NFU5ekdxWXE2Y3ZiNVpwdi9XMkw4MGZEdzloTFVES3lCOHJRVmJsaVE0K1NqLwpIVC9QblZySVB1Y2xOK1FNNnVuWnF5dGtKM1oxQjcyaGVQOUpqUVE3R3g1M2tXZHhuVWtSa3VRPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: inbox-agent/templates/operator/config.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-inbox-agent-config
  namespace: default
  labels:
    helm.sh/chart: inbox-agent-v2024.5.3
    app.kubernetes.io/name: inbox-agent
    app.kubernetes.io/instance: my-inbox-agent
    app.kubernetes.io/version: "v0.0.1"
    app.kubernetes.io/managed-by: Helm
type: Opaque
stringData:
  jmapEndpoint: 
  webadminEndpoint: 
  token:
---
# Source: inbox-agent/templates/webhook/cert.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-inbox-agent-webhook-cert
  namespace: default
  labels:
    helm.sh/chart: inbox-agent-v2024.5.3
    app.kubernetes.io/name: inbox-agent
    app.kubernetes.io/instance: my-inbox-agent
    app.kubernetes.io/version: "v0.0.1"
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCakNDQWU2Z0F3SUJBZ0lSQU5ScXZIeWtVeVpiL1lDUFBvWGlFcW93RFFZSktvWklodmNOQVFFTEJRQXcKRFRFTE1Ba0dBMVVFQXhNQ1kyRXdIaGNOTWpRd09URTJNRGcwTWpRMVdoY05NelF3T1RFME1EZzBNalExV2pBTgpNUXN3Q1FZRFZRUURFd0pqWVRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTDRsCnc4c05ZcWNJWktsa1ROMjVlTmNFMXh4bldKSitITTdhTjJ0a0xEOVJXUTN4UUV4U0ZOa0wvUVBndnZRUHYwM0sKVmZlSHp3Unp3Z0IyU3ZYNFJrVzZXKzJSYVMwNWlVL2M3YTZWTDVjMGNIdCszblFRZm9OMTBZWGp1dWRybCs1SQp0SENDUDZqSVRxRDFMNXBWT3QrdHliekpzRW4zNTFkcjNiYkYxUGplTDhxZDRrMkFpZ2lDdXV5eVBjRGdjbjNZClFFSktQN2RqbU41bHY2SDlkWGxqOFM0TTVyY0RqcFpucmF5UWhjRnNmS3NUaGdzUGFqZHdxa0pzcXcxcDVFaU8Kdk4wT0xPRm1sKzJ5dCtIdkFHdldWb2lEUjhsRkZyam5RcDd2VEVwV0RDOHplQkFqYU10Sjl4dnY3QjZKTTVjNwpFcWZnUWNQQTdkclZrNjJQbkdVQ0F3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trTUIwR0ExVWRKUVFXCk1CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVcKQkJUTTJScnQrNnpHNXA4VjI0dkNDakVPQjVuRmR6QU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFCK3JlNHQ1ZAp5UTNWcnZRdTdQektFOFhteFEyYTI0aFJ1Q0FpMlcrU2tyS1lHVWFRcE94WE8rNUUwamV3SHFJWithNkFkUFhpCkh3Q3gvaWFIVW9DWjE1dE1YQlNhUWVYTGtwWWIwL3IzemFkalF1STB4VGIvVWNDU0xmRVNncjZ4QVFEOGRCNTkKK0RCRGFkNzlUMkRLVXlzVEFReGdneFo4R3RwSTExUDI0MGlERzE2dDVFR3RvbFo0VWx6UWxUaXQ4MUNPZVM2egpRbVE0ZlIraUc5VlNSQW1NL0hRNmMzbHRzK3ZqejNjcUxxNEcvQTNvV3hzRlFpYjUxNTlmeGdrNWtBMXZldHgwCjM0WXJBNTd5ZDVhUjRxWm05ZW5vSHh3TUVDWEhqWjJNbUs2U25RSzJRK0ZEZm1vc2trbWhzWm5Odk5mbFcwQXYKZWtHS3NnYWFFQVFsOVE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURhakNDQWxLZ0F3SUJBZ0lSQUpkVTQ2MnhxNlN0MjErbGo3OEJKOGt3RFFZSktvWklodmNOQVFFTEJRQXcKRFRFTE1Ba0dBMVVFQXhNQ1kyRXdIaGNOTWpRd09URTJNRGcwTWpRMVdoY05NelF3T1RFME1EZzBNalExV2pBaApNUjh3SFFZRFZRUURFeFp0ZVMxcGJtSnZlQzFoWjJWdWRDMTNaV0pvYjI5ck1JSUJJakFOQmdrcWhraUc5dzBCCkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQTBlYjd6TFoxNVRkRWpJbCtMR2pERm16dmxCdDhaUkx2dXlydlBwVVcKbUtmUTJZVkZ2aS8rZXVWTDJSV1BYMUJ2QzZVODNnOENKV25LVis5ZWV1UjZvZm9xc0RQWXl3Y2UxZGp6aDRVQQpPekhvSXJZUWo5OEsyRW9nZHRpSEJpcGM4dmtjWEtYbkh1ZVVxRjdoVi9qNDNQMlJIeHJqelMrVEEwaGdqdWdoClUvdnlkc2QzbGc3a0lWcTJOT3hNOGZSYUNBM3JnY3FnS21HaER0TlJiUyt5QXZnS0FHWWxNaDNtc3Fpd1Y2ZFQKcDdTYXpxazExaDh2S3k4ZXAyOUdGVHRja3pLVHZTOUpVcHFRVXMraWFKSzVFdU4ycjhYRUR4RVI1cUJQT0hvawpyOE1RMEw0KzZWN0k5aXdsNlhXYy9YVm1paTlqWE5LOEMwV0VSek9od2p0WEJRSURBUUFCbzRHd01JR3RNQTRHCkExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0RBWUQKVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCVE0yUnJ0KzZ6RzVwOFYyNHZDQ2pFT0I1bkZkekJOQmdOVgpIUkVFUmpCRWdoNXRlUzFwYm1KdmVDMWhaMlZ1ZEMxM1pXSm9iMjlyTG1SbFptRjFiSFNDSW0xNUxXbHVZbTk0CkxXRm5aVzUwTFhkbFltaHZiMnN1WkdWbVlYVnNkQzV6ZG1Nd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFBa3MKZzl2R3F2Y3Y0dWxjaUdERmRqWFNETUY5c1c5TytCTUVHUCtOOG9iSEZnbVlFUUVkd0FSK2ltdmIxajdoMHFYUApKQ3NiZU5sd2tYd0U0T1JDTjV2cVV1MU8vYkNyREhGWFJnY2E2ODF2WGxyMFp6OG5nYVVTZjlCSkdGM3hCN0RNCk5yOTdIdExjUHdvazgxeXBHVXF1OEo2Q05ySmpqYUU4b1ovL3BzRUF1cVNLdEg3b0E0M0Q1MGhxNFNRMWxWa2IKWEcxdC82SDVVOG45aG8yRHhndjdnejlnN25mMW9kNFlUWDRIdGdBLzNwZHZVa3AyREhaeUF0U1pQS3A0bEF4UQpIazY5cml5WHVqU2tneURDSGYyRktkUS9OQVQvMisvRlJOaGpJUlplRk1tc0g0ZzVnVFZxa2ZMVktlelVkcFRtCnhLTi9rejVCcE9lK3NhalF4YUk9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBMGViN3pMWjE1VGRFaklsK0xHakRGbXp2bEJ0OFpSTHZ1eXJ2UHBVV21LZlEyWVZGCnZpLytldVZMMlJXUFgxQnZDNlU4M2c4Q0pXbktWKzllZXVSNm9mb3FzRFBZeXdjZTFkanpoNFVBT3pIb0lyWVEKajk4SzJFb2dkdGlIQmlwYzh2a2NYS1huSHVlVXFGN2hWL2o0M1AyUkh4cmp6UytUQTBoZ2p1Z2hVL3Z5ZHNkMwpsZzdrSVZxMk5PeE04ZlJhQ0EzcmdjcWdLbUdoRHROUmJTK3lBdmdLQUdZbE1oM21zcWl3VjZkVHA3U2F6cWsxCjFoOHZLeThlcDI5R0ZUdGNrektUdlM5SlVwcVFVcytpYUpLNUV1TjJyOFhFRHhFUjVxQlBPSG9rcjhNUTBMNCsKNlY3STlpd2w2WFdjL1hWbWlpOWpYTks4QzBXRVJ6T2h3anRYQlFJREFRQUJBb0lCQVFDVitLeEdDc1BYZnhLSwpPeDZjU2tuQk54cENQeFUwL2ordEFqTW9Dc3UzVElmck1zNnU0WW00Y3lZck43MVZnNW1qdjI3cTFkeFpzT2x5CnhNTkRtUVdKdjcxS1lmRHV0dXF3TGk5cHozeG56dk9tQVdGNStnbThtZEh5T0NqWkhlR0ZkTGx2OU5WYWZtbjMKbHJyNDZSbWVnOGx4YVB3RU9ZNlhsTm53b1NoVzRPeCtHcWRoK1pmalJqaUpzMEJpSDE1dkw0cE82SnJXaFB6WgpaaW5EOXdkdmYvVERqcUhuaGpyeW1TejdiNFVmeDNUSUVVdU5tb0Z2bVQwRVhZby9jdkZmK3lRN2dYdXJNS1Q3CmxMbGZ4TmxXSnpMTk41VWlQUFNRalR4bUxMZjYrbWhCdUFjd3kzb25nZnFNSFpsTTZWUitoaDh4OE9lZlNOQUYKUmRFWHJCY05Bb0dCQU94KzRKdU1kbGdtekpGK0dTcVBSUVpmVVhIVXR6aVBaWGU1Mno0SVc1RnZDWER0cU4zawpId1pnYnlNRGUyY0ZtaWlzVkcwTUZSWUZVMThrbVdBeHJjcUJCRFRrK0lwZGRSbldPNmM1NFhUOHZ5TU00cTl1CnJmMTBmand3R3EyL2ZWdjc3WmpUL2YzRDFOZ3JnczVRMmZSeGVBREtmUXNWZkt4cGFsNEw1NGxqQW9HQkFPTTIKcEdYamZBSko5Ykt3LzNZdHZnREtUMnRIVU9EL1pzQzBaSk9DdlpoS0cxUXZJamRkOVlEQmpyZGxNWTdVMktyVQp5anRuUmxpZkFHbTZXMlc0NFhoOWxoTnk1ME5wa3NpSCtTVldSZ1FaU2I2RnhiUWRtZHluOXNJZHpiV0tEUE5RCm1kemdXLzVzajJXQWMvZUJkbDE3RFFZMWdIRC9xck41OTdOYXdiNTNBb0dBZHVuaEZEV1BlQW1pU1BIbnc0K2cKZkhESEtmNTBWanM4SVBSUitpSUhzTnZ0R2x4VjBhU1h1UVFhUGJmTmYrTEFQZjFRd2pnV0RpbUZYMHl1MWtDRQppMU5PQXk2eWpoZ3AvbURMUSsyRm9PWkpVVjEwU2hQVDVxS0Jxcy9oU2tZRHlaR21TWGNtdWtlU3FWTlBoV0FBCkI3cGFSY09MRmx5cWdLTE11aGN3UjlNQ2dZRUFyV0R2MTlQYnQvOXAzaDRVQWNEcjRMeUFGOU9Ha3ZveEZWRlMKQWdIYzNRMkhoeGlrV20xM1BmWDFDbHJNa3pvMXp6MnF4K09KbVd4VEsxcUtEYmdqVFFjLzhyMVdYV2w5R1Vvdwp3dDN2ZFljNmI0aXlrVHVaUWZobFlrRE56UDUzM1Y4ZTJaM1dkUEd3Qm5zYmdyMG1ialRNZm5WcStrOE5tZ0N6CkZBaG9HUWNDZ1lBc2ltbnRpdkZHTEhETUdPdFBKUmNIYTFrMjZSTFJML2FqOW5waXJlVitVZk1jZmc4U2t0Tk8KZGVsR3lDWUpLZDI3Rk5hd1d3YnZHUXlzcU0xUEwzWUhUTjZZSmk0MU5xeEdTemhMMnZsb1p5Wm9SUTJzV1pXdwo0OHlSRWYyK1VMeUd1RVZUQ251QWVZS0lzenZJVWZ4dVpYbGtoVk9vTDI4azlvT3pXb0ZJd2c9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: inbox-agent/templates/rbac/auth_proxy.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-inbox-agent-auth-proxy
rules:
  - apiGroups:
      - authentication.k8s.io
    resources:
      - tokenreviews
    verbs:
      - create
  - apiGroups:
      - authorization.k8s.io
    resources:
      - subjectaccessreviews
    verbs:
      - create
---
# Source: inbox-agent/templates/rbac/cluster_role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-inbox-agent
  labels:
    helm.sh/chart: inbox-agent-v2024.5.3
    app.kubernetes.io/name: inbox-agent
    app.kubernetes.io/instance: my-inbox-agent
    app.kubernetes.io/version: "v0.0.1"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs: ["get", "create", "patch", "update"]
  - apiGroups:
      - admissionregistration.k8s.io
    resources:
      - mutatingwebhookconfigurations
      - validatingwebhookconfigurations
    verbs: ["*"]
  - apiGroups:
      - monitoring.appscode.com
    resources:
      - "*"
    verbs: ["*"]
  - apiGroups:
      - ""
    resources:
      - events
    verbs: ["create", "patch"]
  - apiGroups:
    - '*'
    resources:
    - '*'
    verbs: ["get", "list", "watch"]
  - nonResourceURLs:
    - '*'
    verbs: ["get"]
---
# Source: inbox-agent/templates/operator/apiregistration.yaml
# to delegate authentication and authorization
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-inbox-agent-apiserver-auth-delegator
  labels:
    helm.sh/chart: inbox-agent-v2024.5.3
    app.kubernetes.io/name: inbox-agent
    app.kubernetes.io/instance: my-inbox-agent
    app.kubernetes.io/version: "v0.0.1"
    app.kubernetes.io/managed-by: Helm
roleRef:
  kind: ClusterRole
  apiGroup: rbac.authorization.k8s.io
  name: system:auth-delegator
subjects:
- kind: ServiceAccount
  name: my-inbox-agent
  namespace: default
---
# Source: inbox-agent/templates/rbac/auth_proxy.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-inbox-agent-auth-proxy
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-inbox-agent-auth-proxy
subjects:
  - kind: ServiceAccount
    name: my-inbox-agent
    namespace: default
---
# Source: inbox-agent/templates/rbac/cluster_role_binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-inbox-agent
  labels:
    helm.sh/chart: inbox-agent-v2024.5.3
    app.kubernetes.io/name: inbox-agent
    app.kubernetes.io/instance: my-inbox-agent
    app.kubernetes.io/version: "v0.0.1"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-inbox-agent
subjects:
- kind: ServiceAccount
  name: my-inbox-agent
  namespace: default
---
# Source: inbox-agent/templates/operator/apiregistration.yaml
# to read the config for terminating authentication
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: my-inbox-agent-apiserver-extension-server-authentication-reader
  namespace: kube-system
  labels:
    helm.sh/chart: inbox-agent-v2024.5.3
    app.kubernetes.io/name: inbox-agent
    app.kubernetes.io/instance: my-inbox-agent
    app.kubernetes.io/version: "v0.0.1"
    app.kubernetes.io/managed-by: Helm
roleRef:
  kind: Role
  apiGroup: rbac.authorization.k8s.io
  name: extension-apiserver-authentication-reader
subjects:
- kind: ServiceAccount
  name: my-inbox-agent
  namespace: default
---
# Source: inbox-agent/templates/operator/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-inbox-agent
  namespace: default
  labels:
    app.kubernetes.io/component: operator
    helm.sh/chart: inbox-agent-v2024.5.3
    app.kubernetes.io/name: inbox-agent
    app.kubernetes.io/instance: my-inbox-agent
    app.kubernetes.io/version: "v0.0.1"
    app.kubernetes.io/managed-by: Helm
spec:
  ports:
  - name: api
    port: 443
    targetPort: 8443
  selector:
    app.kubernetes.io/component: operator
    app.kubernetes.io/name: inbox-agent
    app.kubernetes.io/instance: my-inbox-agent
---
# Source: inbox-agent/templates/webhook/monitoring/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-inbox-agent-webhook-monitoring
  namespace: default
  labels:
    app.kubernetes.io/component: webhook-server
    helm.sh/chart: inbox-agent-v2024.5.3
    app.kubernetes.io/name: inbox-agent
    app.kubernetes.io/instance: my-inbox-agent
    app.kubernetes.io/version: "v0.0.1"
    app.kubernetes.io/managed-by: Helm
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: https
  selector:
    app.kubernetes.io/component: webhook-server
    app.kubernetes.io/name: inbox-agent
    app.kubernetes.io/instance: my-inbox-agent
---
# Source: inbox-agent/templates/webhook/webhook_service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-inbox-agent-webhook
  namespace: default
  labels:
    helm.sh/chart: inbox-agent-v2024.5.3
    app.kubernetes.io/name: inbox-agent
    app.kubernetes.io/instance: my-inbox-agent
    app.kubernetes.io/version: "v0.0.1"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    app.kubernetes.io/component: webhook-server
    app.kubernetes.io/name: inbox-agent
    app.kubernetes.io/instance: my-inbox-agent
  ports:
  - port: 443
    protocol: TCP
    targetPort: 9443
---
# Source: inbox-agent/templates/operator/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-inbox-agent-operator
  namespace: default
  labels:
    app.kubernetes.io/component: operator
    helm.sh/chart: inbox-agent-v2024.5.3
    app.kubernetes.io/name: inbox-agent
    app.kubernetes.io/instance: my-inbox-agent
    app.kubernetes.io/version: "v0.0.1"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: operator
      app.kubernetes.io/name: inbox-agent
      app.kubernetes.io/instance: my-inbox-agent
  template:
    metadata:
      labels:
        app.kubernetes.io/component: operator
        app.kubernetes.io/name: inbox-agent
        app.kubernetes.io/instance: my-inbox-agent
      annotations:
    spec:
      
      serviceAccountName: my-inbox-agent
      containers:
      - name: operator
        image: "ghcr.io/appscode/inbox-agent:v0.0.1"
        imagePullPolicy: IfNotPresent
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65534
          seccompProfile:
            type: RuntimeDefault
        args:
        - operator
        - --v=3
        - --secure-port=8443
        - --audit-log-path=-
        - --tls-cert-file=/var/serving-cert/tls.crt
        - --tls-private-key-file=/var/serving-cert/tls.key
        ports:
        - containerPort: 8443
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: INBOX_SERVER_JMAP_ENDPOINT
          valueFrom:
            secretKeyRef:
              name: my-inbox-agent-config
              key: jmapEndpoint
        - name: INBOX_SERVER_WEBADMIN_ENDPOINT
          valueFrom:
            secretKeyRef:
              name: my-inbox-agent-config
              key: webadminEndpoint
        - name: INBOX_SERVER_TOKEN
          valueFrom:
            secretKeyRef:
              name: my-inbox-agent-config
              key: token
        resources:
          requests:
            cpu: 100m
        volumeMounts:
        - mountPath: /var/serving-cert
          name: serving-cert
      volumes:
      - name: serving-cert
        secret:
          defaultMode: 420
          secretName: my-inbox-agent-apiserver-cert
      securityContext:
        fsGroup: 65535
      nodeSelector:
        kubernetes.io/os: linux
---
# Source: inbox-agent/templates/webhook/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-inbox-agent-webhook-server
  namespace: default
  labels:
    app.kubernetes.io/component: webhook-server
    helm.sh/chart: inbox-agent-v2024.5.3
    app.kubernetes.io/name: inbox-agent
    app.kubernetes.io/instance: my-inbox-agent
    app.kubernetes.io/version: "v0.0.1"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: webhook-server
      app.kubernetes.io/name: inbox-agent
      app.kubernetes.io/instance: my-inbox-agent
  template:
    metadata:
      labels:
        app.kubernetes.io/component: webhook-server
        app.kubernetes.io/name: inbox-agent
        app.kubernetes.io/instance: my-inbox-agent
      annotations:
        checksum/apiregistration.yaml: 939869284ed781f0cf4aae6db2c5eb84ef56e029234fb5b4e7c5308abc6dd841
    spec:
      
      serviceAccountName: my-inbox-agent
      containers:
      - name: webhook-server
        image: "ghcr.io/appscode/inbox-agent:v0.0.1"
        imagePullPolicy: IfNotPresent
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65534
          seccompProfile:
            type: RuntimeDefault
        args:
        - webhook
        - --webhook-name=my-inbox-agent
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: INBOX_SERVER_WEBADMIN_ENDPOINT
          valueFrom:
            secretKeyRef:
              name: my-inbox-agent-config
              key: webadminEndpoint
        - name: INBOX_SERVER_JMAP_ENDPOINT
          valueFrom:
            secretKeyRef:
              name: my-inbox-agent-config
              key: jmapEndpoint
        - name: INBOX_SERVER_TOKEN
          valueFrom:
            secretKeyRef:
              name: my-inbox-agent-config
              key: token
        ports:
        - name: webhook-server
          containerPort: 9443
          protocol: TCP
        resources:
          requests:
            cpu: 100m
        volumeMounts:
        - name: serving-cert
          mountPath: /var/serving-cert
          readOnly: true
      - name: kube-rbac-proxy
        image: "ghcr.io/appscode/kube-rbac-proxy:v0.11.0"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65534
          seccompProfile:
            type: RuntimeDefault
        args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=10
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        resources:
          requests:
            cpu: 100m
      volumes:
      - name: serving-cert
        secret:
          defaultMode: 420
          secretName: my-inbox-agent-webhook-cert
      securityContext:
        fsGroup: 65535
      nodeSelector:
        kubernetes.io/os: linux
---
# Source: inbox-agent/templates/operator/apiregistration.yaml
# register as aggregated apiserver
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  name: v1alpha1.inbox.monitoring.appscode.com
  labels:
    helm.sh/chart: inbox-agent-v2024.5.3
    app.kubernetes.io/name: inbox-agent
    app.kubernetes.io/instance: my-inbox-agent
    app.kubernetes.io/version: "v0.0.1"
    app.kubernetes.io/managed-by: Helm
spec:
  group: inbox.monitoring.appscode.com
  version: v1alpha1
  service:
    namespace: default
    name: my-inbox-agent
  caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCakNDQWU2Z0F3SUJBZ0lSQUtLWHlybkYwZWhpUUM2RTlBdlQ2UzB3RFFZSktvWklodmNOQVFFTEJRQXcKRFRFTE1Ba0dBMVVFQXhNQ1kyRXdIaGNOTWpRd09URTJNRGcwTWpRMVdoY05NelF3T1RFME1EZzBNalExV2pBTgpNUXN3Q1FZRFZRUURFd0pqWVRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBT1N1Cmt4NHY5aGZ0WWJjUDBkYkVyK3JJRGlpbGtxaDhFR3BwZ1FyU0Q3OWU1T0hhUDhXYU1VWnNwSlhSRUozYWxHMy8KRThmQzBZMU5pWWlyWG90VkVuYys5UW9rVi9VMHRHMTBsSlRVUURvQ3F0dGtIMTQxS29hUEdTUE54ek5IZ01rWApUUDBvdk5xbmVtaXhMek1hb3hRSmxVS3BUd2UvOTVkVDVoQ0d0aHJqd3c3K3lLa1huajhiVjBUZ3RWUjBXSmxpCm9xaGZ3VW04ZHc3QU5Yb09LVUNaNndseTQ0alNSZW50b2xYWlVzTnBrMGkxaFZzQVZjT0NYc1BOTTZZQ1ZPT1gKcXRuWVh2U2IvaWN1M0wwaFF5OTFhZmR0cTk3N2I1SHVBL0pWTVpXc3lFWEZ4cUdOT2tUcWM2Ykw4YS9LR2NFegoxdFl6K0F3Vmo4WlBITzJzUC9zQ0F3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trTUIwR0ExVWRKUVFXCk1CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVcKQkJSbE5OdXpabVErbmZvK1NlMVRzK1VKaUlWZGlUQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUF0VE1oMy9ZNApTQW9aVTRwVXJxKzU4UG9IbHZiTWpsb2doTkV5K0x2Rzdya0hJcU5UbGJKbExuSnlmRUZyVUUwYkZoOGtibVBaCm4rR1JnTnVjTkdrT2NTVWI4U0grVUErTDN2TkRjREVpQlRDTi95Y2RFUEZNQjRzUXhxRi8xWXZDYlZJSUx6ZzQKZjV2ajA4aHBxQklaWVVEU1FmU1QwVDNYcEozSVR2V0kzOEp6RDBPaVdkOXFBRE1HbHVuV1UxbFg0dnFGMnZkaApaVVBnTEcxMlBRYTA5SzNDUjF4RGJpdTFBZXZtYnh1dHpEc3NpNWxnZXpuODRFdXFraTkrLy8rakFMczdKcHFHCmoxT1FFWURpUFRkeEU5MStGUStCa0FBMXpoWWNoa3lsb05Xd0FhWGVnZkdoL2NKSDY4M1JLODhVTDBxeEtwcnAKRXgwWDJxbnJHcXJTZHc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  groupPriorityMinimum: 10000
  versionPriority: 15
---
# Source: inbox-agent/templates/rbac/user_roles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: appscode:my-inbox-agent:edit
  labels:
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
- apiGroups:
  - monitoring.appscode.com
  resources:
  - "*"
  verbs: ["*"]
---
# Source: inbox-agent/templates/rbac/user_roles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: appscode:my-inbox-agent:view
  labels:
    rbac.authorization.k8s.io/aggregate-to-view: "true"
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
- apiGroups:
  - monitoring.appscode.com
  resources:
  - "*"
  verbs: ["get", "list", "watch"]
