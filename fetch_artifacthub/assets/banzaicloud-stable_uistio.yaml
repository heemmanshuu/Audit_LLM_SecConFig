---
# Source: uistio/templates/rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: uistio
  labels:
    app.kubernetes.io/name: uistio
    helm.sh/chart: uistio-0.0.12
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-uistio
    app.kubernetes.io/version: 0.3.10
    app.kubernetes.io/component: application
    app.kubernetes.io/part-of: uistio
---
# Source: uistio/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: uistio
  labels:
    app.kubernetes.io/name: uistio
    helm.sh/chart: uistio-0.0.12
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-uistio
    app.kubernetes.io/version: 0.3.10
    app.kubernetes.io/component: application
    app.kubernetes.io/part-of: uistio
rules:
- apiGroups: [""]
  resources:
  - configmaps
  - endpoints
  - namespaces
  - services
  - pods
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups: ["apps"]
  resources:
  - deployments
  - replicasets
  - statefulsets
  - daemonsets
  verbs:
  - get
  - list
  - watch
- apiGroups: ["batch"]
  resources:
  - jobs
  - cronjobs
  verbs:
  - get
  - list
  - watch
- apiGroups: ["istio.banzaicloud.io"]
  resources:
  - istios
  - remoteistios
  verbs:
  - get
  - list
  - watch
  - edit
- apiGroups: ["networking.istio.io"]
  resources:
  - destinationrules
  - virtualservices
  - gateways
  verbs:
  - create
  - get
  - list
  - watch
  - edit
  - update
  - patch
  - delete
- apiGroups: ["istio.banzaicloud.io"]
  resources:
  - canaries
  verbs:
  - create
  - get
  - list
  - watch
  - edit
  - update
  - patch
  - delete
---
# Source: uistio/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: uistio
  labels:
    app.kubernetes.io/name: uistio
    helm.sh/chart: uistio-0.0.12
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-uistio
    app.kubernetes.io/version: 0.3.10
    app.kubernetes.io/component: application
    app.kubernetes.io/part-of: uistio
roleRef:
  kind: ClusterRole
  name: uistio
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: uistio
  namespace: default
---
# Source: uistio/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-uistio
  labels:
    app.kubernetes.io/name: uistio
    helm.sh/chart: uistio-0.0.12
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-uistio
    app.kubernetes.io/version: 0.3.10
    app.kubernetes.io/component: application
    app.kubernetes.io/part-of: uistio
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http-app
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: uistio
    app.kubernetes.io/instance: my-uistio
---
# Source: uistio/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-uistio
  labels:
    app.kubernetes.io/name: uistio
    helm.sh/chart: uistio-0.0.12
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-uistio
    app.kubernetes.io/version: 0.3.10
    app.kubernetes.io/component: application
    app.kubernetes.io/part-of: uistio
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: uistio
      app.kubernetes.io/instance: my-uistio
      app.kubernetes.io/component: application
      app.kubernetes.io/part-of: uistio
  template:
    metadata:
      labels:
        app.kubernetes.io/name: uistio
        helm.sh/chart: uistio-0.0.12
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/instance: my-uistio
        app.kubernetes.io/version: 0.3.10
        app.kubernetes.io/component: application
        app.kubernetes.io/part-of: uistio
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "10000"
        sidecar.istio.io/inject: "true"
    spec:
      serviceAccountName: uistio
      containers:
        - name: uistio
          image: "banzaicloud/uistio:master"
          imagePullPolicy: Always
          ports:
            - name: http-app
              containerPort: 8000
              protocol: TCP
            - name: instrumentation
              containerPort: 10000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /version
              port: instrumentation
          readinessProbe:
            httpGet:
              path: /healthz
              port: instrumentation
          env:
          - name: APP_ISTIOCRNAME
            value: "mesh"
          - name: APP_ISTIOCRNAMESPACE
            value: "istio-system"
          - name: APP_PROMETHEUS
            value: "http://prometheus"
---
# Source: uistio/templates/hpa.yaml
apiVersion: autoscaling/v2beta1
kind: HorizontalPodAutoscaler
metadata:
  name: my-uistio
  labels:
    app.kubernetes.io/name: uistio
    helm.sh/chart: uistio-0.0.12
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-uistio
    app.kubernetes.io/version: 0.3.10
    app.kubernetes.io/component: application
    app.kubernetes.io/part-of: uistio
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: my-uistio
  minReplicas: 1
  maxReplicas: 3
  metrics:
    - type: Resource
      resource:
        name: cpu
        targetAverageUtilization: 70
    - type: Resource
      resource:
        name: memory
        targetAverageUtilization: 70
---
# Source: uistio/templates/disable-mtls-uistio.yaml
apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  name: my-uistio-uistio
  labels:
    app.kubernetes.io/name: uistio-uistio
    helm.sh/chart: uistio-0.0.12
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-uistio
    app.kubernetes.io/version: 0.3.10
    app.kubernetes.io/part-of: uistio
spec:
  host: uistio.default
  trafficPolicy:
    tls:
      mode: DISABLE
---
# Source: uistio/templates/multicluster-prometheus-workaround.yaml
apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  name: my-uistio-prometheus
  labels:
    app.kubernetes.io/name: uistio-prometheus
    helm.sh/chart: uistio-0.0.12
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-uistio
    app.kubernetes.io/version: 0.3.10
    app.kubernetes.io/part-of: uistio
spec:
  host: prometheus.default.svc.cluster.local
  trafficPolicy:
    tls:
      mode: DISABLE
---
# Source: uistio/templates/disable-mtls-uistio.yaml
apiVersion: "authentication.istio.io/v1alpha1"
kind: "Policy"
metadata:
  name: my-uistio-ustio
  labels:
    app.kubernetes.io/name: uistio-prometheus
    helm.sh/chart: uistio-0.0.12
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-uistio
    app.kubernetes.io/version: 0.3.10
    app.kubernetes.io/part-of: uistio
spec:
  targets:
  - name: uistio
---
# Source: uistio/templates/multicluster-prometheus-workaround.yaml
apiVersion: networking.istio.io/v1alpha3
kind: ServiceEntry
metadata:
  name: my-uistio-prometheus
  labels:
    app.kubernetes.io/name: uistio-prometheus
    helm.sh/chart: uistio-0.0.12
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-uistio
    app.kubernetes.io/version: 0.3.10
    app.kubernetes.io/part-of: uistio
spec:
  hosts:
  - prometheus.default.svc.cluster.local
  ports:
  - number: 80
    name: http
    protocol: HTTP
  location: MESH_EXTERNAL
  resolution: DNS
  endpoints:
  - address: prometheus
---
# Source: uistio/templates/multicluster-prometheus-workaround.yaml
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: my-uistio-prometheus
  labels:
    app.kubernetes.io/name: uistio-prometheus
    helm.sh/chart: uistio-0.0.12
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-uistio
    app.kubernetes.io/version: 0.3.10
    app.kubernetes.io/part-of: uistio
spec:
  hosts:
  - prometheus
  http:
  - route:
    - destination:
        host: prometheus.default.svc.cluster.local
---
# Source: uistio/templates/metrics.yaml
apiVersion: config.istio.io/v1alpha2
kind: handler
metadata:
  name: my-uistio
  namespace: istio-system
  labels:
    app.kubernetes.io/name: uistio
    helm.sh/chart: uistio-0.0.12
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-uistio
    app.kubernetes.io/version: 0.3.10
    app.kubernetes.io/part-of: uistio
spec:
  compiledAdapter: prometheus
  params:
    metrics:
    - name: request_edges # Prometheus metric name
      instance_name: uistio.metric.istio-system
      kind: COUNTER
      label_names:
        - source_owner
        - source_workload_uid
        - source_workload
        - source_workload_namespace
        - source_app
        - source_cluster_id
        - source_version
        - destination_owner
        - destination_workload_uid
        - destination_workload
        - destination_workload_namespace
        - destination_service_uid
        - destination_service_name
        - destination_service_namespace
        - destination_app
        - destination_cluster_id
        - destination_version
        - request_protocol
        - security_policy
        - reporter
        - response_code
---
# Source: uistio/templates/metrics.yaml
apiVersion: config.istio.io/v1alpha2
kind: metric
metadata:
  name: my-uistio
  namespace: istio-system
  labels:
    app.kubernetes.io/name: uistio
    helm.sh/chart: uistio-0.0.12
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-uistio
    app.kubernetes.io/version: 0.3.10
    app.kubernetes.io/part-of: uistio
spec:
  monitored_resource_type: '"UNSPECIFIED"'
  value: "1"
  dimensions:
    source_owner: source.owner | "unknown"
    source_workload_uid: source.workload.uid | "unknown"
    source_workload: source.workload.name | "unknown"
    source_workload_namespace: source.workload.namespace | "unknown"
    source_app: source.labels["app"] | "unknown"
    source_cluster_id: source.cluster.id | "unknown"
    source_version: source.labels["version"] | "unknown"
    destination_owner: destination.owner | "unknown"
    destination_workload_uid: destination.workload.uid | "unknown"
    destination_workload: destination.workload.name | "unknown"
    destination_workload_namespace: destination.workload.namespace | "unknown"
    destination_service_uid: destination.service.uid | "unknown"
    destination_service_name: destination.service.name | "unknown"
    destination_service_namespace: destination.service.namespace | "unknown"
    destination_app: destination.labels["app"] | "unknown"
    destination_cluster_id: destination.cluster.id | "unknown"
    destination_version: destination.labels["version"] | "unknown"
    request_protocol: api.protocol | context.protocol | "unknown"
    security_policy: conditional((context.reporter.kind | "inbound") == "outbound", "unknown", conditional(connection.mtls | false, "mutual_tls", "none"))
    reporter: conditional((context.reporter.kind | "inbound") == "outbound", "source", "destination")
    response_code: response.code | 200
---
# Source: uistio/templates/metrics.yaml
# Rule to send metric instances to a Prometheus handler
apiVersion: config.istio.io/v1alpha2
kind: rule
metadata:
  name: my-uistio
  namespace: istio-system
  labels:
    app.kubernetes.io/name: uistio
    helm.sh/chart: uistio-0.0.12
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-uistio
    app.kubernetes.io/version: 0.3.10
    app.kubernetes.io/part-of: uistio
spec:
  actions:
  - handler: my-uistio
    instances: [uistio.metric]
