---
# Source: log-socket/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-log-socket
  labels:
    helm.sh/chart: log-socket-0.1.2
    app.kubernetes.io/name: log-socket
    app.kubernetes.io/instance: my-log-socket
    app.kubernetes.io/version: "0.0.3"
    app.kubernetes.io/managed-by: Helm
---
# Source: log-socket/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-log-socket
rules:
- apiGroups:
  - '*'
  resources:
  - '*'
  verbs:
  - '*'
---
# Source: log-socket/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name:  my-log-socket
  labels:
    helm.sh/chart: log-socket-0.1.2
    app.kubernetes.io/name: log-socket
    app.kubernetes.io/instance: my-log-socket
    app.kubernetes.io/version: "0.0.3"
    app.kubernetes.io/managed-by: Helm
subjects:
  - kind: ServiceAccount
    name:  my-log-socket
    namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-log-socket
---
# Source: log-socket/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-log-socket
  labels:
    helm.sh/chart: log-socket-0.1.2
    app.kubernetes.io/name: log-socket
    app.kubernetes.io/instance: my-log-socket
    app.kubernetes.io/version: "0.0.3"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 10000
      targetPort: http-ingest
      protocol: TCP
      name: http-ingest
    - port: 10001
      targetPort: http-api
      protocol: TCP
      name: http-api
  selector:
    app.kubernetes.io/name: log-socket
    app.kubernetes.io/instance: my-log-socket
---
# Source: log-socket/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-log-socket
  labels:
    helm.sh/chart: log-socket-0.1.2
    app.kubernetes.io/name: log-socket
    app.kubernetes.io/instance: my-log-socket
    app.kubernetes.io/version: "0.0.3"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: log-socket
      app.kubernetes.io/instance: my-log-socket
  template:
    metadata:
      labels:
        app.kubernetes.io/name: log-socket
        app.kubernetes.io/instance: my-log-socket
    spec:
      serviceAccountName: my-log-socket
      securityContext:
        {}
      containers:
        - name: log-socket
          securityContext:
            {}
          image: "ghcr.io/banzaicloud/log-socket:latest"
          imagePullPolicy: Always
          args:
            - "--service-addr"
            - my-log-socket.default.svc:10000
          ports:
            - name: http-ingest
              containerPort: 10000
              protocol: TCP
            - name: http-api
              containerPort: 10001
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: http-ingest
          readinessProbe:
            httpGet:
              path: /healthz
              port: http-ingest
          resources:
            {}
---
# Source: log-socket/templates/servicemonitor.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: my-log-socket
  namespace: default
  labels:
    helm.sh/chart: log-socket-0.1.2
    app.kubernetes.io/name: log-socket
    app.kubernetes.io/instance: my-log-socket
    app.kubernetes.io/version: "0.0.3"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      helm.sh/chart: log-socket-0.1.2
      app.kubernetes.io/name: log-socket
      app.kubernetes.io/instance: my-log-socket
      app.kubernetes.io/version: "0.0.3"
      app.kubernetes.io/managed-by: Helm
  endpoints:
  - port: http-ingest
    path: /metrics
  namespaceSelector:
    matchNames:
    - default
---
# Source: log-socket/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "my-log-socket-test-connection"
  labels:
    helm.sh/chart: log-socket-0.1.2
    app.kubernetes.io/name: log-socket
    app.kubernetes.io/instance: my-log-socket
    app.kubernetes.io/version: "0.0.3"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['my-log-socket:']
  restartPolicy: Never
