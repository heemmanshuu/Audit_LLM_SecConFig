---
# Source: okteto/charts/ingress-nginx/templates/controller-poddisruptionbudget.yaml
# PDB is not supported for DaemonSets.
# https://github.com/kubernetes/kubernetes/issues/108124
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  labels:
    helm.sh/chart: ingress-nginx-4.11.2
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/instance: my-okteto
    app.kubernetes.io/version: "1.11.2"
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller
  name: my-okteto-ingress-nginx-controller
  namespace: default
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: ingress-nginx
      app.kubernetes.io/instance: my-okteto
      app.kubernetes.io/component: controller
  minAvailable: 1
---
# Source: okteto/charts/okteto-nginx/templates/controller-poddisruptionbudget.yaml
# PDB is not supported for DaemonSets.
# https://github.com/kubernetes/kubernetes/issues/108124
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  labels:
    helm.sh/chart: okteto-nginx-4.11.2
    app.kubernetes.io/name: okteto-nginx
    app.kubernetes.io/instance: my-okteto
    app.kubernetes.io/version: "1.11.2"
    app.kubernetes.io/part-of: okteto-nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller
  name: my-okteto-okteto-nginx-controller
  namespace: default
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: okteto-nginx
      app.kubernetes.io/instance: my-okteto
      app.kubernetes.io/component: controller
  minAvailable: 1
---
# Source: okteto/charts/ingress-nginx/templates/controller-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    helm.sh/chart: ingress-nginx-4.11.2
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/instance: my-okteto
    app.kubernetes.io/version: "1.11.2"
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller
  name: my-okteto-ingress-nginx
  namespace: default
automountServiceAccountToken: true
---
# Source: okteto/charts/okteto-nginx/templates/controller-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    helm.sh/chart: okteto-nginx-4.11.2
    app.kubernetes.io/name: okteto-nginx
    app.kubernetes.io/instance: my-okteto
    app.kubernetes.io/version: "1.11.2"
    app.kubernetes.io/part-of: okteto-nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller
  name: my-okteto-okteto-nginx
  namespace: default
automountServiceAccountToken: true
---
# Source: okteto/charts/reloader/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-namespace: "default"
    meta.helm.sh/release-name: "my-okteto"
  labels:
    app: my-okteto-reloader
    chart: "reloader-1.0.119"
    release: "my-okteto"
    heritage: "Helm"
    app.kubernetes.io/managed-by: "Helm"
  name: reloader
  namespace: default
---
# Source: okteto/templates/buildkit-service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "okteto-buildkit"
  labels:
    app.kubernetes.io/component: "buildkit"
    app.kubernetes.io/part-of: "okteto"
    app.kubernetes.io/name: "my-okteto-buildkit"
    helm.sh/chart: okteto-1.24.2
    app.kubernetes.io/instance: my-okteto
    app.kubernetes.io/managed-by: Helm
---
# Source: okteto/templates/okteto-bot-service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: okteto-bot
  labels:
    app: my-okteto
    chart: "okteto-1.24.2"
    release: "my-okteto"
    heritage: "Helm"
    dev.okteto.com: "true"
    dev.okteto.com/id: "okteto-bot"
    dev.okteto.com/external-id: "okteto-bot"
    app.kubernetes.io/managed-by: Helm
    dev.okteto.com/super: "true"
    dev.okteto.com/token: "tetkktcx"
  annotations:
    meta.helm.sh/release-name: my-okteto
    meta.helm.sh/release-namespace: default
---
# Source: okteto/templates/okteto-cluster-admin-service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: okteto-cluster-admin
  labels:
    app: my-okteto
    chart: "okteto-1.24.2"
    release: "my-okteto"
    heritage: "Helm"
---
# Source: okteto/templates/registry-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "my-okteto-registry"
  labels:
    app.kubernetes.io/component: "registry"
    app.kubernetes.io/part-of: "okteto"
    app.kubernetes.io/name: "my-okteto-registry"
    helm.sh/chart: okteto-1.24.2
    app.kubernetes.io/instance: my-okteto
    app.kubernetes.io/managed-by: Helm
---
# Source: okteto/templates/service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-okteto
  labels:
    app: my-okteto
    chart: "okteto-1.24.2"
    release: "my-okteto"
    heritage: "Helm"
---
# Source: okteto/templates/super-service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: okteto-admin
  labels:
    app: my-okteto
    chart: "okteto-1.24.2"
    release: "my-okteto"
    heritage: "Helm"
    dev.okteto.com: "true"
    dev.okteto.com/token: "v29ybde9"
    dev.okteto.com/id: "okteto-admin"
    dev.okteto.com/external-id: "okteto-admin"
    app.kubernetes.io/managed-by: Helm
    dev.okteto.com/super: "true"
  annotations:
    "helm.sh/resource-policy": keep
    meta.helm.sh/release-name: my-okteto
    meta.helm.sh/release-namespace: default
    dev.okteto.com/email: "welcome@okteto.com"
---
# Source: okteto/templates/regcreds-webhook.yaml
apiVersion: v1
kind: Secret
type: kubernetes.io/tls
metadata:
  name: "my-okteto-regcreds"
  namespace: "default"
  labels:
    app.kubernetes.io/component: "regcreds"
    app.kubernetes.io/part-of: "okteto"
    app.kubernetes.io/name: "my-okteto-regcreds"
    helm.sh/chart: okteto-1.24.2
    app.kubernetes.io/instance: my-okteto
    app.kubernetes.io/managed-by: Helm

stringData: 
  ca.crt: |- 
    -----BEGIN CERTIFICATE-----
    MIIDKzCCAhOgAwIBAgIQMma2ayylzVX1KsRvzEf+qDANBgkqhkiG9w0BAQsFADAg
    MR4wHAYDVQQDExVteS1va3RldG8tcmVnY3JlZHMtY2EwHhcNMjQwOTE2MDgxMTI1
    WhcNMzQwOTE0MDgxMTI1WjAgMR4wHAYDVQQDExVteS1va3RldG8tcmVnY3JlZHMt
    Y2EwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCnbL2q5qKTiKyj9PKM
    +NUuB/awKtdIAPRhFyXwFEoL0T+xng38EOhEOKpH5alWFCK65cTMZ0t+Q/PzNTMY
    oSmQMCF941intLXZp4garLSp7MSk9SSkBf92kIkRJEtjqqetkbG+pf/z7Ek4d559
    LhfyBduA94jhsYv6LAcTF96iNSsSHvJKTmg6FMbVEkzORAap6ttvEt9aT4nJ886s
    mpz1RgrJwBsX3Q71UDRStaA8b9xZJY+KGx+5sAbe2ZenfyRHtXfQSGK6DBpwvZq5
    G92TQ7qHEhb3Mrg/X6e2xBTUki9VMEQ7io6EuR8/C/golMXR14qoSyIiFEqMHH/+
    GbuPAgMBAAGjYTBfMA4GA1UdDwEB/wQEAwICpDAdBgNVHSUEFjAUBggrBgEFBQcD
    AQYIKwYBBQUHAwIwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUBs4qhQkQ4byY
    Aw8w467xxHnWhlUwDQYJKoZIhvcNAQELBQADggEBAA0KcySsi7+RyzcwSgRyIbJ6
    +lIuURk5JMYQcno+SQAWW3tWRlIhjt4KEShl2ocTzkcGUVnczYdsS5m/RuRAYAi7
    IqSeYVEKAhX1VaOOffbRvGhzjdfjOrSJbT8fu4HSNjw9rL6IdxwVy+pAmDoIwsUR
    +M4vCcC5AjMqeZwYo2Ppzs7x6mYlICF45RFHYkPOO+Yc/6V2T+0qJzIqBjkRzMgd
    XyHxOx7Mnqc8s36lmdw+JeI80WL9iSl3eCf6d8ZMJ5Uz6X4Eyxw9tDPisnrWAlmy
    vICIGiPVDPT+JTCnhqaGSto4OPfgYEjDRzncgAq57wuflgPhxDM4W8n3fyJiG1E=
    -----END CERTIFICATE-----
    
  tls.crt: |- 
    -----BEGIN CERTIFICATE-----
    MIIDhTCCAm2gAwIBAgIRAOk9RmY2uvPI+GG7SNirKGkwDQYJKoZIhvcNAQELBQAw
    IDEeMBwGA1UEAxMVbXktb2t0ZXRvLXJlZ2NyZWRzLWNhMB4XDTI0MDkxNjA4MTEy
    NVoXDTM0MDkxNDA4MTEyNVowHTEbMBkGA1UEAxMSbXktb2t0ZXRvLXJlZ2NyZWRz
    MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA0qkR+3kY9O440FhuutNh
    vNc/wgfFRSG+7l+50cJHuGdVytQojOX0oKMESAa+jUUtPtpbUGdLjuxdbCFnkcFR
    s/Ob6cvjA2n3p4z8IQul3tDIHiKO7kEPz2IoKwmwwNPfEZwuK6RI7OVmfalN4uLI
    PMWXaQ8IkvuI6/Ze/zvXUAP9snAkGwJUC6uG1BkEUusKkhUxTPIS4jQculi5ybj8
    bP5sOsktQ4MsHx7dv20fOSzsLsuBR4qc9mASXyMzfTCkdmhkXeUweANyESxvx8IT
    yfFbtcdkc43/QziQW5ToOKCpLwb6XIgTYXna02O2fXqUbbOxLp+yZ8aDKDR6jtlJ
    uwIDAQABo4G8MIG5MA4GA1UdDwEB/wQEAwIFoDAdBgNVHSUEFjAUBggrBgEFBQcD
    AQYIKwYBBQUHAwIwDAYDVR0TAQH/BAIwADAfBgNVHSMEGDAWgBQGziqFCRDhvJgD
    DzDjrvHEedaGVTBZBgNVHREEUjBQghJteS1va3RldG8tcmVnY3JlZHOCGm15LW9r
    dGV0by1yZWdjcmVkcy5kZWZhdWx0gh5teS1va3RldG8tcmVnY3JlZHMuZGVmYXVs
    dC5zdmMwDQYJKoZIhvcNAQELBQADggEBADlZeTpJJCdXHAhVvk8G/ua+SFKwYF6H
    zSM+CE7m/20grZaoAgEBYULnHzuHXQ9fRER9E7kmo07ry6+aVADulFpn7W09PDIV
    GEHkMzUToohAhHVGoBZQ0lMN199JDqXCZ4spy5KZdxy9j9oUFKY61SbDRwgdgzzo
    W88blbqxkKe39uQKk76rmpygImq3c8skRfJogg7PpubVojC1BAnwiLkL/U0K8Mwc
    vbV3ghu7G8giv0AJH9kkrnVCt6CtQ+W1EC67qh88MIlvAAG8XXP4VNzCYGKAIp/4
    3yv/gcghoZtXAWjF54fHcTm76lO/C1giWfvT/6da9kSB0Iy/yV179lQ=
    -----END CERTIFICATE-----
    
  tls.key: |- 
    -----BEGIN RSA PRIVATE KEY-----
    MIIEpAIBAAKCAQEA0qkR+3kY9O440FhuutNhvNc/wgfFRSG+7l+50cJHuGdVytQo
    jOX0oKMESAa+jUUtPtpbUGdLjuxdbCFnkcFRs/Ob6cvjA2n3p4z8IQul3tDIHiKO
    7kEPz2IoKwmwwNPfEZwuK6RI7OVmfalN4uLIPMWXaQ8IkvuI6/Ze/zvXUAP9snAk
    GwJUC6uG1BkEUusKkhUxTPIS4jQculi5ybj8bP5sOsktQ4MsHx7dv20fOSzsLsuB
    R4qc9mASXyMzfTCkdmhkXeUweANyESxvx8ITyfFbtcdkc43/QziQW5ToOKCpLwb6
    XIgTYXna02O2fXqUbbOxLp+yZ8aDKDR6jtlJuwIDAQABAoIBADe6RCiLQ3/f2SW8
    jyZbLvre0l4I4jXElJbIugZ0Z7avl3F9qHCFkK5CEargJd6HU03SQ9/EQ6e+fYRS
    XeygAHYjVraFmjtX+AzZ7gTr6OhFwPq/16HNklohNFEWUizgn50v/MLMxgHtOay6
    cgE4TxJMjx5avMDtS65oUX8hnHbs7HJY3Q4DDtCuN8VJLCKWu3F9pdesOuHAL0lR
    16GAnJj9VkgjZ3eNHueolTIgOJpsSKt0hS7r762UDn/0Pcfc8zHbj8QW9oh9SHj4
    9jOOyrqyueH8d3XCfCfgM7cjjBfKxDkYUshn58Y103qDeBbKUDctxoGlVXZlQV4l
    9/sxNJkCgYEA7mQu9dsCyzAWCbl8RDBokzevxP9t4BiDhUUsXwBUYE4CFqL2HH4W
    toSt+YD+GrwzuLpEls8UX391SjmpcvXDlMhENON7qR7ktDv+OhD9QZpqnRj9fA0U
    TEVPBVeOQxQ7o+kcOB0hKjDI4Stn77331D+OPNZU8LsvQrkU09E5djUCgYEA4jiD
    qqBy4A4zoIU5dP5dOcKoh7Q2rtLMrRy1Jgl9NW27+soMc9KpAipFOvgzLKwI4ZiC
    W8d1ctnl88AjvlADRqhEng1LcOHXmVeHf3aFh33PPNKXW1nhdj0e5iWoxgVyacm9
    oqb2GF2/pH66Ty7e67BPRtgjq0cqpoVfBop0/i8CgYEAnYAdMpv/LYVYmhYtTtP4
    04MQIwRrcIphopRAK4gJNxNy98e0+MApe28Pjm+18q3zMhIGrOil2i5YrLCKDoTn
    Mg5aWeMN2X+qtJWKcoy09jnyRFa1atctWPLVsX7WY+UjPjkORtigB8LxhSrrYY7O
    BTH0ZKdquR3CrL+hTgzGfR0CgYBqcJTjD6N9cLEx8f1a4uQSbVjGoTCpiV3shfll
    8EkNfphYJAE/7fq/ngv89xN9DWUQYKXVcT/9zjC4Q8uNnDAuarX+d9rrPhgneluy
    yZ2CZtu/jobQ4LWI4LFNMKL8qUtwIxArG8vnIxUs3MPkxfT1iHuEpeYCjPWwbEiN
    10+82QKBgQCKKw3dPREAF+pX8l8gFHNsFP9m6yKR0Hf8JNbToSOgZ5x65ZsbYqCL
    zY/XtNgbriKRqhXljJIiYPaigqj+eFRd+qideMMUyNKY30X42TboXrT6xRpxrmF+
    WXSyDDXIntTUSXZ5ykv8zYTchirrahZL8K3BP1TmmLQ8Ptd6Gbo8nw==
    -----END RSA PRIVATE KEY-----
---
# Source: okteto/templates/registry-http-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-okteto-registry-http-secret
  labels:
    app.kubernetes.io/component: "registry"
    app.kubernetes.io/part-of: "okteto"
    app.kubernetes.io/name: "my-okteto-registry-http-secret"
    helm.sh/chart: okteto-1.24.2
    app.kubernetes.io/instance: my-okteto
    app.kubernetes.io/managed-by: Helm

type: Opaque
data:
  haShared: "b2t0ZXRv"
---
# Source: okteto/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-okteto
  labels:
    app.kubernetes.io/name: "my-okteto"
    helm.sh/chart: okteto-1.24.2
    app.kubernetes.io/instance: my-okteto
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: "api"
    app.kubernetes.io/part-of: "okteto"
type: Opaque
data:
  "OKTETO_LICENSE": ""
  "OKTETO_COOKIE_SECRET": ""
---
# Source: okteto/templates/webhook.yaml
apiVersion: v1
kind: Secret
type: kubernetes.io/tls
metadata:
  name: my-okteto-mutation-webhook
  namespace: "default"
  labels:
    app.kubernetes.io/part-of: "okteto"
    app.kubernetes.io/component: "webhook"
    app.kubernetes.io/name: "my-okteto-mutation-webhook"
    helm.sh/chart: okteto-1.24.2
    app.kubernetes.io/instance: my-okteto
    app.kubernetes.io/managed-by: Helm

stringData: 
  ca.crt: |- 
    -----BEGIN CERTIFICATE-----
    MIIDJjCCAg6gAwIBAgIRAKSjGfFvH0BU2amlxpu/dokwDQYJKoZIhvcNAQELBQAw
    HTEbMBkGA1UEAxMSb2t0ZXRvLWludGVybmFsLWNhMB4XDTI0MDkxNjA4MTEyNFoX
    DTM0MDkxNDA4MTEyNFowHTEbMBkGA1UEAxMSb2t0ZXRvLWludGVybmFsLWNhMIIB
    IjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAn8FxaPXgMZCeDxJA1416hmSM
    HrKwZ5Lpc5OPEcUvUT1nZJOM8HehxQHOJmxnqzOr2IUDqeNlu23HF7VxJZPkbV/n
    9sjh+F5QQOmuf3RdUz2OhJf6RCBC3/oVAuYakgEJCOMlMRllE0oVH0amnIS5dCbf
    QVyd9qNV98DqsL2CpzgSA8w2BhQwkexl1Z5fGRGXaa4XgwoTL3PgKG+TZzYn6MYF
    d6GbU2juttIWt8dN3nmGSrSV2ysy7ijNNmX8x9NmfODuIxs1+LwDvRQX5qleFvfb
    mKYMWabTK02pSI1nBeufLIouueO4oEDHoZqPksKVQYIsUp9d9lY9+Ph7uRFNywID
    AQABo2EwXzAOBgNVHQ8BAf8EBAMCAqQwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsG
    AQUFBwMCMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFO3nBBd459dAJk9DkHlq
    bflW76msMA0GCSqGSIb3DQEBCwUAA4IBAQB0bgjr2ZaZXON0g3+H2rCiiqN0m2hx
    WhHvZDQTDKDDUjnwHNnE/mq5pjxxwkzvTztwShLzzuExCEOL4hevm+H/B4+7QTCh
    ldww+GBSt8yR3n2M4MRc3/0GZ5w/bR7WwyE2kIDiMozjbY2l2UtbvjuqCXYSc1hJ
    +dSDbZmuyQgWYpADHVSlJg9o4CgMD8lAQnBLIWnyIIT9McbaaAJehGyyq9yIq31Q
    facLQeroymgZZ2jle+OVTkzd2wEJWKf1VM3FMcS55m22Cl7g2DCyXo3hej/lMF52
    efJTIpzPnBTM3yMZHYUXr13VC4di+uDgSvXwmQfJvPA2DlV5ifm8E86Y
    -----END CERTIFICATE-----
    
  tls.crt: |- 
    -----BEGIN CERTIFICATE-----
    MIIDojCCAoqgAwIBAgIRALfuh5mXZgZboKmZtFBcRRAwDQYJKoZIhvcNAQELBQAw
    HTEbMBkGA1UEAxMSb2t0ZXRvLWludGVybmFsLWNhMB4XDTI0MDkxNjA4MTEyNVoX
    DTM0MDkxNDA4MTEyNVowJTEjMCEGA1UEAxMabXktb2t0ZXRvLW11dGF0aW9uLXdl
    Ymhvb2swggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQD7iZ/WL/ApGzhn
    1Ars4dT5Fs7XDLA5Zav0q8EiqNjQ8l/y5E/3e25a6jspla9upSNJ/EOJL0J6naMz
    Z3ZdfSJ61VKNYYwGiET46Nu6lbj3i+NAM2+nfskQO5lhYGgwa4S9EFmWk0jJPQwx
    sovlYOWL2Qs6N4O7zPDx0V6F+cWqJIMXViGNN7kZSs5yXJQnbQDe8XjauMIoZLUe
    R8b0nHCoIxxS+1OnWCkCFtoqbIoU8TpkdgyM/bOcHP1BVZo6eaESoFEkY55HYu0X
    bCq5JV9dAEUO5BjmQxFZE3Z4sWDE4nutOHDqxxJUm3MHeCbG2wBigvXVdS0kdvvG
    Ewn3UyRDAgMBAAGjgdQwgdEwDgYDVR0PAQH/BAQDAgWgMB0GA1UdJQQWMBQGCCsG
    AQUFBwMBBggrBgEFBQcDAjAMBgNVHRMBAf8EAjAAMB8GA1UdIwQYMBaAFO3nBBd4
    59dAJk9DkHlqbflW76msMHEGA1UdEQRqMGiCGm15LW9rdGV0by1tdXRhdGlvbi13
    ZWJob29rgiJteS1va3RldG8tbXV0YXRpb24td2ViaG9vay5kZWZhdWx0giZteS1v
    a3RldG8tbXV0YXRpb24td2ViaG9vay5kZWZhdWx0LnN2YzANBgkqhkiG9w0BAQsF
    AAOCAQEAkqSkJjCz8EGOuVOrAVKSSEQyvg1V9uipXMmt92xo/2pMxnylR6LZQQ1B
    VjnKKJuLrcu88p8KpjOaOAxya4FAiSVZm29INo7pdHE14aRhCAcZ5IpwfoFNTkXE
    l4+QPBZFtVW210yCotEqQdr5vRPbYTea6OmyC0z1ZAC/I79sPAHR1iJZ5DFUhcF0
    8P2SXb/wbCxnjcCWDprnZeobuRpjksWZf53WZvM+1InPNw+tWriORYW6kLO11Lq5
    zO2usNT+9ddVKuXR+zcVXzlaY8e7uyFTQrutwnz5Jz7gw9g6zwCKbUhipgl4VOuS
    JbBPUvCGjnXPFt0lSst6tZlfNf3+wg==
    -----END CERTIFICATE-----
    
  tls.key: |- 
    -----BEGIN RSA PRIVATE KEY-----
    MIIEpQIBAAKCAQEA+4mf1i/wKRs4Z9QK7OHU+RbO1wywOWWr9KvBIqjY0PJf8uRP
    93tuWuo7KZWvbqUjSfxDiS9Cep2jM2d2XX0ietVSjWGMBohE+OjbupW494vjQDNv
    p37JEDuZYWBoMGuEvRBZlpNIyT0MMbKL5WDli9kLOjeDu8zw8dFehfnFqiSDF1Yh
    jTe5GUrOclyUJ20A3vF42rjCKGS1HkfG9JxwqCMcUvtTp1gpAhbaKmyKFPE6ZHYM
    jP2znBz9QVWaOnmhEqBRJGOeR2LtF2wquSVfXQBFDuQY5kMRWRN2eLFgxOJ7rThw
    6scSVJtzB3gmxtsAYoL11XUtJHb7xhMJ91MkQwIDAQABAoIBAQCPWWZK5XUDqCyk
    F1bGmwkJj7L/IY8IluXBgWSHARzXL1n5DZ55FtHUZCqlT1X0Q45x6p7+fn1vbYkF
    kZAGRXsx74KlahMn4d8Uz3fxxMPt573x555ZIUsqwhxuP0gBWDUEnl3AD13quazK
    YcuSRH9tDJt2aQ7dJzWlSkGJLsg0ZotFKp1W/anqcYs/0f1sJxvY41f0Aog5OtLm
    OG5UNY4OvZUdjUVdEsX5cK1lMfwgbqAq3dcijwzHusJpgepyAh91z8sz7T9HifkM
    DI+hWRFAOxMXsLYa3kq5VCXCmvFgEDi4/95B67cbaYElJfLwKBhZRGC06JgWJsNv
    NIWDsts5AoGBAP94v4WAMeEhKSRDlcDiFAFAzIPAq8dl+egeKO5tgEbUuI8eZdO4
    ABHi/SnAb4vLNyh0RuiFFLTAxIHdMxQvtrZitZyhIkDxrVxFwd2PSISdjfEqdRla
    GpBynQF8W52w5dGyyGJYdQ7uIfLkjeQTFmjGxbkTgy7vC6+8Yy4AHx6lAoGBAPwO
    yx+dRxcMYDgLAKqxUbuk3fnJo9Ve/Sb2YNk/++0KSX6T1ceWSuOAI3pnPLHVKHQ0
    V8laYuH0MgyVT91p9NcLFWu6q0L3yJNOlIAM24cKnziPIjKUlFLspyttaXDVbIpw
    tf0+1CexWK9yaQQS9bMXa2JE35ifknqV22SCCmrHAoGBAPqfVZw9YDGQ25Ck8PPR
    lniIPlp+mMa8BwetFtCZAf/6zbgxxQmH+CGUAnKEQ6nryYfZUnrnm6Gbfuw7udFy
    4ZdZjPtEpJr7vOvJz19xIl5fRpGx6kDdwTO2DMsZWbOAiGVJNAYu61+jRBDKIVz/
    ULunTO+88bQIdPmJIe9N1Tm1AoGBAK75ugpVTT9zyOu+v5S/CYUgmzPGxaPekBBX
    Ir5Ny54u8PwctmAaNhyeHILhXeH5nl6k43gU9eXzdjcEA/ApmN0bhaBGcpNHnYad
    GzuVMWQafJNv0YaZXCoAvL/J8VNx5Sppufx2fCKd23nYC4zXeJb9n/8U3r99rtrI
    YwfvujmLAoGAXU/+avwjJQS6SmeWaXgKTRMycDLTbSE6wUWyFa/ZqHjS565dTF7h
    srnYGBwUmcyNEFUeaB8KCD8i/uTtFcFVNoju53VJ/OFb1hRvJD+ojPT8eZqkrjFi
    Qw+J7ypY8iKMF2851clPvFbrIs9N0uyVxDGwF+CWVspChQrwY96LNiw=
    -----END RSA PRIVATE KEY-----
---
# Source: okteto/templates/wildcard-certificate.yaml
apiVersion: v1
kind: Secret
type: kubernetes.io/tls
metadata:
  name: default-ssl-certificate-selfsigned
  namespace: "default"
  labels:
    app.kubernetes.io/part-of: "okteto"
    helm.sh/chart: okteto-1.24.2
    app.kubernetes.io/instance: my-okteto
    app.kubernetes.io/managed-by: Helm
  annotations:
    dev.okteto.com/fqdns: "[\"localtest.me\"]"

stringData: 
  ca.crt: |- 
    -----BEGIN CERTIFICATE-----
    MIIDJjCCAg6gAwIBAgIRAPbIjNF5Lq+v8qAGNZTvNGUwDQYJKoZIhvcNAQELBQAw
    HTEbMBkGA1UEAxMSb2t0ZXRvLXdpbGRjYXJkLWNhMB4XDTI0MDkxNjA4MTEyNFoX
    DTM0MDkxNDA4MTEyNFowHTEbMBkGA1UEAxMSb2t0ZXRvLXdpbGRjYXJkLWNhMIIB
    IjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA1BsVLfzDhucgZr/HWJx0Yiww
    4OpEOXOc+RPZg9OuAJKbI9FARAUT5BtwSU+QETB0kWVW1p8MV6YbT0e6pWqPR9Qu
    Ee6rSV/oKNkGzYhmbJR/l78I03RoNT6LLlpuVfTAdhRPsU5bnSmC5vH+58won2Js
    v1MNtHUepNqDafHPWAu047mE3opTk3pbzyz00VoN5e0oeXLQBTq7kGywiBuUpaSm
    EUF9KJb+ds2A9leax9CY5dQLJn7Va60E/aFk+iaK7MIBmvAInFwU7JemBTItianO
    hmc/Wb6qB1cJZ0bkajvm0n/gFXbPd3vHA7IS9ynO0MKv7ue8SLKjaoVZb97BCQID
    AQABo2EwXzAOBgNVHQ8BAf8EBAMCAqQwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsG
    AQUFBwMCMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFIOKAcDxaqN6wqHAtjl1
    p0Qg93zTMA0GCSqGSIb3DQEBCwUAA4IBAQB8dpmblcWz7bicY4PrZBKUdae5cc3I
    vgVn6dD4JfSuf2EuzQYQwlg6bs0TFzDjXtzVWJfuz2XM1gXHTJ145bCCqiC05Dzu
    EB399OPkhxJ5zn4CWaaWnWMhMuaOjxyy9JYhttIWovBXY3EmHyUWcxmFqTdj46FR
    X7s9ijgAyJFJdItoPp4aIDJKYM7bvXQZGISgvVIWkdYGfx6TSkoZI/3r9iVxvw4C
    EgfyyF+QoP4Rsv73brmV1xhAiYQFtRkPODGo7r6z+Ljr4gp/2HecWeakpdci/ZdS
    kc8xOoqYb9RwZezTEuQN7NvkUj99owpd8QgDLYJ4oPiEF7SvBcD5RfEO
    -----END CERTIFICATE-----
    
  tls.crt: |- 
    -----BEGIN CERTIFICATE-----
    MIIDOzCCAiOgAwIBAgIQMDbMX2HoG/dvRa7bjCqeqTANBgkqhkiG9w0BAQsFADAd
    MRswGQYDVQQDExJva3RldG8td2lsZGNhcmQtY2EwHhcNMjQwOTE2MDgxMTI0WhcN
    MzQwOTE0MDgxMTI0WjAZMRcwFQYDVQQDDA4qLmxvY2FsdGVzdC5tZTCCASIwDQYJ
    KoZIhvcNAQEBBQADggEPADCCAQoCggEBAKkhpDg9+aEE91plZXBsK3DGiDwm2Mf8
    80D0rjWJq+1X5BAnXii/LqmRprFpWOLf1qy6FNVukRrIaUGiiZRZBCMBTVMkahDa
    Tkw/l0VEqvMdoe/yA1wJQhmt/wirMCL+EPiVG1B+Dyieh/NLwcozXpMCWV/Jk1du
    dlO4hpLEfDe/78sX5PayLdnIO/VttQ464rppXhKG4VUpH8oyoLWQG1WgEG9UjCgB
    blUQ6HXta06+PX9vFNi7LRmYvmds325jUnSEqMvlYVwUpedNin3rvynqy/HE/eJs
    akWCiQrIFADq2M9VqtUQIZJbmBRSj6j5E56yP9Da9rZE504pfsChHucCAwEAAaN7
    MHkwDgYDVR0PAQH/BAQDAgWgMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcD
    AjAMBgNVHRMBAf8EAjAAMB8GA1UdIwQYMBaAFIOKAcDxaqN6wqHAtjl1p0Qg93zT
    MBkGA1UdEQQSMBCCDioubG9jYWx0ZXN0Lm1lMA0GCSqGSIb3DQEBCwUAA4IBAQCr
    FVGIL1RE6KOmckZWB3uvjrAiHdrgxU3tVVC38cXgrixijEt0XQgMum2cvmFRdxmD
    j/9vf5VKoBMRf3mWZrVwMA/9GMsGCrFoG53tBw80I3dIpXgHYGir3y8C9bJyYY57
    oQ/PrHPV25rYCmDJcFip8VzWi+YuK3oSuDxeLwL9zheb4E/QNiOnk3f5NYzlhKxE
    qbXIBQMaz14MLuXL88PkBqHrM2VrMBWwisKbqkcfY0DkV0E8RPsfNKcTlDW40eKF
    Ya80zNYn6X8GUFYLag7DUejUV5Nn36eg7TuIdWsFhyljAZOMdGI0FGlJaF4B2ok1
    T+vJXO4eq05B2WPydXo/
    -----END CERTIFICATE-----
    
  tls.key: |- 
    -----BEGIN RSA PRIVATE KEY-----
    MIIEogIBAAKCAQEAqSGkOD35oQT3WmVlcGwrcMaIPCbYx/zzQPSuNYmr7VfkECde
    KL8uqZGmsWlY4t/WrLoU1W6RGshpQaKJlFkEIwFNUyRqENpOTD+XRUSq8x2h7/ID
    XAlCGa3/CKswIv4Q+JUbUH4PKJ6H80vByjNekwJZX8mTV252U7iGksR8N7/vyxfk
    9rIt2cg79W21DjriumleEobhVSkfyjKgtZAbVaAQb1SMKAFuVRDode1rTr49f28U
    2LstGZi+Z2zfbmNSdISoy+VhXBSl502Kfeu/KerL8cT94mxqRYKJCsgUAOrYz1Wq
    1RAhkluYFFKPqPkTnrI/0Nr2tkTnTil+wKEe5wIDAQABAoIBABFND69xJ4gBKgxl
    Mus9JXRz2pvMnYBXr8qFPQzc+GlfBEViwY8Jf4x5CcQ8MouCukMRBfCPTuied6Xv
    KoOyV2n9SBupLfBrZHcISkEbtSEJdvdEmnNfvxNBaUVJvbLWqoXDOvgQ7RwKm32X
    0ksM1i/TnbDevePDuPb3eUyqLMrG/P3ThZHN2YJQF74SAlzY7jal1b9MI+WNahMU
    SQxFidYbstAmUxqCIn0/gPT0SIJqbxXVr9X5ePXiSnt9YRDiMT4DwSxuc2vD484g
    VVpz5sqyBiQ9WxdqIPX8tXzH+TSwD3ngKB7VXnswzNbx+bcrP01KFnLb+qevkitP
    JzsYUQECgYEAzgWr1HRLskRlYOCwQIp5TJJD7Jiy6/Ao9YiOChAmMbwg/yPETIOC
    GqKQHr3H+SNgkfn7q7zcDKuhQhuA1C2LZeS7BQmhPBPDzzPVMgD38H7SBsaaJ5Nk
    F/2sOCXA9CN6NquStqpswALnH+6tnJsopiHdjsXQfnwaUFA8oBIjlmkCgYEA0ij9
    9WxGR6TnqkXbYGVjEtACwVFuagbcIa8SGfw6Bd7vwgbI8gQ4kW3/VD3AHtIM9qlQ
    +q/74iJjAPayIe0D1VYqNI28g5gTJXC3JMEHT6NtqgvftlsNgBl95ZxrGKknKCzw
    s3D/IWLhhyAw1pmJ6wXxQ8toC1VFGLcAUvy2gM8CgYB4hCbFDBavvITVS/qudpKI
    cVNcluKrU/yRzQTR7Cp7k4J13bVZ0OANtqS55uiQ29oE6ogHKV5L5yZY5n/RHqdZ
    vpiMVNrFqwYzMi33p0timr0/i3PnzLeTtSfGXIdoCUzXqDwVsNIW7FvJeTSD1NvN
    eygA+cSCCRTXgGhGdvXsaQKBgD9rcV/bgcXjBKoElLQdRG2L6hjuevRyB4H+s+a1
    j8jvwsh5hbBLB8sTN6bzT4O9fX3+EFrmOou+NsQ2rgDA5pQ9gVUEpKvNe5Gj1xC3
    U3574f8bwDHmfkd26eAdeNAjU5azIRv1cHhhv48obrSD9vO+glUkD8zDuatApk9k
    xapPAoGAa4TlatxFONLY7bxJnH1cFtWpcz1WhUcrqyUycyiH0a2rG5gvaNep3Geg
    fjCd/NGffxUuSeMS+Kgr67uSe9TXnqfEQNndimiJKppu0J/9FW+5mhLPpg713Yps
    gT92esl8bJzjAd3kGnLVIv0f71TdNaFfBle8qVKlJCHajySadcU=
    -----END RSA PRIVATE KEY-----
---
# Source: okteto/charts/ingress-nginx/templates/controller-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    helm.sh/chart: ingress-nginx-4.11.2
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/instance: my-okteto
    app.kubernetes.io/version: "1.11.2"
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller
  name: my-okteto-ingress-nginx-controller
  namespace: default
data:
  allow-snippet-annotations: "true"
  annotation-value-word-blocklist: "load_module,lua_package,_by_lua,root,serviceaccount"
  annotations-risk-level: "Critical"
  enable-underscores-in-headers: "true"
  ignore-invalid-headers: "false"
  log-format-escape-json: "true"
  log-format-upstream: "{\"time\": \"$time_iso8601\", \"remote_addr\": \"$remote_addr\", \"x_forward_for\": \"$proxy_add_x_forwarded_for\", \"request_id\": \"$req_id\", \"remote_user\": \"$remote_user\", \"bytes_sent\": $bytes_sent, \"request_time\": $request_time, \"status\": $status, \"vhost\": \"$host\", \"request_proto\": \"$server_protocol\", \"path\": \"$uri\", \"request_query\": \"$args\", \"request_length\": $request_length, \"duration\": $request_time,\"method\": \"$request_method\", \"http_referrer\": \"$http_referer\", \"http_user_agent\": \"$http_user_agent\" }"
  proxy-buffer-size: "64K"
  ssl-ciphers: "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:AES128-GCM-SHA256:AES128-GCM-SHA384"
---
# Source: okteto/charts/okteto-nginx/templates/controller-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    helm.sh/chart: okteto-nginx-4.11.2
    app.kubernetes.io/name: okteto-nginx
    app.kubernetes.io/instance: my-okteto
    app.kubernetes.io/version: "1.11.2"
    app.kubernetes.io/part-of: okteto-nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller
  name: my-okteto-okteto-nginx-controller
  namespace: default
data:
  allow-snippet-annotations: "true"
  annotation-value-word-blocklist: "load_module,lua_package,_by_lua,root,serviceaccount"
  annotations-risk-level: "Critical"
  enable-underscores-in-headers: "true"
  ignore-invalid-headers: "false"
  log-format-escape-json: "true"
  log-format-upstream: "{\"time\": \"$time_iso8601\", \"remote_addr\": \"$remote_addr\", \"x_forward_for\": \"$proxy_add_x_forwarded_for\", \"request_id\": \"$req_id\", \"remote_user\": \"$remote_user\", \"bytes_sent\": $bytes_sent, \"request_time\": $request_time, \"status\": $status, \"vhost\": \"$host\", \"request_proto\": \"$server_protocol\", \"path\": \"$uri\", \"request_query\": \"$args\", \"request_length\": $request_length, \"duration\": $request_time,\"method\": \"$request_method\", \"http_referrer\": \"$http_referer\", \"http_user_agent\": \"$http_user_agent\" }"
  proxy-buffer-size: "64K"
---
# Source: okteto/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/name: "my-okteto"
    helm.sh/chart: okteto-1.24.2
    app.kubernetes.io/instance: my-okteto
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: "api"
    app.kubernetes.io/part-of: "okteto"
  name: "my-okteto"
  namespace: default
data:
  
  OKTETO_APP_VERSION: "143246320"
  OKTETO_CLI_VERSION: 2.31.0
  OKTETO_VERSION: 1.24.2
  "OKTETO_LOG_LEVEL": ""
  "OKTETO_CONFIGMAP_NAME": "my-okteto"
  "OKTETO_SERVICE_ACCOUNT_NAME": "my-okteto"
  "OKTETO_CLOUD_PROVIDER": "ephemeral"
  "OKTETO_AUTH_PROVIDER": "token"
  "OKTETO_LICENSE_HARD_LIMITS_ENABLED": "false"
  "OKTETO_RELEASE_NAME": "my-okteto"
  "CLUSTER_PUBLIC_ENDPOINT": "https://kubernetes.localtest.me"
  "SKIP_CA_IN_CREDENTIALS_QUERY": "true"
  "OKTETO_QUICKSTARTS": "[{\"name\":\"Github\",\"url\":\"https://github.com/\"},{\"name\":\"Gitlab\",\"url\":\"https://gitlab.com/\"},{\"name\":\"Bitbucket\",\"url\":\"https://bitbucket.org/\"}]"
  "OKTETO_SSH_SECRET_NAME": "okteto-ssh"
  "OKTETO_PULL_POLICY": "IfNotPresent"
  "OKTETO_BASE_DOMAIN": "localtest.me"
  "OKTETO_BASE_DOMAIN_PORT": "443"
  "OKTETO_GLOBAL_DEV_CLUSTER_ROLE": ""
  "OKTETO_NAMESPACES_CLUSTER_ROLE": cluster-admin
  "OKTETO_PREVIEWS_CLUSTER_ROLE": view
  "OKTETO_SHOW_VOLUMES_ENABLED": "true"
  "OKTETO_FORCE_PODS_IN_VOLUME_ZONE": "true"
  "OKTETO_FORCE_NODE_TO_PODS_WITH_SAME_PVCS": "true"
  "OKTETO_PUBLIC_URL": "okteto.localtest.me"
  "OKTETO_PUBLIC_OVERRIDE": ""
  "OKTETO_USER_DEFINED_NAMESPACES": "true"
  "OKTETO_INGRESS_RELOAD_DELAY": "0"
  "OKTETO_VIRTUAL_SERVICE_ENDPOINTS": ""
  "OKTETO_OPENSHIFT_SUPPORT_ENABLED": "false"
  "OKTETO_INGRESS_CLASS": "okteto-nginx"
  "OKTETO_CONTROL_PLANE_INGRESS_CLASS": "okteto-controlplane-nginx"
  "OKTETO_INGRESS_MODE": "dual"
  "OKTETO_INGRESS_FORCE_CLASS": "false"
  "OKTETO_INGRESS_FORCE_SUBDOMAIN": "false"
  "OKTETO_INGRESS_IP": ""
  "OKTETO_NAMESPACE_ANNOTATIONS": "{}"
  "OKTETO_NAMESPACE_LABELS": "{}"
  "OKTETO_NAMESPACE_INGRESS_ANNOTATIONS": "{}"
  "OKTETO_NAMESPACE_INGRESS_LABELS": "{}"
  "OKTETO_NAMESPACE_AUTO_ROLE_BINDING_ENABLED": "true"
  "OKTETO_LOADBALANCER_CONVERSION_ENABLED": "true"
  "OKTETO_COOKIE_HASH": ""
  "OKTETO_DEFAULT_BACKEND": "my-okteto-ingress-nginx-defaultbackend.default"
  "OKTETO_BIN_IMAGE": ""
  "OKTETO_PIPELINE_INSTALLER_IMAGE": "okteto/installer:143246320"
  "OKTETO_PIPELINE_RUNNER_IMAGE": "okteto/pipeline-runner:1.0.5"
  "OKTETO_PIPELINE_RUNNER_ANNOTATIONS": "{}"
  "OKTETO_PIPELINE_RUNNER_LABELS": "{}"
  "OKTETO_PIPELINE_RUNNER_ENV": "[]"
  "OKTETO_PIPELINE_RUNNER_RESOURCES": "{\"requests\":{\"cpu\":\"10m\",\"memory\":\"50Mi\"}}"
  "OKTETO_PRIVATECA_SECRET_NAME": "default-ssl-certificate-selfsigned"
  "OKTETO_PRIVATECA_SECRET_KEY": "ca.crt"
  "OKTETO_TELEMETRY_ENABLED": "true"
  "OKTETO_PRIVATEREGISTRY_SECRET_NAME": "my-okteto-dockerconfig-static"
  "OKTETO_DEFAULT_PLAN": "enterprise"
  "OKTETO_POOL": ""
  "OKTETO_BUILD_POOL": ""
  "OKTETO_DEV_POOL": ""
  "OKTETO_GLOBAL_OKTETO_TOLERATIONS": "[]"
  "OKTETO_GLOBAL_DEV_TOLERATIONS": "[]"
  "OKTETO_GLOBAL_NODE_SELECTORS": "{\"dev\":{},\"okteto\":{}}"
  "OKTETO_PROTECT_PERSONAL_NAMESPACE_ENABLED":  "true"
  "OKTETO_PULLALWAYS_ENABLED":  "true"
  "OKTETO_SERVICE_EXTERNAL_NAMES_ENABLED":  "true"
  "OKTETO_NETWORK_POLICIES_ENABLED":  "false"
  "OKTETO_INGRESS_LIMITS_ENABLED":  "false"
  "OKTETO_INGRESS_PROXY_BODY_SIZE": "60M"
  "OKTETO_GC_ENABLED":  "true"
  "OKTETO_DEBUG_SERVER":  "false"
  "OKTETO_GC_SCALE_TO_ZERO_PERIOD": "24"
  "OKTETO_GC_DELETE_NAMESPACE_PERIOD": "15"
  "OKTETO_AUTOSCALER_ENABLED":  "false"
  "OKTETO_AUTOWAKE_ENABLED":  "true"
  "OKTETO_VOLUME_SNAPSHOTS_ENABLED":  "false"
  "OKTETO_QUOTAS_RESOURCES_ENABLED":  "false"
  "OKTETO_QUOTAS_BANDWIDTH_ENABLED":  "false"
  "OKTETO_QUOTAS_BANDWIDTH_UP_ENABLED":  "false"
  "OKTETO_QUOTAS_REQUESTS_ENABLED":  "false"
  "OKTETO_AUTOSET_DEFAULT_LIMITS":  "false"
  "OKTETO_QUOTAS_LIMITS_ENABLED":  "false"
  "OKTETO_QUOTAS_LIMITRANGES_MAX_ENABLED":  "false"
  "OKTETO_QUOTAS_LIMITRANGES_REQUESTS_ENABLED":  "true"
  "OKTETO_QUOTAS_LIMITRANGES_LIMIT_REQUEST_RATIO":  "0"
  "OKTETO_QUOTAS_LIMITRANGES_REQUESTS_CPU": "10m"
  "OKTETO_QUOTAS_LIMITRANGES_REQUESTS_MEMORY": "50Mi"
  "OKTETO_QUOTAS_LIMITRANGES_LIMITS_ENABLED":  "true"
  "OKTETO_QUOTAS_LIMITRANGES_LIMITS_CPU": "2"
  "OKTETO_QUOTAS_LIMITRANGES_LIMITS_MEMORY": "8Gi"
  "OKTETO_REGISTRY_ENABLED": "true"
  "OKTETO_REGISTRY_URL": "registry.localtest.me"
  "OKTETO_REGISTRY_PULLPOLICY": "cluster"
  "OKTETO_BUILDKIT_ENABLED": "true"
  "OKTETO_BUILDKIT_PERSISTENCE_ENABLED": "false"
  "OKTETO_BUILDKIT_URL": "tcp://buildkit.localtest.me:443"
  "OKTETO_BUILDKIT_INSTANCE_NAME": "my-okteto-buildkit-3e8d5c881f"
  "OKTETO_BUILDKIT_SERVICE_ACCOUNT_NAME": "okteto-buildkit"
  "OKTETO_DEPOT_ENABLED": "false"
  "OKTETO_GITHUB_INTEGRATION_ENABLED": "false"
  "OKTETO_NODE_READINESS_CHECKER_ENABLED":  "false"
  "OKTETO_MAX_PERSONAL_ACCESS_TOKEN": "5"
  "OKTETO_GCP_STORE_ENABLED": "false"
  "OKTETO_GIT_SSH_USER": "git"
  "OKTETO_DEV_STORAGE_CLASS_ENABLED": "false"
  "OKTETO_NODE_STATIC_IP_ENABLED": "false"
  "OKTETO_VALIDATE_PVC_ENABLED": "false"
  "OKTETO_GIT_INSTALLER_ACTIVE_DEADLINE_SECONDS": "1800"
  "OKTETO_AUTO_ADMIN_ENABLED": "true"
  "OKTETO_SCALE_DOWN_PERSISTENT_RESOURCES": "false"
  "OKTETO_NAMESPACE_DESTROY_ALL_JOB_IMAGE": "okteto/backend:143246320"
  "OKTETO_NAMESPACE_WAKE_ALL_JOB_IMAGE": "okteto/backend:143246320"
  "OKTETO_NAMESPACE_SLEEP_JOB_IMAGE": "okteto/backend:143246320"
  "OKTETO_PROMETHEUS_ENABLED": "false"
  "OKTETO_INSIGHTS_ENABLED": "false"
  "OKTETO_INSIGHTS_BEARER_SECRET_NAME": "okteto-insights"
  "OKTETO_INSIGHTS_BEARER_SECRET_KEY": "bearer"
  "MAX_TERMINATION_GRACE_PERIOD_SECONDS_ENABLED":  "false"
  "OKTETO_USER_POD_AFFINITY": "true"
  "OKTETO_USER_POD_ANTI_AFFINITY": "false"
  "OKTETO_ALLOW_DAEMONSETS_FOR_USERS": "false"
  "OKTETO_DISABLE_SYSTEM_EVENTS": "false"
  "OKTETO_ALLOW_MEMBERS_SHARE_NAMESPACE": "false"
  "OKTETO_EXTRA_ROLEBINDINGS": "{}"
  "OKTETO_KUBECLIENT_HOST": ""
  "OKTETO_KUBECLIENT_INSECURE": ""
  "OKTETO_SERVICEACCOUNT_ANNOTATIONS": "{}"
  "OKTETO_SERVICEACCOUNT_LABELS": "{}"
  "OKTETO_NAMESPACE_DEV_LABEL_VALUE": "true"
  "OKTETO_NAMESPACES_PREFIX": ""
  "OKTETO_ALLOW_DEV_PUSH_TO_GLOBAL_REGISTRY": "true"
  "OKTETO_INSTALLATION_BOARD_ENABLED": "true"
  "OKTETO_WILDCARD_CERTIFICATE_CREATED": "true"
  "OKTETO_WILDCARD_CERTIFICATE_PRIVATE_CA_ENABLED": "false"
  "OKTETO_EXTERNAL_ID_MAPPING_ENABLED": "false"
  "OKTETO_EMULATE_POD_SECURITY_POLICIES": "false"
  "OKTETO_REMOTE_CREDENTIALS_CONFIG_AWS": "\"\""
  "OKTETO_REMOTE_CREDENTIALS_CONFIG_GCP": "\"\""
  "OKTETO_ALLOW_CAPABILITIES": "null"
  "OKTETO_SLEEPING_INGRESS_CLASS_ENABLED": "false"
  "OKTETO_SLEEPING_INGRESS_CLASS_NAME": "okteto-sleeping"
  "OKTETO_INGRESS_TLS_SECRET_NAME": "default-ssl-certificate-selfsigned"
  "OKTETO_KUBETOKEN_LIFETIME_SECONDS": "86400"
  "OKTETO_BUILDKIT_INGRESS_ENABLED": "true"
  "OKTETO_DAEMONSET_INSTALLED": "true"
  "GC_UP_SESSION_BY_LAST_SYNCED_FILE": "false"
  "OKTETO_BOT_USER": "okteto-bot"
  "OKTETO_RESTRICT_GROUP_USER_ROLE_BINDINGS": "false"
  "PULLSECRETS_ENABLED": "true"
  "INSTALLER_PRIORITY_CLASS_NAME": ""
  "NAMESPACE_DESTROY_ALL_PRIORITY_CLASS_NAME": ""
  "OKTETO_INSIGHTS_BUILDKIT_METRICS_ENABLED": "false"
  "OKTETO_EXTERNAL_ENDPOINTS": "[]"
  "OKTETO_INSIGHTS_EVENTS_EXPORTER_METRICS_ENABLED": "false"
---
# Source: okteto/templates/diagnostics-preflight.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: okteto-preflight
  namespace: default
  labels:
    troubleshoot.sh/kind: preflight
    app.kubernetes.io/component: "diagnostics"
    app.kubernetes.io/part-of: "okteto"
    app.kubernetes.io/name: "my-okteto-preflight"
    helm.sh/chart: okteto-1.24.2
    app.kubernetes.io/instance: my-okteto
    app.kubernetes.io/managed-by: Helm
data:
  preflight-spec: 
    |-
      apiVersion: troubleshoot.sh/v1beta2
      kind: Preflight
      metadata:
        name: my-okteto-preflight
      spec:
        analyzers:
          - clusterVersion:
              outcomes:
                - fail:
                    when: "< 1.27.0"
                    message: Okteto requires at least Kubernetes 1.27.0
                    uri: https://www.okteto.com/docs/release-notes/
                - fail:
                    when: ">= 1.31.0"
                    message: Okteto requires a Kubernetes version between 1.27 and 1.30
                    uri: https://www.okteto.com/docs/release-notes/
                - pass:
                    message: Your cluster version meets the Okteto requirements
---
# Source: okteto/templates/diagnostics-redactor.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: okteto-redactor
  namespace: default
  labels:
    troubleshoot.sh/kind: support-bundle
    app.kubernetes.io/component: "diagnostics"
    app.kubernetes.io/part-of: "okteto"
    app.kubernetes.io/name: "my-okteto-redactor"
    helm.sh/chart: okteto-1.24.2
    app.kubernetes.io/instance: my-okteto
    app.kubernetes.io/managed-by: Helm
data:
  redactor-spec: 
    |-
      apiVersion: troubleshoot.sh/v1beta2
      kind: Redactor
      metadata:
        name: my-okteto-redactor
      spec:
        redactors:
          - name: "redact helm values output"
            fileSelector:
              file: "**/helm-values-*/**"
            removals:
              yamlPath:
              - "license"
              - "auth.*.clientSecret"
              - "auth.*.clientId"
              - "auth.token.adminToken"
              - "cookie.secret"
              - "cookie.hash"
              - "github.appId"
              - "github.appPrivateKey"
              - "github.clientId"
              - "github.clientSecret"
              - "privateEndpoints.clientSecret"
              - "privateEndpoints.clientID"
---
# Source: okteto/templates/diagnostics-support-bundle.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: okteto-support-bundle
  namespace: default
  labels:
    troubleshoot.sh/kind: support-bundle
    app.kubernetes.io/component: "diagnostics"
    app.kubernetes.io/part-of: "okteto"
    app.kubernetes.io/name: "my-okteto-support-bundle"
    helm.sh/chart: okteto-1.24.2
    app.kubernetes.io/instance: my-okteto
    app.kubernetes.io/managed-by: Helm
data:
  support-bundle-spec: 
    "apiVersion: troubleshoot.sh/v1beta2\nkind: SupportBundle\nmetadata:\n  name: my-okteto-support-bundle\n
      \ namespace: \nspec:\n  collectors:\n    - clusterResources:\n        namespaces:\n
      \       - default\n    - certificates: \n        secrets:\n          - name: default-ssl-certificate-selfsigned\n
      \           collectorName: \"wildcard-certificate\"\n            namespaces:\n              -
      default\n          - name: default-ssl-certificate-selfsigned\n            collectorName:
      \"ingress-certificate\"\n            namespaces:\n              - default\n          -
      name: default-ssl-certificate-selfsigned\n            collectorName: \"registry-certificate\"\n
      \           namespaces:\n              - default\n          - name: default-ssl-certificate-selfsigned\n
      \           collectorName: \"buildkit-certificate\"\n            namespaces:\n              -
      default\n          - name: my-okteto-mutation-webhook\n            collectorName:
      \"webhook-certificate\"\n            namespaces:\n              - default\n          -
      name: my-okteto-regcreds\n            collectorName: \"regcreds-certificate\"\n
      \           namespaces:\n              - default\n    - logs:\n        name: api-logs\n
      \       selector:\n          - app.kubernetes.io/component=api\n    - logs:\n        name:
      daemon-logs\n        selector:\n          - app.kubernetes.io/component=daemon\n
      \   - logs:\n        name: installer-logs\n        selector:\n          - app.kubernetes.io/component=installer\n
      \         - app.kubernetes.io/part-of=okteto\n    - logs:\n        name: buildkit-logs\n
      \       selector:\n          - app.kubernetes.io/component=buildkit\n          -
      app.kubernetes.io/part-of=okteto\n    - logs:\n        name: frontend-logs\n        selector:\n
      \         - app.kubernetes.io/component=frontend\n          - app.kubernetes.io/part-of=okteto\n
      \   - logs:\n        name: ingress-nginx-logs\n        selector:\n          - app.kubernetes.io/component=controller\n
      \         - app.kubernetes.io/part-of=ingress-nginx\n    - logs:\n        name:
      okteto-nginx-logs\n        selector:\n          - app.kubernetes.io/component=controller\n
      \         - app.kubernetes.io/part-of=okteto-nginx\n    - logs:\n        name: defaultbackend-logs\n
      \       selector:\n          - app.kubernetes.io/component=defaultbackend\n          -
      app.kubernetes.io/part-of=okteto\n    - logs:\n        name: webhook-logs\n        selector:\n
      \         - app.kubernetes.io/component=webhook\n          - app.kubernetes.io/part-of=okteto\n
      \   - logs:\n        name: migration-logs\n        selector:\n          - app.kubernetes.io/component=migration\n
      \         - app.kubernetes.io/part-of=okteto\n    - logs:\n        name: private-endpoints-logs\n
      \       selector:\n          - app.kubernetes.io/component=private-endpoints\n          -
      app.kubernetes.io/part-of=okteto\n    - logs:\n        name: regcreds-logs\n        selector:\n
      \         - app.kubernetes.io/component=regcreds\n          - app.kubernetes.io/part-of=okteto\n
      \   - logs:\n        name: eventsexporter-logs\n        selector:\n          - app.kubernetes.io/component=eventsexporter\n
      \         - app.kubernetes.io/part-of=okteto\n    - secret:\n        collectorName:
      cloud-secret\n        namespace: default\n        name: okteto-cloud-secret\n    -
      helm:\n        collectorName: helm-info\n        namespace: default\n    - runPod:\n
      \       name: helm-values-computed\n        collectorName: helm-values-computed\n
      \       namespace: default\n        podSpec:\n          serviceAccountName: my-okteto\n
      \         containers:\n          - name: helm-values-computed\n            image:
      alpine/helm:3.8.0\n            args: [\"get\", \"values\", \"my-okteto\", \"--all\",
      \"-o\", \"yaml\"]\n    - runPod:\n        name: helm-values-user\n        collectorName:
      helm-values-user\n        namespace: default\n        podSpec:\n          serviceAccountName:
      my-okteto\n          containers:\n          - name: helm-values-user\n            image:
      alpine/helm:3.8.0\n            args: [\"get\", \"values\", \"my-okteto\", \"-o\",
      \"yaml\"]"
---
# Source: okteto/templates/helm-release-meta-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/name: "my-okteto"
    helm.sh/chart: okteto-1.24.2
    app.kubernetes.io/instance: my-okteto
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: "helm-release-meta"
    app.kubernetes.io/part-of: "okteto"
  name: "okteto-helm-release-meta"
  namespace: default
data:
  IsInstall: "true"
  IsUpgrade: "false"
  Name: "my-okteto"
  Namespace: "default"
  Revision: "1"
  Service: "Helm"
---
# Source: okteto/templates/registry-config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-okteto-registry-config
  labels:
    app.kubernetes.io/component: "registry"
    app.kubernetes.io/part-of: "okteto"
    app.kubernetes.io/name: "my-okteto-registry-config"
    helm.sh/chart: okteto-1.24.2
    app.kubernetes.io/instance: my-okteto
    app.kubernetes.io/managed-by: Helm
data:
  config.yml: |-
    version: 0.1
    log:
      accesslog:
        disabled: true
      fields:
        service: registry
      formatter: json
      level: info
    storage:
      cache:
        blobdescriptor: inmemory
    http:
      addr: :5000
      headers:
        X-Content-Type-Options: [nosniff]
    health:
      storagedriver:
        enabled: true
        interval: 10s
        threshold: 3
---
# Source: okteto/templates/crds/actions-crd.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
  labels:
    app.kubernetes.io/part-of: "okteto"
    app.kubernetes.io/name: actions.git.okteto.com
  name: actions.git.okteto.com
spec:
  group: git.okteto.com
  names:
    kind: Action
    listKind: ActionList
    plural: actions
    singular: action
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: Action represents a pending execution of a gitDeploy operation
        type: object
        properties:
          apiVersion:
            type: string
          kind:
            type: string
          metadata:
            type: object
          spec:
            type: object
            required:
              - pipelineName
              - operation
              - status
              - repository
            properties:
              pipelineName:
                type: string
              operation:
                type: string
              status:
                type: string
              installationID:
                type: integer
              repository:
                type: string
              fallbackRepository:
                type: string
              branch:
                type: string
              githubCommentId:
                type: string
              commitSha:
                type: string
              source:
                type: string
              belongsToPreview:
                type: boolean
              filename:
                type: string
              variables:
                type: array
                items:
                  type: object
                  required:
                    - name
                  properties:
                    name:
                      type: string
                    value:
                      type: string
              destroyVolumes:
                type: boolean
              forceDestroy:
                type: boolean
              catalogItemId:
                type: string
              labels:
                type: array
                items:
                  type: string
    served: true
    storage: true
---
# Source: okteto/templates/crds/external-resource-crd.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    "helm.sh/resource-policy": keep
  labels:
    app.kubernetes.io/part-of: "okteto"
    app.kubernetes.io/name:  externals.dev.okteto.com
  name: externals.dev.okteto.com
spec:
  group: dev.okteto.com
  names:
    kind: External
    listKind: ExternalList
    plural: externals
    singular: external
    shortNames:
    - er
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: External is the schema for the external resources which stores the needed information for each element
        type: object
        properties:
          apiVersion:
            type: string
          kind:
            type: string
          metadata:
            type: object
          spec:
            type: object
            required:
              - name
              - endpoints
            properties:
              name:
                type: string
              icon:
                type: string
                default: default
                enum:
                - container
                - dashboard
                - database
                - default
                - function
                - graph
                - storage
                - launchdarkly
                - mongodb
                - gcp
                - aws
                - okteto
              notes:
                type: object
                required:
                - path
                - markdown
                properties:
                  path:
                    type: string
                  markdown:
                    type: string
              endpoints:
                type: array
                items:
                  type: object
                  required:
                  - name
                  - url
                  properties:
                    name:
                      type: string
                    url:
                      type: string
    served: true
    storage: true
---
# Source: okteto/templates/crds/git-catalog-item-crd.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    "helm.sh/resource-policy": keep
  labels:
    app.kubernetes.io/part-of: "okteto"
    app.kubernetes.io/name: catalogitems.git.okteto.com
  name: catalogitems.git.okteto.com
spec:
  group: git.okteto.com
  names:
    kind: CatalogItem
    listKind: CatalogItemList
    plural: catalogitems
    singular: catalogitem
    shortNames:
    - ci
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: CatalogItem is the schema for the git based catalog items which stores the needed information for each element
        type: object
        properties:
          apiVersion:
            type: string
          kind:
            type: string
          metadata:
            type: object
          spec:
            type: object
            required:
              - name
              - repositoryUrl
            properties:
              name:
                type: string
              repositoryUrl:
                type: string
              branch:
                type: string
              manifestPath:
                type: string
              variables:
                type: array
                items:
                  type: object
                  required:
                    - name
                  properties:
                    name:
                      type: string
                    value:
                      type: string
    served: true
    storage: true
---
# Source: okteto/templates/crds/registry-crd.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    "helm.sh/resource-policy": keep
  labels:
    app.kubernetes.io/part-of: "okteto"
    app.kubernetes.io/name: registries.admin.okteto.com
  name: registries.admin.okteto.com
spec:
  group: admin.okteto.com
  scope: Namespaced
  names:
    kind: Registry
    listKind: RegistryList
    plural: registries
    singular: registry
    shortNames:
    - r
    - reg
  versions:
    - name: v1
      served: true
      storage: true
      additionalPrinterColumns:
        - jsonPath: .metadata.creationTimestamp
          description: CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.
          name: Age
          type: date
      schema:
        openAPIV3Schema:
          type: object
          properties:
            spec:
              type: object
              oneOf:
                - properties:
                  required:
                    - static
                - properties:
                  required:
                    - awsIamUser
                - properties:
                  required:
                    - awsIamRole
              properties:
                static:
                  type: object
                  oneOf:
                    - properties:
                      required:
                        - user
                        - passwordSecretRef
                    - properties:
                      required:
                        - userSecretRef
                        - passwordSecretRef
                  properties:
                    port:
                      type: integer
                      description: "port to be used for the registry (optional)"
                    user:
                      description: "the user used to authenticate against the registry"
                      type: string
                    userSecretRef:
                      description: "the opaque secret that holds the user used to authenticate against the registry"
                      type: object
                      required:
                      - name
                      - key
                      properties:
                        name:
                          description: "the name of the secret"
                          type: string
                        key:
                          description: "the key in the secret data from where to read the password"
                          type: string
                    passwordSecretRef:
                      description: "the opaque secret that holds the password"
                      type: object
                      required:
                      - name
                      - key
                      properties:
                        name:
                          description: "the name of the secret"
                          type: string
                        key:
                          description: "the key in the secret data from where to read the password"
                          type: string


                awsIamUser:
                  type: object
                  oneOf:
                    - properties:
                      required:
                        - accessKeyID
                        - secretAccessKeySecretRef
                    - properties:
                      required:
                        - accessKeyIDSecretRef
                        - secretAccessKeySecretRef
                  properties:
                    accessKeyID:
                      description: "the IAM user access key ID"
                      type: string
                    accessKeyIDSecretRef:
                      description: "the opaque secret that holds the access key ID"
                      type: object
                      required:
                      - name
                      - key
                      properties:
                        name:
                          description: "the name of the secret"
                          type: string
                        key:
                          description: "the key in the secret data from where to read the access key id"
                          type: string
                    secretAccessKeySecretRef:
                      description: "the opaque secret that holds the secret access key"
                      type: object
                      required:
                      - name
                      - key
                      properties:
                        name:
                          description: "the name of the secret"
                          type: string
                        key:
                          description: "the key in the secret data from where to read the secret access key"
                          type: string
                awsIamRole:
                  type: object
                  required:
                    - roleARN
                    - audience
                  properties:
                    roleARN:
                      description: "the ARN role idetifier used to exchange credentials"
                      type: string
                    audience:
                      description: "the audience for the token registry credentials"
                      type: string
status:
  acceptedNames:
    kind: Registry
    listKind: RegistryList
    plural: registries
    singular: registry
  conditions: []
  storedVersions: []
---
# Source: okteto/charts/ingress-nginx/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    helm.sh/chart: ingress-nginx-4.11.2
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/instance: my-okteto
    app.kubernetes.io/version: "1.11.2"
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/managed-by: Helm
  name: my-okteto-ingress-nginx
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
      - endpoints
      - nodes
      - pods
      - secrets
      - namespaces
    verbs:
      - list
      - watch
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - get
  - apiGroups:
      - ""
    resources:
      - services
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - networking.k8s.io
    resources:
      - ingresses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
  - apiGroups:
      - networking.k8s.io
    resources:
      - ingresses/status
    verbs:
      - update
  - apiGroups:
      - networking.k8s.io
    resources:
      - ingressclasses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - discovery.k8s.io
    resources:
      - endpointslices
    verbs:
      - list
      - watch
      - get
---
# Source: okteto/charts/okteto-nginx/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    helm.sh/chart: okteto-nginx-4.11.2
    app.kubernetes.io/name: okteto-nginx
    app.kubernetes.io/instance: my-okteto
    app.kubernetes.io/version: "1.11.2"
    app.kubernetes.io/part-of: okteto-nginx
    app.kubernetes.io/managed-by: Helm
  name: my-okteto-okteto-nginx
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
      - endpoints
      - nodes
      - pods
      - secrets
      - namespaces
    verbs:
      - list
      - watch
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - get
  - apiGroups:
      - ""
    resources:
      - services
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - networking.k8s.io
    resources:
      - ingresses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
  - apiGroups:
      - networking.k8s.io
    resources:
      - ingresses/status
    verbs:
      - update
  - apiGroups:
      - networking.k8s.io
    resources:
      - ingressclasses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - discovery.k8s.io
    resources:
      - endpointslices
    verbs:
      - list
      - watch
      - get
---
# Source: okteto/charts/ingress-nginx/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    helm.sh/chart: ingress-nginx-4.11.2
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/instance: my-okteto
    app.kubernetes.io/version: "1.11.2"
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/managed-by: Helm
  name: my-okteto-ingress-nginx
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-okteto-ingress-nginx
subjects:
  - kind: ServiceAccount
    name: my-okteto-ingress-nginx
    namespace: default
---
# Source: okteto/charts/okteto-nginx/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    helm.sh/chart: okteto-nginx-4.11.2
    app.kubernetes.io/name: okteto-nginx
    app.kubernetes.io/instance: my-okteto
    app.kubernetes.io/version: "1.11.2"
    app.kubernetes.io/part-of: okteto-nginx
    app.kubernetes.io/managed-by: Helm
  name: my-okteto-okteto-nginx
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-okteto-okteto-nginx
subjects:
  - kind: ServiceAccount
    name: my-okteto-okteto-nginx
    namespace: default
---
# Source: okteto/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-okteto-role-binding
  labels:
    app: my-okteto
    chart: "okteto-1.24.2"
    release: "my-okteto"
    heritage: "Helm"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: my-okteto
  namespace: default
---
# Source: okteto/charts/ingress-nginx/templates/controller-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    helm.sh/chart: ingress-nginx-4.11.2
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/instance: my-okteto
    app.kubernetes.io/version: "1.11.2"
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller
  name: my-okteto-ingress-nginx
  namespace: default
rules:
  - apiGroups:
      - ""
    resources:
      - namespaces
    verbs:
      - get
  - apiGroups:
      - ""
    resources:
      - configmaps
      - pods
      - secrets
      - endpoints
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - services
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - networking.k8s.io
    resources:
      - ingresses
    verbs:
      - get
      - list
      - watch
  # Omit Ingress status permissions if `--update-status` is disabled.
  - apiGroups:
      - networking.k8s.io
    resources:
      - ingresses/status
    verbs:
      - update
  - apiGroups:
      - networking.k8s.io
    resources:
      - ingressclasses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    resourceNames:
      - my-okteto-ingress-nginx-leader
    verbs:
      - get
      - update
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - create
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
  - apiGroups:
      - discovery.k8s.io
    resources:
      - endpointslices
    verbs:
      - list
      - watch
      - get
---
# Source: okteto/charts/okteto-nginx/templates/controller-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    helm.sh/chart: okteto-nginx-4.11.2
    app.kubernetes.io/name: okteto-nginx
    app.kubernetes.io/instance: my-okteto
    app.kubernetes.io/version: "1.11.2"
    app.kubernetes.io/part-of: okteto-nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller
  name: my-okteto-okteto-nginx
  namespace: default
rules:
  - apiGroups:
      - ""
    resources:
      - namespaces
    verbs:
      - get
  - apiGroups:
      - ""
    resources:
      - configmaps
      - pods
      - secrets
      - endpoints
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - services
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - networking.k8s.io
    resources:
      - ingresses
    verbs:
      - get
      - list
      - watch
  # Omit Ingress status permissions if `--update-status` is disabled.
  - apiGroups:
      - networking.k8s.io
    resources:
      - ingresses/status
    verbs:
      - update
  - apiGroups:
      - networking.k8s.io
    resources:
      - ingressclasses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    resourceNames:
      - my-okteto-okteto-nginx-leader
    verbs:
      - get
      - update
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - create
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
  - apiGroups:
      - discovery.k8s.io
    resources:
      - endpointslices
    verbs:
      - list
      - watch
      - get
---
# Source: okteto/charts/reloader/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1

kind: Role
metadata:
  annotations:
    meta.helm.sh/release-namespace: "default"
    meta.helm.sh/release-name: "my-okteto"
  labels:
    app: my-okteto-reloader
    chart: "reloader-1.0.119"
    release: "my-okteto"
    heritage: "Helm"
    app.kubernetes.io/managed-by: "Helm"
  name: my-okteto-reloader-role
  namespace: default
rules:
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - list
      - get
      - watch
  - apiGroups:
      - "apps"
    resources:
      - deployments
      - daemonsets
      - statefulsets
    verbs:
      - list
      - get
      - update
      - patch
  - apiGroups:
      - "extensions"
    resources:
      - deployments
      - daemonsets
    verbs:
      - list
      - get
      - update
      - patch
  - apiGroups:
      - "batch"
    resources:
      - cronjobs
    verbs:
      - list
      - get
  - apiGroups:
      - "batch"
    resources:
      - jobs
    verbs:
      - create
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
---
# Source: okteto/charts/ingress-nginx/templates/controller-rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    helm.sh/chart: ingress-nginx-4.11.2
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/instance: my-okteto
    app.kubernetes.io/version: "1.11.2"
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller
  name: my-okteto-ingress-nginx
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: my-okteto-ingress-nginx
subjects:
  - kind: ServiceAccount
    name: my-okteto-ingress-nginx
    namespace: default
---
# Source: okteto/charts/okteto-nginx/templates/controller-rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    helm.sh/chart: okteto-nginx-4.11.2
    app.kubernetes.io/name: okteto-nginx
    app.kubernetes.io/instance: my-okteto
    app.kubernetes.io/version: "1.11.2"
    app.kubernetes.io/part-of: okteto-nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller
  name: my-okteto-okteto-nginx
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: my-okteto-okteto-nginx
subjects:
  - kind: ServiceAccount
    name: my-okteto-okteto-nginx
    namespace: default
---
# Source: okteto/charts/reloader/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1

kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-namespace: "default"
    meta.helm.sh/release-name: "my-okteto"
  labels:
    app: my-okteto-reloader
    chart: "reloader-1.0.119"
    release: "my-okteto"
    heritage: "Helm"
    app.kubernetes.io/managed-by: "Helm"
  name: my-okteto-reloader-role-binding
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: my-okteto-reloader-role
subjects:
  - kind: ServiceAccount
    name: reloader
    namespace: default
---
# Source: okteto/charts/ingress-nginx/templates/controller-service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
  labels:
    helm.sh/chart: ingress-nginx-4.11.2
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/instance: my-okteto
    app.kubernetes.io/version: "1.11.2"
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller
  name: my-okteto-ingress-nginx-controller
  namespace: default
spec:
  type: LoadBalancer
  externalTrafficPolicy: Local
  ipFamilyPolicy: SingleStack
  ipFamilies: 
    - IPv4
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: http
      appProtocol: http
    - name: https
      port: 443
      protocol: TCP
      targetPort: https
      appProtocol: https
  selector:
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/instance: my-okteto
    app.kubernetes.io/component: controller
---
# Source: okteto/charts/okteto-nginx/templates/controller-service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
  labels:
    helm.sh/chart: okteto-nginx-4.11.2
    app.kubernetes.io/name: okteto-nginx
    app.kubernetes.io/instance: my-okteto
    app.kubernetes.io/version: "1.11.2"
    app.kubernetes.io/part-of: okteto-nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller
  name: my-okteto-okteto-nginx-controller
  namespace: default
spec:
  type: ClusterIP
  ipFamilyPolicy: SingleStack
  ipFamilies: 
    - IPv4
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: http
      appProtocol: http
    - name: https
      port: 443
      protocol: TCP
      targetPort: https
      appProtocol: https
  selector:
    app.kubernetes.io/name: okteto-nginx
    app.kubernetes.io/instance: my-okteto
    app.kubernetes.io/component: controller
---
# Source: okteto/templates/api-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: "my-okteto-api"
  labels:
    app.kubernetes.io/component: "api"
    app.kubernetes.io/part-of: "okteto"
    app.kubernetes.io/name: "my-okteto-api"
    helm.sh/chart: okteto-1.24.2
    app.kubernetes.io/instance: my-okteto
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8080
      name: api
  selector:
    app.kubernetes.io/name: "my-okteto-api"
    app.kubernetes.io/instance: my-okteto
---
# Source: okteto/templates/buildkit-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: "my-okteto-buildkit"
  labels:
    app.kubernetes.io/component: "buildkit"
    app.kubernetes.io/part-of: "okteto"
    app.kubernetes.io/name: "my-okteto-buildkit"
    helm.sh/chart: okteto-1.24.2
    app.kubernetes.io/instance: my-okteto
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  sessionAffinity: ClientIP
  
  ports:
    - port: 443
      targetPort: 1234
      name: buildkit
  selector:
    app.kubernetes.io/name: "my-okteto-buildkit-3e8d5c881f"
    app.kubernetes.io/instance: my-okteto
---
# Source: okteto/templates/defaultbackend-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: "my-okteto-ingress-nginx-defaultbackend"
  labels:
    app.kubernetes.io/component: default-backend
    app.kubernetes.io/part-of: "okteto"
    app.kubernetes.io/name: "my-okteto-defaultbackend"
    helm.sh/chart: okteto-1.24.2
    app.kubernetes.io/instance: my-okteto
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      name: http
      targetPort: 8080
  selector:
    app.kubernetes.io/name: "my-okteto-defaultbackend"
    app.kubernetes.io/instance: my-okteto
---
# Source: okteto/templates/frontend-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: "my-okteto-frontend"
  labels:
    app.kubernetes.io/component: "frontend"
    app.kubernetes.io/part-of: "okteto"
    app.kubernetes.io/name: "my-okteto-frontend"
    helm.sh/chart: okteto-1.24.2
    app.kubernetes.io/instance: my-okteto
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8080
      name: frontend
  selector:
    app.kubernetes.io/name: "my-okteto-frontend"
    app.kubernetes.io/instance: my-okteto
---
# Source: okteto/templates/kubernetes-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: "my-okteto-cluster-endpoint"
  labels:
    app.kubernetes.io/component: "cluster-endpoint"
    app.kubernetes.io/part-of: "okteto"
    app.kubernetes.io/name: "my-okteto-cluster-endpoint"
    helm.sh/chart: okteto-1.24.2
    app.kubernetes.io/instance: my-okteto
    app.kubernetes.io/managed-by: Helm
spec:
  type: ExternalName
  externalName: kubernetes.default.svc.cluster.local
  ports:
    - protocol: TCP
      port: 443
---
# Source: okteto/templates/regcreds-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: "my-okteto-regcreds"
  labels:
    app.kubernetes.io/component: "regcreds"
    app.kubernetes.io/part-of: "okteto"
    app.kubernetes.io/name: "my-okteto-regcreds"
    helm.sh/chart: okteto-1.24.2
    app.kubernetes.io/instance: my-okteto
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - targetPort: 9443
      port: 443
      name: controller
  selector:
    app.kubernetes.io/name: "my-okteto-regcreds"
    app.kubernetes.io/instance: my-okteto
---
# Source: okteto/templates/registry-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: "my-okteto-registry"
  labels:
    app.kubernetes.io/component: "registry"
    app.kubernetes.io/part-of: "okteto"
    app.kubernetes.io/name: "my-okteto-registry"
    helm.sh/chart: okteto-1.24.2
    app.kubernetes.io/instance: my-okteto
    app.kubernetes.io/managed-by: Helm
  annotations:
spec:
  type: ClusterIP
  ports:
    - port: 5000
      name: registry
  selector:
    app.kubernetes.io/name: "my-okteto-registry"
    app.kubernetes.io/instance: my-okteto
---
# Source: okteto/templates/webhook-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: "my-okteto-mutation-webhook"
  labels:
    app.kubernetes.io/component: "webhook"
    app.kubernetes.io/part-of: "okteto"
    app.kubernetes.io/name: "my-okteto-mutation-webhook"
    helm.sh/chart: okteto-1.24.2
    app.kubernetes.io/instance: my-okteto
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 443
      name: webhook
      targetPort: 443
  selector:
    app.kubernetes.io/name: "my-okteto-mutation-webhook"
    app.kubernetes.io/instance: my-okteto
---
# Source: okteto/templates/daemon.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: "my-okteto-daemon"
  labels:
    app.kubernetes.io/name: "my-okteto-daemon"
    helm.sh/chart: okteto-1.24.2
    app.kubernetes.io/component: "daemon"
    app.kubernetes.io/part-of: "okteto"
    app.kubernetes.io/instance: my-okteto
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: "my-okteto-daemon"
      app.kubernetes.io/instance: my-okteto
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 100%
  template:
    metadata:
      labels:
        app.kubernetes.io/name: "my-okteto-daemon"
        app.kubernetes.io/instance: my-okteto
        app.kubernetes.io/component: "daemon"
        app.kubernetes.io/part-of: "okteto"
      annotations:
        app.kubernetes.io/version: "my-okteto-okteto-1.24.2"
        checksum/certs: b64356369ebee4b8338bc0f04dc5f024a8660979f73e11f614341036e95b6447
    spec:
      hostPID: true
      terminationGracePeriodSeconds: 0
      serviceAccountName: my-okteto
      priorityClassName: 
      tolerations:
      
      nodeSelector:
      containers:
      - name: daemon
        image: okteto/daemon:0.13.0
        imagePullPolicy: IfNotPresent
        securityContext:
          privileged: true
        env:
          - name: UPDATE_HOSTS_DISABLED
            value: "false"
          - name: UPDATE_HOSTS_INGRESS_INTERNAL_IP
            value: "$(MY_OKTETO_INGRESS_NGINX_CONTROLLER_SERVICE_HOST)"
          - name: UPDATE_HOSTS_REGISTRY_URL
            value: "registry.localtest.me"
          - name: UPDATE_HOSTS_OKTETO_URL
            value: "okteto.localtest.me"
          - name: PRIVATE_REGISTRY_CREDENTIALS_DISABLED
            value: "true"
          - name: PRIVATE_REGISTRY_CREDENTIALS_ROOT_SECRET_NAME
            value: "my-okteto-dockerconfig-static"
          - name: PRIVATE_REGISTRY_CREDENTIALS_DESTINATION_PATH
            value: ""
          - name: PRIVATE_REGISTRY_CREDENTIALS_SECRET_NAME
            value: "my-okteto-dockerconfig"
          - name: SYSCTL_CONFIG_DISABLED
            value: "false"
          - name: SYSCTL_CONFIG_MAX_USER_WATCHES
            value: "10048576"
          - name: SYSCTL_CONFIG_MAX_MAP_COUNT
            value: "262144"
          - name: SYSCTL_CONFIG_AIO_MAX_NR
            value: "1000000"
          - name: COPY_BIN_DISABLED
            value: "true"
          - name: COPY_CLOUDBIN_DISABLED
            value: "true"
          - name: CHECK_CNI_PLUGIN_DISABLED
            value: "true"
          - name: CHECK_CNI_PLUGIN_NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: PRIVATE_CA_NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: PRIVATE_CA_REGISTRY_URL
            value: "registry.localtest.me"
          - name: PRIVATE_CA_DISABLED
            value: "false"
        volumeMounts:
          - name: hostalias
            mountPath: /etc/hosts
          - name: proc-volume
            mountPath: /proc-aux
          - name: host-etc
            mountPath: /host/etc
          - name: ca-pemstore
            mountPath: /etc/ssl/certs/okteto-private-ca.crt
            subPath: ca.crt
            readOnly: true
        resources:
            requests:
              cpu: 10m
              memory: 10Mi
      volumes:
      - name: hostalias
        hostPath:
          path: /etc/hosts
      - name: proc-volume
        hostPath:
          path: /proc
      - name: host-etc
        hostPath:
          path: /etc
      - name: ca-pemstore
        secret:
          defaultMode: 420
          secretName: default-ssl-certificate-selfsigned
---
# Source: okteto/charts/ingress-nginx/templates/controller-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    helm.sh/chart: ingress-nginx-4.11.2
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/instance: my-okteto
    app.kubernetes.io/version: "1.11.2"
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller
  name: my-okteto-ingress-nginx-controller
  namespace: default
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: ingress-nginx
      app.kubernetes.io/instance: my-okteto
      app.kubernetes.io/component: controller
  replicas: 2
  revisionHistoryLimit: 10
  minReadySeconds: 0
  template:
    metadata:
      labels:
        helm.sh/chart: ingress-nginx-4.11.2
        app.kubernetes.io/name: ingress-nginx
        app.kubernetes.io/instance: my-okteto
        app.kubernetes.io/version: "1.11.2"
        app.kubernetes.io/part-of: ingress-nginx
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: controller
    spec:
      dnsPolicy: ClusterFirst
      containers:
        - name: controller
          image: registry.k8s.io/ingress-nginx/controller-chroot:v1.11.2@sha256:21b55a2f0213a18b91612a8c0850167e00a8e34391fd595139a708f9c047e7a8
          imagePullPolicy: IfNotPresent
          lifecycle: 
            preStop:
              exec:
                command:
                - /wait-shutdown
          args: 
            - /nginx-ingress-controller
            - --publish-service=$(POD_NAMESPACE)/my-okteto-ingress-nginx-controller
            - --election-id=my-okteto-ingress-nginx-leader
            - --controller-class=k8s.io/okteto-controlplane-nginx
            - --ingress-class=okteto-controlplane-nginx
            - --configmap=$(POD_NAMESPACE)/my-okteto-ingress-nginx-controller
            - --enable-metrics=false
            - --default-backend-service=$(POD_NAMESPACE)/$(OKTETO_NAME)-ingress-nginx-defaultbackend
            - --default-ssl-certificate=$(POD_NAMESPACE)/default-ssl-certificate-selfsigned
          securityContext: 
            runAsNonRoot: true
            runAsUser: 101
            allowPrivilegeEscalation: true
            seccompProfile: 
              type: RuntimeDefault
            capabilities:
              drop:
              - ALL
              add:
              - NET_BIND_SERVICE
              - SYS_ADMIN
              - SYS_CHROOT
            readOnlyRootFilesystem: false
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: LD_PRELOAD
              value: /usr/local/lib/libmimalloc.so
            - name: OKTETO_NAME
              valueFrom:
                configMapKeyRef:
                  key: Name
                  name: okteto-helm-release-meta
          livenessProbe: 
            failureThreshold: 5
            httpGet:
              path: /healthz
              port: 10254
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          readinessProbe: 
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 10254
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
            - name: https
              containerPort: 443
              protocol: TCP
          resources: 
            requests:
              cpu: 100m
              memory: 90Mi
      nodeSelector: 
        kubernetes.io/os: linux
      affinity: 
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: dev.okteto.com/overloaded
                operator: DoesNotExist
            weight: 50
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/component
                  operator: In
                  values:
                  - controller
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - ingress-nginx
              topologyKey: kubernetes.io/hostname
            weight: 100
      serviceAccountName: my-okteto-ingress-nginx
      terminationGracePeriodSeconds: 300
---
# Source: okteto/charts/okteto-nginx/templates/controller-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    helm.sh/chart: okteto-nginx-4.11.2
    app.kubernetes.io/name: okteto-nginx
    app.kubernetes.io/instance: my-okteto
    app.kubernetes.io/version: "1.11.2"
    app.kubernetes.io/part-of: okteto-nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller
  name: my-okteto-okteto-nginx-controller
  namespace: default
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: okteto-nginx
      app.kubernetes.io/instance: my-okteto
      app.kubernetes.io/component: controller
  replicas: 2
  revisionHistoryLimit: 10
  minReadySeconds: 0
  template:
    metadata:
      labels:
        helm.sh/chart: okteto-nginx-4.11.2
        app.kubernetes.io/name: okteto-nginx
        app.kubernetes.io/instance: my-okteto
        app.kubernetes.io/version: "1.11.2"
        app.kubernetes.io/part-of: okteto-nginx
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: controller
    spec:
      dnsPolicy: ClusterFirst
      containers:
        - name: controller
          image: registry.k8s.io/ingress-nginx/controller-chroot:v1.11.2@sha256:21b55a2f0213a18b91612a8c0850167e00a8e34391fd595139a708f9c047e7a8
          imagePullPolicy: IfNotPresent
          lifecycle: 
            preStop:
              exec:
                command:
                - /wait-shutdown
          args: 
            - /nginx-ingress-controller
            - --publish-service=$(POD_NAMESPACE)/my-okteto-okteto-nginx-controller
            - --election-id=my-okteto-okteto-nginx-leader
            - --controller-class=k8s.io/okteto-ingress-nginx
            - --ingress-class=okteto-nginx
            - --configmap=$(POD_NAMESPACE)/my-okteto-okteto-nginx-controller
            - --enable-metrics=false
            - --default-backend-service=$(POD_NAMESPACE)/$(OKTETO_NAME)-ingress-nginx-defaultbackend
          securityContext: 
            runAsNonRoot: true
            runAsUser: 101
            allowPrivilegeEscalation: true
            seccompProfile: 
              type: RuntimeDefault
            capabilities:
              drop:
              - ALL
              add:
              - NET_BIND_SERVICE
              - SYS_ADMIN
              - SYS_CHROOT
            readOnlyRootFilesystem: false
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: LD_PRELOAD
              value: /usr/local/lib/libmimalloc.so
            - name: OKTETO_NAME
              valueFrom:
                configMapKeyRef:
                  key: Name
                  name: okteto-helm-release-meta
          livenessProbe: 
            failureThreshold: 5
            httpGet:
              path: /healthz
              port: 10254
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          readinessProbe: 
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 10254
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
            - name: https
              containerPort: 443
              protocol: TCP
          resources: 
            requests:
              cpu: 100m
              memory: 90Mi
      nodeSelector: 
        kubernetes.io/os: linux
      affinity: 
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: dev.okteto.com/overloaded
                operator: DoesNotExist
            weight: 50
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/component
                  operator: In
                  values:
                  - controller
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - okteto-nginx
              topologyKey: kubernetes.io/hostname
            weight: 100
      serviceAccountName: my-okteto-okteto-nginx
      terminationGracePeriodSeconds: 300
---
# Source: okteto/charts/reloader/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-namespace: "default"
    meta.helm.sh/release-name: "my-okteto"
  labels:
    app: my-okteto-reloader
    chart: "reloader-1.0.119"
    release: "my-okteto"
    heritage: "Helm"
    app.kubernetes.io/managed-by: "Helm"
    group: com.stakater.platform
    provider: stakater
    version: v1.0.119
  name: my-okteto-reloader
  namespace: default
spec:
  replicas: 1
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: my-okteto-reloader
      release: "my-okteto"
  template:
    metadata:
      labels:
        app: my-okteto-reloader
        chart: "reloader-1.0.119"
        release: "my-okteto"
        heritage: "Helm"
        app.kubernetes.io/managed-by: "Helm"
        group: com.stakater.platform
        provider: stakater
        version: v1.0.119
    spec:
      containers:
      - image: "ghcr.io/stakater/reloader:v1.0.119"
        imagePullPolicy: IfNotPresent
        name: my-okteto-reloader
        env:
        - name: KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace

        ports:
        - name: http
          containerPort: 9090
        livenessProbe:
          httpGet:
            path: /live
            port: http
          timeoutSeconds: 5
          failureThreshold: 5
          periodSeconds: 10
          successThreshold: 1
          initialDelaySeconds: 10
        readinessProbe:
          httpGet:
            path: /metrics
            port: http
          timeoutSeconds: 5
          failureThreshold: 5
          periodSeconds: 10
          successThreshold: 1
          initialDelaySeconds: 10

        securityContext:
          {}
        args:
          - "--resources-to-ignore=configMaps"
      securityContext: 
        runAsNonRoot: true
        runAsUser: 65534
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: reloader
---
# Source: okteto/templates/api-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "my-okteto-api"
  labels:
    app.kubernetes.io/component: "api"
    app.kubernetes.io/part-of: "okteto"
    app.kubernetes.io/name: "my-okteto-api"
    helm.sh/chart: okteto-1.24.2
    app.kubernetes.io/instance: my-okteto
    app.kubernetes.io/managed-by: Helm
  annotations:
    secret.reloader.stakater.com/reload: "default-ssl-certificate-selfsigned,okteto-cloud-secret"
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 0
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: "my-okteto-api"
      app.kubernetes.io/instance: my-okteto
  template:
    metadata:
      labels:
        app.kubernetes.io/name: "my-okteto-api"
        app.kubernetes.io/instance: my-okteto
        app.kubernetes.io/component: "api"
        app.kubernetes.io/part-of: "okteto"
      annotations:
        checksum/configmap: bd70de4e79fc57f9152cf57a13d8864867a239b21c406dc943f04970ffdad8a1
        checksum/secrets: 71408bd85c6f39573c64d9b48ab218c8f67961c4d8658923454ff8bd96d7caa3
    spec:
      terminationGracePeriodSeconds: 300
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: dev.okteto.com/overloaded
                operator: DoesNotExist
            weight: 50
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app.kubernetes.io/name
                      operator: In
                      values:
                      - "my-okteto-api"
                topologyKey: kubernetes.io/hostname
      serviceAccountName: my-okteto
      tolerations:
      
      nodeSelector:
      volumes:
        - name: tls-certs
          secret:
            defaultMode: 420
            secretName: default-ssl-certificate-selfsigned
        - name: ca-pemstore
          secret:
            defaultMode: 420
            secretName: default-ssl-certificate-selfsigned
      priorityClassName: 
      containers:
        - name: api
          image: okteto/backend:143246320
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          args: [ "api" ]
          env:
            - name: OKTETO_INGRESS_INTERNAL_IP
              value: "$(MY_OKTETO_INGRESS_NGINX_CONTROLLER_SERVICE_HOST)"
            - name: OKTETO_BUILDKIT_INTERNAL_IP
              value: "$(MY_OKTETO_BUILDKIT_SERVICE_HOST)"
          envFrom:
          - configMapRef:
              name: "my-okteto"
          - secretRef:
              name: my-okteto
          - secretRef:
              name: "okteto-cloud-secret"
              optional: true
          volumeMounts:
            - name: tls-certs
              mountPath: /run/secrets/tls
              readOnly: true
            - name: ca-pemstore
              mountPath: /etc/ssl/certs/okteto-private-ca.crt
              subPath: ca.crt
              readOnly: true
          readinessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 3
            periodSeconds: 3
            failureThreshold: 3
            timeoutSeconds: 10
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 3
            periodSeconds: 3
            failureThreshold: 3
            timeoutSeconds: 10
          lifecycle:
            preStop:
              exec:
                command: ["/app/bin/backend", "sleep", "--seconds", "45"]
          resources:
            limits:
              memory: 800Mi
            requests:
              cpu: 50m
              memory: 100Mi
---
# Source: okteto/templates/defaultbackend-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "my-okteto-defaultbackend"
  labels:
    app.kubernetes.io/component: default-backend
    app.kubernetes.io/part-of: "okteto"
    app.kubernetes.io/name: "my-okteto-defaultbackend"
    helm.sh/chart: okteto-1.24.2
    app.kubernetes.io/instance: my-okteto
    app.kubernetes.io/managed-by: Helm
  annotations:
    secret.reloader.stakater.com/reload: "default-ssl-certificate-selfsigned,okteto-cloud-secret"
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 0
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: "my-okteto-defaultbackend"
      app.kubernetes.io/instance: my-okteto
  template:
    metadata:
      labels:
        app.kubernetes.io/name: "my-okteto-defaultbackend"
        app.kubernetes.io/instance: my-okteto
        app.kubernetes.io/component: "defaultbackend"
        app.kubernetes.io/part-of: "okteto"
      annotations:
        checksum/configmap: bd70de4e79fc57f9152cf57a13d8864867a239b21c406dc943f04970ffdad8a1
        checksum/secrets: 71408bd85c6f39573c64d9b48ab218c8f67961c4d8658923454ff8bd96d7caa3
    spec:
      affinity:
        nodeAffinity:
          
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: dev.okteto.com/overloaded
                operator: DoesNotExist
            weight: 50
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app.kubernetes.io/name
                      operator: In
                      values:
                      - "my-okteto-defaultbackend"
                topologyKey: kubernetes.io/hostname
      serviceAccountName: my-okteto
      tolerations:
      
      nodeSelector:
      volumes:
        - name: tls-certs
          secret:
            defaultMode: 420
            secretName: default-ssl-certificate-selfsigned
        - name: ca-pemstore
          secret:
            defaultMode: 420
            secretName: default-ssl-certificate-selfsigned
      priorityClassName: 
      containers:
        - name: default-backend
          image: "okteto/backend:143246320"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          env:
          envFrom:
          - configMapRef:
              name: "my-okteto"
          - secretRef:
              name: my-okteto
          - secretRef:
              name: "okteto-cloud-secret"
              optional: true
          readinessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 3
            periodSeconds: 3
            failureThreshold: 3
            timeoutSeconds: 10
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 3
            periodSeconds: 3
            failureThreshold: 3
            timeoutSeconds: 10
          resources:
            {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 65534
---
# Source: okteto/templates/frontend-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "my-okteto-frontend"
  labels:
    app.kubernetes.io/component: "frontend"
    app.kubernetes.io/part-of: "okteto"
    app.kubernetes.io/name: "my-okteto-frontend"
    helm.sh/chart: okteto-1.24.2
    app.kubernetes.io/instance: my-okteto
    app.kubernetes.io/managed-by: Helm
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 0
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: "my-okteto-frontend"
      app.kubernetes.io/instance: my-okteto
  template:
    metadata:
      labels:
        app.kubernetes.io/name: "my-okteto-frontend"
        app.kubernetes.io/instance: my-okteto
        app.kubernetes.io/component: "frontend"
        app.kubernetes.io/part-of: "okteto"
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: dev.okteto.com/overloaded
                operator: DoesNotExist
            weight: 50
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app.kubernetes.io/name
                      operator: In
                      values:
                        - "my-okteto-frontend"
                topologyKey: kubernetes.io/hostname
      serviceAccountName: default
      priorityClassName: 
      tolerations:
      
      nodeSelector:
      containers:
        - name: frontend
          image: okteto/frontend:143246320
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          env:
            - name: THEME_PRIMARY
              value: 
            - name: THEME_SECONDARY
              value: 
            - name: THEME_LOGO
              value: 
            - name: OKTETO_CHART_VERSION
              value: 1.24.2
            - name: OKTETO_AUTH_TOKEN
              value: "true"
            - name: MIXPANEL_TOKEN
              value: 
          readinessProbe:
            httpGet:
              path: /index.html
              port: 8080
            initialDelaySeconds: 3
            periodSeconds: 3
            failureThreshold: 1
          lifecycle:
            preStop:
              exec:
                command: ["/bin/sleep", "45"]
          resources:
            requests:
              cpu: 10m
              memory: 10Mi
---
# Source: okteto/templates/regcreds.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "my-okteto-regcreds"
  labels:
    app.kubernetes.io/component: "regcreds"
    app.kubernetes.io/part-of: "okteto"
    app.kubernetes.io/name: "my-okteto-regcreds"
    helm.sh/chart: okteto-1.24.2
    app.kubernetes.io/instance: my-okteto
    app.kubernetes.io/managed-by: Helm
  annotations:
    secret.reloader.stakater.com/reload: "my-okteto-regcreds,okteto-cloud-secret"
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 0
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: "my-okteto-regcreds"
      app.kubernetes.io/instance: my-okteto
  template:
    metadata:
      labels:
        app.kubernetes.io/name: "my-okteto-regcreds"
        app.kubernetes.io/instance: my-okteto
        app.kubernetes.io/component: "regcreds"
        app.kubernetes.io/part-of: "okteto"
      annotations:
        checksum/configmap: bd70de4e79fc57f9152cf57a13d8864867a239b21c406dc943f04970ffdad8a1
        checksum/secrets: 71408bd85c6f39573c64d9b48ab218c8f67961c4d8658923454ff8bd96d7caa3
    spec:
      terminationGracePeriodSeconds: 300
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: dev.okteto.com/overloaded
                operator: DoesNotExist
            weight: 50
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app.kubernetes.io/name
                      operator: In
                      values:
                      - "my-okteto-regcreds"
                topologyKey: kubernetes.io/hostname
      serviceAccountName: my-okteto
      tolerations:
      
      nodeSelector:
      volumes:
        - name: tls-certs
          secret:
            defaultMode: 420
            secretName: my-okteto-regcreds
      priorityClassName: 
      containers:
        - name: controller
          image: okteto/backend:143246320
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8081
              protocol: TCP
          args: [ "regcreds" ]
          volumeMounts:
            - name: tls-certs
              mountPath: /run/secrets/tls
              readOnly: true
          env:
            - name: DEBUG
              value: "false"
            - name: PORT
              value: "8081"
          envFrom:
          - configMapRef:
              name: "my-okteto"
          - secretRef:
              name: my-okteto
          - secretRef:
              name: "okteto-cloud-secret"
              optional: true
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8081
            initialDelaySeconds: 3
            periodSeconds: 3
            failureThreshold: 3
            timeoutSeconds: 10
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8081
            initialDelaySeconds: 3
            periodSeconds: 3
            failureThreshold: 3
            timeoutSeconds: 10
          resources:
            
            limits:
              memory: 800Mi
            requests:
              cpu: 50m
              memory: 100Mi
---
# Source: okteto/templates/registry-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "my-okteto-registry"
  labels:
    app.kubernetes.io/component: "registry"
    app.kubernetes.io/part-of: "okteto"
    app.kubernetes.io/name: "my-okteto-registry"
    helm.sh/chart: okteto-1.24.2
    app.kubernetes.io/instance: my-okteto
    app.kubernetes.io/managed-by: Helm
  annotations:
    secret.reloader.stakater.com/reload: "default-ssl-certificate-selfsigned,okteto-cloud-secret"
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 0
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: "my-okteto-registry"
      app.kubernetes.io/instance: my-okteto
  template:
    metadata:
      labels:
        app.kubernetes.io/name: "my-okteto-registry"
        app.kubernetes.io/instance: my-okteto
        app.kubernetes.io/component: "registry"
        app.kubernetes.io/part-of: "okteto"
      annotations:
        checksum/config: 2bf9118a0ff4a9edc0d0b0b1453b734ee7f32351d2057be73e2d3ebb4cb48942
        checksum/secret: 45fe8ca29bc279bdbd339e4c3218c1aaf4eec99932d3e0d1f73d74adc98ad973
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: dev.okteto.com/overloaded
                operator: DoesNotExist
            weight: 50
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app.kubernetes.io/name
                      operator: In
                      values:
                        - "my-okteto-registry"
                topologyKey: kubernetes.io/hostname
      serviceAccountName: "my-okteto-registry"
      tolerations:
      
      nodeSelector:
      volumes:
        - name: data
          emptyDir: {}
        - name: config
          configMap:
            name: my-okteto-registry-config
        - name: tls-certs
          secret:
            defaultMode: 420
            secretName: default-ssl-certificate-selfsigned
      priorityClassName: 
      containers:
        - name: registry
          image: okteto/registry:75b5eee
          imagePullPolicy: IfNotPresent
          command:
          - sh
          - -c
          - "echo $OKTETO_INGRESS_INTERNAL_IP okteto.localtest.me > /etc/hosts && \
          /bin/registry serve /etc/docker/registry/config.yml"
          ports:
            - name: registry
              containerPort: 5000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: 5000
          readinessProbe:
            httpGet:
              path: /
              port: 5000
          lifecycle:
            preStop:
              exec:
                command: ["/bin/sleep", "45"]
          env:
            - name: OKTETO_INGRESS_INTERNAL_IP
              value: "$(MY_OKTETO_INGRESS_NGINX_CONTROLLER_SERVICE_HOST)"
            - name: REGISTRY_HTTP_SECRET
              valueFrom:
                secretKeyRef:
                  name: my-okteto-registry-http-secret
                  key: haShared
            - name: REGISTRY_STORAGE_DELETE_ENABLED
              value: "true"
            - name: REGISTRY_AUTH_TOKEN_REALM
              value: "https://okteto.localtest.me/auth/registry"
            - name: REGISTRY_AUTH_TOKEN_SERVICE
              value: "okteto-registry"
            - name: REGISTRY_AUTH_TOKEN_ISSUER
              value: "okteto-registry"
            - name: REGISTRY_AUTH_TOKEN_ROOTCERTBUNDLE
              value: "/run/secrets/tls/tls.crt"
            - name: REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY
              value: "/var/lib/registry"
          volumeMounts:
            - name: config
              mountPath: "/etc/docker/registry"
              readOnly: true
            - name: tls-certs
              mountPath: /run/secrets/tls
              readOnly: true
            - name: data
              mountPath: /var/lib/registry/
          resources:
            requests:
              cpu: 10m
              memory: 100Mi
---
# Source: okteto/templates/webhook-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "my-okteto-mutation-webhook"
  labels:
    app.kubernetes.io/component: "webhook"
    app.kubernetes.io/part-of: "okteto"
    app.kubernetes.io/name: "my-okteto-mutation-webhook"
    helm.sh/chart: okteto-1.24.2
    app.kubernetes.io/instance: my-okteto
    app.kubernetes.io/managed-by: Helm
  annotations:
    secret.reloader.stakater.com/reload: "my-okteto-mutation-webhook,okteto-cloud-secret"
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 0
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: "my-okteto-mutation-webhook"
      app.kubernetes.io/instance: my-okteto
  template:
    metadata:
      labels:
        app.kubernetes.io/name: "my-okteto-mutation-webhook"
        app.kubernetes.io/instance: my-okteto
        app.kubernetes.io/component: "webhook"
        app.kubernetes.io/part-of: "okteto"
      annotations:
        checksum/configmap: bd70de4e79fc57f9152cf57a13d8864867a239b21c406dc943f04970ffdad8a1
        checksum/secrets: 8d05d79e15e9b10abc6074ca7c0c1802826ff23d6b656e4ab0f4561fcd92d20d
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: dev.okteto.com/overloaded
                operator: DoesNotExist
            weight: 50
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app.kubernetes.io/name
                      operator: In
                      values:
                        - "my-okteto-mutation-webhook"
                topologyKey: kubernetes.io/hostname
      serviceAccountName: my-okteto
      tolerations:
      
      nodeSelector:
      volumes:
        - name: webhook-tls-certs
          secret:
            defaultMode: 420
            secretName: my-okteto-mutation-webhook
      hostNetwork: false
      priorityClassName: 
      containers:
        - name: server
          image: okteto/backend:143246320
          imagePullPolicy: IfNotPresent
          ports:
            - name: https
              containerPort: 443
            - name: http
              containerPort: 8080
          args: [ "webhook" ]
          env:
            - name: OKTETO_INGRESS_INTERNAL_IP
              value: "$(MY_OKTETO_INGRESS_NGINX_CONTROLLER_SERVICE_HOST)"
            - name: OKTETO_BUILDKIT_INTERNAL_IP
              value: "$(MY_OKTETO_BUILDKIT_SERVICE_HOST)"
            - name: PORT
              value: "443"
          envFrom:
          - configMapRef:
              name: "my-okteto"
          - secretRef:
              name: my-okteto
          - secretRef:
              name: "okteto-cloud-secret"
              optional: true
          volumeMounts:
            - name: webhook-tls-certs
              mountPath: /run/secrets/tls
              readOnly: true
          readinessProbe:
            httpGet:
              scheme: HTTPS
              path: /readiness
              port: 443
            initialDelaySeconds: 3
            periodSeconds: 10
            failureThreshold: 3
          livenessProbe:
            httpGet:
              scheme: HTTP
              path: /healthz
              port: http
            initialDelaySeconds: 3
            periodSeconds: 3
            failureThreshold: 3
            timeoutSeconds: 10
          resources:
            requests:
              cpu: 10m
              memory: 10Mi
---
# Source: okteto/templates/buildkit-statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: "my-okteto-buildkit-3e8d5c881f"
  labels:
    app.kubernetes.io/component: "buildkit"
    app.kubernetes.io/part-of: "okteto"
    app.kubernetes.io/name: "my-okteto-buildkit-3e8d5c881f"
    helm.sh/chart: okteto-1.24.2
    app.kubernetes.io/instance: my-okteto
    app.kubernetes.io/managed-by: Helm
  annotations:
    secret.reloader.stakater.com/reload: "default-ssl-certificate-selfsigned"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: "my-okteto-buildkit-3e8d5c881f"
      app.kubernetes.io/instance: my-okteto
  serviceName: my-okteto-buildkit
  podManagementPolicy: OrderedReady
  template:
    metadata:
      labels:
        app.kubernetes.io/name: "my-okteto-buildkit-3e8d5c881f"
        app.kubernetes.io/instance: my-okteto
        app.kubernetes.io/component: "buildkit"
        app.kubernetes.io/part-of: "okteto"
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: dev.okteto.com/overloaded
                operator: DoesNotExist
            weight: 50
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app.kubernetes.io/name
                      operator: In
                      values:
                        - "my-okteto-buildkit-3e8d5c881f"
                topologyKey: kubernetes.io/hostname
      serviceAccountName: "okteto-buildkit"
      tolerations:
      
      nodeSelector:
      volumes:
        - name: tls-certs
          secret:
            defaultMode: 420
            secretName: default-ssl-certificate-selfsigned
        - name: ca-pemstore
          secret:
            defaultMode: 420
            secretName: default-ssl-certificate-selfsigned
        - name: storage
          emptyDir:
            sizeLimit: 12Gi
        - name: host-volume
          emptyDir: {}
      priorityClassName: 
      initContainers:
      - name: etc-hosts
        image: okteto/buildkit:v0.15.2-okteto2
        imagePullPolicy: IfNotPresent
        command: [sh, -c, touch /data/hosts]
        volumeMounts:
        - name: host-volume
          mountPath: /data
      containers:
      - name: buildkitd
        image: okteto/buildkit:v0.15.2-okteto2
        imagePullPolicy: IfNotPresent
        command:
          - /usr/bin/start.sh
        env:
          - name: OKTETO_BUILDKITD_LOCAL_URL
            value: local-buildkitd.localtest.me
          - name: OKTETO_INGRESS_INTERNAL_IP
            value: "$(MY_OKTETO_INGRESS_NGINX_CONTROLLER_SERVICE_HOST)"
          - name: PUBLIC_URL
            value: "okteto.localtest.me"
          - name: REGISTRY_URL
            value: "registry.localtest.me"
          - name: STORAGE
            value: "10000"
        ports:
        - containerPort: 1234
          protocol: TCP
        securityContext:
          privileged: true
        volumeMounts:
          - name: "storage"
            subPath: data
            mountPath: /var/lib/buildkit
          - name: tls-certs
            mountPath: /run/secrets/tls
            readOnly: true
          - name: ca-pemstore
            mountPath: /etc/ssl/certs/okteto-private-ca.crt
            subPath: ca.crt
            readOnly: true
          - name: host-volume
            mountPath: /etc/hosts
            subPath: hosts
        resources:
          
          limits:
            memory: 12Gi
          requests:
            cpu: 1
            memory: 4Gi
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
---
# Source: okteto/templates/gc-cronjob.yaml
apiVersion: batch/v1
kind: CronJob
metadata:
  name: "my-okteto-gc"
  labels:
    app.kubernetes.io/component: "gc"
    app.kubernetes.io/part-of: "okteto"
    app.kubernetes.io/name: "my-okteto-gc"
    helm.sh/chart: okteto-1.24.2
    app.kubernetes.io/instance: my-okteto
    app.kubernetes.io/managed-by: Helm
spec:
  concurrencyPolicy: Forbid
  startingDeadlineSeconds: 120
  schedule: "@hourly"
  jobTemplate:
    metadata:
      labels:
        app.kubernetes.io/component: "gc"
        app.kubernetes.io/part-of: "okteto"
    spec:
      activeDeadlineSeconds: 3300
      template:
        metadata:
          labels:
            app.kubernetes.io/component: "gc"
            app.kubernetes.io/part-of: "okteto"
        spec:
          affinity:
            nodeAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
              - preference:
                  matchExpressions:
                  - key: dev.okteto.com/overloaded
                    operator: DoesNotExist
                weight: 50
          serviceAccountName: my-okteto
          tolerations:
          
          nodeSelector:
          volumes:
          - name: tls-certs
            secret:
              defaultMode: 420
              secretName: default-ssl-certificate-selfsigned
          restartPolicy: Never
          containers:
            - name: gc
              image: okteto/backend:143246320
              imagePullPolicy: IfNotPresent
              args: [ "gc" ]
              env:
                - name: OKTETO_INGRESS_INTERNAL_IP
                  value: "$(MY_OKTETO_INGRESS_NGINX_CONTROLLER_SERVICE_HOST)"
                - name: OKTETO_BUILDKIT_INTERNAL_IP
                  value: "$(MY_OKTETO_BUILDKIT_SERVICE_HOST)"
              envFrom:
                - configMapRef:
                    name: "my-okteto"
                - secretRef:
                    name: my-okteto
                - secretRef:
                    name: "okteto-cloud-secret"
                    optional: true
              volumeMounts:
                - name: tls-certs
                  mountPath: /run/secrets/tls
                  readOnly: true
          priorityClassName:
---
# Source: okteto/templates/installer-checker.yaml
apiVersion: batch/v1
kind: CronJob
metadata:
  name: "my-okteto-installer-checker"
  labels:
    app.kubernetes.io/component: "installer-checker"
    app.kubernetes.io/part-of: "okteto"
    app.kubernetes.io/name: "my-okteto-installer-checker"
    helm.sh/chart: okteto-1.24.2
    app.kubernetes.io/instance: my-okteto
    app.kubernetes.io/managed-by: Helm
spec:
  schedule: "*/5 * * * *"
  jobTemplate:
    metadata:
      labels:
        app.kubernetes.io/component: "installer-checker"
        app.kubernetes.io/part-of: "okteto"
    spec:
      template:
        metadata:
          labels:
            app.kubernetes.io/component: "installer-checker"
            app.kubernetes.io/part-of: "okteto"
        spec:
          affinity:
            nodeAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
              - preference:
                  matchExpressions:
                  - key: dev.okteto.com/overloaded
                    operator: DoesNotExist
                weight: 50
          serviceAccountName: my-okteto
          priorityClassName: 
          tolerations:
          
          nodeSelector:
          restartPolicy: Never
          containers:
            - name: installer-checker
              image: okteto/backend:143246320
              imagePullPolicy: IfNotPresent
              args: [ "installer-checker" ]
              envFrom:
              - configMapRef:
                  name: "my-okteto"
              - secretRef:
                  name: my-okteto
              - secretRef:
                  name: "okteto-cloud-secret"
                  optional: true
---
# Source: okteto/templates/namespace-destroy-all-checker-cronjob.yaml
apiVersion: batch/v1
kind: CronJob
metadata:
  name: "my-okteto-destroy-all-checker"
  labels:
    app.kubernetes.io/component: "namespace-destroy-all"
    app.kubernetes.io/part-of: "okteto"
    app.kubernetes.io/name: "my-okteto-destroy-all-checker"
    helm.sh/chart: okteto-1.24.2
    app.kubernetes.io/instance: my-okteto
    app.kubernetes.io/managed-by: Helm
spec:
  concurrencyPolicy: Forbid
  startingDeadlineSeconds: 120
  schedule: "*/3 * * * *"
  jobTemplate:
    metadata:
      labels:
        app.kubernetes.io/component: "namespace-destroy-all"
        app.kubernetes.io/part-of: "okteto"
    spec:
      activeDeadlineSeconds: 120
      template:
        metadata:
          labels:
            app.kubernetes.io/component: "namespace-destroy-all"
            app.kubernetes.io/part-of: "okteto"
        spec:
          affinity:
            nodeAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
              - preference:
                  matchExpressions:
                  - key: dev.okteto.com/overloaded
                    operator: DoesNotExist
                weight: 50
          serviceAccountName: my-okteto
          tolerations:
          
          nodeSelector:
          restartPolicy: Never
          priorityClassName: 
          containers:
            - name: checker
              image: "okteto/backend:143246320"
              imagePullPolicy: IfNotPresent
              args: [ "check-namespace-destroy-all"]
              envFrom:
                - configMapRef:
                    name: "my-okteto"
---
# Source: okteto/templates/telemetry-cronjob.yaml
apiVersion: batch/v1
kind: CronJob
metadata:
  name: "my-okteto-telemetry"
  labels:
    app.kubernetes.io/component: "telemetry"
    app.kubernetes.io/part-of: "okteto"
    app.kubernetes.io/name: "my-okteto-telemetry"
    helm.sh/chart: okteto-1.24.2
    app.kubernetes.io/instance: my-okteto
    app.kubernetes.io/managed-by: Helm
spec:
  schedule: "@daily"
  jobTemplate:
    metadata:
      labels:
        app.kubernetes.io/component: "telemetry"
        app.kubernetes.io/part-of: "okteto"
        app.kubernetes.io/instance: my-okteto
        app.kubernetes.io/managed-by: Helm
    spec:
      template:
        metadata:
          labels:
            app.kubernetes.io/component: "telemetry"
            app.kubernetes.io/part-of: "okteto"
            app.kubernetes.io/instance: my-okteto
            app.kubernetes.io/managed-by: Helm
        spec:
          affinity:
            nodeAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
              - preference:
                  matchExpressions:
                  - key: dev.okteto.com/overloaded
                    operator: DoesNotExist
                weight: 50
          serviceAccountName: my-okteto
          priorityClassName: 
          tolerations:
          
          nodeSelector:
          restartPolicy: Never
          containers:
            - name: telemetry
              image: okteto/backend:143246320
              imagePullPolicy: IfNotPresent
              args: [ "telemetry" ]
              envFrom:
                - configMapRef:
                    name: "my-okteto"
                - secretRef:
                    name: my-okteto
                - secretRef:
                    name: "okteto-cloud-secret"
                    optional: true
              resources:
                requests:
                  cpu: 10m
                  memory: 100Mi
---
# Source: okteto/charts/ingress-nginx/templates/controller-ingressclass.yaml
apiVersion: networking.k8s.io/v1
kind: IngressClass
metadata:
  labels:
    helm.sh/chart: ingress-nginx-4.11.2
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/instance: my-okteto
    app.kubernetes.io/version: "1.11.2"
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller
  name: okteto-controlplane-nginx
spec:
  controller: k8s.io/okteto-controlplane-nginx
---
# Source: okteto/charts/okteto-nginx/templates/controller-ingressclass.yaml
apiVersion: networking.k8s.io/v1
kind: IngressClass
metadata:
  labels:
    helm.sh/chart: okteto-nginx-4.11.2
    app.kubernetes.io/name: okteto-nginx
    app.kubernetes.io/instance: my-okteto
    app.kubernetes.io/version: "1.11.2"
    app.kubernetes.io/part-of: okteto-nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller
  name: okteto-nginx
spec:
  controller: k8s.io/okteto-ingress-nginx
---
# Source: okteto/templates/buildkit-ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: my-okteto-buildkit
  labels:
    app.kubernetes.io/name: my-okteto-buildkit
    helm.sh/chart: okteto-1.24.2
    app.kubernetes.io/instance: my-okteto
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "okteto"
    app.kubernetes.io/component: "buildkit"
  annotations:
    nginx.ingress.kubernetes.io/backend-protocol: "GRPCS"
    nginx.ingress.kubernetes.io/configuration-snippet: "grpc_intercept_errors off;\ngrpc_buffer_size 64k;\n"
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "1800"
    nginx.ingress.kubernetes.io/service-upstream: "true"
spec:
  ingressClassName: okteto-controlplane-nginx
  tls:
  - hosts:
    - buildkit.localtest.me
    secretName: default-ssl-certificate-selfsigned
  rules:
    - host: buildkit.localtest.me
      http:
        paths:
          - path: "/"
            pathType: Prefix
            backend:
              service:
                name: my-okteto-buildkit
                port:
                  number: 443
---
# Source: okteto/templates/ingress-wildcard.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: my-okteto-wildcard
  labels:
    app.kubernetes.io/name: okteto
    helm.sh/chart: okteto-1.24.2
    app.kubernetes.io/instance: my-okteto
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "okteto"
    app.kubernetes.io/component: "api"
  annotations:
    nginx.ingress.kubernetes.io/proxy-ssl-server-name: "on"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    nginx.ingress.kubernetes.io/proxy-body-size: "60M"
spec:
  ingressClassName: okteto-controlplane-nginx
  tls:
  - hosts:
    - "*.localtest.me"
    secretName: default-ssl-certificate-selfsigned
  rules:
    - host: "*.localtest.me"
      http:
        paths:
          - path: "/"
            pathType: Prefix
            backend:
              service:
                name: my-okteto-okteto-nginx-controller
                port:
                  number: 443
---
# Source: okteto/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: my-okteto
  labels:
    app.kubernetes.io/name: okteto
    helm.sh/chart: okteto-1.24.2
    app.kubernetes.io/instance: my-okteto
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "okteto"
    app.kubernetes.io/component: "api"
  annotations:
spec:
  ingressClassName: okteto-controlplane-nginx
  tls:
  - hosts:
    - okteto.localtest.me
    secretName: default-ssl-certificate-selfsigned
  rules:
    - host: okteto.localtest.me
      http:
        paths:
          - path: "/auth"
            pathType: Prefix
            backend:
              service:
                name: my-okteto-api
                port:
                  number: 8080
          - path: /healthz
            pathType: Prefix
            backend:
              service:
                name: my-okteto-api
                port:
                  number: 8080
          - path: /graphql
            pathType: Prefix
            backend:
              service:
                name: my-okteto-api
                port:
                  number: 8080
          - path: /deploy
            pathType: Prefix
            backend:
              service:
                name: my-okteto-api
                port:
                  number: 8080
          - path: /sse
            pathType: Prefix
            backend:
              service:
                name: my-okteto-api
                port:
                  number: 8080
          - path: /auth/kubetoken
            pathType: Prefix
            backend:
              service:
                name: my-okteto-api
                port:
                  number: 8080
          - path: /clusterinfo
            pathType: Prefix
            backend:
              service:
                name: my-okteto-api
                port:
                  number: 8080
          - path: "/"
            pathType: Prefix
            backend:
              service:
                name: my-okteto-frontend
                port:
                  number: 8080
---
# Source: okteto/templates/kubernetes-ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: my-okteto-cluster-endpoint
  labels:
    app.kubernetes.io/name: my-okteto-cluster-endpoint
    helm.sh/chart: okteto-1.24.2
    app.kubernetes.io/instance: my-okteto
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "okteto"
    app.kubernetes.io/component: "cluster-endpoint"
  annotations:
    nginx.ingress.kubernetes.io/proxy-ssl-server-name: "on"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
spec:
  ingressClassName: okteto-controlplane-nginx
  tls:
  - hosts:
    - "kubernetes.localtest.me"
    secretName: default-ssl-certificate-selfsigned
  rules:
    - host: "kubernetes.localtest.me"
      http:
        paths:
          - path: "/"
            pathType: Prefix
            backend:
              service:
                name: my-okteto-cluster-endpoint
                port:
                  number: 443
---
# Source: okteto/templates/registry-ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: my-okteto-registry
  labels:
    app.kubernetes.io/name: my-okteto-registry
    helm.sh/chart: okteto-1.24.2
    app.kubernetes.io/instance: my-okteto
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "okteto"
    app.kubernetes.io/component: "registry"
  annotations:
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
spec:
  ingressClassName: okteto-controlplane-nginx
  tls:
  - hosts:
    - registry.localtest.me
    secretName: default-ssl-certificate-selfsigned
  rules:
    - host: registry.localtest.me
      http:
        paths:
          - path: "/"
            pathType: Prefix
            backend:
              service:
                name: my-okteto-registry
                port:
                  number: 5000
---
# Source: okteto/templates/webhook.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: "my-okteto-mutation-webhook"
  labels:
    app.kubernetes.io/name: "my-okteto-mutation-webhook"
    helm.sh/chart: okteto-1.24.2
    app.kubernetes.io/instance: my-okteto
    app.kubernetes.io/managed-by: Helm
webhooks:
  - name: ingress.webhook.okteto.com
    admissionReviewVersions: ["v1beta1"]
    failurePolicy: Fail
    sideEffects: NoneOnDryRun
    timeoutSeconds: 30
    clientConfig:
      service:
        name: "my-okteto-mutation-webhook"
        path: "/mutate/ingress"
        namespace: "default"
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKakNDQWc2Z0F3SUJBZ0lSQUtTakdmRnZIMEJVMmFtbHhwdS9kb2t3RFFZSktvWklodmNOQVFFTEJRQXcKSFRFYk1Ca0dBMVVFQXhNU2IydDBaWFJ2TFdsdWRHVnlibUZzTFdOaE1CNFhEVEkwTURreE5qQTRNVEV5TkZvWApEVE0wTURreE5EQTRNVEV5TkZvd0hURWJNQmtHQTFVRUF4TVNiMnQwWlhSdkxXbHVkR1Z5Ym1Gc0xXTmhNSUlCCklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUFuOEZ4YVBYZ01aQ2VEeEpBMTQxNmhtU00KSHJLd1o1THBjNU9QRWNVdlVUMW5aSk9NOEhlaHhRSE9KbXhucXpPcjJJVURxZU5sdTIzSEY3VnhKWlBrYlYvbgo5c2poK0Y1UVFPbXVmM1JkVXoyT2hKZjZSQ0JDMy9vVkF1WWFrZ0VKQ09NbE1SbGxFMG9WSDBhbW5JUzVkQ2JmClFWeWQ5cU5WOThEcXNMMkNwemdTQTh3MkJoUXdrZXhsMVo1ZkdSR1hhYTRYZ3dvVEwzUGdLRytUWnpZbjZNWUYKZDZHYlUyanV0dElXdDhkTjNubUdTclNWMnlzeTdpak5ObVg4eDlObWZPRHVJeHMxK0x3RHZSUVg1cWxlRnZmYgptS1lNV2FiVEswMnBTSTFuQmV1ZkxJb3V1ZU80b0VESG9acVBrc0tWUVlJc1VwOWQ5bFk5K1BoN3VSRk55d0lECkFRQUJvMkV3WHpBT0JnTlZIUThCQWY4RUJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0cKQVFVRkJ3TUNNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUVGTzNuQkJkNDU5ZEFKazlEa0hscQpiZmxXNzZtc01BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQjBiZ2pyMlphWlhPTjBnMytIMnJDaWlxTjBtMmh4CldoSHZaRFFUREtERFVqbndITm5FL21xNXBqeHh3a3p2VHp0d1NoTHp6dUV4Q0VPTDRoZXZtK0gvQjQrN1FUQ2gKbGR3dytHQlN0OHlSM24yTTRNUmMzLzBHWjV3L2JSN1d3eUUya0lEaU1vempiWTJsMlV0YnZqdXFDWFlTYzFoSgorZFNEYlptdXlRZ1dZcEFESFZTbEpnOW80Q2dNRDhsQVFuQkxJV255SUlUOU1jYmFhQUplaEd5eXE5eUlxMzFRCmZhY0xRZXJveW1nWloyamxlK09WVGt6ZDJ3RUpXS2YxVk0zRk1jUzU1bTIyQ2w3ZzJEQ3lYbzNoZWovbE1GNTIKZWZKVElwelBuQlRNM3lNWkhZVVhyMTNWQzRkaSt1RGdTdlh3bVFmSnZQQTJEbFY1aWZtOEU4NlkKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==
    rules:
      - operations: [ "CREATE", "UPDATE" ]
        apiGroups: ["extensions"]
        apiVersions: ["v1beta1"]
        resources: ["ingresses"]
      - operations: [ "CREATE", "UPDATE" ]
        apiGroups: ["networking.k8s.io"]
        apiVersions: ["v1beta1", "v1"]
        resources: ["ingresses"]
    namespaceSelector:
      matchLabels:
        dev.okteto.com: "true"
  - name: service.webhook.okteto.com
    admissionReviewVersions: ["v1beta1"]
    sideEffects: NoneOnDryRun
    timeoutSeconds: 30
    failurePolicy: Fail
    clientConfig:
      service:
        name: "my-okteto-mutation-webhook"
        path: "/mutate/service"
        namespace: "default"
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKakNDQWc2Z0F3SUJBZ0lSQUtTakdmRnZIMEJVMmFtbHhwdS9kb2t3RFFZSktvWklodmNOQVFFTEJRQXcKSFRFYk1Ca0dBMVVFQXhNU2IydDBaWFJ2TFdsdWRHVnlibUZzTFdOaE1CNFhEVEkwTURreE5qQTRNVEV5TkZvWApEVE0wTURreE5EQTRNVEV5TkZvd0hURWJNQmtHQTFVRUF4TVNiMnQwWlhSdkxXbHVkR1Z5Ym1Gc0xXTmhNSUlCCklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUFuOEZ4YVBYZ01aQ2VEeEpBMTQxNmhtU00KSHJLd1o1THBjNU9QRWNVdlVUMW5aSk9NOEhlaHhRSE9KbXhucXpPcjJJVURxZU5sdTIzSEY3VnhKWlBrYlYvbgo5c2poK0Y1UVFPbXVmM1JkVXoyT2hKZjZSQ0JDMy9vVkF1WWFrZ0VKQ09NbE1SbGxFMG9WSDBhbW5JUzVkQ2JmClFWeWQ5cU5WOThEcXNMMkNwemdTQTh3MkJoUXdrZXhsMVo1ZkdSR1hhYTRYZ3dvVEwzUGdLRytUWnpZbjZNWUYKZDZHYlUyanV0dElXdDhkTjNubUdTclNWMnlzeTdpak5ObVg4eDlObWZPRHVJeHMxK0x3RHZSUVg1cWxlRnZmYgptS1lNV2FiVEswMnBTSTFuQmV1ZkxJb3V1ZU80b0VESG9acVBrc0tWUVlJc1VwOWQ5bFk5K1BoN3VSRk55d0lECkFRQUJvMkV3WHpBT0JnTlZIUThCQWY4RUJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0cKQVFVRkJ3TUNNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUVGTzNuQkJkNDU5ZEFKazlEa0hscQpiZmxXNzZtc01BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQjBiZ2pyMlphWlhPTjBnMytIMnJDaWlxTjBtMmh4CldoSHZaRFFUREtERFVqbndITm5FL21xNXBqeHh3a3p2VHp0d1NoTHp6dUV4Q0VPTDRoZXZtK0gvQjQrN1FUQ2gKbGR3dytHQlN0OHlSM24yTTRNUmMzLzBHWjV3L2JSN1d3eUUya0lEaU1vempiWTJsMlV0YnZqdXFDWFlTYzFoSgorZFNEYlptdXlRZ1dZcEFESFZTbEpnOW80Q2dNRDhsQVFuQkxJV255SUlUOU1jYmFhQUplaEd5eXE5eUlxMzFRCmZhY0xRZXJveW1nWloyamxlK09WVGt6ZDJ3RUpXS2YxVk0zRk1jUzU1bTIyQ2w3ZzJEQ3lYbzNoZWovbE1GNTIKZWZKVElwelBuQlRNM3lNWkhZVVhyMTNWQzRkaSt1RGdTdlh3bVFmSnZQQTJEbFY1aWZtOEU4NlkKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==
    rules:
      - operations: [ "CREATE", "UPDATE", "DELETE"]
        apiGroups: [""]
        apiVersions: ["v1"]
        resources: ["services"]
    namespaceSelector:
      matchLabels:
        dev.okteto.com: "true"
  - name: deployment.webhook.okteto.com
    admissionReviewVersions: ["v1beta1"]
    failurePolicy: Fail
    sideEffects: NoneOnDryRun
    timeoutSeconds: 30
    clientConfig:
      service:
        name: "my-okteto-mutation-webhook"
        path: "/mutate/deployment"
        namespace: "default"
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKakNDQWc2Z0F3SUJBZ0lSQUtTakdmRnZIMEJVMmFtbHhwdS9kb2t3RFFZSktvWklodmNOQVFFTEJRQXcKSFRFYk1Ca0dBMVVFQXhNU2IydDBaWFJ2TFdsdWRHVnlibUZzTFdOaE1CNFhEVEkwTURreE5qQTRNVEV5TkZvWApEVE0wTURreE5EQTRNVEV5TkZvd0hURWJNQmtHQTFVRUF4TVNiMnQwWlhSdkxXbHVkR1Z5Ym1Gc0xXTmhNSUlCCklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUFuOEZ4YVBYZ01aQ2VEeEpBMTQxNmhtU00KSHJLd1o1THBjNU9QRWNVdlVUMW5aSk9NOEhlaHhRSE9KbXhucXpPcjJJVURxZU5sdTIzSEY3VnhKWlBrYlYvbgo5c2poK0Y1UVFPbXVmM1JkVXoyT2hKZjZSQ0JDMy9vVkF1WWFrZ0VKQ09NbE1SbGxFMG9WSDBhbW5JUzVkQ2JmClFWeWQ5cU5WOThEcXNMMkNwemdTQTh3MkJoUXdrZXhsMVo1ZkdSR1hhYTRYZ3dvVEwzUGdLRytUWnpZbjZNWUYKZDZHYlUyanV0dElXdDhkTjNubUdTclNWMnlzeTdpak5ObVg4eDlObWZPRHVJeHMxK0x3RHZSUVg1cWxlRnZmYgptS1lNV2FiVEswMnBTSTFuQmV1ZkxJb3V1ZU80b0VESG9acVBrc0tWUVlJc1VwOWQ5bFk5K1BoN3VSRk55d0lECkFRQUJvMkV3WHpBT0JnTlZIUThCQWY4RUJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0cKQVFVRkJ3TUNNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUVGTzNuQkJkNDU5ZEFKazlEa0hscQpiZmxXNzZtc01BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQjBiZ2pyMlphWlhPTjBnMytIMnJDaWlxTjBtMmh4CldoSHZaRFFUREtERFVqbndITm5FL21xNXBqeHh3a3p2VHp0d1NoTHp6dUV4Q0VPTDRoZXZtK0gvQjQrN1FUQ2gKbGR3dytHQlN0OHlSM24yTTRNUmMzLzBHWjV3L2JSN1d3eUUya0lEaU1vempiWTJsMlV0YnZqdXFDWFlTYzFoSgorZFNEYlptdXlRZ1dZcEFESFZTbEpnOW80Q2dNRDhsQVFuQkxJV255SUlUOU1jYmFhQUplaEd5eXE5eUlxMzFRCmZhY0xRZXJveW1nWloyamxlK09WVGt6ZDJ3RUpXS2YxVk0zRk1jUzU1bTIyQ2w3ZzJEQ3lYbzNoZWovbE1GNTIKZWZKVElwelBuQlRNM3lNWkhZVVhyMTNWQzRkaSt1RGdTdlh3bVFmSnZQQTJEbFY1aWZtOEU4NlkKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==
    rules:
      - operations: [ "CREATE", "UPDATE"]
        apiGroups: ["apps"]
        apiVersions: ["v1"]
        resources: ["deployments"]
      - operations: [ "CREATE", "UPDATE"]
        apiGroups: ["extensions"]
        apiVersions: ["v1beta1"]
        resources: ["deployments"]
    namespaceSelector:
      matchLabels:
        dev.okteto.com: "true"
  - name: statefulset.webhook.okteto.com
    admissionReviewVersions: ["v1beta1"]
    failurePolicy: Fail
    sideEffects: NoneOnDryRun
    timeoutSeconds: 30
    clientConfig:
      service:
        name: "my-okteto-mutation-webhook"
        path: "/mutate/statefulset"
        namespace: "default"
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKakNDQWc2Z0F3SUJBZ0lSQUtTakdmRnZIMEJVMmFtbHhwdS9kb2t3RFFZSktvWklodmNOQVFFTEJRQXcKSFRFYk1Ca0dBMVVFQXhNU2IydDBaWFJ2TFdsdWRHVnlibUZzTFdOaE1CNFhEVEkwTURreE5qQTRNVEV5TkZvWApEVE0wTURreE5EQTRNVEV5TkZvd0hURWJNQmtHQTFVRUF4TVNiMnQwWlhSdkxXbHVkR1Z5Ym1Gc0xXTmhNSUlCCklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUFuOEZ4YVBYZ01aQ2VEeEpBMTQxNmhtU00KSHJLd1o1THBjNU9QRWNVdlVUMW5aSk9NOEhlaHhRSE9KbXhucXpPcjJJVURxZU5sdTIzSEY3VnhKWlBrYlYvbgo5c2poK0Y1UVFPbXVmM1JkVXoyT2hKZjZSQ0JDMy9vVkF1WWFrZ0VKQ09NbE1SbGxFMG9WSDBhbW5JUzVkQ2JmClFWeWQ5cU5WOThEcXNMMkNwemdTQTh3MkJoUXdrZXhsMVo1ZkdSR1hhYTRYZ3dvVEwzUGdLRytUWnpZbjZNWUYKZDZHYlUyanV0dElXdDhkTjNubUdTclNWMnlzeTdpak5ObVg4eDlObWZPRHVJeHMxK0x3RHZSUVg1cWxlRnZmYgptS1lNV2FiVEswMnBTSTFuQmV1ZkxJb3V1ZU80b0VESG9acVBrc0tWUVlJc1VwOWQ5bFk5K1BoN3VSRk55d0lECkFRQUJvMkV3WHpBT0JnTlZIUThCQWY4RUJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0cKQVFVRkJ3TUNNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUVGTzNuQkJkNDU5ZEFKazlEa0hscQpiZmxXNzZtc01BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQjBiZ2pyMlphWlhPTjBnMytIMnJDaWlxTjBtMmh4CldoSHZaRFFUREtERFVqbndITm5FL21xNXBqeHh3a3p2VHp0d1NoTHp6dUV4Q0VPTDRoZXZtK0gvQjQrN1FUQ2gKbGR3dytHQlN0OHlSM24yTTRNUmMzLzBHWjV3L2JSN1d3eUUya0lEaU1vempiWTJsMlV0YnZqdXFDWFlTYzFoSgorZFNEYlptdXlRZ1dZcEFESFZTbEpnOW80Q2dNRDhsQVFuQkxJV255SUlUOU1jYmFhQUplaEd5eXE5eUlxMzFRCmZhY0xRZXJveW1nWloyamxlK09WVGt6ZDJ3RUpXS2YxVk0zRk1jUzU1bTIyQ2w3ZzJEQ3lYbzNoZWovbE1GNTIKZWZKVElwelBuQlRNM3lNWkhZVVhyMTNWQzRkaSt1RGdTdlh3bVFmSnZQQTJEbFY1aWZtOEU4NlkKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==
    rules:
      - operations: [ "CREATE", "UPDATE"]
        apiGroups: ["apps"]
        apiVersions: ["v1"]
        resources: ["statefulsets"]
      - operations: [ "CREATE", "UPDATE"]
        apiGroups: ["extensions"]
        apiVersions: ["v1beta1"]
        resources: ["statefulsets"]
    namespaceSelector:
      matchLabels:
        dev.okteto.com: "true"
  - name: pod.webhook.okteto.com
    admissionReviewVersions: ["v1beta1"]
    failurePolicy: Fail
    sideEffects: NoneOnDryRun
    timeoutSeconds: 30
    clientConfig:
      service:
        name: "my-okteto-mutation-webhook"
        path: "/mutate/pod"
        namespace: "default"
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKakNDQWc2Z0F3SUJBZ0lSQUtTakdmRnZIMEJVMmFtbHhwdS9kb2t3RFFZSktvWklodmNOQVFFTEJRQXcKSFRFYk1Ca0dBMVVFQXhNU2IydDBaWFJ2TFdsdWRHVnlibUZzTFdOaE1CNFhEVEkwTURreE5qQTRNVEV5TkZvWApEVE0wTURreE5EQTRNVEV5TkZvd0hURWJNQmtHQTFVRUF4TVNiMnQwWlhSdkxXbHVkR1Z5Ym1Gc0xXTmhNSUlCCklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUFuOEZ4YVBYZ01aQ2VEeEpBMTQxNmhtU00KSHJLd1o1THBjNU9QRWNVdlVUMW5aSk9NOEhlaHhRSE9KbXhucXpPcjJJVURxZU5sdTIzSEY3VnhKWlBrYlYvbgo5c2poK0Y1UVFPbXVmM1JkVXoyT2hKZjZSQ0JDMy9vVkF1WWFrZ0VKQ09NbE1SbGxFMG9WSDBhbW5JUzVkQ2JmClFWeWQ5cU5WOThEcXNMMkNwemdTQTh3MkJoUXdrZXhsMVo1ZkdSR1hhYTRYZ3dvVEwzUGdLRytUWnpZbjZNWUYKZDZHYlUyanV0dElXdDhkTjNubUdTclNWMnlzeTdpak5ObVg4eDlObWZPRHVJeHMxK0x3RHZSUVg1cWxlRnZmYgptS1lNV2FiVEswMnBTSTFuQmV1ZkxJb3V1ZU80b0VESG9acVBrc0tWUVlJc1VwOWQ5bFk5K1BoN3VSRk55d0lECkFRQUJvMkV3WHpBT0JnTlZIUThCQWY4RUJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0cKQVFVRkJ3TUNNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUVGTzNuQkJkNDU5ZEFKazlEa0hscQpiZmxXNzZtc01BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQjBiZ2pyMlphWlhPTjBnMytIMnJDaWlxTjBtMmh4CldoSHZaRFFUREtERFVqbndITm5FL21xNXBqeHh3a3p2VHp0d1NoTHp6dUV4Q0VPTDRoZXZtK0gvQjQrN1FUQ2gKbGR3dytHQlN0OHlSM24yTTRNUmMzLzBHWjV3L2JSN1d3eUUya0lEaU1vempiWTJsMlV0YnZqdXFDWFlTYzFoSgorZFNEYlptdXlRZ1dZcEFESFZTbEpnOW80Q2dNRDhsQVFuQkxJV255SUlUOU1jYmFhQUplaEd5eXE5eUlxMzFRCmZhY0xRZXJveW1nWloyamxlK09WVGt6ZDJ3RUpXS2YxVk0zRk1jUzU1bTIyQ2w3ZzJEQ3lYbzNoZWovbE1GNTIKZWZKVElwelBuQlRNM3lNWkhZVVhyMTNWQzRkaSt1RGdTdlh3bVFmSnZQQTJEbFY1aWZtOEU4NlkKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==
    rules:
      - operations: [ "CREATE"]
        apiGroups: [""]
        apiVersions: ["v1"]
        resources: ["pods"]
    namespaceSelector:
      matchLabels:
        dev.okteto.com: "true"

  - name: pvc.webhook.okteto.com
    admissionReviewVersions: ["v1beta1"]
    failurePolicy: Fail
    sideEffects: NoneOnDryRun
    timeoutSeconds: 30
    clientConfig:
      service:
        name: "my-okteto-mutation-webhook"
        path: "/mutate/pvc"
        namespace: "default"
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKakNDQWc2Z0F3SUJBZ0lSQUtTakdmRnZIMEJVMmFtbHhwdS9kb2t3RFFZSktvWklodmNOQVFFTEJRQXcKSFRFYk1Ca0dBMVVFQXhNU2IydDBaWFJ2TFdsdWRHVnlibUZzTFdOaE1CNFhEVEkwTURreE5qQTRNVEV5TkZvWApEVE0wTURreE5EQTRNVEV5TkZvd0hURWJNQmtHQTFVRUF4TVNiMnQwWlhSdkxXbHVkR1Z5Ym1Gc0xXTmhNSUlCCklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUFuOEZ4YVBYZ01aQ2VEeEpBMTQxNmhtU00KSHJLd1o1THBjNU9QRWNVdlVUMW5aSk9NOEhlaHhRSE9KbXhucXpPcjJJVURxZU5sdTIzSEY3VnhKWlBrYlYvbgo5c2poK0Y1UVFPbXVmM1JkVXoyT2hKZjZSQ0JDMy9vVkF1WWFrZ0VKQ09NbE1SbGxFMG9WSDBhbW5JUzVkQ2JmClFWeWQ5cU5WOThEcXNMMkNwemdTQTh3MkJoUXdrZXhsMVo1ZkdSR1hhYTRYZ3dvVEwzUGdLRytUWnpZbjZNWUYKZDZHYlUyanV0dElXdDhkTjNubUdTclNWMnlzeTdpak5ObVg4eDlObWZPRHVJeHMxK0x3RHZSUVg1cWxlRnZmYgptS1lNV2FiVEswMnBTSTFuQmV1ZkxJb3V1ZU80b0VESG9acVBrc0tWUVlJc1VwOWQ5bFk5K1BoN3VSRk55d0lECkFRQUJvMkV3WHpBT0JnTlZIUThCQWY4RUJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0cKQVFVRkJ3TUNNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUVGTzNuQkJkNDU5ZEFKazlEa0hscQpiZmxXNzZtc01BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQjBiZ2pyMlphWlhPTjBnMytIMnJDaWlxTjBtMmh4CldoSHZaRFFUREtERFVqbndITm5FL21xNXBqeHh3a3p2VHp0d1NoTHp6dUV4Q0VPTDRoZXZtK0gvQjQrN1FUQ2gKbGR3dytHQlN0OHlSM24yTTRNUmMzLzBHWjV3L2JSN1d3eUUya0lEaU1vempiWTJsMlV0YnZqdXFDWFlTYzFoSgorZFNEYlptdXlRZ1dZcEFESFZTbEpnOW80Q2dNRDhsQVFuQkxJV255SUlUOU1jYmFhQUplaEd5eXE5eUlxMzFRCmZhY0xRZXJveW1nWloyamxlK09WVGt6ZDJ3RUpXS2YxVk0zRk1jUzU1bTIyQ2w3ZzJEQ3lYbzNoZWovbE1GNTIKZWZKVElwelBuQlRNM3lNWkhZVVhyMTNWQzRkaSt1RGdTdlh3bVFmSnZQQTJEbFY1aWZtOEU4NlkKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==
    rules:
      - operations: [ "CREATE", "DELETE", "UPDATE"]
        apiGroups: [""]
        apiVersions: ["v1"]
        resources: ["persistentvolumeclaims"]
    namespaceSelector:
      matchLabels:
        dev.okteto.com: "true"
  - name: cronjob.webhook.okteto.com
    admissionReviewVersions: ["v1", "v1beta1"]
    failurePolicy: Ignore
    sideEffects: NoneOnDryRun
    timeoutSeconds: 30
    clientConfig:
      service:
        name: "my-okteto-mutation-webhook"
        path: "/mutate/cronjob"
        namespace: "default"
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKakNDQWc2Z0F3SUJBZ0lSQUtTakdmRnZIMEJVMmFtbHhwdS9kb2t3RFFZSktvWklodmNOQVFFTEJRQXcKSFRFYk1Ca0dBMVVFQXhNU2IydDBaWFJ2TFdsdWRHVnlibUZzTFdOaE1CNFhEVEkwTURreE5qQTRNVEV5TkZvWApEVE0wTURreE5EQTRNVEV5TkZvd0hURWJNQmtHQTFVRUF4TVNiMnQwWlhSdkxXbHVkR1Z5Ym1Gc0xXTmhNSUlCCklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUFuOEZ4YVBYZ01aQ2VEeEpBMTQxNmhtU00KSHJLd1o1THBjNU9QRWNVdlVUMW5aSk9NOEhlaHhRSE9KbXhucXpPcjJJVURxZU5sdTIzSEY3VnhKWlBrYlYvbgo5c2poK0Y1UVFPbXVmM1JkVXoyT2hKZjZSQ0JDMy9vVkF1WWFrZ0VKQ09NbE1SbGxFMG9WSDBhbW5JUzVkQ2JmClFWeWQ5cU5WOThEcXNMMkNwemdTQTh3MkJoUXdrZXhsMVo1ZkdSR1hhYTRYZ3dvVEwzUGdLRytUWnpZbjZNWUYKZDZHYlUyanV0dElXdDhkTjNubUdTclNWMnlzeTdpak5ObVg4eDlObWZPRHVJeHMxK0x3RHZSUVg1cWxlRnZmYgptS1lNV2FiVEswMnBTSTFuQmV1ZkxJb3V1ZU80b0VESG9acVBrc0tWUVlJc1VwOWQ5bFk5K1BoN3VSRk55d0lECkFRQUJvMkV3WHpBT0JnTlZIUThCQWY4RUJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0cKQVFVRkJ3TUNNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUVGTzNuQkJkNDU5ZEFKazlEa0hscQpiZmxXNzZtc01BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQjBiZ2pyMlphWlhPTjBnMytIMnJDaWlxTjBtMmh4CldoSHZaRFFUREtERFVqbndITm5FL21xNXBqeHh3a3p2VHp0d1NoTHp6dUV4Q0VPTDRoZXZtK0gvQjQrN1FUQ2gKbGR3dytHQlN0OHlSM24yTTRNUmMzLzBHWjV3L2JSN1d3eUUya0lEaU1vempiWTJsMlV0YnZqdXFDWFlTYzFoSgorZFNEYlptdXlRZ1dZcEFESFZTbEpnOW80Q2dNRDhsQVFuQkxJV255SUlUOU1jYmFhQUplaEd5eXE5eUlxMzFRCmZhY0xRZXJveW1nWloyamxlK09WVGt6ZDJ3RUpXS2YxVk0zRk1jUzU1bTIyQ2w3ZzJEQ3lYbzNoZWovbE1GNTIKZWZKVElwelBuQlRNM3lNWkhZVVhyMTNWQzRkaSt1RGdTdlh3bVFmSnZQQTJEbFY1aWZtOEU4NlkKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==
    rules:
      - operations: ["UPDATE"]
        apiGroups: ["batch"]
        apiVersions: ["v1", "v1beta1"]
        resources: ["cronjobs"]
    namespaceSelector:
      matchLabels:
        dev.okteto.com: "true"
  - name: config-map.webhook.okteto.com
    admissionReviewVersions: ["v1beta1"]
    failurePolicy: Ignore
    sideEffects: NoneOnDryRun
    timeoutSeconds: 30
    clientConfig:
      service:
        name: "my-okteto-mutation-webhook"
        path: "/mutate/config-map"
        namespace: "default"
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKakNDQWc2Z0F3SUJBZ0lSQUtTakdmRnZIMEJVMmFtbHhwdS9kb2t3RFFZSktvWklodmNOQVFFTEJRQXcKSFRFYk1Ca0dBMVVFQXhNU2IydDBaWFJ2TFdsdWRHVnlibUZzTFdOaE1CNFhEVEkwTURreE5qQTRNVEV5TkZvWApEVE0wTURreE5EQTRNVEV5TkZvd0hURWJNQmtHQTFVRUF4TVNiMnQwWlhSdkxXbHVkR1Z5Ym1Gc0xXTmhNSUlCCklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUFuOEZ4YVBYZ01aQ2VEeEpBMTQxNmhtU00KSHJLd1o1THBjNU9QRWNVdlVUMW5aSk9NOEhlaHhRSE9KbXhucXpPcjJJVURxZU5sdTIzSEY3VnhKWlBrYlYvbgo5c2poK0Y1UVFPbXVmM1JkVXoyT2hKZjZSQ0JDMy9vVkF1WWFrZ0VKQ09NbE1SbGxFMG9WSDBhbW5JUzVkQ2JmClFWeWQ5cU5WOThEcXNMMkNwemdTQTh3MkJoUXdrZXhsMVo1ZkdSR1hhYTRYZ3dvVEwzUGdLRytUWnpZbjZNWUYKZDZHYlUyanV0dElXdDhkTjNubUdTclNWMnlzeTdpak5ObVg4eDlObWZPRHVJeHMxK0x3RHZSUVg1cWxlRnZmYgptS1lNV2FiVEswMnBTSTFuQmV1ZkxJb3V1ZU80b0VESG9acVBrc0tWUVlJc1VwOWQ5bFk5K1BoN3VSRk55d0lECkFRQUJvMkV3WHpBT0JnTlZIUThCQWY4RUJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0cKQVFVRkJ3TUNNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUVGTzNuQkJkNDU5ZEFKazlEa0hscQpiZmxXNzZtc01BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQjBiZ2pyMlphWlhPTjBnMytIMnJDaWlxTjBtMmh4CldoSHZaRFFUREtERFVqbndITm5FL21xNXBqeHh3a3p2VHp0d1NoTHp6dUV4Q0VPTDRoZXZtK0gvQjQrN1FUQ2gKbGR3dytHQlN0OHlSM24yTTRNUmMzLzBHWjV3L2JSN1d3eUUya0lEaU1vempiWTJsMlV0YnZqdXFDWFlTYzFoSgorZFNEYlptdXlRZ1dZcEFESFZTbEpnOW80Q2dNRDhsQVFuQkxJV255SUlUOU1jYmFhQUplaEd5eXE5eUlxMzFRCmZhY0xRZXJveW1nWloyamxlK09WVGt6ZDJ3RUpXS2YxVk0zRk1jUzU1bTIyQ2w3ZzJEQ3lYbzNoZWovbE1GNTIKZWZKVElwelBuQlRNM3lNWkhZVVhyMTNWQzRkaSt1RGdTdlh3bVFmSnZQQTJEbFY1aWZtOEU4NlkKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==
    rules:
      - operations: ["CREATE", "UPDATE"]
        apiGroups: [""]
        apiVersions: ["v1"]
        resources: ["configmaps"]
    namespaceSelector:
      matchLabels:
        dev.okteto.com: "true"
  - name: namespace.webhook.okteto.com
    admissionReviewVersions: ["v1beta1"]
    failurePolicy: Ignore
    sideEffects: NoneOnDryRun
    timeoutSeconds: 30
    clientConfig:
      service:
        name: "my-okteto-mutation-webhook"
        path: "/mutate/namespace"
        namespace: "default"
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKakNDQWc2Z0F3SUJBZ0lSQUtTakdmRnZIMEJVMmFtbHhwdS9kb2t3RFFZSktvWklodmNOQVFFTEJRQXcKSFRFYk1Ca0dBMVVFQXhNU2IydDBaWFJ2TFdsdWRHVnlibUZzTFdOaE1CNFhEVEkwTURreE5qQTRNVEV5TkZvWApEVE0wTURreE5EQTRNVEV5TkZvd0hURWJNQmtHQTFVRUF4TVNiMnQwWlhSdkxXbHVkR1Z5Ym1Gc0xXTmhNSUlCCklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUFuOEZ4YVBYZ01aQ2VEeEpBMTQxNmhtU00KSHJLd1o1THBjNU9QRWNVdlVUMW5aSk9NOEhlaHhRSE9KbXhucXpPcjJJVURxZU5sdTIzSEY3VnhKWlBrYlYvbgo5c2poK0Y1UVFPbXVmM1JkVXoyT2hKZjZSQ0JDMy9vVkF1WWFrZ0VKQ09NbE1SbGxFMG9WSDBhbW5JUzVkQ2JmClFWeWQ5cU5WOThEcXNMMkNwemdTQTh3MkJoUXdrZXhsMVo1ZkdSR1hhYTRYZ3dvVEwzUGdLRytUWnpZbjZNWUYKZDZHYlUyanV0dElXdDhkTjNubUdTclNWMnlzeTdpak5ObVg4eDlObWZPRHVJeHMxK0x3RHZSUVg1cWxlRnZmYgptS1lNV2FiVEswMnBTSTFuQmV1ZkxJb3V1ZU80b0VESG9acVBrc0tWUVlJc1VwOWQ5bFk5K1BoN3VSRk55d0lECkFRQUJvMkV3WHpBT0JnTlZIUThCQWY4RUJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0cKQVFVRkJ3TUNNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUVGTzNuQkJkNDU5ZEFKazlEa0hscQpiZmxXNzZtc01BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQjBiZ2pyMlphWlhPTjBnMytIMnJDaWlxTjBtMmh4CldoSHZaRFFUREtERFVqbndITm5FL21xNXBqeHh3a3p2VHp0d1NoTHp6dUV4Q0VPTDRoZXZtK0gvQjQrN1FUQ2gKbGR3dytHQlN0OHlSM24yTTRNUmMzLzBHWjV3L2JSN1d3eUUya0lEaU1vempiWTJsMlV0YnZqdXFDWFlTYzFoSgorZFNEYlptdXlRZ1dZcEFESFZTbEpnOW80Q2dNRDhsQVFuQkxJV255SUlUOU1jYmFhQUplaEd5eXE5eUlxMzFRCmZhY0xRZXJveW1nWloyamxlK09WVGt6ZDJ3RUpXS2YxVk0zRk1jUzU1bTIyQ2w3ZzJEQ3lYbzNoZWovbE1GNTIKZWZKVElwelBuQlRNM3lNWkhZVVhyMTNWQzRkaSt1RGdTdlh3bVFmSnZQQTJEbFY1aWZtOEU4NlkKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==
    rules:
      - operations: ["UPDATE"]
        apiGroups: [""]
        apiVersions: ["v1"]
        resources: ["namespaces"]
    namespaceSelector:
      matchLabels:
        dev.okteto.com: "true"
  - name: daemonset.webhook.okteto.com
    admissionReviewVersions: ["v1beta1"]
    failurePolicy: Ignore
    sideEffects: NoneOnDryRun
    timeoutSeconds: 30
    clientConfig:
      service:
        name: "my-okteto-mutation-webhook"
        path: "/mutate/daemonset"
        namespace: "default"
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKakNDQWc2Z0F3SUJBZ0lSQUtTakdmRnZIMEJVMmFtbHhwdS9kb2t3RFFZSktvWklodmNOQVFFTEJRQXcKSFRFYk1Ca0dBMVVFQXhNU2IydDBaWFJ2TFdsdWRHVnlibUZzTFdOaE1CNFhEVEkwTURreE5qQTRNVEV5TkZvWApEVE0wTURreE5EQTRNVEV5TkZvd0hURWJNQmtHQTFVRUF4TVNiMnQwWlhSdkxXbHVkR1Z5Ym1Gc0xXTmhNSUlCCklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUFuOEZ4YVBYZ01aQ2VEeEpBMTQxNmhtU00KSHJLd1o1THBjNU9QRWNVdlVUMW5aSk9NOEhlaHhRSE9KbXhucXpPcjJJVURxZU5sdTIzSEY3VnhKWlBrYlYvbgo5c2poK0Y1UVFPbXVmM1JkVXoyT2hKZjZSQ0JDMy9vVkF1WWFrZ0VKQ09NbE1SbGxFMG9WSDBhbW5JUzVkQ2JmClFWeWQ5cU5WOThEcXNMMkNwemdTQTh3MkJoUXdrZXhsMVo1ZkdSR1hhYTRYZ3dvVEwzUGdLRytUWnpZbjZNWUYKZDZHYlUyanV0dElXdDhkTjNubUdTclNWMnlzeTdpak5ObVg4eDlObWZPRHVJeHMxK0x3RHZSUVg1cWxlRnZmYgptS1lNV2FiVEswMnBTSTFuQmV1ZkxJb3V1ZU80b0VESG9acVBrc0tWUVlJc1VwOWQ5bFk5K1BoN3VSRk55d0lECkFRQUJvMkV3WHpBT0JnTlZIUThCQWY4RUJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0cKQVFVRkJ3TUNNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUVGTzNuQkJkNDU5ZEFKazlEa0hscQpiZmxXNzZtc01BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQjBiZ2pyMlphWlhPTjBnMytIMnJDaWlxTjBtMmh4CldoSHZaRFFUREtERFVqbndITm5FL21xNXBqeHh3a3p2VHp0d1NoTHp6dUV4Q0VPTDRoZXZtK0gvQjQrN1FUQ2gKbGR3dytHQlN0OHlSM24yTTRNUmMzLzBHWjV3L2JSN1d3eUUya0lEaU1vempiWTJsMlV0YnZqdXFDWFlTYzFoSgorZFNEYlptdXlRZ1dZcEFESFZTbEpnOW80Q2dNRDhsQVFuQkxJV255SUlUOU1jYmFhQUplaEd5eXE5eUlxMzFRCmZhY0xRZXJveW1nWloyamxlK09WVGt6ZDJ3RUpXS2YxVk0zRk1jUzU1bTIyQ2w3ZzJEQ3lYbzNoZWovbE1GNTIKZWZKVElwelBuQlRNM3lNWkhZVVhyMTNWQzRkaSt1RGdTdlh3bVFmSnZQQTJEbFY1aWZtOEU4NlkKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==
    rules:
      - operations: ["CREATE", "UPDATE"]
        apiGroups: ["apps"]
        apiVersions: ["v1"]
        resources: ["daemonsets"]
    namespaceSelector:
      matchLabels:
        dev.okteto.com: "true"
  - name: externalresources.webhook.okteto.com
    admissionReviewVersions: ["v1beta1"]
    failurePolicy: Ignore
    sideEffects: NoneOnDryRun
    timeoutSeconds: 30
    clientConfig:
      service:
        name: "my-okteto-mutation-webhook"
        path: "/mutate/externalresources"
        namespace: "default"
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKakNDQWc2Z0F3SUJBZ0lSQUtTakdmRnZIMEJVMmFtbHhwdS9kb2t3RFFZSktvWklodmNOQVFFTEJRQXcKSFRFYk1Ca0dBMVVFQXhNU2IydDBaWFJ2TFdsdWRHVnlibUZzTFdOaE1CNFhEVEkwTURreE5qQTRNVEV5TkZvWApEVE0wTURreE5EQTRNVEV5TkZvd0hURWJNQmtHQTFVRUF4TVNiMnQwWlhSdkxXbHVkR1Z5Ym1Gc0xXTmhNSUlCCklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUFuOEZ4YVBYZ01aQ2VEeEpBMTQxNmhtU00KSHJLd1o1THBjNU9QRWNVdlVUMW5aSk9NOEhlaHhRSE9KbXhucXpPcjJJVURxZU5sdTIzSEY3VnhKWlBrYlYvbgo5c2poK0Y1UVFPbXVmM1JkVXoyT2hKZjZSQ0JDMy9vVkF1WWFrZ0VKQ09NbE1SbGxFMG9WSDBhbW5JUzVkQ2JmClFWeWQ5cU5WOThEcXNMMkNwemdTQTh3MkJoUXdrZXhsMVo1ZkdSR1hhYTRYZ3dvVEwzUGdLRytUWnpZbjZNWUYKZDZHYlUyanV0dElXdDhkTjNubUdTclNWMnlzeTdpak5ObVg4eDlObWZPRHVJeHMxK0x3RHZSUVg1cWxlRnZmYgptS1lNV2FiVEswMnBTSTFuQmV1ZkxJb3V1ZU80b0VESG9acVBrc0tWUVlJc1VwOWQ5bFk5K1BoN3VSRk55d0lECkFRQUJvMkV3WHpBT0JnTlZIUThCQWY4RUJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0cKQVFVRkJ3TUNNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUVGTzNuQkJkNDU5ZEFKazlEa0hscQpiZmxXNzZtc01BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQjBiZ2pyMlphWlhPTjBnMytIMnJDaWlxTjBtMmh4CldoSHZaRFFUREtERFVqbndITm5FL21xNXBqeHh3a3p2VHp0d1NoTHp6dUV4Q0VPTDRoZXZtK0gvQjQrN1FUQ2gKbGR3dytHQlN0OHlSM24yTTRNUmMzLzBHWjV3L2JSN1d3eUUya0lEaU1vempiWTJsMlV0YnZqdXFDWFlTYzFoSgorZFNEYlptdXlRZ1dZcEFESFZTbEpnOW80Q2dNRDhsQVFuQkxJV255SUlUOU1jYmFhQUplaEd5eXE5eUlxMzFRCmZhY0xRZXJveW1nWloyamxlK09WVGt6ZDJ3RUpXS2YxVk0zRk1jUzU1bTIyQ2w3ZzJEQ3lYbzNoZWovbE1GNTIKZWZKVElwelBuQlRNM3lNWkhZVVhyMTNWQzRkaSt1RGdTdlh3bVFmSnZQQTJEbFY1aWZtOEU4NlkKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==
    rules:
      - operations: ["CREATE", "UPDATE"]
        apiGroups: ["dev.okteto.com"]
        apiVersions: ["v1"]
        resources: ["externals"]
    namespaceSelector:
      matchLabels:
        dev.okteto.com: "true"
---
# Source: okteto/templates/regcreds-webhook.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: my-okteto-regcreds
  namespace: "default"
  labels:
    app.kubernetes.io/component: "regcreds"
    app.kubernetes.io/part-of: "okteto"
    app.kubernetes.io/name: "my-okteto-regcreds"
    helm.sh/chart: okteto-1.24.2
    app.kubernetes.io/instance: my-okteto
    app.kubernetes.io/managed-by: Helm
webhooks:
  - name: pullsecret.regcreds.okteto.com
    failurePolicy: Ignore
    admissionReviewVersions: ["v1"]
    sideEffects: NoneOnDryRun
    timeoutSeconds: 30
    clientConfig:
      service:
        name: "my-okteto-regcreds"
        path: "/validate/pullsecret"
        namespace: "default"
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURLekNDQWhPZ0F3SUJBZ0lRTW1hMmF5eWx6VlgxS3NSdnpFZitxREFOQmdrcWhraUc5dzBCQVFzRkFEQWcKTVI0d0hBWURWUVFERXhWdGVTMXZhM1JsZEc4dGNtVm5ZM0psWkhNdFkyRXdIaGNOTWpRd09URTJNRGd4TVRJMQpXaGNOTXpRd09URTBNRGd4TVRJMVdqQWdNUjR3SEFZRFZRUURFeFZ0ZVMxdmEzUmxkRzh0Y21WblkzSmxaSE10ClkyRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDbmJMMnE1cUtUaUt5ajlQS00KK05VdUIvYXdLdGRJQVBSaEZ5WHdGRW9MMFQreG5nMzhFT2hFT0twSDVhbFdGQ0s2NWNUTVowdCtRL1B6TlRNWQpvU21RTUNGOTQxaW50TFhacDRnYXJMU3A3TVNrOVNTa0JmOTJrSWtSSkV0anFxZXRrYkcrcGYvejdFazRkNTU5CkxoZnlCZHVBOTRqaHNZdjZMQWNURjk2aU5Tc1NIdkpLVG1nNkZNYlZFa3pPUkFhcDZ0dHZFdDlhVDRuSjg4NnMKbXB6MVJnckp3QnNYM1E3MVVEUlN0YUE4Yjl4WkpZK0tHeCs1c0FiZTJaZW5meVJIdFhmUVNHSzZEQnB3dlpxNQpHOTJUUTdxSEVoYjNNcmcvWDZlMnhCVFVraTlWTUVRN2lvNkV1UjgvQy9nb2xNWFIxNHFvU3lJaUZFcU1ISC8rCkdidVBBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFQXdJQ3BEQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0QKQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBZEJnTlZIUTRFRmdRVUJzNHFoUWtRNGJ5WQpBdzh3NDY3eHhIbldobFV3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUEwS2N5U3NpNytSeXpjd1NnUnlJYko2CitsSXVVUms1Sk1ZUWNubytTUUFXVzN0V1JsSWhqdDRLRVNobDJvY1R6a2NHVVZuY3pZZHNTNW0vUnVSQVlBaTcKSXFTZVlWRUtBaFgxVmFPT2ZmYlJ2R2h6amRmak9yU0piVDhmdTRIU05qdzlyTDZJZHh3VnkrcEFtRG9Jd3NVUgorTTR2Q2NDNUFqTXFlWndZbzJQcHpzN3g2bVlsSUNGNDVSRkhZa1BPTytZYy82VjJUKzBxSnpJcUJqa1J6TWdkClh5SHhPeDdNbnFjOHMzNmxtZHcrSmVJODBXTDlpU2wzZUNmNmQ4Wk1KNVV6Nlg0RXl4dzl0RFBpc25yV0FsbXkKdklDSUdpUFZEUFQrSlRDbmhxYUdTdG80T1BmZ1lFakRSem5jZ0FxNTd3dWZsZ1BoeERNNFc4bjNmeUppRzFFPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t
    rules:
      - operations: ["CREATE", "UPDATE"]
        apiGroups: [""]
        apiVersions: ["v1"]
        resources: ["secrets"]
    objectSelector:
      matchLabels:
        space.okteto.com/managed: "true"
    namespaceSelector:
      matchLabels:
        dev.okteto.com: "true"
---
# Source: okteto/templates/clustermetrics-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: "my-okteto-clustermetrics"
  labels:
    app.kubernetes.io/component: "clustermetrics"
    app.kubernetes.io/part-of: "okteto"
    app.kubernetes.io/name: "my-okteto-clustermetrics"
    helm.sh/chart: okteto-1.24.2
    app.kubernetes.io/instance: my-okteto
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  activeDeadlineSeconds: 1800
  completions: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: "my-okteto-clustermetrics"
        app.kubernetes.io/instance: my-okteto
        app.kubernetes.io/component: "clustermetrics"
        app.kubernetes.io/part-of: "okteto"
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: dev.okteto.com/overloaded
                operator: DoesNotExist
            weight: 50
      restartPolicy: Never
      priorityClassName: 
      serviceAccountName: my-okteto
      tolerations:
      
      nodeSelector:
      volumes:
        - name: tls-certs
          secret:
            defaultMode: 420
            secretName: default-ssl-certificate-selfsigned
      containers:
        - name: api
          image: okteto/backend:143246320
          imagePullPolicy: IfNotPresent
          args: [ "collect-cluster-metrics"]
          envFrom:
          - configMapRef:
              name: "my-okteto"
          - secretRef:
              name: my-okteto
          - secretRef:
              name: "okteto-cloud-secret"
              optional: true
          volumeMounts:
            - name: tls-certs
              mountPath: /run/secrets/tls
              readOnly: true
          resources:
            requests:
              cpu: 10m
              memory: 100Mi
---
# Source: okteto/templates/migration-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: "my-okteto-migration"
  labels:
    app.kubernetes.io/component: "migration"
    app.kubernetes.io/part-of: "okteto"
    app.kubernetes.io/name: "my-okteto-migration"
    helm.sh/chart: okteto-1.24.2
    app.kubernetes.io/instance: my-okteto
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/name: "my-okteto-migration"
        app.kubernetes.io/instance: my-okteto
        app.kubernetes.io/component: "migration"
        app.kubernetes.io/part-of: "okteto"
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: dev.okteto.com/overloaded
                operator: DoesNotExist
            weight: 50
      restartPolicy: Never
      priorityClassName: 
      serviceAccountName: my-okteto
      tolerations:
      
      nodeSelector:
      volumes:
        - name: tls-certs
          secret:
            defaultMode: 420
            secretName: default-ssl-certificate-selfsigned
      containers:
        - name: api
          image: okteto/backend:143246320
          imagePullPolicy: IfNotPresent
          args: [ "migrate" ]
          envFrom:
          - configMapRef:
              name: "my-okteto"
          - secretRef:
              name: my-okteto
          - secretRef:
              name: "okteto-cloud-secret"
              optional: true
          volumeMounts:
            - name: tls-certs
              mountPath: /run/secrets/tls
              readOnly: true
          resources:
            requests:
              cpu: 10m
              memory: 100Mi
---
# Source: okteto/templates/telemetry-post-install-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: "my-okteto-telemetry-post-install"
  labels:
    app.kubernetes.io/component: "telemetry"
    app.kubernetes.io/part-of: "okteto"
    app.kubernetes.io/name: "my-okteto-telemetry-post-install"
    helm.sh/chart: okteto-1.24.2
    app.kubernetes.io/instance: my-okteto
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/component: "telemetry"
        app.kubernetes.io/part-of: "okteto"
        app.kubernetes.io/instance: my-okteto
        app.kubernetes.io/managed-by: Helm
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: dev.okteto.com/overloaded
                operator: DoesNotExist
            weight: 50
      serviceAccountName: my-okteto
      priorityClassName: 
      tolerations:
      
      nodeSelector:
      restartPolicy: Never
      containers:
        - name: telemetry
          image: okteto/backend:143246320
          imagePullPolicy: IfNotPresent
          args: [ "telemetry" ]
          envFrom:
            - configMapRef:
                name: "my-okteto"
            - secretRef:
                name: my-okteto
            - secretRef:
                name: "okteto-cloud-secret"
                optional: true
          resources:
            requests:
              cpu: 10m
              memory: 100Mi
