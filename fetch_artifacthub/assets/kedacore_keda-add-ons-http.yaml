---
# Source: keda-add-ons-http/templates/interceptor/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: interceptor    
    app.kubernetes.io/part-of: keda-add-ons-http
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-keda-add-ons-http
    app.kubernetes.io/version: 0.8.0
    helm.sh/chart: keda-add-ons-http-0.8.0
  name: keda-add-ons-http-interceptor
  namespace: default
---
# Source: keda-add-ons-http/templates/operator/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: operator    
    app.kubernetes.io/part-of: keda-add-ons-http
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-keda-add-ons-http
    app.kubernetes.io/version: 0.8.0
    helm.sh/chart: keda-add-ons-http-0.8.0
  name: keda-add-ons-http
  namespace: default
---
# Source: keda-add-ons-http/templates/scaler/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: scaler    
    app.kubernetes.io/part-of: keda-add-ons-http
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-keda-add-ons-http
    app.kubernetes.io/version: 0.8.0
    helm.sh/chart: keda-add-ons-http-0.8.0
  name: keda-add-ons-http-external-scaler
  namespace: default
---
# Source: keda-add-ons-http/templates/crd.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  name: httpscaledobjects.http.keda.sh
spec:
  group: http.keda.sh
  names:
    kind: HTTPScaledObject
    listKind: HTTPScaledObjectList
    plural: httpscaledobjects
    shortNames:
    - httpso
    singular: httpscaledobject
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.targetWorkload
      name: TargetWorkload
      type: string
    - jsonPath: .status.targetService
      name: TargetService
      type: string
    - jsonPath: .spec.replicas.min
      name: MinReplicas
      type: integer
    - jsonPath: .spec.replicas.max
      name: MaxReplicas
      type: integer
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - jsonPath: .status.conditions[?(@.type=="HTTPScaledObjectIsReady")].status
      name: Active
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: HTTPScaledObject is the Schema for the httpscaledobjects API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: HTTPScaledObjectSpec defines the desired state of HTTPScaledObject
            properties:
              hosts:
                description: |-
                  The hosts to route. All requests which the "Host" header
                  matches any .spec.hosts (and the Request Target matches any
                  .spec.pathPrefixes) will be routed to the Service and Port specified in
                  the scaleTargetRef.
                items:
                  type: string
                type: array
              pathPrefixes:
                description: |-
                  The paths to route. All requests which the Request Target matches any
                  .spec.pathPrefixes (and the "Host" header matches any .spec.hosts)
                  will be routed to the Service and Port specified in
                  the scaleTargetRef.
                items:
                  type: string
                type: array
              replicas:
                description: (optional) Replica information
                properties:
                  max:
                    description: Maximum amount of replicas to have in the deployment
                      (Default 100)
                    format: int32
                    type: integer
                  min:
                    description: Minimum amount of replicas to have in the deployment
                      (Default 0)
                    format: int32
                    type: integer
                type: object
              scaleTargetRef:
                description: The name of the deployment to route HTTP requests to
                  (and to autoscale).
                properties:
                  apiVersion:
                    type: string
                  deployment:
                    description: 'Deprecated: The name of the deployment to scale
                      according to HTTP traffic'
                    type: string
                  kind:
                    type: string
                  name:
                    type: string
                  port:
                    description: The port to route to
                    format: int32
                    type: integer
                  service:
                    description: The name of the service to route to
                    type: string
                required:
                - port
                - service
                type: object
              scaledownPeriod:
                description: (optional) Cooldown period value
                format: int32
                type: integer
              scalingMetric:
                description: (optional) Configuration for the metric used for scaling
                properties:
                  concurrency:
                    description: Scaling based on concurrent requests for a given
                      target
                    properties:
                      targetValue:
                        default: 100
                        description: Target value for rate scaling
                        type: integer
                    type: object
                  requestRate:
                    description: Scaling based the average rate during an specific
                      time window for a given target
                    properties:
                      granularity:
                        default: 1s
                        description: Time granularity for rate calculation
                        type: string
                      targetValue:
                        default: 100
                        description: Target value for rate scaling
                        type: integer
                      window:
                        default: 1m
                        description: Time window for rate calculation
                        type: string
                    type: object
                type: object
              targetPendingRequests:
                description: (optional) DEPRECATED (use SscalingMetric instead) Target
                  metric value
                format: int32
                type: integer
            required:
            - scaleTargetRef
            type: object
          status:
            description: HTTPScaledObjectStatus defines the observed state of HTTPScaledObject
            properties:
              conditions:
                description: Conditions of the operator
                items:
                  description: HTTPScaledObjectCondition stores the condition state
                  properties:
                    message:
                      description: Message indicating details about the transition.
                      type: string
                    reason:
                      description: Reason for the condition's last transition.
                      enum:
                      - ErrorCreatingAppScaledObject
                      - AppScaledObjectCreated
                      - TerminatingResources
                      - AppScaledObjectTerminated
                      - AppScaledObjectTerminationError
                      - PendingCreation
                      - HTTPScaledObjectIsReady
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    timestamp:
                      description: Timestamp of the condition
                      type: string
                    type:
                      description: Type of condition
                      enum:
                      - Ready
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              targetService:
                description: TargetService reflects details about the scaled service.
                type: string
              targetWorkload:
                description: TargetWorkload reflects details about the scaled workload.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: keda-add-ons-http/templates/interceptor/rbac.yml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:    
    app.kubernetes.io/part-of: keda-add-ons-http
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-keda-add-ons-http
    app.kubernetes.io/version: 0.8.0
    helm.sh/chart: keda-add-ons-http-0.8.0
  name: keda-add-ons-http-interceptor
rules:
- apiGroups:
  - ""
  resources:
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - http.keda.sh
  resources:
  - httpscaledobjects
  verbs:
  - get
  - list
  - watch
---
# Source: keda-add-ons-http/templates/operator/rbac.yml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    httpscaledobjects.http.keda.sh/version: 0.8.0
    keda.sh/addon: keda-add-ons-http
    app: keda-add-ons-http
    name: keda-add-ons-http-role
    app.kubernetes.io/name: keda-add-ons-http-role    
    app.kubernetes.io/part-of: keda-add-ons-http
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-keda-add-ons-http
    app.kubernetes.io/version: 0.8.0
    helm.sh/chart: keda-add-ons-http-0.8.0
  name: keda-add-ons-http-role
rules:
- apiGroups:
  - http.keda.sh
  resources:
  - httpscaledobjects
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - http.keda.sh
  resources:
  - httpscaledobjects/finalizers
  verbs:
  - update
- apiGroups:
  - http.keda.sh
  resources:
  - httpscaledobjects/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - keda.sh
  resources:
  - scaledobjects
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: keda-add-ons-http/templates/operator/rbac.yml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    httpscaledobjects.http.keda.sh/version: 0.8.0
    keda.sh/addon: keda-add-ons-http
    app: keda-add-ons-http
    name: keda-add-ons-http-proxy-role
    app.kubernetes.io/name: keda-add-ons-http-proxy-role    
    app.kubernetes.io/part-of: keda-add-ons-http
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-keda-add-ons-http
    app.kubernetes.io/version: 0.8.0
    helm.sh/chart: keda-add-ons-http-0.8.0
  name: keda-add-ons-http-proxy-role
rules:
- apiGroups: ["authentication.k8s.io"]
  resources:
  - tokenreviews
  verbs: ["create"]
- apiGroups: ["authorization.k8s.io"]
  resources:
  - subjectaccessreviews
  verbs: ["create"]
---
# Source: keda-add-ons-http/templates/operator/rbac.yml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    httpscaledobjects.http.keda.sh/version: 0.8.0
    keda.sh/addon: keda-add-ons-http
    app: keda-add-ons-http
    name: keda-add-ons-http-metrics-reader
    app.kubernetes.io/name: keda-add-ons-http-metrics-reader    
    app.kubernetes.io/part-of: keda-add-ons-http
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-keda-add-ons-http
    app.kubernetes.io/version: 0.8.0
    helm.sh/chart: keda-add-ons-http-0.8.0
  name: keda-add-ons-http-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
# Source: keda-add-ons-http/templates/scaler/rbac.yml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:    
    app.kubernetes.io/part-of: keda-add-ons-http
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-keda-add-ons-http
    app.kubernetes.io/version: 0.8.0
    helm.sh/chart: keda-add-ons-http-0.8.0
  name: keda-add-ons-http-external-scaler
rules:
- apiGroups:
  - ""
  resources:
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - http.keda.sh
  resources:
  - httpscaledobjects
  verbs:
  - get
  - list
  - watch
---
# Source: keda-add-ons-http/templates/interceptor/rbac.yml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    httpscaledobjects.http.keda.sh/version: 0.8.0
    keda.sh/addon: keda-add-ons-http
    app: keda-add-ons-http
    name: keda-add-ons-http-interceptor
    app.kubernetes.io/name: keda-add-ons-http-interceptor    
    app.kubernetes.io/part-of: keda-add-ons-http
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-keda-add-ons-http
    app.kubernetes.io/version: 0.8.0
    helm.sh/chart: keda-add-ons-http-0.8.0
  name: keda-add-ons-http-interceptor
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: keda-add-ons-http-interceptor
subjects:
- kind: ServiceAccount
  name: keda-add-ons-http-interceptor
  namespace: default
---
# Source: keda-add-ons-http/templates/operator/rbac.yml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    httpscaledobjects.http.keda.sh/version: 0.8.0
    keda.sh/addon: keda-add-ons-http
    app: keda-add-ons-http
    name: keda-add-ons-http-rolebinding
    app.kubernetes.io/name: keda-add-ons-http-rolebinding    
    app.kubernetes.io/part-of: keda-add-ons-http
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-keda-add-ons-http
    app.kubernetes.io/version: 0.8.0
    helm.sh/chart: keda-add-ons-http-0.8.0
  name: keda-add-ons-http-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: keda-add-ons-http-role
subjects:
- kind: ServiceAccount
  name: keda-add-ons-http
  namespace: default
---
# Source: keda-add-ons-http/templates/operator/rbac.yml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    httpscaledobjects.http.keda.sh/version: 0.8.0
    keda.sh/addon: keda-add-ons-http
    app: keda-add-ons-http
    name: keda-add-ons-http-rolebinding
    app.kubernetes.io/name: keda-add-ons-http-rolebinding    
    app.kubernetes.io/part-of: keda-add-ons-http
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-keda-add-ons-http
    app.kubernetes.io/version: 0.8.0
    helm.sh/chart: keda-add-ons-http-0.8.0
  name: keda-add-ons-http-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: keda-add-ons-http-proxy-role
subjects:
- kind: ServiceAccount
  name: keda-add-ons-http
  namespace: default
---
# Source: keda-add-ons-http/templates/scaler/rbac.yml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    httpscaledobjects.http.keda.sh/version: 0.8.0
    keda.sh/addon: keda-add-ons-http
    app: keda-add-ons-http
    name: keda-add-ons-http-external-scaler
    app.kubernetes.io/name: keda-add-ons-http-external-scaler    
    app.kubernetes.io/part-of: keda-add-ons-http
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-keda-add-ons-http
    app.kubernetes.io/version: 0.8.0
    helm.sh/chart: keda-add-ons-http-0.8.0
  name: keda-add-ons-http-external-scaler
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: keda-add-ons-http-external-scaler
subjects:
- kind: ServiceAccount
  name: keda-add-ons-http-external-scaler
  namespace: default
---
# Source: keda-add-ons-http/templates/operator/rbac.yml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:    
    app.kubernetes.io/part-of: keda-add-ons-http
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-keda-add-ons-http
    app.kubernetes.io/version: 0.8.0
    helm.sh/chart: keda-add-ons-http-0.8.0
  name: keda-add-ons-http-role
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: keda-add-ons-http/templates/operator/rbac.yml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    httpscaledobjects.http.keda.sh/version: 0.8.0
    keda.sh/addon: keda-add-ons-http
    app: keda-add-ons-http
    name: keda-add-ons-http-role-binding
    app.kubernetes.io/name: keda-add-ons-http-role-binding    
    app.kubernetes.io/part-of: keda-add-ons-http
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-keda-add-ons-http
    app.kubernetes.io/version: 0.8.0
    helm.sh/chart: keda-add-ons-http-0.8.0
  name: keda-add-ons-http-role-rolebinding
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: keda-add-ons-http-role
subjects:
- kind: ServiceAccount
  name: keda-add-ons-http
  namespace: default
---
# Source: keda-add-ons-http/templates/interceptor/service-admin.yaml
apiVersion: v1
kind: Service
metadata:
  labels:    
    app.kubernetes.io/component: interceptor-admin    
    app.kubernetes.io/part-of: keda-add-ons-http
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-keda-add-ons-http
    app.kubernetes.io/version: 0.8.0
    helm.sh/chart: keda-add-ons-http-0.8.0
  name: "keda-add-ons-http-interceptor-admin"
  namespace: default
spec:
  ports:
  - name: admin
    port: 9090
    targetPort: admin
  selector:
    app.kubernetes.io/component: interceptor    
    app.kubernetes.io/part-of: keda-add-ons-http
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-keda-add-ons-http
---
# Source: keda-add-ons-http/templates/interceptor/service-proxy.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: interceptor-proxy    
    app.kubernetes.io/part-of: keda-add-ons-http
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-keda-add-ons-http
    app.kubernetes.io/version: 0.8.0
    helm.sh/chart: keda-add-ons-http-0.8.0
  name: "keda-add-ons-http-interceptor-proxy"
  namespace: default
spec:
  ports:
  - name: proxy
    port: 8080
    targetPort: proxy
  selector:
    app.kubernetes.io/component: interceptor    
    app.kubernetes.io/part-of: keda-add-ons-http
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-keda-add-ons-http
---
# Source: keda-add-ons-http/templates/operator/service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: operator    
    app.kubernetes.io/part-of: keda-add-ons-http
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-keda-add-ons-http
    app.kubernetes.io/version: 0.8.0
    helm.sh/chart: keda-add-ons-http-0.8.0
  name: keda-add-ons-http-controller-manager-metrics-service
  namespace: default
spec:
  ports:
  - name: metrics
    port: 8443
    targetPort: metrics
  selector:
    app.kubernetes.io/component: operator    
    app.kubernetes.io/part-of: keda-add-ons-http
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-keda-add-ons-http
---
# Source: keda-add-ons-http/templates/scaler/service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: scaler    
    app.kubernetes.io/part-of: keda-add-ons-http
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-keda-add-ons-http
    app.kubernetes.io/version: 0.8.0
    helm.sh/chart: keda-add-ons-http-0.8.0
  name: "keda-add-ons-http-external-scaler"
  namespace: default
spec:
  ports:
  - name: grpc
    port: 9090
    targetPort: grpc
  selector:
    app.kubernetes.io/component: scaler    
    app.kubernetes.io/part-of: keda-add-ons-http
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-keda-add-ons-http
---
# Source: keda-add-ons-http/templates/interceptor/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: interceptor    
    app.kubernetes.io/part-of: keda-add-ons-http
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-keda-add-ons-http
    app.kubernetes.io/version: 0.8.0
    helm.sh/chart: keda-add-ons-http-0.8.0
  name: keda-add-ons-http-interceptor
  namespace: default
spec:
  selector:
    matchLabels:
      app.kubernetes.io/component: interceptor      
      app.kubernetes.io/part-of: keda-add-ons-http
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/instance: my-keda-add-ons-http
  template:
    metadata:
      labels:
        app.kubernetes.io/component: interceptor        
        app.kubernetes.io/part-of: keda-add-ons-http
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/instance: my-keda-add-ons-http
        app.kubernetes.io/version: 0.8.0
        helm.sh/chart: keda-add-ons-http-0.8.0
    spec:
      imagePullSecrets:
        []
      serviceAccountName: keda-add-ons-http-interceptor
      securityContext:
        fsGroup: 1000
        supplementalGroups:
        - 1000
      containers:
      - args:
          - "--zap-log-level=info"
          - "--zap-encoder=console"
          - "--zap-time-encoding=rfc3339"
        image: "ghcr.io/kedacore/http-add-on-interceptor:0.8.0"
        imagePullPolicy: 'Always'
        name: "keda-add-ons-http-interceptor"
        env:
        - name: KEDA_HTTP_CURRENT_NAMESPACE
          value: "default"
        - name: KEDA_HTTP_PROXY_PORT
          value: "8080"
        - name: KEDA_HTTP_ADMIN_PORT
          value: "9090"
        - name: KEDA_HTTP_CONNECT_TIMEOUT
          value: "500ms"
        - name: KEDA_HTTP_KEEP_ALIVE
          value: "1s"
        - name: KEDA_RESPONSE_HEADER_TIMEOUT
          value: "500ms"
        - name: KEDA_CONDITION_WAIT_TIMEOUT
          value: "20s"
        - name: KEDA_HTTP_ENDPOINTS_CACHE_POLLING_INTERVAL_MS
          value: "250"
        - name: KEDA_HTTP_FORCE_HTTP2
          value: "false"
        - name: KEDA_HTTP_MAX_IDLE_CONNS
          value: "100"
        - name: KEDA_HTTP_IDLE_CONN_TIMEOUT
          value: "90s"
        - name: KEDA_HTTP_TLS_HANDSHAKE_TIMEOUT
          value: "10s"
        - name: KEDA_HTTP_EXPECT_CONTINUE_TIMEOUT
          value: "1s"
        ports:
        - containerPort: 9090
          name: admin
        - containerPort: 8080
          name: proxy
        livenessProbe:
          httpGet:
            path: /livez
            port: proxy
        readinessProbe:
          httpGet:
            path: /readyz
            port: proxy
        resources:
          limits:
            cpu: 0.5
            memory: 64Mi
          requests:
            cpu: 250m
            memory: 20Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
      terminationGracePeriodSeconds: 10
      nodeSelector:
        kubernetes.io/os: linux
---
# Source: keda-add-ons-http/templates/operator/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: operator    
    app.kubernetes.io/part-of: keda-add-ons-http
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-keda-add-ons-http
    app.kubernetes.io/version: 0.8.0
    helm.sh/chart: keda-add-ons-http-0.8.0
  name: keda-add-ons-http-controller-manager
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: operator      
      app.kubernetes.io/part-of: keda-add-ons-http
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/instance: my-keda-add-ons-http
  template:
    metadata:
      labels:
        app.kubernetes.io/component: operator        
        app.kubernetes.io/part-of: keda-add-ons-http
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/instance: my-keda-add-ons-http
        app.kubernetes.io/version: 0.8.0
        helm.sh/chart: keda-add-ons-http-0.8.0
    spec:
      imagePullSecrets:
        []
      serviceAccountName: keda-add-ons-http
      securityContext:
        fsGroup: 1000
        supplementalGroups:
        - 1000
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=10
        image: "gcr.io/kubebuilder/kube-rbac-proxy:v0.13.0"
        name: kube-rbac-proxy
        resources:
          limits:
            cpu: 300m
            memory: 200Mi
          requests:
            cpu: 10m
            memory: 20Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
      - args:
        - --metrics-bind-address=127.0.0.1:8080
        - --leader-elect
        - --zap-log-level=info
        - --zap-time-encoding=rfc3339
        - --zap-encoder=console
        image: "ghcr.io/kedacore/http-add-on-operator:0.8.0"
        imagePullPolicy: 'Always'
        name: "keda-add-ons-http-operator"
        env:
        - name: KEDAHTTP_OPERATOR_EXTERNAL_SCALER_SERVICE
          value: "keda-add-ons-http-external-scaler"
        - name: KEDAHTTP_OPERATOR_EXTERNAL_SCALER_PORT
          value: "9090"
        - name: KEDA_HTTP_OPERATOR_NAMESPACE
          value: "default"
        - name: KEDA_HTTP_OPERATOR_WATCH_NAMESPACE
          value: ""
        ports:
        - name: metrics
          containerPort: 8080
        - name: probes
          containerPort: 8081
        livenessProbe:
          httpGet:
            path: /healthz
            port: probes
        readinessProbe:
          httpGet:
            path: /readyz
            port: probes
        resources:
          limits:
            cpu: 0.5
            memory: 64Mi
          requests:
            cpu: 250m
            memory: 20Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
      terminationGracePeriodSeconds: 10
      nodeSelector:
        kubernetes.io/os: linux
---
# Source: keda-add-ons-http/templates/scaler/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: scaler    
    app.kubernetes.io/part-of: keda-add-ons-http
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-keda-add-ons-http
    app.kubernetes.io/version: 0.8.0
    helm.sh/chart: keda-add-ons-http-0.8.0
  name: keda-add-ons-http-external-scaler
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/component: scaler      
      app.kubernetes.io/part-of: keda-add-ons-http
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/instance: my-keda-add-ons-http
  template:
    metadata:
      labels:
        app.kubernetes.io/component: scaler        
        app.kubernetes.io/part-of: keda-add-ons-http
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/instance: my-keda-add-ons-http
        app.kubernetes.io/version: 0.8.0
        helm.sh/chart: keda-add-ons-http-0.8.0
    spec:
      imagePullSecrets:
        []
      serviceAccountName: keda-add-ons-http-external-scaler
      securityContext:
        fsGroup: 1000
        supplementalGroups:
        - 1000
      containers:
      - args:
          - "--zap-log-level=info"
          - "--zap-encoder=console"
          - "--zap-time-encoding=rfc3339"
        image: "ghcr.io/kedacore/http-add-on-scaler:0.8.0"
        imagePullPolicy: Always
        name: "keda-add-ons-http-external-scaler"
        ports:
        - containerPort: 9090
          name: grpc
        env:
        - name: KEDA_HTTP_SCALER_TARGET_ADMIN_DEPLOYMENT
          value: "keda-add-ons-http-interceptor"
        - name: KEDA_HTTP_SCALER_PORT
          value: "9090"
        - name: KEDA_HTTP_SCALER_TARGET_ADMIN_NAMESPACE
          value: "default"
        - name: KEDA_HTTP_SCALER_TARGET_ADMIN_SERVICE
          value: "keda-add-ons-http-interceptor-admin"
        - name: KEDA_HTTP_SCALER_TARGET_ADMIN_PORT
          value: "9090"
        - name: KEDA_HTTP_SCALER_STREAM_INTERVAL_MS
          value: "200"
        resources:
          limits:
            cpu: 0.5
            memory: 64Mi
          requests:
            cpu: 250m
            memory: 20Mi
        livenessProbe:
          grpc:
            port: 9090
            service: liveness
          timeoutSeconds: 5
          periodSeconds: 5
          successThreshold: 1
          failureThreshold: 6
        readinessProbe:
          grpc:
            port: 9090
            service: readiness
          timeoutSeconds: 1
          periodSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
      terminationGracePeriodSeconds: 10
      nodeSelector:
        kubernetes.io/os: linux
---
# Source: keda-add-ons-http/templates/interceptor/scaledobject.yaml
# this is the ScaledObject that tells KEDA to scale the interceptor fleet
apiVersion: keda.sh/v1alpha1
kind: ScaledObject
metadata:
  name: "keda-add-ons-http-interceptor"
  namespace: default
  labels:    
    app.kubernetes.io/part-of: keda-add-ons-http
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-keda-add-ons-http
    app.kubernetes.io/version: 0.8.0
    helm.sh/chart: keda-add-ons-http-0.8.0
spec:
  minReplicaCount: 3
  maxReplicaCount: 50
  pollingInterval: 1
  scaleTargetRef:
    name: "keda-add-ons-http-interceptor"
    kind: Deployment
  triggers:
    - type: external
      metadata:
        scalerAddress: "keda-add-ons-http-external-scaler.default:9090"
        interceptorTargetPendingRequests: "200"
