---
# Source: ghost-export-to-s3/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-ghost-export-to-s3
  labels:
    helm.sh/chart: ghost-export-to-s3-0.26.0
    app.kubernetes.io/name: ghost-export-to-s3
    app.kubernetes.io/instance: my-ghost-export-to-s3
    app.kubernetes.io/version: "5.82.8"
    app.kubernetes.io/managed-by: Helm
---
# Source: ghost-export-to-s3/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-ghost-export-to-s3
  labels:
    helm.sh/chart: ghost-export-to-s3-0.26.0
    app.kubernetes.io/name: ghost-export-to-s3
    app.kubernetes.io/instance: my-ghost-export-to-s3
    app.kubernetes.io/version: "5.82.8"
    app.kubernetes.io/managed-by: Helm
data:
  GHOST_AUTH_USERNAME: "bXktZ2hvc3QtdXNlcm5hbWU="
  GHOST_AUTH_PASSWORD: "bXktZ2hvc3QtcGFzc3dvcmQ="
  AWS_ACCESS_KEY_ID: "bXktYXdzLWFjY2Vzcy1rZXktaWQ="
  AWS_SECRET_ACCESS_KEY:  "bXktYXdzLXNlY3JldC1rZXk="
---
# Source: ghost-export-to-s3/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-ghost-export-to-s3
  labels:
    helm.sh/chart: ghost-export-to-s3-0.26.0
    app.kubernetes.io/name: ghost-export-to-s3
    app.kubernetes.io/instance: my-ghost-export-to-s3
    app.kubernetes.io/version: "5.82.8"
    app.kubernetes.io/managed-by: Helm
data:
  GHOST_URL: "https://my.ghost.blog/ghost"
  GHOST_API_BASE_ENDPOINT: ""
  GHOST_MAJOR_VERSION: "4"
  S3_DESTINATION: "s3://path/to/my/s3-export.json"
---
# Source: ghost-export-to-s3/templates/cronjob.yaml
apiVersion: batch/v1
kind: CronJob
metadata:
  name: my-ghost-export-to-s3
  labels:
    helm.sh/chart: ghost-export-to-s3-0.26.0
    app.kubernetes.io/name: ghost-export-to-s3
    app.kubernetes.io/instance: my-ghost-export-to-s3
    app.kubernetes.io/version: "5.82.8"
    app.kubernetes.io/managed-by: Helm
spec:
  schedule: "@daily"
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      ttlSecondsAfterFinished: 300
      backoffLimit: 1
      parallelism: 1
      activeDeadlineSeconds: 1800
      template:
        metadata: 
          annotations:
            checksum/config: 3f74a6b2e8cf55e419809ac65360d2c6e40207ec17a63ed48c234b71470faab1
            checksum/secret: 8320e869e166ee513d3c8996778cbc76421ca212c21a896de9cf7518bf96e662
        spec:
          restartPolicy: OnFailure
          serviceAccountName: my-ghost-export-to-s3
          securityContext:
            {}
          volumes:
          - name: "export-data"
            emptyDir: {}

          initContainers:
          - name: download-glorious-json-from-ghost
            image: curlimages/curl:8.8.0
            imagePullPolicy: IfNotPresent
            command:
            - /bin/sh
            - -c
            - |
              curl --fail -sSL -c /tmp/ghost-cookie.txt \
                -d username='$(GHOST_AUTH_USERNAME)' \
                -d password='$(GHOST_AUTH_PASSWORD)' \
                -H 'Origin: k8s://$(POD_NAME)@$(POD_NAMESPACE)' \
                '$(GHOST_API_BASE_ENDPOINT)/admin/session/' && \
              curl --fail -sSL -b /tmp/ghost-cookie.txt \
                -H 'Origin: k8s://$(POD_NAME)@$(POD_NAMESPACE)' \
                -H 'Content-Type: application/json' \
                '$(GHOST_API_BASE_ENDPOINT)/admin/db/' \
                -o /data/ghost-export/ghost-export.json && \
              rm -rf /tmp/ghost-cookie.txt
            env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: GHOST_URL
              valueFrom:
                configMapKeyRef:
                  name: my-ghost-export-to-s3
                  key: GHOST_URL
            - name: GHOST_MAJOR_VERSION
              valueFrom:
                configMapKeyRef:
                  name: my-ghost-export-to-s3
                  key: GHOST_MAJOR_VERSION
            - name: GHOST_API_BASE_ENDPOINT
              value: "$(GHOST_URL)/api/v$(GHOST_MAJOR_VERSION)"
            - name: GHOST_AUTH_USERNAME
              valueFrom:
                secretKeyRef:
                  name: my-ghost-export-to-s3
                  key: GHOST_AUTH_USERNAME
            - name: GHOST_AUTH_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: my-ghost-export-to-s3
                  key: GHOST_AUTH_PASSWORD
            volumeMounts:
            - name: export-data
              mountPath: /data/ghost-export
            resources:
              {}

          containers:
          - name: export-ghost-json-to-s3
            image: amazon/aws-cli:2.16.4
            imagePullPolicy: IfNotPresent
            args:
            - s3
            - cp
            - "/data/to-export/ghost-export.json"
            - "$(S3_DESTINATION)"
            env:
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: my-ghost-export-to-s3
                  key: AWS_ACCESS_KEY_ID
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: my-ghost-export-to-s3
                  key: AWS_SECRET_ACCESS_KEY
            - name: S3_DESTINATION
              valueFrom:
                configMapKeyRef:
                  name: my-ghost-export-to-s3
                  key: S3_DESTINATION
            volumeMounts:
            - name: export-data
              mountPath: /data/to-export
            resources:
              {}
---
# Source: ghost-export-to-s3/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "my-ghost-export-to-s3-test-connection"
  labels:
    helm.sh/chart: ghost-export-to-s3-0.26.0
    app.kubernetes.io/name: ghost-export-to-s3
    app.kubernetes.io/instance: my-ghost-export-to-s3
    app.kubernetes.io/version: "5.82.8"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test-success
    email: "armel+helm_charts@rm3l.org"
    "ignore-check.kube-linter.io/no-liveness-probe": "This is a one-shot pod for testing. It is not supposed to run forever."
    "ignore-check.kube-linter.io/no-readiness-probe": "This is a one-shot pod for testing. It is not supposed to run forever."
    "ignore-check.kube-linter.io/default-service-account": "This is a one-shot pod for testing."
    "ignore-check.kube-linter.io/non-isolated-pod": "This is a one-shot pod for testing."
spec:
  securityContext:
    runAsNonRoot: true
    # nobody
    runAsUser: 65534
    # nobody
    runAsGroup: 65534
  containers:
    - name: test
      image: busybox
      command: ['echo']
      securityContext:
        readOnlyRootFilesystem: true
      resources:
        limits:
          cpu: 100m
          memory: 10Mi
        requests:
          cpu: 100m
          memory: 1Mi
  restartPolicy: Never
