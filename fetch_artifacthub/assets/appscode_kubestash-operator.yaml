---
# Source: kubestash-operator/templates/rbac/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-kubestash-operator
  namespace: default
  labels:
    helm.sh/chart: kubestash-operator-v0.12.0
    app.kubernetes.io/name: kubestash-operator
    app.kubernetes.io/instance: my-kubestash-operator
    app.kubernetes.io/version: "v0.12.1"
    app.kubernetes.io/managed-by: Helm
---
# Source: kubestash-operator/templates/webhook-server/cert.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-kubestash-operator-webhook-cert
  namespace: default
  labels:
    helm.sh/chart: kubestash-operator-v0.12.0
    app.kubernetes.io/name: kubestash-operator
    app.kubernetes.io/instance: my-kubestash-operator
    app.kubernetes.io/version: "v0.12.1"
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lRSjdkcHVHV0FkaDdhVUFmckZWMDBlVEFOQmdrcWhraUc5dzBCQVFzRkFEQU4KTVFzd0NRWURWUVFERXdKallUQWVGdzB5TkRBNU1UWXdPRFE1TlRkYUZ3MHpOREE1TVRRd09EUTVOVGRhTUEweApDekFKQmdOVkJBTVRBbU5oTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF3dko4Ckl3Mm9ZeDBQWjR5YVJ6Wm1TYkR6TUVvMHhSQmsvaTlRWkR5UDNUYVVsVGNUWUZjMGNZNVJjYVpNQXREWDFNVTkKaFpwM2tJREsrcUl0czl4RVpzLzlTMllTc0hPSElLN2ljMS9tbW9IVU1uTURiYlN6VWdvenpvK25pcVpidU1uKwo1bWpkYU9UaURrREo4ZWQzNmlucDJpbldna0NtZk9uQS8vNDByOE9IWmdBdk9waEIvUHdranh5a3RzWUxTcVFOCkZjR1kxM0kxNDlOVnZGL0NIQ0Q0K1NnL3ZtUWwxbkR6L0xPaDdvU1F0VWF3WTlldmZPcEJxOXJxMy8xbmZuSUIKaENPbHRmRDBHblNJNkI0cG54K00wQm9tY296MG0zTVE4Q1lVOFZLZkRuOXFSKzhHemlkUnloek95a0FPeWY0VgpTeFpaVW8wWkFpUk5ZMk9mOXdJREFRQUJvMkV3WHpBT0JnTlZIUThCQWY4RUJBTUNBcVF3SFFZRFZSMGxCQll3CkZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUUKRkxaNGJpUkdrb2hXUjlGVEkrbG9qa2NsTlVWSE1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQkRhOUZkbXN6dAp6Qk5FRjd4aGs5cy85MFZIb09ObFRTMGFUeUlUd3llQmJuTDBXMkdhblpkYmxnemZhY29QUFlUVFdhVS8zeU92ClVsYnJUYjZoYklsNWJYUHU4N3dMcGxhS05GNVUyZmN0bHAxME13S2ErS0FoSDFISkdYNWlIL2ZuVTZpZFZMdksKaVJEK1RoTERhU1pySDZaVWZtVmpwbURjL05wREJEbWNCQng2Qmp5ZDFtaWFZTmcxYi9DL3BoQ2VBYlVQTDlxZQpRZXh5S2FNVHB6N2cvZEdKdDNHUmpwL09IU1JndXp3MEE2cmw4Y0xvT1MwVjB2WFFRN2Mzalh2a3B4YmlqTEdSCkNhdyt5UlUvWk5pVGxKQUExYmprNkx2QmNZaGxEaW43UXJNMU96TENLYXR1a05ZSWE2RDQ5TlZaelp3S3dweUsKYUQvaU1hMFJMckZaCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURmakNDQW1hZ0F3SUJBZ0lRUlJ0YjVtWVJ2MTdQNjVhTzZTRy9CVEFOQmdrcWhraUc5dzBCQVFzRkFEQU4KTVFzd0NRWURWUVFERXdKallUQWVGdzB5TkRBNU1UWXdPRFE1TlRoYUZ3MHpOREE1TVRRd09EUTVOVGhhTUNneApKakFrQmdOVkJBTVRIVzE1TFd0MVltVnpkR0Z6YUMxdmNHVnlZWFJ2Y2kxM1pXSm9iMjlyTUlJQklqQU5CZ2txCmhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBeTNLN1U3NEMvYlB4dEFSejF5WmxVUjV6aWc0ZUZickQKK09FbUtiMkN3aEJTOU5NRkJ1MmY2TUpiTUtyRXh3Tk03K2IweVFuaEh4K0NjbzQ0dmVFWlA5Y0dFRDgybzIrdQpmWFB0V0NVR3ZPVHovQ0wwY203SnlONWNJY0FscVI5NGtUcFYwcjRXY1NwOE5ZMUtrYzVqWEZQOXlBaEZXRDFVCmlmZ1Jyd2Y3bjZsY0s4VFpKTmZsbVJ5K1lvcEd1VzN6bysxWFVRNjlnbjVoK1hrQi84eXp6YnNLS01LMHRmM1IKZjYzek9ONmZrUEtUSWo2eERGZTIwVXVCOFBaQk9vWS9CejdUdU0xZFNra251bGp4ZlI2blRmMWRLUUFGaG4zUgozL3FCL0JnUnJTQ3VObFJkTnpwZm51bzluNER5OGVvQVY4ZW9yM2lodVNMdnRvK2ZJaDk0dFFJREFRQUJvNEcrCk1JRzdNQTRHQTFVZER3RUIvd1FFQXdJRm9EQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUgKQXdJd0RBWURWUjBUQVFIL0JBSXdBREFmQmdOVkhTTUVHREFXZ0JTMmVHNGtScEtJVmtmUlV5UHBhSTVISlRWRgpSekJiQmdOVkhSRUVWREJTZ2lWdGVTMXJkV0psYzNSaGMyZ3RiM0JsY21GMGIzSXRkMlZpYUc5dmF5NWtaV1poCmRXeDBnaWx0ZVMxcmRXSmxjM1JoYzJndGIzQmxjbUYwYjNJdGQyVmlhRzl2YXk1a1pXWmhkV3gwTG5OMll6QU4KQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBZFhoQWgyU2g0a2NmakVMRjNLVEl5djNFK3dUbHlVb2VDSXZCVFh2ZQpoMy9hMk41Q2NnTjZqc2o4Z1orM1grUVFQQ1lhcUJMMDIxbVFWaHl3cHJ6Vk5BWHhCUXFibXB0azJ4VTQxcS9RCndFbmNCend3SGNrQzVRZFZSM2w4M0p5TjZtMzJKS0hkdUZISGlOeHVRVHhqVjJSb1g1dHkxQ3FmVFVPaFRRK1QKN3kyeTNWQmhwTXVoanAzUGQyd1hMZlRIZi9NcWVWbGhQSEl1ZEdzcXFtamZJWk9sM215QlN4TWo2MERSY0RJOQpScW1hb1BBdDU0VmhZTG1TeHJJOTJvWHdBRkRFeU9LeDkvdWpKQVRtT2Z5S3huN2k5aHVXaEZlR1d6ZWpQcFcyCjdsTXVweFJBMGNmTVZLaVFZY1EwVHdyRVdPV1NJakZFQkkxRW9CV2p1SkZNRGc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBeTNLN1U3NEMvYlB4dEFSejF5WmxVUjV6aWc0ZUZickQrT0VtS2IyQ3doQlM5Tk1GCkJ1MmY2TUpiTUtyRXh3Tk03K2IweVFuaEh4K0NjbzQ0dmVFWlA5Y0dFRDgybzIrdWZYUHRXQ1VHdk9Uei9DTDAKY203SnlONWNJY0FscVI5NGtUcFYwcjRXY1NwOE5ZMUtrYzVqWEZQOXlBaEZXRDFVaWZnUnJ3ZjduNmxjSzhUWgpKTmZsbVJ5K1lvcEd1VzN6bysxWFVRNjlnbjVoK1hrQi84eXp6YnNLS01LMHRmM1JmNjN6T042ZmtQS1RJajZ4CkRGZTIwVXVCOFBaQk9vWS9CejdUdU0xZFNra251bGp4ZlI2blRmMWRLUUFGaG4zUjMvcUIvQmdSclNDdU5sUmQKTnpwZm51bzluNER5OGVvQVY4ZW9yM2lodVNMdnRvK2ZJaDk0dFFJREFRQUJBb0lCQVFDRk5CaGNhdk1RWXVtawp3S21MdTNMb21yUnhObThTTVJjd2MxR0dVTE0xRm5VS0lNT1ExckkxTmxONFdNYS91blI4T2s0WTlxUHp1YkN5CkNsWXlWQmd4Q1RyS0ZtbFN0c09iRmZUWEdsNy8vRE9XNk5mOXVIWGJVMk1sSWVaR2hmbHR0TEVPYXpETVpWR3YKeWxPQmhZemVuWXR5bForNWQyWkxjeVU0NFZRcEl4RlNsVkIvZ2hOZUdpMkdLbEFXQTJKdFRCemFra3VBcjMxdgpPK01HZ3ZweHlGbGt3QWhrMmNidCtQeTh4MEcxdjJmZTdGUmlwOEhaM1lldWROV3F4ZzRabVV1SW9YZHdpanQwClk3bHl2a01XYnAyL2t2eVJkSjRXNXFRK1d1bis1aHpnSUhWOGFRbnVkUGYvSStjWFhtalF3TDllekFvUkdHMGEKSFZtOURaSGhBb0dCQVBROXRJem52bjNXdVdUMzFTN1lqWUtLQ2tlMTlERE15YjlWbU41VitjbU1ST1d6MzlPSQp0WEVMQlFhVzVqNEszWExMVVdhUWwvNHovemxyZzFjSkVkYkdkdDBRODRzNWxiRDdJcWZJMkVsWUFFUjZ2cmZmCndkczNRUmZXUjloMHNTaW9ET0xORkRHSFdpV2M5Y3BUZUc0eFozOEpsWFY0VmNpUFBFRGtpNWNOQW9HQkFOVSsKUUJxU1l5dk1mMVVrbmxNNHJ1V0ZFaW1icTJzYjF1MkZ3YlhvaWljUVUyZ1pqR2ZuaFJub2E3NWEzYm8zU3hlVQpUNkp4SU4xSFNjZThvRnVrSkpyeGR4a1dLSWw4eDNaWmRYdGhtU0xOZjVlWE9qdU5ybkRvV3IvYlg0dWVuRlFjCitBR0JreTlVZlVxM0hWYkovODdValpCbnRNTmwycDRHZEtSYm5YNUpBb0dBTVJYUm1sdmNzY2Vjbk1rZUEvc3IKZldlbXAwRFBJWnVXbENoc3Y0cEIyQnFqb2hKalVrendRaGEzM05vb3phRTdYaDIwYjB0eDhIbWN1bnA3Kzlycgp4ZUUrOURDNjhXa1NSMjVCU2IwWWtxem42TnRPUnYvbUl0dFk3cVIyN2U2TnlDRDE3Z0xQSXlFVG9lbUlrQy8wClRSa0t0c0pEVWtkcjNoSERSenRuUG1VQ2dZQk1ReDBONDdpUDIyeldlR2dlL3pDZGFQL2IzWTVxbWVROXdnNUwKRGtVS1AyNTAxbDQrY3JCSldiUGV1Z1IrS25ReWxKbitVRk1lai9ZMDlxS3E0NE1yM3B0blgyTlQrRW9sYTB6Mgp1U3JaSllFeUo2VnQwdmZGN1hNM0ZpK1BjVVFiV05qaFFRUHdjMWp6dFpWS2lxZHZ3dGgyQW9ERk9OSDhuZlp0CktVNmo4UUtCZ0JGN3lUUjNreW4vV1AzQ0dUTC84d1NMY3dNd240UFNBQ2NIb0N3eDVzczZ0MmZPYkNiMkdEZGYKNnU3SWRNanFMMFlXMmRnUHU1cW5sMXdlZElJNmwzUUo1eC90eDBsK3pvaUdRbE1KOVhtN1d4WjFTd0NxLzdtSQpLSmhrR0U1bFluMWJ2RWxFZGMvdWo0WkgzcklIVE4wa053ZkhnbTFjci9XZXVQdVRPNDBiCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: kubestash-operator/templates/operator/configuration.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-kubestash-operator-config
  namespace: default
  labels:
    helm.sh/chart: kubestash-operator-v0.12.0
    app.kubernetes.io/name: kubestash-operator
    app.kubernetes.io/instance: my-kubestash-operator
    app.kubernetes.io/version: "v0.12.1"
    app.kubernetes.io/managed-by: Helm
data:
  config.yaml: |
    apiVersion: config.kubestash.com/v1alpha1
    kind: KubeStashConfig
    health:
      healthProbeBindAddress: :8081
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
      certDir: /var/serving-cert
    leaderElection:
      leaderElect: false
      resourceName: cba9d7ad.kubestash.com
    
    webhookInfo:
      validating:
        enable: true
        name: my-kubestash-operator
      mutating:
        enable: true
        name: my-kubestash-operator
    docker:
      registry: ghcr.io/kubestash
      image: kubestash
      tag: v0.12.1
    netVolAccessor:
      cpu: 100m
      memory: 128Mi
      user: 2000
      privilegedMode: false
---
# Source: kubestash-operator/templates/rbac/auth_proxy.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-kubestash-operator-auth-proxy
rules:
  - apiGroups:
      - authentication.k8s.io
    resources:
      - tokenreviews
    verbs:
      - create
  - apiGroups:
      - authorization.k8s.io
    resources:
      - subjectaccessreviews
    verbs:
      - create
---
# Source: kubestash-operator/templates/rbac/cluster_role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-kubestash-operator
  labels:
    helm.sh/chart: kubestash-operator-v0.12.0
    app.kubernetes.io/name: kubestash-operator
    app.kubernetes.io/instance: my-kubestash-operator
    app.kubernetes.io/version: "v0.12.1"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs: ["get", "create", "patch", "update"]
  - apiGroups:
      - admissionregistration.k8s.io
    resources:
      - mutatingwebhookconfigurations
      - validatingwebhookconfigurations
    verbs: ["*"]
  - apiGroups:
      - core.kubestash.com
      - kubedb.com
      - snapshot.storage.k8s.io
    resources:
      - "*"
    verbs: ["*"]
  - apiGroups:
      - storage.kubestash.com
    resources:
      - "*"
    verbs: ["*"]
  - apiGroups:
      - appcatalog.appscode.com
    resources:
      - "*"
    verbs: ["get", "list", "watch"]
  - apiGroups:
      - config.kubestash.com
    resources:
      - "*"
    verbs: ["*"]
  - apiGroups:
      - addons.kubestash.com
    resources:
      - "*"
    verbs: [ "*" ]
  - apiGroups:
      - ""
    resources:
      - events
    verbs: ["create"]
  - apiGroups:
      - apps
    resources:
      - daemonsets
      - statefulsets
      - replicasets
    verbs: ["get", "list", "watch", "create"]
  - apiGroups:
      - apps
    resources:
      - deployments
    verbs: ["get", "list", "watch", "create", "patch", "update"]
  - apiGroups:
      - ""
    resources:
      - persistentvolumeclaims
      - persistentvolumes
    verbs: ["get", "list", "watch", "create", "patch", "delete", "update"]
  - apiGroups:
      - ""
    resources:
      - endpoints
      - pods
    verbs: ["get", "list", "watch"]
  - apiGroups:
      - ""
    resources:
      - services
    verbs: ["get", "list", "watch","create"]
  - apiGroups:
      - ""
    resources:
      - pods/exec
    verbs: ["create"]
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs: ["get", "list", "create", "patch", "watch", "delete"]
  - apiGroups:
      - ""
    resources:
      - configmaps
      - services
    verbs: ["get", "create"]
  - apiGroups:
      - batch
    resources:
      - jobs
      - cronjobs
    verbs: ["get", "list", "watch", "create", "delete", "patch", "update"]
  - apiGroups:
      - ""
    resources:
      - nodes
      - namespaces
    verbs: [ "get", "list", "watch" ]
  - apiGroups:
      - ""
    resources:
      - serviceaccounts
    verbs: ["get", "list", "watch", "create", "delete", "patch", "update"]
  - apiGroups:
      - rbac.authorization.k8s.io
    resources:
      - clusterroles
      - roles
      - rolebindings
      - clusterrolebindings
    verbs: ["get","list", "watch", "create", "delete", "patch", "update"]
  - apiGroups:
      - snapshot.storage.k8s.io
    resources:
      - volumesnapshots
    verbs: ["get","delete"]
  - apiGroups:
      - storage.k8s.io
    resources:
      - storageclasses
    verbs: [ "get", "list", "watch" ]
  - apiGroups:
      - catalog.kubedb.com
    resources:
      - elasticsearchs
    verbs: [ "get", "list", "watch" ]
  - apiGroups:
      - appcatalog.appscode.com
    resources:
      - appbindings
    verbs: [ "get", "list", "watch" ]
  - apiGroups:
      - elasticsearch.kubedb.com
    resources:
      - elasticsearchdashboards
    verbs: ["list"]
  - apiGroups:
      - cert-manager.io
    resources:
      - certificates
    verbs: [ "get", "create"]
---
# Source: kubestash-operator/templates/rbac/metrics_reader.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-kubestash-operator-metrics-reader
rules:
  - nonResourceURLs:
      - /metrics
    verbs:
      - get
---
# Source: kubestash-operator/templates/license/license-checker-cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-kubestash-operator-license-checker
  labels:
    helm.sh/chart: kubestash-operator-v0.12.0
    app.kubernetes.io/name: kubestash-operator
    app.kubernetes.io/instance: my-kubestash-operator
    app.kubernetes.io/version: "v0.12.1"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: appscode:license-checker
subjects:
- kind: ServiceAccount
  name: my-kubestash-operator
  namespace: default
---
# Source: kubestash-operator/templates/license/license-reader-cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-kubestash-operator-license-reader
  labels:
    helm.sh/chart: kubestash-operator-v0.12.0
    app.kubernetes.io/name: kubestash-operator
    app.kubernetes.io/instance: my-kubestash-operator
    app.kubernetes.io/version: "v0.12.1"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: appscode:license-reader
subjects:
- kind: ServiceAccount
  name: my-kubestash-operator
  namespace: default
---
# Source: kubestash-operator/templates/rbac/auth_proxy.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-kubestash-operator-auth-proxy
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-kubestash-operator-auth-proxy
subjects:
  - kind: ServiceAccount
    name: my-kubestash-operator
    namespace: default
---
# Source: kubestash-operator/templates/rbac/cluster_role_binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-kubestash-operator
  labels:
    helm.sh/chart: kubestash-operator-v0.12.0
    app.kubernetes.io/name: kubestash-operator
    app.kubernetes.io/instance: my-kubestash-operator
    app.kubernetes.io/version: "v0.12.1"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-kubestash-operator
subjects:
- kind: ServiceAccount
  name: my-kubestash-operator
  namespace: default
---
# Source: kubestash-operator/templates/rbac/leader_election.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: my-kubestash-operator-leader-election
  namespace: default
  labels:
    helm.sh/chart: kubestash-operator-v0.12.0
    app.kubernetes.io/name: kubestash-operator
    app.kubernetes.io/instance: my-kubestash-operator
    app.kubernetes.io/version: "v0.12.1"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
---
# Source: kubestash-operator/templates/rbac/leader_election.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: my-kubestash-operator-leader-election
  namespace: default
  labels:
    helm.sh/chart: kubestash-operator-v0.12.0
    app.kubernetes.io/name: kubestash-operator
    app.kubernetes.io/instance: my-kubestash-operator
    app.kubernetes.io/version: "v0.12.1"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: my-kubestash-operator-leader-election
subjects:
  - kind: ServiceAccount
    name: my-kubestash-operator
    namespace: default
---
# Source: kubestash-operator/templates/webhook-server/monitoring/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-kubestash-operator
  namespace: default
  labels:
    helm.sh/chart: kubestash-operator-v0.12.0
    app.kubernetes.io/name: kubestash-operator
    app.kubernetes.io/instance: my-kubestash-operator
    app.kubernetes.io/version: "v0.12.1"
    app.kubernetes.io/managed-by: Helm
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: https
  selector:
    app.kubernetes.io/name: kubestash-operator
    app.kubernetes.io/instance: my-kubestash-operator
    component: webhook-server
---
# Source: kubestash-operator/templates/webhook-server/webhook_service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-kubestash-operator-webhook
  namespace: default
  labels:
    helm.sh/chart: kubestash-operator-v0.12.0
    app.kubernetes.io/name: kubestash-operator
    app.kubernetes.io/instance: my-kubestash-operator
    app.kubernetes.io/version: "v0.12.1"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    app.kubernetes.io/name: kubestash-operator
    app.kubernetes.io/instance: my-kubestash-operator
    component: webhook-server
  ports:
  - port: 443
    protocol: TCP
    targetPort: 9443
---
# Source: kubestash-operator/templates/operator/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-kubestash-operator-operator
  namespace: default
  labels:
    helm.sh/chart: kubestash-operator-v0.12.0
    app.kubernetes.io/name: kubestash-operator
    app.kubernetes.io/instance: my-kubestash-operator
    app.kubernetes.io/version: "v0.12.1"
    app.kubernetes.io/managed-by: Helm
    component: operator
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kubestash-operator
      app.kubernetes.io/instance: my-kubestash-operator
      component: operator
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kubestash-operator
        app.kubernetes.io/instance: my-kubestash-operator
        component: operator
      annotations:
        checksum/apiregistration.yaml: 3e120e607f012b27eece96d1c799ea9b9f6cc4f3322ce46d02134fc320e3edcc
    spec:
      
      serviceAccountName: my-kubestash-operator
      containers:
      - name: operator
        image: "ghcr.io/kubestash/kubestash:v0.12.1"
        imagePullPolicy: IfNotPresent
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65534
        args:
          - operator
          - --config=/var/config/config.yaml
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        resources:
          requests:
            cpu: 100m
        volumeMounts:
        - name: kubestash-tmp-volume
          mountPath: /kubestash-tmp
        - name: config
          mountPath: /var/config
      volumes:
      - name: kubestash-tmp-volume
        emptyDir: {}
      - name: config
        configMap:
          name: my-kubestash-operator-config
      securityContext:
        fsGroup: 65535
      nodeSelector:
        kubernetes.io/os: linux
---
# Source: kubestash-operator/templates/webhook-server/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-kubestash-operator-webhook-server
  namespace: default
  labels:
    helm.sh/chart: kubestash-operator-v0.12.0
    app.kubernetes.io/name: kubestash-operator
    app.kubernetes.io/instance: my-kubestash-operator
    app.kubernetes.io/version: "v0.12.1"
    app.kubernetes.io/managed-by: Helm
    component: webhook-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kubestash-operator
      app.kubernetes.io/instance: my-kubestash-operator
      component: webhook-server
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kubestash-operator
        app.kubernetes.io/instance: my-kubestash-operator
        component: webhook-server
      annotations:
        checksum/apiregistration.yaml: 86a477d17ac2d669bfc26155cf1406388d6ba6b757d5767df03e097cccd0659e
    spec:
      
      serviceAccountName: my-kubestash-operator
      containers:
      - name: webhook-server
        image: "ghcr.io/kubestash/kubestash:v0.12.1"
        imagePullPolicy: IfNotPresent
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65534
        args:
          - webhook-server
          - --config=/var/config/config.yaml
        ports:
        - name: webhook-server
          containerPort: 9443
          protocol: TCP
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        resources:
          requests:
            cpu: 100m
        volumeMounts:
        - name: kubestash-tmp-volume
          mountPath: /kubestash-tmp
        - name: serving-cert
          mountPath: /var/serving-cert
          readOnly: true
        - name: config
          mountPath: /var/config
      - name: kube-rbac-proxy
        image: "ghcr.io/appscode/kube-rbac-proxy:v0.11.0"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65534
        args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=10
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
      volumes:
      - name: kubestash-tmp-volume
        emptyDir: {}
      - name: serving-cert
        secret:
          defaultMode: 420
          secretName: my-kubestash-operator-webhook-cert
      - name: config
        configMap:
          name: my-kubestash-operator-config
      securityContext:
        fsGroup: 65535
      nodeSelector:
        kubernetes.io/os: linux
---
# Source: kubestash-operator/templates/license/license.yaml
# if license file is provided, then create a secret for license
---
# Source: kubestash-operator/templates/cleaner/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-kubestash-operator-cleaner
  namespace: default
  labels:
    helm.sh/chart: kubestash-operator-v0.12.0
    app.kubernetes.io/name: kubestash-operator
    app.kubernetes.io/instance: my-kubestash-operator
    app.kubernetes.io/version: "v0.12.1"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": pre-delete
    "helm.sh/hook-delete-policy": hook-succeeded,hook-failed
---
# Source: kubestash-operator/templates/cleaner/cluster_role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-kubestash-operator-cleaner
  labels:
    helm.sh/chart: kubestash-operator-v0.12.0
    app.kubernetes.io/name: kubestash-operator
    app.kubernetes.io/instance: my-kubestash-operator
    app.kubernetes.io/version: "v0.12.1"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": pre-delete
    "helm.sh/hook-delete-policy": hook-succeeded,hook-failed
rules:
  - apiGroups:
      - admissionregistration.k8s.io
    resources:
      - mutatingwebhookconfigurations
      - validatingwebhookconfigurations
    verbs: ["delete"]
  - apiGroups:
      - addons.kubestash.com
      - core.kubestash.com
      - storage.kubestash.com
    resources:
      - "*"
    verbs: ["delete"]
  - apiGroups:
      - batch
    resources:
      - jobs
    verbs: ["delete"]
---
# Source: kubestash-operator/templates/license/license-checker-cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: appscode:license-checker
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
# Get cluster id
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs: ["get", "list", "watch"]
# Issue license
- apiGroups:
  - proxyserver.licenses.appscode.com
  resources:
  - licenserequests
  verbs: ["create"]
# Detect workload/owner of operator pod
- apiGroups:
  - ""
  resources:
  - pods
  verbs: ["get"]
- apiGroups:
  - apps
  resources:
  - deployments
  - replicasets
  verbs: ["get"]
# Write events in case of license verification failure
- apiGroups:
  - ""
  resources:
  - events
  verbs: ["get", "list", "create", "patch"]
# audit site info
- apiGroups:
  - ""
  resources:
  - nodes
  verbs: ["get", "list", "watch"]
---
# Source: kubestash-operator/templates/license/license-reader-cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: appscode:license-reader
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
# Detect license server endpoint for kubedb addons
- apiGroups:
  - apiregistration.k8s.io
  resources:
  - apiservices
  verbs: ["get"]
- nonResourceURLs:
  - /appscode/license
  verbs: ["get"]
---
# Source: kubestash-operator/templates/rbac/user_roles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: appscode:my-kubestash-operator:edit
  labels:
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
- apiGroups:
  - addons.kubestash.com
  - core.kubestash.com
  - storage.kubestash.com
  resources:
  - "*"
  verbs: ["*"]
---
# Source: kubestash-operator/templates/rbac/user_roles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: appscode:my-kubestash-operator:view
  labels:
    rbac.authorization.k8s.io/aggregate-to-view: "true"
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
- apiGroups:
  - addons.kubestash.com
  - core.kubestash.com
  - storage.kubestash.com
  resources:
  - "*"
  verbs: ["get", "list", "watch"]
---
# Source: kubestash-operator/templates/cleaner/cluster_rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-kubestash-operator-cleaner
  labels:
    helm.sh/chart: kubestash-operator-v0.12.0
    app.kubernetes.io/name: kubestash-operator
    app.kubernetes.io/instance: my-kubestash-operator
    app.kubernetes.io/version: "v0.12.1"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": pre-delete
    "helm.sh/hook-delete-policy": hook-succeeded,hook-failed
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-kubestash-operator-cleaner
subjects:
  - kind: ServiceAccount
    name: my-kubestash-operator-cleaner
    namespace: default
---
# Source: kubestash-operator/templates/cleaner/job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: my-kubestash-operator-cleaner
  namespace: default
  labels:
    helm.sh/chart: kubestash-operator-v0.12.0
    app.kubernetes.io/name: kubestash-operator
    app.kubernetes.io/instance: my-kubestash-operator
    app.kubernetes.io/version: "v0.12.1"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": pre-delete
    "helm.sh/hook-delete-policy": hook-succeeded,hook-failed
spec:
  backoffLimit: 3
  activeDeadlineSeconds: 120
  template:
    spec:
      
      serviceAccountName: my-kubestash-operator-cleaner
      containers:
      - name: busybox
        image: "ghcr.io/appscode/kubectl:v1.24"
        command:
          - sh
          - -c
          - "sleep 2; \
           kubectl delete functions.stash.appscode.com update-status pvc-backup pvc-restore || true; \
           kubectl delete tasks.stash.appscode.com pvc-backup pvc-restore || true;"
        imagePullPolicy: IfNotPresent
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65534
      restartPolicy: Never
      nodeSelector:
        kubernetes.io/os: linux
---
# Source: kubestash-operator/templates/webhook-server/mutating_webhook.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: my-kubestash-operator
  labels:
    helm.sh/chart: kubestash-operator-v0.12.0
    app.kubernetes.io/name: kubestash-operator
    app.kubernetes.io/instance: my-kubestash-operator
    app.kubernetes.io/version: "v0.12.1"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
webhooks:
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: my-kubestash-operator-webhook
        namespace: default
        path: /mutate-storage-kubestash-com-v1alpha1-backupstorage
      caBundle: bm90LWNhLWNlcnQ=
    failurePolicy: Fail
    name: mbackupstorage.kb.io
    rules:
      - apiGroups:
          - storage.kubestash.com
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - backupstorages
    sideEffects: None
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: my-kubestash-operator-webhook
        namespace: default
        path: /mutate-storage-kubestash-com-v1alpha1-retentionpolicy
      caBundle: bm90LWNhLWNlcnQ=
    failurePolicy: Fail
    name: mretentionpolicy.kb.io
    rules:
      - apiGroups:
          - storage.kubestash.com
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - retentionpolicies
    sideEffects: None
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: my-kubestash-operator-webhook
        namespace: default
        path: /mutate-core-kubestash-com-v1alpha1-backupblueprint
      caBundle: bm90LWNhLWNlcnQ=
    failurePolicy: Fail
    name: mbackupblueprint.kb.io
    rules:
      - apiGroups:
          - core.kubestash.com
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - backupblueprints
    sideEffects: None
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: my-kubestash-operator-webhook
        namespace: default
        path: /mutate-core-kubestash-com-v1alpha1-backupconfiguration
      caBundle: bm90LWNhLWNlcnQ=
    failurePolicy: Fail
    name: mbackupconfiguration.kb.io
    rules:
      - apiGroups:
          - core.kubestash.com
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - backupconfigurations
    sideEffects: None
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: my-kubestash-operator-webhook
        namespace: default
        path: /mutate-core-kubestash-com-v1alpha1-hooktemplate
      caBundle: bm90LWNhLWNlcnQ=
    failurePolicy: Fail
    name: mhooktemplate.kb.io
    rules:
      - apiGroups:
          - core.kubestash.com
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - hooktemplates
    sideEffects: None
---
# Source: kubestash-operator/templates/webhook-server/validating_webhook.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: my-kubestash-operator
  labels:
    helm.sh/chart: kubestash-operator-v0.12.0
    app.kubernetes.io/name: kubestash-operator
    app.kubernetes.io/instance: my-kubestash-operator
    app.kubernetes.io/version: "v0.12.1"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
webhooks:
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: my-kubestash-operator-webhook
        namespace: default
        path: /validate-storage-kubestash-com-v1alpha1-backupstorage
      caBundle: bm90LWNhLWNlcnQ=
    failurePolicy: Fail
    name: vbackupstorage.kb.io
    rules:
      - apiGroups:
          - storage.kubestash.com
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - backupstorages
    sideEffects: None
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: my-kubestash-operator-webhook
        namespace: default
        path: /validate-storage-kubestash-com-v1alpha1-repository
      caBundle: bm90LWNhLWNlcnQ=
    failurePolicy: Fail
    name: vrepository.kb.io
    rules:
      - apiGroups:
          - storage.kubestash.com
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - repositories
    sideEffects: None
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: my-kubestash-operator-webhook
        namespace: default
        path: /validate-storage-kubestash-com-v1alpha1-retentionpolicy
      caBundle: bm90LWNhLWNlcnQ=
    failurePolicy: Fail
    name: vretentionpolicy.kb.io
    rules:
      - apiGroups:
          - storage.kubestash.com
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - retentionpolicies
    sideEffects: None
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: my-kubestash-operator-webhook
        namespace: default
        path: /validate-core-kubestash-com-v1alpha1-backupbatch
      caBundle: bm90LWNhLWNlcnQ=
    failurePolicy: Fail
    name: vbackupbatch.kb.io
    rules:
      - apiGroups:
          - core.kubestash.com
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - backupbatches
    sideEffects: None
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: my-kubestash-operator-webhook
        namespace: default
        path: /validate-core-kubestash-com-v1alpha1-backupblueprint
      caBundle: bm90LWNhLWNlcnQ=
    failurePolicy: Fail
    name: vbackupblueprint.kb.io
    rules:
      - apiGroups:
          - core.kubestash.com
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - backupblueprints
    sideEffects: None
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: my-kubestash-operator-webhook
        namespace: default
        path: /validate-core-kubestash-com-v1alpha1-backupconfiguration
      caBundle: bm90LWNhLWNlcnQ=
    failurePolicy: Fail
    name: vbackupconfiguration.kb.io
    rules:
      - apiGroups:
          - core.kubestash.com
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - backupconfigurations
    sideEffects: None
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: my-kubestash-operator-webhook
        namespace: default
        path: /validate-core-kubestash-com-v1alpha1-backupsession
      caBundle: bm90LWNhLWNlcnQ=
    failurePolicy: Fail
    name: vbackupsession.kb.io
    rules:
      - apiGroups:
          - core.kubestash.com
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - backupsessions
    sideEffects: None
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: my-kubestash-operator-webhook
        namespace: default
        path: /validate-core-kubestash-com-v1alpha1-hooktemplate
      caBundle: bm90LWNhLWNlcnQ=
    failurePolicy: Fail
    name: vhooktemplate.kb.io
    rules:
      - apiGroups:
          - core.kubestash.com
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - hooktemplates
    sideEffects: None
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: my-kubestash-operator-webhook
        namespace: default
        path: /validate-core-kubestash-com-v1alpha1-restoresession
      caBundle: bm90LWNhLWNlcnQ=
    failurePolicy: Fail
    name: vrestoresession.kb.io
    rules:
      - apiGroups:
          - core.kubestash.com
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - restoresessions
    sideEffects: None
