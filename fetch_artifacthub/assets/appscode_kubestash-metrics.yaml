---
# Source: kubestash-metrics/templates/metricsconfig-backupconfiguration.yaml
apiVersion: metrics.appscode.com/v1alpha1
kind: MetricsConfiguration
metadata:
  name: kubestash-appscode-com-backupconfiguration
spec:
  targetRef:
    apiVersion: core.kubestash.com/v1alpha1
    kind: BackupConfiguration
  commonLabels:
  - key: backup_invoker_kind
    value: "BackupConfiguration"
  - key: backup_invoker_name
    valuePath: .metadata.name
  - key: target_kind
    valuePath: .spec.target.kind
  - key: target_name
    valuePath: .spec.target.name
  - key: target_namespace
    valuePath: .spec.target.namespace
  metrics:
  - name: created
    help: "Unix creation timestamp of this BackupConfiguration object"
    type: gauge
    field:
      path: .metadata.creationTimestamp
      type: DateTime
    metricValue:
      valueFromPath: .metadata.creationTimestamp
  - name: info
    help: "General information about this BackupConfiguration"
    type: gauge
    metricValue:
      value: 1
  - name: sessions
    help: "List of sessions of this BackupConfiguration"
    type: gauge
    field:
      path: .spec.sessions
      type: Array
    labels:
    - key: session_name
      valuePath: .spec.sessions[*].name
    - key: schedule
      valuePath: .spec.sessions[*].scheduler.schedule
    - key: addon_name
      valuePath: .spec.sessions[*].addon.name
    metricValue:
      value: 1
  - name: phase
    help: "BackupConfiguration object current phase"
    type: gauge
    field:
      path: .status.phase
      type: String
    params:
    - key: phase
      valuePath: .status.phase
    states:
      labelKey: phase
      values:
      - labelValue: Ready
        metricValue:
          valueFromExpression: "int(phase == 'Ready')"
      - labelValue: NotReady
        metricValue:
          valueFromExpression: "int(phase == 'NotReady')"
      - labelValue: Invalid
        metricValue:
          valueFromExpression: "int(phase == 'Invalid')" 
  - name: conditions
    help: "Current conditions of this BackupConfiguration"
    type: gauge
    field:
      path: .status.conditions
      type: Array
    labels:
    - key: condition
      valuePath: .status.conditions[*].type
    - key: status
      valuePath: .status.conditions[*].status
    metricValue:
      value: 1
---
# Source: kubestash-metrics/templates/metricsconfig-backupsession.yaml
apiVersion: metrics.appscode.com/v1alpha1
kind: MetricsConfiguration
metadata:
  name: kubestash-appscode-com-backupsession
spec:
  targetRef:
    apiVersion: core.kubestash.com/v1alpha1
    kind: BackupSession
  commonLabels:
  - key: invoker_kind
    value: "BackupSession"
  - key: invoker_name
    valuePath: .metadata.name
  - key: backup_invoker_kind
    valuePath: .spec.invoker.kind
  - key: backup_invoker_name
    valuePath: .spec.invoker.name
  metrics:
  - name: created
    help: "Unix creation timestamp of this BackupSession object"
    type: gauge
    field:
      path: .metadata.creationTimestamp
      type: DateTime
    metricValue:
      valueFromPath: .metadata.creationTimestamp
  - name: info
    help: "General information about this BackupSession"
    type: gauge
    labels:
    - key: session
      valuePath: .spec.session
    - key: phase
      valuePath: .status.phase
    metricValue:
      value: 1
  - name: snapshots
    help: "General information about the snapshots of this BackupSession"
    type: gauge
    field:
      path: .status.snapshots
      type: Array
    labels:
    - key: snapshot_name
      valuePath: .status.snapshots[*].name
    - key: snapshot_phase
      valuePath: .status.snapshots[*].phase
    - key: repository
      valuePath: .status.snapshots[*].repository
    - key: backedup_app_kind
      valuePath: .status.snapshots[*].appRef.kind
    - key: backedup_app_name
      valuePath: .status.snapshots[*].appRef.name
    - key: backedup_app_namespace
      valuePath: .status.snapshots[*].appRef.namespace
    metricValue:
      value: 1
  - name: phase
    help: "BackupSession object current phase"
    type: gauge
    field:
      path: .status.phase
      type: String
    params:
    - key: phase
      valuePath: .status.phase
    states:
      labelKey: phase
      values:
      - labelValue: Pending
        metricValue:
          valueFromExpression: "int(phase == 'Pending')"
      - labelValue: Running
        metricValue:
          valueFromExpression: "int(phase == 'Running')"
      - labelValue: Succeeded
        metricValue:
          valueFromExpression: "int(phase == 'Succeeded')"
      - labelValue: Failed
        metricValue:
          valueFromExpression: "int(phase == 'Failed')"
      - labelValue: Skipped
        metricValue:
          valueFromExpression: "int(phase == 'Skipped')"
  - name: duration_seconds
    help: "Time required to complete this backup process"
    type: gauge
    field:
      path: .status.duration
      type: String
    params:
    - key: duration
      valuePath: .status.duration
    metricValue:
      valueFromExpression: toSecond(duration)
  - name: conditions
    help: "Current conditions of this BackupSession"
    type: gauge
    field:
      path: .status.conditions
      type: Array
    labels:
    - key: condition
      valuePath: .status.conditions[*].type
    - key: status
      valuePath: .status.conditions[*].status
    metricValue:
      value: 1
---
# Source: kubestash-metrics/templates/metricsconfig-backupstorage.yaml
apiVersion: metrics.appscode.com/v1alpha1
kind: MetricsConfiguration
metadata:
  name: kubestash-appscode-com-backupstorage
spec:
  targetRef:
    apiVersion: storage.kubestash.com/v1alpha1
    kind: BackupStorage
  commonLabels:
  - key: invoker_kind
    value: "BackupStorage"
  - key: invoker_name
    valuePath: .metadata.name
  metrics:
  - name: created
    help: "Unix creation timestamp of this BackupStorage object"
    type: gauge
    field:
      path: .metadata.creationTimestamp
      type: DateTime
    metricValue:
      valueFromPath: .metadata.creationTimestamp
  - name: info
    help: "General information about this BackupStorage"
    type: gauge
    labels:
    - key: provider
      valuePath: .spec.storage.provider
    - key: default
      valuePath: .spec.default
    - key: deletionPolicy
      valuePath: .spec.deletionPolicy
    - key: phase
      valuePath: .status.phase
    metricValue:
      value: 1
  - name: repository_size_bytes
    help: "Total backed up data in the repository of this BackupStorage"
    type: gauge
    field: 
      path: .status.repositories
      type: Array
    params:
    - key: size
      valuePath: .status.repositories[*].size
    labels:
    - key: repo_name
      valuePath: .status.repositories[*].name
    - key: repo_namespace
      valuePath: .status.repositories[*].namespace
    - key: repo_path
      valuePath: .status.repositories[*].path
    metricValue:
      valueFromExpression: "bytes(size)"
  - name: phase
    help: "BackupStorage object current phase"
    type: gauge
    field:
      path: .status.phase
      type: String
    params:
    - key: phase
      valuePath: .status.phase
    states:
      labelKey: phase
      values:
      - labelValue: Ready
        metricValue:
          valueFromExpression: "int(phase == 'Ready')"
      - labelValue: NotReady
        metricValue:
          valueFromExpression: "int(phase == 'NotReady')"
  - name: size_bytes
    help: "Total backed up data size in this BackupStorage"
    type: gauge
    field:
      path: .status.totalSize
      type: String
    params:
    - key: size
      valuePath: .status.totalSize
    metricValue:
     valueFromExpression: "bytes(size)"
  - name: conditions
    help: "Current conditions of this BackupStorage"
    type: gauge
    field:
      path: .status.conditions
      type: Array
    labels:
    - key: condition
      valuePath: .status.conditions[*].type
    - key: status
      valuePath: .status.conditions[*].status
    metricValue:
      value: 1
---
# Source: kubestash-metrics/templates/metricsconfig-repository.yaml
apiVersion: metrics.appscode.com/v1alpha1
kind: MetricsConfiguration
metadata:
  name: kubestash-appscode-com-repository
spec:
  targetRef:
    apiVersion: storage.kubestash.com/v1alpha1
    kind: Repository
  commonLabels:
  - key: invoker_kind
    value: "Repository"
  - key: invoker_name
    valuePath: .metadata.name
  - key: target_kind
    valuePath: .spec.appRef.kind
  - key: target_name
    valuePath: .spec.appRef.name
  - key: target_namespace
    valuePath: .spec.appRef.namespace
  metrics:
  - name: created
    help: "Unix creation timestamp of this Repository object"
    type: gauge
    field:
      path: .metadata.creationTimestamp
      type: DateTime
    metricValue:
      valueFromPath: .metadata.creationTimestamp
  - name: info
    help: "General information about this Repository"
    type: gauge
    labels:
    - key: path
      valuePath: .spec.path
    - key: phase
      valuePath: .status.phase
    - key: integrity
      valuePath: .status.integrity
    metricValue:
      value: 1
  - name: last_successful_backup
    help: "Last successful backup stored in this Repository"
    type: gauge
    field:
      path: .status.lastBackupTime
      type: DateTime
    metricValue:
      valueFromPath: .status.lastBackupTime
  - name: size_bytes
    help: "Total backed up data stored in this Repository"
    type: gauge
    field:
      path: .status.size
      type: String
    params:
    - key: size
      valuePath: .status.size
    metricValue:
      valueFromExpression: "bytes(size)"
  - name: snapshot_count_total
    help: "Number of current snapshots stored in this Repository"
    type: gauge
    field:
      path: .status.snapshotCount
      type: Integer
    metricValue:
      valueFromPath: .status.snapshotCount
  - name: conditions
    help: "Current conditions of this Repository"
    type: gauge
    field:
      path: .status.conditions
      type: Array
    labels:
    - key: condition
      valuePath: .status.conditions[*].type
    - key: status
      valuePath: .status.conditions[*].status
    metricValue:
      value: 1
---
# Source: kubestash-metrics/templates/metricsconfig-restoresession.yaml
apiVersion: metrics.appscode.com/v1alpha1
kind: MetricsConfiguration
metadata:
  name: kubestash-appscode-com-restoresession
spec:
  targetRef:
    apiVersion: core.kubestash.com/v1alpha1
    kind: RestoreSession
  commonLabels:
  - key: invoker_kind
    value: "RestoreSession"
  - key: invoker_name
    valuePath: .metadata.name
  - key: target_kind
    valuePath: .spec.target.kind
  - key: target_name
    valuePath: .spec.target.name
  - key: target_namespace
    valuePath: .spec.target.namespace
  metrics:
  - name: created
    help: "Unix creation timestamp of this RestoreSession object"
    type: gauge
    field:
      path: .metadata.creationTimestamp
      type: DateTime
    metricValue:
      valueFromPath: .metadata.creationTimestamp
  - name: info
    help: "General information about this RestoreSession"
    type: gauge
    labels:
    - key: datasource_namespace
      valuePath: .spec.dataSource.namespace
    - key: repository
      valuePath: .spec.dataSource.repository
    - key: snapshot
      valuePath: .spec.dataSource.snapshot
    - key: addon_name
      valuePath: .spec.addon.name
    - key: phase
      valuePath: .status.phase
    metricValue:
      value: 1
  - name: phase
    help: "RestoreSession object current phase"
    type: gauge
    field:
      path: .status.phase
      type: String
    params:
    - key: phase
      valuePath: .status.phase
    states:
      labelKey: phase
      values:
      - labelValue: Pending
        metricValue:
          valueFromExpression: "int(phase == 'Pending')"
      - labelValue: Running
        metricValue:
          valueFromExpression: "int(phase == 'Running')"
      - labelValue: Succeeded
        metricValue:
          valueFromExpression: "int(phase == 'Succeeded')"
      - labelValue: Failed
        metricValue:
          valueFromExpression: "int(phase == 'Failed')"
      - labelValue: Invalid
        metricValue:
          valueFromExpression: "int(phase == 'Invalid')"
      - labelValue: Unknown
        metricValue:
          valueFromExpression: "int(phase == 'Unknown')"
  - name: duration_seconds
    help: "The total time taken to complete the restore process"
    type: gauge
    field:
      path: .status.duration
      type: String
    params:
    - key: duration
      valuePath: .status.duration
    metricValue:
      valueFromExpression: toSecond(duration)
  - name: component_count_total
    help: "The number of total components for this RestoreSession"
    type: gauge
    field:
      path: .status.totalComponents
      type: Integer
    metricValue:
      valueFromPath: .status.totalComponents
  - name: conditions
    help: "Current conditions of this RestoreSession"
    type: gauge
    field:
      path: .status.conditions
      type: Array
    labels:
    - key: condition
      valuePath: .status.conditions[*].type
    - key: status
      valuePath: .status.conditions[*].status
    metricValue:
      value: 1
---
# Source: kubestash-metrics/templates/metricsconfig-snapshot.yaml
apiVersion: metrics.appscode.com/v1alpha1
kind: MetricsConfiguration
metadata:
  name: kubestash-appscode-com-snapshot
spec:
  targetRef:
    apiVersion: storage.kubestash.com/v1alpha1
    kind: Snapshot
  commonLabels:
  - key: invoker_kind
    value: "Snapshot"
  - key: invoker_name
    valuePath: .metadata.name
  - key: target_kind
    valuePath: .spec.appRef.kind
  - key: target_name
    valuePath: .spec.appRef.name
  - key: target_namespace
    valuePath: .spec.appRef.namespace
  metrics:
  - name: created
    help: "Unix creation timestamp of this Snapshot object"
    type: gauge
    field:
      path: .metadata.creationTimestamp
      type: DateTime
    metricValue:
      valueFromPath: .metadata.creationTimestamp
  - name: info
    help: "General information about this Snapshot"
    type: gauge
    labels:
    - key: snapshot_type
      valuePath: .spec.type
    - key: repository
      valuePath: .spec.repository
    - key: session
      valuePath: .spec.session
    - key: backupsession
      valuePath: .spec.backupSession
    - key: version
      valuePath: .spec.version
    - key: phase
      valuePath: .status.phase
    - key: integrity
      valuePath: .status.integrity
    metricValue:
      value: 1
  - name: phase
    help: "Snapshot object current phase"
    type: gauge
    field:
      path: .status.phase
      type: String
    params:
    - key: phase
      valuePath: .status.phase
    states:
      labelKey: phase
      values:
      - labelValue: Pending
        metricValue:
          valueFromExpression: "int(phase == 'Pending')"
      - labelValue: Running
        metricValue:
          valueFromExpression: "int(phase == 'Running')"
      - labelValue: Succeeded
        metricValue:
          valueFromExpression: "int(phase == 'Succeeded')"
      - labelValue: Failed
        metricValue:
          valueFromExpression: "int(phase == 'Failed')"
  - name: size_bytes
    help: "Size of this Snapshot"
    type: gauge
    field:
      path: .status.size
      type: String
    params:
    - key: size
      valuePath: .status.size
    metricValue:
      valueFromExpression: "bytes(size)"
  - name: time_seconds
    help: "The time when this Snapshot was taken"
    type: gauge
    field:
      path: .status.snapshotTime
      type: DateTime
    metricValue:
      valueFromPath: .status.snapshotTime
  - name: component_count_total
    help: "The number of total components for this Snapshot"
    type: gauge
    field:
      path: .status.totalComponents
      type: Integer
    metricValue:
      valueFromPath: .status.totalComponents
  - name: conditions
    help: "Current conditions of this Snapshot"
    type: gauge
    field:
      path: .status.conditions
      type: Array
    labels:
    - key: condition
      valuePath: .status.conditions[*].type
    - key: status
      valuePath: .status.conditions[*].status
    metricValue:
      value: 1
