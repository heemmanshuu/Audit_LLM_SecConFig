---
# Source: locust-plugins/templates/master-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-locust-plugins-master
  labels:
    helm.sh/chart: locust-plugins-0.0.4
    app.kubernetes.io/name: locust-plugins
    app.kubernetes.io/instance: my-locust-plugins
    load_test: example
    app.kubernetes.io/version: "2.15.1"
    app.kubernetes.io/managed-by: Helm
---
# Source: locust-plugins/templates/worker-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-locust-plugins-worker
  labels:
    helm.sh/chart: locust-plugins-0.0.4
    app.kubernetes.io/name: locust-plugins
    app.kubernetes.io/instance: my-locust-plugins
    load_test: example
    app.kubernetes.io/version: "2.15.1"
    app.kubernetes.io/managed-by: Helm
---
# Source: locust-plugins/templates/configmap-config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-locust-plugins-config
  labels:
    helm.sh/chart: locust-plugins-0.0.4
    app.kubernetes.io/name: locust-plugins
    app.kubernetes.io/instance: my-locust-plugins
    load_test: example
    app.kubernetes.io/version: "2.15.1"
    app.kubernetes.io/managed-by: Helm
data:
  docker-entrypoint.sh: |
    #!/bin/sh

    set -eu
    pip install locust_plugins[dashboards] 

    exec /opt/venv/bin/locust $@
---
# Source: locust-plugins/templates/locust-plugins.yaml
apiVersion: v1
kind: Service
metadata:
  name: "locust-plugins-timescaledb"
spec:
  type: LoadBalancer
  ports:
  - port: 5432
    targetPort: 5432
  selector:
    app: "locust-plugins-timescaledb"
---
# Source: locust-plugins/templates/locust-plugins.yaml
apiVersion: v1
kind: Service
metadata:
  name: "my-locust-plugins-grafana"
spec:
  type: "LoadBalancer"
  ports:
  - port: 3000
    targetPort: 3000
  selector:
    app: "my-locust-plugins-grafana"
#
#---
#apiVersion: v1
#kind: PersistentVolumeClaim
#metadata:
#  name: postgres-pvc
#spec:
#  accessModes:
#    - ReadWriteOnce
#  resources:
#    requests:
#      storage: 1Gi
#---
#apiVersion: v1
#kind: PersistentVolumeClaim
#metadata:
#  name: grafana-pvc
#spec:
#  accessModes:
#    - ReadWriteOnce
#  resources:
#    requests:
#      storage: 1Gi
---
# Source: locust-plugins/templates/master-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-locust-plugins
  labels:
    helm.sh/chart: locust-plugins-0.0.4
    app.kubernetes.io/name: locust-plugins
    app.kubernetes.io/instance: my-locust-plugins
    load_test: example
    app.kubernetes.io/version: "2.15.1"
    app.kubernetes.io/managed-by: Helm
    component: "master"
spec:
  type: ClusterIP
  ports:
  - name: master-p1
    port: 5557
    protocol: TCP
    targetPort: 5557
  - name: master-p2
    port: 5558
    protocol: TCP
    targetPort: 5558
  - name: master-p3
    port: 8089
    protocol: TCP
    targetPort: 8089
  selector:
    component: master
    app.kubernetes.io/name: locust-plugins
    app.kubernetes.io/instance: my-locust-plugins
    load_test: example
---
# Source: locust-plugins/templates/locust-plugins.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "locust-plugins-timescaledb"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: locust-plugins-timescaledb
  template:
    metadata:
      labels:
        app: locust-plugins-timescaledb
    spec:
      containers:
      - name: locust-plugins-timescaledb
        image: sky5367/locust-plugins-timescale:latest
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_PASSWORD
          value: password
        - name: TIMESCALEDB_TELEMETRY
          value: "off"
#        volumeMounts:
#        - mountPath: /var/lib/postgresql/data
#          name: postgres-data
#      volumes:
#      - name: postgres-data
#        persistentVolumeClaim:
#          claimName: postgres-pvc
---
# Source: locust-plugins/templates/locust-plugins.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "my-locust-plugins-grafana"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: "my-locust-plugins-grafana"
  template:
    metadata:
      labels:
        app: "my-locust-plugins-grafana"
    spec:
      containers:
      - name: "my-locust-plugins-grafana"
        image: "sky5367/locust-plugins-grafana:latest"
        ports:
        - containerPort: 3000
        env:
        - name: GF_AUTH_DISABLE_LOGIN_FORM
          value: "true"
        - name: GF_AUTH_ANONYMOUS_ENABLED
          value: "true"
        - name: GF_AUTH_ANONYMOUS_ORG_ROLE
          value: "Admin"
        - name: GF_SECURITY_ALLOW_EMBEDDING
          value: "true"
        - name: GF_LOG_LEVEL
          value: "warn"
#        volumeMounts:
#        - mountPath: /var/lib/grafana
#          name: grafana-data
#      volumes:
#      - name: grafana-data
#        persistentVolumeClaim:
#          claimName: grafana-pvc
---
# Source: locust-plugins/templates/master-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-locust-plugins-master
  labels:
    component: master
    helm.sh/chart: locust-plugins-0.0.4
    app.kubernetes.io/name: locust-plugins
    app.kubernetes.io/instance: my-locust-plugins
    load_test: example
    app.kubernetes.io/version: "2.15.1"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      component: master
      app.kubernetes.io/name: locust-plugins
      app.kubernetes.io/instance: my-locust-plugins
      load_test: example
  replicas: 1
  strategy:
    type: RollingUpdate
  template:
    metadata:
      annotations:
        checksum/config-locust-lib: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b
        checksum/config-locust-locustfile: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b
        checksum/config-config: 7b286fea6254d657c72c51caddd66c0db8f1176edb1e97494ad84c85230bd430
        checksum/config-secret: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b
      labels:
        component: master
        helm.sh/chart: locust-plugins-0.0.4
        app.kubernetes.io/name: locust-plugins
        app.kubernetes.io/instance: my-locust-plugins
        load_test: example
        app.kubernetes.io/version: "2.15.1"
        app.kubernetes.io/managed-by: Helm
    spec:
      securityContext:
        {}
      serviceAccountName: my-locust-plugins-master
      containers:
      - name: locust-plugins
        securityContext:
            {}
        image: "locustio/locust:2.24.1"
        command:
        - sh
        - /config/docker-entrypoint.sh
        args:
          - --master
          - --timescale
          #- --expect-workers=3
          - --pgpassword=password
          - --pguser=postgres
          - --pghost=locust-plugins-timescaledb.default.svc.cluster.local
          - --pgport=5432
          - --grafana-url="my-locust-plugins-grafana.default.svc.cluster.local:3000"
        imagePullPolicy: IfNotPresent
        resources:
          {}
        volumeMounts:
          - name: locustfile
            mountPath: "/mnt/locust"
          - name: lib
            mountPath: "/mnt/locust/lib"
          - name: config
            mountPath: /config
        env:
          - name: LOCUST_HOST
            value: "http://locust-plugins-sample-apiserver.locust-plugins.svc.cluster.local:8000"
          - name: LOCUST_LOGLEVEL
            value: "INFO"
          - name: LOCUST_LOCUSTFILE
            value: "/mnt/locust/main.py"
        ports:
          - containerPort: 8089
            name: loc-master-web
            protocol: TCP
          - containerPort: 5557
            name: loc-master-p1
            protocol: TCP
          - containerPort: 5558
            name: loc-master-p2
            protocol: TCP
        readinessProbe:
          initialDelaySeconds: 5
          periodSeconds: 30
          timeoutSeconds: 30
          failureThreshold: 2
          httpGet:
            path: /
            port: 8089
      restartPolicy: Always
      volumes:
        - name: lib
          configMap:
            name: loadtest-lib
        - name: locustfile
          configMap:
            name: loadtest-locustfile
        - name: config
          configMap:
            name: my-locust-plugins-config
---
# Source: locust-plugins/templates/worker-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-locust-plugins-worker
  labels:
    component: worker
    helm.sh/chart: locust-plugins-0.0.4
    app.kubernetes.io/name: locust-plugins
    app.kubernetes.io/instance: my-locust-plugins
    load_test: example
    app.kubernetes.io/version: "2.15.1"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      component: worker
      app.kubernetes.io/name: locust-plugins
      app.kubernetes.io/instance: my-locust-plugins
      load_test: example
  replicas: 1
  strategy:
    type: RollingUpdate
  template:
    metadata:
      annotations:
        checksum/config-locust-lib: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b
        checksum/config-locust-locustfile: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b
        checksum/config-config: 7b286fea6254d657c72c51caddd66c0db8f1176edb1e97494ad84c85230bd430
        checksum/config-secret: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b
      labels:
        component: worker
        helm.sh/chart: locust-plugins-0.0.4
        app.kubernetes.io/name: locust-plugins
        app.kubernetes.io/instance: my-locust-plugins
        load_test: example
        app.kubernetes.io/version: "2.15.1"
        app.kubernetes.io/managed-by: Helm
    spec:
      securityContext:
        {}
      serviceAccountName: my-locust-plugins-worker
      containers:
      - name: locust-plugins
        securityContext:
            {}
        image: "locustio/locust:2.24.1"
        command:
        - sh
        - /config/docker-entrypoint.sh
        args:
          - --worker
          - --timescale
          - --processes=2
          - --pgpassword=password
          - --pguser=postgres
          - --pghost=locust-plugins-timescaledb.default.svc.cluster.local
          - --pgport=5432
          - --grafana-url="my-locust-plugins-grafana.default.svc.cluster.local:3000"
        imagePullPolicy: IfNotPresent
        resources:
          {}
        volumeMounts:
          - name: locustfile
            mountPath: "/mnt/locust"
          - name: lib
            mountPath: "/mnt/locust/lib"
          - name: config
            mountPath: /config
        env:
          - name: LOCUST_HOST
            value: "http://locust-plugins-sample-apiserver.locust-plugins.svc.cluster.local:8000"
          - name: LOCUST_MASTER_NODE_HOST
            value: "my-locust-plugins"
          - name: LOCUST_MASTER_NODE_PORT
            value: "5557"
          - name: LOCUST_LOGLEVEL
            value: "INFO"
          - name: LOCUST_LOCUSTFILE
            value: "/mnt/locust/main.py"
      restartPolicy: Always
      volumes:
        - name: lib
          configMap:
            name: loadtest-lib
        - name: locustfile
          configMap:
            name: loadtest-locustfile
        - name: config
          configMap:
            name: my-locust-plugins-config
