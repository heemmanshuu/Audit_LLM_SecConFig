---
# Source: swr-cache-proxy/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-swr-cache-proxy
  labels:
    helm.sh/chart: swr-cache-proxy-0.2.0
    app.kubernetes.io/name: swr-cache-proxy
    app.kubernetes.io/instance: my-swr-cache-proxy
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
type: Opaque
stringData:
---
# Source: swr-cache-proxy/templates/config-map.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-swr-cache-proxy
  labels:
    helm.sh/chart: swr-cache-proxy-0.2.0
    app.kubernetes.io/name: swr-cache-proxy
    app.kubernetes.io/instance: my-swr-cache-proxy
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
data:
  ORIGIN_URL: ""
  CACHE_DIR: "/mnt/cache"
  CACHE_SIZE_LIMIT_HINT: "1000"
---
# Source: swr-cache-proxy/templates/pvc.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: my-swr-cache-proxy
  labels:
    helm.sh/chart: swr-cache-proxy-0.2.0
    app.kubernetes.io/name: swr-cache-proxy
    app.kubernetes.io/instance: my-swr-cache-proxy
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1000 # pvc size is 20% larger than cache size limit
---
# Source: swr-cache-proxy/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-swr-cache-proxy
  labels:
    helm.sh/chart: swr-cache-proxy-0.2.0
    app.kubernetes.io/name: swr-cache-proxy
    app.kubernetes.io/instance: my-swr-cache-proxy
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: swr-cache-proxy
    app.kubernetes.io/instance: my-swr-cache-proxy
---
# Source: swr-cache-proxy/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-swr-cache-proxy
  labels:
    helm.sh/chart: swr-cache-proxy-0.2.0
    app.kubernetes.io/name: swr-cache-proxy
    app.kubernetes.io/instance: my-swr-cache-proxy
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: swr-cache-proxy
      app.kubernetes.io/instance: my-swr-cache-proxy
  template:
    metadata:
      labels:
        app.kubernetes.io/name: swr-cache-proxy
        app.kubernetes.io/instance: my-swr-cache-proxy
    spec:
      serviceAccountName: default
      securityContext:
        {}
      containers:
        - name: swr-cache-proxy
          securityContext:
            {}
          image: "vividplanet/swr-cache-proxy:v1"
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          envFrom:
            - configMapRef:
                name: my-swr-cache-proxy
            - secretRef:
                name: my-swr-cache-proxy
          livenessProbe:
            httpGet:
              path: /.well-known/liveness
              port: http
          readinessProbe:
            httpGet:
              path: /.well-known/liveness
              port: http
          resources:
            {}
          volumeMounts:
            - name: cache-dir
              mountPath: /mnt/cache
      volumes:
        - name: cache-dir
          persistentVolumeClaim:
            claimName: my-swr-cache-proxy
