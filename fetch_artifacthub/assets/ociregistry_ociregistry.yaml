---
# Source: ociregistry/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-ociregistry
  labels:
    helm.sh/chart: ociregistry-1.3.0
    app.kubernetes.io/name: ociregistry
    app.kubernetes.io/instance: my-ociregistry
    app.kubernetes.io/version: "1.3.0"
    app.kubernetes.io/managed-by: Helm
automountServiceAccountToken: true
---
# Source: ociregistry/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-ociregistry
  labels:
    helm.sh/chart: ociregistry-1.3.0
    app.kubernetes.io/name: ociregistry
    app.kubernetes.io/instance: my-ociregistry
    app.kubernetes.io/version: "1.3.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: NodePort
  ports:
    - port: 8080
      targetPort: http
      protocol: TCP
      name: http
      nodePort: 31080
  selector:
    app.kubernetes.io/name: ociregistry
    app.kubernetes.io/instance: my-ociregistry
---
# Source: ociregistry/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-ociregistry
  labels:
    helm.sh/chart: ociregistry-1.3.0
    app.kubernetes.io/name: ociregistry
    app.kubernetes.io/instance: my-ociregistry
    app.kubernetes.io/version: "1.3.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: ociregistry
      app.kubernetes.io/instance: my-ociregistry
  template:
    metadata:
      labels:
        helm.sh/chart: ociregistry-1.3.0
        app.kubernetes.io/name: ociregistry
        app.kubernetes.io/instance: my-ociregistry
        app.kubernetes.io/version: "1.3.0"
        app.kubernetes.io/managed-by: Helm
    spec:
      serviceAccountName: my-ociregistry
      securityContext:
        {}
      containers:
      - name: ociregistry
        args:
        - --log-level=info
        securityContext:
          {}
        image: quay.io/appzygy/ociregistry:1.3.0
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /health
            port: http
        readinessProbe:
          httpGet:
            path: /health
            port: http
        resources:
          {}
        volumeMounts:
        - mountPath: /var/lib/ociregistry
          name: images
          readOnly: false
      volumes:
      - name: images
        emptyDir:
          sizeLimit: 2Gi
