---
# Source: kubetran/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-kubetran
  labels:
    helm.sh/chart: kubetran-0.1.0
    app.kubernetes.io/name: kubetran
    app.kubernetes.io/instance: my-kubetran
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: kubetran/templates/rbac/auth_proxy_client_clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-kubetran-metrics-reader
  labels:
    helm.sh/chart: kubetran-0.1.0
    app.kubernetes.io/name: kubetran
    app.kubernetes.io/instance: my-kubetran
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
rules:
- nonResourceURLs:
  - "/metrics"
  verbs:
  - get
---
# Source: kubetran/templates/rbac/auth_proxy_role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-kubetran-proxy-role
  labels:
    helm.sh/chart: kubetran-0.1.0
    app.kubernetes.io/name: kubetran
    app.kubernetes.io/instance: my-kubetran
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
# Source: kubetran/templates/rbac/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-kubetran
  labels:
    helm.sh/chart: kubetran-0.1.0
    app.kubernetes.io/name: kubetran
    app.kubernetes.io/instance: my-kubetran
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
aggregationRule:
  clusterRoleSelectors:
  - matchLabels:
      app.kubernetes.io/name: kubetran
      app.kubernetes.io/instance: my-kubetran
---
# Source: kubetran/templates/rbac/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-kubetran-manager-role
  labels:
    helm.sh/chart: kubetran-0.1.0
    app.kubernetes.io/name: kubetran
    app.kubernetes.io/instance: my-kubetran
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
    - apps
    resources:
    - statefulsets
    verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - batch
    resources:
    - jobs
    verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - common.apecloud.io
    resources:
    - serialjobs
    verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - common.apecloud.io
    resources:
    - serialjobs/finalizers
    verbs:
    - update
  - apiGroups:
    - common.apecloud.io
    resources:
    - serialjobs/status
    verbs:
    - get
    - patch
    - update
  - apiGroups:
    - ""
    resources:
    - events
    - pods
    verbs:
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - ""
    resources:
    - events
    - pods
    - pods/log
    verbs:
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - ""
    resources:
    - namespaces
    verbs:
    - get
    - list
  - apiGroups:
    - ""
    resources:
    - pods/log
    verbs:
    - get
    - list
  - apiGroups:
    - ""
    resources:
    - secrets
    - services
    verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - datamigration.apecloud.io
    resources:
    - migrationtasks
    verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - datamigration.apecloud.io
    resources:
    - migrationtasks/finalizers
    verbs:
    - update
  - apiGroups:
    - datamigration.apecloud.io
    resources:
    - migrationtasks/status
    verbs:
    - get
    - patch
    - update
  - apiGroups:
    - datamigration.apecloud.io
    resources:
    - migrationtemplates
    verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - datamigration.apecloud.io
    resources:
    - migrationtemplates/finalizers
    verbs:
    - update
  - apiGroups:
    - datamigration.apecloud.io
    resources:
    - migrationtemplates/status
    verbs:
    - get
    - patch
    - update
  - apiGroups:
    - datareplication.apecloud.io
    resources:
    - replicationchannels
    verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - datareplication.apecloud.io
    resources:
    - replicationchannels/finalizers
    verbs:
    - update
  - apiGroups:
    - datareplication.apecloud.io
    resources:
    - replicationchannels/status
    verbs:
    - get
    - patch
    - update
  - apiGroups:
    - datareplication.apecloud.io
    resources:
    - replicationdefinitions
    verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - datareplication.apecloud.io
    resources:
    - replicationdefinitions/finalizers
    verbs:
    - update
  - apiGroups:
    - datareplication.apecloud.io
    resources:
    - replicationdefinitions/status
    verbs:
    - get
    - patch
    - update
  - apiGroups:
    - datareplication.apecloud.io
    resources:
    - replicationtopologies
    verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - datareplication.apecloud.io
    resources:
    - replicationtopologies/finalizers
    verbs:
    - update
  - apiGroups:
    - datareplication.apecloud.io
    resources:
    - replicationtopologies/status
    verbs:
    - get
    - patch
    - update
---
# Source: kubetran/templates/rbac/common_serialjob_editor_role.yaml
# permissions for end users to edit serialjobs.
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-kubetran-serialjob-editor-role
  labels:
    helm.sh/chart: kubetran-0.1.0
    app.kubernetes.io/name: kubetran
    app.kubernetes.io/instance: my-kubetran
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - common.apecloud
  resources:
  - serialjobs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - common.apecloud
  resources:
  - serialjobs/status
  verbs:
  - get
---
# Source: kubetran/templates/rbac/common_serialjob_viewer_role.yaml
# permissions for end users to view serialjobs.
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-kubetran-serialjob-viewer-role
  labels:
    helm.sh/chart: kubetran-0.1.0
    app.kubernetes.io/name: kubetran
    app.kubernetes.io/instance: my-kubetran
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - common.apecloud
  resources:
  - serialjobs
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - common.apecloud
  resources:
  - serialjobs/status
  verbs:
  - get
---
# Source: kubetran/templates/rbac/migrationjob_editor_role.yaml
# permissions for end users to edit migrationjobs.
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-kubetran-task-editor-role
  labels:
    helm.sh/chart: kubetran-0.1.0
    app.kubernetes.io/name: kubetran
    app.kubernetes.io/instance: my-kubetran
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - datamigration.apedt.io
  resources:
  - migrationjobs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - datamigration.apedt.io
  resources:
  - migrationjobs/status
  verbs:
  - get
---
# Source: kubetran/templates/rbac/migrationjob_viewer_role.yaml
# permissions for end users to view migrationjobs.
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-kubetran-task-viewer-role
  labels:
    helm.sh/chart: kubetran-0.1.0
    app.kubernetes.io/name: kubetran
    app.kubernetes.io/instance: my-kubetran
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - datamigration.apedt.io
  resources:
  - migrationjobs
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - datamigration.apedt.io
  resources:
  - migrationjobs/status
  verbs:
  - get
---
# Source: kubetran/templates/rbac/migrationtemplate_editor_role.yaml
# permissions for end users to edit migrationtemplates.
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-kubetran-template-editor-role
  labels:
    helm.sh/chart: kubetran-0.1.0
    app.kubernetes.io/name: kubetran
    app.kubernetes.io/instance: my-kubetran
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - datamigration.apedt.io
  resources:
  - migrationtemplates
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - datamigration.apedt.io
  resources:
  - migrationtemplates/status
  verbs:
  - get
---
# Source: kubetran/templates/rbac/migrationtemplate_viewer_role.yaml
# permissions for end users to view migrationtemplates.
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-kubetran-template-viewer-role
  labels:
    helm.sh/chart: kubetran-0.1.0
    app.kubernetes.io/name: kubetran
    app.kubernetes.io/instance: my-kubetran
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - datamigration.apedt.io
  resources:
  - migrationtemplates
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - datamigration.apedt.io
  resources:
  - migrationtemplates/status
  verbs:
  - get
---
# Source: kubetran/templates/rbac/auth_proxy_role_binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-kubetran-proxy-rolebinding
  labels:
    helm.sh/chart: kubetran-0.1.0
    app.kubernetes.io/name: kubetran
    app.kubernetes.io/instance: my-kubetran
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-kubetran-proxy-role
subjects:
- kind: ServiceAccount
  name: my-kubetran
  namespace: default
---
# Source: kubetran/templates/rbac/clusterrole_binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-kubetran
  labels:
    helm.sh/chart: kubetran-0.1.0
    app.kubernetes.io/name: kubetran
    app.kubernetes.io/instance: my-kubetran
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-kubetran
subjects:
- kind: ServiceAccount
  name: my-kubetran
  namespace: default
---
# Source: kubetran/templates/rbac/leader_election_role.yaml
# permissions to do leader election.
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: my-kubetran-leader-election-role
  labels:
    helm.sh/chart: kubetran-0.1.0
    app.kubernetes.io/name: kubetran
    app.kubernetes.io/instance: my-kubetran
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
# Source: kubetran/templates/rbac/leader_election_role_binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: my-kubetran-leader-election-rolebinding
  labels:
    helm.sh/chart: kubetran-0.1.0
    app.kubernetes.io/name: kubetran
    app.kubernetes.io/instance: my-kubetran
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: my-kubetran-leader-election-role
subjects:
  - kind: ServiceAccount
    name: my-kubetran
    namespace: default
---
# Source: kubetran/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: kubetran
  labels:
    control-plane: controller-manager
    helm.sh/chart: kubetran-0.1.0
    app.kubernetes.io/name: kubetran
    app.kubernetes.io/instance: my-kubetran
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: web-server
      protocol: TCP
      name: web-server
  selector:
    app.kubernetes.io/name: kubetran
    app.kubernetes.io/instance: my-kubetran
---
# Source: kubetran/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-kubetran
  labels:
    helm.sh/chart: kubetran-0.1.0
    app.kubernetes.io/name: kubetran
    app.kubernetes.io/instance: my-kubetran
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kubetran
      app.kubernetes.io/instance: my-kubetran
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kubetran
        app.kubernetes.io/instance: my-kubetran
    spec:
      priorityClassName: 
      serviceAccountName: my-kubetran
      securityContext:
        runAsNonRoot: true
      containers:
        - name: manager
          args:
            - "--health-probe-bind-address=:8081"
            - "--metrics-bind-address=:8080"
            - "--leader-elect"
            - "--zap-devel=false"
            - "--zap-time-encoding=iso8601"
            - "--zap-encoder=console"
          image: "docker.io/apecloud/kubetran-platform:latest"
          imagePullPolicy: IfNotPresent
          ports:
            - name: health
              containerPort: 8081
              protocol: TCP
            - name: metrics
              containerPort: 8080
              protocol: TCP
            - name: web-server
              containerPort: 9888
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: health
            initialDelaySeconds: 15
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /readyz
              port: health
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
            {}
      dnsPolicy: ClusterFirst
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: kb-controller
                operator: In
                values:
                - "true"
            weight: 100
      tolerations:
        - effect: NoSchedule
          key: kb-controller
          operator: Equal
          value: "true"
      terminationGracePeriodSeconds: 10
---
# Source: kubetran/templates/plugin/migrationtemplates.yaml
apiVersion: datamigration.apecloud.io/v1alpha1
kind: MigrationTemplate
metadata:
  name: apecloud-mysql2mysql
spec:
  taskType:
    - initialization
    - cdc
    - initialization-and-cdc
  source:
    dbType: "MySQL"
    dbVersion: "8.*"
  target:
    dbType: "MySQL"
    dbVersion: "8.*"
  initialization:
    isPositionPreparation: true
    steps:
      - step: preCheck
        container:
          image: apecloud/ape-dts:0.1.1
          args:
            - "/secret/config"
        param:
          extractor.extract_type: basic
          extractor.db_type: mysql
          sinker.batch_size: 2
          sinker.sink_type: basic
          sinker.db_type: mysql
          pipeline.type: "snapshot"
          pipeline.buffer_size: 4
          pipeline.parallel_size: 2
          pipeline.checkpoint_interval_secs: 10
          pipeline.parallel_type: serial
          runtime.log_level: info
          runtime.log4rs_file: ./log4rs.yaml
          runtime.log_dir: ./logs
          precheck.do_struct_init: true
          precheck.do_cdc: true
      - step: initStruct
        container:
          image: apecloud/ape-dts:0.1.1
          args:
            - "/secret/config"
        param:
          extractor.extract_type: struct
          extractor.db_type: mysql
          sinker.batch_size: 2
          sinker.sink_type: struct
          sinker.db_type: mysql
          sinker.conflict_policy: ignore
          pipeline.type: "snapshot"
          pipeline.buffer_size: 100
          pipeline.parallel_size: 2
          pipeline.checkpoint_interval_secs: 10
          pipeline.parallel_type: serial
          runtime.log_level: info
          runtime.log4rs_file: ./log4rs.yaml
          runtime.log_dir: ./logs
      - step: initData
        container:
          image: apecloud/ape-dts:0.1.1
          args:
            - "/secret/config"
        param:
          extractor.extract_type: snapshot
          extractor.db_type: mysql
          sinker.batch_size: 100
          sinker.sink_type: write
          sinker.db_type: mysql
          pipeline.type: "snapshot"
          pipeline.buffer_size: 8000
          pipeline.parallel_size: 8
          pipeline.checkpoint_interval_secs: 10
          pipeline.parallel_type: rdb_merge
          runtime.log_level: info
          runtime.log4rs_file: ./log4rs.yaml
          runtime.log_dir: ./logs
  cdc:
    container:
      image: apecloud/ape-dts:0.1.1
      args:
        - "/secret/config"
    param:
      extractor.server_id: 10086
      extractor.binlog_filename: ""
      extractor.binlog_position: 0
      extractor.heartbeat_interval_secs: 10
      extractor.extract_type: cdc
      extractor.db_type: mysql
      sinker.batch_size: 100
      sinker.sink_type: write
      sinker.db_type: mysql
      pipeline.type: rdb_merge
      pipeline.buffer_size: 8000
      pipeline.parallel_size: 8
      pipeline.checkpoint_interval_secs: 10
      pipeline.parallel_type: rdb_merge
      runtime.log_level: info
      runtime.log4rs_file: ./log4rs.yaml
      runtime.log_dir: ./logs
---
# Source: kubetran/templates/plugin/migrationtemplates.yaml
apiVersion: datamigration.apecloud.io/v1alpha1
kind: MigrationTemplate
metadata:
  name: apecloud-pg2pg
spec:
  taskType:
    - initialization
    - cdc
    - initialization-and-cdc
  source:
    dbType: "PostgreSQL"
    dbVersion: "14.*"
  target:
    dbType: "PostgreSQL"
    dbVersion: "14.*"
  initialization:
    isPositionPreparation: true
    steps:
      - step: preCheck
        container:
          image: apecloud/ape-dts:0.1.1
          args:
            - /secret/config
        param:
          extractor.extract_type: basic
          extractor.db_type: pg
          sinker.batch_size: 2
          sinker.sink_type: basic
          sinker.db_type: pg
          pipeline.type: "snapshot"
          pipeline.buffer_size: 4
          pipeline.parallel_size: 2
          pipeline.checkpoint_interval_secs: 10
          pipeline.parallel_type: serial
          runtime.log_level: info
          runtime.log4rs_file: ./log4rs.yaml
          runtime.log_dir: ./logs
          precheck.do_struct_init: true
          precheck.do_cdc: true
      - step: initStruct
        container:
          image: apecloud/ape-dts:0.1.1
          args:
            - /secret/config
        param:
          extractor.extract_type: struct
          sinker.batch_size: 2
          sinker.sink_type: struct
          sinker.conflict_policy: ignore
          pipeline.type: "snapshot"
          pipeline.buffer_size: 1000
          pipeline.parallel_size: 2
          pipeline.checkpoint_interval_secs: 10
          pipeline.parallel_type:
            serial
          runtime.log_level: info
          runtime.log4rs_file: ./log4rs.yaml
          runtime.log_dir: ./logs
      - step: initData
        container:
          image: apecloud/ape-dts:0.1.1
          args:
            - /secret/config
        param:
          extractor.extract_type: snapshot
          sinker.batch_size: 100
          sinker.sink_type: write
          pipeline.type: "snapshot"
          pipeline.buffer_size: 8000
          pipeline.parallel_size: 8
          pipeline.checkpoint_interval_secs: 30
          pipeline.parallel_type: snapshot
          runtime.log_level: info
          runtime.log4rs_file: ./log4rs.yaml
          runtime.log_dir: ./logs
  cdc:
    container:
      image: apecloud/ape-dts:0.1.1
      args:
        - /secret/config
    param:
      extractor.start_lsn: ""
      extractor.heartbeat_interval_secs: 10
      extractor.extract_type: cdc
      sinker.batch_size: 100
      sinker.sink_type: write
      pipeline.type: rdb_merge
      pipeline.buffer_size: 8000
      pipeline.parallel_size: 8
      pipeline.checkpoint_interval_secs: 10
      pipeline.parallel_type: rdb_merge
      runtime.log_level: info
      runtime.log4rs_file: ./log4rs.yaml
      runtime.log_dir: ./logs
---
# Source: kubetran/templates/plugin/migrationtemplates.yaml
apiVersion: datamigration.apecloud.io/v1alpha1
kind: MigrationTemplate
metadata:
  name: apecloud-mongo2mongo
spec:
  taskType:
    - initialization
    - cdc
    - initialization-and-cdc
  source:
    dbType: "MongoDB"
    dbVersion: "5.*+"
  target:
    dbType: "MongoDB"
    dbVersion: "5.*+"
  initialization:
    isPositionPreparation: true
    steps:
      - step: preCheck
        container:
          image: apecloud/ape-dts:0.1.1
          args:
            - /secret/config
        param:
          extractor.extract_type: basic
          extractor.db_type: mongo
          sinker.batch_size: 2
          sinker.sink_type: basic
          sinker.db_type: mongo
          pipeline.type: "snapshot"
          pipeline.buffer_size: 4
          pipeline.parallel_size: 2
          pipeline.checkpoint_interval_secs: 10
          pipeline.parallel_type: serial
          runtime.log_level: info
          runtime.log4rs_file: ./log4rs.yaml
          runtime.log_dir: ./logs
          precheck.do_struct_init: true
          precheck.do_cdc: true
      - step: initData
        container:
          image: apecloud/ape-dts:0.1.1
          args:
            - /secret/config
        param:
          extractor.extract_type: snapshot
          extractor.db_type: mongo
          sinker.batch_size: 100
          sinker.sink_type: write
          sinker.db_type: mongo
          pipeline.type: "snapshot"
          pipeline.buffer_size: 8000
          pipeline.parallel_size: 8
          pipeline.checkpoint_interval_secs: 10
          pipeline.parallel_type: snapshot
          runtime.log_level: info
          runtime.log4rs_file: ./log4rs.yaml
          runtime.log_dir: ./logs
  cdc:
    container:
      image: apecloud/ape-dts:0.1.1
      args:
        - /secret/config
    param:
      extractor.start_timestamp: 1688119641
      extractor.heartbeat_interval_secs: 10
      extractor.extract_type: cdc
      extractor.db_type: mongo
      extractor.resume_token: ""
      sinker.batch_size: 100
      sinker.sink_type: write
      sinker.db_type: mongo
      pipeline.type: mongo
      pipeline.buffer_size: 8000
      pipeline.parallel_size: 8
      pipeline.checkpoint_interval_secs: 10
      pipeline.parallel_type: mongo
      runtime.log_level: info
      runtime.log4rs_file: ./log4rs.yaml
      runtime.log_dir: ./logs
---
# Source: kubetran/templates/plugin/migrationtemplates.yaml
apiVersion: datareplication.apecloud.io/v1alpha1
kind: ReplicationDefinition
metadata:
  name: mysql-source
spec:
  type: source
  nodeDef:
    dbType: MySQL
    dbVersion: 8.*
    relConstraints:
      - dbType: MySQL
        dbVersion: 8.*
  cycleDef:
    isSupported: true

  moduleDefs:
    preCheck:
      container:
        image: apecloud/ape-dts:0.1.3-test
        args:
          - "/secret/config"
      param:
        extractor.extract_type: basic
        extractor.db_type: mysql
        sinker.batch_size: 2
        sinker.sink_type: basic
        sinker.db_type: mysql
        pipeline.type: basic
        pipeline.buffer_size: 4
        pipeline.checkpoint_interval_secs: 10
        parallelizer.parallel_type: serial
        parallelizer.parallel_size: 2
        runtime.log_level: info
        runtime.log4rs_file: ./log4rs.yaml
        runtime.log_dir: ./logs
        precheck.do_struct_init: true
        precheck.do_cdc: true
    initStruct:
      container:
        image: apecloud/ape-dts:0.1.3-test
        args:
          - "/secret/config"
      param:
        extractor.extract_type: struct
        extractor.db_type: mysql
        sinker.batch_size: 2
        sinker.sink_type: struct
        sinker.db_type: mysql
        sinker.conflict_policy: ignore
        pipeline.type: basic
        pipeline.buffer_size: 100
        pipeline.checkpoint_interval_secs: 10
        parallelizer.parallel_type: serial
        parallelizer.parallel_size: 2
        runtime.log_level: info
        runtime.log4rs_file: ./log4rs.yaml
        runtime.log_dir: ./logs
    initData:
      container:
        image: apecloud/ape-dts:0.1.3-test
        args:
          - "/secret/config"
      param:
        extractor.extract_type: snapshot
        extractor.db_type: mysql
        sinker.batch_size: 100
        sinker.sink_type: write
        sinker.db_type: mysql
        pipeline.type: basic
        pipeline.buffer_size: 1000
        pipeline.checkpoint_interval_secs: 10
        parallelizer.parallel_type: snapshot
        parallelizer.parallel_size: 8
        runtime.log_level: info
        runtime.log4rs_file: ./log4rs.yaml
        runtime.log_dir: ./logs
    cdc:
      container:
        image: apecloud/ape-dts:0.1.3-test
        args:
          - "/secret/config"
      param:
        extractor.server_id: 10086
        extractor.binlog_filename: ""
        extractor.binlog_position: 0
        extractor.heartbeat_interval_secs: 10
        extractor.extract_type: cdc
        extractor.db_type: mysql
        sinker.batch_size: 100
        sinker.sink_type: write
        sinker.db_type: mysql
        pipeline.type: basic
        pipeline.buffer_size: 1000
        pipeline.checkpoint_interval_secs: 10
        parallelizer.parallel_type: rdb_merge
        parallelizer.parallel_size: 8
        runtime.log_level: info
        runtime.log4rs_file: ./log4rs.yaml
        runtime.log_dir: ./logs
---
# Source: kubetran/templates/plugin/migrationtemplates.yaml
apiVersion: datareplication.apecloud.io/v1alpha1
kind: ReplicationDefinition
metadata:
  name: mysql-sink
spec:
  type: sink
  nodeDef:
    dbType: MySQL
    dbVersion: 8.*
    relConstraints:
      - dbType: MySQL
        dbVersion: 8.*
  cycleDef:
    isSupported: true
    param:
      pipeline.type: transaction
  moduleDefs:
    preCheck:
      container:
        image: apecloud/ape-dts:0.1.3-test
        args:
          - "/secret/config"
      param:
        extractor.extract_type: basic
        extractor.db_type: mysql
        sinker.batch_size: 2
        sinker.sink_type: basic
        sinker.db_type: mysql
        pipeline.type: basic
        pipeline.buffer_size: 4
        pipeline.checkpoint_interval_secs: 10
        parallelizer.parallel_type: serial
        parallelizer.parallel_size: 2
        runtime.log_level: info
        runtime.log4rs_file: ./log4rs.yaml
        runtime.log_dir: ./logs
        precheck.do_struct_init: true
        precheck.do_cdc: true
    initStruct:
      container:
        image: apecloud/ape-dts:0.1.3-test
        args:
          - "/secret/config"
      param:
        extractor.extract_type: struct
        extractor.db_type: mysql
        sinker.batch_size: 2
        sinker.sink_type: struct
        sinker.db_type: mysql
        sinker.conflict_policy: ignore
        pipeline.type: basic
        pipeline.buffer_size: 100
        pipeline.checkpoint_interval_secs: 10
        parallelizer.parallel_type: serial
        parallelizer.parallel_size: 2
        runtime.log_level: info
        runtime.log4rs_file: ./log4rs.yaml
        runtime.log_dir: ./logs
    initData:
      container:
        image: apecloud/ape-dts:0.1.3-test
        args:
          - "/secret/config"
      param:
        extractor.extract_type: snapshot
        extractor.db_type: mysql
        sinker.batch_size: 100
        sinker.sink_type: write
        sinker.db_type: mysql
        pipeline.type: basic
        pipeline.buffer_size: 1000
        pipeline.checkpoint_interval_secs: 10
        parallelizer.parallel_type: snapshot
        parallelizer.parallel_size: 8
        runtime.log_level: info
        runtime.log4rs_file: ./log4rs.yaml
        runtime.log_dir: ./logs
    cdc:
      container:
        image: apecloud/ape-dts:0.1.3-test
        args:
          - "/secret/config"
      param:
        extractor.server_id: 10086
        extractor.binlog_filename: ""
        extractor.binlog_position: 0
        extractor.heartbeat_interval_secs: 10
        extractor.extract_type: cdc
        extractor.db_type: mysql
        sinker.batch_size: 100
        sinker.sink_type: write
        sinker.db_type: mysql
        pipeline.type: basic
        pipeline.buffer_size: 1000
        pipeline.checkpoint_interval_secs: 10
        parallelizer.parallel_type: rdb_merge
        parallelizer.parallel_size: 8
        runtime.log_level: info
        runtime.log4rs_file: ./log4rs.yaml
        runtime.log_dir: ./logs
