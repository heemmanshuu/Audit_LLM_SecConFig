---
# Source: namespace-configuration-operator/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: namespace-configuration-operator-manager-role
rules:
- apiGroups:
  - '*'
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - redhatcop.redhat.io
  resources:
  - groupconfigs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - redhatcop.redhat.io
  resources:
  - groupconfigs/finalizers
  verbs:
  - update
- apiGroups:
  - redhatcop.redhat.io
  resources:
  - groupconfigs/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - redhatcop.redhat.io
  resources:
  - namespaceconfigs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - redhatcop.redhat.io
  resources:
  - namespaceconfigs/finalizers
  verbs:
  - update
- apiGroups:
  - redhatcop.redhat.io
  resources:
  - namespaceconfigs/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - redhatcop.redhat.io
  resources:
  - userconfigs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - redhatcop.redhat.io
  resources:
  - userconfigs/finalizers
  verbs:
  - update
- apiGroups:
  - redhatcop.redhat.io
  resources:
  - userconfigs/status
  verbs:
  - get
  - patch
  - update
---
# Source: namespace-configuration-operator/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: namespace-configuration-operator-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: namespace-configuration-operator-manager-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: default
---
# Source: namespace-configuration-operator/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: namespace-configuration-operator-leader-election-role
  namespace: default
rules:
- apiGroups:
  - ""
  - coordination.k8s.io
  resources:
  - configmaps
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
# Source: namespace-configuration-operator/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: namespace-configuration-operator-leader-election-rolebinding
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: namespace-configuration-operator-leader-election-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: default
---
# Source: namespace-configuration-operator/templates/manager.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-namespace-configuration-operator
  labels:
    helm.sh/chart: namespace-configuration-operator-0.0.1
    app.kubernetes.io/name: namespace-configuration-operator
    app.kubernetes.io/instance: my-namespace-configuration-operator
    app.kubernetes.io/version: "0.0.1"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: namespace-configuration-operator
      app.kubernetes.io/instance: my-namespace-configuration-operator
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: namespace-configuration-operator
        app.kubernetes.io/instance: my-namespace-configuration-operator
    spec:
      containers:
      - command:
        - /manager
        args:
        - --leader-elect
        image: "docker-openshift-stakater-nexus.apps.prod.clusters.stakater.io/stakater/namespace-configuration-operator:0.0.1"
        imagePullPolicy: IfNotPresent
        name: namespace-configuration-operator 
        resources:
            requests:
              cpu: 100m
              memory: 20Mi
        ports:
          - containerPort: 8081
            protocol: TCP
            name: metrics-server
          - containerPort: 8080
            protocol: TCP
            name: server
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
