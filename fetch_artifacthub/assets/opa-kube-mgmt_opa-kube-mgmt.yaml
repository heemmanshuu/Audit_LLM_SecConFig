---
# Source: opa-kube-mgmt/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-opa-kube-mgmt
  labels:
    app: my-opa-kube-mgmt
    chart: opa-kube-mgmt-8.5.8
    release: "my-opa-kube-mgmt"
    heritage: "Helm"
---
# Source: opa-kube-mgmt/templates/webhookconfiguration.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-opa-kube-mgmt-cert
  labels:
    app: my-opa-kube-mgmt
    chart: "opa-kube-mgmt-8.5.8"
    release: "my-opa-kube-mgmt"
    heritage: "Helm"
type: Opaque
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWekNDQWorZ0F3SUJBZ0lRV1RaNlR6NTI3M0p3OVVwNGdDdk5TVEFOQmdrcWhraUc5dzBCQVFzRkFEQWIKTVJrd0Z3WURWUVFERXhCdmNHRXRZV1J0YVhOemFXOXVMV05oTUI0WERUSTBNRGt4TmpBNE1URXpOMW9YRFRNMApNRGt4TkRBNE1URXpOMW93SnpFbE1DTUdBMVVFQXhNY2JYa3RiM0JoTFd0MVltVXRiV2R0ZEM1a1pXWmhkV3gwCkxuTjJZekNDQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFPcTdKR2RKZU1XMDZrRzAKdFJsZ05UZ0FYbTh2Z0EvZ1RRcVZja05OeGM2c1VTbFk2elFhcTVoWkNRaTN0eWdtVHFwbGNraU9HT05hR3NuYwo5TnBJWi90OFFLSnRHQ3JUdnRrOGhiTEo5WVJ3c2RXVmpZeGYvd0l5eVhibElCSmpxSHRKU2dHNEwrUTljNGI3CmhONEtSeVlKRUJTZHRoaWNGYitraG9mZW5BZml4b2RDYTRFNktWTGVNUzNNWVUrTy9HdHhPTWRHeFZzcFhGOGsKSDY0c1c1Rk1Za0l1Unh3TmhXc1o4ZXRLOHcvUjNYNEtQaS93WjFsUFkzMjE1RE91akJUek9KQldtcTlZdENvRwpmV1lmM3VGSnpFOFE2MGU0Y0oxMlEyaTRiZTB6SHh1M1NMdkJUem9majZxSDA4NnczUEM3cFVrZWFTSjVuNVdrClJGVEFOeUVDQXdFQUFhT0JpakNCaHpBT0JnTlZIUThCQWY4RUJBTUNCYUF3SFFZRFZSMGxCQll3RkFZSUt3WUIKQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQXdHQTFVZEV3RUIvd1FDTUFBd0h3WURWUjBqQkJnd0ZvQVVtb084QU9ESAo0dVQ3UjYzblV0RzRHb2VObDE0d0p3WURWUjBSQkNBd0hvSWNiWGt0YjNCaExXdDFZbVV0YldkdGRDNWtaV1poCmRXeDBMbk4yWXpBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQWdTc2pxMlltc0d1L080RzRsTjBFdGJ1cnliTVUKbjhRMDZPam9RWFlzdVpmbWlHNWM1NW1ZTEhGdzBlbEFzOUZMU3o1aHpWeTFnTUo3U2RjeHlWQWNDeWtKQUlqWgpjNHRkZFZCT0srR0tpRkR6K1ZMS1BvRkRxMlBpNU5xQjM4cG52cnMxalNsYzYycFg3Qnc4cXB5bXp5TzNUcFYrCjBVWDdtRkw4a1RxZkszNlNpK3d0Kzc4Tm9sQ1hLT2JweTVmRnBuWTlCQWtsN3I1T1MyeHVEaWREdjdWOThzcXoKTGFzYjF6ajlrYWxzOFp0R0JiVEJxcEl4YnAzL0pyQklkSW9ETEtiK01TaFlBMkY2S3dSMTdUK0EwanFzeFhuVwpSL0tyV2p1OE1jZnZ3MFB4QkxqYkFvK3VIWjVBclBxbmhYSlZIMU9VZE1qMVVJb1Z6THF5SU15MUR3PT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcGdJQkFBS0NBUUVBNnJza1owbDR4YlRxUWJTMUdXQTFPQUJlYnkrQUQrQk5DcFZ5UTAzRnpxeFJLVmpyCk5CcXJtRmtKQ0xlM0tDWk9xbVZ5U0k0WTQxb2F5ZHowMmtobiszeEFvbTBZS3RPKzJUeUZzc24xaEhDeDFaV04KakYvL0FqTEpkdVVnRW1Pb2UwbEtBYmd2NUQxemh2dUUzZ3BISmdrUUZKMjJHSndWdjZTR2g5NmNCK0xHaDBKcgpnVG9wVXQ0eExjeGhUNDc4YTNFNHgwYkZXeWxjWHlRZnJpeGJrVXhpUWk1SEhBMkZheG54NjByekQ5SGRmZ28rCkwvQm5XVTlqZmJYa002Nk1GUE00a0ZhYXIxaTBLZ1o5WmgvZTRVbk1UeERyUjdod25YWkRhTGh0N1RNZkc3ZEkKdThGUE9oK1Bxb2ZUenJEYzhMdWxTUjVwSW5tZmxhUkVWTUEzSVFJREFRQUJBb0lCQVFDeEorakRvMm5wSFMrbgp3M0RpNC8rR2NwRFRMWEJqaXcvYUt3eC95MVM5Tk1SVWhtMk5kNHVHZ2J3VnZrSVhwVUc5eks3Q0g2eWMra1k1CmorK2tSdjFqaWxWbHdSeDZSakZGMXkyNDBEL2lZd04waFZpOVZ6NHBOSmRraW16NE5BcldjV3ZQZkdsNHd3Qk0KSWN3WG9INHVNS3pZUW1kS2o1TENmck9pRzlwNi83UXBIMFV2RjNIVFJkWmdnNkVaelBPV3FVMmdRV2ZjTmo4YgpvTmtnMWN6RVRGd1NZak5kaXVNUTFlaUZkOGZubkRFVGdPWkpKeFdVTjVRTndyL3R1VmtsYUYvY1VDYnpyMHJ5CmFyQWxPanRoMmlKWlhwMXZBVDJGMndXSnZ5NTFDQ3cwZmI2bDdtdEwzdzhZMXVyMUlybXNpbHVTK3ZVbysvT3MKcmJIUC9vWFpBb0dCQVArbHJtWTNtVlNwanB1UjJJRWVWUTFiaTN2RTFFLzkzYVV6US9ubG5PTDArR3h4UU9GeQpvVmFGc2htVWpLL0h1aGsvWEp1dVBJRHpPS2J2bG1Cd3ZGa1A4MXJvQnJ4bTZrYlB6UTFMQjBFZnljTGQ5MGtHCkFRNnBtdGdORjNmTTdJdWV2T2U2VWtjU1pZcStBcFdueVNVMTArenl3a0lBd2hyWWF3OTM4aVlYQW9HQkFPc08KRWtaZGFBOFovMnpWVWVqaFN1eHgrTjIrTDB4UUZqdkRTN20vYWxVYTIzL1JIMktlclRKeXRSSFlEN3MvTmZxTQp2UGRkODh1WG9vZlJmRmowd3J2VWJ1dFQvVlNIRVBpOE82NW1vTk92cFlJQnhCdEcwNUVUcExTQjFQeUZxZ2xBCm5wRU84blQ4OC9ESDJIQVkzQ2FveDV3SG5VQ0ExSGZKUytOZ3lJZUhBb0dCQU9PNnAxeU84cHVrWDFEZDNzdEcKUmVXY1F1aUNNYzhBQ2sxN0dYYW12OWE4K2Y4Lzg5ZmcwUy9OOFJVd2F4SzdER0FwUFVuQk1FeCtYVnozMkRFWQp1KzlxY2hIczF2TkZpalNDTDl0RGxyYkFwbTVjWkVnOGZQeWV3VHpzakpjL2lRZm00OGhaQmFvaURTcEdrTzdYCmhDc05oRGR6R1BESzFCNHQ0MURvUEdFSkFvR0JBTWJyZzUrMDBLbG5FUGhqbHd3RURVb0lNZHBHWnZTb0dnaTkKZjhwVUtZS1lWZ1hYVGo1QmxzVkl1ZCs5LzZJeEhsZEkzMnBnUWorYnRkcEcrSHEzdUUwSXZFMi9LSFp1VDNpUQpvOWsxMVFrUWJucVZVQWJkYTVJdEU0Z0hEOTRjcUFkb2ZraTRZNHVKdmsrWWNKeDlEV0pTRjRyK0RxQlY1bmp4CkM1NERlL0RsQW9HQkFMWHdNZlF3b2pseTlYL1RISEx3ckY1REhMT2xPZCsrR0NMVXBvejlBLzJUNkh4SGJyWmsKUnVKYnQ5VVZiUkZYTDhlVml2UnJFcTc1RWdxaWphMkFRblVkckdVbzFMc3JXSTk3aCt5TEdGNkNvUUVKZlRiOAp2VjNEM0g0dDJHdTdiZ3F5Wmhpdjk4N0w0Z1d2cWFSZmQyekJEaTJTR3FkdXp5WStwalFhdTdNUwotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: opa-kube-mgmt/templates/rbac-mgmt.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app: opa-kube-mgmt
    chart: opa-kube-mgmt-8.5.8
    release: my-opa-kube-mgmt
    component: mgmt
  name: my-opa-kube-mgmt-mgmt
  namespace: default
rules:
  - apiGroups: [""]
    resources: ["configmaps"]
    verbs: ["get", "list", "watch", "update", "patch"]
---
# Source: opa-kube-mgmt/templates/rbac-mgmt.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app: opa-kube-mgmt
    chart: opa-kube-mgmt-8.5.8
    release: my-opa-kube-mgmt
    component: mgmt
  name: my-opa-kube-mgmt-mgmt
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: my-opa-kube-mgmt-mgmt
subjects:
  - kind: ServiceAccount
    name: my-opa-kube-mgmt
    namespace: default
---
# Source: opa-kube-mgmt/templates/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: my-opa-kube-mgmt
  labels:
    app: my-opa-kube-mgmt
    chart: "opa-kube-mgmt-8.5.8"
    release: "my-opa-kube-mgmt"
    heritage: "Helm"
spec:
  selector:
    app: my-opa-kube-mgmt
  ports:
  - name: opa
    port: 8181
    targetPort: opa
---
# Source: opa-kube-mgmt/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-opa-kube-mgmt
  labels:
    app: my-opa-kube-mgmt
    chart: "opa-kube-mgmt-8.5.8"
    release: "my-opa-kube-mgmt"
    heritage: "Helm"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: my-opa-kube-mgmt
  template:
    metadata:
      annotations:
      labels:
        app: my-opa-kube-mgmt
      name: my-opa-kube-mgmt
    spec:
      initContainers:
        - name: initpolicy
          image: openpolicyagent/kube-mgmt:8.5.8
          imagePullPolicy: IfNotPresent
          resources:
            {}
          command:
          - /bin/sh
          - -c
          - |
            tr -dc 'A-F0-9' < /dev/urandom | dd bs=1 count=32 2>/dev/null > /bootstrap/mgmt-token
            TOKEN=`cat /bootstrap/mgmt-token`
            cat > /bootstrap/authz.rego <<EOF
            package system.authz
            default allow = false
            # Allow anonymous access to the default policy decision.
            allow { input.path = [""]; input.method = "POST" }
            allow { input.path = [""]; input.method = "GET" }
            # This is only used for health check in liveness and readiness probe
            allow { input.path = ["health"]; input.method = "GET" }
            allow { input.identity == "$TOKEN" }
            EOF
          volumeMounts:
            - name: bootstrap
              mountPath: /bootstrap
      containers:
        - name: opa
          ports:
          - name: opa
            containerPort: 8181
          image: "openpolicyagent/opa:0.53.1"
          imagePullPolicy: IfNotPresent
          env:
          resources:
            {}
          args:
            - "run"
            - "--server"
            - "--tls-cert-file=/certs/tls.crt"
            - "--tls-private-key-file=/certs/tls.key"
            - "--addr=0.0.0.0:8181"
            - "--log-level=info"
            - "--log-format=json"
            - "--authentication=token"
            - "--authorization=basic"
            - "--ignore=.*"
            - "/bootstrap"
          volumeMounts:
            - name: certs
              readOnly: true
              mountPath: /certs
            - name: bootstrap
              readOnly: true
              mountPath: /bootstrap
          readinessProbe:
            httpGet:
              path: /health
              scheme: HTTPS
              port: opa
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /health
              scheme: HTTPS
              port: opa
            initialDelaySeconds: 10
            periodSeconds: 15
        - name: mgmt
          image: openpolicyagent/kube-mgmt:8.5.8
          imagePullPolicy: IfNotPresent
          startupProbe:

            failureThreshold: 5
            httpGet:
              path: /health
              port: 8181
              scheme: HTTPS
            initialDelaySeconds: 20
            successThreshold: 1
            timeoutSeconds: 10
          env:
          resources:
            
            {}
          args:
            - --opa-auth-token-file=/bootstrap/mgmt-token
            - --opa-url=https://127.0.0.1:8181/v1
            - --opa-allow-insecure
            - "--namespaces=default"
            - "--enable-data=true"
            - "--enable-policies=true"

            - "--replicate-path=kubernetes"
            - "--replicate-ignore-namespaces="
          volumeMounts:
            - name: bootstrap
              readOnly: true
              mountPath: /bootstrap
      serviceAccountName: my-opa-kube-mgmt
      volumes:
        - name: certs
          secret:
            secretName: my-opa-kube-mgmt-cert
        - name: bootstrap
          emptyDir: {}
      affinity:
        {}
      nodeSelector:
        {}
      tolerations:
        []
