---
# Source: hydra/charts/hydra-maester/templates/rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-hydra-hydra-maester-account
  namespace:  default
  labels:
    app.kubernetes.io/name: hydra-maester
    helm.sh/chart: hydra-maester-0.47.0
    app.kubernetes.io/instance: my-hydra
    app.kubernetes.io/version: "v0.0.34"
    app.kubernetes.io/managed-by: Helm
---
# Source: hydra/templates/rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-hydra
  namespace: default
  labels:
    "app.kubernetes.io/name": "hydra"
    "app.kubernetes.io/instance": "my-hydra"
    "app.kubernetes.io/version": "v2.2.0"
    "app.kubernetes.io/managed-by": "Helm"
    "helm.sh/chart": "hydra-0.47.0"
automountServiceAccountToken: false
---
# Source: hydra/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-hydra
  namespace: default
  labels:
    "app.kubernetes.io/name": "hydra"
    "app.kubernetes.io/instance": "my-hydra"
    "app.kubernetes.io/version": "v2.2.0"
    "app.kubernetes.io/managed-by": "Helm"
    "helm.sh/chart": "hydra-0.47.0"
data:
  "hydra.yaml": |
    serve:
      admin:
        port: 4445
      public:
        port: 4444
      tls:
        allow_termination_from:
        - 10.0.0.0/8
        - 172.16.0.0/12
        - 192.168.0.0/16
    urls:
      self: {}
---
# Source: hydra/charts/hydra-maester/templates/rbac.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: my-hydra-hydra-maester-role
rules:
  - apiGroups: ["hydra.ory.sh"]
    resources: ["oauth2clients", "oauth2clients/status"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["list", "watch", "create"]
---
# Source: hydra/charts/hydra-maester/templates/rbac.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: my-hydra-hydra-maester-role-binding
subjects:
  - kind: ServiceAccount
    name: my-hydra-hydra-maester-account # Service account assigned to the controller pod.
    namespace:  default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-hydra-hydra-maester-role
---
# Source: hydra/charts/hydra-maester/templates/rbac.yaml
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: my-hydra-hydra-maester-role
  namespace:  default
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "list", "watch", "create"]
  - apiGroups: ["hydra.ory.sh"]
    resources: ["oauth2clients", "oauth2clients/status"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
---
# Source: hydra/charts/hydra-maester/templates/rbac.yaml
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: my-hydra-hydra-maester-role-binding
  namespace:  default
subjects:
  - kind: ServiceAccount
    name: my-hydra-hydra-maester-account # Service account assigned to the controller pod.
    namespace:  default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: my-hydra-hydra-maester-role
---
# Source: hydra/templates/service-admin.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-hydra-admin
  namespace: default
  labels:
    "app.kubernetes.io/name": "hydra"
    "app.kubernetes.io/instance": "my-hydra"
    "app.kubernetes.io/version": "v2.2.0"
    "app.kubernetes.io/managed-by": "Helm"
    "helm.sh/chart": "hydra-0.47.0"
    app.kubernetes.io/component: admin
  annotations:
spec:
  type: ClusterIP
  ports:
    - port: 4445
      targetPort: http-admin
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: hydra
    app.kubernetes.io/instance: my-hydra
---
# Source: hydra/templates/service-public.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-hydra-public
  namespace: default
  labels:
    "app.kubernetes.io/name": "hydra"
    "app.kubernetes.io/instance": "my-hydra"
    "app.kubernetes.io/version": "v2.2.0"
    "app.kubernetes.io/managed-by": "Helm"
    "helm.sh/chart": "hydra-0.47.0"
  annotations:
spec:
  type: ClusterIP
  ports:
    - port: 4444
      targetPort: http-public
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: hydra
    app.kubernetes.io/instance: my-hydra
---
# Source: hydra/charts/hydra-maester/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-hydra-hydra-maester
  labels:
    app.kubernetes.io/name: hydra-maester
    helm.sh/chart: hydra-maester-0.47.0
    app.kubernetes.io/instance: my-hydra
    app.kubernetes.io/version: "v0.0.34"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  revisionHistoryLimit: 5
  selector:
    matchLabels:
      control-plane: controller-manager
      app.kubernetes.io/name: my-hydra-hydra-maester
      app.kubernetes.io/instance: my-hydra
  template:
    metadata:
      labels:
        control-plane: controller-manager
        app.kubernetes.io/name: my-hydra-hydra-maester
        app.kubernetes.io/instance: my-hydra
      annotations:
    spec:
      volumes:
      terminationGracePeriodSeconds: 60
      containers:
        - name: hydra-maester
          image: "oryd/hydra-maester:v0.0.34-amd64"
          imagePullPolicy: IfNotPresent
          command:
            - /manager
          args:
            - --metrics-addr=127.0.0.1:8080
            - --hydra-url=http://my-hydra-admin
            - --hydra-port=4445
            - --endpoint=/admin/clients
          volumeMounts:
          resources:
            {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 65534
            runAsNonRoot: true
            runAsUser: 65534
            seLinuxOptions:
              level: s0:c123,c456
            seccompProfile:
              type: RuntimeDefault
      serviceAccountName: my-hydra-hydra-maester-account
      automountServiceAccountToken: true
      nodeSelector:
      securityContext:
        fsGroup: 65534
        fsGroupChangePolicy: OnRootMismatch
        runAsGroup: 65534
        runAsNonRoot: true
        runAsUser: 65534
        seccompProfile:
          type: RuntimeDefault
---
# Source: hydra/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-hydra
  namespace: default
  labels:
    "app.kubernetes.io/name": "hydra"
    "app.kubernetes.io/instance": "my-hydra"
    "app.kubernetes.io/version": "v2.2.0"
    "app.kubernetes.io/managed-by": "Helm"
    "helm.sh/chart": "hydra-0.47.0"
  annotations:
spec:
  replicas: 1
  revisionHistoryLimit: 5
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: hydra
      app.kubernetes.io/instance: my-hydra
  template:
    metadata:
      labels:
        "app.kubernetes.io/name": "hydra"
        "app.kubernetes.io/instance": "my-hydra"
        "app.kubernetes.io/version": "v2.2.0"
        "app.kubernetes.io/managed-by": "Helm"
        "helm.sh/chart": "hydra-0.47.0"
      annotations:
        
        checksum/hydra-config: 2baf81b932767135f9212390705f3b72ced83093b96c625e76882e3b2613015d
        checksum/hydra-secrets: 5d29496371dda7c078825bb2e0cd3705df13b2356b2b4bddd199485740718119
    spec:
      volumes:
        - name: hydra-config-volume
          configMap:
            name: my-hydra
      serviceAccountName: my-hydra
      automountServiceAccountToken: false
      terminationGracePeriodSeconds: 60
      containers:
        - name: hydra
          image: "oryd/hydra:v2.2.0"
          imagePullPolicy: IfNotPresent
          command:
            - hydra
          args:
            - serve
            - all
            - --config
            - /etc/config/hydra.yaml
          volumeMounts:
            - name: hydra-config-volume
              mountPath: /etc/config
              readOnly: true
          ports:
            - name: http-public
              containerPort: 4444
              protocol: TCP
            - name: http-admin
              containerPort: 4445
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health/alive
              port: 4445
              httpHeaders:
                - name: Host
                  value: '127.0.0.1'
            failureThreshold: 5
            initialDelaySeconds: 5
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /health/ready
              port: 4445
              httpHeaders:
                - name: Host
                  value: '127.0.0.1'
            failureThreshold: 5
            initialDelaySeconds: 5
            periodSeconds: 10
          startupProbe:
            httpGet:
              path: /health/ready
              port: 4445
              httpHeaders:
                - name: Host
                  value: '127.0.0.1'
            failureThreshold: 60
            periodSeconds: 1
            successThreshold: 1
            timeoutSeconds: 1
          env:
            - name: URLS_SELF_ISSUER
              value: "http://127.0.0.1:4444/"
            - name: SECRETS_SYSTEM
              valueFrom:
                secretKeyRef:
                  name: my-hydra
                  key: secretsSystem
            - name: SECRETS_COOKIE
              valueFrom:
                secretKeyRef:
                  name: my-hydra
                  key: secretsCookie
          resources:
            {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 65534
            runAsNonRoot: true
            runAsUser: 65534
            seLinuxOptions:
              level: s0:c123,c456
            seccompProfile:
              type: RuntimeDefault
          lifecycle:
            {}
      initContainers:
      securityContext:
        fsGroup: 65534
        fsGroupChangePolicy: OnRootMismatch
        runAsGroup: 65534
        runAsNonRoot: true
        runAsUser: 65534
        seccompProfile:
          type: RuntimeDefault
---
# Source: hydra/templates/janitor-cron-job-rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-hydra-cronjob-janitor
  namespace: default
  labels:
    "app.kubernetes.io/name": "hydra"
    "app.kubernetes.io/instance": "my-hydra"
    "app.kubernetes.io/version": "v2.2.0"
    "app.kubernetes.io/managed-by": "Helm"
    "helm.sh/chart": "hydra-0.47.0"
  annotations:
    helm.sh/hook: pre-install, pre-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "0"
automountServiceAccountToken: false
---
# Source: hydra/templates/job-rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-hydra-job
  namespace: default
  labels:
    "app.kubernetes.io/name": "hydra"
    "app.kubernetes.io/instance": "my-hydra"
    "app.kubernetes.io/version": "v2.2.0"
    "app.kubernetes.io/managed-by": "Helm"
    "helm.sh/chart": "hydra-0.47.0"
  annotations:
    helm.sh/hook: pre-install, pre-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "0"
automountServiceAccountToken: false
---
# Source: hydra/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-hydra
  namespace: default
  labels:
    "app.kubernetes.io/name": "hydra"
    "app.kubernetes.io/instance": "my-hydra"
    "app.kubernetes.io/version": "v2.2.0"
    "app.kubernetes.io/managed-by": "Helm"
    "helm.sh/chart": "hydra-0.47.0"
  annotations:
    helm.sh/hook: pre-install, pre-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "0"
    helm.sh/resource-policy: keep
type: Opaque
data:
  # Generate a random secret if the user doesn't give one. User given password has priority
  secretsSystem: "clZQV3NYRUVJYjlydXhZTEg4V1NJWm85bmhicmtvWjU="
  secretsCookie: "UEtQa3ltZTRmQWtRNjdoZnNhdmhYVnZQbDRFVVVNQ2c="
  dsn: ""
---
# Source: hydra/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "my-hydra-test-connection"
  namespace: default
  labels:
    "app.kubernetes.io/name": "hydra"
    "app.kubernetes.io/instance": "my-hydra"
    "app.kubernetes.io/version": "v2.2.0"
    "app.kubernetes.io/managed-by": "Helm"
    "helm.sh/chart": "hydra-0.47.0"
  annotations:
    "helm.sh/hook": test-success
spec:
  containers:
    - name: healthcheck-ready
      image: "busybox:1"
      command: ['wget']
      args:  ['my-hydra-admin:4445/health/ready']
  restartPolicy: Never
