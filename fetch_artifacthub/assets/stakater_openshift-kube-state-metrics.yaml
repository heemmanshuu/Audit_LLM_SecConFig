---
# Source: openshift-kube-state-metrics/templates/service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: openshift-kube-state-metrics
  labels:
    app: openshift-kube-state-metrics
    group: com.stakater.platform
    provider: stakater
    version: "1.2.0"
    chart: "openshift-kube-state-metrics-0.0.9"
    release: "my-openshift-kube-state-metrics"
    heritage: "Helm"
---
# Source: openshift-kube-state-metrics/templates/cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  labels:
    app: openshift-kube-state-metrics
    group: com.stakater.platform
    provider: stakater
    version: "1.2.0"
    chart: "openshift-kube-state-metrics-0.0.9"
    release: "my-openshift-kube-state-metrics"
    heritage: "Helm"
  name: openshift-kube-state-metrics
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - secrets
  - nodes
  - pods
  - services
  - resourcequotas
  - replicationcontrollers
  - limitranges
  - persistentvolumeclaims
  - persistentvolumes
  - namespaces
  - endpoints
  verbs:
  - list
  - watch
- apiGroups:
  - extensions
  resources:
  - daemonsets
  - deployments
  - replicasets
  verbs:
  - list
  - watch
- apiGroups:
  - apps
  resources:
  - statefulsets
  verbs:
  - list
  - watch
- apiGroups:
  - batch
  resources:
  # - cronjobs
  - jobs
  verbs:
  - list
  - watch
- apiGroups:
  - autoscaling
  resources:
  - horizontalpodautoscalers
  verbs:
  - list
  - watch
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
# Source: openshift-kube-state-metrics/templates/cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  labels:
    app: openshift-kube-state-metrics
    group: com.stakater.platform
    provider: stakater
    version: "1.2.0"
    chart: "openshift-kube-state-metrics-0.0.9"
    release: "my-openshift-kube-state-metrics"
    heritage: "Helm"
  name: openshift-kube-state-metrics
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: openshift-kube-state-metrics
subjects:
- kind: ServiceAccount
  name: openshift-kube-state-metrics
  namespace: default
---
# Source: openshift-kube-state-metrics/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: Role
metadata:
  labels:
    app: openshift-kube-state-metrics
    group: com.stakater.platform
    provider: stakater
    version: "1.2.0"
    chart: "openshift-kube-state-metrics-0.0.9"
    release: "my-openshift-kube-state-metrics"
    heritage: "Helm"
  name: openshift-kube-state-metrics
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
- apiGroups:
  - extensions
  resourceNames: ["openshift-kube-state-metrics"]
  resources:
  - deployments
  verbs:
  - get
  - update
---
# Source: openshift-kube-state-metrics/templates/role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  labels:
    app: openshift-kube-state-metrics
    group: com.stakater.platform
    provider: stakater
    version: "1.2.0"
    chart: "openshift-kube-state-metrics-0.0.9"
    release: "my-openshift-kube-state-metrics"
    heritage: "Helm"
  name: openshift-kube-state-metrics
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: openshift-kube-state-metrics
subjects:
- kind: ServiceAccount
  name: openshift-kube-state-metrics
---
# Source: openshift-kube-state-metrics/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: openshift-kube-state-metrics
  labels:
    expose: "true"
    k8s-app: openshift-kube-state-metrics
    app: openshift-kube-state-metrics
    group: com.stakater.platform
    provider: stakater
    version: "1.2.0"
    chart: "openshift-kube-state-metrics-0.0.9"
    release: "my-openshift-kube-state-metrics"
    heritage: "Helm"
  annotations:
    prometheus.io/scrape: 'true'
    fabric8.io/ingress.annotations: |-
      ingress.kubernetes.io/force-ssl-redirect: true
      kubernetes.io/ingress.class: internal-ingress
spec:
  ports:
  - name: http-metrics
    port: 8080
    targetPort: http-metrics
    protocol: TCP
  - name: telemetry
    port: 8081
    targetPort: telemetry
    protocol: TCP
  selector:
    k8s-app: openshift-kube-state-metrics
---
# Source: openshift-kube-state-metrics/templates/deployment.yaml
apiVersion: apps/v1beta1
# Kubernetes versions after 1.9.0 should use apps/v1
# Kubernetes versions before 1.8.0 should use apps/v1beta1 or extensions/v1beta1
kind: Deployment
metadata:
  name: openshift-kube-state-metrics
  labels:
    app: openshift-kube-state-metrics
    group: com.stakater.platform
    provider: stakater
    version: "1.2.0"
    chart: "openshift-kube-state-metrics-0.0.9"
    release: "my-openshift-kube-state-metrics"
    heritage: "Helm"
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: openshift-kube-state-metrics
  template:
    metadata:
      labels:
        k8s-app: openshift-kube-state-metrics
    spec:
      serviceAccountName: openshift-kube-state-metrics
      containers:
      - name: kube-state-metrics
        image: "quay.io/coreos/kube-state-metrics:v1.3.1"
        args:
        - --collectors=daemonsets, pods, deployments, limitranges, nodes, replicasets, replicationcontrollers, resourcequotas, services, jobs, statefulsets, persistentvolumeclaims, namespaces, horizontalpodautoscalers        
        ports:
        - name: http-metrics
          containerPort: 8080
        - name: telemetry
          containerPort: 8081
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 20
          timeoutSeconds: 5
      securityContext: {}
