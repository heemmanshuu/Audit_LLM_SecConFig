---
# Source: quickchart/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-quickchart
  labels:
    helm.sh/chart: quickchart-4.1.0
    app.kubernetes.io/name: quickchart
    app.kubernetes.io/instance: my-quickchart
    app.kubernetes.io/version: "1.7.1"
    app.kubernetes.io/managed-by: Helm
---
# Source: quickchart/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-quickchart
  labels:
    helm.sh/chart: quickchart-4.1.0
    app.kubernetes.io/name: quickchart
    app.kubernetes.io/instance: my-quickchart
    app.kubernetes.io/version: "1.7.1"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 3400
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: quickchart
    app.kubernetes.io/instance: my-quickchart
---
# Source: quickchart/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-quickchart
  labels:
    helm.sh/chart: quickchart-4.1.0
    app.kubernetes.io/name: quickchart
    app.kubernetes.io/instance: my-quickchart
    app.kubernetes.io/version: "1.7.1"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: quickchart
      app.kubernetes.io/instance: my-quickchart
  template:
    metadata:
      labels:
        app.kubernetes.io/name: quickchart
        app.kubernetes.io/instance: my-quickchart
    spec:
      
      serviceAccountName: my-quickchart
      securityContext:
        {}
      containers:
        - name: quickchart
          securityContext:
            {}
          image: docker.io/ianw/quickchart:v1.7.1
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 3400
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthcheck
              port: http
            initialDelaySeconds: 0
            periodSeconds: 10
            timeoutSeconds: 1
            failureThreshold: 3
            successThreshold: 1
          readinessProbe:
            httpGet:
              path: /healthcheck
              port: http
            initialDelaySeconds: 0
            periodSeconds: 10
            timeoutSeconds: 1
            failureThreshold: 3
            successThreshold: 1
          resources:
            {}
---
# Source: quickchart/templates/tests/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-quickchart-tests
  labels:
    helm.sh/chart: quickchart-4.1.0
    app.kubernetes.io/name: quickchart
    app.kubernetes.io/instance: my-quickchart
    app.kubernetes.io/version: "1.7.1"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: tests
  annotations:
    helm.sh/hook: test
data:
  test_all.py: |
    import requests


    def test_service_connection():
        url = "http://my-quickchart:3400/"

        response = requests.get(url)

        assert response.status_code == 200
---
# Source: quickchart/templates/tests/pod.yaml
apiVersion: v1
kind: Pod
metadata:
  name: my-quickchart-tests
  labels:
    helm.sh/chart: quickchart-4.1.0
    app.kubernetes.io/name: quickchart
    app.kubernetes.io/instance: my-quickchart
    app.kubernetes.io/version: "1.7.1"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: tests
  annotations:
    helm.sh/hook: test
spec:
  
  containers:
    - name: tests
      image: ghcr.io/cowboysysop/pytest:1.0.35
      imagePullPolicy: IfNotPresent
      volumeMounts:
        - name: tests
          mountPath: /tests
          readOnly: true
      workingDir: /tests
  restartPolicy: Never
  volumes:
    - name: tests
      configMap:
        name: my-quickchart-tests
