---
# Source: kubed/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-kubed
  namespace: default
  labels:
    helm.sh/chart: kubed-v0.13.2
    app.kubernetes.io/name: kubed
    app.kubernetes.io/instance: my-kubed
    app.kubernetes.io/version: "v0.13.2"
    app.kubernetes.io/managed-by: Helm
---
# Source: kubed/templates/apiregistration.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-kubed-apiserver-cert
  namespace: default
  labels:
    helm.sh/chart: kubed-v0.13.2
    app.kubernetes.io/name: kubed
    app.kubernetes.io/instance: my-kubed
    app.kubernetes.io/version: "v0.13.2"
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURRRENDQWlpZ0F3SUJBZ0lSQUp3MjA2N0VUcVdTN0RndVZUaVBoaGN3RFFZSktvWklodmNOQVFFTEJRQXcKRFRFTE1Ba0dBMVVFQXhNQ1kyRXdIaGNOTWpRd09URTJNRGd4TVRJeldoY05NelF3T1RFME1EZ3hNVEl6V2pBVApNUkV3RHdZRFZRUURFd2h0ZVMxcmRXSmxaRENDQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DCmdnRUJBTjVzaCtHUlk2aUdNNTlFMEthN2pjS2MrUlhCVWlRejRVWnF6Wk1GUmNTRVlxY3dBdnIwWjZTak9IMmYKMjcrNm5GUE5BRVBFTkdhbzhjVlczdWE2cnNrbmNhMzhhMDJaQWttckROOG1xeFhhWGRhL2VkaHhlcmNPSEoyTgpwU29XWUxPSGFuQi9NaWpxb2dvNXZvVzNPSW5hUmNjWkhJVU03aExCZVpLR3p0ZytuTGF4VGJranVvS1lHL2xmCm1VSjhqR3N1d2NVRGgzaC9mcU8vWiswMk1rOExaRHlvdFoyMzRUSWhvdHlrTlZOT2tvWjRWUXVhVUN6WmF4ZE8KMG5tQW1IOVlTV25lcmpWZkZGOEk4QjNGOWhpSkVObHVEK09OUkZoM2VxZ3NRQkQvbHYySzhWK0xHaDZxQzlocwpFRlF4WW5DclIwMy9yQVhwNm42Q3NjeVBPQmNDQXdFQUFhT0JsRENCa1RBT0JnTlZIUThCQWY4RUJBTUNCYUF3CkhRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQXdHQTFVZEV3RUIvd1FDTUFBd0h3WUQKVlIwakJCZ3dGb0FVY3hQdjJWemhzb1ZNK255Q1JPc0Y4MjgvZElFd01RWURWUjBSQkNvd0tJSVFiWGt0YTNWaQpaV1F1WkdWbVlYVnNkSUlVYlhrdGEzVmlaV1F1WkdWbVlYVnNkQzV6ZG1Nd0RRWUpLb1pJaHZjTkFRRUxCUUFECmdnRUJBTVRBY2h5YmVCd2tDdnZHeGxYY2lTYjJpWjRsMkNaZE5ZNVJTRTZjNzZ6b0sxOVd2dUk4VExHRTJ3ZHYKeDVJSEdveVQwZWlFWFMxZEliMXVDWnkxSlB3YUxHSzJ3S0dyaThHcWVhay9CbGdSTUVVMm8zYjljYVRMR21zQgpwb3dXc0pvU3VPUGlVbmNBeXg0UXFuc0E4WkhLdlBWdlhmazBra2hDbHhCUUFkMUZBZ2NhdnUra25XRjFrdTVwCmpFVUc2WkxlMkdLY244YmcxYjdKTmpFbTI0UEkvMzZJRW9KWmphL0hPajJiUUxWdG5YZjlvVFVkY0xCcS9nTHEKcnBFSzhEUVU1QWtMaHlMZjJ5VDljQmQvS3NWTTlzT2d6bE04bEs1TWdpWWJ2V2kwdDMzdHVyWnVLMWwzWGJNdgpzbkc2cEU3aEVBVlRBdnoydTRaNXZDOXNzR0k9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBM215SDRaRmpxSVl6bjBUUXBydU53cHo1RmNGU0pEUGhSbXJOa3dWRnhJUmlwekFDCit2Um5wS000ZlovYnY3cWNVODBBUThRMFpxanh4VmJlNXJxdXlTZHhyZnhyVFprQ1Nhc00zeWFyRmRwZDFyOTUKMkhGNnR3NGNuWTJsS2haZ3M0ZHFjSDh5S09xaUNqbStoYmM0aWRwRnh4a2NoUXp1RXNGNWtvYk8yRDZjdHJGTgp1U082Z3BnYitWK1pRbnlNYXk3QnhRT0hlSDkrbzc5bjdUWXlUd3RrUEtpMW5iZmhNaUdpM0tRMVUwNlNobmhWCkM1cFFMTmxyRjA3U2VZQ1lmMWhKYWQ2dU5WOFVYd2p3SGNYMkdJa1EyVzRQNDQxRVdIZDZxQ3hBRVArVy9ZcngKWDRzYUhxb0wyR3dRVkRGaWNLdEhUZitzQmVucWZvS3h6STg0RndJREFRQUJBb0lCQUN5bVZOQ3ZRdlk5bW5kSwpkU2hEVmozUERTR1U0VXhyTGJuWkR0T0lwMnkvdHA0aFFUZm5nRGJJblRwNnNMNVlVN0Z1NGJLNDNGd1BaaGxiClN2dStWZ0FEYndxaU5WZ3FjdzhleTBLd25IK1NpbXZsbkN3YSs2dHJwY3JxK0ZEdWxSTDFDQ1QxSTdpYkFWUlUKS3k3a2pQRC9aQ3FIbS9ZSmxuRWxiYVpBY1oxdTlEOWFnc0EwWnhoN0ZLL1ZORnFJSFFlUG5JT3NyZ3AxNndQaAozZlVqQmNMaDU1eEROZVNaVGw4M21JU2xUVmFVc0pyTXMxNmRjaGFJdG9INklFcnV0ZWVZVDI3Z2Ryc0Q0L1ErClZQWDZMYmlRd09yQjBQNHAxTjc3V3p5U2pzYmZleTFZb3MwREQybVl5S1pZVlpFU2UvczlmVVFVNW5Cdm5EU2wKSE1FclFBRUNnWUVBL2tKWnFBZlNEVjA4R2tWMThhTzBSdGpCclhLdXlFN0g3b3NjeTR3VVVkRGVLLy9vdjYwawpDbGZ5N0JBRXVEeGR5RzRrVkZkNEs0RnFJb0hoTWFUdFVvZ2hXK3JRSXhYbFVJRVRqREhVSzNYWkdxcG9BbVhlClVGazdQOVlEWHdzNWNPT28wWCtabW1HeGcwb3F0Z1FNL21FY3hoOWhocit1TVVaajkxM0xXQUVDZ1lFQTMvSmgKdVpETTV6R2RjWDdLMUJHOFh4dTNCWGdPMFR6Smw0aUxpU3hyT0JrbkxZZ2VCWUt3bEpxMVg4WmNXeWZlZzVZVgpuVkpIVmJUTVdxcStKTDJPTXA0Z3czc3F4Qyt4TkM0OWNUbTM5MEp2VkYreC90dTdNU2pmYURORFd3cFNoZzVLCkhBZGVuWjAxMHVlL0l0MzA5LzN2OGNkeHB4UFZnMjRjcldQS1VCY0NnWUFYMlJ0VnNsNFdXTTloVzNDRG1LbzUKRnUyYm1pMGdwcHNFR2RJNm1VbnlucGVvSXRtdTJNdVBtTTQxTEE5MVJGdzdoM0VxNUFWbWR6NEFQSlJsdHFWMwozMExadnoyRWZQSkVTY2NPbUVIaFRhMXVYZHRobGpKeThOdW8waWNBekNtNEYvSm1yQVE1UWI2SHBQWTZta2lwCnQyd2VmU1VGb1lieUlqc1FJYUVJQVFLQmdRRGFIRUpycmdpeTMxSzlXRVVKV0tERGJNWExVTXYxbzZPZnI0QmYKUUdESXlVNnIvTmRvZkltb29pa21ONVo1dlpIdFRMNk9jN1ZBVnc5MCtyaW9KZW9aaUlMV2dOMzlKNG9LRFVNUQpSS3ZVNk9KdkphakJWSmF6WVdCOUp2aGg4ZUsvNTZqc05ZMUVLdnBpQ0EzVFVxT2s2TERLSlhxZXhDVitsVDdlCjdNTDlUd0tCZ1FESWlPcTB2bkhDV1o2ZjNRZndsKzVBOGdHVFFVYXlqbkFFcVVqcVRsdzQzbmJmUlpGSElOYUIKMm40cnM1MFRUaTNzQi96aERUeWltb1o1ckNacnlka3M0OVo5bE9mckg3TkFmbmJrQndoYWlxbGNTNVV5RURVZgo5YytZWEQ1RVFPaUNVdUhvbDQ1K2E2dW00OGtCVGtoYUU2MnQ2em1pQ0QwUEttalJSblFGUHc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: kubed/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-kubed
  namespace: default
  labels:
    helm.sh/chart: kubed-v0.13.2
    app.kubernetes.io/name: kubed
    app.kubernetes.io/instance: my-kubed
    app.kubernetes.io/version: "v0.13.2"
    app.kubernetes.io/managed-by: Helm
data:
---
# Source: kubed/templates/cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-kubed
  labels:
    helm.sh/chart: kubed-v0.13.2
    app.kubernetes.io/name: kubed
    app.kubernetes.io/instance: my-kubed
    app.kubernetes.io/version: "v0.13.2"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups: [""]
  resources:
  - configmaps
  - secrets
  verbs: ["get", "create", "patch", "delete", "list", "watch"]
- apiGroups: [""]
  resources:
  - namespaces
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources:
  - nodes
  verbs: ["list"]
- apiGroups: [""]
  resources:
  - events
  verbs: ["create"]
---
# Source: kubed/templates/apiregistration.yaml
# to delegate authentication and authorization
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-kubed-apiserver-auth-delegator
  labels:
    helm.sh/chart: kubed-v0.13.2
    app.kubernetes.io/name: kubed
    app.kubernetes.io/instance: my-kubed
    app.kubernetes.io/version: "v0.13.2"
    app.kubernetes.io/managed-by: Helm
roleRef:
  kind: ClusterRole
  apiGroup: rbac.authorization.k8s.io
  name: system:auth-delegator
subjects:
- kind: ServiceAccount
  name: my-kubed
  namespace: default
---
# Source: kubed/templates/cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-kubed
  labels:
    helm.sh/chart: kubed-v0.13.2
    app.kubernetes.io/name: kubed
    app.kubernetes.io/instance: my-kubed
    app.kubernetes.io/version: "v0.13.2"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-kubed
subjects:
- kind: ServiceAccount
  name: my-kubed
  namespace: default
---
# Source: kubed/templates/apiregistration.yaml
# to read the config for terminating authentication
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: my-kubed-apiserver-extension-server-authentication-reader
  namespace: kube-system
  labels:
    helm.sh/chart: kubed-v0.13.2
    app.kubernetes.io/name: kubed
    app.kubernetes.io/instance: my-kubed
    app.kubernetes.io/version: "v0.13.2"
    app.kubernetes.io/managed-by: Helm
roleRef:
  kind: Role
  apiGroup: rbac.authorization.k8s.io
  name: extension-apiserver-authentication-reader
subjects:
- kind: ServiceAccount
  name: my-kubed
  namespace: default
---
# Source: kubed/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-kubed
  namespace: default
  labels:
    helm.sh/chart: kubed-v0.13.2
    app.kubernetes.io/name: kubed
    app.kubernetes.io/instance: my-kubed
    app.kubernetes.io/version: "v0.13.2"
    app.kubernetes.io/managed-by: Helm
spec:
  ports:
  # Port used to expose admission webhook apiserver
  - name: api
    port: 443
    targetPort: 8443
  selector:
    app.kubernetes.io/name: kubed
    app.kubernetes.io/instance: my-kubed
---
# Source: kubed/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-kubed
  namespace: default
  labels:
    helm.sh/chart: kubed-v0.13.2
    app.kubernetes.io/name: kubed
    app.kubernetes.io/instance: my-kubed
    app.kubernetes.io/version: "v0.13.2"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kubed
      app.kubernetes.io/instance: my-kubed
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kubed
        app.kubernetes.io/instance: my-kubed
      annotations:
        checksum/apiregistration.yaml: 86bc02880feacd765336f82085349ce1ad013c5d825047569ec1439362c66944
    spec:
      serviceAccountName: my-kubed
      containers:
      - name: kubed
        securityContext:
          {}
        image: appscode/kubed:v0.13.2
        imagePullPolicy: IfNotPresent
        args:
        - run
        - --v=3
        - --secure-port=8443
        - --audit-log-path=-
        - --tls-cert-file=/var/serving-cert/tls.crt
        - --tls-private-key-file=/var/serving-cert/tls.key
        - --use-kubeapiserver-fqdn-for-aks=true
        - --enable-analytics=true
        - --cluster-name=unicorn
        ports:
        - containerPort: 8443
        resources:
          {}
        volumeMounts:
        - name: config
          mountPath: /srv/kubed
        - name: scratch
          mountPath: /tmp
        - mountPath: /var/serving-cert
          name: serving-cert
      volumes:
      - name: config
        secret:
          secretName: my-kubed
      - name: scratch
        emptyDir: {}
      - name: serving-cert
        secret:
          defaultMode: 420
          secretName: my-kubed-apiserver-cert
      securityContext:
        fsGroup: 65535
