---
# Source: prometheus-ipmi-exporter/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-prometheus-ipmi-exporter
  labels:
    helm.sh/chart: prometheus-ipmi-exporter-0.4.0
    app.kubernetes.io/name: prometheus-ipmi-exporter
    app.kubernetes.io/instance: my-prometheus-ipmi-exporter
    app.kubernetes.io/version: "v1.8.0"
    app.kubernetes.io/managed-by: Helm
data:
  config.yml: |
    modules:
      advanced:
        collector_cmd:
          ipmi: sudo
          sel: sudo
        collectors:
        - ipmi
        - sel
        custom_args:
          ipmi:
          - ipmimonitoring
          sel:
          - ipmi-sel
        driver: LAN
        pass: secret_pw
        privilege: admin
        user: some_user
      dcmi:
        collectors:
        - dcmi
        driver: LAN_2_0
        pass: another_pw
        privilege: admin
        user: admin_user
      default:
        collectors:
        - bmc
        - ipmi
        - chassis
        driver: LAN_2_0
        exclude_sensor_ids:
        - 2
        - 29
        - 32
        - 50
        - 52
        - 55
        pass: example_pw
        privilege: user
        timeout: 10000
        user: default_user
      thatspecialhost:
        collectors:
        - ipmi
        - sel
        custom_args:
          ipmi:
          - --bridge-sensors
        driver: LAN
        pass: secret_pw
        privilege: admin
        user: some_user
        workaround_flags:
        - discretereading
---
# Source: prometheus-ipmi-exporter/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-prometheus-ipmi-exporter
  labels:
    helm.sh/chart: prometheus-ipmi-exporter-0.4.0
    app.kubernetes.io/name: prometheus-ipmi-exporter
    app.kubernetes.io/instance: my-prometheus-ipmi-exporter
    app.kubernetes.io/version: "v1.8.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    {}
spec:
  type: ClusterIP
  ports:
    - port: 9290
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: prometheus-ipmi-exporter
    app.kubernetes.io/instance: my-prometheus-ipmi-exporter
---
# Source: prometheus-ipmi-exporter/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-prometheus-ipmi-exporter
  labels:
    helm.sh/chart: prometheus-ipmi-exporter-0.4.0
    app.kubernetes.io/name: prometheus-ipmi-exporter
    app.kubernetes.io/instance: my-prometheus-ipmi-exporter
    app.kubernetes.io/version: "v1.8.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: prometheus-ipmi-exporter
      app.kubernetes.io/instance: my-prometheus-ipmi-exporter
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: prometheus-ipmi-exporter
        app.kubernetes.io/instance: my-prometheus-ipmi-exporter
    spec:
      containers:
        - name: ipmi-exporter
          image: "registry.hub.docker.com/prometheuscommunity/ipmi-exporter:v1.8.0"
          imagePullPolicy: IfNotPresent
          args:
            - "--config.file"
            - "/config.yml"
          volumeMounts:
            - name: config-volume
              mountPath: /config.yml
              subPath: config.yml
              readOnly: true
          ports:
            - name: http
              containerPort: 9290
              protocol: TCP
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 128Mi
      volumes:
        - name: config-volume
          configMap:
            name: my-prometheus-ipmi-exporter
