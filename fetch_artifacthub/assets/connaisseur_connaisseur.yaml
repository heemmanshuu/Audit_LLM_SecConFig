---
# Source: connaisseur/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: connaisseur-serviceaccount
  namespace: default
  labels:
    helm.sh/chart: connaisseur-2.6.1
    app.kubernetes.io/name: connaisseur
    app.kubernetes.io/instance: connaisseur
    app.kubernetes.io/version: "3.6.1"
    app.kubernetes.io/managed-by: Helm
---
# Source: connaisseur/templates/redis.yaml
apiVersion: v1
kind: Secret
metadata:
  name: connaisseur-redis-secret
  namespace: default
  labels:
    helm.sh/chart: connaisseur-2.6.1
    app.kubernetes.io/name: connaisseur
    app.kubernetes.io/instance: connaisseur
    app.kubernetes.io/version: "3.6.1"
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
    REDIS_PASSWORD: MjRjNDI0ZWEtNGY1OS00ZWY1LWFiYmMtMmJmZGUwZWIzNzNh
---
# Source: connaisseur/templates/redis.yaml
apiVersion: v1
kind: Secret
metadata:
  name: connaisseur-redis-tls
  namespace: default
  labels:
    helm.sh/chart: connaisseur-2.6.1
    app.kubernetes.io/name: connaisseur
    app.kubernetes.io/instance: connaisseur
    app.kubernetes.io/version: "3.6.1"
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
    tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUQxVENDQXIyZ0F3SUJBZ0lRT0syaThoaVpGMFRJKzd2dVFESFBCREFOQmdrcWhraUc5dzBCQVFzRkFEQXcKTVM0d0xBWURWUVFERXlWamIyNXVZV2x6YzJWMWNpMXlaV1JwY3kxelpYSjJhV05sTG1SbFptRjFiSFF1YzNaagpNQ0FYRFRJME1Ea3hOakE0TVRFek9Wb1lEekl4TWpRd09ESXpNRGd4TVRNNVdqQXdNUzR3TEFZRFZRUURFeVZqCmIyNXVZV2x6YzJWMWNpMXlaV1JwY3kxelpYSjJhV05sTG1SbFptRjFiSFF1YzNaak1JSUJJakFOQmdrcWhraUcKOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXdpUHpSNUI0Ym5lZFFFODRKTDJRMStiU3BiK0pNeUpaaFZvSQowVlh3NnlhMDhaUG5DZHZLL3p3OUpCQytnak5XcVFHcEV6L0UrTWJWb2h5WDV1VkloKzZzNm9lWEMwbVF3aUZvCjE5S1ZQaGVhK1FPbC9sc0hRSnQyaGRsbjhZMld5RmYrdHF4Q3NCdDJxVmdNZTZPWnlkZGZSVTk2SVpPeS81SkkKUzFOcTlNYUR4S2crTERnQVE4ek9LZkVzdTZuYzBQY3JOSlM3dnlWc0pFL3BMVjFPcWFBNlM1UkVkZmUwTDVrcApUT05Qbzh6V3J5dTYvSzNIcVV4bWZsRTlVNWtuYmJTVXVnUlV6N01mb081V0Ezb2hJSjdzRmYzWjBKNUdiSHpaCnhya1pNNFBraFMvUnNVY0xIaHhzQUdvbVhlemd3UmRIM25UVHp5ZGhKZFVXekJWZlZ3SURBUUFCbzRIb01JSGwKTUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJdwpEQVlEVlIwVEFRSC9CQUl3QURDQnBRWURWUjBSQklHZE1JR2FnaGxqYjI1dVlXbHpjMlYxY2kxeVpXUnBjeTF6ClpYSjJhV05sZ2lGamIyNXVZV2x6YzJWMWNpMXlaV1JwY3kxelpYSjJhV05sTG1SbFptRjFiSFNDSldOdmJtNWgKYVhOelpYVnlMWEpsWkdsekxYTmxjblpwWTJVdVpHVm1ZWFZzZEM1emRtT0NNMk52Ym01aGFYTnpaWFZ5TFhKbApaR2x6TFhObGNuWnBZMlV1WkdWbVlYVnNkQzV6ZG1NdVkyeDFjM1JsY2k1c2IyTmhiREFOQmdrcWhraUc5dzBCCkFRc0ZBQU9DQVFFQVdSdDJHdXU5YUxDTlkzWGtxcnRRVUhoVTZsNkFNMW84eWhLNWdnbDR6MSs1cU14NTBiMjQKRmVCVGMyWkVVYU9VNk9EeVU2UVRZNmJOeWRNQkhuQ0QxVUFpcnMvQWpoaDlCMytjTmxvTXpuT3NYODNvRTNEWQpNOGtEUVAxSVMxeFYzOEYrRXozTmV4aUdkMGdNZGMvVkNRcW1rZ1RzaU1xdVl5SVNYUzh5ZFBvRFRSQ3l5ckpyClMzT3U3QUpEcGM4aFFWVmdtOUh2N1djU0k4UU95bzRkNWNEWGYxcVVxNjZoRXlGZk9RTEhKUXF3c3UwL2lLZXgKUERYM29oQk9QeWxab0d0Unl0bG8xQjJVbmozOXJJenlhUU5idXlXeU56dlpyaDVkcGZ6UkJLbkVmTGR4VXdCOApodDBFT3o5NFJFN0RtbEovM3JmcVBRaXRnYlNQeTVyK2hRPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBd2lQelI1QjRibmVkUUU4NEpMMlExK2JTcGIrSk15SlpoVm9JMFZYdzZ5YTA4WlBuCkNkdksvenc5SkJDK2dqTldxUUdwRXovRStNYlZvaHlYNXVWSWgrNnM2b2VYQzBtUXdpRm8xOUtWUGhlYStRT2wKL2xzSFFKdDJoZGxuOFkyV3lGZit0cXhDc0J0MnFWZ01lNk9aeWRkZlJVOTZJWk95LzVKSVMxTnE5TWFEeEtnKwpMRGdBUTh6T0tmRXN1Nm5jMFBjck5KUzd2eVZzSkUvcExWMU9xYUE2UzVSRWRmZTBMNWtwVE9OUG84eldyeXU2Ci9LM0hxVXhtZmxFOVU1a25iYlNVdWdSVXo3TWZvTzVXQTNvaElKN3NGZjNaMEo1R2JIelp4cmtaTTRQa2hTL1IKc1VjTEhoeHNBR29tWGV6Z3dSZEgzblRUenlkaEpkVVd6QlZmVndJREFRQUJBb0lCQUNyNVlFSElKaEIxNDlZMwpjdnNYQnpmemZVOTVUWHFITVAvR3hVcnBWaklIV0doZFQvZ3JzZ3k3bmVFYzM3N2NkR05tM2JGSUhXYmdSS3ZrCjNtOGE4K283R0FXMlMrWVF1NzF0UGRNQVowN2VWTXlvVlJjdnVUUkE5WVI5Y25mUzJyeXdWYzdENU9Nc3dTQ04KUC80aVljbC9KalNtZWlkeWxWM2pXS05yN0xJUDJJcHJZdHBzUHNLengrRzdyWk1EOENOQklnUGRIOWZaUmIwOApKcGNlN1FhYndNK0RiQ1p2aWI5V3d3cXJRd0RLdzVmSVdTMWs2bkdKUVZHQWRBRjVwQk9tY2RvRGtPN3hjNkJYClhwUkV5VXZjcW1NREZyNVppVHp3MnhnTE4vMHE2ZkNvQ2JhOUlaeVF5eE0rdFZ1WWtQUFNzQ2JKUEtFZW91c1QKcUhCa1Nya0NnWUVBMC9RcGxEZ1ZWY2VrYnlQQmFqcXA4U0ZKQUU0OW8yTnAzQjQ1Z2lsaDhPQ3YvNTB6MXhRcgpIREZ0VFhvSjRKd2U5K1JKaisvcTdvSkREUFVVMFZGTWlLTm1BNVQzb1l2NGZTOUUrOEZWVzRVM2J5RzM4RWNGCnJiZDhkbTJ6NGIxUEV5bG1DSUVQMHN3MGMzK1FNdUZDTWNvQmpoRjIwM1NNS0VBWFJ2cTVmMFVDZ1lFQTZud2cKbnJ2WFFqRzI3WjRoeTcwUFVzOVZhdlVKbEIxaWoyV3VibkNrRU5ZSlBxb2pLZjN4T1pYZTRKU2p1UndWTThscgplandrQi84U2VjTmVQZGk2NG15OE1sL0ZNbXJZU2R5SG5STXlkS3NGcjVzVUdaM3Jpd1hBUGV2RHNhejNNWnhwCklPNXpDVFZ2V0ROUTEvaHhFem9CMzY0RDlXZ2VkYkg1UVJjK2orc0NnWUJuVlQ4OEtzZUVCWXdPUHlGWnQvWUkKUUJFR0hCOEMzRUhNOWROVnVQVXQ2VzBFc3RDR1NDZm9XOVNORkRWaWt0cXFRbHIyMktIeDNBSHlmRDNFK3R6VQpOTTFVYTdqNnduSElIbGFFWXJKSnB6M3FhVWJ5MXIxVy93Q29BRDNWaldUUzA3a1I1bElmbER6eUhqdmdBbUF5ClEralVLWUdELytzZzZIWXd2YVhYL1FLQmdEV092b0NqRk9xb29raXAycnhIWlkyYmo3NExVL0hCdUhaYVdqb2QKZmt2ZUoyUnB4ZmhjYVZHbTJxNWZKUG90NE9YZ05xMUh1VThlUXFFUEw2SmVzMmp1UHhvZVo5TTVOa2ZBbURVWApZbW5sZWpuKzZOdGxCNXpNWm5sK05VZUs0emN3cTQ1N0NFbHRMQTV3UWlIaVBDbVJFVVorMzZhWTdvUWhiM1lmCmtnbWJBb0dCQUpIU3RDZk0wMDRQeUEwL2xXeExzZy9aV3ZMeE4xRE01THZkd01PUnpOQWE1L2VzbE1MYXdqbEQKNmNQZXJheElLT1JHYnYwdHQ5bTNGcG1CMXdlZU1wRUg1Vy9TZkNpaFhxempzbjJaWG5XbVF1SDRpQkVEbWlBeApGT1VDQmdJSFQwZXFselJ0ZnVyMWZUUnRoZW03aHcrdk92bHlFYzBtSEN1TXE2bGtmTy81Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: connaisseur/templates/webhook+certificate.yaml
apiVersion: v1
kind: Secret
metadata:
  name: connaisseur-tls
  namespace: default
  labels:
    helm.sh/chart: connaisseur-2.6.1
    app.kubernetes.io/name: connaisseur
    app.kubernetes.io/instance: connaisseur
    app.kubernetes.io/version: "3.6.1"
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURsekNDQW4rZ0F3SUJBZ0lSQUk4TlcyOFhIRnJlMytmOGcrM01DTDh3RFFZSktvWklodmNOQVFFTEJRQXcKSmpFa01DSUdBMVVFQXhNYlkyOXVibUZwYzNObGRYSXRjM1pqTG1SbFptRjFiSFF1YzNaak1DQVhEVEkwTURreApOakE0TVRFek9Wb1lEekl4TWpRd09ESXpNRGd4TVRNNVdqQW1NU1F3SWdZRFZRUURFeHRqYjI1dVlXbHpjMlYxCmNpMXpkbU11WkdWbVlYVnNkQzV6ZG1Nd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUIKQVFEQmorakszOHl1QW9tbTdIVXppOFpZVEFnOUY4NS9la28xVmJHYklHV1dkNEJHQ2hpZXJVdXNpVDF3R2M2dwoxUFdaa3EvK2paWm5BNkRTWnZrWWo0Vy9rNEpHUkFCQzBFWW4zRzY2US9VQ0xEeUJpM0tvbjV1Q0M1RWJCZkw3CmFPOE04STViMmZwckh6KzdZRm5qd2JrNWNiRkQxd2ZzdDlpNTM3OUVObVpFb1hpRnltOTRLZmZqWFN2ck5QYS8KQjdUcDJsdGloRDRYSTd6ZnFaQjVPai9sZXdMTDZqdno2enJlOE1nNTVOUEN2SDdIdXlwSGVOOGtvdlMzVE1CcApHeEs0cFlyVW9IYVBYWFkwUHl4WVFhVkZYMFk5d3J6OEJBWXAxSzlDNlpUaHRVWkpCcVFkSS81QktqeGYvcGVSCmRlK1FtbDEyVG1veUEyUm1TTVBBN3RoRkFnTUJBQUdqZ2Iwd2dib3dEZ1lEVlIwUEFRSC9CQVFEQWdXZ01CMEcKQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBTUJnTlZIUk1CQWY4RUFqQUFNSHNHQTFVZApFUVIwTUhLQ0QyTnZibTVoYVhOelpYVnlMWE4yWTRJWFkyOXVibUZwYzNObGRYSXRjM1pqTG1SbFptRjFiSFNDCkcyTnZibTVoYVhOelpYVnlMWE4yWXk1a1pXWmhkV3gwTG5OMlk0SXBZMjl1Ym1GcGMzTmxkWEl0YzNaakxtUmwKWm1GMWJIUXVjM1pqTG1Oc2RYTjBaWEl1Ykc5allXd3dEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBS1Q1VGRMTgp0Wk5KTVIzUGpYT0twSlVXTFdzTUpqWXV6cGtPcWVtcVdQZXJxaVlwR05vK1I0bG9JREhJc1M4NEdIb1czcTdlCmt0ZU9paEpnbHUraGVHQnJqUkI5UVArVGRRa2I3Wnh4eTE2TXZ4RDJtVEpjSzVOdVN2Nm1lTnpnOXN3YThDdjgKM2tZNHpqSXExNktHQlYrWGJROHVsOEhUR212cnF5YmQwMWdwY0d2Y0NPWTYra0dXNjA1WTY5R0dyKzBINGtyQwp4Z2xNNVBEMzhXSGJkQ1pOa0J2OFRPMkdDSmJrQWtwSVpZUDFRVnJXbDVXSU5ud2NVNWZxOTFEaUNtRTcvQ2pWCjRidzIwN3I5SnFGRlk1TS9zVnZTNnF1RHVRWWJQYlZzTUZUUWgrRGFVZFpKVlIyWm5Rc0N1WjN5SUtuZzIrMjgKeVFMNzZ4a1YwMFpEWi80PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBd1kvb3l0L01yZ0tKcHV4MU00dkdXRXdJUFJmT2YzcEtOVld4bXlCbGxuZUFSZ29ZCm5xMUxySWs5Y0JuT3NOVDFtWkt2L28yV1p3T2cwbWI1R0krRnY1T0NSa1FBUXRCR0o5eHV1a1AxQWl3OGdZdHkKcUorYmdndVJHd1h5KzJqdkRQQ09XOW42YXg4L3UyQlo0OEc1T1hHeFE5Y0g3TGZZdWQrL1JEWm1SS0Y0aGNwdgplQ24zNDEwcjZ6VDJ2d2UwNmRwYllvUStGeU84MzZtUWVUby81WHNDeStvNzgrczYzdkRJT2VUVHdyeCt4N3NxClIzamZKS0wwdDB6QWFSc1N1S1dLMUtCMmoxMTJORDhzV0VHbFJWOUdQY0s4L0FRR0tkU3ZRdW1VNGJWR1NRYWsKSFNQK1FTbzhYLzZYa1hYdmtKcGRkazVxTWdOa1prakR3TzdZUlFJREFRQUJBb0lCQVFDWXBFWXVocUxBcnR1aQp1V0lMampTU09STmVLa0g4SVpJWDBVWklVUm9MdUoxOW5rU2dEWVZad0xpa2lKV0l1Y2djbmFNUW1OTjgxVTJqCjN2U2RPOEY3dkhYRnQ2YUZDZjNwUFZwTXBYNjNnZThOTWN6djBUNHZKYlArbllocVh1djFSbGJkZEY2WXo0SFEKNEVEQzdXaUdOblJXVFdMQWVKTCtzY1lCb3V5dlBVOTJJZUJGZ0x2ZVl2Y2VEbU0rS0tDR21JeDZlMGM4UHQzNwo3Y1hyZGRhbUJtQi8xTEhacGhpZ3hna01DNGMyS0ZrejFkK205YXNkcVg4ditZU2tNVHdOQzlLZVBrYng5T3JjCjN2ZXQ0WWhvbkdmWVdYVU1jV0lnTUZWL29EUFAxeFBEV05zODNtTDZvRmtuT3liS2l4VlBhMk0wWitMYTRaTjgKcWFBQ3hpTFpBb0dCQU5ScER1azM4dW1rdVlpSExqU09YWmd2Q2wwNmJOOEE2bERDNklqQzVIMUU0TkVZZU9QbQpTVXdUSkdXUUtMazhyYm92ZmY0VHVOcUQ5NHIwM0RWbWV6aE5YY0o2YkRBWkdqZHBEVFhLb2tUY0ZoSUJlYzI3CnNWZGZyNm5sZXBDbXpxRmZFM1lQM3hYNEdPcjNVdlM3cUY4am04U24wOXd6QVZBT2EzeC9xVm9YQW9HQkFPbEkKcVlxc0hVQnZ3emt2ZVQ2SmFPSUVMN1RVN09tZGRlNTRuRWxxNHZETnB6QnVqaWVDTDRJME8xOFlvTUU1MDlpSgpPWlE5RTE5OFVaZ3Myck5YampWRnVYNXJCWHJXZFREbFI4dDVlZVhpVUFINWtRVGJ2TnhBOXJmcUQ2L1FoeVVzCm5vT1doTnNwOURRRWhaQjZ3RE5oRXNFSGFFZkloTmk1S2ErSUE4WURBb0dBRExWUWFCR3AzZUsyR3Y0RGZLOTcKMkF3UWNhMTZNQWxzKzNIOTJaalhkTXMzTEN0cnFDN3grYlEzZkVBWXY2UnF2SFgwOHN1WlJyR1lrTjYvZ2c1awpsdVRDRkUyZ3hXdnJEcCtoWTdPQTY5L0REa2E2VTkzRDZYZFhHaklabUNmeXV1TG1WaXp5NnV5U0NSVE5DTWxsCmRITzc4Uk1kY05JNFpPTEgrWVhseXZjQ2dZQWU4MVFESVBpMGp0OXcyOXFUTUhubzJyTlZvNVpYSEZ3RUtwNVoKbzBPK3ZSbzhjNzZLZ1Z3NlF5SEphU1FTM3RBN2YyRlRTSk1rYlFNS1ZKRWprQzgrNUNSTElIbldwVk5oREZwdApKWTNGc1RQNlB4azljc1hvMXZta3h2b1QwbS9MdjlLOEZLRkZ6cGdtdXA3WjMxOVdzYjlpT3RCY0RiK0tYVzZwCmFqdE43d0tCZ1FDZzlyeGlNcmtEZGMzVE9IU202YlF4c212YTNqTG82S2l1UEdzVGdnRnFGRGc2aGdtaDQxeFgKbU9IRGZpa3ZpZ3dUSE9TM0M0dURwNUxacHc2TWhDVVFNYjdNdnBxNmZhNUxvNTdabE1vTkNQV0U0NE9NVFRNUwo5OU80K3dUWmNhK1dud3ZHWVlTR3ZQRTFPOUx6N1lkVythcXNrcEV3K29SVU1heHkyQ3dJdVE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: connaisseur/templates/configmaps.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: connaisseur-app-config
  namespace: default
  labels:
    helm.sh/chart: connaisseur-2.6.1
    app.kubernetes.io/name: connaisseur
    app.kubernetes.io/instance: connaisseur
    app.kubernetes.io/version: "3.6.1"
    app.kubernetes.io/managed-by: Helm
data:
  config.yaml: |
    validators:
    -
      approve: true
      name: allow
      type: static
    -
      approve: false
      name: deny
      type: static
    -
      name: dockerhub
      trustRoots:
      - key: |
          -----BEGIN PUBLIC KEY-----
          MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEOXYta5TgdCwXTCnLU09W5T4M4r9f
          QQrqJuADP6U7g5r9ICgPSmZuRHP/1AYUfOQW3baveKsT969EfELKj1lfCA==
          -----END PUBLIC KEY-----
        name: default
      - key: |
          -----BEGIN PUBLIC KEY-----
          MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEsx28WV7BsQfnHF1kZmpdCTTLJaWe
          d0CA+JOi8H4REuBaWSZ5zPDe468WuOJ6f71E7WFg3CVEVYHuoZt2UYbN/Q==
          -----END PUBLIC KEY-----
        name: sse
      type: notaryv1
    policy:
    -
      pattern: '*:*'
      validator: deny
    -
      pattern: docker.io/library/*:*
      validator: dockerhub
    -
      pattern: docker.io/securesystemsengineering/*:*
      validator: dockerhub
      with:
        trustRoot: sse
    -
      pattern: registry.k8s.io/*:*
      validator: allow
---
# Source: connaisseur/templates/configmaps.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: connaisseur-alert-config
  namespace: default
  labels:
    helm.sh/chart: connaisseur-2.6.1
    app.kubernetes.io/name: connaisseur
    app.kubernetes.io/instance: connaisseur
    app.kubernetes.io/version: "3.6.1"
    app.kubernetes.io/managed-by: Helm
data:
  config.yaml: |
      {}
---
# Source: connaisseur/templates/env.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: connaisseur-env
  namespace: default
  labels:
    helm.sh/chart: connaisseur-2.6.1
    app.kubernetes.io/name: connaisseur
    app.kubernetes.io/instance: connaisseur
    app.kubernetes.io/version: "3.6.1"
    app.kubernetes.io/managed-by: Helm
data:
  AUTOMATIC_CHILD_APPROVAL: "true"
  AUTOMATIC_UNCHANGED_APPROVAL: "false"
  DETECTION_MODE: "false"
  RESOURCE_VALIDATION_MODE: "all"
  CACHE_EXPIRY_SECONDS: "30"
  CACHE_ERRORS: "true"
  LOG_LEVEL: "info"
---
# Source: connaisseur/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: connaisseur-cluster-role
  namespace: default
  labels:
    helm.sh/chart: connaisseur-2.6.1
    app.kubernetes.io/name: connaisseur
    app.kubernetes.io/instance: connaisseur
    app.kubernetes.io/version: "3.6.1"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups: ["apps"]
  resources: ["deployments", "replicasets", "daemonsets", "statefulsets"]
  verbs: ["get"]
- apiGroups: [""]
  resources: ["pods", "replicationcontrollers"]
  verbs: ["get"]
- apiGroups: ["batch"]
  resources: ["jobs", "cronjobs"]
  verbs: ["get"]
---
# Source: connaisseur/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: connaisseur-cluster-role-binding
  namespace: default
  labels:
    helm.sh/chart: connaisseur-2.6.1
    app.kubernetes.io/name: connaisseur
    app.kubernetes.io/instance: connaisseur
    app.kubernetes.io/version: "3.6.1"
    app.kubernetes.io/managed-by: Helm
subjects:
- kind: ServiceAccount
  name: connaisseur-serviceaccount
  namespace: default
roleRef:
  kind: ClusterRole
  name: connaisseur-cluster-role
  apiGroup: rbac.authorization.k8s.io
---
# Source: connaisseur/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: connaisseur-role
  namespace: default
  labels:
    helm.sh/chart: connaisseur-2.6.1
    app.kubernetes.io/name: connaisseur
    app.kubernetes.io/instance: connaisseur
    app.kubernetes.io/version: "3.6.1"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get"]
---
# Source: connaisseur/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: connaisseur-role-binding
  namespace: default
  labels:
    helm.sh/chart: connaisseur-2.6.1
    app.kubernetes.io/name: connaisseur
    app.kubernetes.io/instance: connaisseur
    app.kubernetes.io/version: "3.6.1"
    app.kubernetes.io/managed-by: Helm
subjects:
- kind: ServiceAccount
  name: connaisseur-serviceaccount
  namespace: default
roleRef:
  kind: Role
  name: connaisseur-role
  apiGroup: rbac.authorization.k8s.io
---
# Source: connaisseur/templates/redis.yaml
apiVersion: v1
kind: Service
metadata:
  name: connaisseur-redis-service
  namespace: default
  labels:
    helm.sh/chart: connaisseur-2.6.1
    app.kubernetes.io/name: connaisseur
    app.kubernetes.io/instance: connaisseur
    app.kubernetes.io/version: "3.6.1"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 6379
      targetPort: 6379
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: connaisseur
    app.kubernetes.io/instance: redis
---
# Source: connaisseur/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: connaisseur-svc
  namespace: default
  labels:
    helm.sh/chart: connaisseur-2.6.1
    app.kubernetes.io/name: connaisseur
    app.kubernetes.io/instance: connaisseur
    app.kubernetes.io/version: "3.6.1"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 443
      targetPort: 5000
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: connaisseur
    app.kubernetes.io/instance: connaisseur
---
# Source: connaisseur/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: connaisseur
  namespace: default
  labels:
    helm.sh/chart: connaisseur-2.6.1
    app.kubernetes.io/name: connaisseur
    app.kubernetes.io/instance: connaisseur
    app.kubernetes.io/version: "3.6.1"
    app.kubernetes.io/managed-by: Helm
  annotations:
    checksum/config: ec0d73c7fe869de0adb8ee67fe9dc7f4765e19e198acfbce889a9eb658cc9b7c
spec:
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: connaisseur
      app.kubernetes.io/instance: connaisseur
  template:
    metadata:
      labels:
        app.kubernetes.io/name: connaisseur
        app.kubernetes.io/instance: connaisseur
      annotations:
        checksum/config: ec0d73c7fe869de0adb8ee67fe9dc7f4765e19e198acfbce889a9eb658cc9b7c
    spec:
      serviceAccountName: connaisseur-serviceaccount
      containers:
        - name: connaisseur
          image: docker.io/securesystemsengineering/connaisseur:v3.6.1
          imagePullPolicy: IfNotPresent
          ports:
            - name: https
              containerPort: 5000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: https
              scheme: HTTPS
          readinessProbe:
            httpGet:
              path: /ready
              port: https
              scheme: HTTPS
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 20001
            runAsNonRoot: true
            runAsUser: 10001
            seccompProfile:
              type: RuntimeDefault
          resources:
            limits:
              cpu: 1000m
              memory: 512Mi
            requests:
              cpu: 100m
              memory: 128Mi
          volumeMounts:
            - name: certs
              mountPath: /app/certs
              readOnly: true
            - name: app-config
              mountPath: /app/config
              readOnly: true
            - name: redis-certs
              mountPath: /app/redis-certs/tls.crt
              readOnly: true
              subPath: tls.crt
            - name: connaisseur-alert-config
              mountPath: /app/alerts/config.yaml
              readOnly: true
              subPath: config.yaml
            
          envFrom:
          - configMapRef:
              name: connaisseur-env
          - secretRef:
              name: connaisseur-redis-secret
          
          env:
          - name: REDIS_HOST
            value: connaisseur-redis-service       
      volumes:
        - name: certs
          secret:
            secretName: connaisseur-tls
        - name: redis-certs
          secret:
            secretName: connaisseur-redis-tls
        - name: app-config
          configMap:
            name: connaisseur-app-config
        - name: connaisseur-alert-config
          configMap:
            name: connaisseur-alert-config
        
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/instance
                  operator: In
                  values:
                  - connaisseur
              topologyKey: kubernetes.io/hostname
            weight: 100
      tolerations:
        []
      nodeSelector:
        {}
      securityContext:
        {}
---
# Source: connaisseur/templates/redis.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: connaisseur-redis
  namespace: default
  labels:
    helm.sh/chart: connaisseur-2.6.1
    app.kubernetes.io/name: connaisseur
    app.kubernetes.io/instance: connaisseur
    app.kubernetes.io/version: "3.6.1"
    app.kubernetes.io/managed-by: Helm
  annotations:
    checksum/config: ec0d73c7fe869de0adb8ee67fe9dc7f4765e19e198acfbce889a9eb658cc9b7c
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: connaisseur
      app.kubernetes.io/instance: redis
  template:
    metadata:
      labels:
        app.kubernetes.io/name: connaisseur
        app.kubernetes.io/instance: redis
      annotations:
        checksum/config: ec0d73c7fe869de0adb8ee67fe9dc7f4765e19e198acfbce889a9eb658cc9b7c
    spec:
      automountServiceAccountToken: false
      containers:
      - name: redis
        image: redis:7
        imagePullPolicy: Always
        args:
          - --requirepass
          - $(REDIS_PASSWORD)
          - --tls-cert-file
          - /cfg/certs/tls.crt
          - --tls-key-file
          - /cfg/certs/tls.key
          - --tls-auth-clients
          - "no"
          - --tls-port
          - "6379"
          - --port
          - "6380"
          - --loglevel
          - "notice"
          - --rename-command
          - FLUSHALL
          - ""
          - --rename-command
          - FLUSHDB
          - ""
        ports:
          - containerPort: 6379
            name: redis
            protocol: TCP
        livenessProbe:
          exec:
            command:
              - redis-cli
              - -p
              - "6380"
              - ping
        readinessProbe:
          exec:
            command:
              - redis-cli
              - -p
              - "6380"
              - ping
        volumeMounts:
          - name: certs
            mountPath: /cfg/certs
            readOnly: true
        envFrom:
          - secretRef:
              name: connaisseur-redis-secret
        resources:
            limits:
              cpu: 1000m
              memory: 512Mi
            requests:
              cpu: 100m
              memory: 128Mi
        securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 20001
            runAsNonRoot: true
            runAsUser: 10001
            seccompProfile:
              type: RuntimeDefault
      securityContext:
        {}
      volumes:
        - name: certs
          secret:
            secretName: connaisseur-redis-tls
---
# Source: connaisseur/templates/webhook+certificate.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: connaisseur-webhook
  labels:
    helm.sh/chart: connaisseur-2.6.1
    app.kubernetes.io/name: connaisseur
    app.kubernetes.io/instance: connaisseur
    app.kubernetes.io/version: "3.6.1"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": post-delete
    "helm.sh/hook-delete-policy": before-hook-creation, hook-succeeded, hook-failed
webhooks:
  - name: connaisseur-svc.default.svc
    failurePolicy: Ignore
    reinvocationPolicy: Never
    clientConfig:
      service:
        name: connaisseur-svc
        namespace: default
        path: /mutate
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURsekNDQW4rZ0F3SUJBZ0lSQUk4TlcyOFhIRnJlMytmOGcrM01DTDh3RFFZSktvWklodmNOQVFFTEJRQXcKSmpFa01DSUdBMVVFQXhNYlkyOXVibUZwYzNObGRYSXRjM1pqTG1SbFptRjFiSFF1YzNaak1DQVhEVEkwTURreApOakE0TVRFek9Wb1lEekl4TWpRd09ESXpNRGd4TVRNNVdqQW1NU1F3SWdZRFZRUURFeHRqYjI1dVlXbHpjMlYxCmNpMXpkbU11WkdWbVlYVnNkQzV6ZG1Nd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUIKQVFEQmorakszOHl1QW9tbTdIVXppOFpZVEFnOUY4NS9la28xVmJHYklHV1dkNEJHQ2hpZXJVdXNpVDF3R2M2dwoxUFdaa3EvK2paWm5BNkRTWnZrWWo0Vy9rNEpHUkFCQzBFWW4zRzY2US9VQ0xEeUJpM0tvbjV1Q0M1RWJCZkw3CmFPOE04STViMmZwckh6KzdZRm5qd2JrNWNiRkQxd2ZzdDlpNTM3OUVObVpFb1hpRnltOTRLZmZqWFN2ck5QYS8KQjdUcDJsdGloRDRYSTd6ZnFaQjVPai9sZXdMTDZqdno2enJlOE1nNTVOUEN2SDdIdXlwSGVOOGtvdlMzVE1CcApHeEs0cFlyVW9IYVBYWFkwUHl4WVFhVkZYMFk5d3J6OEJBWXAxSzlDNlpUaHRVWkpCcVFkSS81QktqeGYvcGVSCmRlK1FtbDEyVG1veUEyUm1TTVBBN3RoRkFnTUJBQUdqZ2Iwd2dib3dEZ1lEVlIwUEFRSC9CQVFEQWdXZ01CMEcKQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBTUJnTlZIUk1CQWY4RUFqQUFNSHNHQTFVZApFUVIwTUhLQ0QyTnZibTVoYVhOelpYVnlMWE4yWTRJWFkyOXVibUZwYzNObGRYSXRjM1pqTG1SbFptRjFiSFNDCkcyTnZibTVoYVhOelpYVnlMWE4yWXk1a1pXWmhkV3gwTG5OMlk0SXBZMjl1Ym1GcGMzTmxkWEl0YzNaakxtUmwKWm1GMWJIUXVjM1pqTG1Oc2RYTjBaWEl1Ykc5allXd3dEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBS1Q1VGRMTgp0Wk5KTVIzUGpYT0twSlVXTFdzTUpqWXV6cGtPcWVtcVdQZXJxaVlwR05vK1I0bG9JREhJc1M4NEdIb1czcTdlCmt0ZU9paEpnbHUraGVHQnJqUkI5UVArVGRRa2I3Wnh4eTE2TXZ4RDJtVEpjSzVOdVN2Nm1lTnpnOXN3YThDdjgKM2tZNHpqSXExNktHQlYrWGJROHVsOEhUR212cnF5YmQwMWdwY0d2Y0NPWTYra0dXNjA1WTY5R0dyKzBINGtyQwp4Z2xNNVBEMzhXSGJkQ1pOa0J2OFRPMkdDSmJrQWtwSVpZUDFRVnJXbDVXSU5ud2NVNWZxOTFEaUNtRTcvQ2pWCjRidzIwN3I5SnFGRlk1TS9zVnZTNnF1RHVRWWJQYlZzTUZUUWgrRGFVZFpKVlIyWm5Rc0N1WjN5SUtuZzIrMjgKeVFMNzZ4a1YwMFpEWi80PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    rules: []
    sideEffects: None
    admissionReviewVersions: ["v1"]
---
# Source: connaisseur/templates/webhook+certificate.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: connaisseur-webhook
  labels:
    helm.sh/chart: connaisseur-2.6.1
    app.kubernetes.io/name: connaisseur
    app.kubernetes.io/instance: connaisseur
    app.kubernetes.io/version: "3.6.1"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": post-install, post-upgrade, post-rollback
webhooks:
  - name: connaisseur-svc.default.svc
    failurePolicy: Fail
    reinvocationPolicy: Never
    clientConfig:
      service:
        name: connaisseur-svc
        namespace: default
        path: /mutate
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURsekNDQW4rZ0F3SUJBZ0lSQUk4TlcyOFhIRnJlMytmOGcrM01DTDh3RFFZSktvWklodmNOQVFFTEJRQXcKSmpFa01DSUdBMVVFQXhNYlkyOXVibUZwYzNObGRYSXRjM1pqTG1SbFptRjFiSFF1YzNaak1DQVhEVEkwTURreApOakE0TVRFek9Wb1lEekl4TWpRd09ESXpNRGd4TVRNNVdqQW1NU1F3SWdZRFZRUURFeHRqYjI1dVlXbHpjMlYxCmNpMXpkbU11WkdWbVlYVnNkQzV6ZG1Nd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUIKQVFEQmorakszOHl1QW9tbTdIVXppOFpZVEFnOUY4NS9la28xVmJHYklHV1dkNEJHQ2hpZXJVdXNpVDF3R2M2dwoxUFdaa3EvK2paWm5BNkRTWnZrWWo0Vy9rNEpHUkFCQzBFWW4zRzY2US9VQ0xEeUJpM0tvbjV1Q0M1RWJCZkw3CmFPOE04STViMmZwckh6KzdZRm5qd2JrNWNiRkQxd2ZzdDlpNTM3OUVObVpFb1hpRnltOTRLZmZqWFN2ck5QYS8KQjdUcDJsdGloRDRYSTd6ZnFaQjVPai9sZXdMTDZqdno2enJlOE1nNTVOUEN2SDdIdXlwSGVOOGtvdlMzVE1CcApHeEs0cFlyVW9IYVBYWFkwUHl4WVFhVkZYMFk5d3J6OEJBWXAxSzlDNlpUaHRVWkpCcVFkSS81QktqeGYvcGVSCmRlK1FtbDEyVG1veUEyUm1TTVBBN3RoRkFnTUJBQUdqZ2Iwd2dib3dEZ1lEVlIwUEFRSC9CQVFEQWdXZ01CMEcKQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBTUJnTlZIUk1CQWY4RUFqQUFNSHNHQTFVZApFUVIwTUhLQ0QyTnZibTVoYVhOelpYVnlMWE4yWTRJWFkyOXVibUZwYzNObGRYSXRjM1pqTG1SbFptRjFiSFNDCkcyTnZibTVoYVhOelpYVnlMWE4yWXk1a1pXWmhkV3gwTG5OMlk0SXBZMjl1Ym1GcGMzTmxkWEl0YzNaakxtUmwKWm1GMWJIUXVjM1pqTG1Oc2RYTjBaWEl1Ykc5allXd3dEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBS1Q1VGRMTgp0Wk5KTVIzUGpYT0twSlVXTFdzTUpqWXV6cGtPcWVtcVdQZXJxaVlwR05vK1I0bG9JREhJc1M4NEdIb1czcTdlCmt0ZU9paEpnbHUraGVHQnJqUkI5UVArVGRRa2I3Wnh4eTE2TXZ4RDJtVEpjSzVOdVN2Nm1lTnpnOXN3YThDdjgKM2tZNHpqSXExNktHQlYrWGJROHVsOEhUR212cnF5YmQwMWdwY0d2Y0NPWTYra0dXNjA1WTY5R0dyKzBINGtyQwp4Z2xNNVBEMzhXSGJkQ1pOa0J2OFRPMkdDSmJrQWtwSVpZUDFRVnJXbDVXSU5ud2NVNWZxOTFEaUNtRTcvQ2pWCjRidzIwN3I5SnFGRlk1TS9zVnZTNnF1RHVRWWJQYlZzTUZUUWgrRGFVZFpKVlIyWm5Rc0N1WjN5SUtuZzIrMjgKeVFMNzZ4a1YwMFpEWi80PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    rules:
      - operations: ["CREATE", "UPDATE"]
        apiGroups: ["apps"]
        apiVersions: ["v1"]
        resources: ["deployments", "replicasets", "daemonsets", "statefulsets"]
      - operations: ["CREATE", "UPDATE"]
        apiGroups: [""]
        apiVersions: ["v1"]
        resources: ["pods", "pods/ephemeralcontainers", "replicationcontrollers"]
      - operations: ["CREATE", "UPDATE"]
        apiGroups: ["batch"]
        apiVersions: ["v1"]
        resources: ["jobs", "cronjobs"]
    sideEffects: None
    timeoutSeconds: 30
    admissionReviewVersions: ["v1"]
    namespaceSelector:
      matchExpressions:
      - key: securesystemsengineering.connaisseur/webhook
        operator: NotIn
        values:
          - ignore
