---
# Source: h2-database/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: h2-database
  labels:
    app.kubernetes.io/name: h2-database
    helm.sh/chart: h2-database-1.0.3
    app.kubernetes.io/instance: my-h2-database
    app.kubernetes.io/version: "1.4.199"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 1521
      targetPort: db
      protocol: TCP
      name: db
    - port: 81
      targetPort: ui
      protocol: TCP
      name: ui
  selector:
    app: h2-database
    release: my-h2-database
---
# Source: h2-database/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: h2-database
  labels:
    app.kubernetes.io/name: h2-database
    helm.sh/chart: h2-database-1.0.3
    app.kubernetes.io/instance: my-h2-database
    app.kubernetes.io/version: "1.4.199"
    app.kubernetes.io/managed-by: Helm
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  replicas: 1
  selector:
    matchLabels:
      app: h2-database
      release: my-h2-database
  template:
    metadata:
      labels:
        app: h2-database
        release: my-h2-database
      annotations:
        imageDigest: ""
    spec:
      containers:
        - name: h2-database
          image: "oscarfonts/h2:alpine"
          imagePullPolicy: Always
          env:
            - name: H2_OPTIONS
              value: "-ifNotExists"
          ports:
            - name: db
              containerPort: 1521
              protocol: TCP
            - name: ui
              containerPort: 81
          livenessProbe:
            tcpSocket:
              port: db
            initialDelaySeconds: 10
            periodSeconds: 10
          readinessProbe:
            tcpSocket:
              port: db
            initialDelaySeconds: 10
            periodSeconds: 10
          resources:
            limits:
              cpu: 200m
              memory: 256Mi
            requests:
              cpu: 200m
              memory: 256Mi
