---
# Source: slackgpt/templates/secret-env.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-slackgpt-secret-env
stringData:
  OPENAI_TOKEN: ""
---
# Source: slackgpt/templates/configmap-env.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-slackgpt-env
data:
  {}
---
# Source: slackgpt/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-slackgpt
  labels:
    app: slackgpt-0.0.6
    helm.sh/chart: slackgpt-0.0.6
    app.kubernetes.io/name: slackgpt
    app.kubernetes.io/instance: my-slackgpt
    namespace: "default"
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: 8080
      protocol: TCP
      name: http
      appProtocol: http
  selector:
    app.kubernetes.io/name: slackgpt
    app.kubernetes.io/instance: my-slackgpt
    namespace: "default"
---
# Source: slackgpt/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-slackgpt
  labels:
    app: slackgpt-0.0.6
    helm.sh/chart: slackgpt-0.0.6
    app.kubernetes.io/name: slackgpt
    app.kubernetes.io/instance: my-slackgpt
    namespace: "default"
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 50%
      maxUnavailable: 50%
  selector:
    matchLabels:
      app.kubernetes.io/name: slackgpt
      app.kubernetes.io/instance: my-slackgpt
      namespace: "default"
  template:
    metadata:
      labels:
        app.kubernetes.io/name: slackgpt
        app.kubernetes.io/instance: my-slackgpt
        namespace: "default"
        version: "0.0.15"
    spec:
      automountServiceAccountToken: true
      terminationGracePeriodSeconds: 10
      serviceAccountName: default
      securityContext:
        fsGroup: 2000
      containers:
        - name: slackgpt
          securityContext:
            readOnlyRootFilesystem: false
            runAsNonRoot: true
            runAsUser: 1000
          image: "docker.io/kfirfer/slackgpt:0.0.15"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          envFrom:
            - configMapRef:
                name: my-slackgpt-env
            - secretRef:
                name: my-slackgpt-secret-env
          env:
            - name: APPLICATION_NAME
              value: "my-slackgpt"
            - name: NAMESPACE_NAME
              value: "default"
          livenessProbe:
            httpGet:
              path: /health/liveness
              port: 8080
            initialDelaySeconds: 60
            periodSeconds: 7
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          readinessProbe:
            httpGet:
              path: /health/readiness
              port: 8080
            initialDelaySeconds: 20
            periodSeconds: 3
            timeoutSeconds: 2
            successThreshold: 1
            failureThreshold: 3
          startupProbe:
            httpGet:
              path: /health/liveness
              port: 8080
            initialDelaySeconds: 20
            periodSeconds: 5
            failureThreshold: 180
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              cpu: 2000m
              memory: 2000Mi
            requests:
              cpu: 10m
              memory: 25Mi
      dnsPolicy: ClusterFirst
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              podAffinityTerm:
                topologyKey: kubernetes.io/hostname
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: slackgpt
                    namespace: default
---
# Source: slackgpt/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "my-slackgpt-test-connection"
  labels:
    app: slackgpt-0.0.6
    helm.sh/chart: slackgpt-0.0.6
    app.kubernetes.io/name: slackgpt
    app.kubernetes.io/instance: my-slackgpt
    namespace: "default"
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test-success
spec:
  containers:
    - name: wget
      image: "docker.io/busybox:1-musl"
      imagePullPolicy: IfNotPresent
      command: ['wget']
      args: ['my-slackgpt:8080']
  restartPolicy: Never
