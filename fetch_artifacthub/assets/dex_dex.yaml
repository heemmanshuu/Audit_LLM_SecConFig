---
# Source: dex/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-dex
  labels:
    helm.sh/chart: dex-0.19.1
    app.kubernetes.io/name: dex
    app.kubernetes.io/instance: my-dex
    app.kubernetes.io/version: "2.41.1"
    app.kubernetes.io/managed-by: Helm
---
# Source: dex/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-dex
  labels:
    helm.sh/chart: dex-0.19.1
    app.kubernetes.io/name: dex
    app.kubernetes.io/instance: my-dex
    app.kubernetes.io/version: "2.41.1"
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  config.yaml: "e30="
---
# Source: dex/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-dex
  labels:
    helm.sh/chart: dex-0.19.1
    app.kubernetes.io/name: dex
    app.kubernetes.io/instance: my-dex
    app.kubernetes.io/version: "2.41.1"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups: ["apiextensions.k8s.io"]
    resources: ["customresourcedefinitions"]
    verbs: ["list", "create"]
---
# Source: dex/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-dex-cluster
  labels:
    helm.sh/chart: dex-0.19.1
    app.kubernetes.io/name: dex
    app.kubernetes.io/instance: my-dex
    app.kubernetes.io/version: "2.41.1"
    app.kubernetes.io/managed-by: Helm
roleRef:
  kind: ClusterRole
  apiGroup: rbac.authorization.k8s.io
  name: my-dex
subjects:
- kind: ServiceAccount
  namespace: default
  name: my-dex
---
# Source: dex/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: my-dex
  labels:
    helm.sh/chart: dex-0.19.1
    app.kubernetes.io/name: dex
    app.kubernetes.io/instance: my-dex
    app.kubernetes.io/version: "2.41.1"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups: ["dex.coreos.com"]
    resources: ["*"]
    verbs: ["*"]
---
# Source: dex/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: my-dex
  labels:
    helm.sh/chart: dex-0.19.1
    app.kubernetes.io/name: dex
    app.kubernetes.io/instance: my-dex
    app.kubernetes.io/version: "2.41.1"
    app.kubernetes.io/managed-by: Helm
roleRef:
  kind: Role
  apiGroup: rbac.authorization.k8s.io
  name: my-dex  
subjects:
- kind: ServiceAccount
  namespace: default
  name: my-dex
---
# Source: dex/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-dex
  labels:
    helm.sh/chart: dex-0.19.1
    app.kubernetes.io/name: dex
    app.kubernetes.io/instance: my-dex
    app.kubernetes.io/version: "2.41.1"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 5556
      targetPort: http
      protocol: TCP
      appProtocol: http
    - name: telemetry
      port: 5558
      targetPort: telemetry
      protocol: TCP
      appProtocol: http
  selector:
    app.kubernetes.io/name: dex
    app.kubernetes.io/instance: my-dex
---
# Source: dex/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-dex
  labels:
    helm.sh/chart: dex-0.19.1
    app.kubernetes.io/name: dex
    app.kubernetes.io/instance: my-dex
    app.kubernetes.io/version: "2.41.1"
    app.kubernetes.io/managed-by: Helm
    
  
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: dex
      app.kubernetes.io/instance: my-dex
  template:
    metadata:
      annotations:
      
        checksum/config: 895e11749eee728967d3ad409c6539b40dcdcfa675593e5d6e78a462ca60f75e
      labels:
        app.kubernetes.io/name: dex
        app.kubernetes.io/instance: my-dex
    spec:
      serviceAccountName: my-dex
      securityContext:
        {}
      containers:
        - name: dex
          securityContext:
            {}
          image: "ghcr.io/dexidp/dex:v2.41.1"
          imagePullPolicy: IfNotPresent
          args:
            - dex
            - serve
            - --web-http-addr
            - 0.0.0.0:5556
            - --telemetry-addr
            - 0.0.0.0:5558
            - /etc/dex/config.yaml
          env:
          ports:
            - name: http
              containerPort: 5556
              protocol: TCP
            - name: telemetry
              containerPort: 5558
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz/live
              port: telemetry
          readinessProbe:
            httpGet:
              path: /healthz/ready
              port: telemetry
          resources:
            {}
          volumeMounts:
            - name: config
              mountPath: /etc/dex
              readOnly: true
      volumes:
        - name: config
          secret:
            secretName: my-dex
