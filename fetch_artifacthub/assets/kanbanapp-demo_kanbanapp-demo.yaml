---
# Source: kanbanapp-demo/charts/kanbanapp-demo/templates/kanban-data-persistentvolumeclaim.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    io.kompose.service: kanban-data
  name: kanban-data
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}
---
# Source: kanbanapp-demo/templates/kanban-data-persistentvolumeclaim.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    io.kompose.service: kanban-data
  name: kanban-data
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}
---
# Source: kanbanapp-demo/charts/kanbanapp-demo/templates/kanban-app-service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.22.0 (955b78124)
  labels:
    io.kompose.service: kanban-app
  name: kanban-app
spec:
  type: ClusterIP
  ports:
    - name: "8080"
      port: 8080
      targetPort: 80
  selector:
    io.kompose.service: kanban-app
status:
  loadBalancer: {}
---
# Source: kanbanapp-demo/charts/kanbanapp-demo/templates/kanban-postgres-service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.22.0 (955b78124)
  creationTimestamp: null
  labels:
    io.kompose.service: kanban-postgres
  name: kanban-postgres
spec:
  ports:
    - name: "5432"
      port: 5432
      targetPort: 5432
  selector:
    io.kompose.service: kanban-postgres
status:
  loadBalancer: {}
---
# Source: kanbanapp-demo/charts/kanbanapp-demo/templates/kanban-ui-service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.22.0 (955b78124)
  creationTimestamp: null
  labels:
    io.kompose.service: kanban-ui
  name: kanban-ui
spec:
  ports:
    - name: "4200"
      port: 4200
      targetPort: 80
  selector:
    io.kompose.service: kanban-ui
status:
  loadBalancer: {}
---
# Source: kanbanapp-demo/templates/kanban-app-service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.22.0 (955b78124)
  labels:
    io.kompose.service: kanban-app
  name: kanban-app
spec:
  type: NodePort
  ports:
    - name: "8080"
      port: 8080
      targetPort: 8080
  selector:
    io.kompose.service: kanban-app
status:
  loadBalancer: {}
---
# Source: kanbanapp-demo/templates/kanban-postgres-service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.22.0 (955b78124)
  creationTimestamp: null
  labels:
    io.kompose.service: kanban-postgres
  name: kanban-postgres
spec:
  ports:
    - name: "5432"
      port: 5432
      targetPort: 5432
  selector:
    io.kompose.service: kanban-postgres
status:
  loadBalancer: {}
---
# Source: kanbanapp-demo/templates/kanban-ui-service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.22.0 (955b78124)
  creationTimestamp: null
  labels:
    io.kompose.service: kanban-ui
  name: kanban-ui
spec:
  ports:
    - name: "4200"
      port: 4200
      targetPort: 80
  selector:
    io.kompose.service: kanban-ui
status:
  loadBalancer: {}
---
# Source: kanbanapp-demo/charts/kanbanapp-demo/templates/kanban-app-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.22.0 (955b78124)
  creationTimestamp: null
  labels:
    io.kompose.service: kanban-app
  name: kanban-app
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: kanban-app
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.22.0 (955b78124)
      creationTimestamp: null
      labels:
        io.kompose.service: kanban-app
    spec:
      containers:
        - env:
          - name: DB_SERVER
            value: kanban-postgres
          - name: POSTGRES_DB
            value: kanban
          - name: POSTGRES_PASSWORD
            value: kanban
          - name: POSTGRES_USER
            value: kanban
          image: sdandey/dandey-apps:kanban-board-kanban-app
          name: kanban-app
          ports:
            - containerPort: 8080
          resources:
            limits:
              cpu: 100m
              memory: 256Mi
            requests:
              cpu: 100m
              memory: 256Mi

      restartPolicy: Always
status: {}
---
# Source: kanbanapp-demo/charts/kanbanapp-demo/templates/kanban-postgres-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.22.0 (955b78124)
  creationTimestamp: null
  labels:
    io.kompose.service: kanban-postgres
  name: kanban-postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: kanban-postgres
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.22.0 (955b78124)
      creationTimestamp: null
      labels:
        io.kompose.service: kanban-postgres
    spec:
      containers:
        - env:
            - name: POSTGRES_DB
              value: kanban
            - name: POSTGRES_PASSWORD
              value: kanban
            - name: POSTGRES_USER
              value: kanban
          image: postgres:9.6-alpine
          name: kanban-postgres
          ports:
            - containerPort: 5432
          resources: {}
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: kanban-data
      restartPolicy: Always
      volumes:
        - name: kanban-data
          persistentVolumeClaim:
            claimName: kanban-data
status: {}
---
# Source: kanbanapp-demo/charts/kanbanapp-demo/templates/kanban-ui-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.22.0 (955b78124)
  labels:
    io.kompose.service: kanban-ui
  name: kanban-ui
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: kanban-ui
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.22.0 (955b78124)
      labels:
        io.kompose.service: kanban-ui
    spec:
      containers:
        - image: sdandey/dandey-apps:kanban-board-kanban-ui
          name: kanban-ui
          ports:
            - containerPort: 80
          resources: {}
      restartPolicy: Always
status: {}
---
# Source: kanbanapp-demo/templates/kanban-app-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.22.0 (955b78124)
  creationTimestamp: null
  labels:
    io.kompose.service: kanban-app
  name: kanban-app
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: kanban-app
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.22.0 (955b78124)
      creationTimestamp: null
      labels:
        io.kompose.service: kanban-app
    spec:
      containers:
        - env:
          - name: DB_SERVER
            value: kanban-postgres
          - name: POSTGRES_DB
            value: kanban
          - name: POSTGRES_PASSWORD
            value: kanban
          - name: POSTGRES_USER
            value: kanban
          image: sdandey/dandey-apps:kanban-board-kanban-app
          name: kanban-app
          ports:
            - containerPort: 8080
          resources:
            limits:
              cpu: 100m
              memory: 256Mi
            requests:
              cpu: 100m
              memory: 256Mi

      restartPolicy: Always
status: {}
---
# Source: kanbanapp-demo/templates/kanban-postgres-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.22.0 (955b78124)
  creationTimestamp: null
  labels:
    io.kompose.service: kanban-postgres
  name: kanban-postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: kanban-postgres
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.22.0 (955b78124)
      creationTimestamp: null
      labels:
        io.kompose.service: kanban-postgres
    spec:
      containers:
        - env:
            - name: POSTGRES_DB
              value: kanban
            - name: POSTGRES_PASSWORD
              value: kanban
            - name: POSTGRES_USER
              value: kanban
          image: postgres:9.6-alpine
          name: kanban-postgres
          ports:
            - containerPort: 5432
          resources: {}
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: kanban-data
      restartPolicy: Always
      volumes:
        - name: kanban-data
          persistentVolumeClaim:
            claimName: kanban-data
status: {}
---
# Source: kanbanapp-demo/templates/kanban-ui-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.22.0 (955b78124)
  labels:
    io.kompose.service: kanban-ui
  name: kanban-ui
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: kanban-ui
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.22.0 (955b78124)
      labels:
        io.kompose.service: kanban-ui
    spec:
      containers:
        - image: sdandey/dandey-apps:kanban-board-kanban-ui
          name: kanban-ui
          ports:
            - containerPort: 80
          resources: {}
      restartPolicy: Always
status: {}
---
# Source: kanbanapp-demo/charts/kanbanapp-demo/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "my-kanbanapp-demo-test-connection"
  labels:
    helm.sh/chart: kanbanapp-demo-0.2.0
    app.kubernetes.io/name: kanbanapp-demo
    app.kubernetes.io/instance: my-kanbanapp-demo
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['my-kanbanapp-demo:80']
  restartPolicy: Never
---
# Source: kanbanapp-demo/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "my-kanbanapp-demo-test-connection"
  labels:
    helm.sh/chart: kanbanapp-demo-0.3.0
    app.kubernetes.io/name: kanbanapp-demo
    app.kubernetes.io/instance: my-kanbanapp-demo
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['my-kanbanapp-demo:80']
  restartPolicy: Never
