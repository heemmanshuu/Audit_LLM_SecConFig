---
# Source: pdn-server/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-pdn-server
  namespace: "default"
  labels:
    app.kubernetes.io/name: pdn-server
    helm.sh/chart: pdn-server-101.9.1
    app.kubernetes.io/instance: my-pdn-server
    app.kubernetes.io/managed-by: Helm
automountServiceAccountToken: true
secrets:
  - name: my-pdn-server
---
# Source: pdn-server/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-pdn-server
  namespace: "default"
  labels:
    app.kubernetes.io/name: pdn-server
    helm.sh/chart: pdn-server-101.9.1
    app.kubernetes.io/instance: my-pdn-server
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
---
# Source: pdn-server/templates/system-yaml.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-pdn-server-systemyaml
  namespace: "default"
  labels:
    app.kubernetes.io/name: pdn-server
    helm.sh/chart: pdn-server-101.9.1
    app.kubernetes.io/instance: my-pdn-server
    app.kubernetes.io/managed-by: Helm
type: Opaque
stringData:
  system.yaml: |
    router:
      serviceRegistry:
        insecure: false
    pdnServer:
      logLevel: info
      internalTls: false
      metrics:
        enabled: true
---
# Source: pdn-server/templates/role.yaml
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: my-pdn-server-endpoint-reader
  namespace: "default"
  labels:
    app.kubernetes.io/name: pdn-server
    helm.sh/chart: pdn-server-101.9.1
    app.kubernetes.io/instance: my-pdn-server
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups: [""]
    resources: ["endpoints"]
    verbs: ["get"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["create"]
---
# Source: pdn-server/templates/rolebinding.yaml
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: my-pdn-server-endpoint-reader
  namespace: "default"
  labels:
    app.kubernetes.io/name: pdn-server
    helm.sh/chart: pdn-server-101.9.1
    app.kubernetes.io/instance: my-pdn-server
    app.kubernetes.io/managed-by: Helm
subjects:
  - kind: ServiceAccount
    name: my-pdn-server
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: my-pdn-server-endpoint-reader
---
# Source: pdn-server/templates/svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-pdn-server
  namespace: "default"
  labels:
    app.kubernetes.io/name: pdn-server
    helm.sh/chart: pdn-server-101.9.1
    app.kubernetes.io/instance: my-pdn-server
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - name: http-router
      port: 8082
      targetPort: http-router
    - name: insecure-grpc
      port: 8093
      targetPort: insecure-grpc
    - name: secure-grpc
      port: 8095
      targetPort: secure-grpc
  selector:
    app.kubernetes.io/name: pdn-server
    app.kubernetes.io/instance: my-pdn-server
---
# Source: pdn-server/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-pdn-server
  namespace: "default"
  labels:
    app.kubernetes.io/name: pdn-server
    helm.sh/chart: pdn-server-101.9.1
    app.kubernetes.io/instance: my-pdn-server
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: pdn-server
      app.kubernetes.io/instance: my-pdn-server
  template:
    metadata:
      labels:
        app.kubernetes.io/name: pdn-server
        helm.sh/chart: pdn-server-101.9.1
        app.kubernetes.io/instance: my-pdn-server
        app.kubernetes.io/managed-by: Helm
      annotations:
        systemYaml/checksum: 2de5bd46810a7d94df50800c5d1ce5dea54118b9fbb4dae36618d97b4cd798cd
    spec:
      
      serviceAccountName: my-pdn-server
      affinity:
        podAffinity:
          
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app.kubernetes.io/name: pdn-server
                  app.kubernetes.io/instance: my-pdn-server
              topologyKey: kubernetes.io/hostname
        nodeAffinity:
          
      securityContext:
        fsGroup: 11055
        runAsUser: 11055
      terminationGracePeriodSeconds: 120
      initContainers:
        - name: 'copy-system-yaml'
          image: releases-docker.jfrog.io/ubi9/ubi-minimal:9.2.691
          imagePullPolicy: "IfNotPresent"
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          command:
            - '/bin/bash'
            - '-c'
            - >
              echo "Copy system.yaml to /var/opt/jfrog/pdnserver/etc";
              mkdir -p /var/opt/jfrog/pdnserver/etc;
              mkdir -p /var/opt/jfrog/pdnserver/etc/access/keys/trusted;
              cp -fv /tmp/etc/system.yaml /var/opt/jfrog/pdnserver/etc/system.yaml;
              echo "Remove /var/opt/jfrog/pdnserver/lost+found folder if exists";
              rm -rfv /var/opt/jfrog/pdnserver/lost+found;
          env:
          volumeMounts:
            - name: data
              mountPath: "/var/opt/jfrog/pdnserver"
            - name: systemyaml
              mountPath: "/tmp/etc/system.yaml"
              subPath: system.yaml
      containers:
        - name: pdnserver
          image: releases-docker.jfrog.io/jfrog/pdn/server:1.9.1
          imagePullPolicy: "IfNotPresent"
          resources:
            {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - NET_RAW
            runAsNonRoot: true
          command:
            - '/bin/bash'
            - '-c'
            - exec /opt/jfrog/pdnserver/app/pdnserver/bin/pdnserver.sh
          env:
            - name: JF_SHARED_NODE_ID
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: JF_PDNSERVER_SELFADDRESS
              value: "my-pdn-server:8095"
          ports:
            - name: insecure-grpc
              containerPort: 8093
            - name: secure-grpc
              containerPort: 8095
          volumeMounts:
            - name: data
              mountPath: /var/opt/jfrog/pdnserver
          startupProbe:
            exec:
              command:
                - sh
                - -c
                - curl -s --fail --max-time 5 http://localhost:8092/api/v1/system/readiness
            initialDelaySeconds: 5
            failureThreshold: 30
            periodSeconds: 5
            timeoutSeconds: 5
            
          livenessProbe:
            exec:
              command:
                - sh
                - -c
                - curl -s --fail --max-time 5 http://localhost:8092/api/v1/system/liveness
            initialDelaySeconds: 0
            failureThreshold: 5
            timeoutSeconds: 5
            periodSeconds: 10
            successThreshold: 1
            
        - name: observability
          image: releases-docker.jfrog.io/jfrog/observability:1.13.0
          imagePullPolicy: "IfNotPresent"
          resources:
            {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - NET_RAW
            runAsNonRoot: true
          env:
            - name: JF_SHARED_NODE_ID
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: NEW_PLATFORM_SERVICES_ARCH
              value: "true"
            - name: JF_SHARED_SECURITY_MASTERKEY
              valueFrom:
                secretKeyRef:
                  name: my-pdn-server
                  key: master-key
            - name: JF_SHARED_SECURITY_JOINKEY
              valueFrom:
                secretKeyRef:
                  name: my-pdn-server
                  key: join-key
          volumeMounts:
            - name: data
              mountPath: /var/opt/jfrog/observability
          startupProbe:
            exec:
              command:
                - sh
                - -c
                - curl --fail --max-time 5 http://localhost:8036/api/v1/system/readiness
            initialDelaySeconds: 5
            failureThreshold: 30
            periodSeconds: 5
            timeoutSeconds: 5
            
          livenessProbe:
            exec:
              command:
                - sh
                - -c
                - curl --fail --max-time 5 http://localhost:8036/api/v1/system/liveness
            initialDelaySeconds: 0
            failureThreshold: 5
            timeoutSeconds: 5
            periodSeconds: 10
            successThreshold: 1
            
        - name: router
          image: releases-docker.jfrog.io/jfrog/router:7.74.0
          imagePullPolicy: IfNotPresent
          resources:
            {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - NET_RAW
            runAsNonRoot: true
          command:
            - '/bin/bash'
            - '-c'
            - >
              exec /opt/jfrog/router/app/bin/entrypoint-router.sh
          env:
            - name: JF_ROUTER_TOPOLOGY_LOCAL_REQUIREDSERVICETYPES
              value: jftrk,jfob
            - name: JF_SHARED_JFROGURL
              value: 
            - name: JF_SHARED_SECURITY_MASTERKEY
              valueFrom:
                secretKeyRef:
                  name: my-pdn-server
                  key: master-key
            - name: JF_SHARED_SECURITY_JOINKEY
              valueFrom:
                secretKeyRef:
                  name: my-pdn-server
                  key: join-key
          ports:
            - name: http-router
              containerPort: 8082
          volumeMounts:
            - name: data
              mountPath: "/var/opt/jfrog/router"
          livenessProbe:
            exec:
              command:
                - sh
                - -c
                - curl -s -k --fail --max-time 5 http://localhost:8082/router/api/v1/system/liveness
            initialDelaySeconds: 0
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 5
            successThreshold: 1
            
          startupProbe:
            exec:
              command:
                - sh
                - -c
                - curl -s -k --fail --max-time 5 http://localhost:8082/router/api/v1/system/readiness
            initialDelaySeconds: 10
            failureThreshold: 90
            periodSeconds: 5
            timeoutSeconds: 5
            
      volumes:
        - name: systemyaml
          secret:
            secretName: my-pdn-server-systemyaml
        - name: data
          emptyDir: {}
