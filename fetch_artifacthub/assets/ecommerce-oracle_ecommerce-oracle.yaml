---
# Source: ecommerce-oracle/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-ecommerce-oracle
  labels:
    helm.sh/chart: ecommerce-oracle-0.1.1
    app.kubernetes.io/name: ecommerce-oracle
    app.kubernetes.io/instance: my-ecommerce-oracle
    app.kubernetes.io/version: "0.0.1-SNAPSHOT"
    app.kubernetes.io/managed-by: Helm
---
# Source: ecommerce-oracle/charts/oracle12c/templates/configmap.yaml
kind: ConfigMap
apiVersion: v1
metadata:
  name: oracle-configuration
  labels:
    
    app.kubernetes.io/name: oracle12c
    app.kubernetes.io/instance: oracle12c
    app.openshift.io/runtime: oracle 
    chart: oracle12c-0.1.0
    release: my-ecommerce-oracle
    heritage: Helm
data:
  configDBora.sh: |-
    #!/bin/sh
    #
    # $Header: dbaas/docker/build/dbsetup/setup/configDBora.sh rduraisa_docker_122_image/6 2017/04/02 06:29:55 rduraisa Exp $
    #
    # configDBora.sh
    #
    # Copyright (c) 2016, 2017, Oracle and/or its affiliates. All rights reserved.
    #
    #    NAME
    #      configDBora.sh - configure database as oracle user
    #
    #    DESCRIPTION
    #      rename the DB to customized name
    #
    #    NOTES
    #      run as oracle
    #
    #    MODIFIED   (MM/DD/YY)
    #    rduraisa    03/02/17 - Modify scripts to build for 12102 and 12201
    #    xihzhang    10/25/16 - Remove EE bundles
    #    xihzhang    08/08/16 - Remove privilege mode
    #    xihzhang    05/23/16 - Creation
    #

    echo `date`
    echo "Configure DB as oracle user"

    # basic parameters
    SETUP_DIR=/home/oracle/setup

    IFS='.' read -r -a dbrelarr <<< 12.2.0

    if [[ ${dbrelarr[0]} == 12 && ${dbrelarr[1]} == 1 ]];
    then
        PATCH_LOG=${SETUP_DIR}/log/patchDB.log
        # unpatch opc features
        echo "Patching Database ...."
        /bin/bash ${SETUP_DIR}/patchDB.sh 2>&1 >> ${PATCH_LOG}

        $ORACLE_HOME/bin/relink as_installed
    fi

    #setup directories and soft links
    echo "Setup Database directories ..."
    mkdir -p /ORCL/u01/app/oracle/diag /u01/app/oracle /u02/app/oracle /u03/app/oracle /u04/app/oracle
    mkdir -p $TNS_ADMIN
    ln -s /ORCL/$ORACLE_HOME/dbs $ORACLE_HOME/dbs
    ln -s /ORCL/u01/app/oracle/diag /u01/app/oracle/diag
    ln -s /ORCL/u02/app/oracle/audit /u02/app/oracle/audit
    ln -s /ORCL/u02/app/oracle/oradata /u02/app/oracle/oradata
    ln -s /ORCL/u03/app/oracle/fast_recovery_area /u03/app/oracle/fast_recovery_area
    ln -s /ORCL/u04/app/oracle/redo /u04/app/oracle/redo

    if [[ $EXISTING_DB = false ]];
    then
      cd /u01/app/oracle/product/12.2.0/dbhome_1/dbs/
      # set domain
      echo "*.db_domain='$DB_DOMAIN'" >> initORCLCDB.ora
      # set sga & pga
      MEMORY=${DB_MEMORY//[!0-9]/}
      SGA_MEM=$(($MEMORY * 640))M
      PGA_MEM=$(($MEMORY * 384))M
      echo "*.sga_target=$SGA_MEM" >> initORCLCDB.ora
      echo "*.pga_aggregate_target=$PGA_MEM" >> initORCLCDB.ora

      # create the diag directory to avoid errors with the below mv command
      mkdir -p /u01/app/oracle/diag/rdbms/orclcdb/ORCLCDB

      if [ "$DB_SID" != "ORCLCDB" ]
      then
      # mount db
          sqlplus sys/Oradoc_db1 as sysdba 2>&1 <<EOF
          startup mount pfile=/u01/app/oracle/product/12.2.0/dbhome_1/dbs/initORCLCDB.ora;
          exit;
    EOF

      # nid change name
          echo "NID change db name"
          echo "Y" | nid target=/ dbname=$DB_SID

      # update init.ora
          rm -f init$DB_SID.ora
          cp initORCLCDB.ora init$DB_SID.ora

      # change sid
          sed -i -- "s#ORCLCDB#$DB_SID#g" init$DB_SID.ora

      # rename all the dirs/files
          mv /u01/app/oracle/diag/rdbms/orclcdb/ORCLCDB /u01/app/oracle/diag/rdbms/orclcdb/$DB_SID
          mv /u01/app/oracle/diag/rdbms/orclcdb /u01/app/oracle/diag/rdbms/${DB_SID,,}
          mv /u02/app/oracle/audit/ORCLCDB /u02/app/oracle/audit/$DB_SID
          mv /u02/app/oracle/oradata/ORCLCDB /u02/app/oracle/oradata/$DB_SID   # cp -R
          mv /u03/app/oracle/fast_recovery_area/ORCLCDB /u03/app/oracle/fast_recovery_area/$DB_SID
          mv /u02/app/oracle/oradata/$DB_SID/cntrlORCLCDB.dbf /u02/app/oracle/oradata/$DB_SID/cntrl${DB_SID}.dbf
          mv /u03/app/oracle/fast_recovery_area/$DB_SID/cntrlORCLCDB2.dbf /u03/app/oracle/fast_recovery_area/$DB_SID/cntrl${DB_SID}2.dbf

      # make links
          cd /u02/app/oracle/oradata/
          ln -s $DB_SID ORCLCDB

      # change SID
          export ORACLE_SID=$DB_SID

      # db setup
      # enable archivelog + change global name + create spfile
          NEW_ORA=/u01/app/oracle/product/12.2.0/dbhome_1/dbs/init$DB_SID.ora
          sqlplus sys/Oradoc_db1 as sysdba 2>&1 <<EOF
          create spfile from pfile='$NEW_ORA';
          startup mount;
          alter database open resetlogs;
          alter database rename global_name to $DB_SID.$DB_DOMAIN;
          show parameter spfile;
          show parameter encrypt_new_tablespaces;
          alter user sys identified by "$DB_PASSWD";
          alter user system identified by "$DB_PASSWD";
          exit;
    EOF

      else
      # db setup
      # enable archivelog + change global name + create spfile
          NEW_ORA=/u01/app/oracle/product/12.2.0/dbhome_1/dbs/init$DB_SID.ora
          sqlplus sys/Oradoc_db1 as sysdba 2>&1 <<EOF
          create spfile from pfile='$NEW_ORA';
          startup;
          alter database rename global_name to $DB_SID.$DB_DOMAIN;
          show parameter spfile;
          show parameter encrypt_new_tablespaces;
          alter user sys identified by "$DB_PASSWD";
          alter user system identified by "$DB_PASSWD";
          exit;
    EOF
      fi

      # create orapw
      echo "update password"
      echo "$DB_PASSWD" | orapwd file=/u01/app/oracle/product/12.2.0/dbhome_1/dbs/orapw$DB_SID

      # create pdb
      echo "create pdb : $DB_PDB"
      sqlplus sys/Oradoc_db1 as sysdba 2>&1 <<EOF
        create pluggable database $DB_PDB ADMIN USER sys1 identified by "$DB_PASSWD"
        default tablespace users
          datafile '/u02/app/oracle/oradata/ORCLCDB/orclpdb1/users01.dbf'
          size 10M reuse autoextend on maxsize unlimited
          file_name_convert=('/u02/app/oracle/oradata/ORCL/pdbseed','/u02/app/oracle/oradata/ORCLCDB/orclpdb1');
        alter pluggable database $DB_PDB open;
        alter pluggable database all save state;
        exit;
    EOF

      if [[ ${dbrelarr[0]} == 12 && ${dbrelarr[1]} > 1 ]] || [[ ${dbrelarr[0]} > 12 ]];
      then
        echo "Reset Database parameters"
        sqlplus sys/Oradoc_db1 as sysdba 2>&1 <<EOF
          alter system set encrypt_new_tablespaces=ddl scope=both;
          exit;
    EOF
      fi
    else
      echo "startup database instance"
      sqlplus sys/Oradoc_db1 as sysdba 2>&1 <<EOF
        startup;
        exit;
    EOF
    fi

    ## db network set
    # sqlnet.ora
    SQLNET_ORA=$TNS_ADMIN/sqlnet.ora
    echo "NAME.DIRECTORY_PATH= {TNSNAMES, EZCONNECT, HOSTNAME}" >> $SQLNET_ORA
    echo "SQLNET.EXPIRE_TIME = 10" >> $SQLNET_ORA
    echo "SSL_VERSION = 1.0" >> $SQLNET_ORA
    # listener.ora
    LSNR_ORA=$TNS_ADMIN/listener.ora
    echo "LISTENER = \
      (DESCRIPTION_LIST = \
        (DESCRIPTION = \
          (ADDRESS = (PROTOCOL = TCP)(HOST = 0.0.0.0)(PORT = 1521)) \
          (ADDRESS = (PROTOCOL = IPC)(KEY = EXTPROC1521)) \
        ) \
      ) \
    \
    " >> $LSNR_ORA
    echo "DIAG_ADR_ENABLED = off"  >> $LSNR_ORA
    echo "SSL_VERSION = 1.0"  >> $LSNR_ORA
    # tnsnames.ora
    TNS_ORA=$TNS_ADMIN/tnsnames.ora
    echo "$DB_SID = \
      (DESCRIPTION = \
        (ADDRESS = (PROTOCOL = TCP)(HOST = 0.0.0.0)(PORT = 1521)) \
        (CONNECT_DATA = \
          (SERVER = DEDICATED) \
          (SERVICE_NAME = $DB_SID.$DB_DOMAIN) \
        ) \
      ) \
    " >> $TNS_ORA
    echo "$DB_PDB = \
      (DESCRIPTION = \
        (ADDRESS = (PROTOCOL = TCP)(HOST = 0.0.0.0)(PORT = 1521)) \
        (CONNECT_DATA = \
          (SERVER = DEDICATED) \
          (SERVICE_NAME = $DB_PDB.$DB_DOMAIN) \
        ) \
      ) \
    " >> $TNS_ORA

    # start listener
    lsnrctl start

    # clean
    unset DB_PASSWD
    history -w
    history -c

    echo ""
    echo "DONE!"

    DB_SID=ORCLCDB
    NEW_ORA=/u01/app/oracle/product/12.2.0/dbhome_1/dbs/init$DB_SID.ora  

    sqlplus sys/Oradoc_db1 as sysdba 2>&1 <<EOF
    create spfile from pfile='$NEW_ORA';
    startup mount;
    alter database rename global_name to $DB_SID.$DB_DOMAIN;
    show parameter spfile;
    show parameter encrypt_new_tablespaces;
    ALTER DATABASE OPEN;
    alter session set "_ORACLE_SCRIPT"=true;
    exit;    
    EOF

    # end
---
# Source: ecommerce-oracle/charts/oracle12c/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: oracle12c
  labels:
    
    app.kubernetes.io/name: oracle12c
    app.kubernetes.io/instance: oracle12c
    app.openshift.io/runtime: oracle 
    chart: oracle12c-0.1.0
    release: my-ecommerce-oracle
    heritage: Helm
spec:
  type: ClusterIP
  ports:
  - name: listener
    port: 1521
    protocol: TCP
  - name: xmldb
    port: 5500
    protocol: TCP
  selector:
    app: oracle12c
    deployment: oracle12c
---
# Source: ecommerce-oracle/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-ecommerce-oracle
  labels:
    helm.sh/chart: ecommerce-oracle-0.1.1
    app.kubernetes.io/name: ecommerce-oracle
    app.kubernetes.io/instance: my-ecommerce-oracle
    app.kubernetes.io/version: "0.0.1-SNAPSHOT"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: ecommerce-oracle
    app.kubernetes.io/instance: my-ecommerce-oracle
---
# Source: ecommerce-oracle/charts/oracle12c/templates/deployment.yaml
#
# Copyright (c) 2020, Oracle and/or its affiliates. All rights reserved.
# Licensed under the Universal Permissive License v 1.0 as shown at http://oss.oracle.com/licenses/upl.
#

apiVersion: apps/v1
kind: Deployment
metadata:
  name: oracle12c
  labels:
    
    app.kubernetes.io/name: oracle12c
    app.kubernetes.io/instance: oracle12c
    app.openshift.io/runtime: oracle 
    chart: oracle12c-0.1.0
    release: my-ecommerce-oracle
    heritage: Helm
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 100
      maxUnavailable: 100
    type: RollingUpdate
  selector:
    matchLabels:
      app: oracle12c
      deployment: oracle12c
  template:
    metadata:
      labels:
        app: oracle12c
        deployment: oracle12c
    spec:
      terminationGracePeriodSeconds: 30
      containers:
        - name: oracle12c
          image: quay.io/maximilianopizarro/oracle12c
          imagePullPolicy: "Always"
          ports:
            - containerPort: 1521
            - containerPort: 5500       
          volumeMounts:
            - name: oracle-configuration-volume
              mountPath: /home/oracle/setup/configDBora.sh
              subPath: configDBora.sh       
            - mountPath: /ORCL
              name: orcl
            - mountPath: /u01
              name: u01  
            - mountPath: /u02
              name: u02 
            - mountPath: /u03
              name: u03
            - mountPath: /u04
              name: u04
          resources:
            limits:
              memory: 2Gi
            requests:
              memory: 2Gi          
          env:
            - name: ORACLE_SID
              value: "ORCLCDB"
            - name: PATH
              value: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/u01/app/oracle/product/12.2.0/dbhome_1/bin
            - name: ORACLE_HOME
              value: /u01/app/oracle/product/12.2.0/dbhome_1
      volumes:
        - name: oracle-configuration-volume
          configMap:
            name: oracle-configuration
            defaultMode: 420      
        - name: orcl
          emptyDir: {}
        - name: u01
          emptyDir: {}
        - name: u02
          emptyDir: {}
        - name: u03
          emptyDir: {}
        - name: u04
          emptyDir: {}
---
# Source: ecommerce-oracle/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-ecommerce-oracle
  labels:
    helm.sh/chart: ecommerce-oracle-0.1.1
    app.kubernetes.io/name: ecommerce-oracle
    app.kubernetes.io/instance: my-ecommerce-oracle
    app.kubernetes.io/version: "0.0.1-SNAPSHOT"
    app.kubernetes.io/managed-by: Helm
    app.openshift.io/runtime: java
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: ecommerce-oracle
      app.kubernetes.io/instance: my-ecommerce-oracle
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ecommerce-oracle
        app.kubernetes.io/instance: my-ecommerce-oracle
    spec:
      serviceAccountName: my-ecommerce-oracle
      securityContext:
        {}
      containers:
        - name: ecommerce-oracle
          securityContext:
            {}
          image: "quay.io/maximilianopizarro/ecommerce-oracle:latest"
          imagePullPolicy: IfNotPresent
          env:
            - name: JHIPSTER_SECURITY_AUTHENTICATION_JWT_BASE64_SECRET
              value: "YlhrdGMyVmpjbVYwTFhSdmEyVnVMWFJ2TFdOb1lXNW5aUzFwYmkxd2NtOWtkV04wYVc5dUxXRnVaQzEwYnkxclpXVndMV2x1TFdFdGMyVmpkWEpsTFhCc1lXTmwK"
            - name: SPRING_DATASOURCE_PASSWORD
              value: "Oradoc_db1"
            - name: SPRING_DATASOURCE_URL
              value: "jdbc:oracle:thin:@oracle12c:1521:ORCLCDB"
            - name: SPRING_DATASOURCE_USERNAME
              value: "sys as sysdba"
            - name: SPRING_PROFILES_ACTIVE
              value: "prod,api-docs"          
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          resources:
            {}
---
# Source: ecommerce-oracle/charts/oracle12c/templates/service.yaml
#
# Copyright (c) 2020, Oracle and/or its affiliates. All rights reserved.
# Licensed under the Universal Permissive License v 1.0 as shown at http://oss.oracle.com/licenses/upl.
#
---
# Source: ecommerce-oracle/templates/pipeline.yaml
kind: BuildConfig
apiVersion: build.openshift.io/v1
metadata:
  name: my-ecommerce-oracle
  labels:
    helm.sh/chart: ecommerce-oracle-0.1.1
    app.kubernetes.io/name: ecommerce-oracle
    app.kubernetes.io/instance: my-ecommerce-oracle
    app.kubernetes.io/version: "0.0.1-SNAPSHOT"
    app.kubernetes.io/managed-by: Helm
spec:
  nodeSelector: null
  output:
    to:
      kind: ImageStreamTag
      name: 'my-ecommerce-oracle:latest'
  resources: {}
  successfulBuildsHistoryLimit: 5
  failedBuildsHistoryLimit: 5
  strategy:
    type: Source
    sourceStrategy:
      from:
        kind: DockerImage
        name: >-
          image-registry.openshift-image-registry.svc:5000/openshift/ubi8-openjdk-17:1.12
      incremental: true
  postCommit: {}
  source:
    type: Binary
    binary: {}
  runPolicy: Serial
---
# Source: ecommerce-oracle/templates/pipeline.yaml
kind: ImageStream
apiVersion: image.openshift.io/v1
metadata:
  name: my-ecommerce-oracle
  labels:
    helm.sh/chart: ecommerce-oracle-0.1.1
    app.kubernetes.io/name: ecommerce-oracle
    app.kubernetes.io/instance: my-ecommerce-oracle
    app.kubernetes.io/version: "0.0.1-SNAPSHOT"
    app.kubernetes.io/managed-by: Helm
spec:
  lookupPolicy:
    local: false
---
# Source: ecommerce-oracle/templates/pipeline.yaml
apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: my-ecommerce-oracle
  labels:
    helm.sh/chart: ecommerce-oracle-0.1.1
    app.kubernetes.io/name: ecommerce-oracle
    app.kubernetes.io/instance: my-ecommerce-oracle
    app.kubernetes.io/version: "0.0.1-SNAPSHOT"
    app.kubernetes.io/managed-by: Helm
spec:
  params:
    - default: 'image-registry.openshift-image-registry.svc:5000/maximilianopizarro5-dev/my-ecommerce-oracle'
      name: IMAGE_NAME
      type: string
    - default: /app
      name: PATH_CONTEXT
      type: string
    - default: 'registry.redhat.io/ubi8/openjdk-17@sha256:af305e087061cbaa4107ce0b304a1ef987f6b54bae3f75bfd529cfd084cba9b5'
      name: MAVEN_IMAGE
      type: string
    - default: ecommerce-0.0.1-SNAPSHOT.jar
      name: APP_JAR_VERSION
      type: string
  tasks:
    - name: maven
      params:
        - name: MAVEN_IMAGE
          value: 'registry.redhat.io/ubi8/openjdk-17@sha256:af305e087061cbaa4107ce0b304a1ef987f6b54bae3f75bfd529cfd084cba9b5'
        - name: GOALS
          value:
            - clean
            - verify
            - '-Pprod'
            - '-Dmaven.repo.local=$(workspaces.source.path)/$(params.PATH_CONTEXT)/.m2'
            - '-Dmaven.test.skip=true'
        - name: MAVEN_MIRROR_URL
          value: ''
        - name: SERVER_USER
          value: ''
        - name: SERVER_PASSWORD
          value: ''
        - name: PROXY_USER
          value: ''
        - name: PROXY_PASSWORD
          value: ''
        - name: PROXY_PORT
          value: ''
        - name: PROXY_HOST
          value: ''
        - name: PROXY_NON_PROXY_HOSTS
          value: ''
        - name: PROXY_PROTOCOL
          value: http
        - name: CONTEXT_DIR
          value: $(params.PATH_CONTEXT)
      runAfter:
        - npm
      taskRef:
        kind: ClusterTask
        name: maven
      workspaces:
        - name: source
          workspace: workspace
        - name: maven-settings
          workspace: workspace
    - name: git-clone
      params:
        - name: url
          value: 'https://github.com/maximilianoPizarro/ecommerce-oracle'
        - name: revision
          value: main
        - name: refspec
          value: ''
        - name: submodules
          value: 'true'
        - name: depth
          value: '1'
        - name: sslVerify
          value: 'true'
        - name: crtFileName
          value: ca-bundle.crt
        - name: subdirectory
          value: ''
        - name: sparseCheckoutDirectories
          value: ''
        - name: deleteExisting
          value: 'true'
        - name: httpProxy
          value: ''
        - name: httpsProxy
          value: ''
        - name: noProxy
          value: ''
        - name: verbose
          value: 'true'
        - name: gitInitImage
          value: 'registry.redhat.io/openshift-pipelines/pipelines-git-init-rhel8@sha256:c4b2183f7c7997bd401d86b33eefb637b3ef2fa90618e875106292cd69a15c14'
        - name: userHome
          value: /home/git
      taskRef:
        kind: ClusterTask
        name: git-clone
      workspaces:
        - name: output
          workspace: workspace
    - name: npm
      params:
        - name: PATH_CONTEXT
          value: $(params.PATH_CONTEXT)
        - name: ARGS
          value:
            - install
        - name: IMAGE
          value: 'docker.io/library/node:18.18.2-alpine'
      runAfter:
        - git-clone
      taskRef:
        kind: Task
        name: npm
      workspaces:
        - name: source
          workspace: workspace
    - name: s2i-binary-build
      params:
        - name: SCRIPT
          value: oc start-build my-ecommerce-oracle --from-file=$(workspaces.manifest-dir.path)/$(params.PATH_CONTEXT)/target/$(params.APP_JAR_VERSION)
        - name: VERSION
          value: latest
      runAfter:
        - maven
      taskRef:
        kind: ClusterTask
        name: openshift-client
      workspaces:
        - name: manifest-dir
          workspace: workspace
  workspaces:
    - name: workspace
---
# Source: ecommerce-oracle/templates/route.yaml
kind: Route
apiVersion: route.openshift.io/v1
metadata:
  name: my-ecommerce-oracle
  labels:
    helm.sh/chart: ecommerce-oracle-0.1.1
    app.kubernetes.io/name: ecommerce-oracle
    app.kubernetes.io/instance: my-ecommerce-oracle
    app.kubernetes.io/version: "0.0.1-SNAPSHOT"
    app.kubernetes.io/managed-by: Helm
spec:
  host: ecommerce-oracle-maximilianopizarro5-dev.apps.sandbox-m2.ll9k.p1.openshiftapps.com
  to:
    kind: Service
    name: my-ecommerce-oracle
    weight: 100
  port:
    targetPort: http
  tls:
    termination: edge
    insecureEdgeTerminationPolicy: Redirect
---
# Source: ecommerce-oracle/templates/pipeline.yaml
apiVersion: tekton.dev/v1
kind: Task
metadata:
  name: npm
  labels:
    helm.sh/chart: ecommerce-oracle-0.1.1
    app.kubernetes.io/name: ecommerce-oracle
    app.kubernetes.io/instance: my-ecommerce-oracle
    app.kubernetes.io/version: "0.0.1-SNAPSHOT"
    app.kubernetes.io/managed-by: Helm  
spec:
  description: >-
    This task can be used to run npm goals on a project.

    This task can be used to run npm goals on a project where package.json is
    present and has some pre-defined npm scripts.
  params:
    - default: .
      description: The path where package.json of the project is defined.
      name: PATH_CONTEXT
      type: string
    - default:
        - version
      description: The npm goals you want to run.
      name: ARGS
      type: array
    - default: 'docker.io/library/node:18.18.2-alpine'
      description: The node image you want to use.
      name: IMAGE
      type: string
  steps:
    - args:
        - $(params.ARGS)
      command:
        - npm
      computeResources: {}
      env:
        - name: CI
          value: 'true'
      image: $(params.IMAGE)
      name: npm-run
      workingDir: $(workspaces.source.path)/$(params.PATH_CONTEXT)
  workspaces:
    - name: source
---
# Source: ecommerce-oracle/charts/oracle12c/templates/tests/test-connection.yaml
#
# Copyright (c) 2020, Oracle and/or its affiliates. All rights reserved.
# Licensed under the Universal Permissive License v 1.0 as shown at http://oss.oracle.com/licenses/upl.
#

apiVersion: v1
kind: Pod
metadata:
  name: my-ecommerce-oracle-connection-test
  annotations:
    "helm.sh/hook": test-success  
  app.kubernetes.io/name: oracle12c
  app.kubernetes.io/instance: oracle12c
  app.openshift.io/runtime: oracle 
  chart: oracle12c-0.1.0
  release: my-ecommerce-oracle
  heritage: Helm
spec:
  containers:
  - name: my-ecommerce-oracle-connection-test
    image: quay.io/maximilianopizarro/oracle12c    
    env:
      - name: ORACLE_SID
        value: "ORCLCDB"
      - name: PATH
        value: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/u01/app/oracle/product/12.2.0/dbhome_1/bin
      - name: ORACLE_HOME
        value: /u01/app/oracle/product/12.2.0/dbhome_1
    command: ["sh"]
    args: [ "-c", "status=`/bin/echo -en 'set heading off\nset pagesize 0\nselect status from v\\$instance;\nexit\n' | sqlplus -S sys/$ORACLE_PWD@//$SVC_HOST:$SVC_PORT/$ORACLE_SID as sysdba`;cmdret=$?;/bin/echo \"cmdret=$cmdret, status=$status\";if [[ $status == \"OPEN\" ]]; then exit 0; else exit 1;fi " ]
  restartPolicy: Never
---
# Source: ecommerce-oracle/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "my-ecommerce-oracle-test-connection"
  labels:
    helm.sh/chart: ecommerce-oracle-0.1.1
    app.kubernetes.io/name: ecommerce-oracle
    app.kubernetes.io/instance: my-ecommerce-oracle
    app.kubernetes.io/version: "0.0.1-SNAPSHOT"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['my-ecommerce-oracle:8080']
  restartPolicy: Never
