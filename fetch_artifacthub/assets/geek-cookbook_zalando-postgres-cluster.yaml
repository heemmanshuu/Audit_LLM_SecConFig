---
# Source: zalando-postgres-cluster/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  labels:
    helm.sh/chart: zalando-postgres-cluster-3.4.2
    app.kubernetes.io/name: zalando-postgres-cluster
    app.kubernetes.io/instance: my-zalando-postgres-cluster
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
    application: spilo
    team: my-zalando-postgres-cluster
    # xref: https://github.com/helm/helm/issues/3053
    # xref: https://github.com/helm/helm/pull/5290
    "helm.sh/hook": "pre-install"
    "helm.sh/hook-delete-policy": "before-hook-creation"
  name: postgres.my-zalando-postgres-cluster-postgres.credentials.postgresql.acid.zalan.do
stringData:
  username: postgres
  password: 4pAKutnl4xKlrcVC2HC37OweztbfsPUDlYIQoZMjYFk8wDlHD5
type: Opaque
---
# Source: zalando-postgres-cluster/templates/storageClass.yaml
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: my-zalando-postgres-cluster
  labels:
    helm.sh/chart: zalando-postgres-cluster-3.4.2
    app.kubernetes.io/name: zalando-postgres-cluster
    app.kubernetes.io/instance: my-zalando-postgres-cluster
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
provisioner: kubernetes.io/no-provisioner
reclaimPolicy: Delete
volumeBindingMode: WaitForFirstConsumer
---
# Source: zalando-postgres-cluster/templates/persistentVolumes.yaml
apiVersion: v1
kind: PersistentVolume
metadata:
  name: my-zalando-postgres-cluster-0
  labels:
    helm.sh/chart: zalando-postgres-cluster-3.4.2
    app.kubernetes.io/name: zalando-postgres-cluster
    app.kubernetes.io/instance: my-zalando-postgres-cluster
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
  finalizers:
    - kubernetes.io/pv-protection
spec:
  storageClassName: my-zalando-postgres-cluster
  volumeMode: Filesystem
  capacity:
    storage: "1Gi"
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: /run/db/my-zalando-postgres-cluster
  #Since it is created directly this does not delete it from cluster
  persistentVolumeReclaimPolicy: "Retain"
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - node1.example.com
---
# Source: zalando-postgres-cluster/templates/persistentVolumes.yaml
apiVersion: v1
kind: PersistentVolume
metadata:
  name: my-zalando-postgres-cluster-1
  labels:
    helm.sh/chart: zalando-postgres-cluster-3.4.2
    app.kubernetes.io/name: zalando-postgres-cluster
    app.kubernetes.io/instance: my-zalando-postgres-cluster
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
  finalizers:
    - kubernetes.io/pv-protection
spec:
  storageClassName: my-zalando-postgres-cluster
  volumeMode: Filesystem
  capacity:
    storage: "1Gi"
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: /run/db/my-zalando-postgres-cluster
  #Since it is created directly this does not delete it from cluster
  persistentVolumeReclaimPolicy: "Retain"
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - node2.example.com
---
# Source: zalando-postgres-cluster/templates/db.yaml
apiVersion: "acid.zalan.do/v1"
kind: postgresql
metadata:
  name: my-zalando-postgres-cluster-postgres
  labels:
    helm.sh/chart: zalando-postgres-cluster-3.4.2
    app.kubernetes.io/name: zalando-postgres-cluster
    app.kubernetes.io/instance: my-zalando-postgres-cluster
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  databases:
    postgres: postgres
  numberOfInstances: 2
  postgresql:
    version: "13"
  teamId: my-zalando-postgres-cluster
  users:
    postgres:
    - superuser
    - createdb
  volume:
    size: 1Gi
    storageClass: my-zalando-postgres-cluster
---
# Source: zalando-postgres-cluster/templates/tests/test-db.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: "my-zalando-postgres-cluster-test-db"
  labels:

    helm.sh/chart: zalando-postgres-cluster-3.4.2
    app.kubernetes.io/name: zalando-postgres-cluster
    app.kubernetes.io/instance: my-zalando-postgres-cluster
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test-success
spec:
  template:
    metadata:
      name: "my-zalando-postgres-cluster-test-db"
      labels:
        
        helm.sh/chart: zalando-postgres-cluster-3.4.2
        app.kubernetes.io/name: zalando-postgres-cluster
        app.kubernetes.io/instance: my-zalando-postgres-cluster
        app.kubernetes.io/version: "1.0.0"
        app.kubernetes.io/managed-by: Helm
    spec:
      containers:
      - name: psql
        image: "postgres:latest"
        imagePullPolicy: 
        command: ['sh']
        args:
        - "-ecx"
        - |
          echo ";"|psql

        env:
        - name: PGHOST
          value: "my-zalando-postgres-cluster-postgres"
        - name: PGSSLMODE
          value: require
        - name: PGUSER
          valueFrom:
            secretKeyRef:
              name: postgres.my-zalando-postgres-cluster-postgres.credentials.postgresql.acid.zalan.do
              key: username
        - name: PGPASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres.my-zalando-postgres-cluster-postgres.credentials.postgresql.acid.zalan.do
              key: password
      restartPolicy: Never
