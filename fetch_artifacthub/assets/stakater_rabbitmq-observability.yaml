---
# Source: rabbitmq-observability/templates/prometheus/alertmanager/slack.yml
apiVersion: v1
kind: Secret
metadata:
  # The name must follow the following format where ((ALERTMANAGER_NAME)) is the name of the Alertmanager CRD object:
  # (see https://github.com/prometheus-operator/prometheus-operator/blob/master/Documentation/user-guides/alerting.md#manually-managed-secret)
  name: alertmanager-slack-config
  namespace: default
  labels:
    alert_manager: "true"
type: Opaque
stringData:
  alertmanager.yaml: |-
    route:
      # This config notifies only on RabbitMQ alerts.
      receiver: 'null'
      routes:
      - match_re:
          rulesgroup: '^rabbitmq$|^rabbitmq-operator$'
        receiver: slack
        group_by:
        - namespace
        - rabbitmq_cluster
    receivers:
    - name: 'null'
    - name: slack
      slack_configs:
      - channel: 'rabbitmq'
        api_url:
          key: api_url
          name: rabbitmq-slack-webhook
        send_resolved: true
        title: '{{ .Status | toUpper }}{{ if eq .Status "firing" }}:{{ .Alerts.Firing | len }}{{ end }}'
        text: |-
          *Namespace:* `{{ (index .Alerts 0).Labels.namespace }}`
          {{- if (index .Alerts 0).Labels.rabbitmq_cluster }}
          *RabbitMQ Cluster:* `{{ (index .Alerts 0).Labels.rabbitmq_cluster }}`
          {{- end }}
          {{ range .Alerts }}

           ----------------------------------------------
           *Alert Name:* `{{ .Labels.alertname }}`
           *Description:* {{ .Annotations.description }}
           *Summary:* {{ .Annotations.summary }}
           *Labels*:
           {{ range .Labels.SortedPairs }}â€¢ {{ .Name }}: `{{ .Value }}`
           {{ end }}
          {{ end }}
---
# Source: rabbitmq-observability/templates/grafana/dashboards/erlang-distribution.yaml
apiVersion: integreatly.org/v1alpha1
kind: GrafanaDashboard
metadata:
  name: erlang-distribution-dashboard
  namespace: default
  labels:
    grafana_dashboard: "true"
spec:
  # https://grafana.com/grafana/dashboards/11352
  json: |-
    {
      "__requires": [
        {
          "type": "grafana",
          "id": "grafana",
          "name": "Grafana",
          "version": "7.0.0"
        },
        {
          "type": "datasource",
          "id": "prometheus",
          "name": "prometheus",
          "version": "2.0.0"
        },
        {
          "type": "panel",
          "id": "graph",
          "name": "Graph",
          "version": ""
        },
        {
          "type": "panel",
          "id": "singlestat",
          "name": "Singlestat",
          "version": ""
        },
        {
          "type": "panel",
          "id": "heatmap",
          "name": "Heatmap",
          "version": ""
        },
        {
          "type": "panel",
          "id": "flant-statusmap-panel",
          "name": "Statusmap",
          "version": "0.3.4"
        }
      ],
      "annotations": {
        "list": [
          {
            "$$hashKey": "object:13",
            "builtIn": 1,
            "datasource": "-- Grafana --",
            "enable": true,
            "hide": true,
            "iconColor": "rgba(0, 211, 255, 1)",
            "name": "Annotations & Alerts",
            "type": "dashboard"
          }
        ]
      },
      "description": "Erlang Distribution links, inet socket, port driver, dist process + tls_connection & tls_sender",
      "editable": true,
      "gnetId": 11352,
      "graphTooltip": 1,
      "id": null,
      "iteration": 1587996382757,
      "links": [],
      "panels": [
        {
          "cacheTimeout": null,
          "colorBackground": true,
          "colorValue": false,
          "colors": [
            "#C4162A",
            "#1F60C4",
            "#37872D"
          ],
          "datasource": "${DS_PROMETHEUS}",
          "format": "none",
          "gauge": {
            "maxValue": 100,
            "minValue": 0,
            "show": false,
            "thresholdLabels": false,
            "thresholdMarkers": true
          },
          "id": 25,
          "interval": "",
          "links": [],
          "mappingType": 1,
          "mappingTypes": [
            {
              "name": "value to text",
              "value": 1
            },
            {
              "name": "range to text",
              "value": 2
            }
          ],
          "maxDataPoints": 100,
          "nullPointMode": "connected",
          "nullText": null,
          "postfix": "",
          "postfixFontSize": "50%",
          "prefix": "",
          "prefixFontSize": "50%",
          "rangeMaps": [
            {
              "from": "null",
              "text": "N/A",
              "to": "null"
            }
          ],
          "sparkline": {
            "fillColor": "rgba(255, 255, 255, 0)",
            "full": false,
            "lineColor": "rgb(255, 255, 255)",
            "show": true
          },
          "tableColumn": "",
          "targets": [
            {
              "expr": "count(erlang_vm_dist_node_state * on(instance) group_left(rabbitmq_cluster) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) OR vector(0)",
              "format": "time_series",
              "interval": "",
              "intervalFactor": 1,
              "refId": "A"
            }
          ],
          "thresholds": "2,6",
          "timeFrom": null,
          "timeShift": null,
          "title": "All distribution links",
          "type": "singlestat",
          "valueFontSize": "80%",
          "valueMaps": [
            {
              "op": "=",
              "text": "N/A",
              "value": "null"
            }
          ],
          "valueName": "current"
        },
        {
          "cacheTimeout": null,
          "colorBackground": true,
          "colorValue": false,
          "colors": [
            "#C4162A",
            "#1F60C4",
            "#37872D"
          ],
          "datasource": "${DS_PROMETHEUS}",
          "description": "When a connection between a node and peer is established, the distribution link is considered to be `up`",
          "format": "none",
          "gauge": {
            "maxValue": 100,
            "minValue": 0,
            "show": false,
            "thresholdLabels": false,
            "thresholdMarkers": true
          },
          "gridPos": {
            "h": 3,
            "w": 6,
            "x": 6,
            "y": 0
          },
          "id": 27,
          "interval": "",
          "links": [],
          "mappingType": 1,
          "mappingTypes": [
            {
              "name": "value to text",
              "value": 1
            },
            {
              "name": "range to text",
              "value": 2
            }
          ],
          "maxDataPoints": 100,
          "nullPointMode": "connected",
          "nullText": null,
          "postfix": "",
          "postfixFontSize": "50%",
          "prefix": "",
          "prefixFontSize": "50%",
          "rangeMaps": [
            {
              "from": "null",
              "text": "N/A",
              "to": "null"
            }
          ],
          "sparkline": {
            "fillColor": "rgba(255, 255, 255, 0)",
            "full": false,
            "lineColor": "rgb(255, 255, 255)",
            "show": true
          },
          "tableColumn": "",
          "targets": [
            {
              "expr": "count(erlang_vm_dist_node_state * on(instance) group_left(rabbitmq_cluster) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"} == 3) OR vector(0)",
              "format": "time_series",
              "interval": "",
              "intervalFactor": 1,
              "refId": "A"
            }
          ],
          "thresholds": "2,6",
          "timeFrom": null,
          "timeShift": null,
          "title": "Established distribution links",
          "type": "singlestat",
          "valueFontSize": "80%",
          "valueMaps": [
            {
              "op": "=",
              "text": "N/A",
              "value": "null"
            }
          ],
          "valueName": "current"
        },
        {
          "cacheTimeout": null,
          "colorBackground": true,
          "colorValue": false,
          "colors": [
            "#37872D",
            "#1F60C4",
            "#C4162A"
          ],
          "datasource": "${DS_PROMETHEUS}",
          "description": "When a new connection is exchanging information between the node and the peer the distribution link is considered to be `pending`",
          "format": "none",
          "gauge": {
            "maxValue": 100,
            "minValue": 0,
            "show": false,
            "thresholdLabels": false,
            "thresholdMarkers": true
          },
          "gridPos": {
            "h": 3,
            "w": 6,
            "x": 12,
            "y": 0
          },
          "id": 26,
          "interval": "",
          "links": [],
          "mappingType": 1,
          "mappingTypes": [
            {
              "name": "value to text",
              "value": 1
            },
            {
              "name": "range to text",
              "value": 2
            }
          ],
          "maxDataPoints": 100,
          "nullPointMode": "connected",
          "nullText": null,
          "postfix": "",
          "postfixFontSize": "50%",
          "prefix": "",
          "prefixFontSize": "50%",
          "rangeMaps": [
            {
              "from": "null",
              "text": "N/A",
              "to": "null"
            }
          ],
          "sparkline": {
            "fillColor": "rgba(255, 255, 255, 0)",
            "full": false,
            "lineColor": "rgb(255, 255, 255)",
            "show": true
          },
          "tableColumn": "",
          "targets": [
            {
              "expr": "count(erlang_vm_dist_node_state * on(instance) group_left(rabbitmq_cluster) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"} == 1) OR vector(0)",
              "format": "time_series",
              "interval": "",
              "intervalFactor": 1,
              "refId": "A"
            }
          ],
          "thresholds": "1,6",
          "timeFrom": null,
          "timeShift": null,
          "title": "Connecting distribution links",
          "type": "singlestat",
          "valueFontSize": "80%",
          "valueMaps": [
            {
              "op": "=",
              "text": "N/A",
              "value": "null"
            }
          ],
          "valueName": "current"
        },
        {
          "cacheTimeout": null,
          "colorBackground": true,
          "colorValue": false,
          "colors": [
            "#37872D",
            "#1F60C4",
            "#C4162A"
          ],
          "datasource": "${DS_PROMETHEUS}",
          "description": "When a new connection is established and there is an existing connection between the node and the peer, this connection needs to wait for the initial connection to go down before it can become active. The distribution link is considered `up_pending`",
          "format": "none",
          "gauge": {
            "maxValue": 100,
            "minValue": 0,
            "show": false,
            "thresholdLabels": false,
            "thresholdMarkers": true
          },
          "gridPos": {
            "h": 3,
            "w": 6,
            "x": 18,
            "y": 0
          },
          "id": 28,
          "interval": "",
          "links": [],
          "mappingType": 1,
          "mappingTypes": [
            {
              "name": "value to text",
              "value": 1
            },
            {
              "name": "range to text",
              "value": 2
            }
          ],
          "maxDataPoints": 100,
          "nullPointMode": "connected",
          "nullText": null,
          "postfix": "",
          "postfixFontSize": "50%",
          "prefix": "",
          "prefixFontSize": "50%",
          "rangeMaps": [
            {
              "from": "null",
              "text": "N/A",
              "to": "null"
            }
          ],
          "sparkline": {
            "fillColor": "rgba(255, 255, 255, 0)",
            "full": false,
            "lineColor": "rgb(255, 255, 255)",
            "show": true
          },
          "tableColumn": "",
          "targets": [
            {
              "expr": "count(erlang_vm_dist_node_state * on(instance) group_left(rabbitmq_cluster) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"} == 2) OR vector(0)",
              "format": "time_series",
              "interval": "",
              "intervalFactor": 1,
              "refId": "A"
            }
          ],
          "thresholds": "1,6",
          "timeFrom": null,
          "timeShift": null,
          "title": "Waiting distribution links",
          "type": "singlestat",
          "valueFontSize": "80%",
          "valueMaps": [
            {
              "op": "=",
              "text": "N/A",
              "value": "null"
            }
          ],
          "valueName": "current"
        },
        {
          "collapsed": false,
          "datasource": "${DS_PROMETHEUS}",
          "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 3
          },
          "id": 74,
          "panels": [],
          "title": "distribution links",
          "type": "row"
        },
        {
          "cards": {
            "cardHSpacing": 2,
            "cardMinWidth": 5,
            "cardRound": null,
            "cardVSpacing": 2
          },
          "color": {
            "cardColor": "#b4ff00",
            "colorScale": "sqrt",
            "colorScheme": "interpolateGreens",
            "defaultColor": "#757575",
            "exponent": 0.5,
            "min": null,
            "mode": "discrete",
            "thresholds": [
              {
                "color": "#37872D",
                "tooltip": "established",
                "value": "3"
              },
              {
                "color": "#FA6400",
                "tooltip": "connecting",
                "value": "1"
              },
              {
                "color": "#FADE2A",
                "tooltip": "waiting",
                "value": "2"
              }
            ]
          },
          "data": {
            "decimals": null,
            "unitFormat": "short"
          },
          "datasource": "${DS_PROMETHEUS}",
          "description": "",
          "gridPos": {
            "h": 5,
            "w": 12,
            "x": 0,
            "y": 4
          },
          "highlightCards": true,
          "id": 19,
          "legend": {
            "show": true
          },
          "links": [],
          "nullPointMode": "as empty",
          "targets": [
            {
              "aggregation": "Last",
              "decimals": 2,
              "displayAliasType": "Warning / Critical",
              "displayType": "Regular",
              "displayValueWithAlias": "Never",
              "expr": "erlang_vm_dist_node_state * on(instance) group_left(rabbitmq_node, rabbitmq_cluster) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "{{rabbitmq_node}} -> {{peer}}",
              "refId": "A",
              "units": "none",
              "valueHandler": "Number Threshold"
            }
          ],
          "timeFrom": null,
          "timeShift": null,
          "title": "State of distribution links",
          "tooltip": {
            "show": true
          },
          "type": "flant-statusmap-panel",
          "useMax": true,
          "xAxis": {
            "labelFormat": "%a %m/%d",
            "minBucketWidthToShowWeekends": 4,
            "show": true,
            "showCrosshair": true,
            "showWeekends": true
          },
          "yAxis": {
            "show": true,
            "showCrosshair": false
          },
          "yAxisSort": "metrics"
        },
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "datasource": "${DS_PROMETHEUS}",
          "description": "Data currently buffered in the output queue of the distribution link.\n\nAny values above the 64MB threshold hint to an overloaded distribution. This applies to the default `zdbbl` value in RabbitMQ, which is 128MB.\n\n- [RabbitMQ Runtime Tuning - zdbbl](https://www.rabbitmq.com/runtime.html#distribution-buffer)\n- [erl +zdbbl](http://erlang.org/doc/man/erl.html#+zdbbl)",
          "fill": 0,
          "fillGradient": 0,
          "gridPos": {
            "h": 5,
            "w": 12,
            "x": 12,
            "y": 4
          },
          "hiddenSeries": false,
          "id": 62,
          "legend": {
            "alignAsTable": true,
            "avg": false,
            "current": true,
            "max": true,
            "min": true,
            "show": false,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "options": {
            "dataLinks": []
          },
          "percentage": false,
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [
            {
              "$$hashKey": "object:130",
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?0(\\b|\\.)/",
              "color": "#56A64B"
            },
            {
              "$$hashKey": "object:131",
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?1(\\b|\\.)/",
              "color": "#F2CC0C"
            },
            {
              "$$hashKey": "object:132",
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?2(\\b|\\.)/",
              "color": "#3274D9"
            },
            {
              "$$hashKey": "object:133",
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?3(\\b|\\.)/",
              "color": "#A352CC"
            },
            {
              "$$hashKey": "object:134",
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?4(\\b|\\.)/",
              "color": "#FF780A"
            },
            {
              "$$hashKey": "object:135",
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?5(\\b|\\.)/",
              "color": "#96D98D"
            },
            {
              "$$hashKey": "object:136",
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?6(\\b|\\.)/",
              "color": "#FFEE52"
            },
            {
              "$$hashKey": "object:137",
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?7(\\b|\\.)/",
              "color": "#8AB8FF"
            },
            {
              "$$hashKey": "object:138",
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?8(\\b|\\.)/",
              "color": "#CA95E5"
            },
            {
              "$$hashKey": "object:139",
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?9(\\b|\\.)/",
              "color": "#FFB357"
            }
          ],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "expr": "erlang_vm_dist_node_queue_size_bytes * on(instance) group_left(rabbitmq_node, rabbitmq_cluster) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}",
              "format": "time_series",
              "interval": "",
              "intervalFactor": 1,
              "legendFormat": "{{rabbitmq_node}} -> {{peer}}",
              "refId": "A"
            }
          ],
          "thresholds": [
            {
              "$$hashKey": "object:234",
              "colorMode": "critical",
              "fill": true,
              "line": true,
              "op": "gt",
              "value": 65536000,
              "yaxis": "left"
            }
          ],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Data buffered in the distribution links queue",
          "tooltip": {
            "shared": true,
            "sort": 2,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "$$hashKey": "object:206",
              "decimals": 0,
              "format": "decbytes",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": "0",
              "show": true
            },
            {
              "$$hashKey": "object:207",
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "collapsed": false,
          "datasource": "${DS_PROMETHEUS}",
          "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 9
          },
          "id": 9,
          "panels": [],
          "title": "inet socket",
          "type": "row"
        },
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "datasource": "${DS_PROMETHEUS}",
          "description": "",
          "fill": 0,
          "fillGradient": 0,
          "gridPos": {
            "h": 5,
            "w": 12,
            "x": 0,
            "y": 10
          },
          "hiddenSeries": false,
          "id": 3,
          "legend": {
            "alignAsTable": true,
            "avg": false,
            "current": true,
            "max": true,
            "min": true,
            "show": false,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "options": {
            "dataLinks": []
          },
          "percentage": false,
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?0(\\b|\\.)/",
              "color": "#56A64B"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?1(\\b|\\.)/",
              "color": "#F2CC0C"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?2(\\b|\\.)/",
              "color": "#3274D9"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?3(\\b|\\.)/",
              "color": "#A352CC"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?4(\\b|\\.)/",
              "color": "#FF780A"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?5(\\b|\\.)/",
              "color": "#96D98D"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?6(\\b|\\.)/",
              "color": "#FFEE52"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?7(\\b|\\.)/",
              "color": "#8AB8FF"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?8(\\b|\\.)/",
              "color": "#CA95E5"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?9(\\b|\\.)/",
              "color": "#FFB357"
            }
          ],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "expr": "rate(erlang_vm_dist_send_bytes[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "{{rabbitmq_node}} -> {{peer}}",
              "refId": "A"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Data sent to peer node / s",
          "tooltip": {
            "shared": true,
            "sort": 2,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "decimals": 1,
              "format": "Bps",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": "0",
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "datasource": "${DS_PROMETHEUS}",
          "description": "",
          "fill": 0,
          "fillGradient": 0,
          "gridPos": {
            "h": 5,
            "w": 12,
            "x": 12,
            "y": 10
          },
          "hiddenSeries": false,
          "id": 2,
          "legend": {
            "alignAsTable": true,
            "avg": false,
            "current": true,
            "max": true,
            "min": true,
            "show": false,
            "sort": "max",
            "sortDesc": true,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "options": {
            "dataLinks": []
          },
          "percentage": false,
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [
            {
              "$$hashKey": "object:276",
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?0(\\b|\\.)/",
              "color": "#56A64B"
            },
            {
              "$$hashKey": "object:277",
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?1(\\b|\\.)/",
              "color": "#F2CC0C"
            },
            {
              "$$hashKey": "object:278",
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?2(\\b|\\.)/",
              "color": "#3274D9"
            },
            {
              "$$hashKey": "object:279",
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?3(\\b|\\.)/",
              "color": "#A352CC"
            },
            {
              "$$hashKey": "object:280",
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?4(\\b|\\.)/",
              "color": "#FF780A"
            },
            {
              "$$hashKey": "object:281",
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?5(\\b|\\.)/",
              "color": "#96D98D"
            },
            {
              "$$hashKey": "object:282",
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?6(\\b|\\.)/",
              "color": "#FFEE52"
            },
            {
              "$$hashKey": "object:283",
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?7(\\b|\\.)/",
              "color": "#8AB8FF"
            },
            {
              "$$hashKey": "object:284",
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?8(\\b|\\.)/",
              "color": "#CA95E5"
            },
            {
              "$$hashKey": "object:285",
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?9(\\b|\\.)/",
              "color": "#FFB357"
            }
          ],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "expr": "rate(erlang_vm_dist_recv_bytes[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "{{rabbitmq_node}} <- {{peer}}",
              "refId": "A"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Data received from peer node / s",
          "tooltip": {
            "shared": true,
            "sort": 2,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "$$hashKey": "object:352",
              "decimals": 1,
              "format": "Bps",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": "0",
              "show": true
            },
            {
              "$$hashKey": "object:353",
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "datasource": "${DS_PROMETHEUS}",
          "description": "Number of inet packets sent to the distribution link port.\n\nIf too few messages are sent and data sits in the port driver buffer, increasing the `inet_dist_connect_options` as well as `inet_dist_listen_options` buffer values will result in more stable throughput.",
          "fill": 0,
          "fillGradient": 0,
          "gridPos": {
            "h": 5,
            "w": 12,
            "x": 0,
            "y": 15
          },
          "hiddenSeries": false,
          "id": 4,
          "legend": {
            "alignAsTable": true,
            "avg": false,
            "current": true,
            "max": true,
            "min": true,
            "show": false,
            "sort": "max",
            "sortDesc": true,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "options": {
            "dataLinks": []
          },
          "percentage": false,
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?0(\\b|\\.)/",
              "color": "#56A64B"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?1(\\b|\\.)/",
              "color": "#F2CC0C"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?2(\\b|\\.)/",
              "color": "#3274D9"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?3(\\b|\\.)/",
              "color": "#A352CC"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?4(\\b|\\.)/",
              "color": "#FF780A"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?5(\\b|\\.)/",
              "color": "#96D98D"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?6(\\b|\\.)/",
              "color": "#FFEE52"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?7(\\b|\\.)/",
              "color": "#8AB8FF"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?8(\\b|\\.)/",
              "color": "#CA95E5"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?9(\\b|\\.)/",
              "color": "#FFB357"
            }
          ],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "expr": "rate(erlang_vm_dist_send_cnt[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "{{rabbitmq_node}} -> {{peer}}",
              "refId": "A"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Distribution messages sent to peer node / s",
          "tooltip": {
            "shared": true,
            "sort": 2,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "decimals": 0,
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": "0",
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "datasource": "${DS_PROMETHEUS}",
          "description": "Number of inet packets received from the distribution link port.\n\nIf too many messages are received, increasing the `inet_dist_connect_options` as well as `inet_dist_listen_options` buffer values will result in more stable throughput.",
          "fill": 0,
          "fillGradient": 0,
          "gridPos": {
            "h": 5,
            "w": 12,
            "x": 12,
            "y": 15
          },
          "hiddenSeries": false,
          "id": 5,
          "legend": {
            "alignAsTable": true,
            "avg": false,
            "current": true,
            "max": true,
            "min": true,
            "show": false,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "options": {
            "dataLinks": []
          },
          "percentage": false,
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?0(\\b|\\.)/",
              "color": "#56A64B"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?1(\\b|\\.)/",
              "color": "#F2CC0C"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?2(\\b|\\.)/",
              "color": "#3274D9"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?3(\\b|\\.)/",
              "color": "#A352CC"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?4(\\b|\\.)/",
              "color": "#FF780A"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?5(\\b|\\.)/",
              "color": "#96D98D"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?6(\\b|\\.)/",
              "color": "#FFEE52"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?7(\\b|\\.)/",
              "color": "#8AB8FF"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?8(\\b|\\.)/",
              "color": "#CA95E5"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?9(\\b|\\.)/",
              "color": "#FFB357"
            }
          ],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "expr": "rate(erlang_vm_dist_recv_cnt[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "{{rabbitmq_node}} <- {{peer}}",
              "refId": "A"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Distribution messages received from peer node / s",
          "tooltip": {
            "shared": true,
            "sort": 2,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "decimals": 0,
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": "0",
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "datasource": "${DS_PROMETHEUS}",
          "description": "Corresponds to the average size of the argument passed to `gen_tcp:send/2` or equivalent.\n\nTypically corresponds to TCP window size.\n\nIf TLS is used for inter-node communication, the `inet` packet size will be varied so that the system as a whole is both secure and performant.\n\n`inet` packets larger than the TCP window will be split into TCP packets by the system kernel.\n\n`inet` packets smaller than the TCP window _may_ be joined into TCP packets by the system kernel.\n\n* [`inet` packet](http://erlang.org/doc/man/inet.html#packet)",
          "fill": 0,
          "fillGradient": 0,
          "gridPos": {
            "h": 5,
            "w": 12,
            "x": 0,
            "y": 20
          },
          "hiddenSeries": false,
          "id": 39,
          "legend": {
            "alignAsTable": true,
            "avg": false,
            "current": true,
            "max": true,
            "min": true,
            "show": false,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "options": {
            "dataLinks": []
          },
          "percentage": false,
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?0(\\b|\\.)/",
              "color": "#56A64B"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?1(\\b|\\.)/",
              "color": "#F2CC0C"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?2(\\b|\\.)/",
              "color": "#3274D9"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?3(\\b|\\.)/",
              "color": "#A352CC"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?4(\\b|\\.)/",
              "color": "#FF780A"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?5(\\b|\\.)/",
              "color": "#96D98D"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?6(\\b|\\.)/",
              "color": "#FFEE52"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?7(\\b|\\.)/",
              "color": "#8AB8FF"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?8(\\b|\\.)/",
              "color": "#CA95E5"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?9(\\b|\\.)/",
              "color": "#FFB357"
            }
          ],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "expr": "(rate(erlang_vm_dist_send_bytes[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) / \n(rate(erlang_vm_dist_send_cnt[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"})",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "{{rabbitmq_node}} -> {{peer}}",
              "refId": "A"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Average inet packet size sent to peer node",
          "tooltip": {
            "shared": true,
            "sort": 2,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "decimals": 0,
              "format": "decbytes",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": "0",
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "datasource": "${DS_PROMETHEUS}",
          "description": "Corresponds to the average size of the argument received from `gen_tcp:recv/2` or equivalent.\n\nTypically corresponds to TCP window size.\n\nIf TLS is used for inter-node communication, the `inet` packet size will be varied so that the system as a whole is both secure and performant.\n\n* [`inet` packet](http://erlang.org/doc/man/inet.html#packet)",
          "fill": 0,
          "fillGradient": 0,
          "gridPos": {
            "h": 5,
            "w": 12,
            "x": 12,
            "y": 20
          },
          "hiddenSeries": false,
          "id": 50,
          "legend": {
            "alignAsTable": true,
            "avg": false,
            "current": true,
            "max": true,
            "min": true,
            "show": false,
            "sort": "max",
            "sortDesc": true,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "options": {
            "dataLinks": []
          },
          "percentage": false,
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?0(\\b|\\.)/",
              "color": "#56A64B"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?1(\\b|\\.)/",
              "color": "#F2CC0C"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?2(\\b|\\.)/",
              "color": "#3274D9"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?3(\\b|\\.)/",
              "color": "#A352CC"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?4(\\b|\\.)/",
              "color": "#FF780A"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?5(\\b|\\.)/",
              "color": "#96D98D"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?6(\\b|\\.)/",
              "color": "#FFEE52"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?7(\\b|\\.)/",
              "color": "#8AB8FF"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?8(\\b|\\.)/",
              "color": "#CA95E5"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?9(\\b|\\.)/",
              "color": "#FFB357"
            }
          ],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "expr": "(rate(erlang_vm_dist_recv_bytes[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) / \n(rate(erlang_vm_dist_recv_cnt[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"})",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "{{rabbitmq_node}} <- {{peer}}",
              "refId": "A"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Average inet packet size received from peer node",
          "tooltip": {
            "shared": true,
            "sort": 2,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "decimals": 0,
              "format": "Bps",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": "0",
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "collapsed": false,
          "datasource": "${DS_PROMETHEUS}",
          "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 25
          },
          "id": 11,
          "panels": [],
          "title": "port driver",
          "type": "row"
        },
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "datasource": "${DS_PROMETHEUS}",
          "description": "The total number of bytes allocated for this port by the runtime system. The port itself can have allocated memory that is not included.",
          "fill": 0,
          "fillGradient": 0,
          "gridPos": {
            "h": 5,
            "w": 12,
            "x": 0,
            "y": 26
          },
          "hiddenSeries": false,
          "id": 12,
          "legend": {
            "alignAsTable": true,
            "avg": false,
            "current": true,
            "max": true,
            "min": true,
            "show": false,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "options": {
            "dataLinks": []
          },
          "percentage": false,
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?0(\\b|\\.)/",
              "color": "#56A64B"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?1(\\b|\\.)/",
              "color": "#F2CC0C"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?2(\\b|\\.)/",
              "color": "#3274D9"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?3(\\b|\\.)/",
              "color": "#A352CC"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?4(\\b|\\.)/",
              "color": "#FF780A"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?5(\\b|\\.)/",
              "color": "#96D98D"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?6(\\b|\\.)/",
              "color": "#FFEE52"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?7(\\b|\\.)/",
              "color": "#8AB8FF"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?8(\\b|\\.)/",
              "color": "#CA95E5"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?9(\\b|\\.)/",
              "color": "#FFB357"
            }
          ],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "expr": "erlang_vm_dist_port_memory_bytes * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "{{rabbitmq_node}} -> {{peer}}",
              "refId": "A"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Memory used by the port driver",
          "tooltip": {
            "shared": true,
            "sort": 2,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "decimals": 0,
              "format": "decbytes",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": "0",
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "datasource": "${DS_PROMETHEUS}",
          "description": "The total number of bytes queued by the port using the ERTS driver queue implementation\n\nAny values above a few KBs hint to an overloaded distribution",
          "fill": 1,
          "fillGradient": 0,
          "gridPos": {
            "h": 5,
            "w": 12,
            "x": 12,
            "y": 26
          },
          "hiddenSeries": false,
          "id": 7,
          "legend": {
            "alignAsTable": true,
            "avg": false,
            "current": true,
            "max": true,
            "min": true,
            "show": false,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "options": {
            "dataLinks": []
          },
          "percentage": false,
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [
            {
              "alias": "/rabbit/",
              "color": "#C4162A"
            }
          ],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "expr": "erlang_vm_dist_port_queue_size_bytes * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "{{rabbitmq_node}} -> {{peer}}",
              "refId": "A"
            }
          ],
          "thresholds": [
            {
              "colorMode": "critical",
              "fill": true,
              "line": true,
              "op": "gt",
              "value": 0,
              "yaxis": "left"
            }
          ],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Data in the port driver buffer",
          "tooltip": {
            "shared": true,
            "sort": 2,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "decimals": 0,
              "format": "decbytes",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": "0",
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "collapsed": false,
          "datasource": "${DS_PROMETHEUS}",
          "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 31
          },
          "id": 14,
          "panels": [],
          "repeat": "erlang_vm_dist_proc_type",
          "title": "$erlang_vm_dist_proc_type process",
          "type": "row"
        },
        {
          "cacheTimeout": null,
          "cards": {
            "cardHSpacing": 2,
            "cardMinWidth": 5,
            "cardRound": null,
            "cardVSpacing": 2
          },
          "color": {
            "cardColor": "#b4ff00",
            "colorScale": "sqrt",
            "colorScheme": "interpolateGnYlRd",
            "defaultColor": "#757575",
            "exponent": 0.5,
            "mode": "discrete",
            "thresholds": [
              {
                "color": "#37872D",
                "tooltip": "waiting",
                "value": "6"
              },
              {
                "color": "#96D98D",
                "tooltip": "running",
                "value": "5"
              },
              {
                "color": "#1F60C4",
                "tooltip": "garbage_collecting",
                "value": "4"
              },
              {
                "color": "#FADE2A",
                "tooltip": "runnable",
                "value": "3"
              },
              {
                "color": "#FA6400",
                "tooltip": "suspended",
                "value": "2"
              },
              {
                "color": "#C4162A",
                "tooltip": "exiting",
                "value": "1"
              }
            ]
          },
          "data": {
            "decimals": null,
            "unitFormat": "short"
          },
          "datasource": "${DS_PROMETHEUS}",
          "description": "",
          "gridPos": {
            "h": 5,
            "w": 12,
            "x": 0,
            "y": 32
          },
          "highlightCards": true,
          "id": 18,
          "legend": {
            "show": true
          },
          "links": [],
          "nullPointMode": "as empty",
          "targets": [
            {
              "aggregation": "Last",
              "decimals": 2,
              "displayAliasType": "Warning / Critical",
              "displayType": "Regular",
              "displayValueWithAlias": "Never",
              "expr": "erlang_vm_dist_proc_status{type=\"$erlang_vm_dist_proc_type\"} * on(instance) group_left(rabbitmq_node, rabbitmq_cluster) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"} ",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "{{rabbitmq_node}} -> {{peer}}",
              "refId": "A",
              "units": "none",
              "valueHandler": "Number Threshold"
            }
          ],
          "timeFrom": null,
          "timeShift": null,
          "title": "Process state",
          "tooltip": {
            "show": true
          },
          "type": "flant-statusmap-panel",
          "useMax": true,
          "xAxis": {
            "labelFormat": "%a %m/%d",
            "minBucketWidthToShowWeekends": 4,
            "show": true,
            "showCrosshair": true,
            "showWeekends": true
          },
          "yAxis": {
            "show": true,
            "showCrosshair": false
          },
          "yAxisSort": "metrics"
        },
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "datasource": "${DS_PROMETHEUS}",
          "description": "The number of messages currently in the message queue of the process\n\nAny values above 0 hint to an overloaded distribution",
          "fill": 0,
          "fillGradient": 0,
          "gridPos": {
            "h": 5,
            "w": 12,
            "x": 12,
            "y": 32
          },
          "hiddenSeries": false,
          "id": 16,
          "legend": {
            "alignAsTable": true,
            "avg": false,
            "current": true,
            "max": true,
            "min": true,
            "show": false,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "options": {
            "dataLinks": []
          },
          "percentage": false,
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [
            {
              "alias": "/rabbit/",
              "color": "#C4162A"
            }
          ],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "expr": "erlang_vm_dist_proc_message_queue_len{type=\"$erlang_vm_dist_proc_type\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "{{rabbitmq_node}} -> {{peer}}",
              "refId": "A"
            }
          ],
          "thresholds": [
            {
              "colorMode": "critical",
              "fill": true,
              "line": true,
              "op": "gt",
              "value": 0,
              "yaxis": "left"
            }
          ],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Messages in the process queue",
          "tooltip": {
            "shared": true,
            "sort": 2,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "decimals": 0,
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": "0",
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "datasource": "${DS_PROMETHEUS}",
          "description": "The size in bytes of process memory. This includes call stack, heap, and internal structures.",
          "fill": 0,
          "fillGradient": 0,
          "gridPos": {
            "h": 5,
            "w": 12,
            "x": 0,
            "y": 37
          },
          "hiddenSeries": false,
          "id": 15,
          "legend": {
            "alignAsTable": true,
            "avg": false,
            "current": true,
            "max": true,
            "min": true,
            "show": false,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "options": {
            "dataLinks": []
          },
          "percentage": false,
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?0(\\b|\\.)/",
              "color": "#56A64B"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?1(\\b|\\.)/",
              "color": "#F2CC0C"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?2(\\b|\\.)/",
              "color": "#3274D9"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?3(\\b|\\.)/",
              "color": "#A352CC"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?4(\\b|\\.)/",
              "color": "#FF780A"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?5(\\b|\\.)/",
              "color": "#96D98D"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?6(\\b|\\.)/",
              "color": "#FFEE52"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?7(\\b|\\.)/",
              "color": "#8AB8FF"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?8(\\b|\\.)/",
              "color": "#CA95E5"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?9(\\b|\\.)/",
              "color": "#FFB357"
            }
          ],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "expr": "erlang_vm_dist_proc_memory_bytes{type=\"$erlang_vm_dist_proc_type\"} * on(instance) group_left(rabbitmq_node, rabbitmq_cluster) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "{{rabbitmq_node}} -> {{peer}}",
              "refId": "A"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Memory used by the process",
          "tooltip": {
            "shared": true,
            "sort": 2,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "decimals": 0,
              "format": "decbytes",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": "0",
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "datasource": "${DS_PROMETHEUS}",
          "description": "The number of reductions executed by the process",
          "fill": 0,
          "fillGradient": 0,
          "gridPos": {
            "h": 5,
            "w": 12,
            "x": 12,
            "y": 37
          },
          "hiddenSeries": false,
          "id": 17,
          "legend": {
            "alignAsTable": true,
            "avg": false,
            "current": true,
            "max": true,
            "min": true,
            "show": false,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "options": {
            "dataLinks": []
          },
          "percentage": false,
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?0(\\b|\\.)/",
              "color": "#56A64B"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?1(\\b|\\.)/",
              "color": "#F2CC0C"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?2(\\b|\\.)/",
              "color": "#3274D9"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?3(\\b|\\.)/",
              "color": "#A352CC"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?4(\\b|\\.)/",
              "color": "#FF780A"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?5(\\b|\\.)/",
              "color": "#96D98D"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?6(\\b|\\.)/",
              "color": "#FFEE52"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?7(\\b|\\.)/",
              "color": "#8AB8FF"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?8(\\b|\\.)/",
              "color": "#CA95E5"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?9(\\b|\\.)/",
              "color": "#FFB357"
            }
          ],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "expr": "rate(erlang_vm_dist_proc_reductions{type=\"$erlang_vm_dist_proc_type\"}[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "{{rabbitmq_node}} -> {{peer}}",
              "refId": "A"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Process reductions / s",
          "tooltip": {
            "shared": true,
            "sort": 2,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "decimals": 0,
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": "0",
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        }
      ],
      "refresh": "15s",
      "schemaVersion": 22,
      "style": "dark",
      "tags": [
        "rabbitmq-prometheus"
      ],
      "templating": {
        "list": [
          {
            "current": {
              "selected": false,
              "text": "default",
              "value": "default"
            },
            "hide": 2,
            "includeAll": false,
            "label": "datasource",
            "multi": false,
            "name": "DS_PROMETHEUS",
            "options": [],
            "query": "prometheus",
            "refresh": 1,
            "regex": "",
            "skipUrlSync": false,
            "type": "datasource",
            "datasource": "${DS_PROMETHEUS}"
          },
          {
            "allValue": null,
            "current": {},
            "datasource": "${DS_PROMETHEUS}",
            "definition": "label_values(rabbitmq_identity_info, namespace)",
            "hide": 0,
            "includeAll": false,
            "label": "Namespace",
            "multi": false,
            "name": "namespace",
            "options": [],
            "query": "label_values(rabbitmq_identity_info, namespace)",
            "refresh": 2,
            "regex": "",
            "skipUrlSync": false,
            "sort": 1,
            "tagValuesQuery": "",
            "tags": [],
            "tagsQuery": "",
            "type": "query",
            "useTags": false
          },
          {
            "allValue": null,
            "current": {},
            "datasource": "${DS_PROMETHEUS}",
            "definition": "label_values(rabbitmq_identity_info{namespace=\"$namespace\"}, rabbitmq_cluster)",
            "hide": 0,
            "includeAll": false,
            "index": -1,
            "label": "RabbitMQ Cluster",
            "multi": false,
            "name": "rabbitmq_cluster",
            "options": [],
            "query": "label_values(rabbitmq_identity_info{namespace=\"$namespace\"}, rabbitmq_cluster)",
            "refresh": 2,
            "regex": "",
            "skipUrlSync": false,
            "sort": 1,
            "tagValuesQuery": "",
            "tags": [],
            "tagsQuery": "",
            "type": "query",
            "useTags": false
          },
          {
            "allValue": null,
            "current": {
              "text": "All",
              "value": [
                "$__all"
              ]
            },
            "datasource": "${DS_PROMETHEUS}",
            "definition": "label_values(erlang_vm_dist_proc_status, type)",
            "hide": 0,
            "includeAll": true,
            "index": -1,
            "label": "Process type",
            "multi": true,
            "name": "erlang_vm_dist_proc_type",
            "options": [],
            "query": "label_values(erlang_vm_dist_proc_status, type)",
            "refresh": 2,
            "regex": "",
            "skipUrlSync": false,
            "sort": 1,
            "tagValuesQuery": "",
            "tags": [],
            "tagsQuery": "",
            "type": "query",
            "useTags": false
          }
        ]
      },
      "time": {
        "from": "now-15m",
        "to": "now"
      },
      "timepicker": {
        "refresh_intervals": [
          "15s",
          "30s",
          "1m",
          "5m",
          "10m"
        ],
        "time_options": [
          "5m",
          "15m",
          "1h",
          "6h",
          "12h",
          "24h",
          "2d",
          "7d",
          "30d"
        ]
      },
      "timezone": "",
      "title": "Erlang-Distribution",
      "uid": "d-SFCCmZz",
      "variables": {
        "list": []
      },
      "version": 20210308,
      "__inputs": [
        {
          "name": "DS_PROMETHEUS",
          "label": "prometheus",
          "description": "",
          "type": "datasource",
          "pluginId": "prometheus",
          "pluginName": "Prometheus"
        }
      ]
    }
---
# Source: rabbitmq-observability/templates/grafana/dashboards/erlang-distributions-compare.yaml
apiVersion: integreatly.org/v1alpha1
kind: GrafanaDashboard
metadata:
  name: erlang-distributions-compare-dashboard
  namespace: default
  labels:
    grafana_dashboard: "true"
spec:
  # https://grafana.com/grafana/dashboards/10988
  json: |-
    {
      "__requires": [
        {
          "type": "grafana",
          "id": "grafana",
          "name": "Grafana",
          "version": "7.0.0"
        },
        {
          "type": "datasource",
          "id": "prometheus",
          "name": "prometheus",
          "version": "2.0.0"
        },
        {
          "type": "table",
          "id": "table",
          "name": "Table",
          "version": ""
        },
        {
          "type": "panel",
          "id": "graph",
          "name": "Graph",
          "version": ""
        },
        {
          "type": "panel",
          "id": "heatmap",
          "name": "Heatmap",
          "version": ""
        }
      ],
      "annotations": {
        "list": [
          {
            "builtIn": 1,
            "datasource": "-- Grafana --",
            "enable": true,
            "hide": true,
            "iconColor": "rgba(0, 211, 255, 1)",
            "name": "Annotations & Alerts",
            "type": "dashboard"
          }
        ]
      },
      "editable": true,
      "gnetId": 10988,
      "graphTooltip": 1,
      "iteration": 1571066778520,
      "links": [],
      "panels": [
        {
          "collapsed": false,
          "datasource": "${DS_PROMETHEUS}",
          "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 0
          },
          "id": 67,
          "panels": [],
          "title": "rabbitmq-prometheus",
          "type": "row"
        },
        {
          "columns": [
            {
              "text": "Min",
              "value": "min"
            },
            {
              "text": "Max",
              "value": "max"
            },
            {
              "text": "Avg",
              "value": "avg"
            },
            {
              "text": "Current",
              "value": "current"
            }
          ],
          "datasource": "${DS_PROMETHEUS}",
          "fontSize": "100%",
          "gridPos": {
            "h": 7,
            "w": 9,
            "x": 0,
            "y": 1
          },
          "id": 56,
          "options": {},
          "pageSize": null,
          "pluginVersion": "6.4.1",
          "scroll": true,
          "showHeader": true,
          "sort": {
            "col": 4,
            "desc": true
          },
          "styles": [
            {
              "alias": "Node -> Peer",
              "colorMode": null,
              "colors": [
                "rgba(245, 54, 54, 0.9)",
                "rgba(237, 129, 40, 0.89)",
                "rgba(50, 172, 45, 0.97)"
              ],
              "dateFormat": "YYYY-MM-DD HH:mm:ss",
              "decimals": 0,
              "mappingType": 1,
              "pattern": "Metric",
              "thresholds": [],
              "type": "string",
              "unit": "short"
            },
            {
              "alias": "",
              "colorMode": null,
              "colors": [
                "rgba(245, 54, 54, 0.9)",
                "rgba(237, 129, 40, 0.89)",
                "rgba(50, 172, 45, 0.97)"
              ],
              "dateFormat": "YYYY-MM-DD HH:mm:ss",
              "decimals": 1,
              "mappingType": 1,
              "pattern": "/.*/",
              "thresholds": [],
              "type": "number",
              "unit": "Bps"
            }
          ],
          "targets": [
            {
              "expr": "rate(erlang_vm_dist_send_bytes[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=~\"$rabbitmq_cluster\", namespace=\"$namespace\"}",
              "legendFormat": "{{rabbitmq_node}} -> {{peer}}",
              "refId": "A"
            }
          ],
          "timeFrom": null,
          "timeShift": null,
          "title": "Erlang Distribution outgoing traffic / s",
          "transform": "timeseries_aggregations",
          "type": "table"
        },
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "datasource": "${DS_PROMETHEUS}",
          "description": "Erlang Distribution traffic, node network traffic and CPU + PerfTest message throughput and latency",
          "fill": 0,
          "fillGradient": 0,
          "gridPos": {
            "h": 7,
            "w": 15,
            "x": 9,
            "y": 1
          },
          "id": 3,
          "legend": {
            "alignAsTable": true,
            "avg": false,
            "current": true,
            "max": true,
            "min": true,
            "rightSide": false,
            "show": false,
            "sort": "max",
            "sortDesc": true,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "options": {
            "dataLinks": []
          },
          "percentage": false,
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?0(\\b|\\.)/",
              "color": "#56A64B"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?1(\\b|\\.)/",
              "color": "#F2CC0C"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?2(\\b|\\.)/",
              "color": "#3274D9"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?3(\\b|\\.)/",
              "color": "#A352CC"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?4(\\b|\\.)/",
              "color": "#FF780A"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?5(\\b|\\.)/",
              "color": "#96D98D"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?6(\\b|\\.)/",
              "color": "#FFEE52"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?7(\\b|\\.)/",
              "color": "#8AB8FF"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?8(\\b|\\.)/",
              "color": "#CA95E5"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?9(\\b|\\.)/",
              "color": "#FFB357"
            }
          ],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "expr": "rate(erlang_vm_dist_send_bytes[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=~\"$rabbitmq_cluster\", namespace=\"$namespace\"}",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "{{rabbitmq_node}} -> {{peer}}",
              "refId": "A"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Erlang Distribution outgoing traffic / s",
          "tooltip": {
            "shared": true,
            "sort": 2,
            "value_type": "individual"
          },
          "transparent": true,
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "decimals": 0,
              "format": "Bps",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": "0",
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "collapsed": false,
          "datasource": "${DS_PROMETHEUS}",
          "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 8
          },
          "id": 65,
          "panels": [],
          "title": "node-exporter_cadvisor",
          "type": "row"
        },
        {
          "columns": [
            {
              "text": "Min",
              "value": "min"
            },
            {
              "text": "Max",
              "value": "max"
            },
            {
              "text": "Avg",
              "value": "avg"
            },
            {
              "text": "Current",
              "value": "current"
            }
          ],
          "datasource": "${DS_PROMETHEUS}",
          "fontSize": "100%",
          "gridPos": {
            "h": 7,
            "w": 9,
            "x": 0,
            "y": 9
          },
          "id": 61,
          "options": {},
          "pageSize": null,
          "pluginVersion": "6.4.1",
          "scroll": true,
          "showHeader": true,
          "sort": {
            "col": 4,
            "desc": true
          },
          "styles": [
            {
              "alias": "Host",
              "colorMode": null,
              "colors": [
                "rgba(245, 54, 54, 0.9)",
                "rgba(237, 129, 40, 0.89)",
                "rgba(50, 172, 45, 0.97)"
              ],
              "dateFormat": "YYYY-MM-DD HH:mm:ss",
              "decimals": 0,
              "mappingType": 1,
              "pattern": "Metric",
              "thresholds": [],
              "type": "string",
              "unit": "short"
            },
            {
              "alias": "",
              "colorMode": null,
              "colors": [
                "rgba(245, 54, 54, 0.9)",
                "rgba(237, 129, 40, 0.89)",
                "rgba(50, 172, 45, 0.97)"
              ],
              "dateFormat": "YYYY-MM-DD HH:mm:ss",
              "decimals": 1,
              "mappingType": 1,
              "pattern": "/.*/",
              "thresholds": [],
              "type": "number",
              "unit": "Bps"
            }
          ],
          "targets": [
            {
              "expr": "sum by(instance) (rate(node_network_receive_bytes_total{instance=~\"$host\"}[5m]))",
              "legendFormat": "{{instance}}",
              "refId": "A"
            },
            {
              "expr": "sum by(name) (rate(container_network_receive_bytes_total{name=~\"$container\"}[1m]))",
              "legendFormat": "{{name}}",
              "refId": "B"
            }
          ],
          "timeFrom": null,
          "timeShift": null,
          "title": "Network incoming traffic / s",
          "transform": "timeseries_aggregations",
          "type": "table"
        },
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "datasource": "${DS_PROMETHEUS}",
          "decimals": null,
          "editable": true,
          "error": false,
          "fill": 0,
          "fillGradient": 0,
          "grid": {},
          "gridPos": {
            "h": 7,
            "w": 15,
            "x": 9,
            "y": 9
          },
          "height": "",
          "id": 58,
          "legend": {
            "alignAsTable": true,
            "avg": true,
            "current": false,
            "hideEmpty": true,
            "hideZero": true,
            "max": true,
            "min": true,
            "rightSide": true,
            "show": false,
            "sort": "max",
            "sortDesc": true,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "maxPerRow": 3,
          "nullPointMode": "null",
          "options": {
            "dataLinks": []
          },
          "percentage": false,
          "pointradius": 5,
          "points": false,
          "renderer": "flot",
          "repeatDirection": "h",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "calculatedInterval": "2s",
              "datasourceErrors": {},
              "errors": {},
              "expr": "sum by(instance) (rate(node_network_receive_bytes_total{instance=~\"$host\"}[5m]))",
              "format": "time_series",
              "interval": "",
              "intervalFactor": 1,
              "legendFormat": "{{instance}}",
              "metric": "",
              "refId": "A",
              "step": 20
            },
            {
              "expr": "sum by(name) (rate(container_network_receive_bytes_total{name=~\"$container\"}[1m]))",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "{{name}}",
              "refId": "B"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Network incoming traffic / s",
          "tooltip": {
            "msResolution": false,
            "shared": true,
            "sort": 2,
            "value_type": "individual"
          },
          "transparent": true,
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "decimals": 1,
              "format": "Bps",
              "label": "",
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            },
            {
              "format": "short",
              "logBase": 1,
              "max": null,
              "min": 0,
              "show": false
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "columns": [
            {
              "text": "Min",
              "value": "min"
            },
            {
              "text": "Max",
              "value": "max"
            },
            {
              "text": "Avg",
              "value": "avg"
            },
            {
              "text": "Current",
              "value": "current"
            }
          ],
          "datasource": "${DS_PROMETHEUS}",
          "fontSize": "100%",
          "gridPos": {
            "h": 7,
            "w": 9,
            "x": 0,
            "y": 16
          },
          "id": 60,
          "options": {},
          "pageSize": null,
          "pluginVersion": "6.4.1",
          "scroll": true,
          "showHeader": true,
          "sort": {
            "col": 4,
            "desc": true
          },
          "styles": [
            {
              "alias": "Host",
              "colorMode": null,
              "colors": [
                "rgba(245, 54, 54, 0.9)",
                "rgba(237, 129, 40, 0.89)",
                "rgba(50, 172, 45, 0.97)"
              ],
              "dateFormat": "YYYY-MM-DD HH:mm:ss",
              "decimals": 0,
              "mappingType": 1,
              "pattern": "Metric",
              "thresholds": [],
              "type": "string",
              "unit": "short"
            },
            {
              "alias": "",
              "colorMode": null,
              "colors": [
                "rgba(245, 54, 54, 0.9)",
                "rgba(237, 129, 40, 0.89)",
                "rgba(50, 172, 45, 0.97)"
              ],
              "dateFormat": "YYYY-MM-DD HH:mm:ss",
              "decimals": 1,
              "mappingType": 1,
              "pattern": "/.*/",
              "thresholds": [],
              "type": "number",
              "unit": "Bps"
            }
          ],
          "targets": [
            {
              "expr": "sum by(instance) (rate(node_network_transmit_bytes_total{instance=~\"$host\"}[5m]))",
              "legendFormat": "{{instance}}",
              "refId": "A"
            },
            {
              "expr": "sum by(name) (rate(container_network_transmit_bytes_total{name=~\"$container\"}[1m]))",
              "legendFormat": "{{name}}",
              "refId": "B"
            }
          ],
          "timeFrom": null,
          "timeShift": null,
          "title": "Network outgoing traffic / s",
          "transform": "timeseries_aggregations",
          "type": "table"
        },
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "datasource": "${DS_PROMETHEUS}",
          "decimals": null,
          "editable": true,
          "error": false,
          "fill": 0,
          "fillGradient": 0,
          "grid": {},
          "gridPos": {
            "h": 7,
            "w": 15,
            "x": 9,
            "y": 16
          },
          "height": "",
          "id": 57,
          "legend": {
            "alignAsTable": true,
            "avg": true,
            "current": false,
            "hideEmpty": true,
            "hideZero": true,
            "max": true,
            "min": true,
            "rightSide": true,
            "show": false,
            "sort": "max",
            "sortDesc": true,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "maxPerRow": 3,
          "nullPointMode": "null",
          "options": {
            "dataLinks": []
          },
          "percentage": false,
          "pointradius": 5,
          "points": false,
          "renderer": "flot",
          "repeatDirection": "h",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "calculatedInterval": "2s",
              "datasourceErrors": {},
              "errors": {},
              "expr": "sum by(instance) (rate(node_network_transmit_bytes_total{instance=~\"$host\"}[5m]))",
              "format": "time_series",
              "interval": "",
              "intervalFactor": 1,
              "legendFormat": "{{instance}}",
              "metric": "",
              "refId": "A",
              "step": 20
            },
            {
              "expr": "sum by(name) (rate(container_network_transmit_bytes_total{name=~\"$container\"}[1m]))",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "{{name}}",
              "refId": "B"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Network outgoing traffic / s",
          "tooltip": {
            "msResolution": false,
            "shared": true,
            "sort": 2,
            "value_type": "individual"
          },
          "transparent": true,
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "decimals": 1,
              "format": "Bps",
              "label": "",
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            },
            {
              "format": "short",
              "logBase": 1,
              "max": null,
              "min": 0,
              "show": false
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "columns": [
            {
              "text": "Min",
              "value": "min"
            },
            {
              "text": "Max",
              "value": "max"
            },
            {
              "text": "Avg",
              "value": "avg"
            },
            {
              "text": "Current",
              "value": "current"
            }
          ],
          "datasource": "${DS_PROMETHEUS}",
          "fontSize": "100%",
          "gridPos": {
            "h": 7,
            "w": 9,
            "x": 0,
            "y": 23
          },
          "id": 59,
          "options": {},
          "pageSize": null,
          "pluginVersion": "6.4.1",
          "scroll": true,
          "showHeader": true,
          "sort": {
            "col": 4,
            "desc": true
          },
          "styles": [
            {
              "alias": "Host",
              "colorMode": null,
              "colors": [
                "rgba(245, 54, 54, 0.9)",
                "rgba(237, 129, 40, 0.89)",
                "rgba(50, 172, 45, 0.97)"
              ],
              "dateFormat": "YYYY-MM-DD HH:mm:ss",
              "decimals": 0,
              "mappingType": 1,
              "pattern": "Metric",
              "thresholds": [],
              "type": "string",
              "unit": "short"
            },
            {
              "alias": "",
              "colorMode": null,
              "colors": [
                "rgba(245, 54, 54, 0.9)",
                "rgba(237, 129, 40, 0.89)",
                "rgba(50, 172, 45, 0.97)"
              ],
              "dateFormat": "YYYY-MM-DD HH:mm:ss",
              "decimals": 0,
              "mappingType": 1,
              "pattern": "/.*/",
              "thresholds": [],
              "type": "number",
              "unit": "percent"
            }
          ],
          "targets": [
            {
              "expr": "(max by (instance) (irate(node_cpu_seconds_total{job=\"node\", mode=~\"user|system|iowait|softirq\", instance=~\"$host\"}[5m])) * 100)",
              "legendFormat": "{{instance}}",
              "refId": "A"
            },
            {
              "expr": "sum by(name) (irate(container_cpu_usage_seconds_total{name=~\"$container\"}[1m])) * 100",
              "legendFormat": "{{name}}",
              "refId": "B"
            }
          ],
          "timeFrom": null,
          "timeShift": null,
          "title": "CPU",
          "transform": "timeseries_aggregations",
          "type": "table"
        },
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "datasource": "${DS_PROMETHEUS}",
          "decimals": null,
          "editable": true,
          "error": false,
          "fill": 0,
          "fillGradient": 0,
          "grid": {},
          "gridPos": {
            "h": 7,
            "w": 15,
            "x": 9,
            "y": 23
          },
          "height": "",
          "id": 28,
          "legend": {
            "alignAsTable": true,
            "avg": true,
            "current": false,
            "hideEmpty": true,
            "hideZero": true,
            "max": true,
            "min": true,
            "rightSide": true,
            "show": false,
            "sort": "max",
            "sortDesc": true,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "maxPerRow": 3,
          "nullPointMode": "null",
          "options": {
            "dataLinks": []
          },
          "percentage": false,
          "pointradius": 5,
          "points": false,
          "renderer": "flot",
          "repeat": null,
          "repeatDirection": "h",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "calculatedInterval": "2s",
              "datasourceErrors": {},
              "errors": {},
              "expr": "(max by (instance) (irate(node_cpu_seconds_total{job=\"node\", mode=~\"user|system|iowait|softirq\", instance=~\"$host\"}[5m])) * 100)",
              "format": "time_series",
              "interval": "",
              "intervalFactor": 1,
              "legendFormat": "{{instance}}",
              "metric": "",
              "refId": "A",
              "step": 20
            },
            {
              "expr": "sum by(name) (irate(container_cpu_usage_seconds_total{name=~\"$container\"}[1m])) * 100",
              "format": "time_series",
              "hide": false,
              "intervalFactor": 1,
              "legendFormat": "{{name}}",
              "refId": "B"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "CPU",
          "tooltip": {
            "msResolution": false,
            "shared": true,
            "sort": 2,
            "value_type": "individual"
          },
          "transparent": true,
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "format": "percent",
              "label": "",
              "logBase": 1,
              "max": null,
              "min": 0,
              "show": true
            },
            {
              "format": "short",
              "logBase": 1,
              "max": null,
              "min": 0,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "collapsed": false,
          "datasource": "${DS_PROMETHEUS}",
          "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 30
          },
          "id": 63,
          "panels": [],
          "title": "rabbitmq-perf-test",
          "type": "row"
        },
        {
          "columns": [
            {
              "text": "Min",
              "value": "min"
            },
            {
              "text": "Max",
              "value": "max"
            },
            {
              "text": "Avg",
              "value": "avg"
            },
            {
              "text": "Current",
              "value": "current"
            }
          ],
          "datasource": "${DS_PROMETHEUS}",
          "fontSize": "100%",
          "gridPos": {
            "h": 7,
            "w": 9,
            "x": 0,
            "y": 31
          },
          "id": 49,
          "options": {},
          "pageSize": null,
          "pluginVersion": "6.4.1",
          "scroll": true,
          "showHeader": true,
          "sort": {
            "col": 4,
            "desc": true
          },
          "styles": [
            {
              "alias": "Instance",
              "colorMode": null,
              "colors": [
                "rgba(245, 54, 54, 0.9)",
                "rgba(237, 129, 40, 0.89)",
                "rgba(50, 172, 45, 0.97)"
              ],
              "dateFormat": "YYYY-MM-DD HH:mm:ss",
              "decimals": 0,
              "mappingType": 1,
              "pattern": "Metric",
              "thresholds": [],
              "type": "string",
              "unit": "short"
            },
            {
              "alias": "",
              "colorMode": null,
              "colors": [
                "rgba(245, 54, 54, 0.9)",
                "rgba(237, 129, 40, 0.89)",
                "rgba(50, 172, 45, 0.97)"
              ],
              "dateFormat": "YYYY-MM-DD HH:mm:ss",
              "decimals": 1,
              "mappingType": 1,
              "pattern": "/.*/",
              "thresholds": [],
              "type": "number",
              "unit": "short"
            }
          ],
          "targets": [
            {
              "expr": "perftest_published{instance=~\"$instance\"}",
              "legendFormat": "{{instance}}",
              "refId": "A"
            }
          ],
          "timeFrom": null,
          "timeShift": null,
          "title": "Messages published / s",
          "transform": "timeseries_aggregations",
          "type": "table"
        },
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "datasource": "${DS_PROMETHEUS}",
          "fill": 1,
          "fillGradient": 0,
          "gridPos": {
            "h": 7,
            "w": 15,
            "x": 9,
            "y": 31
          },
          "id": 51,
          "legend": {
            "alignAsTable": true,
            "avg": true,
            "current": true,
            "max": true,
            "min": true,
            "rightSide": false,
            "show": false,
            "sort": "avg",
            "sortDesc": true,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "options": {
            "dataLinks": []
          },
          "percentage": false,
          "pointradius": 5,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "expr": "perftest_published{instance=~\"$instance\"}",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "{{instance}}",
              "refId": "A"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Messages published / s",
          "tooltip": {
            "shared": true,
            "sort": 2,
            "value_type": "individual"
          },
          "transparent": true,
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "decimals": null,
              "format": "short",
              "label": "",
              "logBase": 1,
              "max": null,
              "min": "0",
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "columns": [
            {
              "text": "Min",
              "value": "min"
            },
            {
              "text": "Max",
              "value": "max"
            },
            {
              "text": "Avg",
              "value": "avg"
            },
            {
              "text": "Current",
              "value": "current"
            }
          ],
          "datasource": "${DS_PROMETHEUS}",
          "fontSize": "100%",
          "gridPos": {
            "h": 7,
            "w": 9,
            "x": 0,
            "y": 38
          },
          "id": 55,
          "options": {},
          "pageSize": null,
          "pluginVersion": "6.4.1",
          "scroll": true,
          "showHeader": true,
          "sort": {
            "col": 4,
            "desc": true
          },
          "styles": [
            {
              "alias": "Instance",
              "colorMode": null,
              "colors": [
                "rgba(245, 54, 54, 0.9)",
                "rgba(237, 129, 40, 0.89)",
                "rgba(50, 172, 45, 0.97)"
              ],
              "dateFormat": "YYYY-MM-DD HH:mm:ss",
              "decimals": 0,
              "mappingType": 1,
              "pattern": "Metric",
              "thresholds": [],
              "type": "string",
              "unit": "short"
            },
            {
              "alias": "",
              "colorMode": null,
              "colors": [
                "rgba(245, 54, 54, 0.9)",
                "rgba(237, 129, 40, 0.89)",
                "rgba(50, 172, 45, 0.97)"
              ],
              "dateFormat": "YYYY-MM-DD HH:mm:ss",
              "decimals": 0,
              "mappingType": 1,
              "pattern": "/.*/",
              "thresholds": [],
              "type": "number",
              "unit": "short"
            }
          ],
          "targets": [
            {
              "expr": "perftest_consumed{instance=~\"$instance\"}",
              "legendFormat": "{{instance}}",
              "refId": "A"
            }
          ],
          "timeFrom": null,
          "timeShift": null,
          "title": "Messages consumed / s",
          "transform": "timeseries_aggregations",
          "type": "table"
        },
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "datasource": "${DS_PROMETHEUS}",
          "fill": 1,
          "fillGradient": 0,
          "gridPos": {
            "h": 7,
            "w": 15,
            "x": 9,
            "y": 38
          },
          "id": 53,
          "legend": {
            "alignAsTable": true,
            "avg": true,
            "current": true,
            "max": true,
            "min": true,
            "rightSide": false,
            "show": false,
            "sort": "avg",
            "sortDesc": true,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "options": {
            "dataLinks": []
          },
          "percentage": false,
          "pointradius": 5,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "expr": "perftest_consumed{instance=~\"$instance\"}",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "{{instance}}",
              "refId": "A"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Messages consumed / s",
          "tooltip": {
            "shared": true,
            "sort": 2,
            "value_type": "individual"
          },
          "transparent": true,
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "decimals": null,
              "format": "short",
              "label": "",
              "logBase": 1,
              "max": null,
              "min": "0",
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "columns": [
            {
              "text": "Min",
              "value": "min"
            },
            {
              "text": "Max",
              "value": "max"
            },
            {
              "text": "Avg",
              "value": "avg"
            },
            {
              "text": "Current",
              "value": "current"
            }
          ],
          "datasource": "${DS_PROMETHEUS}",
          "fontSize": "100%",
          "gridPos": {
            "h": 7,
            "w": 9,
            "x": 0,
            "y": 45
          },
          "id": 47,
          "options": {},
          "pageSize": null,
          "pluginVersion": "6.4.1",
          "scroll": true,
          "showHeader": true,
          "sort": {
            "col": 4,
            "desc": true
          },
          "styles": [
            {
              "alias": "Instance",
              "colorMode": null,
              "colors": [
                "rgba(245, 54, 54, 0.9)",
                "rgba(237, 129, 40, 0.89)",
                "rgba(50, 172, 45, 0.97)"
              ],
              "dateFormat": "YYYY-MM-DD HH:mm:ss",
              "decimals": 0,
              "mappingType": 1,
              "pattern": "Metric",
              "thresholds": [],
              "type": "string",
              "unit": "short"
            },
            {
              "alias": "",
              "colorMode": null,
              "colors": [
                "rgba(245, 54, 54, 0.9)",
                "rgba(237, 129, 40, 0.89)",
                "rgba(50, 172, 45, 0.97)"
              ],
              "dateFormat": "YYYY-MM-DD HH:mm:ss",
              "decimals": 1,
              "mappingType": 1,
              "pattern": "/.*/",
              "thresholds": [],
              "type": "number",
              "unit": "s"
            }
          ],
          "targets": [
            {
              "expr": "perftest_latency_seconds{quantile=\"$percentile\", instance=~\"$instance\"}",
              "legendFormat": "{{instance}}",
              "refId": "A"
            }
          ],
          "timeFrom": null,
          "timeShift": null,
          "title": "End-to-end message latency",
          "transform": "timeseries_aggregations",
          "type": "table"
        },
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "datasource": "${DS_PROMETHEUS}",
          "fill": 1,
          "fillGradient": 0,
          "gridPos": {
            "h": 7,
            "w": 15,
            "x": 9,
            "y": 45
          },
          "id": 45,
          "legend": {
            "alignAsTable": true,
            "avg": true,
            "current": true,
            "max": true,
            "min": true,
            "rightSide": false,
            "show": false,
            "sort": "avg",
            "sortDesc": true,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "options": {
            "dataLinks": []
          },
          "percentage": false,
          "pointradius": 5,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "expr": "perftest_latency_seconds{quantile=\"$percentile\", instance=~\"$instance\"}",
              "format": "time_series",
              "instant": false,
              "interval": "1s",
              "intervalFactor": 1,
              "legendFormat": "{{instance}}",
              "refId": "A"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "End-to-end message latency",
          "tooltip": {
            "shared": true,
            "sort": 2,
            "value_type": "individual"
          },
          "transparent": true,
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "format": "s",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": "0",
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": true,
          "dashLength": 10,
          "dashes": false,
          "datasource": "${DS_PROMETHEUS}",
          "fill": 1,
          "fillGradient": 0,
          "gridPos": {
            "h": 8,
            "w": 9,
            "x": 0,
            "y": 52
          },
          "id": 43,
          "legend": {
            "alignAsTable": true,
            "avg": true,
            "current": true,
            "max": true,
            "min": true,
            "rightSide": false,
            "show": false,
            "sort": "max",
            "sortDesc": true,
            "total": false,
            "values": true
          },
          "lines": false,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "options": {
            "dataLinks": []
          },
          "percentage": false,
          "pointradius": 5,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "expr": "perftest_latency_seconds{quantile=\"$percentile\", instance=~\"$instance\"}",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "{{instance}}",
              "refId": "A"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "End-to-end message latency distribution",
          "tooltip": {
            "shared": false,
            "sort": 0,
            "value_type": "individual"
          },
          "transparent": true,
          "type": "graph",
          "xaxis": {
            "buckets": 20,
            "mode": "histogram",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "format": "none",
              "label": "",
              "logBase": 1,
              "max": null,
              "min": "0",
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": false
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "cards": {
            "cardPadding": null,
            "cardRound": null
          },
          "color": {
            "cardColor": "rgb(255, 255, 255)",
            "colorScale": "sqrt",
            "colorScheme": "interpolateBlues",
            "exponent": 0.4,
            "max": null,
            "min": null,
            "mode": "opacity"
          },
          "dataFormat": "timeseries",
          "datasource": "${DS_PROMETHEUS}",
          "gridPos": {
            "h": 8,
            "w": 15,
            "x": 9,
            "y": 52
          },
          "heatmap": {},
          "hideZeroBuckets": true,
          "highlightCards": true,
          "id": 41,
          "legend": {
            "show": true
          },
          "links": [],
          "options": {},
          "reverseYBuckets": false,
          "targets": [
            {
              "expr": "perftest_latency_seconds{quantile=\"$percentile\", instance=~\"$instance\"}",
              "format": "heatmap",
              "intervalFactor": 1,
              "refId": "A"
            }
          ],
          "title": "End-to-end message latency distribution",
          "tooltip": {
            "show": true,
            "showHistogram": true
          },
          "transparent": true,
          "type": "heatmap",
          "xAxis": {
            "show": true
          },
          "xBucketNumber": null,
          "xBucketSize": null,
          "yAxis": {
            "decimals": null,
            "format": "s",
            "logBase": 1,
            "max": null,
            "min": "0",
            "show": true,
            "splitFactor": null
          },
          "yBucketBound": "auto",
          "yBucketNumber": null,
          "yBucketSize": null
        }
      ],
      "refresh": "15s",
      "schemaVersion": 20,
      "style": "dark",
      "tags": [
        "cadvisor",
        "node-exporter",
        "rabbitmq-perf-test",
        "rabbitmq-prometheus"
      ],
      "templating": {
        "list": [
          {
            "current": {
              "selected": false,
              "text": "default",
              "value": "default"
            },
            "hide": 2,
            "includeAll": false,
            "label": "datasource",
            "multi": false,
            "name": "DS_PROMETHEUS",
            "options": [],
            "query": "prometheus",
            "refresh": 1,
            "regex": "",
            "skipUrlSync": false,
            "type": "datasource",
            "datasource": "${DS_PROMETHEUS}"
          },
          {
            "allValue": null,
            "current": {},
            "datasource": "${DS_PROMETHEUS}",
            "definition": "label_values(rabbitmq_identity_info, namespace)",
            "hide": 0,
            "includeAll": false,
            "label": "Namespace",
            "multi": false,
            "name": "namespace",
            "options": [],
            "query": "label_values(rabbitmq_identity_info, namespace)",
            "refresh": 2,
            "regex": "",
            "skipUrlSync": false,
            "sort": 1,
            "tagValuesQuery": "",
            "tags": [],
            "tagsQuery": "",
            "type": "query",
            "useTags": false
          },
          {
            "allValue": null,
            "current": {
              "text": "All",
              "value": [
                "$__all"
              ]
            },
            "datasource": "${DS_PROMETHEUS}",
            "definition": "label_values(rabbitmq_identity_info{namespace=\"$namespace\"}, rabbitmq_cluster)",
            "hide": 0,
            "includeAll": true,
            "label": "RabbitMQ Cluster",
            "multi": true,
            "name": "rabbitmq_cluster",
            "options": [],
            "query": "label_values(rabbitmq_identity_info{namespace=\"$namespace\"}, rabbitmq_cluster)",
            "refresh": 2,
            "regex": "",
            "skipUrlSync": false,
            "sort": 1,
            "tagValuesQuery": "",
            "tags": [],
            "tagsQuery": "",
            "type": "query",
            "useTags": false
          },
          {
            "allValue": null,
            "current": {
              "text": "All",
              "value": [
                "$__all"
              ]
            },
            "datasource": "${DS_PROMETHEUS}",
            "definition": "label_values(perftest_published, instance)",
            "hide": 0,
            "includeAll": true,
            "label": "PerfTest Instance",
            "multi": true,
            "name": "instance",
            "options": [],
            "query": "label_values(perftest_published, instance)",
            "refresh": 2,
            "regex": "",
            "skipUrlSync": false,
            "sort": 1,
            "tagValuesQuery": "",
            "tags": [],
            "tagsQuery": "",
            "type": "query",
            "useTags": false
          },
          {
            "allValue": null,
            "current": {
              "text": "0.99",
              "value": "0.99"
            },
            "datasource": "${DS_PROMETHEUS}",
            "definition": "label_values(perftest_latency_seconds, quantile)",
            "hide": 0,
            "includeAll": false,
            "label": "Percentile",
            "multi": false,
            "name": "percentile",
            "options": [],
            "query": "label_values(perftest_latency_seconds, quantile)",
            "refresh": 2,
            "regex": "",
            "skipUrlSync": false,
            "sort": 4,
            "tagValuesQuery": "",
            "tags": [],
            "tagsQuery": "",
            "type": "query",
            "useTags": false
          },
          {
            "allValue": null,
            "current": {
              "text": "All",
              "value": [
                "$__all"
              ]
            },
            "datasource": "${DS_PROMETHEUS}",
            "definition": "label_values(node_network_info, instance)",
            "hide": 0,
            "includeAll": true,
            "label": "Host",
            "multi": true,
            "name": "host",
            "options": [],
            "query": "label_values(node_network_info, instance)",
            "refresh": 2,
            "regex": "",
            "skipUrlSync": false,
            "sort": 1,
            "tagValuesQuery": "",
            "tags": [],
            "tagsQuery": "",
            "type": "query",
            "useTags": false
          },
          {
            "allValue": null,
            "current": {
              "text": "All",
              "value": [
                "$__all"
              ]
            },
            "datasource": "${DS_PROMETHEUS}",
            "definition": "label_values(container_network_receive_bytes_total, name)",
            "hide": 0,
            "includeAll": true,
            "label": "or Container",
            "multi": true,
            "name": "container",
            "options": [],
            "query": "label_values(container_network_receive_bytes_total, name)",
            "refresh": 2,
            "regex": "",
            "skipUrlSync": false,
            "sort": 1,
            "tagValuesQuery": "",
            "tags": [],
            "tagsQuery": "",
            "type": "query",
            "useTags": false
          }
        ]
      },
      "time": {
        "from": "now-15m",
        "to": "now"
      },
      "timepicker": {
        "refresh_intervals": [
          "15s",
          "30s",
          "1m",
          "5m",
          "10m"
        ],
        "time_options": [
          "5m",
          "15m",
          "1h",
          "6h",
          "12h",
          "24h",
          "2d",
          "7d",
          "30d"
        ]
      },
      "timezone": "",
      "title": "Erlang-Distributions-Compare",
      "uid": "C0jeDstZk",
      "version": 20210308,
      "__inputs": [
        {
          "name": "DS_PROMETHEUS",
          "label": "prometheus",
          "description": "",
          "type": "datasource",
          "pluginId": "prometheus",
          "pluginName": "Prometheus"
        }
      ]
    }
---
# Source: rabbitmq-observability/templates/grafana/dashboards/erlang-memory-allocators.yaml
apiVersion: integreatly.org/v1alpha1
kind: GrafanaDashboard
metadata:
  name: erlang-memory-allocators-dashboard
  namespace: default
  labels:
    grafana_dashboard: "true"
spec:
  # https://grafana.com/grafana/dashboards/11350
  json: |-
    {
      "__requires": [
        {
          "type": "grafana",
          "id": "grafana",
          "name": "Grafana",
          "version": "7.0.0"
        },
        {
          "type": "datasource",
          "id": "prometheus",
          "name": "prometheus",
          "version": "2.0.0"
        },
        {
          "type": "panel",
          "id": "singlestat",
          "name": "Singlestat",
          "version": ""
        },
        {
          "type": "table",
          "id": "table",
          "name": "Table",
          "version": ""
        },
        {
          "type": "panel",
          "id": "graph",
          "name": "Graph",
          "version": ""
        }
      ],
      "annotations": {
        "list": [
          {
            "builtIn": 1,
            "datasource": "-- Grafana --",
            "enable": true,
            "hide": true,
            "iconColor": "rgba(0, 211, 255, 1)",
            "name": "Annotations & Alerts",
            "type": "dashboard"
          }
        ]
      },
      "description": "Erlang VM memory utilisation from erts_alloc perspective",
      "editable": true,
      "gnetId": 11350,
      "graphTooltip": 1,
      "id": null,
      "iteration": 1582549977400,
      "links": [],
      "panels": [
        {
          "cacheTimeout": null,
          "colorBackground": false,
          "colorValue": true,
          "colors": [
            "#E02F44",
            "#3274D9",
            "#56A64B"
          ],
          "datasource": "${DS_PROMETHEUS}",
          "decimals": 1,
          "format": "percent",
          "gauge": {
            "maxValue": 100,
            "minValue": 0,
            "show": false,
            "thresholdLabels": true,
            "thresholdMarkers": true
          },
          "gridPos": {
            "h": 3,
            "w": 4,
            "x": 0,
            "y": 0
          },
          "id": 50,
          "interval": null,
          "links": [],
          "mappingType": 1,
          "mappingTypes": [
            {
              "name": "value to text",
              "value": 1
            },
            {
              "name": "range to text",
              "value": 2
            }
          ],
          "maxDataPoints": 100,
          "nullPointMode": "connected",
          "nullText": null,
          "options": {},
          "postfix": "",
          "postfixFontSize": "50%",
          "prefix": "",
          "prefixFontSize": "50%",
          "rangeMaps": [
            {
              "from": "null",
              "text": "N/A",
              "to": "null"
            }
          ],
          "repeatDirection": "v",
          "sparkline": {
            "fillColor": "rgba(255, 255, 255, 0)",
            "full": false,
            "lineColor": "rgb(255, 255, 255)",
            "show": true
          },
          "tableColumn": "",
          "targets": [
            {
              "expr": "sum (erlang_vm_allocators{usage=\"blocks_size\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\", rabbitmq_node=\"$rabbitmq_node\"})\n/\nsum (erlang_vm_allocators{usage=\"carriers_size\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\", rabbitmq_node=\"$rabbitmq_node\"})\n* 100",
              "format": "time_series",
              "intervalFactor": 1,
              "refId": "A"
            }
          ],
          "thresholds": "25,50",
          "title": "Allocated Used",
          "type": "singlestat",
          "valueFontSize": "80%",
          "valueMaps": [
            {
              "op": "=",
              "text": "N/A",
              "value": "null"
            }
          ],
          "valueName": "current"
        },
        {
          "cacheTimeout": null,
          "colorBackground": false,
          "colorValue": true,
          "colors": [
            "#56A64B",
            "#3274D9",
            "#E02F44"
          ],
          "datasource": "${DS_PROMETHEUS}",
          "decimals": 1,
          "format": "percent",
          "gauge": {
            "maxValue": 100,
            "minValue": 0,
            "show": false,
            "thresholdLabels": true,
            "thresholdMarkers": true
          },
          "gridPos": {
            "h": 3,
            "w": 4,
            "x": 4,
            "y": 0
          },
          "id": 51,
          "interval": null,
          "links": [],
          "mappingType": 1,
          "mappingTypes": [
            {
              "name": "value to text",
              "value": 1
            },
            {
              "name": "range to text",
              "value": 2
            }
          ],
          "maxDataPoints": 100,
          "nullPointMode": "connected",
          "nullText": null,
          "options": {},
          "postfix": "",
          "postfixFontSize": "50%",
          "prefix": "",
          "prefixFontSize": "50%",
          "rangeMaps": [
            {
              "from": "null",
              "text": "N/A",
              "to": "null"
            }
          ],
          "repeatDirection": "v",
          "sparkline": {
            "fillColor": "rgba(255, 255, 255, 0)",
            "full": false,
            "lineColor": "rgb(255, 255, 255)",
            "show": true
          },
          "tableColumn": "",
          "targets": [
            {
              "expr": "(\n  sum (erlang_vm_allocators{usage=\"carriers_size\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\", rabbitmq_node=\"$rabbitmq_node\"})\n  -\n  sum (erlang_vm_allocators{usage=\"blocks_size\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\", rabbitmq_node=\"$rabbitmq_node\"})\n) / sum (erlang_vm_allocators{usage=\"carriers_size\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\", rabbitmq_node=\"$rabbitmq_node\"})\n* 100",
              "format": "time_series",
              "intervalFactor": 1,
              "refId": "A"
            }
          ],
          "thresholds": "50,75",
          "title": "Allocated Unused",
          "type": "singlestat",
          "valueFontSize": "80%",
          "valueMaps": [
            {
              "op": "=",
              "text": "N/A",
              "value": "null"
            }
          ],
          "valueName": "current"
        },
        {
          "cacheTimeout": null,
          "colorBackground": false,
          "colorValue": false,
          "colors": [
            "#C4162A",
            "#1F60C4",
            "#37872D"
          ],
          "datasource": "${DS_PROMETHEUS}",
          "decimals": 1,
          "description": "Total Size of Allocated Blocks\n\nMemory that is actively used by Erlang data.\n\nThe smallest unit of memory that an allocator can work with is called a `block`. When you call an allocator to allocate a certain amount of memory what you get back is a block. It is also blocks that you give as an argument to the allocator when you want to deallocate memory.\n\nThe allocator does not allocate blocks from the operating system directly though. Instead the allocator allocates a carrier from the operating system, either through `sys_alloc` or through `mseg_alloc`, which in turn uses `malloc` or `mmap`. If `sys_alloc` is used the carrier is placed on the C-heap and if `mseg_alloc` is used the carrier is placed in a segment.\n\nSmall blocks are placed in a multiblock carrier. A multiblock carrier can as the name suggests contain many blocks. Larger blocks are placed in a singleblock carrier, which as the name implies on contains one block.\n\nWhatâ€™s considered a small and a large block is determined by the parameter singleblock carrier threshold (`sbct`).\n\n* [erts_alloc](http://erlang.org/doc/man/erts_alloc.html)\n* [The Memory Subsystem](https://github.com/happi/theBeamBook/blob/master/chapters/memory.asciidoc)",
          "format": "decbytes",
          "gauge": {
            "maxValue": 100,
            "minValue": 0,
            "show": false,
            "thresholdLabels": true,
            "thresholdMarkers": true
          },
          "gridPos": {
            "h": 3,
            "w": 4,
            "x": 8,
            "y": 0
          },
          "id": 215,
          "interval": null,
          "links": [],
          "mappingType": 1,
          "mappingTypes": [
            {
              "name": "value to text",
              "value": 1
            },
            {
              "name": "range to text",
              "value": 2
            }
          ],
          "maxDataPoints": 100,
          "nullPointMode": "connected",
          "nullText": null,
          "options": {},
          "postfix": "",
          "postfixFontSize": "50%",
          "prefix": "",
          "prefixFontSize": "50%",
          "rangeMaps": [
            {
              "from": "null",
              "text": "N/A",
              "to": "null"
            }
          ],
          "repeatDirection": "v",
          "sparkline": {
            "fillColor": "rgba(255, 255, 255, 0)",
            "full": false,
            "lineColor": "rgb(255, 255, 255)",
            "show": true
          },
          "tableColumn": "",
          "targets": [
            {
              "expr": "sum (erlang_vm_allocators{usage=\"blocks_size\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\", rabbitmq_node=\"$rabbitmq_node\"})",
              "format": "time_series",
              "intervalFactor": 1,
              "refId": "A"
            }
          ],
          "thresholds": "",
          "title": "Allocated Used",
          "type": "singlestat",
          "valueFontSize": "80%",
          "valueMaps": [
            {
              "op": "=",
              "text": "N/A",
              "value": "null"
            }
          ],
          "valueName": "current"
        },
        {
          "cacheTimeout": null,
          "colorBackground": false,
          "colorValue": false,
          "colors": [
            "#C4162A",
            "#1F60C4",
            "#37872D"
          ],
          "datasource": "${DS_PROMETHEUS}",
          "decimals": 1,
          "description": "Allocated Carriers - Allocated Blocks\n\n* [erts_alloc](http://erlang.org/doc/man/erts_alloc.html)\n* [The Memory Subsystem](https://github.com/happi/theBeamBook/blob/master/chapters/memory.asciidoc)",
          "format": "decbytes",
          "gauge": {
            "maxValue": 100,
            "minValue": 0,
            "show": false,
            "thresholdLabels": true,
            "thresholdMarkers": true
          },
          "gridPos": {
            "h": 3,
            "w": 4,
            "x": 12,
            "y": 0
          },
          "id": 216,
          "interval": null,
          "links": [],
          "mappingType": 1,
          "mappingTypes": [
            {
              "name": "value to text",
              "value": 1
            },
            {
              "name": "range to text",
              "value": 2
            }
          ],
          "maxDataPoints": 100,
          "nullPointMode": "connected",
          "nullText": null,
          "options": {},
          "postfix": "",
          "postfixFontSize": "50%",
          "prefix": "",
          "prefixFontSize": "50%",
          "rangeMaps": [
            {
              "from": "null",
              "text": "N/A",
              "to": "null"
            }
          ],
          "repeatDirection": "v",
          "sparkline": {
            "fillColor": "rgba(255, 255, 255, 0)",
            "full": false,
            "lineColor": "rgb(255, 255, 255)",
            "show": true
          },
          "tableColumn": "",
          "targets": [
            {
              "expr": "sum (erlang_vm_allocators{usage=\"carriers_size\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\", rabbitmq_node=\"$rabbitmq_node\"})\n-\nsum (erlang_vm_allocators{usage=\"blocks_size\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\", rabbitmq_node=\"$rabbitmq_node\"})",
              "format": "time_series",
              "intervalFactor": 1,
              "refId": "A"
            }
          ],
          "thresholds": "",
          "title": "Allocated Unused",
          "type": "singlestat",
          "valueFontSize": "80%",
          "valueMaps": [
            {
              "op": "=",
              "text": "N/A",
              "value": "null"
            }
          ],
          "valueName": "current"
        },
        {
          "cacheTimeout": null,
          "colorBackground": false,
          "colorValue": false,
          "colors": [
            "#C4162A",
            "#1F60C4",
            "#37872D"
          ],
          "datasource": "${DS_PROMETHEUS}",
          "decimals": 1,
          "description": "Total Size of Allocated Carriers\n\nMemory that is reserved by the Erlang VM, which fits  one of the following descriptions:\n\n* actively used memory\n* memory given by the OS, yet-to-be-used\n* deallocated memory kept around before it is destroyed\n* carrier gaps in multi-block carriers (a.k.a. memory fragmentation)\n\nThe total size of allocated carriers can be either larger or smaller than the Erlang VM system process RSS memory.\n\n* [erts_alloc](http://erlang.org/doc/man/erts_alloc.html)\n* [The Memory Subsystem](https://github.com/happi/theBeamBook/blob/master/chapters/memory.asciidoc)",
          "format": "decbytes",
          "gauge": {
            "maxValue": 100,
            "minValue": 0,
            "show": false,
            "thresholdLabels": true,
            "thresholdMarkers": true
          },
          "gridPos": {
            "h": 3,
            "w": 4,
            "x": 16,
            "y": 0
          },
          "id": 188,
          "interval": null,
          "links": [],
          "mappingType": 1,
          "mappingTypes": [
            {
              "name": "value to text",
              "value": 1
            },
            {
              "name": "range to text",
              "value": 2
            }
          ],
          "maxDataPoints": 100,
          "nullPointMode": "connected",
          "nullText": null,
          "options": {},
          "postfix": "",
          "postfixFontSize": "50%",
          "prefix": "",
          "prefixFontSize": "50%",
          "rangeMaps": [
            {
              "from": "null",
              "text": "N/A",
              "to": "null"
            }
          ],
          "repeatDirection": "v",
          "sparkline": {
            "fillColor": "rgba(255, 255, 255, 0)",
            "full": false,
            "lineColor": "rgb(255, 255, 255)",
            "show": true
          },
          "tableColumn": "",
          "targets": [
            {
              "expr": "sum (erlang_vm_allocators{usage=\"carriers_size\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\", rabbitmq_node=\"$rabbitmq_node\"})",
              "format": "time_series",
              "intervalFactor": 1,
              "refId": "A"
            }
          ],
          "thresholds": "",
          "title": "Allocated Total",
          "type": "singlestat",
          "valueFontSize": "80%",
          "valueMaps": [
            {
              "op": "=",
              "text": "N/A",
              "value": "null"
            }
          ],
          "valueName": "current"
        },
        {
          "cacheTimeout": null,
          "colorBackground": false,
          "colorValue": false,
          "colors": [
            "#C4162A",
            "#1F60C4",
            "#37872D"
          ],
          "datasource": "${DS_PROMETHEUS}",
          "decimals": 1,
          "description": "Erlang VM Resident Set Size (RSS)\n\nAs reported by the OS",
          "format": "decbytes",
          "gauge": {
            "maxValue": 100,
            "minValue": 0,
            "show": false,
            "thresholdLabels": true,
            "thresholdMarkers": true
          },
          "gridPos": {
            "h": 3,
            "w": 4,
            "x": 20,
            "y": 0
          },
          "id": 214,
          "interval": null,
          "links": [],
          "mappingType": 1,
          "mappingTypes": [
            {
              "name": "value to text",
              "value": 1
            },
            {
              "name": "range to text",
              "value": 2
            }
          ],
          "maxDataPoints": 100,
          "nullPointMode": "connected",
          "nullText": null,
          "options": {},
          "postfix": "",
          "postfixFontSize": "50%",
          "prefix": "",
          "prefixFontSize": "50%",
          "rangeMaps": [
            {
              "from": "null",
              "text": "N/A",
              "to": "null"
            }
          ],
          "repeatDirection": "v",
          "sparkline": {
            "fillColor": "rgba(255, 255, 255, 0)",
            "full": false,
            "lineColor": "rgb(255, 255, 255)",
            "show": true
          },
          "tableColumn": "",
          "targets": [
            {
              "expr": "sum (rabbitmq_process_resident_memory_bytes * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\", rabbitmq_node=\"$rabbitmq_node\"})",
              "format": "time_series",
              "intervalFactor": 1,
              "refId": "A"
            }
          ],
          "thresholds": "",
          "title": "Resident Set Size",
          "type": "singlestat",
          "valueFontSize": "80%",
          "valueMaps": [
            {
              "op": "=",
              "text": "N/A",
              "value": "null"
            }
          ],
          "valueName": "current"
        },
        {
          "columns": [
            {
              "text": "Min",
              "value": "min"
            },
            {
              "text": "Max",
              "value": "max"
            },
            {
              "text": "Avg",
              "value": "avg"
            },
            {
              "text": "Current",
              "value": "current"
            }
          ],
          "datasource": "${DS_PROMETHEUS}",
          "fontSize": "100%",
          "gridPos": {
            "h": 7,
            "w": 8,
            "x": 0,
            "y": 3
          },
          "id": 59,
          "options": {},
          "pageSize": null,
          "pluginVersion": "6.4.1",
          "scroll": true,
          "showHeader": true,
          "sort": {
            "col": 3,
            "desc": true
          },
          "styles": [
            {
              "alias": "",
              "align": "auto",
              "colorMode": null,
              "colors": [
                "rgba(245, 54, 54, 0.9)",
                "rgba(237, 129, 40, 0.89)",
                "rgba(50, 172, 45, 0.97)"
              ],
              "dateFormat": "YYYY-MM-DD HH:mm:ss",
              "decimals": 0,
              "mappingType": 1,
              "pattern": "Metric",
              "thresholds": [],
              "type": "string",
              "unit": "short"
            },
            {
              "alias": "",
              "align": "auto",
              "colorMode": null,
              "colors": [
                "rgba(245, 54, 54, 0.9)",
                "rgba(237, 129, 40, 0.89)",
                "rgba(50, 172, 45, 0.97)"
              ],
              "dateFormat": "YYYY-MM-DD HH:mm:ss",
              "decimals": 1,
              "mappingType": 1,
              "pattern": "/.*/",
              "thresholds": [],
              "type": "number",
              "unit": "decbytes"
            }
          ],
          "targets": [
            {
              "expr": "rabbitmq_process_resident_memory_bytes * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\", rabbitmq_node=\"$rabbitmq_node\"}",
              "legendFormat": "Resident Set Size",
              "refId": "A"
            },
            {
              "expr": "sum (erlang_vm_allocators{usage=\"blocks_size\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\", rabbitmq_node=\"$rabbitmq_node\"})",
              "legendFormat": "Allocated Used",
              "refId": "B"
            },
            {
              "expr": "sum (erlang_vm_allocators{usage=\"carriers_size\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\", rabbitmq_node=\"$rabbitmq_node\"})\n-\nsum (erlang_vm_allocators{usage=\"blocks_size\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\", rabbitmq_node=\"$rabbitmq_node\"})",
              "legendFormat": "Allocated Unused",
              "refId": "C"
            }
          ],
          "timeFrom": null,
          "timeShift": null,
          "title": "",
          "transform": "timeseries_aggregations",
          "type": "table"
        },
        {
          "aliasColors": {},
          "bars": false,
          "cacheTimeout": null,
          "dashLength": 10,
          "dashes": false,
          "datasource": "${DS_PROMETHEUS}",
          "fill": 0,
          "fillGradient": 0,
          "gridPos": {
            "h": 7,
            "w": 16,
            "x": 8,
            "y": 3
          },
          "hiddenSeries": false,
          "id": 61,
          "legend": {
            "alignAsTable": false,
            "avg": false,
            "current": false,
            "max": false,
            "min": false,
            "rightSide": false,
            "show": true,
            "sort": "current",
            "sortDesc": true,
            "total": false,
            "values": false
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "options": {
            "dataLinks": []
          },
          "percentage": false,
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "repeatDirection": "v",
          "seriesOverrides": [
            {
              "alias": "Allocated Used",
              "color": "#37872D"
            },
            {
              "alias": "Allocated Unused",
              "color": "#FADE2A"
            },
            {
              "alias": "Resident Set Size",
              "color": "#C4162A",
              "stack": false
            }
          ],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "expr": "rabbitmq_process_resident_memory_bytes * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\", rabbitmq_node=\"$rabbitmq_node\"}",
              "format": "time_series",
              "instant": false,
              "intervalFactor": 1,
              "legendFormat": "Resident Set Size",
              "refId": "A"
            },
            {
              "expr": "sum (erlang_vm_allocators{usage=\"blocks_size\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\", rabbitmq_node=\"$rabbitmq_node\"})",
              "legendFormat": "Allocated Used",
              "refId": "B"
            },
            {
              "expr": "sum (erlang_vm_allocators{usage=\"carriers_size\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\", rabbitmq_node=\"$rabbitmq_node\"})\n-\nsum (erlang_vm_allocators{usage=\"blocks_size\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\", rabbitmq_node=\"$rabbitmq_node\"})",
              "legendFormat": "Allocated Unused",
              "refId": "C"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "",
          "tooltip": {
            "shared": true,
            "sort": 2,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "decimals": 1,
              "format": "decbytes",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": "0",
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "collapsed": false,
          "datasource": "${DS_PROMETHEUS}",
          "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 10
          },
          "id": 226,
          "panels": [],
          "title": "Allocated by Allocator Type",
          "type": "row"
        },
        {
          "columns": [
            {
              "text": "Min",
              "value": "min"
            },
            {
              "text": "Max",
              "value": "max"
            },
            {
              "text": "Avg",
              "value": "avg"
            },
            {
              "text": "Current",
              "value": "current"
            }
          ],
          "datasource": "${DS_PROMETHEUS}",
          "description": "",
          "fontSize": "100%",
          "gridPos": {
            "h": 10,
            "w": 8,
            "x": 0,
            "y": 11
          },
          "id": 55,
          "options": {},
          "pageSize": null,
          "pluginVersion": "6.4.1",
          "scroll": true,
          "showHeader": true,
          "sort": {
            "col": 3,
            "desc": true
          },
          "styles": [
            {
              "alias": "Memory Allocator",
              "align": "auto",
              "colorMode": null,
              "colors": [
                "rgba(245, 54, 54, 0.9)",
                "rgba(237, 129, 40, 0.89)",
                "rgba(50, 172, 45, 0.97)"
              ],
              "dateFormat": "YYYY-MM-DD HH:mm:ss",
              "decimals": 0,
              "mappingType": 1,
              "pattern": "Metric",
              "thresholds": [],
              "type": "string",
              "unit": "short"
            },
            {
              "alias": "",
              "align": "auto",
              "colorMode": null,
              "colors": [
                "rgba(245, 54, 54, 0.9)",
                "rgba(237, 129, 40, 0.89)",
                "rgba(50, 172, 45, 0.97)"
              ],
              "dateFormat": "YYYY-MM-DD HH:mm:ss",
              "decimals": 1,
              "mappingType": 1,
              "pattern": "/.*/",
              "thresholds": [],
              "type": "number",
              "unit": "decbytes"
            }
          ],
          "targets": [
            {
              "expr": "sum by(alloc) (erlang_vm_allocators{usage=\"carriers_size\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\", rabbitmq_node=\"$rabbitmq_node\"})",
              "legendFormat": "{{alloc}}",
              "refId": "A"
            }
          ],
          "timeFrom": null,
          "timeShift": null,
          "title": "",
          "transform": "timeseries_aggregations",
          "type": "table"
        },
        {
          "aliasColors": {},
          "bars": false,
          "cacheTimeout": null,
          "dashLength": 10,
          "dashes": false,
          "datasource": "${DS_PROMETHEUS}",
          "fill": 0,
          "fillGradient": 0,
          "gridPos": {
            "h": 10,
            "w": 16,
            "x": 8,
            "y": 11
          },
          "hiddenSeries": false,
          "id": 53,
          "legend": {
            "alignAsTable": false,
            "avg": false,
            "current": false,
            "max": false,
            "min": false,
            "rightSide": false,
            "show": true,
            "sort": "current",
            "sortDesc": true,
            "total": false,
            "values": false
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "options": {
            "dataLinks": []
          },
          "percentage": false,
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "repeatDirection": "v",
          "seriesOverrides": [
            {
              "alias": "binary_alloc"
            }
          ],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "expr": "sum by(alloc) (erlang_vm_allocators{usage=\"carriers_size\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\", rabbitmq_node=\"$rabbitmq_node\"})",
              "format": "time_series",
              "instant": false,
              "intervalFactor": 1,
              "legendFormat": "{{alloc}}",
              "refId": "A"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "",
          "tooltip": {
            "shared": true,
            "sort": 2,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "decimals": 1,
              "format": "decbytes",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": "0",
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "collapsed": false,
          "datasource": "${DS_PROMETHEUS}",
          "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 21
          },
          "id": 63,
          "panels": [],
          "repeat": "memory_allocator",
          "title": "$memory_allocator",
          "type": "row"
        },
        {
          "cacheTimeout": null,
          "colorBackground": false,
          "colorValue": true,
          "colors": [
            "#E02F44",
            "#3274D9",
            "#56A64B"
          ],
          "datasource": "${DS_PROMETHEUS}",
          "decimals": 1,
          "format": "percent",
          "gauge": {
            "maxValue": 100,
            "minValue": 0,
            "show": false,
            "thresholdLabels": false,
            "thresholdMarkers": true
          },
          "gridPos": {
            "h": 3,
            "w": 4,
            "x": 0,
            "y": 22
          },
          "id": 20,
          "interval": null,
          "links": [],
          "mappingType": 1,
          "mappingTypes": [
            {
              "name": "value to text",
              "value": 1
            },
            {
              "name": "range to text",
              "value": 2
            }
          ],
          "maxDataPoints": 100,
          "nullPointMode": "connected",
          "nullText": null,
          "options": {},
          "postfix": "",
          "postfixFontSize": "50%",
          "prefix": "",
          "prefixFontSize": "50%",
          "rangeMaps": [
            {
              "from": "null",
              "text": "N/A",
              "to": "null"
            }
          ],
          "sparkline": {
            "fillColor": "rgba(255, 255, 255, 0)",
            "full": false,
            "lineColor": "rgb(255, 255, 255)",
            "show": true
          },
          "tableColumn": "",
          "targets": [
            {
              "expr": "sum (erlang_vm_allocators{alloc=~\"$memory_allocator\", usage=\"blocks_size\", kind=\"mbcs\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\", rabbitmq_node=\"$rabbitmq_node\"})\n/\nsum (erlang_vm_allocators{alloc=~\"$memory_allocator\", usage=\"carriers_size\", kind=\"mbcs\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\", rabbitmq_node=\"$rabbitmq_node\"})\n* 100",
              "format": "time_series",
              "instant": false,
              "intervalFactor": 1,
              "refId": "A"
            }
          ],
          "thresholds": "50,75",
          "title": "Multiblock - Utilization",
          "type": "singlestat",
          "valueFontSize": "80%",
          "valueMaps": [
            {
              "op": "=",
              "text": "N/A",
              "value": "null"
            }
          ],
          "valueName": "current"
        },
        {
          "cacheTimeout": null,
          "colorBackground": false,
          "colorValue": false,
          "colors": [
            "#C4162A",
            "#1F60C4",
            "#37872D"
          ],
          "datasource": "${DS_PROMETHEUS}",
          "decimals": 1,
          "format": "decbytes",
          "gauge": {
            "maxValue": 100,
            "minValue": 0,
            "show": false,
            "thresholdLabels": false,
            "thresholdMarkers": true
          },
          "gridPos": {
            "h": 3,
            "w": 2,
            "x": 4,
            "y": 22
          },
          "id": 234,
          "interval": null,
          "links": [],
          "mappingType": 1,
          "mappingTypes": [
            {
              "name": "value to text",
              "value": 1
            },
            {
              "name": "range to text",
              "value": 2
            }
          ],
          "maxDataPoints": 100,
          "nullPointMode": "connected",
          "nullText": null,
          "options": {},
          "postfix": "",
          "postfixFontSize": "50%",
          "prefix": "",
          "prefixFontSize": "50%",
          "rangeMaps": [
            {
              "from": "null",
              "text": "N/A",
              "to": "null"
            }
          ],
          "sparkline": {
            "fillColor": "rgba(255, 255, 255, 0)",
            "full": false,
            "lineColor": "rgb(255, 255, 255)",
            "show": true
          },
          "tableColumn": "",
          "targets": [
            {
              "expr": "sum (erlang_vm_allocators{kind=\"mbcs\", alloc=\"$memory_allocator\", usage=\"carriers_size\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\", rabbitmq_node=\"$rabbitmq_node\"})\n/\nsum (erlang_vm_allocators{kind=\"mbcs\", alloc=\"$memory_allocator\", usage=\"carriers\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\", rabbitmq_node=\"$rabbitmq_node\"})",
              "format": "time_series",
              "instant": false,
              "intervalFactor": 1,
              "refId": "A"
            }
          ],
          "thresholds": "",
          "title": "MB-C",
          "type": "singlestat",
          "valueFontSize": "50%",
          "valueMaps": [
            {
              "op": "=",
              "text": "N/A",
              "value": "null"
            }
          ],
          "valueName": "current"
        },
        {
          "cacheTimeout": null,
          "colorBackground": false,
          "colorValue": false,
          "colors": [
            "#C4162A",
            "#1F60C4",
            "#37872D"
          ],
          "datasource": "${DS_PROMETHEUS}",
          "decimals": 1,
          "format": "decbytes",
          "gauge": {
            "maxValue": 100,
            "minValue": 0,
            "show": false,
            "thresholdLabels": false,
            "thresholdMarkers": true
          },
          "gridPos": {
            "h": 3,
            "w": 2,
            "x": 6,
            "y": 22
          },
          "id": 236,
          "interval": null,
          "links": [],
          "mappingType": 1,
          "mappingTypes": [
            {
              "name": "value to text",
              "value": 1
            },
            {
              "name": "range to text",
              "value": 2
            }
          ],
          "maxDataPoints": 100,
          "nullPointMode": "connected",
          "nullText": null,
          "options": {},
          "postfix": "",
          "postfixFontSize": "50%",
          "prefix": "",
          "prefixFontSize": "50%",
          "rangeMaps": [
            {
              "from": "null",
              "text": "N/A",
              "to": "null"
            }
          ],
          "sparkline": {
            "fillColor": "rgba(255, 255, 255, 0)",
            "full": false,
            "lineColor": "rgb(255, 255, 255)",
            "show": true
          },
          "tableColumn": "",
          "targets": [
            {
              "expr": "sum (erlang_vm_allocators{kind=\"mbcs\", alloc=\"$memory_allocator\", usage=\"blocks_size\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\", rabbitmq_node=\"$rabbitmq_node\"})\n/\nsum (erlang_vm_allocators{kind=\"mbcs\", alloc=\"$memory_allocator\", usage=\"blocks\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\", rabbitmq_node=\"$rabbitmq_node\"})",
              "format": "time_series",
              "instant": false,
              "intervalFactor": 1,
              "refId": "A"
            }
          ],
          "thresholds": "",
          "title": "MB-B",
          "type": "singlestat",
          "valueFontSize": "50%",
          "valueMaps": [
            {
              "op": "=",
              "text": "N/A",
              "value": "null"
            }
          ],
          "valueName": "current"
        },
        {
          "cacheTimeout": null,
          "colorBackground": false,
          "colorValue": true,
          "colors": [
            "#E02F44",
            "#3274D9",
            "#56A64B"
          ],
          "datasource": "${DS_PROMETHEUS}",
          "decimals": 1,
          "format": "percent",
          "gauge": {
            "maxValue": 100,
            "minValue": 0,
            "show": false,
            "thresholdLabels": false,
            "thresholdMarkers": true
          },
          "gridPos": {
            "h": 3,
            "w": 4,
            "x": 8,
            "y": 22
          },
          "id": 223,
          "interval": null,
          "links": [],
          "mappingType": 1,
          "mappingTypes": [
            {
              "name": "value to text",
              "value": 1
            },
            {
              "name": "range to text",
              "value": 2
            }
          ],
          "maxDataPoints": 100,
          "nullPointMode": "connected",
          "nullText": null,
          "options": {},
          "postfix": "",
          "postfixFontSize": "50%",
          "prefix": "",
          "prefixFontSize": "50%",
          "rangeMaps": [
            {
              "from": "null",
              "text": "N/A",
              "to": "null"
            }
          ],
          "sparkline": {
            "fillColor": "rgba(255, 255, 255, 0)",
            "full": false,
            "lineColor": "rgb(255, 255, 255)",
            "show": true
          },
          "tableColumn": "",
          "targets": [
            {
              "expr": "sum (erlang_vm_allocators{alloc=~\"$memory_allocator\", usage=\"blocks_size\", kind=\"mbcs_pool\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\", rabbitmq_node=\"$rabbitmq_node\"})\n/\nsum (erlang_vm_allocators{alloc=~\"$memory_allocator\", usage=\"carriers_size\", kind=\"mbcs_pool\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\", rabbitmq_node=\"$rabbitmq_node\"})\n* 100",
              "format": "time_series",
              "instant": false,
              "intervalFactor": 1,
              "refId": "A"
            }
          ],
          "thresholds": "50,75",
          "title": "Multiblock Pool - Utilization",
          "type": "singlestat",
          "valueFontSize": "80%",
          "valueMaps": [
            {
              "op": "=",
              "text": "N/A",
              "value": "null"
            }
          ],
          "valueName": "current"
        },
        {
          "cacheTimeout": null,
          "colorBackground": false,
          "colorValue": false,
          "colors": [
            "#C4162A",
            "#1F60C4",
            "#37872D"
          ],
          "datasource": "${DS_PROMETHEUS}",
          "decimals": 1,
          "format": "decbytes",
          "gauge": {
            "maxValue": 100,
            "minValue": 0,
            "show": false,
            "thresholdLabels": false,
            "thresholdMarkers": true
          },
          "gridPos": {
            "h": 3,
            "w": 2,
            "x": 12,
            "y": 22
          },
          "id": 238,
          "interval": null,
          "links": [],
          "mappingType": 1,
          "mappingTypes": [
            {
              "name": "value to text",
              "value": 1
            },
            {
              "name": "range to text",
              "value": 2
            }
          ],
          "maxDataPoints": 100,
          "nullPointMode": "connected",
          "nullText": null,
          "options": {},
          "postfix": "",
          "postfixFontSize": "50%",
          "prefix": "",
          "prefixFontSize": "50%",
          "rangeMaps": [
            {
              "from": "null",
              "text": "N/A",
              "to": "null"
            }
          ],
          "sparkline": {
            "fillColor": "rgba(255, 255, 255, 0)",
            "full": false,
            "lineColor": "rgb(255, 255, 255)",
            "show": true
          },
          "tableColumn": "",
          "targets": [
            {
              "expr": "sum (erlang_vm_allocators{kind=\"mbcs_pool\", alloc=\"$memory_allocator\", usage=\"carriers_size\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\", rabbitmq_node=\"$rabbitmq_node\"})\n/\nsum (erlang_vm_allocators{kind=\"mbcs_pool\", alloc=\"$memory_allocator\", usage=\"carriers\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\", rabbitmq_node=\"$rabbitmq_node\"})",
              "format": "time_series",
              "instant": false,
              "intervalFactor": 1,
              "refId": "A"
            }
          ],
          "thresholds": "",
          "title": "MBP-C",
          "type": "singlestat",
          "valueFontSize": "50%",
          "valueMaps": [
            {
              "op": "=",
              "text": "N/A",
              "value": "null"
            }
          ],
          "valueName": "current"
        },
        {
          "cacheTimeout": null,
          "colorBackground": false,
          "colorValue": false,
          "colors": [
            "#C4162A",
            "#1F60C4",
            "#37872D"
          ],
          "datasource": "${DS_PROMETHEUS}",
          "decimals": 1,
          "format": "decbytes",
          "gauge": {
            "maxValue": 100,
            "minValue": 0,
            "show": false,
            "thresholdLabels": false,
            "thresholdMarkers": true
          },
          "gridPos": {
            "h": 3,
            "w": 2,
            "x": 14,
            "y": 22
          },
          "id": 241,
          "interval": null,
          "links": [],
          "mappingType": 1,
          "mappingTypes": [
            {
              "name": "value to text",
              "value": 1
            },
            {
              "name": "range to text",
              "value": 2
            }
          ],
          "maxDataPoints": 100,
          "nullPointMode": "connected",
          "nullText": null,
          "options": {},
          "postfix": "",
          "postfixFontSize": "50%",
          "prefix": "",
          "prefixFontSize": "50%",
          "rangeMaps": [
            {
              "from": "null",
              "text": "N/A",
              "to": "null"
            }
          ],
          "sparkline": {
            "fillColor": "rgba(255, 255, 255, 0)",
            "full": false,
            "lineColor": "rgb(255, 255, 255)",
            "show": true
          },
          "tableColumn": "",
          "targets": [
            {
              "expr": "sum (erlang_vm_allocators{kind=\"mbcs_pool\", alloc=\"$memory_allocator\", usage=\"blocks_size\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\", rabbitmq_node=\"$rabbitmq_node\"})\n/\nsum (erlang_vm_allocators{kind=\"mbcs_pool\", alloc=\"$memory_allocator\", usage=\"blocks\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\", rabbitmq_node=\"$rabbitmq_node\"})",
              "format": "time_series",
              "instant": false,
              "intervalFactor": 1,
              "refId": "A"
            }
          ],
          "thresholds": "",
          "title": "MBP-B",
          "type": "singlestat",
          "valueFontSize": "50%",
          "valueMaps": [
            {
              "op": "=",
              "text": "N/A",
              "value": "null"
            }
          ],
          "valueName": "current"
        },
        {
          "cacheTimeout": null,
          "colorBackground": false,
          "colorValue": true,
          "colors": [
            "#E02F44",
            "#3274D9",
            "#56A64B"
          ],
          "datasource": "${DS_PROMETHEUS}",
          "decimals": 1,
          "format": "percent",
          "gauge": {
            "maxValue": 100,
            "minValue": 0,
            "show": false,
            "thresholdLabels": false,
            "thresholdMarkers": true
          },
          "gridPos": {
            "h": 3,
            "w": 4,
            "x": 16,
            "y": 22
          },
          "id": 231,
          "interval": null,
          "links": [],
          "mappingType": 1,
          "mappingTypes": [
            {
              "name": "value to text",
              "value": 1
            },
            {
              "name": "range to text",
              "value": 2
            }
          ],
          "maxDataPoints": 100,
          "nullPointMode": "connected",
          "nullText": null,
          "options": {},
          "postfix": "",
          "postfixFontSize": "50%",
          "prefix": "",
          "prefixFontSize": "50%",
          "rangeMaps": [
            {
              "from": "null",
              "text": "N/A",
              "to": "null"
            }
          ],
          "sparkline": {
            "fillColor": "rgba(255, 255, 255, 0)",
            "full": false,
            "lineColor": "rgb(255, 255, 255)",
            "show": true
          },
          "tableColumn": "",
          "targets": [
            {
              "expr": "sum (erlang_vm_allocators{alloc=~\"$memory_allocator\", usage=\"blocks_size\", kind=\"sbcs\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\", rabbitmq_node=\"$rabbitmq_node\"})\n/\nsum (erlang_vm_allocators{alloc=~\"$memory_allocator\", usage=\"carriers_size\", kind=\"sbcs\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\", rabbitmq_node=\"$rabbitmq_node\"})\n* 100",
              "format": "time_series",
              "instant": false,
              "intervalFactor": 1,
              "refId": "A"
            }
          ],
          "thresholds": "50,75",
          "title": "Singleblock - Utilization",
          "type": "singlestat",
          "valueFontSize": "80%",
          "valueMaps": [
            {
              "op": "=",
              "text": "N/A",
              "value": "null"
            }
          ],
          "valueName": "current"
        },
        {
          "cacheTimeout": null,
          "colorBackground": false,
          "colorValue": false,
          "colors": [
            "#C4162A",
            "#1F60C4",
            "#37872D"
          ],
          "datasource": "${DS_PROMETHEUS}",
          "decimals": 1,
          "format": "decbytes",
          "gauge": {
            "maxValue": 100,
            "minValue": 0,
            "show": false,
            "thresholdLabels": false,
            "thresholdMarkers": true
          },
          "gridPos": {
            "h": 3,
            "w": 2,
            "x": 20,
            "y": 22
          },
          "id": 242,
          "interval": null,
          "links": [],
          "mappingType": 1,
          "mappingTypes": [
            {
              "name": "value to text",
              "value": 1
            },
            {
              "name": "range to text",
              "value": 2
            }
          ],
          "maxDataPoints": 100,
          "nullPointMode": "connected",
          "nullText": null,
          "options": {},
          "postfix": "",
          "postfixFontSize": "50%",
          "prefix": "",
          "prefixFontSize": "50%",
          "rangeMaps": [
            {
              "from": "null",
              "text": "N/A",
              "to": "null"
            }
          ],
          "sparkline": {
            "fillColor": "rgba(255, 255, 255, 0)",
            "full": false,
            "lineColor": "rgb(255, 255, 255)",
            "show": true
          },
          "tableColumn": "",
          "targets": [
            {
              "expr": "sum (erlang_vm_allocators{kind=\"sbcs\", alloc=\"$memory_allocator\", usage=\"carriers_size\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\", rabbitmq_node=\"$rabbitmq_node\"})\n/\nsum (erlang_vm_allocators{kind=\"sbcs\", alloc=\"$memory_allocator\", usage=\"carriers\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\", rabbitmq_node=\"$rabbitmq_node\"})",
              "format": "time_series",
              "instant": false,
              "intervalFactor": 1,
              "refId": "A"
            }
          ],
          "thresholds": "",
          "title": "SB-C",
          "type": "singlestat",
          "valueFontSize": "50%",
          "valueMaps": [
            {
              "op": "=",
              "text": "N/A",
              "value": "null"
            }
          ],
          "valueName": "current"
        },
        {
          "cacheTimeout": null,
          "colorBackground": false,
          "colorValue": false,
          "colors": [
            "#C4162A",
            "#1F60C4",
            "#37872D"
          ],
          "datasource": "${DS_PROMETHEUS}",
          "decimals": 1,
          "format": "decbytes",
          "gauge": {
            "maxValue": 100,
            "minValue": 0,
            "show": false,
            "thresholdLabels": false,
            "thresholdMarkers": true
          },
          "gridPos": {
            "h": 3,
            "w": 2,
            "x": 22,
            "y": 22
          },
          "id": 243,
          "interval": null,
          "links": [],
          "mappingType": 1,
          "mappingTypes": [
            {
              "name": "value to text",
              "value": 1
            },
            {
              "name": "range to text",
              "value": 2
            }
          ],
          "maxDataPoints": 100,
          "nullPointMode": "connected",
          "nullText": null,
          "options": {},
          "postfix": "",
          "postfixFontSize": "50%",
          "prefix": "",
          "prefixFontSize": "50%",
          "rangeMaps": [
            {
              "from": "null",
              "text": "N/A",
              "to": "null"
            }
          ],
          "sparkline": {
            "fillColor": "rgba(255, 255, 255, 0)",
            "full": false,
            "lineColor": "rgb(255, 255, 255)",
            "show": true
          },
          "tableColumn": "",
          "targets": [
            {
              "expr": "sum (erlang_vm_allocators{kind=\"sbcs\", alloc=\"$memory_allocator\", usage=\"blocks_size\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\", rabbitmq_node=\"$rabbitmq_node\"})\n/\nsum (erlang_vm_allocators{kind=\"sbcs\", alloc=\"$memory_allocator\", usage=\"blocks\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\", rabbitmq_node=\"$rabbitmq_node\"})",
              "format": "time_series",
              "instant": false,
              "intervalFactor": 1,
              "refId": "A"
            }
          ],
          "thresholds": "",
          "title": "SB-B",
          "type": "singlestat",
          "valueFontSize": "50%",
          "valueMaps": [
            {
              "op": "=",
              "text": "N/A",
              "value": "null"
            }
          ],
          "valueName": "current"
        },
        {
          "columns": [
            {
              "text": "Min",
              "value": "min"
            },
            {
              "text": "Max",
              "value": "max"
            },
            {
              "text": "Avg",
              "value": "avg"
            },
            {
              "text": "Current",
              "value": "current"
            }
          ],
          "datasource": "${DS_PROMETHEUS}",
          "description": "",
          "fontSize": "100%",
          "gridPos": {
            "h": 7,
            "w": 8,
            "x": 0,
            "y": 25
          },
          "id": 227,
          "options": {},
          "pageSize": null,
          "pluginVersion": "6.4.1",
          "scroll": true,
          "showHeader": true,
          "sort": {
            "col": 0,
            "desc": false
          },
          "styles": [
            {
              "alias": "",
              "align": "auto",
              "colorMode": null,
              "colors": [
                "rgba(245, 54, 54, 0.9)",
                "rgba(237, 129, 40, 0.89)",
                "rgba(50, 172, 45, 0.97)"
              ],
              "dateFormat": "YYYY-MM-DD HH:mm:ss",
              "decimals": 0,
              "mappingType": 1,
              "pattern": "Metric",
              "thresholds": [],
              "type": "string",
              "unit": "short"
            },
            {
              "alias": "",
              "align": "auto",
              "colorMode": null,
              "colors": [
                "rgba(245, 54, 54, 0.9)",
                "rgba(237, 129, 40, 0.89)",
                "rgba(50, 172, 45, 0.97)"
              ],
              "dateFormat": "YYYY-MM-DD HH:mm:ss",
              "decimals": 1,
              "mappingType": 1,
              "pattern": "/.*/",
              "thresholds": [],
              "type": "number",
              "unit": "decbytes"
            }
          ],
          "targets": [
            {
              "expr": "sum (erlang_vm_allocators{alloc=~\"$memory_allocator\", usage=\"blocks_size\", kind=\"mbcs\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\", rabbitmq_node=\"$rabbitmq_node\"})",
              "legendFormat": "Multiblock - Used",
              "refId": "A"
            },
            {
              "expr": "sum (erlang_vm_allocators{alloc=~\"$memory_allocator\", usage=\"carriers_size\", kind=\"mbcs\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\", rabbitmq_node=\"$rabbitmq_node\"})\n-\nsum (erlang_vm_allocators{alloc=~\"$memory_allocator\", usage=\"blocks_size\", kind=\"mbcs\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\", rabbitmq_node=\"$rabbitmq_node\"})",
              "legendFormat": "Multiblock - Unused",
              "refId": "B"
            },
            {
              "expr": "sum (erlang_vm_allocators{alloc=~\"$memory_allocator\", usage=\"blocks_size\", kind=\"mbcs_pool\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\", rabbitmq_node=\"$rabbitmq_node\"})",
              "legendFormat": "Multiblock Pool - Used",
              "refId": "C"
            },
            {
              "expr": "sum (erlang_vm_allocators{alloc=~\"$memory_allocator\", usage=\"carriers_size\", kind=\"mbcs_pool\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\", rabbitmq_node=\"$rabbitmq_node\"})\n-\nsum (erlang_vm_allocators{alloc=~\"$memory_allocator\", usage=\"blocks_size\", kind=\"mbcs_pool\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\", rabbitmq_node=\"$rabbitmq_node\"})",
              "legendFormat": "Multiblock Pool - Unused",
              "refId": "D"
            },
            {
              "expr": "sum (erlang_vm_allocators{alloc=~\"$memory_allocator\", usage=\"blocks_size\", kind=\"sbcs\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\", rabbitmq_node=\"$rabbitmq_node\"})",
              "legendFormat": "Singleblock - Used",
              "refId": "E"
            },
            {
              "expr": "sum (erlang_vm_allocators{alloc=~\"$memory_allocator\", usage=\"carriers_size\", kind=\"sbcs\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\", rabbitmq_node=\"$rabbitmq_node\"})\n-\nsum (erlang_vm_allocators{alloc=~\"$memory_allocator\", usage=\"blocks_size\", kind=\"sbcs\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\", rabbitmq_node=\"$rabbitmq_node\"})",
              "legendFormat": "Singleblock - Unused",
              "refId": "F"
            }
          ],
          "timeFrom": null,
          "timeShift": null,
          "title": "$memory_allocator - Usage",
          "transform": "timeseries_aggregations",
          "type": "table"
        },
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "datasource": "${DS_PROMETHEUS}",
          "fill": 0,
          "fillGradient": 0,
          "gridPos": {
            "h": 7,
            "w": 16,
            "x": 8,
            "y": 25
          },
          "hiddenSeries": false,
          "id": 244,
          "legend": {
            "alignAsTable": false,
            "avg": false,
            "current": false,
            "max": false,
            "min": false,
            "rightSide": false,
            "show": true,
            "total": false,
            "values": false
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "options": {
            "dataLinks": []
          },
          "percentage": false,
          "pointradius": 0.5,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [
            {
              "alias": "Multiblock - Used",
              "color": "#1F60C4"
            },
            {
              "alias": "Multiblock - Unused",
              "color": "#8AB8FF"
            },
            {
              "alias": "Multiblock Pool - Used",
              "color": "#8F3BB8"
            },
            {
              "alias": "Multiblock Pool - Unused",
              "color": "#CA95E5"
            },
            {
              "alias": "Singleblock - Used",
              "color": "#FA6400"
            },
            {
              "alias": "Singleblock - Unused",
              "color": "#FFB357"
            }
          ],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "expr": "sum (erlang_vm_allocators{alloc=~\"$memory_allocator\", usage=\"blocks_size\", kind=\"mbcs\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\", rabbitmq_node=\"$rabbitmq_node\"})",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "Multiblock - Used",
              "refId": "A"
            },
            {
              "expr": "sum (erlang_vm_allocators{alloc=~\"$memory_allocator\", usage=\"carriers_size\", kind=\"mbcs\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\", rabbitmq_node=\"$rabbitmq_node\"})\n-\nsum (erlang_vm_allocators{alloc=~\"$memory_allocator\", usage=\"blocks_size\", kind=\"mbcs\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\", rabbitmq_node=\"$rabbitmq_node\"})",
              "legendFormat": "Multiblock - Unused",
              "refId": "B"
            },
            {
              "expr": "sum (erlang_vm_allocators{alloc=~\"$memory_allocator\", usage=\"blocks_size\", kind=\"mbcs_pool\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\", rabbitmq_node=\"$rabbitmq_node\"})",
              "legendFormat": "Multiblock Pool - Used",
              "refId": "C"
            },
            {
              "expr": "sum (erlang_vm_allocators{alloc=~\"$memory_allocator\", usage=\"carriers_size\", kind=\"mbcs_pool\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\", rabbitmq_node=\"$rabbitmq_node\"})\n-\nsum (erlang_vm_allocators{alloc=~\"$memory_allocator\", usage=\"blocks_size\", kind=\"mbcs_pool\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\", rabbitmq_node=\"$rabbitmq_node\"})",
              "legendFormat": "Multiblock Pool - Unused",
              "refId": "D"
            },
            {
              "expr": "sum (erlang_vm_allocators{alloc=~\"$memory_allocator\", usage=\"blocks_size\", kind=\"sbcs\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\", rabbitmq_node=\"$rabbitmq_node\"})",
              "legendFormat": "Singleblock - Used",
              "refId": "E"
            },
            {
              "expr": "sum (erlang_vm_allocators{alloc=~\"$memory_allocator\", usage=\"carriers_size\", kind=\"sbcs\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\", rabbitmq_node=\"$rabbitmq_node\"})\n-\nsum (erlang_vm_allocators{alloc=~\"$memory_allocator\", usage=\"blocks_size\", kind=\"sbcs\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\", rabbitmq_node=\"$rabbitmq_node\"})",
              "legendFormat": "Singleblock - Unused",
              "refId": "F"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "$memory_allocator - Usage",
          "tooltip": {
            "shared": true,
            "sort": 2,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "decimals": 1,
              "format": "decbytes",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": "0",
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "columns": [
            {
              "text": "Min",
              "value": "min"
            },
            {
              "text": "Max",
              "value": "max"
            },
            {
              "text": "Avg",
              "value": "avg"
            },
            {
              "text": "Current",
              "value": "current"
            }
          ],
          "datasource": "${DS_PROMETHEUS}",
          "description": "",
          "fontSize": "100%",
          "gridPos": {
            "h": 7,
            "w": 8,
            "x": 0,
            "y": 32
          },
          "id": 232,
          "options": {},
          "pageSize": null,
          "pluginVersion": "6.4.1",
          "scroll": true,
          "showHeader": true,
          "sort": {
            "col": 0,
            "desc": false
          },
          "styles": [
            {
              "alias": "",
              "align": "auto",
              "colorMode": null,
              "colors": [
                "rgba(245, 54, 54, 0.9)",
                "rgba(237, 129, 40, 0.89)",
                "rgba(50, 172, 45, 0.97)"
              ],
              "dateFormat": "YYYY-MM-DD HH:mm:ss",
              "decimals": 0,
              "mappingType": 1,
              "pattern": "Metric",
              "thresholds": [],
              "type": "string",
              "unit": "short"
            },
            {
              "alias": "",
              "align": "auto",
              "colorMode": null,
              "colors": [
                "rgba(245, 54, 54, 0.9)",
                "rgba(237, 129, 40, 0.89)",
                "rgba(50, 172, 45, 0.97)"
              ],
              "dateFormat": "YYYY-MM-DD HH:mm:ss",
              "decimals": 1,
              "mappingType": 1,
              "pattern": "/.*/",
              "thresholds": [],
              "type": "number",
              "unit": "decbytes"
            }
          ],
          "targets": [
            {
              "expr": "sum (erlang_vm_allocators{kind=\"mbcs\", alloc=\"$memory_allocator\", usage=\"carriers_size\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\", rabbitmq_node=\"$rabbitmq_node\"})\n/\nsum (erlang_vm_allocators{kind=\"mbcs\", alloc=\"$memory_allocator\", usage=\"carriers\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\", rabbitmq_node=\"$rabbitmq_node\"})",
              "legendFormat": "Multiblock - Carrier",
              "refId": "A"
            },
            {
              "expr": "sum (erlang_vm_allocators{kind=\"mbcs\", alloc=\"$memory_allocator\", usage=\"blocks_size\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\", rabbitmq_node=\"$rabbitmq_node\"})\n/\nsum (erlang_vm_allocators{kind=\"mbcs\", alloc=\"$memory_allocator\", usage=\"blocks\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\", rabbitmq_node=\"$rabbitmq_node\"})",
              "legendFormat": "Multiblock - Block",
              "refId": "B"
            },
            {
              "expr": "sum (erlang_vm_allocators{kind=\"mbcs_pool\", alloc=\"$memory_allocator\", usage=\"carriers_size\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\", rabbitmq_node=\"$rabbitmq_node\"})\n/\nsum (erlang_vm_allocators{kind=\"mbcs_pool\", alloc=\"$memory_allocator\", usage=\"carriers\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\", rabbitmq_node=\"$rabbitmq_node\"})",
              "legendFormat": "Multiblock Pool - Carrier",
              "refId": "C"
            },
            {
              "expr": "sum (erlang_vm_allocators{kind=\"mbcs_pool\", alloc=\"$memory_allocator\", usage=\"blocks_size\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\", rabbitmq_node=\"$rabbitmq_node\"})\n/\nsum (erlang_vm_allocators{kind=\"mbcs_pool\", alloc=\"$memory_allocator\", usage=\"blocks\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\", rabbitmq_node=\"$rabbitmq_node\"})",
              "legendFormat": "Multiblock Pool - Block",
              "refId": "D"
            },
            {
              "expr": "sum (erlang_vm_allocators{kind=\"sbcs\", alloc=\"$memory_allocator\", usage=\"carriers_size\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\", rabbitmq_node=\"$rabbitmq_node\"})\n/\nsum (erlang_vm_allocators{kind=\"sbcs\", alloc=\"$memory_allocator\", usage=\"carriers\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\", rabbitmq_node=\"$rabbitmq_node\"})",
              "legendFormat": "Singleblock - Carrier",
              "refId": "E"
            },
            {
              "expr": "sum (erlang_vm_allocators{kind=\"sbcs\", alloc=\"$memory_allocator\", usage=\"blocks_size\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\", rabbitmq_node=\"$rabbitmq_node\"})\n/\nsum (erlang_vm_allocators{kind=\"sbcs\", alloc=\"$memory_allocator\", usage=\"blocks\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\", rabbitmq_node=\"$rabbitmq_node\"})",
              "legendFormat": "Singleblock - Block",
              "refId": "F"
            }
          ],
          "timeFrom": null,
          "timeShift": null,
          "title": "$memory_allocator - Average Size",
          "transform": "timeseries_aggregations",
          "type": "table"
        },
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "datasource": "${DS_PROMETHEUS}",
          "fill": 0,
          "fillGradient": 0,
          "gridPos": {
            "h": 7,
            "w": 16,
            "x": 8,
            "y": 32
          },
          "hiddenSeries": false,
          "id": 235,
          "legend": {
            "alignAsTable": false,
            "avg": false,
            "current": false,
            "max": false,
            "min": false,
            "rightSide": false,
            "show": true,
            "total": false,
            "values": false
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "options": {
            "dataLinks": []
          },
          "percentage": false,
          "pointradius": 0.5,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [
            {
              "alias": "Multiblock - Block",
              "color": "#1F60C4"
            },
            {
              "alias": "Multiblock - Carrier",
              "color": "#8AB8FF"
            },
            {
              "alias": "Multiblock Pool - Block",
              "color": "#8F3BB8"
            },
            {
              "alias": "Multiblock Pool - Carrier",
              "color": "#CA95E5"
            },
            {
              "alias": "Singleblock - Block",
              "color": "#FA6400"
            },
            {
              "alias": "Singleblock - Carrier",
              "color": "#FFB357"
            }
          ],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "expr": "sum (erlang_vm_allocators{kind=\"mbcs\", alloc=\"$memory_allocator\", usage=\"blocks_size\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\", rabbitmq_node=\"$rabbitmq_node\"})\n/\nsum (erlang_vm_allocators{kind=\"mbcs\", alloc=\"$memory_allocator\", usage=\"blocks\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\", rabbitmq_node=\"$rabbitmq_node\"})",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "Multiblock - Block",
              "refId": "A"
            },
            {
              "expr": "sum (erlang_vm_allocators{kind=\"mbcs\", alloc=\"$memory_allocator\", usage=\"carriers_size\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\", rabbitmq_node=\"$rabbitmq_node\"})\n/\nsum (erlang_vm_allocators{kind=\"mbcs\", alloc=\"$memory_allocator\", usage=\"carriers\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\", rabbitmq_node=\"$rabbitmq_node\"})",
              "legendFormat": "Multiblock - Carrier",
              "refId": "B"
            },
            {
              "expr": "sum (erlang_vm_allocators{kind=\"mbcs_pool\", alloc=\"$memory_allocator\", usage=\"blocks_size\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\", rabbitmq_node=\"$rabbitmq_node\"})\n/\nsum (erlang_vm_allocators{kind=\"mbcs_pool\", alloc=\"$memory_allocator\", usage=\"blocks\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\", rabbitmq_node=\"$rabbitmq_node\"})",
              "legendFormat": "Multiblock Pool - Block",
              "refId": "C"
            },
            {
              "expr": "sum (erlang_vm_allocators{kind=\"mbcs_pool\", alloc=\"$memory_allocator\", usage=\"carriers_size\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\", rabbitmq_node=\"$rabbitmq_node\"})\n/\nsum (erlang_vm_allocators{kind=\"mbcs_pool\", alloc=\"$memory_allocator\", usage=\"carriers\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\", rabbitmq_node=\"$rabbitmq_node\"})",
              "legendFormat": "Multiblock Pool - Carrier",
              "refId": "D"
            },
            {
              "expr": "sum (erlang_vm_allocators{kind=\"sbcs\", alloc=\"$memory_allocator\", usage=\"blocks_size\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\", rabbitmq_node=\"$rabbitmq_node\"})\n/\nsum (erlang_vm_allocators{kind=\"sbcs\", alloc=\"$memory_allocator\", usage=\"blocks\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\", rabbitmq_node=\"$rabbitmq_node\"})",
              "legendFormat": "Singleblock - Block",
              "refId": "E"
            },
            {
              "expr": "sum (erlang_vm_allocators{kind=\"sbcs\", alloc=\"$memory_allocator\", usage=\"carriers_size\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\", rabbitmq_node=\"$rabbitmq_node\"})\n/\nsum (erlang_vm_allocators{kind=\"sbcs\", alloc=\"$memory_allocator\", usage=\"carriers\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\", rabbitmq_node=\"$rabbitmq_node\"})",
              "legendFormat": "Singleblock - Carrier",
              "refId": "F"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "$memory_allocator - Average Size",
          "tooltip": {
            "shared": true,
            "sort": 2,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "decimals": 1,
              "format": "decbytes",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": "0",
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        }
      ],
      "refresh": "15s",
      "schemaVersion": 22,
      "style": "dark",
      "tags": [
        "rabbitmq-prometheus"
      ],
      "templating": {
        "list": [
          {
            "current": {
              "selected": false,
              "text": "default",
              "value": "default"
            },
            "hide": 2,
            "includeAll": false,
            "label": "datasource",
            "multi": false,
            "name": "DS_PROMETHEUS",
            "options": [],
            "query": "prometheus",
            "refresh": 1,
            "regex": "",
            "skipUrlSync": false,
            "type": "datasource",
            "datasource": "${DS_PROMETHEUS}"
          },
          {
            "allValue": null,
            "current": {},
            "datasource": "${DS_PROMETHEUS}",
            "definition": "label_values(rabbitmq_identity_info, namespace)",
            "hide": 0,
            "includeAll": false,
            "label": "Namespace",
            "multi": false,
            "name": "namespace",
            "options": [],
            "query": "label_values(rabbitmq_identity_info, namespace)",
            "refresh": 2,
            "regex": "",
            "skipUrlSync": false,
            "sort": 1,
            "tagValuesQuery": "",
            "tags": [],
            "tagsQuery": "",
            "type": "query",
            "useTags": false
          },
          {
            "allValue": null,
            "current": {},
            "datasource": "${DS_PROMETHEUS}",
            "definition": "label_values(rabbitmq_identity_info{namespace=\"$namespace\"}, rabbitmq_cluster)",
            "hide": 0,
            "includeAll": false,
            "label": "RabbitMQ Cluster",
            "multi": false,
            "name": "rabbitmq_cluster",
            "options": [],
            "query": "label_values(rabbitmq_identity_info{namespace=\"$namespace\"}, rabbitmq_cluster)",
            "refresh": 2,
            "regex": "",
            "skipUrlSync": false,
            "sort": 1,
            "tagValuesQuery": "",
            "tags": [],
            "tagsQuery": "",
            "type": "query",
            "useTags": false
          },
          {
            "allValue": null,
            "current": {},
            "datasource": "${DS_PROMETHEUS}",
            "definition": "label_values(rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}, rabbitmq_node)",
            "hide": 0,
            "includeAll": false,
            "label": "RabbitMQ Node",
            "multi": false,
            "name": "rabbitmq_node",
            "options": [],
            "query": "label_values(rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}, rabbitmq_node)",
            "refresh": 2,
            "regex": "",
            "skipUrlSync": false,
            "sort": 1,
            "tagValuesQuery": "",
            "tags": [],
            "tagsQuery": "",
            "type": "query",
            "useTags": false
          },
          {
            "allValue": null,
            "current": {},
            "datasource": "${DS_PROMETHEUS}",
            "definition": "label_values(erlang_vm_allocators, alloc)",
            "hide": 0,
            "includeAll": true,
            "label": "Erlang Memory Allocator",
            "multi": true,
            "name": "memory_allocator",
            "options": [],
            "query": "label_values(erlang_vm_allocators, alloc)",
            "refresh": 1,
            "regex": "",
            "skipUrlSync": false,
            "sort": 1,
            "tagValuesQuery": "",
            "tags": [],
            "tagsQuery": "",
            "type": "query",
            "useTags": false
          }
        ]
      },
      "time": {
        "from": "now-15m",
        "to": "now"
      },
      "timepicker": {
        "refresh_intervals": [
          "15s",
          "30s",
          "1m",
          "5m",
          "10m"
        ],
        "time_options": [
          "5m",
          "15m",
          "1h",
          "6h",
          "12h",
          "24h",
          "2d",
          "7d",
          "30d"
        ]
      },
      "timezone": "",
      "title": "Erlang-Memory-Allocators",
      "uid": "o_rtdpWik",
      "version": 20210118,
      "__inputs": [
        {
          "name": "DS_PROMETHEUS",
          "label": "prometheus",
          "description": "",
          "type": "datasource",
          "pluginId": "prometheus",
          "pluginName": "Prometheus"
        }
      ]
    }
---
# Source: rabbitmq-observability/templates/grafana/dashboards/rabbitmq-alerts.yaml
apiVersion: integreatly.org/v1alpha1
kind: GrafanaDashboard
metadata:
  name: rabbitmq-alerts-grafana-dashboard
  namespace: default
  labels:
    grafana_dashboard: "true"
spec:
  json: |-
    {
      "__inputs": [
        {
          "name": "DS_PROMETHEUS",
          "label": "Prometheus",
          "description": "",
          "type": "datasource",
          "pluginId": "prometheus",
          "pluginName": "Prometheus"
        }
      ],
      "__requires": [
        {
          "type": "panel",
          "id": "flant-statusmap-panel",
          "name": "Statusmap",
          "version": "0.4.1"
        },
        {
          "type": "grafana",
          "id": "grafana",
          "name": "Grafana",
          "version": "7.4.5"
        },
        {
          "type": "datasource",
          "id": "prometheus",
          "name": "Prometheus",
          "version": "1.0.0"
        },
        {
          "type": "panel",
          "id": "stat",
          "name": "Stat",
          "version": ""
        },
        {
          "type": "panel",
          "id": "table",
          "name": "Table",
          "version": ""
        }
      ],
      "annotations": {
        "list": [
          {
            "datasource": "${DS_PROMETHEUS}",
            "enable": true,
            "expr": "ALERTS{rulesgroup=\"rabbitmq\", namespace=~\"$namespace\", rabbitmq_cluster=~\"$rabbitmq_cluster\", severity=~\"$severity\", alertname=~\"$alert_name\"}",
            "hide": true,
            "iconColor": "#1F60C4",
            "limit": 100,
            "name": "RabbitMQ Alerts Annotations",
            "showIn": 0,
            "step": "30s",
            "tags": [],
            "textFormat": "alert name: {{alertname}}, namespace: {{namespace}}, RabbitMQ cluster: {{rabbitmq_cluster}}, severity: {{severity}}",
            "titleFormat": "",
            "type": "tags",
            "useValueForTime": false
          },
          {
            "builtIn": 1,
            "datasource": "-- Grafana --",
            "enable": true,
            "hide": true,
            "iconColor": "rgba(0, 211, 255, 1)",
            "name": "Annotations & Alerts",
            "type": "dashboard"
          }
        ]
      },
      "description": "Dashboard showing pending and firing Prometheus alerts for RabbitMQ clusters.",
      "editable": true,
      "gnetId": null,
      "graphTooltip": 1,
      "id": null,
      "iteration": 1618904615820,
      "links": [],
      "panels": [
        {
          "datasource": "${DS_PROMETHEUS}",
          "description": "Number of firing alerts at the end of the defined time range.",
          "fieldConfig": {
            "defaults": {
              "custom": {},
              "mappings": [
                {
                  "from": "",
                  "id": 1,
                  "text": "",
                  "to": "",
                  "type": 1
                }
              ],
              "noValue": "0",
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 1
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 5,
            "w": 12,
            "x": 0,
            "y": 0
          },
          "id": 6,
          "options": {
            "colorMode": "background",
            "graphMode": "area",
            "justifyMode": "auto",
            "orientation": "auto",
            "reduceOptions": {
              "calcs": [
                "mean"
              ],
              "fields": "",
              "values": true
            },
            "text": {},
            "textMode": "auto"
          },
          "pluginVersion": "7.4.5",
          "targets": [
            {
              "expr": "count(ALERTS{rulesgroup=\"rabbitmq\", alertstate=\"firing\", namespace=~\"$namespace\", rabbitmq_cluster=~\"$rabbitmq_cluster\", severity=~\"$severity\", alertname=~\"$alert_name\"})",
              "format": "table",
              "instant": true,
              "interval": "",
              "legendFormat": "",
              "refId": "A"
            }
          ],
          "timeFrom": null,
          "timeShift": null,
          "title": "Firing Alerts",
          "type": "stat"
        },
        {
          "datasource": "${DS_PROMETHEUS}",
          "description": "Number of pending alerts at the end of the defined time range.",
          "fieldConfig": {
            "defaults": {
              "custom": {},
              "mappings": [
                {
                  "from": "",
                  "id": 1,
                  "text": "",
                  "to": "",
                  "type": 1
                }
              ],
              "noValue": "0",
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "orange",
                    "value": 1
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 5,
            "w": 12,
            "x": 12,
            "y": 0
          },
          "id": 9,
          "options": {
            "colorMode": "background",
            "graphMode": "area",
            "justifyMode": "auto",
            "orientation": "auto",
            "reduceOptions": {
              "calcs": [
                "mean"
              ],
              "fields": "",
              "values": true
            },
            "text": {},
            "textMode": "auto"
          },
          "pluginVersion": "7.4.5",
          "targets": [
            {
              "expr": "count(ALERTS{rulesgroup=\"rabbitmq\", alertstate=\"pending\", namespace=~\"$namespace\", rabbitmq_cluster=~\"$rabbitmq_cluster\", severity=~\"$severity\", alertname=~\"$alert_name\"})",
              "format": "table",
              "instant": true,
              "interval": "",
              "legendFormat": "",
              "refId": "A"
            }
          ],
          "timeFrom": null,
          "timeShift": null,
          "title": "Pending Alerts",
          "type": "stat"
        },
        {
          "datasource": "${DS_PROMETHEUS}",
          "description": "Shows details of pending and firing alerts for the defined time range.\n\nColumn 'Number of Times Alert started' shows how many times a particular alert transitioned from inactive into active (i.e. pending or firing) state for the defined time range.\n",
          "fieldConfig": {
            "defaults": {
              "custom": {
                "align": null,
                "displayMode": "auto",
                "filterable": false
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "none"
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "Severity"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 514
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "RabbitMQ node"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 423
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "Alert Name"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 319
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "PersistentVolumeClaim"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 241
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "Pod"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 222
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 8,
            "w": 24,
            "x": 0,
            "y": 5
          },
          "id": 4,
          "options": {
            "showHeader": true,
            "sortBy": []
          },
          "pluginVersion": "7.4.5",
          "repeat": null,
          "repeatDirection": "h",
          "targets": [
            {
              "expr": "changes( ALERTS_FOR_STATE{rulesgroup=\"rabbitmq\", namespace=~\"$namespace\", rabbitmq_cluster=~\"$rabbitmq_cluster\", severity=~\"$severity\", alertname=~\"$alert_name\"}[$__range] ) + 1",
              "format": "table",
              "instant": true,
              "interval": "",
              "legendFormat": "",
              "refId": "A"
            }
          ],
          "timeFrom": null,
          "timeShift": null,
          "title": "Alert History Details",
          "transformations": [
            {
              "id": "organize",
              "options": {
                "excludeByName": {
                  "Time": true,
                  "container": true,
                  "endpoint": true,
                  "job": true,
                  "label_app_kubernetes_io_name": true,
                  "phase": true,
                  "rulesgroup": true,
                  "service": true,
                  "statefulset": true
                },
                "indexByName": {
                  "Time": 8,
                  "Value": 7,
                  "alertname": 0,
                  "container": 11,
                  "endpoint": 12,
                  "instance": 3,
                  "job": 9,
                  "label_app_kubernetes_io_name": 13,
                  "namespace": 1,
                  "persistentvolumeclaim": 5,
                  "phase": 14,
                  "pod": 4,
                  "rabbitmq_cluster": 2,
                  "rulesgroup": 10,
                  "service": 15,
                  "severity": 6,
                  "statefulset": 16
                },
                "renameByName": {
                  "Time": "Time of Query",
                  "Value": "Number of Times Alert started",
                  "alertname": "Alert Name",
                  "container": "",
                  "instance": "Instance (scraped endpoint)",
                  "namespace": "Namespace",
                  "persistentvolumeclaim": "PersistentVolumeClaim",
                  "pod": "Pod",
                  "rabbitmq_cluster": "RabbitMQ Cluster",
                  "rabbitmq_node": "RabbitMQ node",
                  "severity": "Severity"
                }
              }
            }
          ],
          "type": "table"
        },
        {
          "cards": {
            "cardHSpacing": 2,
            "cardMinWidth": 7,
            "cardRound": 5,
            "cardVSpacing": 2
          },
          "color": {
            "cardColor": "#b4ff00",
            "colorScale": "sqrt",
            "colorScheme": "interpolateGnYlRd",
            "defaultColor": "#757575",
            "exponent": 0.5,
            "mode": "discrete",
            "thresholds": [
              {
                "color": "#F2495C",
                "tooltip": "firing",
                "value": "2"
              },
              {
                "color": "#FF9830",
                "tooltip": "pending",
                "value": "1"
              },
              {
                "color": "#73BF69",
                "tooltip": "no alert",
                "value": "0"
              }
            ]
          },
          "datasource": "${DS_PROMETHEUS}",
          "description": "The optional 'for' clause of a Prometheus alerting rule causes Prometheus to wait for a certain duration between first encountering a new expression output vector element and counting an alert as firing for this element. Elements that are active, but not firing yet, are in the pending state.",
          "fieldConfig": {
            "defaults": {
              "custom": {},
              "thresholds": {
                "mode": "absolute",
                "steps": []
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 9,
            "w": 24,
            "x": 0,
            "y": 13
          },
          "highlightCards": true,
          "id": 2,
          "interval": "1m",
          "legend": {
            "show": true
          },
          "nullPointMode": "as zero",
          "pageSize": 15,
          "pluginVersion": "7.2.1",
          "seriesFilterIndex": -1,
          "statusmap": {
            "ConfigVersion": "v1"
          },
          "targets": [
            {
              "expr": "(max_over_time(ALERTS:rabbitmq_alert_state_discrete{alert_state_numeric=\"1\", namespace=~\"$namespace\", rabbitmq_cluster=~\"$rabbitmq_cluster\", severity=~\"$severity\", alertname=~\"$alert_name\"}[$__interval]) == 1) * 1",
              "format": "time_series",
              "interval": "",
              "intervalFactor": 1,
              "legendFormat": "{{alertname}}",
              "refId": "A"
            },
            {
              "expr": "(max_over_time(ALERTS:rabbitmq_alert_state_discrete{alert_state_numeric=\"2\", namespace=~\"$namespace\", rabbitmq_cluster=~\"$rabbitmq_cluster\", severity=~\"$severity\", alertname=~\"$alert_name\"}[$__interval]) == 1) * 2",
              "interval": "",
              "intervalFactor": 1,
              "legendFormat": "{{alertname}}",
              "refId": "B"
            }
          ],
          "timeFrom": null,
          "timeShift": null,
          "title": "Alert History Status Map",
          "tooltip": {
            "extraInfo": "",
            "freezeOnClick": false,
            "items": [],
            "show": true,
            "showExtraInfo": false,
            "showItems": false
          },
          "transformations": [
            {
              "id": "organize",
              "options": {}
            }
          ],
          "type": "flant-statusmap-panel",
          "useMax": true,
          "usingPagination": false,
          "xAxis": {
            "show": true
          },
          "yAxis": {
            "maxWidth": -1,
            "minWidth": -1,
            "show": true
          },
          "yAxisSort": "metrics",
          "yLabel": {
            "delimiter": "",
            "labelTemplate": "",
            "usingSplitLabel": false
          }
        }
      ],
      "refresh": "30s",
      "schemaVersion": 27,
      "style": "dark",
      "tags": [
        "rabbitmq-prometheus"
      ],
      "templating": {
        "list": [
          {
            "current": {
              "selected": false,
              "text": "Prometheus",
              "value": "Prometheus"
            },
            "description": null,
            "error": null,
            "hide": 2,
            "includeAll": false,
            "label": "datasource",
            "multi": false,
            "name": "DS_PROMETHEUS",
            "options": [],
            "query": "prometheus",
            "refresh": 1,
            "regex": "",
            "skipUrlSync": false,
            "type": "datasource"
          },
          {
            "allValue": null,
            "current": {},
            "datasource": "${DS_PROMETHEUS}",
            "definition": "label_values(ALERTS{rulesgroup=\"rabbitmq\"},namespace)",
            "description": null,
            "error": null,
            "hide": 0,
            "includeAll": true,
            "label": "Namespace",
            "multi": true,
            "name": "namespace",
            "options": [],
            "query": {
              "query": "label_values(ALERTS{rulesgroup=\"rabbitmq\"},namespace)",
              "refId": "Prometheus-namespace-Variable-Query"
            },
            "refresh": 2,
            "regex": "",
            "skipUrlSync": false,
            "sort": 1,
            "tagValuesQuery": "",
            "tags": [],
            "tagsQuery": "",
            "type": "query",
            "useTags": false
          },
          {
            "allValue": null,
            "current": {},
            "datasource": "${DS_PROMETHEUS}",
            "definition": "label_values(ALERTS{rulesgroup=\"rabbitmq\", namespace=~\"$namespace\"}, rabbitmq_cluster)",
            "description": null,
            "error": null,
            "hide": 0,
            "includeAll": true,
            "label": "RabbitMQ Cluster",
            "multi": true,
            "name": "rabbitmq_cluster",
            "options": [],
            "query": {
              "query": "label_values(ALERTS{rulesgroup=\"rabbitmq\", namespace=~\"$namespace\"}, rabbitmq_cluster)",
              "refId": "Prometheus-rabbitmq_cluster-Variable-Query"
            },
            "refresh": 2,
            "regex": "",
            "skipUrlSync": false,
            "sort": 1,
            "tagValuesQuery": "",
            "tags": [],
            "tagsQuery": "",
            "type": "query",
            "useTags": false
          },
          {
            "allValue": null,
            "current": {},
            "datasource": "${DS_PROMETHEUS}",
            "definition": "label_values(ALERTS{rulesgroup=\"rabbitmq\", namespace=~\"$namespace\", rabbitmq_cluster=~\"$rabbitmq_cluster\"}, severity)",
            "description": null,
            "error": null,
            "hide": 0,
            "includeAll": true,
            "label": "Severity",
            "multi": true,
            "name": "severity",
            "options": [],
            "query": {
              "query": "label_values(ALERTS{rulesgroup=\"rabbitmq\", namespace=~\"$namespace\", rabbitmq_cluster=~\"$rabbitmq_cluster\"}, severity)",
              "refId": "Prometheus-severity-Variable-Query"
            },
            "refresh": 1,
            "regex": "",
            "skipUrlSync": false,
            "sort": 0,
            "tagValuesQuery": "",
            "tags": [],
            "tagsQuery": "",
            "type": "query",
            "useTags": false
          },
          {
            "allValue": null,
            "current": {},
            "datasource": "${DS_PROMETHEUS}",
            "definition": "label_values(ALERTS{rulesgroup=\"rabbitmq\", namespace=~\"$namespace\", rabbitmq_cluster=~\"$rabbitmq_cluster\", severity=~\"$severity\"}, alertname)",
            "description": null,
            "error": null,
            "hide": 0,
            "includeAll": true,
            "label": "Alert Name",
            "multi": true,
            "name": "alert_name",
            "options": [],
            "query": {
              "query": "label_values(ALERTS{rulesgroup=\"rabbitmq\", namespace=~\"$namespace\", rabbitmq_cluster=~\"$rabbitmq_cluster\", severity=~\"$severity\"}, alertname)",
              "refId": "Prometheus-alert_name-Variable-Query"
            },
            "refresh": 1,
            "regex": "",
            "skipUrlSync": false,
            "sort": 0,
            "tagValuesQuery": "",
            "tags": [],
            "tagsQuery": "",
            "type": "query",
            "useTags": false
          }
        ]
      },
      "time": {
        "from": "now-1h",
        "to": "now"
      },
      "timepicker": {
        "refresh_intervals": [
          "15s",
          "30s",
          "1m",
          "5m",
          "10m"
        ]
      },
      "timezone": "",
      "title": "RabbitMQ-Alerts",
      "uid": "jjCq5SLMk",
      "version": 1
    }
---
# Source: rabbitmq-observability/templates/grafana/dashboards/rabbitmq-overview.yaml
apiVersion: integreatly.org/v1alpha1
kind: GrafanaDashboard
metadata:
  name: rabbitmq-overview-dashboard
  namespace: default
  labels:
    grafana_dashboard: "true"
spec:
  # https://grafana.com/grafana/dashboards/10991
  json: |-
    {
      "__requires": [
        {
          "type": "grafana",
          "id": "grafana",
          "name": "Grafana",
          "version": "7.0.0"
        },
        {
          "type": "datasource",
          "id": "prometheus",
          "name": "prometheus",
          "version": "2.0.0"
        },
        {
          "type": "table",
          "id": "table",
          "name": "Table",
          "version": ""
        },
        {
          "type": "panel",
          "id": "graph",
          "name": "Graph",
          "version": ""
        },
        {
          "type": "panel",
          "id": "singlestat",
          "name": "Singlestat",
          "version": ""
        }
      ],
      "annotations": {
        "list": [
          {
            "builtIn": 1,
            "datasource": "-- Grafana --",
            "enable": true,
            "hide": true,
            "iconColor": "rgba(0, 211, 255, 1)",
            "name": "Annotations & Alerts",
            "type": "dashboard"
          }
        ]
      },
      "description": "A new RabbitMQ Management Overview",
      "editable": true,
      "gnetId": 10991,
      "graphTooltip": 1,
      "iteration": 1610979946179,
      "links": [
        {
          "icon": "doc",
          "tags": [],
          "targetBlank": true,
          "title": "Monitoring with Prometheus & Grafana",
          "tooltip": "",
          "type": "link",
          "url": "https://www.rabbitmq.com/prometheus.html"
        }
      ],
      "panels": [
        {
          "cacheTimeout": null,
          "colorBackground": true,
          "colorPrefix": false,
          "colorValue": false,
          "colors": [
            "#37872D",
            "#1F60C4",
            "#C4162A"
          ],
          "datasource": "${DS_PROMETHEUS}",
          "description": "",
          "fieldConfig": {
            "defaults": {
              "custom": {}
            },
            "overrides": []
          },
          "format": "short",
          "gauge": {
            "maxValue": 100,
            "minValue": 0,
            "show": false,
            "thresholdLabels": false,
            "thresholdMarkers": true
          },
          "id": 64,
          "interval": null,
          "links": [],
          "mappingType": 1,
          "mappingTypes": [
            {
              "name": "value to text",
              "value": 1
            },
            {
              "name": "range to text",
              "value": 2
            }
          ],
          "maxDataPoints": 100,
          "nullPointMode": "connected",
          "nullText": null,
          "pluginVersion": "6.1.3",
          "postfix": "",
          "postfixFontSize": "50%",
          "prefix": "",
          "prefixFontSize": "50%",
          "rangeMaps": [
            {
              "from": "null",
              "text": "N/A",
              "to": "null"
            }
          ],
          "sparkline": {
            "fillColor": "rgba(255, 255, 255, 0)",
            "full": false,
            "lineColor": "rgb(255, 255, 255)",
            "show": true
          },
          "tableColumn": "",
          "targets": [
            {
              "expr": "sum(rabbitmq_queue_messages_ready * on(instance) group_left(rabbitmq_cluster) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"})",
              "format": "time_series",
              "hide": false,
              "instant": false,
              "interval": "",
              "intervalFactor": 1,
              "legendFormat": "",
              "refId": "A"
            }
          ],
          "thresholds": "10000,100000",
          "timeFrom": null,
          "timeShift": null,
          "title": "Ready messages",
          "type": "singlestat",
          "valueFontSize": "80%",
          "valueMaps": [
            {
              "op": "=",
              "text": "N/A",
              "value": "null"
            }
          ],
          "valueName": "current"
        },
        {
          "cacheTimeout": null,
          "colorBackground": true,
          "colorValue": false,
          "colors": [
            "#C4162A",
            "#1F60C4",
            "#37872D"
          ],
          "datasource": "${DS_PROMETHEUS}",
          "decimals": null,
          "description": "",
          "fieldConfig": {
            "defaults": {
              "custom": {}
            },
            "overrides": []
          },
          "format": "short",
          "gauge": {
            "maxValue": 100,
            "minValue": 0,
            "show": false,
            "thresholdLabels": false,
            "thresholdMarkers": true
          },
          "gridPos": {
            "h": 3,
            "w": 6,
            "x": 6,
            "y": 0
          },
          "id": 62,
          "interval": null,
          "links": [],
          "mappingType": 1,
          "mappingTypes": [
            {
              "name": "value to text",
              "value": 1
            },
            {
              "name": "range to text",
              "value": 2
            }
          ],
          "maxDataPoints": 100,
          "nullPointMode": "connected",
          "nullText": null,
          "pluginVersion": "6.1.3",
          "postfix": "",
          "postfixFontSize": "50%",
          "prefix": "",
          "prefixFontSize": "50%",
          "rangeMaps": [
            {
              "from": "null",
              "text": "N/A",
              "to": "null"
            }
          ],
          "sparkline": {
            "fillColor": "rgba(255, 255, 255, 0)",
            "full": false,
            "lineColor": "rgb(255, 255, 255)",
            "show": true
          },
          "tableColumn": "",
          "targets": [
            {
              "expr": "sum(rate(rabbitmq_channel_messages_published_total[60s]) * on(instance) group_left(rabbitmq_cluster) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"})",
              "format": "time_series",
              "instant": false,
              "interval": "",
              "intervalFactor": 1,
              "legendFormat": "",
              "refId": "A"
            }
          ],
          "thresholds": "-1,50",
          "timeFrom": null,
          "timeShift": null,
          "title": "Incoming messages / s",
          "type": "singlestat",
          "valueFontSize": "80%",
          "valueMaps": [
            {
              "op": "=",
              "text": "N/A",
              "value": "null"
            }
          ],
          "valueName": "current"
        },
        {
          "cacheTimeout": null,
          "colorBackground": true,
          "colorValue": false,
          "colors": [
            "#C4162A",
            "#1F60C4",
            "#37872D"
          ],
          "datasource": "${DS_PROMETHEUS}",
          "description": "",
          "fieldConfig": {
            "defaults": {
              "custom": {}
            },
            "overrides": []
          },
          "format": "none",
          "gauge": {
            "maxValue": 100,
            "minValue": 0,
            "show": false,
            "thresholdLabels": false,
            "thresholdMarkers": true
          },
          "gridPos": {
            "h": 3,
            "w": 4,
            "x": 12,
            "y": 0
          },
          "id": 66,
          "interval": null,
          "links": [],
          "mappingType": 1,
          "mappingTypes": [
            {
              "name": "value to text",
              "value": 1
            },
            {
              "name": "range to text",
              "value": 2
            }
          ],
          "maxDataPoints": 100,
          "nullPointMode": "connected",
          "nullText": null,
          "pluginVersion": "6.1.3",
          "postfix": "",
          "postfixFontSize": "50%",
          "prefix": "",
          "prefixFontSize": "50%",
          "rangeMaps": [
            {
              "from": "null",
              "text": "N/A",
              "to": "null"
            }
          ],
          "sparkline": {
            "fillColor": "rgba(255, 255, 255, 0)",
            "full": false,
            "lineColor": "rgb(255, 255, 255)",
            "show": true
          },
          "tableColumn": "",
          "targets": [
            {
              "expr": "sum(rabbitmq_channels * on(instance) group_left(rabbitmq_cluster) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) - sum(rabbitmq_channel_consumers * on(instance) group_left(rabbitmq_cluster) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"})",
              "format": "time_series",
              "instant": false,
              "intervalFactor": 1,
              "legendFormat": "",
              "refId": "A"
            }
          ],
          "thresholds": "0,10",
          "timeFrom": null,
          "timeShift": null,
          "title": "Publishers",
          "type": "singlestat",
          "valueFontSize": "80%",
          "valueMaps": [
            {
              "op": "=",
              "text": "N/A",
              "value": "null"
            }
          ],
          "valueName": "current"
        },
        {
          "cacheTimeout": null,
          "colorBackground": true,
          "colorValue": false,
          "colors": [
            "#C4162A",
            "#1F60C4",
            "#37872D"
          ],
          "datasource": "${DS_PROMETHEUS}",
          "description": "",
          "fieldConfig": {
            "defaults": {
              "custom": {}
            },
            "overrides": []
          },
          "format": "none",
          "gauge": {
            "maxValue": 100,
            "minValue": 0,
            "show": false,
            "thresholdLabels": false,
            "thresholdMarkers": true
          },
          "gridPos": {
            "h": 3,
            "w": 4,
            "x": 16,
            "y": 0
          },
          "id": 37,
          "interval": null,
          "links": [],
          "mappingType": 1,
          "mappingTypes": [
            {
              "name": "value to text",
              "value": 1
            },
            {
              "name": "range to text",
              "value": 2
            }
          ],
          "maxDataPoints": 100,
          "nullPointMode": "connected",
          "nullText": null,
          "pluginVersion": "6.1.3",
          "postfix": "",
          "postfixFontSize": "50%",
          "prefix": "",
          "prefixFontSize": "50%",
          "rangeMaps": [
            {
              "from": "null",
              "text": "N/A",
              "to": "null"
            }
          ],
          "sparkline": {
            "fillColor": "rgba(255, 255, 255, 0)",
            "full": false,
            "lineColor": "rgb(255, 255, 255)",
            "show": true
          },
          "tableColumn": "",
          "targets": [
            {
              "expr": "sum(rabbitmq_connections * on(instance) group_left(rabbitmq_cluster) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"})",
              "format": "time_series",
              "instant": false,
              "interval": "",
              "intervalFactor": 1,
              "legendFormat": "",
              "refId": "A"
            }
          ],
          "thresholds": "0,10",
          "timeFrom": null,
          "timeShift": null,
          "title": "Connections",
          "type": "singlestat",
          "valueFontSize": "80%",
          "valueMaps": [
            {
              "op": "=",
              "text": "N/A",
              "value": "null"
            }
          ],
          "valueName": "current"
        },
        {
          "cacheTimeout": null,
          "colorBackground": true,
          "colorValue": false,
          "colors": [
            "#C4162A",
            "#1F60C4",
            "#37872D"
          ],
          "datasource": "${DS_PROMETHEUS}",
          "description": "",
          "fieldConfig": {
            "defaults": {
              "custom": {}
            },
            "overrides": []
          },
          "format": "none",
          "gauge": {
            "maxValue": 100,
            "minValue": 0,
            "show": false,
            "thresholdLabels": false,
            "thresholdMarkers": true
          },
          "gridPos": {
            "h": 3,
            "w": 4,
            "x": 20,
            "y": 0
          },
          "id": 40,
          "interval": null,
          "links": [],
          "mappingType": 1,
          "mappingTypes": [
            {
              "name": "value to text",
              "value": 1
            },
            {
              "name": "range to text",
              "value": 2
            }
          ],
          "maxDataPoints": 100,
          "nullPointMode": "connected",
          "nullText": null,
          "pluginVersion": "6.1.3",
          "postfix": "",
          "postfixFontSize": "50%",
          "prefix": "",
          "prefixFontSize": "50%",
          "rangeMaps": [
            {
              "from": "null",
              "text": "N/A",
              "to": "null"
            }
          ],
          "sparkline": {
            "fillColor": "rgba(255, 255, 255, 0)",
            "full": false,
            "lineColor": "rgb(255, 255, 255)",
            "show": true
          },
          "tableColumn": "",
          "targets": [
            {
              "expr": "sum(rabbitmq_queues * on(instance) group_left(rabbitmq_cluster) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"})",
              "format": "time_series",
              "instant": false,
              "intervalFactor": 1,
              "legendFormat": "",
              "refId": "A"
            }
          ],
          "thresholds": "0,10",
          "timeFrom": null,
          "timeShift": null,
          "title": "Queues",
          "type": "singlestat",
          "valueFontSize": "80%",
          "valueMaps": [
            {
              "op": "=",
              "text": "N/A",
              "value": "null"
            }
          ],
          "valueName": "current"
        },
        {
          "cacheTimeout": null,
          "colorBackground": true,
          "colorValue": false,
          "colors": [
            "#37872D",
            "#1F60C4",
            "#C4162A"
          ],
          "datasource": "${DS_PROMETHEUS}",
          "description": "",
          "fieldConfig": {
            "defaults": {
              "custom": {}
            },
            "overrides": []
          },
          "format": "short",
          "gauge": {
            "maxValue": 100,
            "minValue": 0,
            "show": false,
            "thresholdLabels": false,
            "thresholdMarkers": true
          },
          "gridPos": {
            "h": 3,
            "w": 6,
            "x": 0,
            "y": 3
          },
          "id": 65,
          "interval": null,
          "links": [],
          "mappingType": 1,
          "mappingTypes": [
            {
              "name": "value to text",
              "value": 1
            },
            {
              "name": "range to text",
              "value": 2
            }
          ],
          "maxDataPoints": 100,
          "nullPointMode": "connected",
          "nullText": null,
          "pluginVersion": "6.1.3",
          "postfix": "",
          "postfixFontSize": "50%",
          "prefix": "",
          "prefixFontSize": "50%",
          "rangeMaps": [
            {
              "from": "null",
              "text": "N/A",
              "to": "null"
            }
          ],
          "sparkline": {
            "fillColor": "rgba(255, 255, 255, 0)",
            "full": false,
            "lineColor": "rgb(255, 255, 255)",
            "show": true
          },
          "tableColumn": "",
          "targets": [
            {
              "expr": "sum(rabbitmq_queue_messages_unacked * on(instance) group_left(rabbitmq_cluster) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"})",
              "format": "time_series",
              "hide": false,
              "instant": false,
              "intervalFactor": 1,
              "legendFormat": "",
              "refId": "A"
            }
          ],
          "thresholds": "100,500",
          "timeFrom": null,
          "timeShift": null,
          "title": "Unacknowledged messages",
          "type": "singlestat",
          "valueFontSize": "80%",
          "valueMaps": [
            {
              "op": "=",
              "text": "N/A",
              "value": "null"
            }
          ],
          "valueName": "current"
        },
        {
          "cacheTimeout": null,
          "colorBackground": true,
          "colorValue": false,
          "colors": [
            "#C4162A",
            "#1F60C4",
            "#37872D"
          ],
          "datasource": "${DS_PROMETHEUS}",
          "description": "",
          "fieldConfig": {
            "defaults": {
              "custom": {}
            },
            "overrides": []
          },
          "format": "short",
          "gauge": {
            "maxValue": 100,
            "minValue": 0,
            "show": false,
            "thresholdLabels": false,
            "thresholdMarkers": true
          },
          "gridPos": {
            "h": 3,
            "w": 6,
            "x": 6,
            "y": 3
          },
          "id": 63,
          "interval": null,
          "links": [],
          "mappingType": 1,
          "mappingTypes": [
            {
              "name": "value to text",
              "value": 1
            },
            {
              "name": "range to text",
              "value": 2
            }
          ],
          "maxDataPoints": 100,
          "nullPointMode": "connected",
          "nullText": null,
          "pluginVersion": "6.1.3",
          "postfix": "",
          "postfixFontSize": "50%",
          "prefix": "",
          "prefixFontSize": "50%",
          "rangeMaps": [
            {
              "from": "null",
              "text": "N/A",
              "to": "null"
            }
          ],
          "sparkline": {
            "fillColor": "rgba(255, 255, 255, 0)",
            "full": false,
            "lineColor": "rgb(255, 255, 255)",
            "show": true
          },
          "tableColumn": "",
          "targets": [
            {
              "expr": "sum(rate(rabbitmq_channel_messages_redelivered_total[60s]) * on(instance) group_left(rabbitmq_cluster) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) +\nsum(rate(rabbitmq_channel_messages_delivered_total[60s]) * on(instance) group_left(rabbitmq_cluster) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) +\nsum(rate(rabbitmq_channel_messages_delivered_ack_total[60s]) * on(instance) group_left(rabbitmq_cluster) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) +\nsum(rate(rabbitmq_channel_get_total[60s]) * on(instance) group_left(rabbitmq_cluster) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) +\nsum(rate(rabbitmq_channel_get_ack_total[60s]) * on(instance) group_left(rabbitmq_cluster) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"})",
              "format": "time_series",
              "hide": false,
              "instant": false,
              "intervalFactor": 1,
              "legendFormat": "",
              "refId": "A"
            }
          ],
          "thresholds": "-1,50",
          "timeFrom": null,
          "timeShift": null,
          "title": "Outgoing messages / s",
          "type": "singlestat",
          "valueFontSize": "80%",
          "valueMaps": [
            {
              "op": "=",
              "text": "N/A",
              "value": "null"
            }
          ],
          "valueName": "current"
        },
        {
          "cacheTimeout": null,
          "colorBackground": true,
          "colorValue": false,
          "colors": [
            "#C4162A",
            "#1F60C4",
            "#37872D"
          ],
          "datasource": "${DS_PROMETHEUS}",
          "description": "",
          "fieldConfig": {
            "defaults": {
              "custom": {}
            },
            "overrides": []
          },
          "format": "none",
          "gauge": {
            "maxValue": 100,
            "minValue": 0,
            "show": false,
            "thresholdLabels": false,
            "thresholdMarkers": true
          },
          "gridPos": {
            "h": 3,
            "w": 4,
            "x": 12,
            "y": 3
          },
          "id": 41,
          "interval": null,
          "links": [],
          "mappingType": 1,
          "mappingTypes": [
            {
              "name": "value to text",
              "value": 1
            },
            {
              "name": "range to text",
              "value": 2
            }
          ],
          "maxDataPoints": 100,
          "nullPointMode": "connected",
          "nullText": null,
          "pluginVersion": "6.1.3",
          "postfix": "",
          "postfixFontSize": "50%",
          "prefix": "",
          "prefixFontSize": "50%",
          "rangeMaps": [
            {
              "from": "null",
              "text": "N/A",
              "to": "null"
            }
          ],
          "sparkline": {
            "fillColor": "rgba(255, 255, 255, 0)",
            "full": false,
            "lineColor": "rgb(255, 255, 255)",
            "show": true
          },
          "tableColumn": "",
          "targets": [
            {
              "expr": "sum(rabbitmq_channel_consumers * on(instance) group_left(rabbitmq_cluster) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"})",
              "format": "time_series",
              "instant": false,
              "intervalFactor": 1,
              "legendFormat": "",
              "refId": "A"
            }
          ],
          "thresholds": "0,10",
          "timeFrom": null,
          "timeShift": null,
          "title": "Consumers",
          "type": "singlestat",
          "valueFontSize": "80%",
          "valueMaps": [
            {
              "op": "=",
              "text": "N/A",
              "value": "null"
            }
          ],
          "valueName": "current"
        },
        {
          "cacheTimeout": null,
          "colorBackground": true,
          "colorValue": false,
          "colors": [
            "#C4162A",
            "#1F60C4",
            "#37872D"
          ],
          "datasource": "${DS_PROMETHEUS}",
          "description": "",
          "fieldConfig": {
            "defaults": {
              "custom": {}
            },
            "overrides": []
          },
          "format": "none",
          "gauge": {
            "maxValue": 100,
            "minValue": 0,
            "show": false,
            "thresholdLabels": false,
            "thresholdMarkers": true
          },
          "gridPos": {
            "h": 3,
            "w": 4,
            "x": 16,
            "y": 3
          },
          "id": 38,
          "interval": null,
          "links": [],
          "mappingType": 1,
          "mappingTypes": [
            {
              "name": "value to text",
              "value": 1
            },
            {
              "name": "range to text",
              "value": 2
            }
          ],
          "maxDataPoints": 100,
          "nullPointMode": "connected",
          "nullText": null,
          "pluginVersion": "6.1.3",
          "postfix": "",
          "postfixFontSize": "50%",
          "prefix": "",
          "prefixFontSize": "50%",
          "rangeMaps": [
            {
              "from": "null",
              "text": "N/A",
              "to": "null"
            }
          ],
          "sparkline": {
            "fillColor": "rgba(255, 255, 255, 0)",
            "full": false,
            "lineColor": "rgb(255, 255, 255)",
            "show": true
          },
          "tableColumn": "",
          "targets": [
            {
              "expr": "sum(rabbitmq_channels * on(instance) group_left(rabbitmq_cluster) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"})",
              "format": "time_series",
              "instant": false,
              "intervalFactor": 1,
              "legendFormat": "",
              "refId": "A"
            }
          ],
          "thresholds": "0,10",
          "timeFrom": null,
          "timeShift": null,
          "title": "Channels",
          "type": "singlestat",
          "valueFontSize": "80%",
          "valueMaps": [
            {
              "op": "=",
              "text": "N/A",
              "value": "null"
            }
          ],
          "valueName": "current"
        },
        {
          "cacheTimeout": null,
          "colorBackground": true,
          "colorValue": false,
          "colors": [
            "#1F60C4",
            "#37872D",
            "#C4162A"
          ],
          "datasource": "${DS_PROMETHEUS}",
          "description": "",
          "fieldConfig": {
            "defaults": {
              "custom": {}
            },
            "overrides": []
          },
          "format": "none",
          "gauge": {
            "maxValue": 100,
            "minValue": 0,
            "show": false,
            "thresholdLabels": false,
            "thresholdMarkers": true
          },
          "gridPos": {
            "h": 3,
            "w": 4,
            "x": 20,
            "y": 3
          },
          "id": 67,
          "interval": null,
          "links": [],
          "mappingType": 1,
          "mappingTypes": [
            {
              "name": "value to text",
              "value": 1
            },
            {
              "name": "range to text",
              "value": 2
            }
          ],
          "maxDataPoints": 100,
          "nullPointMode": "connected",
          "nullText": null,
          "pluginVersion": "6.1.3",
          "postfix": "",
          "postfixFontSize": "50%",
          "prefix": "",
          "prefixFontSize": "50%",
          "rangeMaps": [
            {
              "from": "null",
              "text": "N/A",
              "to": "null"
            }
          ],
          "sparkline": {
            "fillColor": "rgba(255, 255, 255, 0)",
            "full": false,
            "lineColor": "rgb(255, 255, 255)",
            "show": true
          },
          "tableColumn": "",
          "targets": [
            {
              "expr": "sum(rabbitmq_build_info * on(instance) group_left(rabbitmq_cluster) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"})",
              "format": "time_series",
              "instant": false,
              "intervalFactor": 1,
              "legendFormat": "",
              "refId": "A"
            }
          ],
          "thresholds": "3,8",
          "timeFrom": null,
          "timeShift": null,
          "title": "Nodes",
          "type": "singlestat",
          "valueFontSize": "80%",
          "valueMaps": [
            {
              "op": "=",
              "text": "N/A",
              "value": "null"
            }
          ],
          "valueName": "current"
        },
        {
          "collapsed": false,
          "datasource": "${DS_PROMETHEUS}",
          "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 6
          },
          "id": 4,
          "panels": [],
          "title": "NODES",
          "type": "row"
        },
        {
          "columns": [],
          "datasource": "${DS_PROMETHEUS}",
          "fieldConfig": {
            "defaults": {
              "custom": {}
            },
            "overrides": []
          },
          "fontSize": "100%",
          "gridPos": {
            "h": 4,
            "w": 24,
            "x": 0,
            "y": 7
          },
          "id": 69,
          "links": [],
          "pageSize": null,
          "scroll": true,
          "showHeader": true,
          "sort": {
            "col": 8,
            "desc": false
          },
          "styles": [
            {
              "alias": "Erlang/OTP",
              "align": "auto",
              "colorMode": null,
              "colors": [
                "rgba(50, 172, 45, 0.97)",
                "rgba(237, 129, 40, 0.89)",
                "rgba(245, 54, 54, 0.9)"
              ],
              "dateFormat": "YYYY-MM-DD HH:mm:ss",
              "decimals": null,
              "link": false,
              "mappingType": 1,
              "pattern": "erlang_version",
              "thresholds": [
                ""
              ],
              "type": "string",
              "unit": "none"
            },
            {
              "alias": "RabbitMQ",
              "align": "auto",
              "colorMode": null,
              "colors": [
                "rgba(245, 54, 54, 0.9)",
                "rgba(237, 129, 40, 0.89)",
                "rgba(50, 172, 45, 0.97)"
              ],
              "dateFormat": "YYYY-MM-DD HH:mm:ss",
              "decimals": 2,
              "link": false,
              "mappingType": 1,
              "pattern": "rabbitmq_version",
              "thresholds": [
                ""
              ],
              "type": "string",
              "unit": "none"
            },
            {
              "alias": "Host",
              "align": "auto",
              "colorMode": null,
              "colors": [
                "rgba(245, 54, 54, 0.9)",
                "rgba(237, 129, 40, 0.89)",
                "rgba(50, 172, 45, 0.97)"
              ],
              "dateFormat": "YYYY-MM-DD HH:mm:ss",
              "decimals": 2,
              "link": false,
              "mappingType": 1,
              "pattern": "instance",
              "preserveFormat": false,
              "thresholds": [],
              "type": "string",
              "unit": "short",
              "valueMaps": []
            },
            {
              "alias": "Node name",
              "align": "auto",
              "colorMode": null,
              "colors": [
                "rgba(245, 54, 54, 0.9)",
                "rgba(237, 129, 40, 0.89)",
                "rgba(50, 172, 45, 0.97)"
              ],
              "dateFormat": "YYYY-MM-DD HH:mm:ss",
              "decimals": 2,
              "link": false,
              "mappingType": 1,
              "pattern": "rabbitmq_node",
              "thresholds": [
                ""
              ],
              "type": "string",
              "unit": "short"
            },
            {
              "alias": "",
              "align": "auto",
              "colorMode": null,
              "colors": [
                "rgba(245, 54, 54, 0.9)",
                "rgba(237, 129, 40, 0.89)",
                "rgba(50, 172, 45, 0.97)"
              ],
              "dateFormat": "YYYY-MM-DD HH:mm:ss",
              "decimals": 2,
              "mappingType": 1,
              "pattern": "Time",
              "thresholds": [],
              "type": "hidden",
              "unit": "short"
            },
            {
              "alias": "",
              "align": "auto",
              "colorMode": null,
              "colors": [
                "rgba(245, 54, 54, 0.9)",
                "rgba(237, 129, 40, 0.89)",
                "rgba(50, 172, 45, 0.97)"
              ],
              "dateFormat": "YYYY-MM-DD HH:mm:ss",
              "decimals": 2,
              "mappingType": 1,
              "pattern": "Value",
              "thresholds": [],
              "type": "hidden",
              "unit": "short"
            },
            {
              "alias": "",
              "align": "auto",
              "colorMode": null,
              "colors": [
                "rgba(245, 54, 54, 0.9)",
                "rgba(237, 129, 40, 0.89)",
                "rgba(50, 172, 45, 0.97)"
              ],
              "dateFormat": "YYYY-MM-DD HH:mm:ss",
              "decimals": 2,
              "mappingType": 1,
              "pattern": "job",
              "thresholds": [],
              "type": "hidden",
              "unit": "short"
            },
            {
              "alias": "Cluster",
              "align": "auto",
              "colorMode": null,
              "colors": [
                "rgba(245, 54, 54, 0.9)",
                "rgba(237, 129, 40, 0.89)",
                "rgba(50, 172, 45, 0.97)"
              ],
              "dateFormat": "YYYY-MM-DD HH:mm:ss",
              "decimals": 2,
              "mappingType": 1,
              "pattern": "rabbitmq_cluster",
              "thresholds": [],
              "type": "hidden",
              "unit": "short",
              "valueMaps": []
            },
            {
              "alias": "prometheus.erl",
              "align": "auto",
              "colorMode": null,
              "colors": [
                "rgba(245, 54, 54, 0.9)",
                "rgba(237, 129, 40, 0.89)",
                "rgba(50, 172, 45, 0.97)"
              ],
              "dateFormat": "YYYY-MM-DD HH:mm:ss",
              "decimals": 2,
              "mappingType": 1,
              "pattern": "prometheus_client_version",
              "thresholds": [],
              "type": "string",
              "unit": "short"
            },
            {
              "alias": "rabbitmq_prometheus",
              "align": "auto",
              "colorMode": null,
              "colors": [
                "rgba(245, 54, 54, 0.9)",
                "rgba(237, 129, 40, 0.89)",
                "rgba(50, 172, 45, 0.97)"
              ],
              "dateFormat": "YYYY-MM-DD HH:mm:ss",
              "decimals": 2,
              "mappingType": 1,
              "pattern": "prometheus_plugin_version",
              "thresholds": [],
              "type": "string",
              "unit": "short"
            }
          ],
          "targets": [
            {
              "expr": "rabbitmq_build_info * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}",
              "format": "table",
              "instant": true,
              "intervalFactor": 1,
              "refId": "A"
            }
          ],
          "timeFrom": null,
          "timeShift": null,
          "title": "",
          "transform": "table",
          "type": "table-old"
        },
        {
          "aliasColors": {},
          "bars": false,
          "cacheTimeout": null,
          "dashLength": 10,
          "dashes": false,
          "datasource": "${DS_PROMETHEUS}",
          "description": "If the value is zero or less, the memory alarm will be triggered and all publishing connections across all cluster nodes will be blocked.\n\nThis value can temporarily go negative because the memory alarm is triggered with a slight delay.\n\nThe kernel's view of the amount of memory used by the node can differ from what the node itself can observe. This means that this value can be negative for a sustained period of time.\n\nBy default nodes use resident set size (RSS) to compute how much memory they use. This strategy can be changed (see the guides below).\n\n* [Alarms](https://www.rabbitmq.com/alarms.html)\n* [Memory Alarms](https://www.rabbitmq.com/memory.html)\n* [Reasoning About Memory Use](https://www.rabbitmq.com/memory-use.html)\n* [Blocked Connection Notifications](https://www.rabbitmq.com/connection-blocked.html)",
          "fieldConfig": {
            "defaults": {
              "custom": {},
              "links": []
            },
            "overrides": []
          },
          "fill": 0,
          "fillGradient": 0,
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 0,
            "y": 11
          },
          "hiddenSeries": false,
          "id": 7,
          "legend": {
            "alignAsTable": true,
            "avg": false,
            "current": true,
            "max": true,
            "min": true,
            "show": false,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "options": {
            "alertThreshold": true
          },
          "percentage": false,
          "pluginVersion": "7.3.2",
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?0(\\b|\\.)/",
              "color": "#56A64B"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?1(\\b|\\.)/",
              "color": "#F2CC0C"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?2(\\b|\\.)/",
              "color": "#3274D9"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?3(\\b|\\.)/",
              "color": "#A352CC"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?4(\\b|\\.)/",
              "color": "#FF780A"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?5(\\b|\\.)/",
              "color": "#96D98D"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?6(\\b|\\.)/",
              "color": "#FFEE52"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?7(\\b|\\.)/",
              "color": "#8AB8FF"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?8(\\b|\\.)/",
              "color": "#CA95E5"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?9(\\b|\\.)/",
              "color": "#FFB357"
            }
          ],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "expr": "(rabbitmq_resident_memory_limit_bytes * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) -\n(rabbitmq_process_resident_memory_bytes * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"})",
              "format": "time_series",
              "instant": false,
              "intervalFactor": 1,
              "legendFormat": "{{rabbitmq_node}}",
              "refId": "A"
            }
          ],
          "thresholds": [
            {
              "colorMode": "warning",
              "fill": true,
              "line": true,
              "op": "lt",
              "value": 536870912,
              "yaxis": "left"
            },
            {
              "colorMode": "critical",
              "fill": true,
              "line": true,
              "op": "lt",
              "value": 0,
              "yaxis": "left"
            }
          ],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Memory available before publishers blocked",
          "tooltip": {
            "shared": true,
            "sort": 1,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "decimals": 1,
              "format": "bytes",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": false,
          "cacheTimeout": null,
          "dashLength": 10,
          "dashes": false,
          "datasource": "${DS_PROMETHEUS}",
          "description": "This metric is reported for the partition where the RabbitMQ data directory is stored.\n\nIf the value is zero or less, the disk alarm will be triggered and all publishing connections across all cluster nodes will be blocked.\n\nThis value can temporarily go negative because the free disk space alarm is triggered with a slight delay.\n\n* [Alarms](https://www.rabbitmq.com/alarms.html)\n* [Disk Space Alarms](https://www.rabbitmq.com/disk-alarms.html)\n* [Disk Space](https://www.rabbitmq.com/production-checklist.html#resource-limits-disk-space)\n* [Persistence Configuration](https://www.rabbitmq.com/persistence-conf.html)\n* [Blocked Connection Notifications](https://www.rabbitmq.com/connection-blocked.html)",
          "fieldConfig": {
            "defaults": {
              "custom": {},
              "links": []
            },
            "overrides": []
          },
          "fill": 0,
          "fillGradient": 0,
          "gridPos": {
            "h": 8,
            "w": 8,
            "x": 12,
            "y": 11
          },
          "hiddenSeries": false,
          "id": 8,
          "legend": {
            "alignAsTable": true,
            "avg": false,
            "current": true,
            "max": true,
            "min": true,
            "show": false,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "options": {
            "alertThreshold": true
          },
          "percentage": false,
          "pluginVersion": "7.3.2",
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?0(\\b|\\.)/",
              "color": "#56A64B"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?1(\\b|\\.)/",
              "color": "#F2CC0C"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?2(\\b|\\.)/",
              "color": "#3274D9"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?3(\\b|\\.)/",
              "color": "#A352CC"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?4(\\b|\\.)/",
              "color": "#FF780A"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?5(\\b|\\.)/",
              "color": "#96D98D"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?6(\\b|\\.)/",
              "color": "#FFEE52"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?7(\\b|\\.)/",
              "color": "#8AB8FF"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?8(\\b|\\.)/",
              "color": "#CA95E5"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?9(\\b|\\.)/",
              "color": "#FFB357"
            }
          ],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "expr": "rabbitmq_disk_space_available_bytes * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}",
              "format": "time_series",
              "instant": false,
              "intervalFactor": 1,
              "legendFormat": "{{rabbitmq_node}}",
              "refId": "A"
            }
          ],
          "thresholds": [
            {
              "colorMode": "critical",
              "fill": true,
              "line": true,
              "op": "lt",
              "value": 1073741824,
              "yaxis": "left"
            },
            {
              "colorMode": "warning",
              "fill": true,
              "line": true,
              "op": "lt",
              "value": 5368709120,
              "yaxis": "left"
            }
          ],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Disk space available before publishers blocked",
          "tooltip": {
            "shared": true,
            "sort": 1,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "decimals": 1,
              "format": "bytes",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": false,
          "cacheTimeout": null,
          "dashLength": 10,
          "dashes": false,
          "datasource": "${DS_PROMETHEUS}",
          "description": "When this value reaches zero, new connections will not be accepted and disk write operations may fail.\n\nClient libraries, peer nodes and CLI tools will not be able to connect when the node runs out of available file descriptors.\n\n* [Open File Handles Limit](https://www.rabbitmq.com/production-checklist.html#resource-limits-file-handle-limit)",
          "fieldConfig": {
            "defaults": {
              "custom": {},
              "links": []
            },
            "overrides": []
          },
          "fill": 0,
          "fillGradient": 0,
          "gridPos": {
            "h": 4,
            "w": 4,
            "x": 20,
            "y": 11
          },
          "hiddenSeries": false,
          "id": 2,
          "legend": {
            "alignAsTable": true,
            "avg": false,
            "current": true,
            "max": true,
            "min": true,
            "rightSide": false,
            "show": false,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "options": {
            "alertThreshold": true
          },
          "percentage": false,
          "pluginVersion": "7.3.2",
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?0(\\b|\\.)/",
              "color": "#56A64B"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?1(\\b|\\.)/",
              "color": "#F2CC0C"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?2(\\b|\\.)/",
              "color": "#3274D9"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?3(\\b|\\.)/",
              "color": "#A352CC"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?4(\\b|\\.)/",
              "color": "#FF780A"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?5(\\b|\\.)/",
              "color": "#96D98D"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?6(\\b|\\.)/",
              "color": "#FFEE52"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?7(\\b|\\.)/",
              "color": "#8AB8FF"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?8(\\b|\\.)/",
              "color": "#CA95E5"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?9(\\b|\\.)/",
              "color": "#FFB357"
            }
          ],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "expr": "(rabbitmq_process_max_fds * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) -\n(rabbitmq_process_open_fds * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"})",
              "format": "time_series",
              "instant": false,
              "intervalFactor": 1,
              "legendFormat": "{{rabbitmq_node}}",
              "refId": "A"
            }
          ],
          "thresholds": [
            {
              "colorMode": "critical",
              "fill": true,
              "line": true,
              "op": "lt",
              "value": 500,
              "yaxis": "left"
            },
            {
              "colorMode": "warning",
              "fill": true,
              "line": true,
              "op": "lt",
              "value": 1000,
              "yaxis": "left"
            }
          ],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "File descriptors available",
          "tooltip": {
            "shared": true,
            "sort": 1,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "decimals": -1,
              "format": "none",
              "label": "",
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": false,
          "cacheTimeout": null,
          "dashLength": 10,
          "dashes": false,
          "datasource": "${DS_PROMETHEUS}",
          "description": "When this value reaches zero, new connections will not be accepted.\n\nClient libraries, peer nodes and CLI tools will not be able to connect when the node runs out of available file descriptors.\n\n* [Networking and RabbitMQ](https://www.rabbitmq.com/networking.html)",
          "fieldConfig": {
            "defaults": {
              "custom": {},
              "links": []
            },
            "overrides": []
          },
          "fill": 0,
          "fillGradient": 0,
          "gridPos": {
            "h": 4,
            "w": 4,
            "x": 20,
            "y": 15
          },
          "hiddenSeries": false,
          "id": 5,
          "legend": {
            "alignAsTable": true,
            "avg": false,
            "current": true,
            "max": true,
            "min": true,
            "show": false,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "options": {
            "alertThreshold": true
          },
          "percentage": false,
          "pluginVersion": "7.3.2",
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?0(\\b|\\.)/",
              "color": "#56A64B"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?1(\\b|\\.)/",
              "color": "#F2CC0C"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?2(\\b|\\.)/",
              "color": "#3274D9"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?3(\\b|\\.)/",
              "color": "#A352CC"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?4(\\b|\\.)/",
              "color": "#FF780A"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?5(\\b|\\.)/",
              "color": "#96D98D"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?6(\\b|\\.)/",
              "color": "#FFEE52"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?7(\\b|\\.)/",
              "color": "#8AB8FF"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?8(\\b|\\.)/",
              "color": "#CA95E5"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?9(\\b|\\.)/",
              "color": "#FFB357"
            }
          ],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "expr": "(rabbitmq_process_max_tcp_sockets * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) -\n(rabbitmq_process_open_tcp_sockets * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"})",
              "format": "time_series",
              "instant": false,
              "intervalFactor": 1,
              "legendFormat": "{{rabbitmq_node}}",
              "refId": "A"
            }
          ],
          "thresholds": [
            {
              "colorMode": "critical",
              "fill": true,
              "line": true,
              "op": "lt",
              "value": 500,
              "yaxis": "left"
            },
            {
              "colorMode": "warning",
              "fill": true,
              "line": true,
              "op": "lt",
              "value": 1000,
              "yaxis": "left"
            }
          ],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "TCP sockets available",
          "tooltip": {
            "shared": true,
            "sort": 1,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "decimals": -1,
              "format": "none",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "collapsed": false,
          "datasource": "${DS_PROMETHEUS}",
          "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 19
          },
          "id": 27,
          "panels": [],
          "title": "QUEUED MESSAGES",
          "type": "row"
        },
        {
          "aliasColors": {},
          "bars": false,
          "cacheTimeout": null,
          "dashLength": 10,
          "dashes": false,
          "datasource": "${DS_PROMETHEUS}",
          "description": "Total number of ready messages ready to be delivered to consumers.\n\nAim to keep this value as low as possible. RabbitMQ behaves best when messages are flowing through it. It's OK for publishers to occasionally outpace consumers, but the expectation is that consumers will eventually process all ready messages.\n\nIf this metric keeps increasing, your system will eventually run out of memory and/or disk space. Consider using TTL or Queue Length Limit to prevent unbounded message growth.\n\n* [Queues](https://www.rabbitmq.com/queues.html)\n* [Consumers](https://www.rabbitmq.com/consumers.html)\n* [Queue Length Limit](https://www.rabbitmq.com/maxlength.html)\n* [Time-To-Live and Expiration](https://www.rabbitmq.com/ttl.html)",
          "fieldConfig": {
            "defaults": {
              "custom": {},
              "links": []
            },
            "overrides": []
          },
          "fill": 10,
          "fillGradient": 0,
          "gridPos": {
            "h": 5,
            "w": 12,
            "x": 0,
            "y": 20
          },
          "hiddenSeries": false,
          "id": 9,
          "legend": {
            "alignAsTable": true,
            "avg": false,
            "current": true,
            "max": true,
            "min": true,
            "rightSide": false,
            "show": false,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null as zero",
          "options": {
            "alertThreshold": true
          },
          "percentage": false,
          "pluginVersion": "7.3.2",
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?0(\\b|\\.)/",
              "color": "#56A64B"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?1(\\b|\\.)/",
              "color": "#F2CC0C"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?2(\\b|\\.)/",
              "color": "#3274D9"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?3(\\b|\\.)/",
              "color": "#A352CC"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?4(\\b|\\.)/",
              "color": "#FF780A"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?5(\\b|\\.)/",
              "color": "#96D98D"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?6(\\b|\\.)/",
              "color": "#FFEE52"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?7(\\b|\\.)/",
              "color": "#8AB8FF"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?8(\\b|\\.)/",
              "color": "#CA95E5"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?9(\\b|\\.)/",
              "color": "#FFB357"
            }
          ],
          "spaceLength": 10,
          "stack": true,
          "steppedLine": false,
          "targets": [
            {
              "expr": "sum(rabbitmq_queue_messages_ready * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) by(rabbitmq_node)",
              "format": "time_series",
              "instant": false,
              "intervalFactor": 1,
              "legendFormat": "{{rabbitmq_node}}",
              "refId": "A"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Messages ready to be delivered to consumers",
          "tooltip": {
            "shared": true,
            "sort": 2,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "decimals": 0,
              "format": "short",
              "label": "",
              "logBase": 1,
              "max": null,
              "min": "0",
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": false,
          "cacheTimeout": null,
          "dashLength": 10,
          "dashes": false,
          "datasource": "${DS_PROMETHEUS}",
          "description": "The total number of messages that are either in-flight to consumers, currently being processed by consumers or simply waiting for the consumer acknowledgements to be processed by the queue. Until the queue processes the message acknowledgement, the message will remain unacknowledged.\n\n* [Queues](https://www.rabbitmq.com/queues.html)\n* [Confirms and Acknowledgements](https://www.rabbitmq.com/confirms.html)\n* [Consumer Prefetch](https://www.rabbitmq.com/consumer-prefetch.html)",
          "fieldConfig": {
            "defaults": {
              "custom": {},
              "links": []
            },
            "overrides": []
          },
          "fill": 10,
          "fillGradient": 0,
          "gridPos": {
            "h": 5,
            "w": 12,
            "x": 12,
            "y": 20
          },
          "hiddenSeries": false,
          "id": 19,
          "legend": {
            "alignAsTable": true,
            "avg": false,
            "current": true,
            "max": true,
            "min": true,
            "rightSide": false,
            "show": false,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null as zero",
          "options": {
            "alertThreshold": true
          },
          "percentage": false,
          "pluginVersion": "7.3.2",
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?0(\\b|\\.)/",
              "color": "#56A64B"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?1(\\b|\\.)/",
              "color": "#F2CC0C"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?2(\\b|\\.)/",
              "color": "#3274D9"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?3(\\b|\\.)/",
              "color": "#A352CC"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?4(\\b|\\.)/",
              "color": "#FF780A"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?5(\\b|\\.)/",
              "color": "#96D98D"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?6(\\b|\\.)/",
              "color": "#FFEE52"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?7(\\b|\\.)/",
              "color": "#8AB8FF"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?8(\\b|\\.)/",
              "color": "#CA95E5"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?9(\\b|\\.)/",
              "color": "#FFB357"
            }
          ],
          "spaceLength": 10,
          "stack": true,
          "steppedLine": false,
          "targets": [
            {
              "expr": "sum(rabbitmq_queue_messages_unacked * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) by(rabbitmq_node)",
              "format": "time_series",
              "instant": false,
              "intervalFactor": 1,
              "legendFormat": "{{rabbitmq_node}}",
              "refId": "A"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Messages pending consumer acknowledgement",
          "tooltip": {
            "shared": true,
            "sort": 2,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "decimals": 0,
              "format": "short",
              "label": "",
              "logBase": 1,
              "max": null,
              "min": "0",
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "collapsed": false,
          "datasource": "${DS_PROMETHEUS}",
          "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 25
          },
          "id": 11,
          "panels": [],
          "title": "INCOMING MESSAGES",
          "type": "row"
        },
        {
          "aliasColors": {},
          "bars": false,
          "cacheTimeout": null,
          "dashLength": 10,
          "dashes": false,
          "datasource": "${DS_PROMETHEUS}",
          "description": "The incoming message rate before any routing rules are applied.\n\nIf this value is lower than the number of messages published to queues, it may indicate that some messages are delivered to more than one queue.\n\nIf this value is higher than the number of messages published to queues, messages cannot be routed and will either be dropped or returned to publishers.\n\n* [Publishers](https://www.rabbitmq.com/publishers.html)",
          "fieldConfig": {
            "defaults": {
              "custom": {},
              "links": []
            },
            "overrides": []
          },
          "fill": 10,
          "fillGradient": 0,
          "gridPos": {
            "h": 5,
            "w": 12,
            "x": 0,
            "y": 26
          },
          "hiddenSeries": false,
          "id": 13,
          "legend": {
            "alignAsTable": true,
            "avg": false,
            "current": true,
            "max": true,
            "min": true,
            "rightSide": false,
            "show": false,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null as zero",
          "options": {
            "alertThreshold": true
          },
          "percentage": false,
          "pluginVersion": "7.3.2",
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?0(\\b|\\.)/",
              "color": "#56A64B"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?1(\\b|\\.)/",
              "color": "#F2CC0C"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?2(\\b|\\.)/",
              "color": "#3274D9"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?3(\\b|\\.)/",
              "color": "#A352CC"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?4(\\b|\\.)/",
              "color": "#FF780A"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?5(\\b|\\.)/",
              "color": "#96D98D"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?6(\\b|\\.)/",
              "color": "#FFEE52"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?7(\\b|\\.)/",
              "color": "#8AB8FF"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?8(\\b|\\.)/",
              "color": "#CA95E5"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?9(\\b|\\.)/",
              "color": "#FFB357"
            }
          ],
          "spaceLength": 10,
          "stack": true,
          "steppedLine": false,
          "targets": [
            {
              "expr": "sum(rate(rabbitmq_channel_messages_published_total[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) by(rabbitmq_node)",
              "format": "time_series",
              "instant": false,
              "intervalFactor": 1,
              "legendFormat": "{{rabbitmq_node}}",
              "refId": "A"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Messages published / s",
          "tooltip": {
            "shared": true,
            "sort": 2,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "decimals": 0,
              "format": "short",
              "label": "",
              "logBase": 1,
              "max": null,
              "min": "0",
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": false,
          "cacheTimeout": null,
          "dashLength": 10,
          "dashes": false,
          "datasource": "${DS_PROMETHEUS}",
          "description": "The rate of messages confirmed by the broker to publishers. Publishers must opt-in to receive message confirmations.\n\nIf this metric is consistently at zero it may suggest that publisher confirms are not used by clients. The safety of published messages is likely to be at risk.\n\n* [Publisher Confirms](https://www.rabbitmq.com/confirms.html#publisher-confirms)\n* [Publisher Confirms and Data Safety](https://www.rabbitmq.com/publishers.html#data-safety)\n* [When Will Published Messages Be Confirmed by the Broker?](https://www.rabbitmq.com/confirms.html#when-publishes-are-confirmed)",
          "fieldConfig": {
            "defaults": {
              "custom": {},
              "links": []
            },
            "overrides": []
          },
          "fill": 10,
          "fillGradient": 0,
          "gridPos": {
            "h": 5,
            "w": 12,
            "x": 12,
            "y": 26
          },
          "hiddenSeries": false,
          "id": 18,
          "legend": {
            "alignAsTable": true,
            "avg": false,
            "current": true,
            "max": true,
            "min": true,
            "rightSide": false,
            "show": false,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null as zero",
          "options": {
            "alertThreshold": true
          },
          "percentage": false,
          "pluginVersion": "7.3.2",
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?0(\\b|\\.)/",
              "color": "#56A64B"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?1(\\b|\\.)/",
              "color": "#F2CC0C"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?2(\\b|\\.)/",
              "color": "#3274D9"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?3(\\b|\\.)/",
              "color": "#A352CC"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?4(\\b|\\.)/",
              "color": "#FF780A"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?5(\\b|\\.)/",
              "color": "#96D98D"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?6(\\b|\\.)/",
              "color": "#FFEE52"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?7(\\b|\\.)/",
              "color": "#8AB8FF"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?8(\\b|\\.)/",
              "color": "#CA95E5"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?9(\\b|\\.)/",
              "color": "#FFB357"
            }
          ],
          "spaceLength": 10,
          "stack": true,
          "steppedLine": false,
          "targets": [
            {
              "expr": "sum(rate(rabbitmq_channel_messages_confirmed_total[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) by(rabbitmq_node)",
              "format": "time_series",
              "instant": false,
              "intervalFactor": 1,
              "legendFormat": "{{rabbitmq_node}}",
              "refId": "A"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Messages confirmed to publishers / s",
          "tooltip": {
            "shared": true,
            "sort": 2,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "decimals": 0,
              "format": "short",
              "label": "",
              "logBase": 1,
              "max": null,
              "min": "0",
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": false,
          "cacheTimeout": null,
          "dashLength": 10,
          "dashes": false,
          "datasource": "${DS_PROMETHEUS}",
          "description": "The rate of messages received from publishers and successfully routed to the master queue replicas.\n\n* [Queues](https://www.rabbitmq.com/queues.html)\n* [Publishers](https://www.rabbitmq.com/publishers.html)",
          "fieldConfig": {
            "defaults": {
              "custom": {},
              "links": []
            },
            "overrides": []
          },
          "fill": 10,
          "fillGradient": 0,
          "gridPos": {
            "h": 5,
            "w": 12,
            "x": 0,
            "y": 31
          },
          "hiddenSeries": false,
          "id": 61,
          "legend": {
            "alignAsTable": true,
            "avg": false,
            "current": true,
            "max": true,
            "min": true,
            "rightSide": false,
            "show": false,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null as zero",
          "options": {
            "alertThreshold": true
          },
          "percentage": false,
          "pluginVersion": "7.3.2",
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?0(\\b|\\.)/",
              "color": "#56A64B"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?1(\\b|\\.)/",
              "color": "#F2CC0C"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?2(\\b|\\.)/",
              "color": "#3274D9"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?3(\\b|\\.)/",
              "color": "#A352CC"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?4(\\b|\\.)/",
              "color": "#FF780A"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?5(\\b|\\.)/",
              "color": "#96D98D"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?6(\\b|\\.)/",
              "color": "#FFEE52"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?7(\\b|\\.)/",
              "color": "#8AB8FF"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?8(\\b|\\.)/",
              "color": "#CA95E5"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?9(\\b|\\.)/",
              "color": "#FFB357"
            }
          ],
          "spaceLength": 10,
          "stack": true,
          "steppedLine": false,
          "targets": [
            {
              "expr": "sum(rate(rabbitmq_queue_messages_published_total[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) by(rabbitmq_node)",
              "format": "time_series",
              "instant": false,
              "intervalFactor": 1,
              "legendFormat": "{{rabbitmq_node}}",
              "refId": "A"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Messages routed to queues / s",
          "tooltip": {
            "shared": true,
            "sort": 2,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "decimals": 0,
              "format": "short",
              "label": "",
              "logBase": 1,
              "max": null,
              "min": "0",
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": false,
          "cacheTimeout": null,
          "dashLength": 10,
          "dashes": false,
          "datasource": "${DS_PROMETHEUS}",
          "description": "The rate of messages received from publishers that have publisher confirms enabled and the broker has not confirmed yet.\n\n* [Publishers](https://www.rabbitmq.com/publishers.html)\n* [Confirms and Acknowledgements](https://www.rabbitmq.com/confirms.html)\n* [When Will Published Messages Be Confirmed by the Broker?](https://www.rabbitmq.com/confirms.html#when-publishes-are-confirmed)",
          "fieldConfig": {
            "defaults": {
              "custom": {},
              "links": []
            },
            "overrides": []
          },
          "fill": 10,
          "fillGradient": 0,
          "gridPos": {
            "h": 5,
            "w": 12,
            "x": 12,
            "y": 31
          },
          "hiddenSeries": false,
          "id": 12,
          "legend": {
            "alignAsTable": true,
            "avg": false,
            "current": true,
            "max": true,
            "min": true,
            "rightSide": false,
            "show": false,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "options": {
            "alertThreshold": true
          },
          "percentage": false,
          "pluginVersion": "7.3.2",
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?0(\\b|\\.)/",
              "color": "#56A64B"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?1(\\b|\\.)/",
              "color": "#F2CC0C"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?2(\\b|\\.)/",
              "color": "#3274D9"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?3(\\b|\\.)/",
              "color": "#A352CC"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?4(\\b|\\.)/",
              "color": "#FF780A"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?5(\\b|\\.)/",
              "color": "#96D98D"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?6(\\b|\\.)/",
              "color": "#FFEE52"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?7(\\b|\\.)/",
              "color": "#8AB8FF"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?8(\\b|\\.)/",
              "color": "#CA95E5"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?9(\\b|\\.)/",
              "color": "#FFB357"
            }
          ],
          "spaceLength": 10,
          "stack": true,
          "steppedLine": false,
          "targets": [
            {
              "expr": "sum(rate(rabbitmq_channel_messages_unconfirmed[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) by(rabbitmq_node)",
              "format": "time_series",
              "instant": false,
              "intervalFactor": 1,
              "legendFormat": "{{rabbitmq_node}}",
              "refId": "A"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Messages unconfirmed to publishers / s",
          "tooltip": {
            "shared": true,
            "sort": 2,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "decimals": 0,
              "format": "short",
              "label": "",
              "logBase": 1,
              "max": null,
              "min": "0",
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": false,
          "cacheTimeout": null,
          "dashLength": 10,
          "dashes": false,
          "datasource": "${DS_PROMETHEUS}",
          "description": "The rate of messages that cannot be routed and are dropped. \n\nAny value above zero means message loss and likely suggests a routing problem on the publisher end.\n\n* [Unroutable Message Handling](https://www.rabbitmq.com/publishers.html#unroutable)",
          "fieldConfig": {
            "defaults": {
              "custom": {},
              "links": []
            },
            "overrides": []
          },
          "fill": 10,
          "fillGradient": 0,
          "gridPos": {
            "h": 5,
            "w": 12,
            "x": 0,
            "y": 36
          },
          "hiddenSeries": false,
          "id": 34,
          "legend": {
            "alignAsTable": true,
            "avg": false,
            "current": true,
            "max": true,
            "min": true,
            "rightSide": false,
            "show": false,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null as zero",
          "options": {
            "alertThreshold": true
          },
          "percentage": false,
          "pluginVersion": "7.3.2",
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [
            {
              "alias": "/rabbit/",
              "color": "#C4162A"
            }
          ],
          "spaceLength": 10,
          "stack": true,
          "steppedLine": false,
          "targets": [
            {
              "expr": "sum(rate(rabbitmq_channel_messages_unroutable_dropped_total[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) by(rabbitmq_node)",
              "format": "time_series",
              "instant": false,
              "intervalFactor": 1,
              "legendFormat": "{{rabbitmq_node}}",
              "refId": "A"
            }
          ],
          "thresholds": [
            {
              "colorMode": "critical",
              "fill": true,
              "line": true,
              "op": "gt",
              "value": 0,
              "yaxis": "left"
            }
          ],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Unroutable messages dropped / s",
          "tooltip": {
            "shared": true,
            "sort": 2,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "decimals": null,
              "format": "short",
              "label": "",
              "logBase": 1,
              "max": null,
              "min": "0",
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": false,
          "cacheTimeout": null,
          "dashLength": 10,
          "dashes": false,
          "datasource": "${DS_PROMETHEUS}",
          "description": "The rate of messages that cannot be routed and are returned back to publishers.\n\nSustained values above zero may indicate a routing problem on the publisher end.\n\n* [Unroutable Message Handling](https://www.rabbitmq.com/publishers.html#unroutable)\n* [When Will Published Messages Be Confirmed by the Broker?](https://www.rabbitmq.com/confirms.html#when-publishes-are-confirmed)",
          "fieldConfig": {
            "defaults": {
              "custom": {},
              "links": []
            },
            "overrides": []
          },
          "fill": 10,
          "fillGradient": 0,
          "gridPos": {
            "h": 5,
            "w": 12,
            "x": 12,
            "y": 36
          },
          "hiddenSeries": false,
          "id": 16,
          "legend": {
            "alignAsTable": true,
            "avg": false,
            "current": true,
            "max": true,
            "min": true,
            "rightSide": false,
            "show": false,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null as zero",
          "options": {
            "alertThreshold": true
          },
          "percentage": false,
          "pluginVersion": "7.3.2",
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [
            {
              "alias": "/rabbit/",
              "color": "#C4162A"
            }
          ],
          "spaceLength": 10,
          "stack": true,
          "steppedLine": false,
          "targets": [
            {
              "expr": "sum(rate(rabbitmq_channel_messages_unroutable_returned_total[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) by(rabbitmq_node)",
              "format": "time_series",
              "instant": false,
              "intervalFactor": 1,
              "legendFormat": "{{rabbitmq_node}}",
              "refId": "A"
            }
          ],
          "thresholds": [
            {
              "colorMode": "critical",
              "fill": true,
              "line": true,
              "op": "gt",
              "value": 0,
              "yaxis": "left"
            }
          ],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Unroutable messages returned to publishers / s",
          "tooltip": {
            "shared": true,
            "sort": 2,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "decimals": null,
              "format": "short",
              "label": "",
              "logBase": 1,
              "max": null,
              "min": "0",
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "collapsed": false,
          "datasource": "${DS_PROMETHEUS}",
          "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 41
          },
          "id": 29,
          "panels": [],
          "title": "OUTGOING MESSAGES",
          "type": "row"
        },
        {
          "aliasColors": {},
          "bars": false,
          "cacheTimeout": null,
          "dashLength": 10,
          "dashes": false,
          "datasource": "${DS_PROMETHEUS}",
          "description": "The rate of messages delivered to consumers. It includes messages that have been redelivered.\n\nThis metric does not include messages that have been fetched by consumers using `basic.get` (consumed by polling).\n\n* [Consumers](https://www.rabbitmq.com/consumers.html)",
          "fieldConfig": {
            "defaults": {
              "custom": {},
              "links": []
            },
            "overrides": []
          },
          "fill": 10,
          "fillGradient": 0,
          "gridPos": {
            "h": 5,
            "w": 12,
            "x": 0,
            "y": 42
          },
          "hiddenSeries": false,
          "id": 14,
          "legend": {
            "alignAsTable": true,
            "avg": false,
            "current": true,
            "max": true,
            "min": true,
            "rightSide": false,
            "show": false,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null as zero",
          "options": {
            "alertThreshold": true
          },
          "percentage": false,
          "pluginVersion": "7.3.2",
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?0(\\b|\\.)/",
              "color": "#56A64B"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?1(\\b|\\.)/",
              "color": "#F2CC0C"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?2(\\b|\\.)/",
              "color": "#3274D9"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?3(\\b|\\.)/",
              "color": "#A352CC"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?4(\\b|\\.)/",
              "color": "#FF780A"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?5(\\b|\\.)/",
              "color": "#96D98D"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?6(\\b|\\.)/",
              "color": "#FFEE52"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?7(\\b|\\.)/",
              "color": "#8AB8FF"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?8(\\b|\\.)/",
              "color": "#CA95E5"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?9(\\b|\\.)/",
              "color": "#FFB357"
            }
          ],
          "spaceLength": 10,
          "stack": true,
          "steppedLine": false,
          "targets": [
            {
              "expr": "sum(\n  (rate(rabbitmq_channel_messages_delivered_total[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) +\n  (rate(rabbitmq_channel_messages_delivered_ack_total[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"})\n) by(rabbitmq_node)",
              "format": "time_series",
              "instant": false,
              "intervalFactor": 1,
              "legendFormat": "{{rabbitmq_node}}",
              "refId": "A"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Messages delivered / s",
          "tooltip": {
            "shared": true,
            "sort": 2,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "decimals": 0,
              "format": "short",
              "label": "",
              "logBase": 1,
              "max": null,
              "min": "0",
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": false,
          "cacheTimeout": null,
          "dashLength": 10,
          "dashes": false,
          "datasource": "${DS_PROMETHEUS}",
          "description": "The rate of messages that have been redelivered to consumers. It includes messages that have been requeued automatically and redelivered due to channel exceptions or connection closures.\n\nHaving some redeliveries is expected, but if this metric is consistently non-zero, it is worth investigating why.\n\n* [Negative Acknowledgement and Requeuing of Deliveries](https://www.rabbitmq.com/confirms.html#consumer-nacks-requeue)\n* [Consumers](https://www.rabbitmq.com/consumers.html)",
          "fieldConfig": {
            "defaults": {
              "custom": {},
              "links": []
            },
            "overrides": []
          },
          "fill": 10,
          "fillGradient": 0,
          "gridPos": {
            "h": 5,
            "w": 12,
            "x": 12,
            "y": 42
          },
          "hiddenSeries": false,
          "id": 15,
          "legend": {
            "alignAsTable": true,
            "avg": false,
            "current": true,
            "max": true,
            "min": true,
            "rightSide": false,
            "show": false,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null as zero",
          "options": {
            "alertThreshold": true
          },
          "percentage": false,
          "pluginVersion": "7.3.2",
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?0(\\b|\\.)/",
              "color": "#56A64B"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?1(\\b|\\.)/",
              "color": "#F2CC0C"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?2(\\b|\\.)/",
              "color": "#3274D9"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?3(\\b|\\.)/",
              "color": "#A352CC"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?4(\\b|\\.)/",
              "color": "#FF780A"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?5(\\b|\\.)/",
              "color": "#96D98D"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?6(\\b|\\.)/",
              "color": "#FFEE52"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?7(\\b|\\.)/",
              "color": "#8AB8FF"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?8(\\b|\\.)/",
              "color": "#CA95E5"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?9(\\b|\\.)/",
              "color": "#FFB357"
            }
          ],
          "spaceLength": 10,
          "stack": true,
          "steppedLine": false,
          "targets": [
            {
              "expr": "sum(rate(rabbitmq_channel_messages_redelivered_total[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) by(rabbitmq_node)",
              "format": "time_series",
              "instant": false,
              "intervalFactor": 1,
              "legendFormat": "{{rabbitmq_node}}",
              "refId": "A"
            }
          ],
          "thresholds": [
            {
              "colorMode": "warning",
              "fill": true,
              "line": true,
              "op": "gt",
              "value": 20,
              "yaxis": "left"
            },
            {
              "colorMode": "critical",
              "fill": true,
              "line": true,
              "op": "gt",
              "value": 100,
              "yaxis": "left"
            }
          ],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Messages redelivered / s",
          "tooltip": {
            "shared": true,
            "sort": 2,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "decimals": null,
              "format": "short",
              "label": "",
              "logBase": 1,
              "max": null,
              "min": "0",
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": false,
          "cacheTimeout": null,
          "dashLength": 10,
          "dashes": false,
          "datasource": "${DS_PROMETHEUS}",
          "description": "The rate of message deliveries to consumers that use manual acknowledgement mode.\n\nWhen this mode is used, RabbitMQ waits for consumers to acknowledge messages before more messages can be delivered.\n\nThis is the safest way of consuming messages.\n\n* [Consumer Acknowledgements](https://www.rabbitmq.com/confirms.html)\n* [Consumer Prefetch](https://www.rabbitmq.com/consumer-prefetch.html)\n* [Consumer Acknowledgement Modes, Prefetch and Throughput](https://www.rabbitmq.com/confirms.html#channel-qos-prefetch-throughput)\n* [Consumers](https://www.rabbitmq.com/consumers.html)",
          "fieldConfig": {
            "defaults": {
              "custom": {},
              "links": []
            },
            "overrides": []
          },
          "fill": 10,
          "fillGradient": 0,
          "gridPos": {
            "h": 5,
            "w": 12,
            "x": 0,
            "y": 47
          },
          "hiddenSeries": false,
          "id": 20,
          "legend": {
            "alignAsTable": true,
            "avg": false,
            "current": true,
            "max": true,
            "min": true,
            "rightSide": false,
            "show": false,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null as zero",
          "options": {
            "alertThreshold": true
          },
          "percentage": false,
          "pluginVersion": "7.3.2",
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?0(\\b|\\.)/",
              "color": "#56A64B"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?1(\\b|\\.)/",
              "color": "#F2CC0C"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?2(\\b|\\.)/",
              "color": "#3274D9"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?3(\\b|\\.)/",
              "color": "#A352CC"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?4(\\b|\\.)/",
              "color": "#FF780A"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?5(\\b|\\.)/",
              "color": "#96D98D"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?6(\\b|\\.)/",
              "color": "#FFEE52"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?7(\\b|\\.)/",
              "color": "#8AB8FF"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?8(\\b|\\.)/",
              "color": "#CA95E5"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?9(\\b|\\.)/",
              "color": "#FFB357"
            }
          ],
          "spaceLength": 10,
          "stack": true,
          "steppedLine": false,
          "targets": [
            {
              "expr": "sum(rate(rabbitmq_channel_messages_delivered_ack_total[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) by(rabbitmq_node)",
              "format": "time_series",
              "instant": false,
              "intervalFactor": 1,
              "legendFormat": "{{rabbitmq_node}}",
              "refId": "A"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Messages delivered with manual ack / s",
          "tooltip": {
            "shared": true,
            "sort": 2,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "decimals": 0,
              "format": "short",
              "label": "",
              "logBase": 1,
              "max": null,
              "min": "0",
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": false,
          "cacheTimeout": null,
          "dashLength": 10,
          "dashes": false,
          "datasource": "${DS_PROMETHEUS}",
          "description": "The rate of message deliveries to consumers that use automatic acknowledgement mode.\n\nWhen this mode is used, RabbitMQ does not wait for consumers to acknowledge message deliveries.\n\nThis mode is fire-and-forget and does not offer any delivery safety guarantees. It tends to provide higher throughput and it may lead to consumer overload  and higher consumer memory usage.\n\n* [Consumer Acknowledgement Modes, Prefetch and Throughput](https://www.rabbitmq.com/confirms.html#channel-qos-prefetch-throughput)\n* [Consumers](https://www.rabbitmq.com/consumers.html)",
          "fieldConfig": {
            "defaults": {
              "custom": {},
              "links": []
            },
            "overrides": []
          },
          "fill": 10,
          "fillGradient": 0,
          "gridPos": {
            "h": 5,
            "w": 12,
            "x": 12,
            "y": 47
          },
          "hiddenSeries": false,
          "id": 21,
          "legend": {
            "alignAsTable": true,
            "avg": false,
            "current": true,
            "max": true,
            "min": true,
            "rightSide": false,
            "show": false,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null as zero",
          "options": {
            "alertThreshold": true
          },
          "percentage": false,
          "pluginVersion": "7.3.2",
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?0(\\b|\\.)/",
              "color": "#56A64B"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?1(\\b|\\.)/",
              "color": "#F2CC0C"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?2(\\b|\\.)/",
              "color": "#3274D9"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?3(\\b|\\.)/",
              "color": "#A352CC"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?4(\\b|\\.)/",
              "color": "#FF780A"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?5(\\b|\\.)/",
              "color": "#96D98D"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?6(\\b|\\.)/",
              "color": "#FFEE52"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?7(\\b|\\.)/",
              "color": "#8AB8FF"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?8(\\b|\\.)/",
              "color": "#CA95E5"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?9(\\b|\\.)/",
              "color": "#FFB357"
            }
          ],
          "spaceLength": 10,
          "stack": true,
          "steppedLine": false,
          "targets": [
            {
              "expr": "sum(rate(rabbitmq_channel_messages_delivered_total[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) by(rabbitmq_node)",
              "format": "time_series",
              "instant": false,
              "intervalFactor": 1,
              "legendFormat": "{{rabbitmq_node}}",
              "refId": "A"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Messages delivered auto ack / s",
          "tooltip": {
            "shared": true,
            "sort": 2,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "decimals": 0,
              "format": "short",
              "label": "",
              "logBase": 1,
              "max": null,
              "min": "0",
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": false,
          "cacheTimeout": null,
          "dashLength": 10,
          "dashes": false,
          "datasource": "${DS_PROMETHEUS}",
          "description": "The rate of message acknowledgements coming from consumers that use manual acknowledgement mode.\n\n* [Consumer Acknowledgements](https://www.rabbitmq.com/confirms.html)\n* [Consumer Prefetch](https://www.rabbitmq.com/consumer-prefetch.html)\n* [Consumer Acknowledgement Modes, Prefetch and Throughput](https://www.rabbitmq.com/confirms.html#channel-qos-prefetch-throughput)\n* [Consumers](https://www.rabbitmq.com/consumers.html)",
          "fieldConfig": {
            "defaults": {
              "custom": {},
              "links": []
            },
            "overrides": []
          },
          "fill": 10,
          "fillGradient": 0,
          "gridPos": {
            "h": 5,
            "w": 12,
            "x": 0,
            "y": 52
          },
          "hiddenSeries": false,
          "id": 22,
          "legend": {
            "alignAsTable": true,
            "avg": false,
            "current": true,
            "max": true,
            "min": true,
            "rightSide": false,
            "show": false,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null as zero",
          "options": {
            "alertThreshold": true
          },
          "percentage": false,
          "pluginVersion": "7.3.2",
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?0(\\b|\\.)/",
              "color": "#56A64B"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?1(\\b|\\.)/",
              "color": "#F2CC0C"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?2(\\b|\\.)/",
              "color": "#3274D9"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?3(\\b|\\.)/",
              "color": "#A352CC"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?4(\\b|\\.)/",
              "color": "#FF780A"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?5(\\b|\\.)/",
              "color": "#96D98D"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?6(\\b|\\.)/",
              "color": "#FFEE52"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?7(\\b|\\.)/",
              "color": "#8AB8FF"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?8(\\b|\\.)/",
              "color": "#CA95E5"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?9(\\b|\\.)/",
              "color": "#FFB357"
            }
          ],
          "spaceLength": 10,
          "stack": true,
          "steppedLine": false,
          "targets": [
            {
              "expr": "sum(rate(rabbitmq_channel_messages_acked_total[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) by(rabbitmq_node)",
              "format": "time_series",
              "instant": false,
              "intervalFactor": 1,
              "legendFormat": "{{rabbitmq_node}}",
              "refId": "A"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Messages acknowledged / s",
          "tooltip": {
            "shared": true,
            "sort": 2,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "decimals": 0,
              "format": "short",
              "label": "",
              "logBase": 1,
              "max": null,
              "min": "0",
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": false,
          "cacheTimeout": null,
          "dashLength": 10,
          "dashes": false,
          "datasource": "${DS_PROMETHEUS}",
          "description": "The rate of messages delivered to polling consumers that use automatic acknowledgement mode.\n\nThe use of polling consumers is highly inefficient and therefore strongly discouraged.\n\n* [Fetching individual messages](https://www.rabbitmq.com/consumers.html#fetching)\n* [Consumers](https://www.rabbitmq.com/consumers.html)",
          "fieldConfig": {
            "defaults": {
              "custom": {},
              "links": []
            },
            "overrides": []
          },
          "fill": 10,
          "fillGradient": 0,
          "gridPos": {
            "h": 5,
            "w": 12,
            "x": 12,
            "y": 52
          },
          "hiddenSeries": false,
          "id": 24,
          "legend": {
            "alignAsTable": true,
            "avg": false,
            "current": true,
            "max": true,
            "min": true,
            "rightSide": false,
            "show": false,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null as zero",
          "options": {
            "alertThreshold": true
          },
          "percentage": false,
          "pluginVersion": "7.3.2",
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [
            {
              "alias": "/rabbit/",
              "color": "#C4162A"
            }
          ],
          "spaceLength": 10,
          "stack": true,
          "steppedLine": false,
          "targets": [
            {
              "expr": "sum(rate(rabbitmq_channel_get_total[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) by(rabbitmq_node)",
              "format": "time_series",
              "instant": false,
              "intervalFactor": 1,
              "legendFormat": "{{rabbitmq_node}}",
              "refId": "A"
            }
          ],
          "thresholds": [
            {
              "colorMode": "critical",
              "fill": true,
              "line": true,
              "op": "gt",
              "value": 0,
              "yaxis": "left"
            }
          ],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Polling operations with auto ack / s",
          "tooltip": {
            "shared": true,
            "sort": 2,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "decimals": null,
              "format": "short",
              "label": "",
              "logBase": 1,
              "max": null,
              "min": "0",
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": false,
          "cacheTimeout": null,
          "dashLength": 10,
          "dashes": false,
          "datasource": "${DS_PROMETHEUS}",
          "description": "The rate of polling consumer operations that yield no result.\n\nAny value above zero means that RabbitMQ resources are wasted by polling consumers.\n\nCompare this metric to the other polling consumer metrics to see the inefficiency rate.\n\nThe use of polling consumers is highly inefficient and therefore strongly discouraged.\n\n* [Fetching individual messages](https://www.rabbitmq.com/consumers.html#fetching)\n* [Consumers](https://www.rabbitmq.com/consumers.html)",
          "fieldConfig": {
            "defaults": {
              "custom": {},
              "links": []
            },
            "overrides": []
          },
          "fill": 10,
          "fillGradient": 0,
          "gridPos": {
            "h": 5,
            "w": 12,
            "x": 0,
            "y": 57
          },
          "hiddenSeries": false,
          "id": 25,
          "legend": {
            "alignAsTable": true,
            "avg": false,
            "current": true,
            "hideEmpty": false,
            "max": true,
            "min": true,
            "rightSide": false,
            "show": false,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null as zero",
          "options": {
            "alertThreshold": true
          },
          "percentage": false,
          "pluginVersion": "7.3.2",
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [
            {
              "alias": "/rabbit/",
              "color": "#C4162A"
            }
          ],
          "spaceLength": 10,
          "stack": true,
          "steppedLine": false,
          "targets": [
            {
              "expr": "sum(rate(rabbitmq_channel_get_empty_total[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) by(rabbitmq_node)",
              "format": "time_series",
              "instant": false,
              "intervalFactor": 1,
              "legendFormat": "{{rabbitmq_node}}",
              "refId": "A"
            }
          ],
          "thresholds": [
            {
              "colorMode": "critical",
              "fill": true,
              "line": true,
              "op": "gt",
              "value": 0,
              "yaxis": "left"
            }
          ],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Polling operations that yield no result / s",
          "tooltip": {
            "shared": true,
            "sort": 2,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "decimals": null,
              "format": "short",
              "label": "",
              "logBase": 1,
              "max": null,
              "min": "0",
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": false,
          "cacheTimeout": null,
          "dashLength": 10,
          "dashes": false,
          "datasource": "${DS_PROMETHEUS}",
          "description": "The rate of messages delivered to polling consumers that use manual acknowledgement mode.\n\nThe use of polling consumers is highly inefficient and therefore strongly discouraged.\n\n* [Fetching individual messages](https://www.rabbitmq.com/consumers.html#fetching)\n* [Consumers](https://www.rabbitmq.com/consumers.html)",
          "fieldConfig": {
            "defaults": {
              "custom": {},
              "links": []
            },
            "overrides": []
          },
          "fill": 10,
          "fillGradient": 0,
          "gridPos": {
            "h": 5,
            "w": 12,
            "x": 12,
            "y": 57
          },
          "hiddenSeries": false,
          "id": 23,
          "legend": {
            "alignAsTable": true,
            "avg": false,
            "current": true,
            "max": true,
            "min": true,
            "rightSide": false,
            "show": false,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null as zero",
          "options": {
            "alertThreshold": true
          },
          "percentage": false,
          "pluginVersion": "7.3.2",
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [
            {
              "alias": "/rabbit/",
              "color": "#C4162A"
            }
          ],
          "spaceLength": 10,
          "stack": true,
          "steppedLine": false,
          "targets": [
            {
              "expr": "sum(rate(rabbitmq_channel_get_ack_total[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) by(rabbitmq_node)",
              "format": "time_series",
              "instant": false,
              "intervalFactor": 1,
              "legendFormat": "{{rabbitmq_node}}",
              "refId": "A"
            }
          ],
          "thresholds": [
            {
              "colorMode": "critical",
              "fill": true,
              "line": true,
              "op": "gt",
              "value": 0,
              "yaxis": "left"
            }
          ],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Polling operations with manual ack / s",
          "tooltip": {
            "shared": true,
            "sort": 2,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "decimals": null,
              "format": "short",
              "label": "",
              "logBase": 1,
              "max": null,
              "min": "0",
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "collapsed": false,
          "datasource": "${DS_PROMETHEUS}",
          "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 62
          },
          "id": 53,
          "panels": [],
          "title": "QUEUES",
          "type": "row"
        },
        {
          "aliasColors": {},
          "bars": false,
          "cacheTimeout": null,
          "dashLength": 10,
          "dashes": false,
          "datasource": "${DS_PROMETHEUS}",
          "description": "Total number of queue masters  per node. \n\nThis metric makes it easy to see sub-optimal queue distribution in a cluster.\n\n* [Queue Masters, Data Locality](https://www.rabbitmq.com/ha.html#master-migration-data-locality)\n* [Queues](https://www.rabbitmq.com/queues.html)",
          "fieldConfig": {
            "defaults": {
              "custom": {},
              "links": []
            },
            "overrides": []
          },
          "fill": 10,
          "fillGradient": 0,
          "gridPos": {
            "h": 5,
            "w": 12,
            "x": 0,
            "y": 63
          },
          "hiddenSeries": false,
          "id": 57,
          "legend": {
            "alignAsTable": true,
            "avg": false,
            "current": true,
            "max": true,
            "min": true,
            "rightSide": false,
            "show": false,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null as zero",
          "options": {
            "alertThreshold": true
          },
          "percentage": false,
          "pluginVersion": "7.3.2",
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?0(\\b|\\.)/",
              "color": "#56A64B"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?1(\\b|\\.)/",
              "color": "#F2CC0C"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?2(\\b|\\.)/",
              "color": "#3274D9"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?3(\\b|\\.)/",
              "color": "#A352CC"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?4(\\b|\\.)/",
              "color": "#FF780A"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?5(\\b|\\.)/",
              "color": "#96D98D"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?6(\\b|\\.)/",
              "color": "#FFEE52"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?7(\\b|\\.)/",
              "color": "#8AB8FF"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?8(\\b|\\.)/",
              "color": "#CA95E5"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?9(\\b|\\.)/",
              "color": "#FFB357"
            }
          ],
          "spaceLength": 10,
          "stack": true,
          "steppedLine": false,
          "targets": [
            {
              "expr": "rabbitmq_queues * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}",
              "format": "time_series",
              "instant": false,
              "interval": "",
              "intervalFactor": 1,
              "legendFormat": "{{rabbitmq_node}}",
              "refId": "A"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Total queues",
          "tooltip": {
            "shared": true,
            "sort": 2,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "decimals": -1,
              "format": "short",
              "label": "",
              "logBase": 1,
              "max": null,
              "min": "0",
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": false,
          "cacheTimeout": null,
          "dashLength": 10,
          "dashes": false,
          "datasource": "${DS_PROMETHEUS}",
          "description": "The rate of queue declarations performed by clients.\n\nLow sustained values above zero are to be expected. High rates may be indicative of queue churn or high rates of connection recovery. Confirm connection recovery rates by using the _Connections opened_ metric.\n\n* [Queues](https://www.rabbitmq.com/queues.html)",
          "fieldConfig": {
            "defaults": {
              "custom": {},
              "links": []
            },
            "overrides": []
          },
          "fill": 10,
          "fillGradient": 0,
          "gridPos": {
            "h": 5,
            "w": 4,
            "x": 12,
            "y": 63
          },
          "hiddenSeries": false,
          "id": 58,
          "legend": {
            "alignAsTable": true,
            "avg": false,
            "current": true,
            "max": true,
            "min": true,
            "rightSide": false,
            "show": false,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null as zero",
          "options": {
            "alertThreshold": true
          },
          "percentage": false,
          "pluginVersion": "7.3.2",
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?0(\\b|\\.)/",
              "color": "#56A64B"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?1(\\b|\\.)/",
              "color": "#F2CC0C"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?2(\\b|\\.)/",
              "color": "#3274D9"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?3(\\b|\\.)/",
              "color": "#A352CC"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?4(\\b|\\.)/",
              "color": "#FF780A"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?5(\\b|\\.)/",
              "color": "#96D98D"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?6(\\b|\\.)/",
              "color": "#FFEE52"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?7(\\b|\\.)/",
              "color": "#8AB8FF"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?8(\\b|\\.)/",
              "color": "#CA95E5"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?9(\\b|\\.)/",
              "color": "#FFB357"
            }
          ],
          "spaceLength": 10,
          "stack": true,
          "steppedLine": false,
          "targets": [
            {
              "expr": "sum(rate(rabbitmq_queues_declared_total[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) by(rabbitmq_node)",
              "format": "time_series",
              "instant": false,
              "intervalFactor": 1,
              "legendFormat": "{{rabbitmq_node}}",
              "refId": "A"
            }
          ],
          "thresholds": [
            {
              "colorMode": "warning",
              "fill": true,
              "line": true,
              "op": "gt",
              "value": 2,
              "yaxis": "left"
            },
            {
              "colorMode": "critical",
              "fill": true,
              "line": true,
              "op": "gt",
              "value": 10,
              "yaxis": "left"
            }
          ],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Queues declared / s",
          "tooltip": {
            "shared": true,
            "sort": 2,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "decimals": null,
              "format": "short",
              "label": "",
              "logBase": 1,
              "max": null,
              "min": "0",
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": false,
          "cacheTimeout": null,
          "dashLength": 10,
          "dashes": false,
          "datasource": "${DS_PROMETHEUS}",
          "description": "The rate of new queues created (as opposed to redeclarations).\n\nLow sustained values above zero are to be expected. High rates may be indicative of queue churn or high rates of connection recovery. Confirm connection recovery rates by using the _Connections opened_ metric.\n\n* [Queues](https://www.rabbitmq.com/queues.html)",
          "fieldConfig": {
            "defaults": {
              "custom": {},
              "links": []
            },
            "overrides": []
          },
          "fill": 10,
          "fillGradient": 0,
          "gridPos": {
            "h": 5,
            "w": 4,
            "x": 16,
            "y": 63
          },
          "hiddenSeries": false,
          "id": 60,
          "legend": {
            "alignAsTable": true,
            "avg": false,
            "current": true,
            "max": true,
            "min": true,
            "rightSide": false,
            "show": false,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null as zero",
          "options": {
            "alertThreshold": true
          },
          "percentage": false,
          "pluginVersion": "7.3.2",
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?0(\\b|\\.)/",
              "color": "#56A64B"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?1(\\b|\\.)/",
              "color": "#F2CC0C"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?2(\\b|\\.)/",
              "color": "#3274D9"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?3(\\b|\\.)/",
              "color": "#A352CC"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?4(\\b|\\.)/",
              "color": "#FF780A"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?5(\\b|\\.)/",
              "color": "#96D98D"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?6(\\b|\\.)/",
              "color": "#FFEE52"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?7(\\b|\\.)/",
              "color": "#8AB8FF"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?8(\\b|\\.)/",
              "color": "#CA95E5"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?9(\\b|\\.)/",
              "color": "#FFB357"
            }
          ],
          "spaceLength": 10,
          "stack": true,
          "steppedLine": false,
          "targets": [
            {
              "expr": "sum(rate(rabbitmq_queues_created_total[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) by(rabbitmq_node)",
              "format": "time_series",
              "instant": false,
              "intervalFactor": 1,
              "legendFormat": "{{rabbitmq_node}}",
              "refId": "A"
            }
          ],
          "thresholds": [
            {
              "colorMode": "warning",
              "fill": true,
              "line": true,
              "op": "gt",
              "value": 2,
              "yaxis": "left"
            },
            {
              "colorMode": "critical",
              "fill": true,
              "line": true,
              "op": "gt",
              "value": 10,
              "yaxis": "left"
            }
          ],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Queues created / s",
          "tooltip": {
            "shared": true,
            "sort": 2,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "decimals": null,
              "format": "short",
              "label": "",
              "logBase": 1,
              "max": null,
              "min": "0",
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": false,
          "cacheTimeout": null,
          "dashLength": 10,
          "dashes": false,
          "datasource": "${DS_PROMETHEUS}",
          "description": "The rate of queues deleted.\n\nLow sustained values above zero are to be expected. High rates may be indicative of queue churn or high rates of connection recovery. Confirm connection recovery rates by using the _Connections opened_ metric.\n\n* [Queues](https://www.rabbitmq.com/queues.html)",
          "fieldConfig": {
            "defaults": {
              "custom": {},
              "links": []
            },
            "overrides": []
          },
          "fill": 10,
          "fillGradient": 0,
          "gridPos": {
            "h": 5,
            "w": 4,
            "x": 20,
            "y": 63
          },
          "hiddenSeries": false,
          "id": 59,
          "legend": {
            "alignAsTable": true,
            "avg": false,
            "current": true,
            "max": true,
            "min": true,
            "rightSide": false,
            "show": false,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null as zero",
          "options": {
            "alertThreshold": true
          },
          "percentage": false,
          "pluginVersion": "7.3.2",
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?0(\\b|\\.)/",
              "color": "#56A64B"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?1(\\b|\\.)/",
              "color": "#F2CC0C"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?2(\\b|\\.)/",
              "color": "#3274D9"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?3(\\b|\\.)/",
              "color": "#A352CC"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?4(\\b|\\.)/",
              "color": "#FF780A"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?5(\\b|\\.)/",
              "color": "#96D98D"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?6(\\b|\\.)/",
              "color": "#FFEE52"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?7(\\b|\\.)/",
              "color": "#8AB8FF"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?8(\\b|\\.)/",
              "color": "#CA95E5"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?9(\\b|\\.)/",
              "color": "#FFB357"
            }
          ],
          "spaceLength": 10,
          "stack": true,
          "steppedLine": false,
          "targets": [
            {
              "expr": "sum(rate(rabbitmq_queues_deleted_total[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) by(rabbitmq_node)",
              "format": "time_series",
              "instant": false,
              "intervalFactor": 1,
              "legendFormat": "{{rabbitmq_node}}",
              "refId": "A"
            }
          ],
          "thresholds": [
            {
              "colorMode": "warning",
              "fill": true,
              "line": true,
              "op": "gt",
              "value": 2,
              "yaxis": "left"
            },
            {
              "colorMode": "critical",
              "fill": true,
              "line": true,
              "op": "gt",
              "value": 10,
              "yaxis": "left"
            }
          ],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Queues deleted / s",
          "tooltip": {
            "shared": true,
            "sort": 2,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "decimals": null,
              "format": "short",
              "label": "",
              "logBase": 1,
              "max": null,
              "min": "0",
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "collapsed": false,
          "datasource": "${DS_PROMETHEUS}",
          "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 68
          },
          "id": 51,
          "panels": [],
          "title": "CHANNELS",
          "type": "row"
        },
        {
          "aliasColors": {},
          "bars": false,
          "cacheTimeout": null,
          "dashLength": 10,
          "dashes": false,
          "datasource": "${DS_PROMETHEUS}",
          "description": "Total number of channels on all currently opened connections.\n\nIf this metric grows monotonically it is highly likely a channel leak in one of the applications. Confirm channel leaks by using the _Channels opened_ and _Channels closed_ metrics.\n\n* [Channel Leak](https://www.rabbitmq.com/channels.html#channel-leaks)\n* [Channels](https://www.rabbitmq.com/channels.html)",
          "fieldConfig": {
            "defaults": {
              "custom": {},
              "links": []
            },
            "overrides": []
          },
          "fill": 10,
          "fillGradient": 0,
          "gridPos": {
            "h": 5,
            "w": 12,
            "x": 0,
            "y": 69
          },
          "hiddenSeries": false,
          "id": 54,
          "legend": {
            "alignAsTable": true,
            "avg": false,
            "current": true,
            "max": true,
            "min": true,
            "rightSide": false,
            "show": false,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null as zero",
          "options": {
            "alertThreshold": true
          },
          "percentage": false,
          "pluginVersion": "7.3.2",
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?0(\\b|\\.)/",
              "color": "#56A64B"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?1(\\b|\\.)/",
              "color": "#F2CC0C"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?2(\\b|\\.)/",
              "color": "#3274D9"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?3(\\b|\\.)/",
              "color": "#A352CC"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?4(\\b|\\.)/",
              "color": "#FF780A"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?5(\\b|\\.)/",
              "color": "#96D98D"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?6(\\b|\\.)/",
              "color": "#FFEE52"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?7(\\b|\\.)/",
              "color": "#8AB8FF"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?8(\\b|\\.)/",
              "color": "#CA95E5"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?9(\\b|\\.)/",
              "color": "#FFB357"
            }
          ],
          "spaceLength": 10,
          "stack": true,
          "steppedLine": false,
          "targets": [
            {
              "expr": "rabbitmq_channels * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}",
              "format": "time_series",
              "instant": false,
              "intervalFactor": 1,
              "legendFormat": "{{rabbitmq_node}}",
              "refId": "A"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Total channels",
          "tooltip": {
            "shared": true,
            "sort": 2,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "decimals": -1,
              "format": "short",
              "label": "",
              "logBase": 1,
              "max": null,
              "min": "0",
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": false,
          "cacheTimeout": null,
          "dashLength": 10,
          "dashes": false,
          "datasource": "${DS_PROMETHEUS}",
          "description": "The rate of new channels opened by applications across all connections. Channels are expected to be long-lived.\n\nLow sustained values above zero are to be expected. High rates may be indicative of channel churn or mass connection recovery. Confirm connection recovery rates by using the _Connections opened_ metric.\n\n* [High Channel Churn](https://www.rabbitmq.com/channels.html#high-channel-churn)\n* [Channels](https://www.rabbitmq.com/channels.html)",
          "fieldConfig": {
            "defaults": {
              "custom": {},
              "links": []
            },
            "overrides": []
          },
          "fill": 10,
          "fillGradient": 0,
          "gridPos": {
            "h": 5,
            "w": 6,
            "x": 12,
            "y": 69
          },
          "hiddenSeries": false,
          "id": 55,
          "legend": {
            "alignAsTable": true,
            "avg": false,
            "current": true,
            "max": true,
            "min": true,
            "rightSide": false,
            "show": false,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null as zero",
          "options": {
            "alertThreshold": true
          },
          "percentage": false,
          "pluginVersion": "7.3.2",
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?0(\\b|\\.)/",
              "color": "#56A64B"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?1(\\b|\\.)/",
              "color": "#F2CC0C"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?2(\\b|\\.)/",
              "color": "#3274D9"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?3(\\b|\\.)/",
              "color": "#A352CC"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?4(\\b|\\.)/",
              "color": "#FF780A"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?5(\\b|\\.)/",
              "color": "#96D98D"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?6(\\b|\\.)/",
              "color": "#FFEE52"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?7(\\b|\\.)/",
              "color": "#8AB8FF"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?8(\\b|\\.)/",
              "color": "#CA95E5"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?9(\\b|\\.)/",
              "color": "#FFB357"
            }
          ],
          "spaceLength": 10,
          "stack": true,
          "steppedLine": false,
          "targets": [
            {
              "expr": "sum(rate(rabbitmq_channels_opened_total[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) by(rabbitmq_node)",
              "format": "time_series",
              "instant": false,
              "intervalFactor": 1,
              "legendFormat": "{{rabbitmq_node}}",
              "refId": "A"
            }
          ],
          "thresholds": [
            {
              "colorMode": "warning",
              "fill": true,
              "line": true,
              "op": "gt",
              "value": 2,
              "yaxis": "left"
            },
            {
              "colorMode": "critical",
              "fill": true,
              "line": true,
              "op": "gt",
              "value": 10,
              "yaxis": "left"
            }
          ],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Channels opened / s",
          "tooltip": {
            "shared": true,
            "sort": 2,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "decimals": null,
              "format": "short",
              "label": "",
              "logBase": 1,
              "max": null,
              "min": "0",
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": false,
          "cacheTimeout": null,
          "dashLength": 10,
          "dashes": false,
          "datasource": "${DS_PROMETHEUS}",
          "description": "The rate of channels closed by applications across all connections. Channels are expected to be long-lived.\n\nLow sustained values above zero are to be expected. High rates may be indicative of channel churn or mass connection recovery. Confirm connection recovery rates by using the _Connections opened_ metric.\n\n* [High Channel Churn](https://www.rabbitmq.com/channels.html#high-channel-churn)\n* [Channels](https://www.rabbitmq.com/channels.html)",
          "fieldConfig": {
            "defaults": {
              "custom": {},
              "links": []
            },
            "overrides": []
          },
          "fill": 10,
          "fillGradient": 0,
          "gridPos": {
            "h": 5,
            "w": 6,
            "x": 18,
            "y": 69
          },
          "hiddenSeries": false,
          "id": 56,
          "legend": {
            "alignAsTable": true,
            "avg": false,
            "current": true,
            "max": true,
            "min": true,
            "rightSide": false,
            "show": false,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null as zero",
          "options": {
            "alertThreshold": true
          },
          "percentage": false,
          "pluginVersion": "7.3.2",
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?0(\\b|\\.)/",
              "color": "#56A64B"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?1(\\b|\\.)/",
              "color": "#F2CC0C"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?2(\\b|\\.)/",
              "color": "#3274D9"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?3(\\b|\\.)/",
              "color": "#A352CC"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?4(\\b|\\.)/",
              "color": "#FF780A"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?5(\\b|\\.)/",
              "color": "#96D98D"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?6(\\b|\\.)/",
              "color": "#FFEE52"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?7(\\b|\\.)/",
              "color": "#8AB8FF"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?8(\\b|\\.)/",
              "color": "#CA95E5"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?9(\\b|\\.)/",
              "color": "#FFB357"
            }
          ],
          "spaceLength": 10,
          "stack": true,
          "steppedLine": false,
          "targets": [
            {
              "expr": "sum(rate(rabbitmq_channels_closed_total[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) by(rabbitmq_node)",
              "format": "time_series",
              "instant": false,
              "intervalFactor": 1,
              "legendFormat": "{{rabbitmq_node}}",
              "refId": "A"
            }
          ],
          "thresholds": [
            {
              "colorMode": "warning",
              "fill": true,
              "line": true,
              "op": "gt",
              "value": 2,
              "yaxis": "left"
            },
            {
              "colorMode": "critical",
              "fill": true,
              "line": true,
              "op": "gt",
              "value": 10,
              "yaxis": "left"
            }
          ],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Channels closed / s",
          "tooltip": {
            "shared": true,
            "sort": 2,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "decimals": null,
              "format": "short",
              "label": "",
              "logBase": 1,
              "max": null,
              "min": "0",
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "collapsed": false,
          "datasource": "${DS_PROMETHEUS}",
          "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 74
          },
          "id": 46,
          "panels": [],
          "title": "CONNECTIONS",
          "type": "row"
        },
        {
          "aliasColors": {},
          "bars": false,
          "cacheTimeout": null,
          "dashLength": 10,
          "dashes": false,
          "datasource": "${DS_PROMETHEUS}",
          "description": "Total number of client connections.\n\nIf this metric grows monotonically it is highly likely a connection leak in one of the applications. Confirm connection leaks by using the _Connections opened_ and _Connections closed_ metrics.\n\n* [Connection Leak](https://www.rabbitmq.com/connections.html#monitoring)\n* [Connections](https://www.rabbitmq.com/connections.html)",
          "fieldConfig": {
            "defaults": {
              "custom": {},
              "links": []
            },
            "overrides": []
          },
          "fill": 10,
          "fillGradient": 0,
          "gridPos": {
            "h": 5,
            "w": 12,
            "x": 0,
            "y": 75
          },
          "hiddenSeries": false,
          "id": 47,
          "legend": {
            "alignAsTable": true,
            "avg": false,
            "current": true,
            "max": true,
            "min": true,
            "rightSide": false,
            "show": false,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null as zero",
          "options": {
            "alertThreshold": true
          },
          "percentage": false,
          "pluginVersion": "7.3.2",
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?0(\\b|\\.)/",
              "color": "#56A64B"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?1(\\b|\\.)/",
              "color": "#F2CC0C"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?2(\\b|\\.)/",
              "color": "#3274D9"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?3(\\b|\\.)/",
              "color": "#A352CC"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?4(\\b|\\.)/",
              "color": "#FF780A"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?5(\\b|\\.)/",
              "color": "#96D98D"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?6(\\b|\\.)/",
              "color": "#FFEE52"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?7(\\b|\\.)/",
              "color": "#8AB8FF"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?8(\\b|\\.)/",
              "color": "#CA95E5"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?9(\\b|\\.)/",
              "color": "#FFB357"
            }
          ],
          "spaceLength": 10,
          "stack": true,
          "steppedLine": false,
          "targets": [
            {
              "expr": "rabbitmq_connections * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}",
              "format": "time_series",
              "instant": false,
              "intervalFactor": 1,
              "legendFormat": "{{rabbitmq_node}}",
              "refId": "A"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Total connections",
          "tooltip": {
            "shared": true,
            "sort": 2,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "decimals": -1,
              "format": "short",
              "label": "",
              "logBase": 1,
              "max": null,
              "min": "0",
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": false,
          "cacheTimeout": null,
          "dashLength": 10,
          "dashes": false,
          "datasource": "${DS_PROMETHEUS}",
          "description": "The rate of new connections opened by clients. Connections are expected to be long-lived.\n\nLow sustained values above zero are to be expected. High rates may be indicative of connection churn or mass connection recovery.\n\n* [Connection Leak](https://www.rabbitmq.com/connections.html#monitoring)\n* [Connections](https://www.rabbitmq.com/connections.html)",
          "fieldConfig": {
            "defaults": {
              "custom": {},
              "links": []
            },
            "overrides": []
          },
          "fill": 10,
          "fillGradient": 0,
          "gridPos": {
            "h": 5,
            "w": 6,
            "x": 12,
            "y": 75
          },
          "hiddenSeries": false,
          "id": 48,
          "legend": {
            "alignAsTable": true,
            "avg": false,
            "current": true,
            "max": true,
            "min": true,
            "rightSide": false,
            "show": false,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null as zero",
          "options": {
            "alertThreshold": true
          },
          "percentage": false,
          "pluginVersion": "7.3.2",
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?0(\\b|\\.)/",
              "color": "#56A64B"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?1(\\b|\\.)/",
              "color": "#F2CC0C"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?2(\\b|\\.)/",
              "color": "#3274D9"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?3(\\b|\\.)/",
              "color": "#A352CC"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?4(\\b|\\.)/",
              "color": "#FF780A"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?5(\\b|\\.)/",
              "color": "#96D98D"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?6(\\b|\\.)/",
              "color": "#FFEE52"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?7(\\b|\\.)/",
              "color": "#8AB8FF"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?8(\\b|\\.)/",
              "color": "#CA95E5"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?9(\\b|\\.)/",
              "color": "#FFB357"
            }
          ],
          "spaceLength": 10,
          "stack": true,
          "steppedLine": false,
          "targets": [
            {
              "expr": "sum(rate(rabbitmq_connections_opened_total[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) by(rabbitmq_node)",
              "format": "time_series",
              "instant": false,
              "interval": "",
              "intervalFactor": 1,
              "legendFormat": "{{rabbitmq_node}}",
              "refId": "A"
            }
          ],
          "thresholds": [
            {
              "colorMode": "warning",
              "fill": true,
              "line": true,
              "op": "gt",
              "value": 2,
              "yaxis": "left"
            },
            {
              "colorMode": "critical",
              "fill": true,
              "line": true,
              "op": "gt",
              "value": 10,
              "yaxis": "left"
            }
          ],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Connections opened / s",
          "tooltip": {
            "shared": true,
            "sort": 2,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "decimals": null,
              "format": "short",
              "label": "",
              "logBase": 1,
              "max": null,
              "min": "0",
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": false,
          "cacheTimeout": null,
          "dashLength": 10,
          "dashes": false,
          "datasource": "${DS_PROMETHEUS}",
          "description": "The rate of connections closed. Connections are expected to be long-lived.\n\nLow sustained values above zero are to be expected. High rates may be indicative of connection churn or mass connection recovery.\n\n* [Connections](https://www.rabbitmq.com/connections.html)",
          "fieldConfig": {
            "defaults": {
              "custom": {},
              "links": []
            },
            "overrides": []
          },
          "fill": 10,
          "fillGradient": 0,
          "gridPos": {
            "h": 5,
            "w": 6,
            "x": 18,
            "y": 75
          },
          "hiddenSeries": false,
          "id": 49,
          "legend": {
            "alignAsTable": true,
            "avg": false,
            "current": true,
            "max": true,
            "min": true,
            "rightSide": false,
            "show": false,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null as zero",
          "options": {
            "alertThreshold": true
          },
          "percentage": false,
          "pluginVersion": "7.3.2",
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?0(\\b|\\.)/",
              "color": "#56A64B"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?1(\\b|\\.)/",
              "color": "#F2CC0C"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?2(\\b|\\.)/",
              "color": "#3274D9"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?3(\\b|\\.)/",
              "color": "#A352CC"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?4(\\b|\\.)/",
              "color": "#FF780A"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?5(\\b|\\.)/",
              "color": "#96D98D"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?6(\\b|\\.)/",
              "color": "#FFEE52"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?7(\\b|\\.)/",
              "color": "#8AB8FF"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?8(\\b|\\.)/",
              "color": "#CA95E5"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?9(\\b|\\.)/",
              "color": "#FFB357"
            }
          ],
          "spaceLength": 10,
          "stack": true,
          "steppedLine": false,
          "targets": [
            {
              "expr": "sum(rate(rabbitmq_connections_closed_total[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) by(rabbitmq_node)",
              "format": "time_series",
              "instant": false,
              "intervalFactor": 1,
              "legendFormat": "{{rabbitmq_node}}",
              "refId": "A"
            }
          ],
          "thresholds": [
            {
              "colorMode": "warning",
              "fill": true,
              "line": true,
              "op": "gt",
              "value": 2,
              "yaxis": "left"
            },
            {
              "colorMode": "critical",
              "fill": true,
              "line": true,
              "op": "gt",
              "value": 10,
              "yaxis": "left"
            }
          ],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Connections closed / s",
          "tooltip": {
            "shared": true,
            "sort": 2,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "decimals": null,
              "format": "short",
              "label": "",
              "logBase": 1,
              "max": null,
              "min": "0",
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        }
      ],
      "refresh": "15s",
      "schemaVersion": 26,
      "style": "dark",
      "tags": [
        "rabbitmq-prometheus"
      ],
      "templating": {
        "list": [
          {
            "current": {
              "selected": false,
              "text": "default",
              "value": "default"
            },
            "hide": 2,
            "includeAll": false,
            "label": "datasource",
            "multi": false,
            "name": "DS_PROMETHEUS",
            "options": [],
            "query": "prometheus",
            "refresh": 1,
            "regex": "",
            "skipUrlSync": false,
            "type": "datasource",
            "datasource": "${DS_PROMETHEUS}"
          },
          {
            "allValue": null,
            "current": {},
            "datasource": "${DS_PROMETHEUS}",
            "definition": "label_values(rabbitmq_identity_info, namespace)",
            "hide": 0,
            "includeAll": false,
            "label": "Namespace",
            "multi": false,
            "name": "namespace",
            "options": [],
            "query": "label_values(rabbitmq_identity_info, namespace)",
            "refresh": 2,
            "regex": "",
            "skipUrlSync": false,
            "sort": 1,
            "tagValuesQuery": "",
            "tags": [],
            "tagsQuery": "",
            "type": "query",
            "useTags": false
          },
          {
            "allValue": null,
            "current": {},
            "datasource": "${DS_PROMETHEUS}",
            "definition": "label_values(rabbitmq_identity_info{namespace=\"$namespace\"}, rabbitmq_cluster)",
            "error": null,
            "hide": 0,
            "includeAll": false,
            "label": "RabbitMQ Cluster",
            "multi": false,
            "name": "rabbitmq_cluster",
            "options": [],
            "query": "label_values(rabbitmq_identity_info{namespace=\"$namespace\"}, rabbitmq_cluster)",
            "refresh": 2,
            "regex": "",
            "skipUrlSync": false,
            "sort": 1,
            "tagValuesQuery": "",
            "tags": [],
            "tagsQuery": "",
            "type": "query",
            "useTags": false
          }
        ]
      },
      "time": {
        "from": "now-15m",
        "to": "now"
      },
      "timepicker": {
        "refresh_intervals": [
          "15s",
          "30s",
          "1m",
          "5m",
          "10m"
        ],
        "time_options": [
          "5m",
          "15m",
          "1h",
          "6h",
          "12h",
          "24h",
          "2d",
          "7d",
          "30d"
        ]
      },
      "timezone": "",
      "title": "RabbitMQ-Overview",
      "uid": "Kn5xm-gZk",
      "version": 20210308,
      "__inputs": [
        {
          "name": "DS_PROMETHEUS",
          "label": "prometheus",
          "description": "",
          "type": "datasource",
          "pluginId": "prometheus",
          "pluginName": "Prometheus"
        }
      ]
    }
---
# Source: rabbitmq-observability/templates/grafana/dashboards/rabbitmq-queue.yaml
apiVersion: integreatly.org/v1alpha1
kind: GrafanaDashboard
metadata:
  name: rabbitmq-queue-grafana-dashboard
  namespace: default
  labels:
    grafana_dashboard: "1"
spec:
  json: |-
    {
      "__inputs": [
        {
          "name": "DS_PROMETHEUS",
          "label": "Prometheus",
          "description": "",
          "type": "datasource",
          "pluginId": "prometheus",
          "pluginName": "Prometheus"
        }
      ],
      "__requires": [
        {
          "type": "grafana",
          "id": "grafana",
          "name": "Grafana",
          "version": "7.5.3"
        },
        {
          "type": "datasource",
          "id": "prometheus",
          "name": "Prometheus",
          "version": "1.0.0"
        },
        {
          "type": "panel",
          "id": "timeseries",
          "name": "Time series",
          "version": ""
        }
      ],
      "annotations": {
        "list": [
          {
            "builtIn": 1,
            "datasource": "-- Grafana --",
            "enable": true,
            "hide": true,
            "iconColor": "rgba(0, 211, 255, 1)",
            "name": "Annotations & Alerts",
            "type": "dashboard"
          }
        ]
      },
      "editable": true,
      "gnetId": null,
      "graphTooltip": 0,
      "id": null,
      "iteration": 1633508002435,
      "links": [],
      "panels": [
        {
          "datasource": null,
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisLabel": "Messages",
                "axisPlacement": "left",
                "axisSoftMin": 0,
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "graph": false,
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "Consumers"
                },
                "properties": [
                  {
                    "id": "custom.axisPlacement",
                    "value": "right"
                  },
                  {
                    "id": "unit",
                    "value": "prefix:"
                  },
                  {
                    "id": "custom.axisLabel",
                    "value": "Consumers"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "Messages"
                },
                "properties": [
                  {
                    "id": "custom.drawStyle",
                    "value": "line"
                  },
                  {
                    "id": "custom.fillOpacity",
                    "value": 0
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 17,
            "w": 11,
            "x": 0,
            "y": 0
          },
          "id": 2,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom"
            },
            "tooltip": {
              "mode": "single"
            },
            "tooltipOptions": {
              "mode": "single"
            }
          },
          "targets": [
            {
              "exemplar": true,
              "expr": "(rabbitmq_detailed_queue_messages{namespace=\"$namespace\", queue=\"$queue\"} * on (instance, job) rabbitmq_identity_info{namespace=\"$namespace\",rabbitmq_cluster=\"$rabbitmq_cluster\"})",
              "interval": "",
              "legendFormat": "Messages",
              "refId": "A"
            },
            {
              "exemplar": true,
              "expr": "rabbitmq_detailed_queue_consumers{namespace=\"$namespace\", queue=\"$queue\"} * on (instance, job) rabbitmq_identity_info{namespace=\"$namespace\",rabbitmq_cluster=\"$rabbitmq_cluster\"}",
              "hide": false,
              "interval": "",
              "legendFormat": "Consumers",
              "refId": "B"
            }
          ],
          "title": "Queue messages and consumers",
          "type": "timeseries"
        }
      ],
      "refresh": false,
      "schemaVersion": 27,
      "style": "dark",
      "tags": [],
      "templating": {
        "list": [
          {
            "current": {
              "selected": false,
              "text": "Prometheus",
              "value": "Prometheus"
            },
            "description": null,
            "error": null,
            "hide": 2,
            "includeAll": false,
            "label": "datasource",
            "multi": false,
            "name": "DS_PROMETHEUS",
            "options": [],
            "query": "prometheus",
            "refresh": 1,
            "regex": "",
            "skipUrlSync": false,
            "type": "datasource"
          },
          {
            "allValue": null,
            "current": {},
            "datasource": "${DS_PROMETHEUS}",
            "definition": "label_values(rabbitmq_identity_info, namespace)",
            "description": null,
            "error": null,
            "hide": 0,
            "includeAll": false,
            "label": "Namespace",
            "multi": false,
            "name": "namespace",
            "options": [],
            "query": {
              "query": "label_values(rabbitmq_identity_info, namespace)",
              "refId": "StandardVariableQuery"
            },
            "refresh": 2,
            "regex": "",
            "skipUrlSync": false,
            "sort": 1,
            "tagValuesQuery": "",
            "tags": [],
            "tagsQuery": "",
            "type": "query",
            "useTags": false
          },
          {
            "allValue": null,
            "current": {},
            "datasource": "${DS_PROMETHEUS}",
            "definition": "label_values(rabbitmq_identity_info{namespace=\"$namespace\"}, rabbitmq_cluster)",
            "description": null,
            "error": null,
            "hide": 0,
            "includeAll": false,
            "label": "RabbitMQ Cluster",
            "multi": false,
            "name": "rabbitmq_cluster",
            "options": [],
            "query": {
              "query": "label_values(rabbitmq_identity_info{namespace=\"$namespace\"}, rabbitmq_cluster)",
              "refId": "StandardVariableQuery"
            },
            "refresh": 2,
            "regex": "",
            "skipUrlSync": false,
            "sort": 1,
            "tagValuesQuery": "",
            "tags": [],
            "tagsQuery": "",
            "type": "query",
            "useTags": false
          },
          {
            "allValue": null,
            "current": {},
            "datasource": "${DS_PROMETHEUS}",
            "definition": "query_result(rabbitmq_detailed_queue_messages{namespace=\"$namespace\"} * on (instance, job) group_left(rabbitmq_cluster) rabbitmq_identity_info{namespace=\"$namespace\"})",
            "description": null,
            "error": null,
            "hide": 0,
            "includeAll": false,
            "label": "Queue",
            "multi": false,
            "name": "queue",
            "options": [],
            "query": {
              "query": "query_result(rabbitmq_detailed_queue_messages{namespace=\"$namespace\"} * on (instance, job) group_left(rabbitmq_cluster) rabbitmq_identity_info{namespace=\"$namespace\", rabbitmq_cluster=\"$rabbitmq_cluster\"})",
              "refId": "StandardVariableQuery"
            },
            "refresh": 2,
            "regex": "/.*queue=\"([^\"]+)\".*/",
            "skipUrlSync": false,
            "sort": 0,
            "tagValuesQuery": "",
            "tags": [],
            "tagsQuery": "",
            "type": "query",
            "useTags": false
          }
        ]
      },
      "time": {
        "from": "now-6h",
        "to": "now"
      },
      "timepicker": {},
      "timezone": "",
      "title": "RabbitMQ-Queue",
      "uid": "j9t8vwH7k",
      "version": 1
    }
---
# Source: rabbitmq-observability/templates/grafana/dashboards/rabbitmq-quorum-queues-raft.yaml
apiVersion: integreatly.org/v1alpha1
kind: GrafanaDashboard
metadata:
  name: rabbitmq-quorum-queues-raft-dashboard
  namespace: default
  labels:
    grafana_dashboard: "true"
spec:
  # https://grafana.com/grafana/dashboards/11340
  json: |-
    {
      "__requires": [
        {
          "type": "grafana",
          "id": "grafana",
          "name": "Grafana",
          "version": "7.0.0"
        },
        {
          "type": "datasource",
          "id": "prometheus",
          "name": "Prometheus",
          "version": "2.0.0"
        },
        {
          "type": "panel",
          "id": "graph",
          "name": "Graph",
          "version": ""
        },
        {
          "type": "panel",
          "id": "heatmap",
          "name": "Heatmap",
          "version": ""
        }
      ],
      "annotations": {
        "list": [
          {
            "builtIn": 1,
            "datasource": "-- Grafana --",
            "enable": true,
            "hide": true,
            "iconColor": "rgba(0, 211, 255, 1)",
            "name": "Annotations & Alerts",
            "type": "dashboard"
          }
        ]
      },
      "description": "Raft state for all Quorum Queues running in a RabbitMQ cluster",
      "editable": true,
      "gnetId": 11340,
      "graphTooltip": 1,
      "id": null,
      "iteration": 1581011566961,
      "links": [
        {
          "icon": "doc",
          "tags": [],
          "targetBlank": true,
          "title": "Quorum Queues Documentation",
          "tooltip": "",
          "type": "link",
          "url": "https://www.rabbitmq.com/quorum-queues.html"
        }
      ],
      "panels": [
        {
          "aliasColors": {},
          "bars": false,
          "cacheTimeout": null,
          "dashLength": 10,
          "dashes": false,
          "datasource": "${DS_PROMETHEUS}",
          "description": "##### Rate of Raft log operations committed\n\nThis includes all queue operations, including publishes & consumer acknowledgements.\n\nThis tracks the progress of the Raft commit index on all members, including followers.\n\nIf a RabbitMQ node does not run a Raft member, it will not report any entries committed.",
          "fill": 0,
          "fillGradient": 0,
          "gridPos": {
            "h": 9,
            "w": 12,
            "x": 0,
            "y": 0
          },
          "hiddenSeries": false,
          "id": 64,
          "legend": {
            "alignAsTable": true,
            "avg": false,
            "current": true,
            "max": true,
            "min": false,
            "show": true,
            "sort": "current",
            "sortDesc": true,
            "total": true,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "options": {
            "dataLinks": []
          },
          "percentage": false,
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?0(\\b|\\.)/",
              "color": "#56A64B"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?1(\\b|\\.)/",
              "color": "#F2CC0C"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?2(\\b|\\.)/",
              "color": "#3274D9"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?3(\\b|\\.)/",
              "color": "#A352CC"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?4(\\b|\\.)/",
              "color": "#FF780A"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?5(\\b|\\.)/",
              "color": "#96D98D"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?6(\\b|\\.)/",
              "color": "#FFEE52"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?7(\\b|\\.)/",
              "color": "#8AB8FF"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?8(\\b|\\.)/",
              "color": "#CA95E5"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?9(\\b|\\.)/",
              "color": "#FFB357"
            }
          ],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "expr": "sum(rate(rabbitmq_raft_log_commit_index[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) by(rabbitmq_node)",
              "format": "time_series",
              "instant": false,
              "intervalFactor": 1,
              "legendFormat": "{{rabbitmq_node}}",
              "refId": "A"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Log entries committed / s",
          "tooltip": {
            "shared": true,
            "sort": 2,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "decimals": null,
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": "0",
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "cacheTimeout": null,
          "cards": {
            "cardPadding": null,
            "cardRound": null
          },
          "color": {
            "cardColor": "rgb(255, 255, 255)",
            "colorScale": "sqrt",
            "colorScheme": "interpolateCool",
            "exponent": 0.4,
            "mode": "opacity"
          },
          "dataFormat": "timeseries",
          "datasource": "${DS_PROMETHEUS}",
          "description": "##### Time for a log entry to be committed\n\nThis is an indicator of Raft operational overhead. Values will increase with increased load as the system trades latency for throughput.\n\nThis metric samples  the time it takes for a log entry to be written to a Raft log and that entry being committed.\n\nBecause quorum queues fsync all operations to disk before committing them, they are not suitable for low-latency workloads.",
          "gridPos": {
            "h": 9,
            "w": 12,
            "x": 12,
            "y": 0
          },
          "heatmap": {},
          "hideZeroBuckets": false,
          "highlightCards": true,
          "id": 65,
          "legend": {
            "show": true
          },
          "links": [],
          "options": {},
          "reverseYBuckets": false,
          "targets": [
            {
              "expr": "rabbitmq_raft_entry_commit_latency_seconds * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}",
              "format": "time_series",
              "instant": false,
              "intervalFactor": 1,
              "legendFormat": "",
              "refId": "A"
            }
          ],
          "timeFrom": null,
          "timeShift": null,
          "title": "Log entry commit latency",
          "tooltip": {
            "show": true,
            "showHistogram": true
          },
          "type": "heatmap",
          "xAxis": {
            "show": true
          },
          "xBucketNumber": null,
          "xBucketSize": null,
          "yAxis": {
            "decimals": null,
            "format": "s",
            "logBase": 1,
            "max": null,
            "min": "0",
            "show": true,
            "splitFactor": null
          },
          "yBucketBound": "lower",
          "yBucketNumber": null,
          "yBucketSize": null
        },
        {
          "aliasColors": {},
          "bars": false,
          "cacheTimeout": null,
          "dashLength": 10,
          "dashes": false,
          "datasource": "${DS_PROMETHEUS}",
          "description": "##### Pending Raft log entries\n\nTracks the number of Raft log entries that have been written but not yet committed.\n\nHigh & growing values may be indicative of a quorum of members not being available so that a queue can make progress.",
          "fill": 0,
          "fillGradient": 0,
          "gridPos": {
            "h": 9,
            "w": 12,
            "x": 0,
            "y": 9
          },
          "hiddenSeries": false,
          "id": 62,
          "legend": {
            "alignAsTable": true,
            "avg": false,
            "current": true,
            "hideEmpty": false,
            "hideZero": true,
            "max": true,
            "min": false,
            "rightSide": false,
            "show": true,
            "sort": "total",
            "sortDesc": true,
            "total": true,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "options": {
            "dataLinks": []
          },
          "percentage": false,
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?0(\\b|\\.)/",
              "color": "#56A64B"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?1(\\b|\\.)/",
              "color": "#F2CC0C"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?2(\\b|\\.)/",
              "color": "#3274D9"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?3(\\b|\\.)/",
              "color": "#A352CC"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?4(\\b|\\.)/",
              "color": "#FF780A"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?5(\\b|\\.)/",
              "color": "#96D98D"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?6(\\b|\\.)/",
              "color": "#FFEE52"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?7(\\b|\\.)/",
              "color": "#8AB8FF"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?8(\\b|\\.)/",
              "color": "#CA95E5"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?9(\\b|\\.)/",
              "color": "#FFB357"
            }
          ],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "expr": "sum(\n  (rabbitmq_raft_log_last_written_index * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) -\n  (rabbitmq_raft_log_commit_index * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"})\n) by(rabbitmq_node)",
              "format": "time_series",
              "instant": false,
              "intervalFactor": 1,
              "legendFormat": "{{rabbitmq_node}}",
              "refId": "A"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Uncommitted log entries",
          "tooltip": {
            "shared": true,
            "sort": 2,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "decimals": null,
              "format": "short",
              "label": "",
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": false,
          "cacheTimeout": null,
          "dashLength": 10,
          "dashes": false,
          "datasource": "${DS_PROMETHEUS}",
          "description": "##### Rate of Raft leader elections\n\nTracks the increments of the Raft term.\n\nSustained non-zero rates are indicative of network and/or availability issues, or queue churn. The other reason may be quorum queue declarations.\n\nValues above 0 are normal, some leader elections are expected. Sustained high values may be of concern.",
          "fill": 0,
          "fillGradient": 0,
          "gridPos": {
            "h": 9,
            "w": 12,
            "x": 12,
            "y": 9
          },
          "hiddenSeries": false,
          "id": 63,
          "legend": {
            "alignAsTable": true,
            "avg": false,
            "current": true,
            "max": true,
            "min": false,
            "rightSide": false,
            "show": true,
            "sort": "total",
            "sortDesc": true,
            "total": true,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "options": {
            "dataLinks": []
          },
          "percentage": false,
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?0(\\b|\\.)/",
              "color": "#56A64B"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?1(\\b|\\.)/",
              "color": "#F2CC0C"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?2(\\b|\\.)/",
              "color": "#3274D9"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?3(\\b|\\.)/",
              "color": "#A352CC"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?4(\\b|\\.)/",
              "color": "#FF780A"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?5(\\b|\\.)/",
              "color": "#96D98D"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?6(\\b|\\.)/",
              "color": "#FFEE52"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?7(\\b|\\.)/",
              "color": "#8AB8FF"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?8(\\b|\\.)/",
              "color": "#CA95E5"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?9(\\b|\\.)/",
              "color": "#FFB357"
            }
          ],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "expr": "sum(rate(rabbitmq_raft_term_total[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) by(rabbitmq_node)",
              "format": "time_series",
              "instant": false,
              "intervalFactor": 1,
              "legendFormat": "{{rabbitmq_node}}",
              "refId": "A"
            }
          ],
          "thresholds": [
            {
              "colorMode": "warning",
              "fill": true,
              "line": true,
              "op": "gt",
              "value": 3,
              "yaxis": "left"
            }
          ],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Leader elections / s",
          "tooltip": {
            "shared": true,
            "sort": 2,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "decimals": null,
              "format": "short",
              "label": "",
              "logBase": 1,
              "max": null,
              "min": "0",
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": false,
          "cacheTimeout": null,
          "dashLength": 10,
          "dashes": false,
          "datasource": "${DS_PROMETHEUS}",
          "description": "##### Number of entries in the Raft log\n\nTracks the number of Raft log entries since the last snapshot.\n\nLarge values can either be indicative of large quorum queue backlogs or availability problems. If the uncommitted entries metric is large as well, there is a genuine availability problem in the system.",
          "fill": 0,
          "fillGradient": 0,
          "gridPos": {
            "h": 13,
            "w": 24,
            "x": 0,
            "y": 18
          },
          "hiddenSeries": false,
          "id": 18,
          "legend": {
            "alignAsTable": true,
            "avg": false,
            "current": true,
            "max": true,
            "min": false,
            "rightSide": false,
            "show": true,
            "sort": "current",
            "sortDesc": true,
            "total": true,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null as zero",
          "options": {
            "dataLinks": []
          },
          "percentage": false,
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?0(\\b|\\.)/",
              "color": "#56A64B"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?1(\\b|\\.)/",
              "color": "#F2CC0C"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?2(\\b|\\.)/",
              "color": "#3274D9"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?3(\\b|\\.)/",
              "color": "#A352CC"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?4(\\b|\\.)/",
              "color": "#FF780A"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?5(\\b|\\.)/",
              "color": "#96D98D"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?6(\\b|\\.)/",
              "color": "#FFEE52"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?7(\\b|\\.)/",
              "color": "#8AB8FF"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?8(\\b|\\.)/",
              "color": "#CA95E5"
            },
            {
              "alias": "/^rabbit@[a-zA-Z\\.\\-]*?9(\\b|\\.)/",
              "color": "#FFB357"
            }
          ],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "expr": "sum(\n  (rabbitmq_raft_log_last_written_index * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) - \n  (rabbitmq_raft_log_snapshot_index * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"})\n) by(queue, rabbitmq_node) > 5000",
              "hide": false,
              "legendFormat": "{{rabbitmq_node}} {{queue}}",
              "refId": "A"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Raft members with >5k entries in the log",
          "tooltip": {
            "shared": true,
            "sort": 2,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "decimals": null,
              "format": "short",
              "label": "",
              "logBase": 1,
              "max": null,
              "min": "0",
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        }
      ],
      "refresh": "15s",
      "schemaVersion": 21,
      "style": "dark",
      "tags": [
        "rabbitmq-prometheus"
      ],
      "templating": {
        "list": [
          {
            "current": {
              "selected": false,
              "text": "default",
              "value": "default"
            },
            "hide": 2,
            "includeAll": false,
            "label": "datasource",
            "multi": false,
            "name": "DS_PROMETHEUS",
            "options": [],
            "query": "prometheus",
            "refresh": 1,
            "regex": "",
            "skipUrlSync": false,
            "type": "datasource",
            "datasource": "${DS_PROMETHEUS}"
          },
          {
            "allValue": null,
            "current": {},
            "datasource": "${DS_PROMETHEUS}",
            "definition": "label_values(rabbitmq_identity_info, namespace)",
            "hide": 0,
            "includeAll": false,
            "label": "Namespace",
            "multi": false,
            "name": "namespace",
            "options": [],
            "query": "label_values(rabbitmq_identity_info, namespace)",
            "refresh": 2,
            "regex": "",
            "skipUrlSync": false,
            "sort": 1,
            "tagValuesQuery": "",
            "tags": [],
            "tagsQuery": "",
            "type": "query",
            "useTags": false
          },
          {
            "allValue": null,
            "current": {
              "text": "",
              "value": ""
            },
            "datasource": "${DS_PROMETHEUS}",
            "definition": "label_values(rabbitmq_identity_info{namespace=\"$namespace\"}, rabbitmq_cluster)",
            "hide": 0,
            "includeAll": false,
            "label": "RabbitMQ Cluster",
            "multi": false,
            "name": "rabbitmq_cluster",
            "options": [],
            "query": "label_values(rabbitmq_identity_info{namespace=\"$namespace\"}, rabbitmq_cluster)",
            "refresh": 2,
            "regex": "",
            "skipUrlSync": false,
            "sort": 0,
            "tagValuesQuery": "",
            "tags": [],
            "tagsQuery": "",
            "type": "query",
            "useTags": false
          }
        ]
      },
      "time": {
        "from": "now-15m",
        "to": "now"
      },
      "timepicker": {
        "refresh_intervals": [
          "15s",
          "30s",
          "1m",
          "5m",
          "10m"
        ],
        "time_options": [
          "5m",
          "15m",
          "1h",
          "6h",
          "12h",
          "24h",
          "2d",
          "7d",
          "30d"
        ]
      },
      "timezone": "",
      "title": "RabbitMQ-Quorum-Queues-Raft",
      "uid": "f1Mee9nZz",
      "version": 20210308,
      "__inputs": [
        {
          "name": "DS_PROMETHEUS",
          "label": "prometheus",
          "description": "",
          "type": "datasource",
          "pluginId": "prometheus",
          "pluginName": "Prometheus"
        }
      ]
    }
---
# Source: rabbitmq-observability/templates/grafana/dashboards/rabbitmq-stream.yaml
apiVersion: integreatly.org/v1alpha1
kind: GrafanaDashboard
metadata:
  name: rabbitmq-stream-dashboard
  namespace: default
  labels:
    grafana_dashboard: "true"
spec:
  # https://grafana.com/grafana/dashboards/14798
  json: |-
    {
      "__inputs": [
        {
          "name": "DS_PROMETHEUS",
          "label": "Prometheus",
          "description": "",
          "type": "datasource",
          "pluginId": "prometheus",
          "pluginName": "Prometheus"
        }
      ],
      "__requires": [
        {
          "type": "grafana",
          "id": "grafana",
          "name": "Grafana",
          "version": "8.0.3"
        },
        {
          "type": "panel",
          "id": "piechart",
          "name": "Pie chart",
          "version": ""
        },
        {
          "type": "datasource",
          "id": "prometheus",
          "name": "Prometheus",
          "version": "1.0.0"
        },
        {
          "type": "panel",
          "id": "stat",
          "name": "Stat",
          "version": ""
        },
        {
          "type": "panel",
          "id": "text",
          "name": "Text",
          "version": ""
        },
        {
          "type": "panel",
          "id": "timeseries",
          "name": "Time series",
          "version": ""
        }
      ],
      "annotations": {
        "list": [
          {
            "builtIn": 1,
            "datasource": "-- Grafana --",
            "enable": true,
            "hide": true,
            "iconColor": "rgba(0, 211, 255, 1)",
            "name": "Annotations & Alerts",
            "type": "dashboard"
          }
        ]
      },
      "description": "Stream protocol message rates and errors",
      "editable": true,
      "gnetId": 14798,
      "graphTooltip": 1,
      "id": null,
      "iteration": 1630681958730,
      "links": [],
      "panels": [
        {
          "datasource": "${DS_PROMETHEUS}",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "decimals": 0,
              "mappings": [],
              "min": 0,
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "transparent",
                    "value": null
                  }
                ]
              },
              "unit": "short"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 4,
            "w": 4,
            "x": 0,
            "y": 0
          },
          "id": 2,
          "options": {
            "colorMode": "background",
            "graphMode": "none",
            "justifyMode": "auto",
            "orientation": "auto",
            "reduceOptions": {
              "calcs": [
                "last"
              ],
              "fields": "",
              "values": false
            },
            "text": {},
            "textMode": "auto"
          },
          "pluginVersion": "8.0.3",
          "targets": [
            {
              "exemplar": true,
              "expr": "sum by(rabbitmq_cluster) (rabbitmq_global_publishers{protocol=\"stream\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"})",
              "interval": "",
              "legendFormat": "",
              "refId": "A"
            }
          ],
          "title": "Stream publishers",
          "type": "stat"
        },
        {
          "datasource": "${DS_PROMETHEUS}",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "decimals": 1,
              "mappings": [],
              "min": 0,
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "transparent",
                    "value": null
                  }
                ]
              },
              "unit": "short"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 4,
            "w": 4,
            "x": 4,
            "y": 0
          },
          "id": 14,
          "options": {
            "colorMode": "background",
            "graphMode": "none",
            "justifyMode": "auto",
            "orientation": "auto",
            "reduceOptions": {
              "calcs": [
                "last"
              ],
              "fields": "",
              "values": false
            },
            "text": {},
            "textMode": "value"
          },
          "pluginVersion": "8.0.3",
          "targets": [
            {
              "exemplar": true,
              "expr": "sum by(rabbitmq_cluster) (irate(rabbitmq_global_messages_received_total{protocol=\"stream\"}[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"})",
              "instant": false,
              "interval": "",
              "legendFormat": "",
              "refId": "A"
            }
          ],
          "title": "Stream messages received / s",
          "type": "stat"
        },
        {
          "datasource": "${DS_PROMETHEUS}",
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "decimals": 1,
              "mappings": [],
              "min": 0,
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "transparent",
                    "value": null
                  }
                ]
              },
              "unit": "short"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 4,
            "w": 4,
            "x": 8,
            "y": 0
          },
          "id": 10,
          "options": {
            "colorMode": "background",
            "graphMode": "none",
            "justifyMode": "auto",
            "orientation": "auto",
            "reduceOptions": {
              "calcs": [
                "last"
              ],
              "fields": "",
              "values": false
            },
            "text": {},
            "textMode": "value"
          },
          "pluginVersion": "8.0.3",
          "targets": [
            {
              "exemplar": true,
              "expr": "sum by(rabbitmq_cluster) (irate(rabbitmq_global_messages_confirmed_total{protocol=\"stream\"}[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"})",
              "instant": false,
              "interval": "",
              "legendFormat": "",
              "refId": "A"
            }
          ],
          "title": "Stream messages confirmed to publishers / s",
          "type": "stat"
        },
        {
          "datasource": "${DS_PROMETHEUS}",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "decimals": 0,
              "mappings": [],
              "min": 0,
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "transparent",
                    "value": null
                  }
                ]
              },
              "unit": "short"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 4,
            "w": 4,
            "x": 12,
            "y": 0
          },
          "id": 4,
          "options": {
            "colorMode": "background",
            "graphMode": "none",
            "justifyMode": "auto",
            "orientation": "auto",
            "reduceOptions": {
              "calcs": [
                "last"
              ],
              "fields": "",
              "values": false
            },
            "text": {},
            "textMode": "auto"
          },
          "pluginVersion": "8.0.3",
          "targets": [
            {
              "exemplar": true,
              "expr": "sum by(rabbitmq_cluster) (rabbitmq_global_consumers{protocol=\"stream\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"})",
              "interval": "",
              "legendFormat": "",
              "refId": "A"
            }
          ],
          "title": "Stream consumers",
          "type": "stat"
        },
        {
          "datasource": "${DS_PROMETHEUS}",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "decimals": 1,
              "mappings": [],
              "min": 0,
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "transparent",
                    "value": null
                  }
                ]
              },
              "unit": "short"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 4,
            "w": 4,
            "x": 16,
            "y": 0
          },
          "id": 8,
          "options": {
            "colorMode": "background",
            "graphMode": "none",
            "justifyMode": "auto",
            "orientation": "auto",
            "reduceOptions": {
              "calcs": [
                "last"
              ],
              "fields": "",
              "values": false
            },
            "text": {},
            "textMode": "value"
          },
          "pluginVersion": "8.0.3",
          "targets": [
            {
              "exemplar": true,
              "expr": "sum by(rabbitmq_cluster) (irate(rabbitmq_global_messages_delivered_total{protocol=\"stream\"}[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"})",
              "instant": false,
              "interval": "",
              "legendFormat": "",
              "refId": "A"
            }
          ],
          "title": "Stream messages delivered / s",
          "type": "stat"
        },
        {
          "datasource": "${DS_PROMETHEUS}",
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "decimals": 0,
              "mappings": [],
              "min": 0,
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "transparent",
                    "value": null
                  }
                ]
              },
              "unit": "short"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 4,
            "w": 4,
            "x": 20,
            "y": 0
          },
          "id": 21,
          "options": {
            "colorMode": "background",
            "graphMode": "none",
            "justifyMode": "auto",
            "orientation": "auto",
            "reduceOptions": {
              "calcs": [
                "last"
              ],
              "fields": "",
              "values": false
            },
            "text": {},
            "textMode": "auto"
          },
          "pluginVersion": "8.0.3",
          "targets": [
            {
              "exemplar": true,
              "expr": "sum by(rabbitmq_cluster) (rabbitmq_global_stream_error_access_refused_total{protocol=\"stream\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) +\n\nsum by(rabbitmq_cluster) (rabbitmq_global_stream_error_authentication_failure_total{protocol=\"stream\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) +\n\nsum by(rabbitmq_cluster) (rabbitmq_global_stream_error_frame_too_large_total{protocol=\"stream\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) +\n\nsum by(rabbitmq_cluster) (rabbitmq_global_stream_error_internal_error_total{protocol=\"stream\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) +\n\nsum by(rabbitmq_cluster) (rabbitmq_global_stream_error_precondition_failed_total{protocol=\"stream\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) +\n\nsum by(rabbitmq_cluster) (rabbitmq_global_stream_error_publisher_does_not_exist_total{protocol=\"stream\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) +\n\nsum by(rabbitmq_cluster) (rabbitmq_global_stream_error_sasl_authentication_failure_loopback_total{protocol=\"stream\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) +\n\nsum by(rabbitmq_cluster) (rabbitmq_global_stream_error_sasl_challenge_total{protocol=\"stream\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) +\n\nsum by(rabbitmq_cluster) (rabbitmq_global_stream_error_sasl_error_total{protocol=\"stream\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) +\n\nsum by(rabbitmq_cluster) (rabbitmq_global_stream_error_sasl_mechanism_not_supported_total{protocol=\"stream\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) +\n\nsum by(rabbitmq_cluster) (rabbitmq_global_stream_error_stream_already_exists_total{protocol=\"stream\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) +\n\nsum by(rabbitmq_cluster) (rabbitmq_global_stream_error_stream_does_not_exist_total{protocol=\"stream\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) +\n\nsum by(rabbitmq_cluster) (rabbitmq_global_stream_error_stream_not_available_total{protocol=\"stream\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) +\n\nsum by(rabbitmq_cluster) (rabbitmq_global_stream_error_subscription_id_already_exists_total{protocol=\"stream\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) +\n\nsum by(rabbitmq_cluster) (rabbitmq_global_stream_error_subscription_id_does_not_exist_total{protocol=\"stream\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) +\n\nsum by(rabbitmq_cluster) (rabbitmq_global_stream_error_unknown_frame_total{protocol=\"stream\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}) +\n\nsum by(rabbitmq_cluster) (rabbitmq_global_stream_error_vhost_access_failure_total{protocol=\"stream\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"})\n",
              "instant": false,
              "interval": "",
              "legendFormat": "",
              "refId": "A"
            }
          ],
          "title": "Errors since boot",
          "type": "stat"
        },
        {
          "cacheTimeout": null,
          "datasource": "${DS_PROMETHEUS}",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                }
              },
              "decimals": 0,
              "mappings": [],
              "unit": "short"
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byRegexp",
                  "options": "/^rabbit@[a-zA-Z\\.\\-]*?0(\\b|\\.)/"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "rgba(86, 166, 75, 1)",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byRegexp",
                  "options": "/^rabbit@[a-zA-Z\\.\\-]*?1(\\b|\\.)/"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "rgba(242, 204, 12, 1)",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byRegexp",
                  "options": "/^rabbit@[a-zA-Z\\.\\-]*?2(\\b|\\.)/"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "rgba(50, 116, 217, 1)",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byRegexp",
                  "options": "/^rabbit@[a-zA-Z\\.\\-]*?3(\\b|\\.)/"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "rgba(163, 82, 204, 1)",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byRegexp",
                  "options": "/^rabbit@[a-zA-Z\\.\\-]*?4(\\b|\\.)/"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "rgba(255, 120, 10, 1)",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byRegexp",
                  "options": "/^rabbit@[a-zA-Z\\.\\-]*?5(\\b|\\.)/"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "rgba(150, 217, 141, 1)",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byRegexp",
                  "options": "/^rabbit@[a-zA-Z\\.\\-]*?6(\\b|\\.)/"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "rgba(255, 238, 82, 1)",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byRegexp",
                  "options": "/^rabbit@[a-zA-Z\\.\\-]*?7(\\b|\\.)/"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "rgba(138, 184, 255, 1)",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byRegexp",
                  "options": "/^rabbit@[a-zA-Z\\.\\-]*?8(\\b|\\.)/"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "rgba(202, 149, 229, 1)",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byRegexp",
                  "options": "/^rabbit@[a-zA-Z\\.\\-]*?9(\\b|\\.)/"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "rgba(255, 179, 87, 1)",
                      "mode": "fixed"
                    }
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 6,
            "w": 4,
            "x": 0,
            "y": 4
          },
          "id": 16,
          "links": [],
          "options": {
            "displayLabels": [
              "value"
            ],
            "legend": {
              "calcs": [],
              "displayMode": "hidden",
              "placement": "bottom",
              "values": [
                "value"
              ]
            },
            "pieType": "pie",
            "reduceOptions": {
              "calcs": [
                "last"
              ],
              "fields": "",
              "values": false
            },
            "tooltip": {
              "mode": "multi"
            }
          },
          "pluginVersion": "8.0.3",
          "repeat": null,
          "targets": [
            {
              "exemplar": true,
              "expr": "sort_desc(sum by(rabbitmq_node) (rabbitmq_global_publishers{protocol=\"stream\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}))",
              "format": "time_series",
              "instant": false,
              "interval": "",
              "legendFormat": "{{rabbitmq_node}}",
              "refId": "A"
            }
          ],
          "type": "piechart"
        },
        {
          "datasource": "${DS_PROMETHEUS}",
          "fieldConfig": {
            "defaults": {
              "color": {
                "fixedColor": "rgba(128, 128, 128, 1)",
                "mode": "palette-classic"
              },
              "custom": {
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                }
              },
              "mappings": [],
              "unit": "short"
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byRegexp",
                  "options": "/^rabbit@[a-zA-Z\\.\\-]*?0(\\b|\\.)/"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "rgba(86, 166, 75, 1)",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byRegexp",
                  "options": "/^rabbit@[a-zA-Z\\.\\-]*?1(\\b|\\.)/"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "rgba(242, 204, 12, 1)",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byRegexp",
                  "options": "/^rabbit@[a-zA-Z\\.\\-]*?2(\\b|\\.)/"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "rgba(50, 116, 217, 1)",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byRegexp",
                  "options": "/^rabbit@[a-zA-Z\\.\\-]*?3(\\b|\\.)/"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "rgba(163, 82, 204, 1)",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byRegexp",
                  "options": "/^rabbit@[a-zA-Z\\.\\-]*?4(\\b|\\.)/"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "rgba(255, 120, 10, 1)",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byRegexp",
                  "options": "/^rabbit@[a-zA-Z\\.\\-]*?5(\\b|\\.)/"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "rgba(150, 217, 141, 1)",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byRegexp",
                  "options": "/^rabbit@[a-zA-Z\\.\\-]*?6(\\b|\\.)/"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "rgba(255, 238, 82, 1)",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byRegexp",
                  "options": "/^rabbit@[a-zA-Z\\.\\-]*?7(\\b|\\.)/"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "rgba(138, 184, 255, 1)",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byRegexp",
                  "options": "/^rabbit@[a-zA-Z\\.\\-]*?8(\\b|\\.)/"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "rgba(202, 149, 229, 1)",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byRegexp",
                  "options": "/^rabbit@[a-zA-Z\\.\\-]*?9(\\b|\\.)/"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "rgba(255, 179, 87, 1)",
                      "mode": "fixed"
                    }
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 6,
            "w": 4,
            "x": 4,
            "y": 4
          },
          "id": 17,
          "options": {
            "displayLabels": [
              "value"
            ],
            "legend": {
              "displayMode": "hidden",
              "placement": "bottom"
            },
            "pieType": "pie",
            "reduceOptions": {
              "calcs": [
                "last"
              ],
              "fields": "",
              "values": false
            },
            "tooltip": {
              "mode": "multi"
            }
          },
          "pluginVersion": "8.0.3",
          "targets": [
            {
              "exemplar": true,
              "expr": "sort_desc(sum by(rabbitmq_node) (irate(rabbitmq_global_messages_received_total{protocol=\"stream\"}[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}))",
              "format": "time_series",
              "instant": false,
              "interval": "",
              "legendFormat": "{{rabbitmq_node}}",
              "refId": "A"
            }
          ],
          "type": "piechart"
        },
        {
          "datasource": "${DS_PROMETHEUS}",
          "fieldConfig": {
            "defaults": {
              "color": {
                "fixedColor": "rgba(128, 128, 128, 1)",
                "mode": "palette-classic"
              },
              "custom": {
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                }
              },
              "mappings": [],
              "unit": "short"
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byRegexp",
                  "options": "/^rabbit@[a-zA-Z\\.\\-]*?0(\\b|\\.)/"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "rgba(86, 166, 75, 1)",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byRegexp",
                  "options": "/^rabbit@[a-zA-Z\\.\\-]*?1(\\b|\\.)/"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "rgba(242, 204, 12, 1)",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byRegexp",
                  "options": "/^rabbit@[a-zA-Z\\.\\-]*?2(\\b|\\.)/"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "rgba(50, 116, 217, 1)",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byRegexp",
                  "options": "/^rabbit@[a-zA-Z\\.\\-]*?3(\\b|\\.)/"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "rgba(163, 82, 204, 1)",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byRegexp",
                  "options": "/^rabbit@[a-zA-Z\\.\\-]*?4(\\b|\\.)/"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "rgba(255, 120, 10, 1)",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byRegexp",
                  "options": "/^rabbit@[a-zA-Z\\.\\-]*?5(\\b|\\.)/"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "rgba(150, 217, 141, 1)",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byRegexp",
                  "options": "/^rabbit@[a-zA-Z\\.\\-]*?6(\\b|\\.)/"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "rgba(255, 238, 82, 1)",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byRegexp",
                  "options": "/^rabbit@[a-zA-Z\\.\\-]*?7(\\b|\\.)/"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "rgba(138, 184, 255, 1)",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byRegexp",
                  "options": "/^rabbit@[a-zA-Z\\.\\-]*?8(\\b|\\.)/"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "rgba(202, 149, 229, 1)",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byRegexp",
                  "options": "/^rabbit@[a-zA-Z\\.\\-]*?9(\\b|\\.)/"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "rgba(255, 179, 87, 1)",
                      "mode": "fixed"
                    }
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 6,
            "w": 4,
            "x": 8,
            "y": 4
          },
          "id": 18,
          "options": {
            "displayLabels": [
              "value"
            ],
            "legend": {
              "displayMode": "hidden",
              "placement": "bottom",
              "values": []
            },
            "pieType": "pie",
            "reduceOptions": {
              "calcs": [
                "last"
              ],
              "fields": "",
              "values": false
            },
            "tooltip": {
              "mode": "multi"
            }
          },
          "pluginVersion": "8.0.3",
          "targets": [
            {
              "exemplar": true,
              "expr": "sort_desc(sum by(rabbitmq_node) (irate(rabbitmq_global_messages_confirmed_total{protocol=\"stream\"}[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}))",
              "format": "time_series",
              "instant": false,
              "interval": "",
              "legendFormat": "{{rabbitmq_node}}",
              "refId": "A"
            }
          ],
          "type": "piechart"
        },
        {
          "datasource": "${DS_PROMETHEUS}",
          "fieldConfig": {
            "defaults": {
              "color": {
                "fixedColor": "rgba(128, 128, 128, 1)",
                "mode": "palette-classic"
              },
              "custom": {
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                }
              },
              "mappings": [],
              "unit": "short"
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byRegexp",
                  "options": "/^rabbit@[a-zA-Z\\.\\-]*?0(\\b|\\.)/"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "rgba(86, 166, 75, 1)",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byRegexp",
                  "options": "/^rabbit@[a-zA-Z\\.\\-]*?1(\\b|\\.)/"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "rgba(242, 204, 12, 1)",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byRegexp",
                  "options": "/^rabbit@[a-zA-Z\\.\\-]*?2(\\b|\\.)/"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "rgba(50, 116, 217, 1)",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byRegexp",
                  "options": "/^rabbit@[a-zA-Z\\.\\-]*?3(\\b|\\.)/"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "rgba(163, 82, 204, 1)",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byRegexp",
                  "options": "/^rabbit@[a-zA-Z\\.\\-]*?4(\\b|\\.)/"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "rgba(255, 120, 10, 1)",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byRegexp",
                  "options": "/^rabbit@[a-zA-Z\\.\\-]*?5(\\b|\\.)/"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "rgba(150, 217, 141, 1)",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byRegexp",
                  "options": "/^rabbit@[a-zA-Z\\.\\-]*?6(\\b|\\.)/"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "rgba(255, 238, 82, 1)",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byRegexp",
                  "options": "/^rabbit@[a-zA-Z\\.\\-]*?7(\\b|\\.)/"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "rgba(138, 184, 255, 1)",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byRegexp",
                  "options": "/^rabbit@[a-zA-Z\\.\\-]*?8(\\b|\\.)/"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "rgba(202, 149, 229, 1)",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byRegexp",
                  "options": "/^rabbit@[a-zA-Z\\.\\-]*?9(\\b|\\.)/"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "rgba(255, 179, 87, 1)",
                      "mode": "fixed"
                    }
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 6,
            "w": 4,
            "x": 12,
            "y": 4
          },
          "id": 19,
          "options": {
            "displayLabels": [
              "value"
            ],
            "legend": {
              "displayMode": "hidden",
              "placement": "bottom"
            },
            "pieType": "pie",
            "reduceOptions": {
              "calcs": [
                "last"
              ],
              "fields": "",
              "values": false
            },
            "tooltip": {
              "mode": "multi"
            }
          },
          "pluginVersion": "8.0.3",
          "targets": [
            {
              "exemplar": true,
              "expr": "sort_desc(sum by(rabbitmq_node) (rabbitmq_global_consumers{protocol=\"stream\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}))",
              "format": "time_series",
              "instant": false,
              "interval": "",
              "legendFormat": "{{rabbitmq_node}}",
              "refId": "A"
            }
          ],
          "type": "piechart"
        },
        {
          "datasource": "${DS_PROMETHEUS}",
          "fieldConfig": {
            "defaults": {
              "color": {
                "fixedColor": "rgba(128, 128, 128, 1)",
                "mode": "palette-classic"
              },
              "custom": {
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                }
              },
              "mappings": [],
              "unit": "short"
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byRegexp",
                  "options": "/^rabbit@[a-zA-Z\\.\\-]*?0(\\b|\\.)/"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "rgba(86, 166, 75, 1)",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byRegexp",
                  "options": "/^rabbit@[a-zA-Z\\.\\-]*?1(\\b|\\.)/"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "rgba(242, 204, 12, 1)",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byRegexp",
                  "options": "/^rabbit@[a-zA-Z\\.\\-]*?2(\\b|\\.)/"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "rgba(50, 116, 217, 1)",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byRegexp",
                  "options": "/^rabbit@[a-zA-Z\\.\\-]*?3(\\b|\\.)/"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "rgba(163, 82, 204, 1)",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byRegexp",
                  "options": "/^rabbit@[a-zA-Z\\.\\-]*?4(\\b|\\.)/"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "rgba(255, 120, 10, 1)",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byRegexp",
                  "options": "/^rabbit@[a-zA-Z\\.\\-]*?5(\\b|\\.)/"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "rgba(150, 217, 141, 1)",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byRegexp",
                  "options": "/^rabbit@[a-zA-Z\\.\\-]*?6(\\b|\\.)/"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "rgba(255, 238, 82, 1)",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byRegexp",
                  "options": "/^rabbit@[a-zA-Z\\.\\-]*?7(\\b|\\.)/"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "rgba(138, 184, 255, 1)",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byRegexp",
                  "options": "/^rabbit@[a-zA-Z\\.\\-]*?8(\\b|\\.)/"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "rgba(202, 149, 229, 1)",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byRegexp",
                  "options": "/^rabbit@[a-zA-Z\\.\\-]*?9(\\b|\\.)/"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "rgba(255, 179, 87, 1)",
                      "mode": "fixed"
                    }
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 6,
            "w": 4,
            "x": 16,
            "y": 4
          },
          "id": 20,
          "options": {
            "displayLabels": [
              "value"
            ],
            "legend": {
              "displayMode": "hidden",
              "placement": "bottom"
            },
            "pieType": "pie",
            "reduceOptions": {
              "calcs": [
                "last"
              ],
              "fields": "",
              "values": false
            },
            "tooltip": {
              "mode": "multi"
            }
          },
          "pluginVersion": "8.0.3",
          "targets": [
            {
              "exemplar": true,
              "expr": "sort_desc(sum by(rabbitmq_node) (irate(rabbitmq_global_messages_delivered_total{protocol=\"stream\"}[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"}))",
              "format": "time_series",
              "instant": false,
              "interval": "",
              "legendFormat": "{{rabbitmq_node}}",
              "refId": "A"
            }
          ],
          "type": "piechart"
        },
        {
          "datasource": "${DS_PROMETHEUS}",
          "gridPos": {
            "h": 6,
            "w": 4,
            "x": 20,
            "y": 4
          },
          "id": 25,
          "options": {
            "content": "&nbsp; [What are Streams?](https://www.rabbitmq.com/streams.html)\n\n&nbsp; [Streams Overview + slides](https://blog.rabbitmq.com/posts/2021/07/rabbitmq-streams-overview/)\n\n&nbsp; [First Application + video](https://blog.rabbitmq.com/posts/2021/07/rabbitmq-streams-first-application/)\n\n&nbsp; [Using Stream protocol + diagrams](https://blog.rabbitmq.com/posts/2021/07/connecting-to-streams/)",
            "mode": "markdown"
          },
          "pluginVersion": "8.0.3",
          "title": "Learn more",
          "transparent": true,
          "type": "text"
        },
        {
          "datasource": "-- Dashboard --",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 20,
                "gradientMode": "opacity",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "smooth",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "never",
                "spanNulls": true,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "decimals": 0,
              "mappings": [],
              "min": 0,
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "short"
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byRegexp",
                  "options": "/^rabbit@[a-zA-Z\\.\\-]*?0(\\b|\\.)/"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "rgba(86, 166, 75, 1)",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byRegexp",
                  "options": "/^rabbit@[a-zA-Z\\.\\-]*?1(\\b|\\.)/"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "rgba(242, 204, 12, 1)",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byRegexp",
                  "options": "/^rabbit@[a-zA-Z\\.\\-]*?2(\\b|\\.)/"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "rgba(50, 116, 217, 1)",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byRegexp",
                  "options": "/^rabbit@[a-zA-Z\\.\\-]*?3(\\b|\\.)/"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "rgba(163, 82, 204, 1)",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byRegexp",
                  "options": "/^rabbit@[a-zA-Z\\.\\-]*?4(\\b|\\.)/"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "rgba(255, 120, 10, 1)",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byRegexp",
                  "options": "/^rabbit@[a-zA-Z\\.\\-]*?5(\\b|\\.)/"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "rgba(150, 217, 141, 1)",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byRegexp",
                  "options": "/^rabbit@[a-zA-Z\\.\\-]*?6(\\b|\\.)/"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "rgba(255, 238, 82, 1)",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byRegexp",
                  "options": "/^rabbit@[a-zA-Z\\.\\-]*?7(\\b|\\.)/"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "rgba(138, 184, 255, 1)",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byRegexp",
                  "options": "/^rabbit@[a-zA-Z\\.\\-]*?8(\\b|\\.)/"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "rgba(202, 149, 229, 1)",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byRegexp",
                  "options": "/^rabbit@[a-zA-Z\\.\\-]*?9(\\b|\\.)/"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "rgba(255, 179, 87, 1)",
                      "mode": "fixed"
                    }
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 9,
            "w": 12,
            "x": 0,
            "y": 10
          },
          "id": 3,
          "options": {
            "legend": {
              "calcs": [
                "mean",
                "max",
                "min",
                "last"
              ],
              "displayMode": "table",
              "placement": "bottom"
            },
            "tooltip": {
              "mode": "single"
            }
          },
          "pluginVersion": "8.0.3",
          "targets": [
            {
              "panelId": 16,
              "refId": "A"
            }
          ],
          "timeFrom": null,
          "timeShift": null,
          "title": "Stream publishers",
          "type": "timeseries"
        },
        {
          "datasource": "-- Dashboard --",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 20,
                "gradientMode": "opacity",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "smooth",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "never",
                "spanNulls": true,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "decimals": 0,
              "mappings": [],
              "min": 0,
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  }
                ]
              },
              "unit": "short"
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byRegexp",
                  "options": "/^rabbit@[a-zA-Z\\.\\-]*?0(\\b|\\.)/"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "rgba(86, 166, 75, 1)",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byRegexp",
                  "options": "/^rabbit@[a-zA-Z\\.\\-]*?1(\\b|\\.)/"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "rgba(242, 204, 12, 1)",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byRegexp",
                  "options": "/^rabbit@[a-zA-Z\\.\\-]*?2(\\b|\\.)/"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "rgba(50, 116, 217, 1)",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byRegexp",
                  "options": "/^rabbit@[a-zA-Z\\.\\-]*?3(\\b|\\.)/"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "rgba(163, 82, 204, 1)",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byRegexp",
                  "options": "/^rabbit@[a-zA-Z\\.\\-]*?4(\\b|\\.)/"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "rgba(255, 120, 10, 1)",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byRegexp",
                  "options": "/^rabbit@[a-zA-Z\\.\\-]*?5(\\b|\\.)/"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "rgba(150, 217, 141, 1)",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byRegexp",
                  "options": "/^rabbit@[a-zA-Z\\.\\-]*?6(\\b|\\.)/"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "rgba(255, 238, 82, 1)",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byRegexp",
                  "options": "/^rabbit@[a-zA-Z\\.\\-]*?7(\\b|\\.)/"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "rgba(138, 184, 255, 1)",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byRegexp",
                  "options": "/^rabbit@[a-zA-Z\\.\\-]*?8(\\b|\\.)/"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "rgba(202, 149, 229, 1)",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byRegexp",
                  "options": "/^rabbit@[a-zA-Z\\.\\-]*?9(\\b|\\.)/"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "rgba(255, 179, 87, 1)",
                      "mode": "fixed"
                    }
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 9,
            "w": 12,
            "x": 12,
            "y": 10
          },
          "id": 5,
          "options": {
            "legend": {
              "calcs": [
                "mean",
                "max",
                "min",
                "last"
              ],
              "displayMode": "table",
              "placement": "bottom"
            },
            "tooltip": {
              "mode": "single"
            }
          },
          "pluginVersion": "8.0.3",
          "targets": [
            {
              "panelId": 19,
              "refId": "A"
            }
          ],
          "timeFrom": null,
          "timeShift": null,
          "title": "Stream consumers",
          "type": "timeseries"
        },
        {
          "datasource": "-- Dashboard --",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 20,
                "gradientMode": "opacity",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "smooth",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "never",
                "spanNulls": true,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "min": 0,
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "short"
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byRegexp",
                  "options": "/^rabbit@[a-zA-Z\\.\\-]*?0(\\b|\\.)/"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "rgba(86, 166, 75, 1)",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byRegexp",
                  "options": "/^rabbit@[a-zA-Z\\.\\-]*?1(\\b|\\.)/"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "rgba(242, 204, 12, 1)",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byRegexp",
                  "options": "/^rabbit@[a-zA-Z\\.\\-]*?2(\\b|\\.)/"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "rgba(50, 116, 217, 1)",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byRegexp",
                  "options": "/^rabbit@[a-zA-Z\\.\\-]*?3(\\b|\\.)/"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "rgba(163, 82, 204, 1)",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byRegexp",
                  "options": "/^rabbit@[a-zA-Z\\.\\-]*?4(\\b|\\.)/"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "rgba(255, 120, 10, 1)",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byRegexp",
                  "options": "/^rabbit@[a-zA-Z\\.\\-]*?5(\\b|\\.)/"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "rgba(150, 217, 141, 1)",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byRegexp",
                  "options": "/^rabbit@[a-zA-Z\\.\\-]*?6(\\b|\\.)/"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "rgba(255, 238, 82, 1)",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byRegexp",
                  "options": "/^rabbit@[a-zA-Z\\.\\-]*?7(\\b|\\.)/"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "rgba(138, 184, 255, 1)",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byRegexp",
                  "options": "/^rabbit@[a-zA-Z\\.\\-]*?8(\\b|\\.)/"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "rgba(202, 149, 229, 1)",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byRegexp",
                  "options": "/^rabbit@[a-zA-Z\\.\\-]*?9(\\b|\\.)/"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "rgba(255, 179, 87, 1)",
                      "mode": "fixed"
                    }
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 9,
            "w": 12,
            "x": 0,
            "y": 19
          },
          "id": 7,
          "options": {
            "legend": {
              "calcs": [
                "mean",
                "max",
                "min",
                "last"
              ],
              "displayMode": "table",
              "placement": "bottom"
            },
            "tooltip": {
              "mode": "single"
            }
          },
          "pluginVersion": "8.0.3",
          "targets": [
            {
              "panelId": 17,
              "refId": "A"
            }
          ],
          "timeFrom": null,
          "timeShift": null,
          "title": "Stream messages received / s",
          "type": "timeseries"
        },
        {
          "datasource": "-- Dashboard --",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 20,
                "gradientMode": "opacity",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "smooth",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "never",
                "spanNulls": true,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "min": 0,
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "short"
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byRegexp",
                  "options": "/^rabbit@[a-zA-Z\\.\\-]*?0(\\b|\\.)/"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "rgba(86, 166, 75, 1)",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byRegexp",
                  "options": "/^rabbit@[a-zA-Z\\.\\-]*?1(\\b|\\.)/"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "rgba(242, 204, 12, 1)",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byRegexp",
                  "options": "/^rabbit@[a-zA-Z\\.\\-]*?2(\\b|\\.)/"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "rgba(50, 116, 217, 1)",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byRegexp",
                  "options": "/^rabbit@[a-zA-Z\\.\\-]*?3(\\b|\\.)/"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "rgba(163, 82, 204, 1)",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byRegexp",
                  "options": "/^rabbit@[a-zA-Z\\.\\-]*?4(\\b|\\.)/"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "rgba(255, 120, 10, 1)",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byRegexp",
                  "options": "/^rabbit@[a-zA-Z\\.\\-]*?5(\\b|\\.)/"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "rgba(150, 217, 141, 1)",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byRegexp",
                  "options": "/^rabbit@[a-zA-Z\\.\\-]*?6(\\b|\\.)/"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "rgba(255, 238, 82, 1)",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byRegexp",
                  "options": "/^rabbit@[a-zA-Z\\.\\-]*?7(\\b|\\.)/"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "rgba(138, 184, 255, 1)",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byRegexp",
                  "options": "/^rabbit@[a-zA-Z\\.\\-]*?8(\\b|\\.)/"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "rgba(202, 149, 229, 1)",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byRegexp",
                  "options": "/^rabbit@[a-zA-Z\\.\\-]*?9(\\b|\\.)/"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "rgba(255, 179, 87, 1)",
                      "mode": "fixed"
                    }
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 9,
            "w": 12,
            "x": 12,
            "y": 19
          },
          "id": 9,
          "options": {
            "legend": {
              "calcs": [
                "mean",
                "max",
                "min",
                "last"
              ],
              "displayMode": "table",
              "placement": "bottom"
            },
            "tooltip": {
              "mode": "single"
            }
          },
          "pluginVersion": "8.0.3",
          "targets": [
            {
              "panelId": 20,
              "refId": "A"
            }
          ],
          "timeFrom": null,
          "timeShift": null,
          "title": "Stream messages delivered / s",
          "type": "timeseries"
        },
        {
          "datasource": "-- Dashboard --",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 20,
                "gradientMode": "opacity",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "smooth",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "never",
                "spanNulls": true,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "min": 0,
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "short"
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byRegexp",
                  "options": "/^rabbit@[a-zA-Z\\.\\-]*?0(\\b|\\.)/"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "rgba(86, 166, 75, 1)",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byRegexp",
                  "options": "/^rabbit@[a-zA-Z\\.\\-]*?1(\\b|\\.)/"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "rgba(242, 204, 12, 1)",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byRegexp",
                  "options": "/^rabbit@[a-zA-Z\\.\\-]*?2(\\b|\\.)/"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "rgba(50, 116, 217, 1)",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byRegexp",
                  "options": "/^rabbit@[a-zA-Z\\.\\-]*?3(\\b|\\.)/"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "rgba(163, 82, 204, 1)",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byRegexp",
                  "options": "/^rabbit@[a-zA-Z\\.\\-]*?4(\\b|\\.)/"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "rgba(255, 120, 10, 1)",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byRegexp",
                  "options": "/^rabbit@[a-zA-Z\\.\\-]*?5(\\b|\\.)/"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "rgba(150, 217, 141, 1)",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byRegexp",
                  "options": "/^rabbit@[a-zA-Z\\.\\-]*?6(\\b|\\.)/"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "rgba(255, 238, 82, 1)",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byRegexp",
                  "options": "/^rabbit@[a-zA-Z\\.\\-]*?7(\\b|\\.)/"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "rgba(138, 184, 255, 1)",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byRegexp",
                  "options": "/^rabbit@[a-zA-Z\\.\\-]*?8(\\b|\\.)/"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "rgba(202, 149, 229, 1)",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byRegexp",
                  "options": "/^rabbit@[a-zA-Z\\.\\-]*?9(\\b|\\.)/"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "rgba(255, 179, 87, 1)",
                      "mode": "fixed"
                    }
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 9,
            "w": 12,
            "x": 0,
            "y": 28
          },
          "id": 11,
          "options": {
            "legend": {
              "calcs": [
                "mean",
                "max",
                "min",
                "last"
              ],
              "displayMode": "table",
              "placement": "bottom"
            },
            "tooltip": {
              "mode": "single"
            }
          },
          "pluginVersion": "8.0.3",
          "targets": [
            {
              "panelId": 18,
              "refId": "A"
            }
          ],
          "timeFrom": null,
          "timeShift": null,
          "title": "Stream messages confirmed to publishers / s",
          "type": "timeseries"
        },
        {
          "datasource": "${DS_PROMETHEUS}",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 20,
                "gradientMode": "opacity",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "stepBefore",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "never",
                "spanNulls": true,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "dark-red",
                    "value": null
                  }
                ]
              },
              "unit": "short"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 13,
            "w": 24,
            "x": 0,
            "y": 37
          },
          "id": 23,
          "options": {
            "legend": {
              "calcs": [
                "last"
              ],
              "displayMode": "table",
              "placement": "right"
            },
            "tooltip": {
              "mode": "single"
            }
          },
          "pluginVersion": "8.0.3",
          "targets": [
            {
              "exemplar": true,
              "expr": "sum by(rabbitmq_cluster) (rabbitmq_global_stream_error_access_refused_total{protocol=\"stream\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"})",
              "interval": "",
              "legendFormat": "access_refused",
              "refId": "A"
            },
            {
              "exemplar": true,
              "expr": "sum by(rabbitmq_cluster) (rabbitmq_global_stream_error_authentication_failure_total{protocol=\"stream\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"})",
              "hide": false,
              "interval": "",
              "legendFormat": "error_authentication_failure",
              "refId": "B"
            },
            {
              "exemplar": true,
              "expr": "sum by(rabbitmq_cluster) (rabbitmq_global_stream_error_frame_too_large_total{protocol=\"stream\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"})",
              "hide": false,
              "interval": "",
              "legendFormat": "frame_too_large",
              "refId": "C"
            },
            {
              "exemplar": true,
              "expr": "sum by(rabbitmq_cluster) (rabbitmq_global_stream_error_internal_error_total{protocol=\"stream\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"})",
              "hide": false,
              "interval": "",
              "legendFormat": "internal_error",
              "refId": "D"
            },
            {
              "exemplar": true,
              "expr": "sum by(rabbitmq_cluster) (rabbitmq_global_stream_error_precondition_failed_total{protocol=\"stream\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"})",
              "hide": false,
              "interval": "",
              "legendFormat": "precondition_failed",
              "refId": "E"
            },
            {
              "exemplar": true,
              "expr": "sum by(rabbitmq_cluster) (rabbitmq_global_stream_error_publisher_does_not_exist_total{protocol=\"stream\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"})",
              "hide": false,
              "interval": "",
              "legendFormat": "publisher_does_not_exist",
              "refId": "F"
            },
            {
              "exemplar": true,
              "expr": "sum by(rabbitmq_cluster) (rabbitmq_global_stream_error_sasl_authentication_failure_loopback_total{protocol=\"stream\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"})",
              "hide": false,
              "interval": "",
              "legendFormat": "sasl_authentication_failure_loopback",
              "refId": "G"
            },
            {
              "exemplar": true,
              "expr": "sum by(rabbitmq_cluster) (rabbitmq_global_stream_error_sasl_challenge_total{protocol=\"stream\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"})",
              "hide": false,
              "interval": "",
              "legendFormat": "sasl_challenge",
              "refId": "H"
            },
            {
              "exemplar": true,
              "expr": "sum by(rabbitmq_cluster) (rabbitmq_global_stream_error_sasl_error_total{protocol=\"stream\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"})",
              "hide": false,
              "interval": "",
              "legendFormat": "sasl_error",
              "refId": "I"
            },
            {
              "exemplar": true,
              "expr": "sum by(rabbitmq_cluster) (rabbitmq_global_stream_error_sasl_mechanism_not_supported_total{protocol=\"stream\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"})",
              "hide": false,
              "interval": "",
              "legendFormat": "sasl_mechanism_not_supported",
              "refId": "J"
            },
            {
              "exemplar": true,
              "expr": "sum by(rabbitmq_cluster) (rabbitmq_global_stream_error_stream_already_exists_total{protocol=\"stream\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"})",
              "hide": false,
              "interval": "",
              "legendFormat": "stream_already_exists",
              "refId": "K"
            },
            {
              "exemplar": true,
              "expr": "sum by(rabbitmq_cluster) (rabbitmq_global_stream_error_stream_does_not_exist_total{protocol=\"stream\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"})",
              "hide": false,
              "interval": "",
              "legendFormat": "stream_does_not_exist",
              "refId": "L"
            },
            {
              "exemplar": true,
              "expr": "sum by(rabbitmq_cluster) (rabbitmq_global_stream_error_stream_not_available_total{protocol=\"stream\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"})",
              "hide": false,
              "interval": "",
              "legendFormat": "stream_not_available",
              "refId": "M"
            },
            {
              "exemplar": true,
              "expr": "sum by(rabbitmq_cluster) (rabbitmq_global_stream_error_subscription_id_already_exists_total{protocol=\"stream\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"})",
              "hide": false,
              "interval": "",
              "legendFormat": "subscription_id_already_exists",
              "refId": "N"
            },
            {
              "exemplar": true,
              "expr": "sum by(rabbitmq_cluster) (rabbitmq_global_stream_error_subscription_id_does_not_exist_total{protocol=\"stream\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"})",
              "hide": false,
              "interval": "",
              "legendFormat": "subscription_id_does_not_exist",
              "refId": "O"
            },
            {
              "exemplar": true,
              "expr": "sum by(rabbitmq_cluster) (rabbitmq_global_stream_error_unknown_frame_total{protocol=\"stream\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"})",
              "hide": false,
              "interval": "",
              "legendFormat": "error_unknown_frame",
              "refId": "P"
            },
            {
              "exemplar": true,
              "expr": "sum by(rabbitmq_cluster) (rabbitmq_global_stream_error_vhost_access_failure_total{protocol=\"stream\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"$rabbitmq_cluster\", namespace=\"$namespace\"})",
              "hide": false,
              "interval": "",
              "legendFormat": "vhost_access_failure",
              "refId": "Q"
            }
          ],
          "timeFrom": null,
          "timeShift": null,
          "title": "Errors since boot",
          "type": "timeseries"
        }
      ],
      "refresh": "15s",
      "schemaVersion": 30,
      "style": "dark",
      "tags": [
        "rabbitmq-stream",
        "rabbitmq-prometheus"
      ],
      "templating": {
        "list": [
          {
            "current": {
              "selected": false,
              "text": "default",
              "value": "default"
            },
            "datasource": "${DS_PROMETHEUS}",
            "description": null,
            "error": null,
            "hide": 2,
            "includeAll": false,
            "label": "datasource",
            "multi": false,
            "name": "DS_PROMETHEUS",
            "options": [],
            "query": "prometheus",
            "refresh": 1,
            "regex": "",
            "skipUrlSync": false,
            "type": "datasource"
          },
          {
            "allValue": null,
            "current": {},
            "datasource": "${DS_PROMETHEUS}",
            "definition": "label_values(rabbitmq_identity_info, namespace)",
            "description": null,
            "error": null,
            "hide": 0,
            "includeAll": false,
            "label": "Namespace",
            "multi": false,
            "name": "namespace",
            "options": [],
            "query": {
              "query": "label_values(rabbitmq_identity_info, namespace)",
              "refId": "StandardVariableQuery"
            },
            "refresh": 2,
            "regex": "",
            "skipUrlSync": false,
            "sort": 1,
            "tagValuesQuery": "",
            "tagsQuery": "",
            "type": "query",
            "useTags": false
          },
          {
            "allValue": null,
            "current": {},
            "datasource": "${DS_PROMETHEUS}",
            "definition": "label_values(rabbitmq_identity_info{namespace=\"$namespace\"}, rabbitmq_cluster)",
            "description": null,
            "error": null,
            "hide": 0,
            "includeAll": false,
            "label": "RabbitMQ Cluster",
            "multi": false,
            "name": "rabbitmq_cluster",
            "options": [],
            "query": {
              "query": "label_values(rabbitmq_identity_info{namespace=\"$namespace\"}, rabbitmq_cluster)",
              "refId": "StandardVariableQuery"
            },
            "refresh": 2,
            "regex": "",
            "skipUrlSync": false,
            "sort": 1,
            "tagValuesQuery": "",
            "tagsQuery": "",
            "type": "query",
            "useTags": false
          }
        ]
      },
      "time": {
        "from": "now-1h",
        "to": "now"
      },
      "timepicker": {
        "refresh_intervals": [
          "15s",
          "30s",
          "1m",
          "5m",
          "10m"
        ]
      },
      "timezone": "",
      "title": "RabbitMQ-Stream",
      "uid": "j7MCpqZ7k",
      "version": 1
    }
---
# Source: rabbitmq-observability/templates/prometheus/rules/rabbitmq-per-object/queue-has-no-consumers.yaml
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: rabbitmq-queue-has-no-consumers
  namespace: default
  # If labels are defined in spec.ruleSelector.matchLabels of your deployed Prometheus object, make sure to include them here.
  labels:
    role: alert-rules
spec:
  groups:
  - name: rabbitmq
    rules:
    - alert: RabbitMqQueueHasNoConsumers
      expr: |
          (
            ((rabbitmq_detailed_queue_consumers{vhost="/", queue=~".*"} == 0) + rabbitmq_detailed_queue_messages) > 0
          ) * on (instance, job) group_left(rabbitmq_cluster) rabbitmq_identity_info
      for: 10m
      annotations:
        description: |
          Over the last 10 minutes, non-empty queue `{{ $labels.queue }}` with {{ $value }} messages
          in virtual host `{{ $labels.vhost }}` didn't have any consumers in
          RabbitMQ cluster `{{ $labels.rabbitmq_cluster }}` in namespace `{{ $labels.namespace }}`.
        summary: |
          Messages are sitting idle in the queue, without any processing.
          This alert is highly application specific (and e.g. doesn't make sense for stream queues).
      labels:
        rulesgroup: rabbitmq
        severity: warning
---
# Source: rabbitmq-observability/templates/prometheus/rules/rabbitmq-per-object/queue-is-growing.yaml
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: rabbitmq-queue-is-growing
  namespace: default
  # If labels are defined in spec.ruleSelector.matchLabels of your deployed Prometheus object, make sure to include them here.
  labels:
    role: alert-rules
spec:
  groups:
  - name: rabbitmq
    rules:
    - alert: RabbitMqQueueIsGrowing
      # `> 1` because of floating point rounding errors
      expr: |
          (
              avg_over_time(rabbitmq_detailed_queue_messages[10m]) - avg_over_time(rabbitmq_detailed_queue_messages[10m] offset 1m) > 1
          ) * on (instance, job) group_left(rabbitmq_cluster) rabbitmq_identity_info
      for: 10m
      annotations:
        description: |
          Over the last 10 minutes, queue `{{ $labels.queue }}` in virtual host `{{ $labels.vhost }}`
          was growing. 10 minute moving average has grown by {{ $value }}.
          This happens in RabbitMQ cluster `{{ $labels.rabbitmq_cluster }}` in namespace `{{ $labels.namespace }}`.
        summary: |
          Queue size is steadily growing over time.
      labels:
        rulesgroup: rabbitmq
        severity: warning
---
# Source: rabbitmq-observability/templates/prometheus/rules/rabbitmq/container-restarts.yaml
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: rabbitmq-container-restarts
  namespace: default
  # If labels are defined in spec.ruleSelector.matchLabels of your deployed Prometheus object, make sure to include them here.
  labels:
    role: alert-rules
spec:
  groups:
  - name: rabbitmq
    rules:
    - alert: RabbitMqContainerRestarts
      expr: |
        increase(kube_pod_container_status_restarts_total[10m]) * on(namespace, pod, container) group_left(rabbitmq_cluster) rabbitmq_identity_info
        >=
        1
      for: 5m
      annotations:
        description: |
          Over the last 10 minutes, container `{{ $labels.container }}`
          restarted `{{ $value | printf "%.0f" }}` times in pod `{{ $labels.pod }}` of RabbitMQ cluster
          `{{ $labels.rabbitmq_cluster }}` in namespace `{{ $labels.namespace }}`.
        summary: |
          Investigate why the container got restarted.
          Check the logs of the current container: `kubectl -n {{ $labels.namespace }} logs {{ $labels.pod }}`
          Check the logs of the previous container: `kubectl -n {{ $labels.namespace }} logs {{ $labels.pod }} --previous`
          Check the last state of the container: `kubectl -n {{ $labels.namespace }} get pod {{ $labels.pod }} -o jsonpath='{.status.containerStatuses[].lastState}'`
      labels:
        rabbitmq_cluster: '{{ $labels.rabbitmq_cluster }}'
        rulesgroup: rabbitmq
        severity: warning
---
# Source: rabbitmq-observability/templates/prometheus/rules/rabbitmq/dead-letter-queue.yaml
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: rabbitmq-dead-letter-queue-letters-over-threshold
  namespace: default
  # If labels are defined in spec.ruleSelector.matchLabels of your deployed Prometheus object, make sure to include them here.
  labels:
    role: alert-rules
spec:
  groups:
  - name: rabbitmq
    rules:
    - alert: RabbitMQDeadLetterQueueNotEmpty
      expr: |

        (rabbitmq_detailed_queue_messages{queue!~".*rpc.*"} and rabbitmq_detailed_queue_messages{queue=~".*dlq"})  * on(namespace, pod,container) group_left(rabbitmq_cluster) rabbitmq_identity_info
        >=
        1
      for: 5m
      annotations:
        description: |
          Over the last 5 minutes, dead letter queue `{{ $labels.queue }}`
          contained `{{ $value | printf "%.0f" }}` letters.
        summary: ""
          
      labels:
        rabbitmq_cluster: '{{ $labels.rabbitmq_cluster }}'
        rulesgroup: rabbitmq
        severity: warning
---
# Source: rabbitmq-observability/templates/prometheus/rules/rabbitmq/file-descriptors-near-limit.yaml
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: rabbitmq-file-descriptors-near-limit
  namespace: default
  # If labels are defined in spec.ruleSelector.matchLabels of your deployed Prometheus object, make sure to include them here.
  labels:
    role: alert-rules
spec:
  groups:
  - name: rabbitmq
    rules:
    - alert: RabbitMqFileDescriptorsNearLimit
      expr: |
        sum by(namespace, rabbitmq_cluster, pod, rabbitmq_node) (max_over_time(rabbitmq_process_open_fds[5m]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node, pod) rabbitmq_identity_info)
        /
        sum by(namespace, rabbitmq_cluster, pod, rabbitmq_node) (rabbitmq_process_max_tcp_sockets  * on(instance) group_left(rabbitmq_cluster, rabbitmq_node, pod) rabbitmq_identity_info)
        > 0.8
      for: 10m
      annotations:
        description: |
          `{{ $value | humanizePercentage }}` file descriptors of file
          descriptor limit are used in RabbitMQ node `{{ $labels.rabbitmq_node }}`,
          pod `{{ $labels.pod }}`, RabbitMQ cluster `{{ $labels.rabbitmq_cluster }}`,
          namespace `{{ $labels.namespace }}`.
        summary: |
          More than 80% of file descriptors are used on the RabbitMQ node.
          When this value reaches 100%, new connections will not be accepted and disk write operations may fail.
          Client libraries, peer nodes and CLI tools will not be able to connect when the node runs out of available file descriptors.
          See https://www.rabbitmq.com/production-checklist.html#resource-limits-file-handle-limit.
      labels:
        rulesgroup: rabbitmq
        severity: warning
---
# Source: rabbitmq-observability/templates/prometheus/rules/rabbitmq/high-connection-churn.yaml
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: rabbitmq-high-connection-churn
  namespace: default
  # If labels are defined in spec.ruleSelector.matchLabels of your deployed Prometheus object, make sure to include them here.
  labels:
    role: alert-rules
spec:
  groups:
  - name: rabbitmq
    rules:
    - alert: RabbitMqHighConnectionChurn
      expr: |
        (
          sum(rate(rabbitmq_connections_closed_total[5m]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info) by(namespace, rabbitmq_cluster)
          +
          sum(rate(rabbitmq_connections_opened_total[5m]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info) by(namespace, rabbitmq_cluster)
        )
        /
        sum (rabbitmq_connections * on(instance) group_left(rabbitmq_cluster) rabbitmq_identity_info) by (namespace, rabbitmq_cluster)
        > 0.1
        unless
        sum (rabbitmq_connections * on(instance) group_left(rabbitmq_cluster) rabbitmq_identity_info) by (namespace, rabbitmq_cluster)
        < 100
      for: 10m
      annotations:
        description: |
          Over the last 5 minutes, `{{ $value | humanizePercentage }}`
          of total connections are closed or opened per second in RabbitMQ cluster `{{ $labels.rabbitmq_cluster }}`
          in namespace `{{ $labels.namespace }}`.
        summary: |
          More than 10% of total connections are churning.
          This means that client application connections are short-lived instead of long-lived.
          Read https://www.rabbitmq.com/connections.html#high-connection-churn to understand why this is an anti-pattern.
      labels:
        rulesgroup: rabbitmq
        severity: warning
---
# Source: rabbitmq-observability/templates/prometheus/rules/rabbitmq/insufficient-established-erlang-distribution-links.yaml
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: rabbitmq-insufficient-established-erlang-distribution-links
  namespace: default
  # If labels are defined in spec.ruleSelector.matchLabels of your deployed Prometheus object, make sure to include them here.
  labels:
    role: alert-rules
spec:
  groups:
  - name: rabbitmq
    rules:
    - alert: RabbitMqInsufficientEstablishedErlangDistributionLinks
      # erlang_vm_dist_node_state: 1=pending, 2=up_pending, 3=up
      expr: |
        count by (namespace, rabbitmq_cluster) (erlang_vm_dist_node_state * on(instance) group_left(rabbitmq_cluster) rabbitmq_identity_info == 3)
        <
         count by (namespace, rabbitmq_cluster) (rabbitmq_build_info * on(instance) group_left(rabbitmq_cluster) rabbitmq_identity_info)
         *
        (count by (namespace, rabbitmq_cluster) (rabbitmq_build_info * on(instance) group_left(rabbitmq_cluster) rabbitmq_identity_info) -1 )
      for: 10m
      annotations:
        description: |
          There are only `{{ $value }}` established Erlang distribution links
          in RabbitMQ cluster `{{ $labels.rabbitmq_cluster }}` in namespace `{{ $labels.namespace }}`.
        summary: |
          RabbitMQ clusters have a full mesh topology.
          All RabbitMQ nodes connect to all other RabbitMQ nodes in both directions.
          The expected number of established Erlang distribution links is therefore `n*(n-1)` where `n` is the number of RabbitMQ nodes in the cluster.
          Therefore, the expected number of distribution links are `0` for a 1-node cluster, `6` for a 3-node cluster, and `20` for a 5-node cluster.
          This alert reports that the number of established distributions links is less than the expected number.
          Some reasons for this alert include failed network links, network partitions, failed clustering (i.e. nodes can't join the cluster).
          Check the panels `All distribution links`, `Established distribution links`, `Connecting distributions links`, `Waiting distribution links`, and `distribution links`
          of the Grafana dashboard `Erlang-Distribution`.
          Check the logs of the RabbitMQ nodes: `kubectl -n {{ $labels.namespace }} logs -l app.kubernetes.io/component=rabbitmq,app.kubernetes.io/name={{ $labels.rabbitmq_cluster }}`
      labels:
        rulesgroup: rabbitmq
        severity: warning
---
# Source: rabbitmq-observability/templates/prometheus/rules/rabbitmq/low-disk-watermark-predicted.yaml
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: rabbitmq-low-disk-watermark-predicted
  namespace: default
  # If labels are defined in spec.ruleSelector.matchLabels of your deployed Prometheus object, make sure to include them here.
  labels:
    role: alert-rules
spec:
  groups:
  - name: rabbitmq
    rules:
    - alert: RabbitMqLowDiskWatermarkPredicted
      # The 2nd condition ensures that data points are available until 24 hours ago such that no false positive alerts are triggered for newly created RabbitMQ clusters.
      expr: |
        (
          predict_linear(rabbitmq_disk_space_available_bytes[24h], 60*60*24) * on (instance) group_left(rabbitmq_cluster, rabbitmq_node, pod) rabbitmq_identity_info
          <
          rabbitmq_disk_space_available_limit_bytes * on (instance) group_left(rabbitmq_cluster, rabbitmq_node, pod) rabbitmq_identity_info
        )
        and
        (
          count_over_time(rabbitmq_disk_space_available_limit_bytes[2h] offset 22h) * on (instance) group_left(rabbitmq_cluster, rabbitmq_node, pod) rabbitmq_identity_info
          >
          0
        )
      for: 60m
      annotations:
        description: |
          The predicted free disk space in 24 hours from now is `{{ $value | humanize1024 }}B`
          in RabbitMQ node `{{ $labels.rabbitmq_node }}`, pod `{{ $labels.pod }}`,
          RabbitMQ cluster `{{ $labels.rabbitmq_cluster }}`, namespace `{{ $labels.namespace }}`.
        summary: |
          Based on the trend of available disk space over the past 24 hours, it's predicted that, in 24 hours from now, a disk alarm will be triggered since the free disk space will drop below the free disk space limit.
          This alert is reported for the partition where the RabbitMQ data directory is stored.
          When the disk alarm will be triggered, all publishing connections across all cluster nodes will be blocked.
          See
          https://www.rabbitmq.com/alarms.html,
          https://www.rabbitmq.com/disk-alarms.html,
          https://www.rabbitmq.com/production-checklist.html#resource-limits-disk-space,
          https://www.rabbitmq.com/persistence-conf.html,
          https://www.rabbitmq.com/connection-blocked.html.
      labels:
        rulesgroup: rabbitmq
        severity: warning
---
# Source: rabbitmq-observability/templates/prometheus/rules/rabbitmq/no-majority-of-pods-ready.yaml
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: rabbitmq-no-majority-of-pods-ready
  namespace: default
  # If labels are defined in spec.ruleSelector.matchLabels of your deployed Prometheus object, make sure to include them here.
  labels:
    role: alert-rules
spec:
  groups:
  - name: rabbitmq
    rules:
    - alert: noMajorityOfPodsReady
      expr: |
        sum(up{job=~".*rabbitmq.*"}) < 3 / 2
      for: 5m
      annotations:
        description: |
          Only `{{ $value }}` pods are ready in StatefulSet `{{ $labels.statefulset }}`
          of RabbitMQ cluster `{{ $labels.label_app_kubernetes_io_name }}` in namespace `{{ $labels.namespace }}`.
        summary: |
          No majority of pods have been ready for the last 5 minutes.
          Check the details of the pods:
          `kubectl -n {{ $labels.namespace }} describe pods -l app.kubernetes.io/component=rabbitmq,app.kubernetes.io/name={{ $labels.label_app_kubernetes_io_name }}`
      labels:
        rabbitmq_cluster: '{{ $labels.label_app_kubernetes_io_name }}'
        rulesgroup: rabbitmq
        severity: warning
---
# Source: rabbitmq-observability/templates/prometheus/rules/rabbitmq/persistent-volume-missing.yaml
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: rabbitmq-persistent-volume-missing
  namespace: default
  # If labels are defined in spec.ruleSelector.matchLabels of your deployed Prometheus object, make sure to include them here.
  labels:
    role: alert-rules
spec:
  groups:
  - name: rabbitmq
    rules:
    - alert: RabbitMqPersistentVolumeMissing
      expr: |
        kube_persistentvolumeclaim_status_phase{phase="Bound"} * on (namespace, persistentvolumeclaim) group_left(label_app_kubernetes_io_name) kube_persistentvolumeclaim_labels{label_app_kubernetes_io_component="rabbitmq"}
        ==
        0
      for: 10m
      annotations:
        description: |
          PersistentVolumeClaim `{{ $labels.persistentvolumeclaim }}` of
          RabbitMQ cluster `{{ $labels.label_app_kubernetes_io_name }}` in namespace
          `{{ $labels.namespace }}` is not bound.
        summary: |
          RabbitMQ needs a PersistentVolume for its data.
          However, there is no PersistentVolume bound to the PersistentVolumeClaim.
          This means the requested storage could not be provisioned.
          Check the status of the PersistentVolumeClaim: `kubectl -n {{ $labels.namespace }} describe pvc {{ $labels.persistentvolumeclaim }}`.
      labels:
        rabbitmq_cluster: '{{ $labels.label_app_kubernetes_io_name }}'
        rulesgroup: rabbitmq
        severity: critical
---
# Source: rabbitmq-observability/templates/prometheus/rules/rabbitmq/rabbitmq-cluster-not-all-podes-running.yaml
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: rabbitmq-cluster-not-all-pods-running
  namespace: default
  # If labels are defined in spec.ruleSelector.matchLabels of your deployed Prometheus object, make sure to include them here.
  labels:
    role: alert-rules
spec:
  groups:
  - name: rabbitmq
    rules:
    - alert: rabbitMqClusterNotAllPodsRunning
      expr: sum(up{job=~".*rabbitmq.*"}) < 3
      for: 1m
      annotations:
        description: Some RabbitMQ Cluster Pods Are Down in job {{ $labels.instance }}/{{ $labels.job}}
        summary: Some RabbitMQ Cluster Pods Are Down in job {{ $labels.instance }}/{{ $labels.job}}
      labels:
        rabbitmq_cluster: '{{ $labels.label_app_kubernetes_io_name }}'
        rulesgroup: rabbitmq
        severity: critical
---
# Source: rabbitmq-observability/templates/prometheus/rules/rabbitmq/rabbitmq-disk-space-below-threshold.yaml
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: rabbitmq-disk-space-below-threshold
  namespace: default
  # If labels are defined in spec.ruleSelector.matchLabels of your deployed Prometheus object, make sure to include them here.
  labels:
    role: alert-rules
spec:
  groups:
  - name: rabbitmq
    rules:
    - alert: RabbitmqDiskSpaceBelowThreshold
      expr: rabbitmq_disk_space_available_limit_bytes <= 1.073741824e+09
      for: 1m
      annotations:
        description: RabbitMQ {{ $labels.instance }} low watermark disk space threshold has been reached. Current value=`{{ $value | printf "%.0f" }}`, Threshold= 1.073741824e+09
        summary: RabbitMQ is Out of Disk Space
      labels:
        rabbitmq_cluster: '{{ $labels.label_app_kubernetes_io_name }}'
        rulesgroup: rabbitmq
        severity: critical
---
# Source: rabbitmq-observability/templates/prometheus/rules/rabbitmq/rabbitmq-disk-usage-high.yaml
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: rabbitmq-disk-usage-high
  namespace: default
  # If labels are defined in spec.ruleSelector.matchLabels of your deployed Prometheus object, make sure to include them here.
  labels:
    role: alert-rules
spec:
  groups:
  - name: rabbitmq
    rules:
    - alert: RabbitMqDiskUsageHigh
      expr: rabbitmq_disk_space_available_bytes < 1073741824
      for: 1m
      annotations:
        description: RabbitMQ {{ $labels.instance }} available disk space < 1Gb
        summary: RabbitMQ Node has less than 1Gb disk space avaiable.
      labels:
        rabbitmq_cluster: '{{ $labels.label_app_kubernetes_io_name }}'
        rulesgroup: rabbitmq
        severity: critical
---
# Source: rabbitmq-observability/templates/prometheus/rules/rabbitmq/rabbitmq-memory-below-threshold.yaml
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: rabbitmq-memory-below-threshold
  namespace: default
  # If labels are defined in spec.ruleSelector.matchLabels of your deployed Prometheus object, make sure to include them here.
  labels:
    role: alert-rules
spec:
  groups:
  - name: rabbitmq
    rules:
    - alert: RabbitmqMemoryBelowThreshold
      expr: rabbitmq_resident_memory_limit_bytes - rabbitmq_process_resident_memory_bytes < 2.68435456e+08
      for: 1m
      annotations:
        description: RabbitMQ {{ $labels.instance }} Memory threshold has been reached. Current value=`{{ $value | printf "%.0f" }}`, Threshold= 2.68435456e+08
        summary: RabbitMQ is Out of Memory
      labels:
        rabbitmq_cluster: '{{ $labels.label_app_kubernetes_io_name }}'
        rulesgroup: rabbitmq
        severity: critical
---
# Source: rabbitmq-observability/templates/prometheus/rules/rabbitmq/rabbitmq-memory-usage-high.yaml
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: rabbitmq-memory-usage-high
  namespace: default
  # If labels are defined in spec.ruleSelector.matchLabels of your deployed Prometheus object, make sure to include them here.
  labels:
    role: alert-rules
spec:
  groups:
  - name: rabbitmq
    rules:
    - alert: RabbitMqMemoryUsageHigh
      expr: rabbitmq_process_resident_memory_bytes / rabbitmq_resident_memory_limit_bytes * 100 > 90
      for: 1m
      annotations:
        description: RabbitMQ {{ $labels.instance }} Memory Usage > 90%
        summary: RabbitMQ Node > 90% Memory Usage
      labels:
        rabbitmq_cluster: '{{ $labels.label_app_kubernetes_io_name }}'
        rulesgroup: rabbitmq
        severity: critical
---
# Source: rabbitmq-observability/templates/prometheus/rules/rabbitmq/rabbitmq-nodes-below-threshold.yaml
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: rabbitmq-nodes-below-threshold
  namespace: default
  # If labels are defined in spec.ruleSelector.matchLabels of your deployed Prometheus object, make sure to include them here.
  labels:
    role: alert-rules
spec:
  groups:
  - name: rabbitmq
    rules:
    - alert: RabbitmqNodesBelowThreshold
      expr: sum(rabbitmq_build_info) < 3
      for: 1m
      annotations:
        description: RabbitMQ {{ $labels.instance }} Nodes threshold has been reached. Current value=`{{ $value | printf "%.0f" }}`, Threshold= 3
        summary: RabbitMQ is Out of Nodes
      labels:
        rabbitmq_cluster: '{{ $labels.label_app_kubernetes_io_name }}'
        rulesgroup: rabbitmq
        severity: critical
---
# Source: rabbitmq-observability/templates/prometheus/rules/rabbitmq/rabbitmq-server-down.yaml
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: rabbitmq-server-down
  namespace: default
  # If labels are defined in spec.ruleSelector.matchLabels of your deployed Prometheus object, make sure to include them here.
  labels:
    role: alert-rules
spec:
  groups:
  - name: rabbitmq
    rules:
    - alert: RabbitMQServerDown
      expr: min(up{ job=~".*rabbitmq.*"}) by (job) != 1
      for: 1m
      annotations:
        description: "The RabbitMQ Server instance at {{$labels.instance}} has been down the last <%= p('rabbitmq_alerts.server_down.evaluation_time') %>"
        summary: "Rabbitmq Server instance {{$labels.instance}} is down"
      labels:
        rabbitmq_cluster: '{{ $labels.label_app_kubernetes_io_name }}'
        rulesgroup: rabbitmq
        severity: critical
---
# Source: rabbitmq-observability/templates/prometheus/rules/rabbitmq/recording-rules.yaml
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: rabbitmq-recording-rules
  namespace: default
  # If labels are defined in spec.ruleSelector.matchLabels of your deployed Prometheus object, make sure to include them here.
  labels:
    role: alert-rules
spec:
  groups:
  - name: rabbitmq
    # The following 3 rules are needed to plot the status map panel in the RabbitMQ-Alerts Grafana dashboard.
    # To understand why, read https://medium.com/flant-com/statusmap-grafana-plugin-to-visualize-status-over-time-fe6ced391853
    rules:
    # The first 2 rules create a metric ALERTS:rabbitmq_alert_state_numeric which has value 1 for alertstate pending and value 2 for alertstate firing
    - expr: |
        ALERTS{rulesgroup="rabbitmq", alertstate="pending"} * 0 + 1
      record: ALERTS:rabbitmq_alert_state_numeric
    - expr: |
        ALERTS{rulesgroup="rabbitmq", alertstate="firing"} * 0 + 2
      record: ALERTS:rabbitmq_alert_state_numeric
      # The 3rd rule creates a metric ALERTS:rabbitmq_alert_state_discrete with label alert_state_numeric.
      # The label value is either 1 for pending or 2 for firing.
      # The metric value is binary: 1 means the alert is active in that state (pending or firing), 0 means there is no such alert in that state.
    - expr: |
        count_values
        by (namespace, rabbitmq_cluster, alertname, severity, instance, endpoint, pod, container, persistentvolumeclaim)
        ("alert_state_numeric", ALERTS:rabbitmq_alert_state_numeric)
      record: ALERTS:rabbitmq_alert_state_discrete
---
# Source: rabbitmq-observability/templates/prometheus/rules/rabbitmq/tcp-sockets-near-limit.yaml
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: rabbitmq-tcp-sockets-near-limit
  namespace: default
  # If labels are defined in spec.ruleSelector.matchLabels of your deployed Prometheus object, make sure to include them here.
  labels:
    role: alert-rules
spec:
  groups:
  - name: rabbitmq
    rules:
    - alert: RabbitMqTCPSocketsNearLimit
      expr: |
        sum by(namespace, rabbitmq_cluster, pod, rabbitmq_node) (max_over_time(rabbitmq_process_open_tcp_sockets[5m]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node, pod) rabbitmq_identity_info)
        /
        sum by(namespace, rabbitmq_cluster, pod, rabbitmq_node) (rabbitmq_process_max_tcp_sockets  * on(instance) group_left(rabbitmq_cluster, rabbitmq_node, pod) rabbitmq_identity_info)
        > 0.8
      for: 10m
      annotations:
        description: |
          `{{ $value | humanizePercentage }}` TCP sockets of TCP socket
          limit are open in RabbitMQ node `{{ $labels.rabbitmq_node }}`, pod `{{ $labels.pod }}`,
          RabbitMQ cluster `{{ $labels.rabbitmq_cluster }}`, namespace `{{ $labels.namespace }}`.
        summary: |
          More than 80% of TCP sockets are open on the RabbitMQ node.
          When this value reaches 100%, new connections will not be accepted.
          Client libraries, peer nodes and CLI tools will not be able to connect when the node runs out of available TCP sockets.
          See https://www.rabbitmq.com/networking.html.
      labels:
        rulesgroup: rabbitmq
        severity: warning
---
# Source: rabbitmq-observability/templates/prometheus/rules/rabbitmq/unroutable-messages.yaml
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: rabbitmq-unroutable-messages
  namespace: default
  # If labels are defined in spec.ruleSelector.matchLabels of your deployed Prometheus object, make sure to include them here.
  labels:
    role: alert-rules
spec:
  groups:
  - name: rabbitmq
    rules:
    - alert: RabbitMqUnroutableMessages
      expr: |
        sum by(namespace, rabbitmq_cluster) (increase(rabbitmq_channel_messages_unroutable_dropped_total[5m]) * on(instance) group_left(rabbitmq_cluster) rabbitmq_identity_info)
        >= 1
        or
        sum by(namespace, rabbitmq_cluster) (increase(rabbitmq_channel_messages_unroutable_returned_total[5m]) * on(instance) group_left(rabbitmq_cluster) rabbitmq_identity_info)
        >= 1
      annotations:
        description: |
          There were `{{ $value | printf "%.0f" }}` unroutable messages within the last
          5 minutes in RabbitMQ cluster `{{ $labels.rabbitmq_cluster }}` in namespace
          `{{ $labels.namespace }}`.
        summary: |
          There are messages published into an exchange which cannot be routed and are either dropped silently, or returned to publishers.
          Is your routing topology set up correctly?
          Check your application code and bindings between exchanges and queues.
          See
          https://www.rabbitmq.com/publishers.html#unroutable,
          https://www.rabbitmq.com/confirms.html#when-publishes-are-confirmed.
      labels:
        rulesgroup: rabbitmq
        severity: warning
