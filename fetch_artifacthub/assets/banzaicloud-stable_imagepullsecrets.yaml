---
# Source: imagepullsecrets/templates/rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-imagepullsecrets-controller
  namespace: default
  labels:
    
    app: my-imagepullsecrets-controller
    app.kubernetes.io/name: imagepullsecrets-controller
    helm.sh/chart: imagepullsecrets-0.3.13
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-imagepullsecrets
    app.kubernetes.io/version: 0.3.13
    app.kubernetes.io/component: imagepullsecret-controller
    app.kubernetes.io/part-of: imagepullsecrets
---
# Source: imagepullsecrets/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-imagepullsecrets-controller
  labels:
    
    app: my-imagepullsecrets-controller
    app.kubernetes.io/name: imagepullsecrets-controller
    helm.sh/chart: imagepullsecrets-0.3.13
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-imagepullsecrets
    app.kubernetes.io/version: 0.3.13
    app.kubernetes.io/component: imagepullsecret-controller
    app.kubernetes.io/part-of: imagepullsecrets
rules:
- apiGroups: ["images.banzaicloud.io"]
  resources: ["*"]
  verbs:
  - get
  - list
  - watch
  - update
- apiGroups: [""]
  resources:
  - configmaps
  - secrets
  - events
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - delete
  - patch
- apiGroups: [""]
  resources:
    - namespaces
    - pods
  verbs:
    - get
    - list
    - watch
---
# Source: imagepullsecrets/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-imagepullsecrets-controller
  labels:
    
    app: my-imagepullsecrets-controller
    app.kubernetes.io/name: imagepullsecrets-controller
    helm.sh/chart: imagepullsecrets-0.3.13
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-imagepullsecrets
    app.kubernetes.io/version: 0.3.13
    app.kubernetes.io/component: imagepullsecret-controller
    app.kubernetes.io/part-of: imagepullsecrets
roleRef:
  kind: ClusterRole
  name: my-imagepullsecrets-controller
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: my-imagepullsecrets-controller
  namespace: default
---
# Source: imagepullsecrets/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role 
metadata:
  name: my-imagepullsecrets-controller
  namespace: default
  labels:
    
    app: my-imagepullsecrets-controller
    app.kubernetes.io/name: imagepullsecrets-controller
    helm.sh/chart: imagepullsecrets-0.3.13
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-imagepullsecrets
    app.kubernetes.io/version: 0.3.13
    app.kubernetes.io/component: imagepullsecret-controller
    app.kubernetes.io/part-of: imagepullsecrets
rules:
- apiGroups: ["coordination.k8s.io"]
  resources:
  - leases
  verbs:
    - get
    - list
    - watch
    - create
    - update
    - delete
---
# Source: imagepullsecrets/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: my-imagepullsecrets-controller
  namespace: default
  labels:
    
    app: my-imagepullsecrets-controller
    app.kubernetes.io/name: imagepullsecrets-controller
    helm.sh/chart: imagepullsecrets-0.3.13
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-imagepullsecrets
    app.kubernetes.io/version: 0.3.13
    app.kubernetes.io/component: imagepullsecret-controller
    app.kubernetes.io/part-of: imagepullsecrets
roleRef:
  kind: Role
  name: my-imagepullsecrets-controller
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: my-imagepullsecrets-controller
  namespace: default
---
# Source: imagepullsecrets/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-imagepullsecrets-controller
  namespace: default
  labels:
    
    app: my-imagepullsecrets-controller
    app.kubernetes.io/name: imagepullsecrets-controller
    helm.sh/chart: imagepullsecrets-0.3.13
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-imagepullsecrets
    app.kubernetes.io/version: 0.3.13
    app.kubernetes.io/component: imagepullsecret-controller
    app.kubernetes.io/part-of: imagepullsecrets
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: metrics
      protocol: TCP
      name: http-metrics
  selector:
    app.kubernetes.io/name: imagepullsecrets-controller
    app.kubernetes.io/instance: my-imagepullsecrets
---
# Source: imagepullsecrets/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-imagepullsecrets-controller
  namespace: default
  labels:
    
    app: my-imagepullsecrets-controller
    app.kubernetes.io/name: imagepullsecrets-controller
    helm.sh/chart: imagepullsecrets-0.3.13
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-imagepullsecrets
    app.kubernetes.io/version: 0.3.13
    app.kubernetes.io/component: imagepullsecret-controller
    app.kubernetes.io/part-of: imagepullsecrets
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: imagepullsecrets-controller
      app.kubernetes.io/instance: my-imagepullsecrets
  template:
    metadata:
      annotations:
        backyards.banzaicloud.io/scraping-interval: "5s"
        backyards.banzaicloud.io/operator-release: stable
      labels:
        
        app: my-imagepullsecrets-controller
        app.kubernetes.io/name: imagepullsecrets-controller
        helm.sh/chart: imagepullsecrets-0.3.13
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/instance: my-imagepullsecrets
        app.kubernetes.io/version: 0.3.13
        app.kubernetes.io/component: imagepullsecret-controller
        app.kubernetes.io/part-of: imagepullsecrets
    spec:
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: my-imagepullsecrets-controller
      containers:
        - name: controller
          command:
            - /manager
            - --metrics-addr=:8080
            - --enable-leader-election
            - --config-namespace=default
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
          image: "ghcr.io/banzaicloud/imagepullsecrets:v0.3.13"
          imagePullPolicy: IfNotPresent
          ports:
            - name: metrics
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /metrics
              port: metrics
          readinessProbe:
            httpGet:
              path: /metrics
              port: metrics
          resources:
            limits:
              cpu: 300m
              memory: 200Mi
            requests:
              cpu: 100m
              memory: 100Mi
          env:
