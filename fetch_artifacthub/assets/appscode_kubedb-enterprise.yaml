---
# Source: kubedb-enterprise/templates/operator-psp.yaml
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: my-kubedb-enterprise
  labels:
    helm.sh/chart: kubedb-enterprise-v0.11.2
    app.kubernetes.io/name: kubedb-enterprise
    app.kubernetes.io/instance: my-kubedb-enterprise
    app.kubernetes.io/version: "v0.11.2"
    app.kubernetes.io/managed-by: Helm
spec:
  privileged: true  #Allowing privileged pods is necessary for ES db
  allowPrivilegeEscalation: true #Allowing privilege escalation is necessary for ES db
  volumes:
  - "*"
  hostNetwork: false
  hostIPC: false
  hostPID: false
  runAsUser:
    rule: RunAsAny
  seLinux:
    rule: RunAsAny
  supplementalGroups:
    rule: RunAsAny
  fsGroup:
    rule: RunAsAny
  allowedCapabilities:
  - IPC_LOCK
  - SYS_RESOURCE
---
# Source: kubedb-enterprise/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-kubedb-enterprise
  namespace: default
  labels:
    helm.sh/chart: kubedb-enterprise-v0.11.2
    app.kubernetes.io/name: kubedb-enterprise
    app.kubernetes.io/instance: my-kubedb-enterprise
    app.kubernetes.io/version: "v0.11.2"
    app.kubernetes.io/managed-by: Helm
---
# Source: kubedb-enterprise/templates/apiregistration.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-kubedb-enterprise-apiserver-cert
  namespace: default
  labels:
    helm.sh/chart: kubedb-enterprise-v0.11.2
    app.kubernetes.io/name: kubedb-enterprise
    app.kubernetes.io/instance: my-kubedb-enterprise
    app.kubernetes.io/version: "v0.11.2"
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURaRENDQWt5Z0F3SUJBZ0lSQU80REtmbmtLUG5DZHpRcjcwNGxoaXN3RFFZSktvWklodmNOQVFFTEJRQXcKRFRFTE1Ba0dBMVVFQXhNQ1kyRXdIaGNOTWpRd09URTJNRGcxTVRVeldoY05NelF3T1RFME1EZzFNVFV6V2pBZgpNUjB3R3dZRFZRUURFeFJ0ZVMxcmRXSmxaR0l0Wlc1MFpYSndjbWx6WlRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCCkJRQURnZ0VQQURDQ0FRb0NnZ0VCQUpyU0dIUk5PU2FKUUVyUklTSG9UM1R1Q21aTERHdnhhalU3REFNNE5CaWsKOGdjUGp4UHFJdDFWbUNTNnE2azU3dklYdTVpcWZVT3g4cFVweXVKeUttdzNGWXBYRlJ3b1R4YmV2ZTBuQkhhTgpHNk5MSmFqRm1ocXBteTBlTmZDMm8vZWt3V1RhTGdWQUVKbVI0cWtUSEdxOE5XY2VIZVRRd1FNOUs4K0FlNVRnCm9HazFHTEJSV0ZZeUdJNURCTGppZGljNzBSdGp1eHRyMmZrZlhrRDBTZ3ZBbHQxbEl3cEJQUzhzeGFuc3B0R2MKNm85MHlPNnBHa2NielpSVTViUmw5eVgwZk54Zi93RWF4Q0R5ZDZqbUw2TUUvU0paUG4rTm1aYXR5UnNIZWJIcwpTcTZYa2xFdTZ1UGpsVzhTNUJLNmJlSEg1cVYzc2VNOUFOMWE3dGtPSWVrQ0F3RUFBYU9CckRDQnFUQU9CZ05WCkhROEJBZjhFQkFNQ0JhQXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0VHQ0NzR0FRVUZCd01DTUF3R0ExVWQKRXdFQi93UUNNQUF3SHdZRFZSMGpCQmd3Rm9BVTNZM3lFVEhjNkhFbmFZc2ZkTkU4bGFoemd2OHdTUVlEVlIwUgpCRUl3UUlJY2JYa3RhM1ZpWldSaUxXVnVkR1Z5Y0hKcGMyVXVaR1ZtWVhWc2RJSWdiWGt0YTNWaVpXUmlMV1Z1CmRHVnljSEpwYzJVdVpHVm1ZWFZzZEM1emRtTXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBQm5aL2NTNG1LeE0Kb1FaeVBTNWZJd09ucHhHOExwUWxIZUVpejRHMkdyNWliQUFFQnowRU1uWC9IMkI3cmdGbWVqbFhhMmwwVTJCSApFV2R0TUVMdE1SZE81a043OFNvcDl6Z0E2ZVRDeXRIaFQ4YlpjeEsvS0c3azRrYktiUTg3MEpidG1RWHZKZ09vCmsyaTY3YS9hT2o1ZzRNbENta0d3V1d5YnpFNFN0SlpsTUNQOHNCUW03ZUR6ak5IMmUwOFBaaUlMOUpsd2ExYTAKZGVZOGJiZWMxRjVPblRualdaR2J5c29zMmV0a1FLOEhxYTVmajFCNTlaMDJrYzFPaG1ld2FpMHZydEwra3VpTwo3WDB6Q2ZpbVh0OGhaaXFYU2xQc1ducDJrVm5ySEd4UWhWWWpTRUlMTm9XcWh0VzJrL3lZbG91dWpySjdEK3RDClJtcGloNTU4UXY0PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBbXRJWWRFMDVKb2xBU3RFaEllaFBkTzRLWmtzTWEvRnFOVHNNQXpnMEdLVHlCdytQCkUrb2kzVldZSkxxcnFUbnU4aGU3bUtwOVE3SHlsU25LNG5JcWJEY1ZpbGNWSENoUEZ0Njk3U2NFZG8wYm8wc2wKcU1XYUdxbWJMUjQxOExhajk2VEJaTm91QlVBUW1aSGlxUk1jYXJ3MVp4NGQ1TkRCQXowcno0QjdsT0NnYVRVWQpzRkZZVmpJWWprTUV1T0oySnp2UkcyTzdHMnZaK1I5ZVFQUktDOENXM1dVakNrRTlMeXpGcWV5bTBaenFqM1RJCjdxa2FSeHZObEZUbHRHWDNKZlI4M0YvL0FSckVJUEozcU9Zdm93VDlJbGsrZjQyWmxxM0pHd2Q1c2V4S3JwZVMKVVM3cTQrT1ZieExrRXJwdDRjZm1wWGV4NHowQTNWcnUyUTRoNlFJREFRQUJBb0lCQUgzKzAwWDYvcks4NmlTNQpNMFNjQWVZQVAxaG1aVEtIb3M2MVFoNXdvLzBXWjUyVmJQUmhESVNpUHhKTkZKekErQlB2ZW8xUTJtYTRMOXB5Cnk1a2tIaUE1Wi85UXhXNUg0NjJTRW5FbzJybjhObXpiSUVmTW9KQm9UVkFYa1FCWU12SzhFMk9YSi9LLzQ0S0gKTmpZd3htU2F6TDhoeEdSTiszWStWeVFreE80djZFNU5uUElHWlBHcWp1Wm9pUVlTVDRseUJ6NU5NbUdLRGVUcQpYS1RKUTJjTFRKN0QxcSs3aUV1V2ZnaGVKY0JnYnZ1NjJwZWVnYWZDcEk5M0k2UUQrMjMzNU5ScUJKbFl3QWZuCmI5NkN5Q003N3FhS21kSEJZMnNwVldZT3JBN1B5R2lzMFU5ek9mc1orSjdnWXdVb0ZvL3RaRTVPTXMzazJVb0YKQzQrOHk5MENnWUVBd1ZBUXU0ZUhrQVlFY202SFprOXREVUx5eXlQNHhFVUtJbW1ndUh3L2NPWjAreFl1YUIzRApLN1NkcVFzUnYyUTMwUXp1TTdEeTNoSmpid3Y0cUN0aGZMRkovaDR4Umx5YlBUelhrQmlsWjJSNC8zNEE3YStXCktrbVZ3MFo1S25ZSmdUUTVEU1cvVWtHb0lrT1plUDdNaHJOWmJPa09HdmJoRWs4NGFxU1RzaXNDZ1lFQXpRYVkKaDFlWEJQZjIyZUs5TmRSMGpXeXdnVGhodGl6VWFFbE9KdWNnYVhZWHVBeUtaaVFzcWFYWEhiMVVGdzNBa1pQTAozZ1RYdnhVSThwYWJrdW9KNW1qTjArZTRuSDFkQVN4MTZTbCtwMm5NUnBaN1Y5OEpmYkErMncxYUtKajlSWU4yCnZyOVV4STQ2Qjh4RHNhMGRzazVmOE1KaXh5ejhaNFJSU2NYTk5qc0NnWUJxWm85UEtNSE0zQU1HbVIrZGlJb1YKaW92b2s5d1E2NDh3Y2NNc3gvYURSZFdOZmgvODNxVFdJWXZGeDNuMVJrd1NuSE5mc0QxOVRkRzlCWEhQM2xEQwpPVExvMCtWN1BPMlZQeS9HK0VuU0p0TVNqV0FsYzBmTDdzU252dHBpTEtYK242Zm5QS2VadHRtOFFranUrQS9LCjlGeDhQYXF0M01UMU52VnVmVGR1RVFLQmdEZ04rNW5WU3NiaS9LeXBuMDJlWHBka0JnWHVZbGlxZlJCZUttM2MKZHpJZVJYSGVpK0JOTjZEU1pMUU8xWFRRSDd3dGltbVRMV0ZpNE9WaVkvcVEzbEFPaTJmS1RPRU1MV2Rxdm5vWApERGU5WjBwTlRqL0NEUmcrSFpGS1gwSUdRZ2pGWHF2Y0o5THRoOVFsOXNRWExxMVhYRWU0L2NTeStmZGJaOVloCnJHK05Bb0dBWklRLzNvS2hYaE92THNFcEVTRXRaVG5hU0NuMDJxaGcyMEJCajBtR1ZWRkRhR1BjeFFxRHY3K0QKNS9FZ0c1MElRbjlUUjNaeXNrYTVwblcrMDhXRnpCRmltOHpvY2xKMm13c0kzTk1NTm5FM09MNUZFeWlSMlZheApUVU1XR2FrVFY5Q3FEaDhsQWVsZjJHdTIzMDMrVzVCZEZSMEdJYjhOVVNnbFNSYURzaFU9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: kubedb-enterprise/templates/cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-kubedb-enterprise
  labels:
    helm.sh/chart: kubedb-enterprise-v0.11.2
    app.kubernetes.io/name: kubedb-enterprise
    app.kubernetes.io/instance: my-kubedb-enterprise
    app.kubernetes.io/version: "v0.11.2"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs: ["*"]
- apiGroups:
  - apiregistration.k8s.io
  resources:
  - apiservices
  verbs: ["get", "patch", "delete"]
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - mutatingwebhookconfigurations
  - validatingwebhookconfigurations
  verbs: ["delete", "get", "list", "watch", "patch"]
- apiGroups:
  - appcatalog.appscode.com
  resources:
  - "*"
  verbs: ["*"]
- apiGroups:
  - apps
  resources:
  - statefulsets
  verbs: ["create", "delete", "get", "list", "patch", "update", "deletecollection"]
- apiGroups:
  - ""
  resources:
  - events
  verbs: ["create"]
- apiGroups:
  - ""
  resources:
  - nodes
  verbs: ["get", "list", "watch"]
- apiGroups:
  - kubedb.com
  - catalog.kubedb.com
  - ops.kubedb.com
  resources:
  - "*"
  verbs: ["*"]
- apiGroups:
  - ops.kubedb.com
  resources:
  - elasticsearchopsrequests/finalizers
  - etcdopsrequests/finalizers
  - mariadbopsrequests/finalizers
  - memcachedopsrequests/finalizers
  - mongodbopsrequests/finalizers
  - mysqlopsrequests/finalizers
  - perconaxtradbopsrequests/finalizers
  - pgbounceropsrequests/finalizers
  - postgresopsrequests/finalizers
  - proxysqlopsrequests/finalizers
  - redisopsrequests/finalizers
  verbs: ["update"]
- apiGroups:
  - apps
  resources:
  - statefulsets/finalizers
  verbs: ["update"]
- apiGroups:
  - cert-manager.io
  resources:
  - "*"
  verbs: ["*"]
- apiGroups:
  - ""
  resources:
  - pods
  - pods/exec
  - pods/eviction
  verbs: ["*"]
- apiGroups:
  - ""
  resources:
  - services
  - secrets
  verbs: ["create", "delete", "get", "patch", "list", "watch"]
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs: ["create", "delete", "get", "list", "watch", "update", "patch"]
- apiGroups:
    - ""
  resources:
    - persistentvolumeclaims
  verbs: ["get", "list", "patch", "delete"]
- apiGroups:
    - policy
  resources:
    - poddisruptionbudgets
  verbs: ["get", "list", "create", "delete", "patch", "deletecollection"]
- apiGroups:
  - batch
  resources:
  - jobs
  verbs: ["create", "delete", "get", "list", "watch"]
- apiGroups:
    - stash.appscode.com
  resources:
    - backupsessions
    - backupconfigurations
    - restoresessions
  verbs: ["get", "list", "watch", "update", "patch"]
- apiGroups:
    - ""
  resources:
    - serviceaccounts
  verbs: ["create", "delete", "get", "patch", "deletecollection"]
- apiGroups:
    - rbac.authorization.k8s.io
  resources:
    - rolebindings
    - roles
  verbs: ["create", "delete", "get", "patch", "deletecollection"]
- apiGroups:
    - monitoring.coreos.com
  resources:
    - servicemonitors
  verbs: ["*"]
- apiGroups:
    - storage.k8s.io
  resources:
    - storageclasses
  verbs: ["get"]
---
# Source: kubedb-enterprise/templates/apiregistration.yaml
# to delegate authentication and authorization
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-kubedb-enterprise-apiserver-auth-delegator
  labels:
    helm.sh/chart: kubedb-enterprise-v0.11.2
    app.kubernetes.io/name: kubedb-enterprise
    app.kubernetes.io/instance: my-kubedb-enterprise
    app.kubernetes.io/version: "v0.11.2"
    app.kubernetes.io/managed-by: Helm
roleRef:
  kind: ClusterRole
  apiGroup: rbac.authorization.k8s.io
  name: system:auth-delegator
subjects:
- kind: ServiceAccount
  name: my-kubedb-enterprise
  namespace: default
---
# Source: kubedb-enterprise/templates/cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-kubedb-enterprise
  labels:
    helm.sh/chart: kubedb-enterprise-v0.11.2
    app.kubernetes.io/name: kubedb-enterprise
    app.kubernetes.io/instance: my-kubedb-enterprise
    app.kubernetes.io/version: "v0.11.2"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-kubedb-enterprise
subjects:
- kind: ServiceAccount
  name: my-kubedb-enterprise
  namespace: default
---
# Source: kubedb-enterprise/templates/license-checker-cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-kubedb-enterprise-license-checker
  labels:
    helm.sh/chart: kubedb-enterprise-v0.11.2
    app.kubernetes.io/name: kubedb-enterprise
    app.kubernetes.io/instance: my-kubedb-enterprise
    app.kubernetes.io/version: "v0.11.2"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: appscode:license-checker
subjects:
- kind: ServiceAccount
  name: my-kubedb-enterprise
  namespace: default
---
# Source: kubedb-enterprise/templates/license-reader-cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-kubedb-enterprise-license-reader
  labels:
    helm.sh/chart: kubedb-enterprise-v0.11.2
    app.kubernetes.io/name: kubedb-enterprise
    app.kubernetes.io/instance: my-kubedb-enterprise
    app.kubernetes.io/version: "v0.11.2"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: appscode:license-reader
subjects:
- kind: ServiceAccount
  name: my-kubedb-enterprise
  namespace: default
---
# Source: kubedb-enterprise/templates/apiregistration.yaml
# to read the config for terminating authentication
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: my-kubedb-enterprise-apiserver-extension-server-authentication-reader
  namespace: kube-system
  labels:
    helm.sh/chart: kubedb-enterprise-v0.11.2
    app.kubernetes.io/name: kubedb-enterprise
    app.kubernetes.io/instance: my-kubedb-enterprise
    app.kubernetes.io/version: "v0.11.2"
    app.kubernetes.io/managed-by: Helm
roleRef:
  kind: Role
  apiGroup: rbac.authorization.k8s.io
  name: extension-apiserver-authentication-reader
subjects:
- kind: ServiceAccount
  name: my-kubedb-enterprise
  namespace: default
---
# Source: kubedb-enterprise/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-kubedb-enterprise
  namespace: default
  labels:
    helm.sh/chart: kubedb-enterprise-v0.11.2
    app.kubernetes.io/name: kubedb-enterprise
    app.kubernetes.io/instance: my-kubedb-enterprise
    app.kubernetes.io/version: "v0.11.2"
    app.kubernetes.io/managed-by: Helm
spec:
  ports:
  - name: operator
    port: 443
    targetPort: operator
  selector:
    app.kubernetes.io/name: kubedb-enterprise
    app.kubernetes.io/instance: my-kubedb-enterprise
---
# Source: kubedb-enterprise/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-kubedb-enterprise
  namespace: default
  labels:
    helm.sh/chart: kubedb-enterprise-v0.11.2
    app.kubernetes.io/name: kubedb-enterprise
    app.kubernetes.io/instance: my-kubedb-enterprise
    app.kubernetes.io/version: "v0.11.2"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kubedb-enterprise
      app.kubernetes.io/instance: my-kubedb-enterprise
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kubedb-enterprise
        app.kubernetes.io/instance: my-kubedb-enterprise
      annotations:
        checksum/apiregistration.yaml: e8374165854fc398c4589c2d0c4db32d73cc5dd79dc711a3a5a9a122d91873e0
    spec:
      
      serviceAccountName: my-kubedb-enterprise
      containers:
      - name: operator
        securityContext:
          {}
        image: kubedb/kubedb-enterprise:v0.11.0
        imagePullPolicy: IfNotPresent
        args:
        - run
        - --v=3
        - --secure-port=8443
        - --audit-log-path=-
        - --tls-cert-file=/var/serving-cert/tls.crt
        - --tls-private-key-file=/var/serving-cert/tls.key
        - --enable-mutating-webhook=true
        - --enable-validating-webhook=true
        - --bypass-validating-webhook-xray=false
        - --use-kubeapiserver-fqdn-for-aks=true
        env:
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: MY_POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        ports:
        - name: operator
          containerPort: 8443
        volumeMounts:
        - mountPath: /tmp
          name: tmpdir
        - mountPath: /var/serving-cert
          name: serving-cert
        resources:
          {}
      volumes:
      - name: tmpdir
        emptyDir: {}
      - name: serving-cert
        secret:
          defaultMode: 420
          secretName: my-kubedb-enterprise-apiserver-cert
      securityContext:
        {}
      nodeSelector:
        beta.kubernetes.io/os: linux
---
# Source: kubedb-enterprise/templates/apiregistration.yaml
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  name: v1alpha1.validators.ops.kubedb.com
  labels:
    helm.sh/chart: kubedb-enterprise-v0.11.2
    app.kubernetes.io/name: kubedb-enterprise
    app.kubernetes.io/instance: my-kubedb-enterprise
    app.kubernetes.io/version: "v0.11.2"
    app.kubernetes.io/managed-by: Helm
spec:
  group: validators.ops.kubedb.com
  version: v1alpha1
  service:
    namespace: default
    name: my-kubedb-enterprise
  caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lRVlMwTEErYWxZUHpTOHpPb2NpWFVwREFOQmdrcWhraUc5dzBCQVFzRkFEQU4KTVFzd0NRWURWUVFERXdKallUQWVGdzB5TkRBNU1UWXdPRFV4TlROYUZ3MHpOREE1TVRRd09EVXhOVE5hTUEweApDekFKQmdOVkJBTVRBbU5oTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF3dGxpCjN0cDdzQTFOZ0J2VnkxSzQ2anZFbzNUY3RENVJveEJ3dHRvdEszZ3FXZnJSY3JER29sU2xpMW8wcXF1YW9LcEoKUEMwYWtSSGVpR09jaGhFcFZHRUpQbURPdjQrSDF4clN4Q0xuWGg3M3R5SzFobFVOVzFPenZRL2JzbmJ6T0g0awpNbFlLQXdFNDJnTHVkR3E2ak1ZalUrOXVaaFRGcldVSDJWSUFiV3NQMGJna0xFTXJUMG5lOTl4SVlKTXhVam8zCjdQZnNhbzJGS1d5d3RsNTVKSUVScGFlK1dEUVZVSCtsLzc4SzNzQ1FPVVREZ2NpOHBiZjRiU3B0b3FpYUNhRFcKWExtTjlWZHJSb1lBNENOTzVLdlFadS9nR0xGNm15QTNGMkNJYWRkZmh2SnlXRTlUeDJkWXlOOGw5VUZWOWdJbwp6NEt4T0FqWXpVdDB2azZEWVFJREFRQUJvMkV3WHpBT0JnTlZIUThCQWY4RUJBTUNBcVF3SFFZRFZSMGxCQll3CkZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUUKRk4yTjhoRXgzT2h4SjJtTEgzVFJQSldvYzRML01BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQlhuWVlPdHVRUApCakVEbDl5MElWVUNuSytidEJVd2ZSUGkvcVl6NjBOTVpvNWpyVjhlZUFycVFkUkUyeS9zTkpnMEljT09XaVc3CmwwTnNIQXl3NVdhanVuWkgzS0UvWU80aHJDMnIraU0vVmxRa00vMDltbjBMaGdnSWVUTUlyN05XUUptUWcvS0IKR3pTeDFRd0NhbEJOdFluYWg3UHVsdEQvYW45V2NSSitaamRxSFd1OXRKeHhVTXlScnVZcDc5V042WFEwL1BXbwpZZlpuaHgrRzBpMU96SkhLbmZZMEwwd1V2U0xkT1FDNkxUZHY5VEZGbzNQWHY1WUtBdzllcXpJT2orZmpBNVhiCkpHQjdEWkQ4SEdsYzlnN3pzRmFMcW8wSkw0RlVvalh6cm5BZXh6RFlVZnZyRnpKeC8ybFlZYlJEdjc5d095SUgKZWhlMk50clMvMTVZCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  groupPriorityMinimum: 10000
  versionPriority: 15
---
# Source: kubedb-enterprise/templates/apiregistration.yaml
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  name: v1alpha1.mutators.ops.kubedb.com
  labels:
    helm.sh/chart: kubedb-enterprise-v0.11.2
    app.kubernetes.io/name: kubedb-enterprise
    app.kubernetes.io/instance: my-kubedb-enterprise
    app.kubernetes.io/version: "v0.11.2"
    app.kubernetes.io/managed-by: Helm
spec:
  group: mutators.ops.kubedb.com
  version: v1alpha1
  service:
    namespace: default
    name: my-kubedb-enterprise
  caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lRVlMwTEErYWxZUHpTOHpPb2NpWFVwREFOQmdrcWhraUc5dzBCQVFzRkFEQU4KTVFzd0NRWURWUVFERXdKallUQWVGdzB5TkRBNU1UWXdPRFV4TlROYUZ3MHpOREE1TVRRd09EVXhOVE5hTUEweApDekFKQmdOVkJBTVRBbU5oTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF3dGxpCjN0cDdzQTFOZ0J2VnkxSzQ2anZFbzNUY3RENVJveEJ3dHRvdEszZ3FXZnJSY3JER29sU2xpMW8wcXF1YW9LcEoKUEMwYWtSSGVpR09jaGhFcFZHRUpQbURPdjQrSDF4clN4Q0xuWGg3M3R5SzFobFVOVzFPenZRL2JzbmJ6T0g0awpNbFlLQXdFNDJnTHVkR3E2ak1ZalUrOXVaaFRGcldVSDJWSUFiV3NQMGJna0xFTXJUMG5lOTl4SVlKTXhVam8zCjdQZnNhbzJGS1d5d3RsNTVKSUVScGFlK1dEUVZVSCtsLzc4SzNzQ1FPVVREZ2NpOHBiZjRiU3B0b3FpYUNhRFcKWExtTjlWZHJSb1lBNENOTzVLdlFadS9nR0xGNm15QTNGMkNJYWRkZmh2SnlXRTlUeDJkWXlOOGw5VUZWOWdJbwp6NEt4T0FqWXpVdDB2azZEWVFJREFRQUJvMkV3WHpBT0JnTlZIUThCQWY4RUJBTUNBcVF3SFFZRFZSMGxCQll3CkZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUUKRk4yTjhoRXgzT2h4SjJtTEgzVFJQSldvYzRML01BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQlhuWVlPdHVRUApCakVEbDl5MElWVUNuSytidEJVd2ZSUGkvcVl6NjBOTVpvNWpyVjhlZUFycVFkUkUyeS9zTkpnMEljT09XaVc3CmwwTnNIQXl3NVdhanVuWkgzS0UvWU80aHJDMnIraU0vVmxRa00vMDltbjBMaGdnSWVUTUlyN05XUUptUWcvS0IKR3pTeDFRd0NhbEJOdFluYWg3UHVsdEQvYW45V2NSSitaamRxSFd1OXRKeHhVTXlScnVZcDc5V042WFEwL1BXbwpZZlpuaHgrRzBpMU96SkhLbmZZMEwwd1V2U0xkT1FDNkxUZHY5VEZGbzNQWHY1WUtBdzllcXpJT2orZmpBNVhiCkpHQjdEWkQ4SEdsYzlnN3pzRmFMcW8wSkw0RlVvalh6cm5BZXh6RFlVZnZyRnpKeC8ybFlZYlJEdjc5d095SUgKZWhlMk50clMvMTVZCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  groupPriorityMinimum: 10000
  versionPriority: 15
---
# Source: kubedb-enterprise/templates/license.yaml
# if license file is provided, then create a secret for license
---
# Source: kubedb-enterprise/templates/gerbage-collector-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kubedb:garbage-collector:psp
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
- apiGroups:
  - policy
  verbs: ["use"]
  resources:
  - podsecuritypolicies
---
# Source: kubedb-enterprise/templates/license-checker-cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: appscode:license-checker
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
# Get cluster id
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs: ["get"]
# Detect workload/owner of operator pod
- apiGroups:
  - ""
  resources:
  - pods
  verbs: ["get"]
- apiGroups:
  - apps
  resources:
  - deployments
  - replicasets
  verbs: ["get"]
# Write events in case of license verification failure
- apiGroups:
  - ""
  resources:
  - events
  verbs: ["get", "list", "create", "patch"]
---
# Source: kubedb-enterprise/templates/license-reader-cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: appscode:license-reader
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
# Detect license server endpoint for kubedb-enterprise addons
- apiGroups:
  - apiregistration.k8s.io
  resources:
  - apiservices
  verbs: ["get"]
- nonResourceURLs:
  - /appscode/license
  verbs: ["get"]
---
# Source: kubedb-enterprise/templates/user-roles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kubedb:ops:admin
  labels:
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
- apiGroups:
  - ops.kubedb.com
  resources:
  - "*"
  verbs: ["*"]
---
# Source: kubedb-enterprise/templates/user-roles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kubedb:ops:edit
  labels:
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
- apiGroups:
  - ops.kubedb.com
  resources:
  - "*"
  verbs: ["create", "get", "list", "watch", "update", "patch"]
---
# Source: kubedb-enterprise/templates/user-roles.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kubedb:ops:view
  labels:
    rbac.authorization.k8s.io/aggregate-to-view: "true"
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
- apiGroups:
  - ops.kubedb.com
  resources:
  - "*"
  verbs: ["get", "list", "watch"]
---
# Source: kubedb-enterprise/templates/gerbage-collector-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kubedb:garbage-collector:psp
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubedb:garbage-collector:psp
subjects:
- kind: ServiceAccount
  name: generic-garbage-collector
  namespace: kubedb
---
# Source: kubedb-enterprise/templates/cleaner.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: my-kubedb-enterprise-cleaner
  namespace: default
  labels:
    helm.sh/chart: kubedb-enterprise-v0.11.2
    app.kubernetes.io/name: kubedb-enterprise
    app.kubernetes.io/instance: my-kubedb-enterprise
    app.kubernetes.io/version: "v0.11.2"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": pre-delete
    "helm.sh/hook-delete-policy": hook-succeeded,hook-failed
spec:
  backoffLimit: 3
  activeDeadlineSeconds: 120
  template:
    spec:
      
      serviceAccountName: my-kubedb-enterprise
      containers:
      - name: busybox
        image: appscode/kubectl:v1.16
        command:
          - sh
          - -c
          - "sleep 2; \
             kubectl delete validatingwebhookconfigurations validators.ops.kubedb.com || true; \
             kubectl delete mutatingwebhookconfiguration mutators.ops.kubedb.com || true; \
             kubectl delete apiservice v1alpha1.mutators.ops.kubedb.com || true; \
             kubectl delete apiservice v1alpha1.validators.ops.kubedb.com || true;"
        imagePullPolicy: IfNotPresent
      restartPolicy: Never
---
# Source: kubedb-enterprise/templates/mutating-webhook.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: mutators.ops.kubedb.com
  labels:
    helm.sh/chart: kubedb-enterprise-v0.11.2
    app.kubernetes.io/name: kubedb-enterprise
    app.kubernetes.io/instance: my-kubedb-enterprise
    app.kubernetes.io/version: "v0.11.2"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
webhooks:
- name: mysqlopsrequest.mutators.ops.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/mutators.ops.kubedb.com/v1alpha1/mysqlopsrequests
    caBundle: bm90LWNhLWNlcnQ=
  rules:
  - apiGroups: ["ops.kubedb.com"]
    apiVersions: ["*"]
    resources: ["mysqlopsrequests"]
    operations: ["CREATE", "UPDATE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Fail
  sideEffects: None
---
# Source: kubedb-enterprise/templates/validating-webhook.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: validators.ops.kubedb.com
  labels:
    helm.sh/chart: kubedb-enterprise-v0.11.2
    app.kubernetes.io/name: kubedb-enterprise
    app.kubernetes.io/instance: my-kubedb-enterprise
    app.kubernetes.io/version: "v0.11.2"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
webhooks:
- name: mysqlopsrequest.validators.ops.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.ops.kubedb.com/v1alpha1/mysqlopsrequests
    caBundle: bm90LWNhLWNlcnQ=
  rules:
    - apiGroups: ["ops.kubedb.com"]
      apiVersions: ["*"]
      resources: ["mysqlopsrequests"]
      operations: ["CREATE", "UPDATE", "DELETE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Fail
  sideEffects: None
- name: mongodbopsrequest.validators.ops.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.ops.kubedb.com/v1alpha1/mongodbopsrequests
    caBundle: bm90LWNhLWNlcnQ=
  rules:
    - apiGroups: ["ops.kubedb.com"]
      apiVersions: ["*"]
      resources: ["mongodbopsrequests"]
      operations: ["CREATE", "UPDATE", "DELETE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Fail
  sideEffects: None
- name: elasticsearchopsrequest.validators.ops.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.ops.kubedb.com/v1alpha1/elasticsearchopsrequests
    caBundle: bm90LWNhLWNlcnQ=
  rules:
    - apiGroups: ["ops.kubedb.com"]
      apiVersions: ["*"]
      resources: ["elasticsearchopsrequests"]
      operations: ["CREATE", "UPDATE", "DELETE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Fail
  sideEffects: None
- name: redisopsrequest.validators.ops.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.ops.kubedb.com/v1alpha1/redisopsrequests
    caBundle: bm90LWNhLWNlcnQ=
  rules:
    - apiGroups: ["ops.kubedb.com"]
      apiVersions: ["*"]
      resources: ["redisopsrequests"]
      operations: ["CREATE", "UPDATE", "DELETE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Fail
  sideEffects: None
