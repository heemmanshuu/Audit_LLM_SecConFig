---
# Source: shellbox/templates/networkpolicy.yaml
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: shellbox-my-shellbox
  labels:
    app: shellbox
    chart: shellbox-1.2.9
    release: my-shellbox
    heritage: Helm
spec:
  podSelector:
    matchLabels:
      app: shellbox
      release: my-shellbox
  policyTypes:
    - Ingress
  ingress:
    - ports:
      - port: 8080
        protocol: TCP
      - port: 9102
        protocol: TCP
      # httpd-exporter
      - port: 9117
        protocol: TCP
      # php-fpm-exporter
      - port: 9118
        protocol: TCP
      # php-level monitoring
      - port: 9181
        protocol: TCP
---
# Source: shellbox/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: shellbox-my-shellbox-secret-config
  labels:
    app: shellbox
    chart: shellbox-1.2.9
    release: my-shellbox
    heritage: Helm
type: Opaque
---
# Source: shellbox/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: shellbox-my-shellbox-metrics-config
  labels:
    app: shellbox
    chart: shellbox-1.2.9
    release: my-shellbox
    heritage: Helm
data:
  prometheus-statsd.conf: |-
    # Note: DO NOT REMOVE THIS FILE FROM THE CHART
    # prometheus-statsd-exporter won't work without it.
    # Instead keep it fully commented if you have no valid mappings
    #
    # This file should contain the prometheus-statsd-exporter configuration
    # For reference on how to write it, see
    # https://github.com/prometheus/statsd_exporter/blob/master/README.md
    #
    # You can map your statsd metrics to prometheus ones, by mapping the hierarchical
    #  names you get for statsd into prometheus labels; so say you have a metric
    # called serviceA.dcA.serverA.endpoints.foobar.time   and you want to transform
    # it to a metrics called "mean_response_time" with labels
    #  {service: serviceA, datacenter: dcA, host: serverA, endpoint: foobar} you
    # need to create a mapping as follows:
    #
    #  mappings:
    #    - match: serviceA.*.*.endpoints.*.mean_response_time
    #      name: "mean_response_time"
    #      labels:
    #        service: $1
    #        datacenter: $2
    #        host: $3
    #        endpoint: $4
    #
    # If the app is a service-runner based one, consider uncommenting the following
    # Note: statsd timer metrics are millisecond based, but prometheus-statsd-exporter makes them
    # second based to conform to prometheus, so all metrics are divided by 1000
    #mappings:
    #  - match: '*.gc.*'
    #    name: service_runner_gc_seconds
    #    timer_type: histogram
    #    buckets: [5e-4, 1e-3, 5e-3, 10e-3, 15e-3, 30e-3, 50e-3]
    #    labels:
    #      service: $1
    #      event: $2
    #
    #  - match: '*.heap.*'
    #    # service-runner abuses timer for heap data
    #    name: service_runner_${2}_heap_kilobytes
    #    timer_type: histogram
    #    buckets: [1e+3, 1e+4, 1e+5, 1e+6, 1e+7]
    #    labels:
    #      service: $1
    #
    # This will match standard service-runner request metrics of the form:
    #    <service_name>.<endpoint>.<method>.<http_status>, e.g.:
    #    mathoid.-info.GET.200
    #
    #  - match: '^([a-z0-9-]+)\.([^.]+)\.(GET|HEAD|POST|PUT|DELETE|CONNECT|OPTIONS|TRACE|PATCH)\.([0-9][0-9][0-9]|ALL|[0-9]xx)$'
    #    match_type: regex
    #    name: service_runner_request_duration_seconds
    #    timer_type: histogram
    #    buckets:  [0.01, 0.05, 0.1, 0.3, 1]
    #    labels:
    #      service: $1
    #      uri: $2
    #      method: $3
    #      status: $4
---
# Source: shellbox/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: shellbox-my-shellbox-shellbox-config
  labels:
    app: shellbox
    chart: shellbox-1.2.9
    release: my-shellbox
    heritage: Helm
data:
  config.json: |-
    {
    	"url": "http://localhost/",
    	"tempDir": "/tmp",
    	"logFormat": "[%datetime%] %channel%.%level_name%: %message% %context% %extra%\n",
    	"logFile": false,
    	"jsonLogFile": false,
    	"logToStderr": false,
    	"jsonLogToStderr": true,
    	"syslogIdent": "shellbox",
    	"logToSyslog": false,
    	"logToClient": true,
    	"allowedActions": [ "call", "shell" ],
    	"useSystemd": false,
    	"useBashWrapper": true,
    	"useFirejail": false,
    	"firejailPath": "/usr/bin/firejail",
    	"firejailProfile": false
    }
---
# Source: shellbox/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: shellbox-my-shellbox-shellbox-httpd-config
  labels:
    app: shellbox
    chart: shellbox-1.2.9
    release: my-shellbox
    heritage: Helm
data:
  90-shellbox.conf: |-
    SetEnvIf Request_URI . SHELLBOX_SECRET_KEY=@@ CHANGE THIS @@
    TimeOut 63
---
# Source: shellbox/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: shellbox-my-shellbox
  labels:
    app: shellbox
    chart: shellbox-1.2.9
    release: my-shellbox
    heritage: Helm
spec:
  type: NodePort
  selector:
    app: shellbox
    release: my-shellbox
    routed_via: my-shellbox
  ports:
    - name: http
      targetPort: 8080
      port: 8080
---
# Source: shellbox/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: shellbox-my-shellbox
  labels:
    app: shellbox
    chart: shellbox-1.2.9
    release: my-shellbox
    heritage: Helm
spec:
  selector:
    matchLabels:
      app: shellbox
      release: my-shellbox
  replicas: 1
  template:
    metadata:
      labels:
        app: shellbox
        release: my-shellbox
        routed_via: my-shellbox
      annotations:        
        checksum/secrets: d12d1f0f7bdbf59828d7cefe27de549d5a07cd37b6418b142abcfaceaaf43d0d
        prometheus.io/scrape_by_name: "true"        
        checksum/apache: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b
    spec:
      containers:        
        # The apache httpd container
        # TODO: set up logging. See T265876
        - name: shellbox-my-shellbox-httpd
          image: docker-registry.wikimedia.org/httpd-fcgi:2.4.38-4
          imagePullPolicy: IfNotPresent
          env:
            - name: FCGI_MODE
              value: FCGI_TCP
            - name: SERVERGROUP
              value: main
            - name: APACHE_RUN_PORT
              value: "8080"
          ports:
            - name: httpd
              containerPort: 8080
            # PHP monitoring port
            - name: php-metrics
              containerPort: 9181
          livenessProbe:
            tcpSocket:
              port: 8080
          readinessProbe:
            httpGet:
              path: /healthz
              port: php-metrics
          resources:
            requests:
              cpu: 200m
              memory: 200Mi
            limits:
              cpu: 1
              memory: 400Mi
          volumeMounts:
          - name: shellbox-httpd-config
            mountPath: "/etc/apache2/conf-enabled/90-shellbox.conf"
            subPath: 90-shellbox.conf
            readOnly: true  
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
               drop:
               - ALL
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
        - name: shellbox-my-shellbox-app
          image: docker-registry.wikimedia.org/wikimedia/mediawiki-libs-shellbox:score
          imagePullPolicy: IfNotPresent
          env:
          - name: SERVERGROUP
            value: main
          - name: FCGI_MODE
            value: FCGI_TCP
          - name: PHP__opcache__memory_consumption
            value: "200"
          - name: PHP__opcache__max_accelerated_files
            value: "1000"
          - name: FPM__request_slowlog_timeout
            value: "0"
          - name: FPM__process_control_timeout
            value: "60"
          - name: FPM__request_terminate_timeout
            value: "60"
          - name: PHP__max_execution_time
            value: "62"
          - name: PHP__apc__shm_size
            value: "200M"
          - name: FPM__pm__max_children
            value: "2"
          - name: FCGI_URL
            value: "0.0.0.0:9000"
          - name: FCGI_ALLOW
            value: "127.0.0.1"
          livenessProbe:
            tcpSocket:
              port: 9000
            initialDelaySeconds: 1
            periodSeconds: 5  
          resources:
            requests:
              cpu: 100m
              memory: 1024Mi
            limits:
              cpu: 1
              memory: 2048Mi
          
          volumeMounts:
            - name: shellbox-config
              mountPath: "/srv/app/config"
              readOnly: true  
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
               drop:
               - ALL
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
        
        
        # Add the following exporters:
        # php-fpm exporter
        # apache exporter on port 9117
        - name: shellbox-my-shellbox-httpd-exporter
          image: docker-registry.wikimedia.org/prometheus-apache-exporter:0.0.4
          imagePullPolicy: IfNotPresent
          args: ["--scrape_uri", "http://127.0.0.1:9181/server-status?auto"]
          ports:
            - name: httpd-metrics
              containerPort: 9117
          livenessProbe:
            tcpSocket:
              port: 9117  
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
               drop:
               - ALL
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
        - name: shellbox-my-shellbox-php-fpm-exporter
          image: docker-registry.wikimedia.org/prometheus-php-fpm-exporter:0.0.4
          args: ["--endpoint=http://127.0.0.1:9181/fpm-status", "--addr=0.0.0.0:9118"]
          ports:
            - name: fpm-metrics
              containerPort: 9118
          livenessProbe:
            tcpSocket:
              port: 9118  
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
               drop:
               - ALL
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
                
      volumes:        
          
        
        []
---
# Source: shellbox/templates/tests/test-service-checker.yaml
apiVersion: v1
kind: Pod
metadata:
  name: 'shellbox-my-shellbox-service-checker'
  annotations:
    "helm.sh/hook": test
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  containers:
  - name: 'shellbox-my-shellbox-service-checker'
    image: "docker-registry.wikimedia.org/service-checker"
    imagePullPolicy: IfNotPresent
    args: ["-t", "5", '$(SHELLBOX_MY_SHELLBOX_SERVICE_HOST)', 'http://shellbox-my-shellbox:8080']    
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
         drop:
         - ALL
      runAsNonRoot: true
      seccompProfile:
        type: RuntimeDefault
  dnsPolicy: ClusterFirst
  restartPolicy: Never
