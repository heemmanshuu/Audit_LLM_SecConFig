---
# Source: passbolt-ha/charts/mysql/templates/networkpolicy.yaml
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: passbolt-mysql
  namespace: "default"
  labels:
    app.kubernetes.io/instance: my-passbolt-ha
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mysql
    app.kubernetes.io/version: 8.0.36
    helm.sh/chart: mysql-9.23.0
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/instance: my-passbolt-ha
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: mysql
      app.kubernetes.io/version: 8.0.36
      helm.sh/chart: mysql-9.23.0
  policyTypes:
    - Ingress
    - Egress
  egress:
    - {}
  ingress:
    - ports:
        - port: 3306
        - port: 3306
---
# Source: passbolt-ha/charts/passbolt/templates/pdb.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: passbolt
  labels:
    helm.sh/chart: passbolt-1.1.17
    app.kubernetes.io/name: passbolt
    app.kubernetes.io/instance: my-passbolt-ha
    app.kubernetes.io/version: "3.4.0-ce-non-root"
    app.kubernetes.io/managed-by: Helm
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: passbolt
      app.kubernetes.io/instance: my-passbolt-ha
---
# Source: passbolt-ha/charts/mysql/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: passbolt-mysql
  namespace: "default"
  labels:
    app.kubernetes.io/instance: my-passbolt-ha
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mysql
    app.kubernetes.io/version: 8.0.36
    helm.sh/chart: mysql-9.23.0
automountServiceAccountToken: false
secrets:
  - name: passbolt-mysql
---
# Source: passbolt-ha/charts/passbolt/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: passbolt
  labels:
    helm.sh/chart: passbolt-1.1.17
    app.kubernetes.io/name: passbolt
    app.kubernetes.io/instance: my-passbolt-ha
    app.kubernetes.io/version: "3.4.0-ce-non-root"
    app.kubernetes.io/managed-by: Helm
---
# Source: passbolt-ha/charts/proxysql/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: passbolt-proxysql
  labels:
    helm.sh/chart: proxysql-1.2.1
    app.kubernetes.io/name: proxysql
    app.kubernetes.io/instance: my-passbolt-ha
    app.kubernetes.io/version: "2.6.5"
    app.kubernetes.io/managed-by: Helm
---
# Source: passbolt-ha/charts/mysql/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: passbolt-mysql
  namespace: "default"
  labels:
    app.kubernetes.io/instance: my-passbolt-ha
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mysql
    app.kubernetes.io/version: 8.0.36
    helm.sh/chart: mysql-9.23.0
type: Opaque
data:
  mysql-root-password: "cm9vdA=="
  mysql-password: "cGFzc2JvbHQ="
  mysql-replication-password: "ajVGdERncGVZQg=="
---
# Source: passbolt-ha/charts/mysql/templates/primary/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: passbolt-mysql-primary
  namespace: "default"
  labels:
    app.kubernetes.io/instance: my-passbolt-ha
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mysql
    app.kubernetes.io/version: 8.0.36
    helm.sh/chart: mysql-9.23.0
    app.kubernetes.io/component: primary
data:
  my.cnf: |-
    [mysqld]
    default_authentication_plugin=mysql_native_password
    skip-name-resolve
    explicit_defaults_for_timestamp
    basedir=/opt/bitnami/mysql
    plugin_dir=/opt/bitnami/mysql/lib/plugin
    port= 3306
    socket=/opt/bitnami/mysql/tmp/mysql.sock
    datadir=/bitnami/mysql/data
    tmpdir=/opt/bitnami/mysql/tmp
    max_allowed_packet=16M
    bind-address=*
    pid-file=/opt/bitnami/mysql/tmp/mysqld.pid
    log-error=/opt/bitnami/mysql/logs/mysqld.log
    character-set-server=UTF8
    slow_query_log=0
    long_query_time=10.0
    
    [client]
    port=3306
    socket=/opt/bitnami/mysql/tmp/mysql.sock
    default-character-set=UTF8
    plugin_dir=/opt/bitnami/mysql/lib/plugin
    
    [manager]
    port=3306
    socket=/opt/bitnami/mysql/tmp/mysql.sock
    pid-file=/opt/bitnami/mysql/tmp/mysqld.pid
---
# Source: passbolt-ha/charts/mysql/templates/secondary/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: passbolt-mysql-secondary
  namespace: "default"
  labels:
    app.kubernetes.io/instance: my-passbolt-ha
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mysql
    app.kubernetes.io/version: 8.0.36
    helm.sh/chart: mysql-9.23.0
    app.kubernetes.io/component: secondary
data:
  my.cnf: |-
    [mysqld]
    default_authentication_plugin=mysql_native_password
    skip-name-resolve
    explicit_defaults_for_timestamp
    basedir=/opt/bitnami/mysql
    plugin_dir=/opt/bitnami/mysql/lib/plugin
    port=3306
    socket=/opt/bitnami/mysql/tmp/mysql.sock
    datadir=/bitnami/mysql/data
    tmpdir=/opt/bitnami/mysql/tmp
    max_allowed_packet=16M
    bind-address=*
    pid-file=/opt/bitnami/mysql/tmp/mysqld.pid
    log-error=/opt/bitnami/mysql/logs/mysqld.log
    character-set-server=UTF8
    slow_query_log=0
    long_query_time=10.0
    
    [client]
    port=3306
    socket=/opt/bitnami/mysql/tmp/mysql.sock
    default-character-set=UTF8
    plugin_dir=/opt/bitnami/mysql/lib/plugin
    
    [manager]
    port=3306
    socket=/opt/bitnami/mysql/tmp/mysql.sock
    pid-file=/opt/bitnami/mysql/tmp/mysqld.pid
---
# Source: passbolt-ha/charts/proxysql/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: passbolt-proxysql
data:
  proxysql.cnf: |
    admin_variables=
    {
      admin_credentials="admin:admin"
      stats_credentials="admin:admin"
      mysql_ifaces="0.0.0.0:6032"
      restapi_enabled=true
      web_enabled=true
      web_port=443
    }
    mysql_variables=
    {
      interfaces="0.0.0.0:3306"
      connect_timeout_server=1500
      connect_timeout_server_max=10000
      connection_max_age_ms=0
      default_max_latency_ms=1500
      default_query_timeout=86400000
      long_query_time=5000
      max_allowed_packet=1073741824
      max_connections=2048
      ping_timeout_server=500
      query_cache_size_MB=256
      query_retries_on_failure=2
      server_version="8.0.29"
      shun_on_failures=5
      shun_recovery_time_sec=9
      stacksize=1048576
      threads=4
      threshold_query_length=524288
      threshold_resultset_size=4194304
      wait_timeout=28800000
      monitor_enabled=false
    }
    mysql_servers=
    (
      {
        hostgroup_id=1
        hostname="passbolt-mysql-primary"
        port=3306
        weight=1000
        compression=0
        max_connections=1000
        max_replication_lag=0
        use_ssl=0
      },
      {
        hostgroup_id=2
        hostname="passbolt-mysql-secondary"
        port=3306
        weight=1000
        compression=0
        max_connections=1000
        max_replication_lag=0
        use_ssl=0
      }
    )
    mysql_users=
    (
      {
        username="root"
        password="root"
        use_ssl=0
        default_hostgroup=1
        transaction_persistent=1
        active=1
        max_connections=10000
      },
      {
        username="passbolt"
        password="passbolt"
        use_ssl=0
        default_hostgroup=1
        transaction_persistent=1
        active=1
        max_connections=10000
      }
    )
    mysql_query_rules=
    (
      {
        rule_id=1
        active=1
        match_digest="^SELECT .* FOR UPDATE$"
        destination_hostgroup=1
        apply=1
      },
      {
        rule_id=2
        active=1
        match_digest="^SELECT"
        destination_hostgroup=2
        apply=1
      }
    )
---
# Source: passbolt-ha/charts/passbolt/templates/pvc.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: passbolt
  labels:
    helm.sh/chart: passbolt-1.1.17
    app.kubernetes.io/name: passbolt
    app.kubernetes.io/instance: my-passbolt-ha
    app.kubernetes.io/version: "3.4.0-ce-non-root"
    app.kubernetes.io/managed-by: Helm
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "512Mi"
---
# Source: passbolt-ha/charts/mysql/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: passbolt-mysql
  namespace: "default"
  labels:
    app.kubernetes.io/instance: my-passbolt-ha
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mysql
    app.kubernetes.io/version: 8.0.36
    helm.sh/chart: mysql-9.23.0
rules:
  - apiGroups:
      - ""
    resources:
      - endpoints
    verbs:
      - get
---
# Source: passbolt-ha/charts/mysql/templates/rolebinding.yaml
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: passbolt-mysql
  namespace: "default"
  labels:
    app.kubernetes.io/instance: my-passbolt-ha
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mysql
    app.kubernetes.io/version: 8.0.36
    helm.sh/chart: mysql-9.23.0
subjects:
  - kind: ServiceAccount
    name: passbolt-mysql
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: passbolt-mysql
---
# Source: passbolt-ha/charts/mysql/templates/primary/svc-headless.yaml
apiVersion: v1
kind: Service
metadata:
  name: passbolt-mysql-primary-headless
  namespace: "default"
  labels:
    app.kubernetes.io/instance: my-passbolt-ha
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mysql
    app.kubernetes.io/version: 8.0.36
    helm.sh/chart: mysql-9.23.0
    app.kubernetes.io/component: primary
spec:
  type: ClusterIP
  clusterIP: None
  publishNotReadyAddresses: true
  ports:
    - name: mysql
      port: 3306
      targetPort: mysql
  selector:
    app.kubernetes.io/instance: my-passbolt-ha
    app.kubernetes.io/name: mysql
    app.kubernetes.io/component: primary
---
# Source: passbolt-ha/charts/mysql/templates/primary/svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: passbolt-mysql-primary
  namespace: "default"
  labels:
    app.kubernetes.io/instance: my-passbolt-ha
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mysql
    app.kubernetes.io/version: 8.0.36
    helm.sh/chart: mysql-9.23.0
    app.kubernetes.io/component: primary
spec:
  type: ClusterIP
  sessionAffinity: None
  ports:
    - name: mysql
      port: 3306
      protocol: TCP
      targetPort: mysql
      nodePort: null
  selector:
    app.kubernetes.io/instance: my-passbolt-ha
    app.kubernetes.io/name: mysql
    app.kubernetes.io/component: primary
---
# Source: passbolt-ha/charts/mysql/templates/secondary/svc-headless.yaml
apiVersion: v1
kind: Service
metadata:
  name: passbolt-mysql-secondary-headless
  namespace: "default"
  labels:
    app.kubernetes.io/instance: my-passbolt-ha
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mysql
    app.kubernetes.io/version: 8.0.36
    helm.sh/chart: mysql-9.23.0
    app.kubernetes.io/component: secondary
spec:
  type: ClusterIP
  clusterIP: None
  publishNotReadyAddresses: true
  ports:
    - name: mysql
      port: 3306
      targetPort: mysql
  selector:
    app.kubernetes.io/instance: my-passbolt-ha
    app.kubernetes.io/name: mysql
    app.kubernetes.io/component: secondary
---
# Source: passbolt-ha/charts/mysql/templates/secondary/svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: passbolt-mysql-secondary
  namespace: "default"
  labels:
    app.kubernetes.io/instance: my-passbolt-ha
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mysql
    app.kubernetes.io/version: 8.0.36
    helm.sh/chart: mysql-9.23.0
    app.kubernetes.io/component: secondary
spec:
  type: ClusterIP
  sessionAffinity: None
  ports:
    - name: mysql
      port: 3306
      protocol: TCP
      targetPort: mysql
      nodePort: null
  selector:
    app.kubernetes.io/instance: my-passbolt-ha
    app.kubernetes.io/name: mysql
    app.kubernetes.io/component: secondary
---
# Source: passbolt-ha/charts/passbolt/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: passbolt
  labels:
    helm.sh/chart: passbolt-1.1.17
    app.kubernetes.io/name: passbolt
    app.kubernetes.io/instance: my-passbolt-ha
    app.kubernetes.io/version: "3.4.0-ce-non-root"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: passbolt
    app.kubernetes.io/instance: my-passbolt-ha
---
# Source: passbolt-ha/charts/proxysql/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: passbolt-proxysql
  labels:
    helm.sh/chart: proxysql-1.2.1
    app.kubernetes.io/name: proxysql
    app.kubernetes.io/instance: my-passbolt-ha
    app.kubernetes.io/version: "2.6.5"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 3306
      targetPort: mysql
      protocol: TCP
      name: mysql
    - port: 6032
      targetPort: proxysql
      protocol: TCP
      name: proxysql
    - port: 443
      targetPort: web
      protocol: TCP
      name: web
  selector:
    app.kubernetes.io/name: proxysql
    app.kubernetes.io/instance: my-passbolt-ha
---
# Source: passbolt-ha/charts/passbolt/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: passbolt
  labels:
    helm.sh/chart: passbolt-1.1.17
    app.kubernetes.io/name: passbolt
    app.kubernetes.io/instance: my-passbolt-ha
    app.kubernetes.io/version: "3.4.0-ce-non-root"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: passbolt
      app.kubernetes.io/instance: my-passbolt-ha
  template:
    metadata:
      labels:
        app.kubernetes.io/name: passbolt
        app.kubernetes.io/instance: my-passbolt-ha
    spec:
      serviceAccountName: passbolt
      securityContext:
        {}
      containers:
        - name: passbolt
          securityContext:
            {}
          image: "passbolt/passbolt:3.4.0-ce-non-root"
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          env:
            - name: DATASOURCES_DEFAULT_HOST
              value: passbolt-proxysql
            - name: DATASOURCES_DEFAULT_DATABASE
              value: passbolt
            - name: DATASOURCES_DEFAULT_USERNAME
              value: passbolt
            - name: DATASOURCES_DEFAULT_PASSWORD
              value: passbolt
            - name: EMAIL_TRANSPORT_DEFAULT_HOST
              value: "smtp.example.com"
            - name: EMAIL_TRANSPORT_DEFAULT_PORT
              value: "25"
            - name: EMAIL_DEFAULT_FROM
              value: "noreply@example.com"
            - name: EMAIL_TRANSPORT_DEFAULT_TIMEOUT
              value: "30"
            - name: "PASSBOLT_EMAIL_SEND_PASSWORD_CREATE"
              value: "false"
            - name: "PASSBOLT_EMAIL_SEND_PASSWORD_UPDATE"
              value: "false"
            - name: "PASSBOLT_EMAIL_SHOW_SECRET"
              value: "false"
            - name: "PASSBOLT_EMAIL_SHOW_URI"
              value: "false"
            - name: "PASSBOLT_EMAIL_SHOW_USERNAME"
              value: "false"
            - name: APP_FULL_BASE_URL
              value: https://passbolt:80
          volumeMounts:
            - name: data
              mountPath: /etc/passbolt/gpg
              subPath: gpg
            - name : data
              mountPath : /usr/share/php/passbolt/webroot/img/public/Avatar
              subPath: avatar
          livenessProbe:
            httpGet:
              path: /healthcheck/status.json
              port: http
            initialDelaySeconds: 60
            timeoutSeconds: 10
          readinessProbe:
            httpGet:
              path: /healthcheck/status.json
              port: http
            initialDelaySeconds: 60
            timeoutSeconds: 10
          resources:
            limits:
              cpu: 100m
              memory: 512Mi
            requests:
              cpu: 50m
              memory: 256Mi
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: passbolt
---
# Source: passbolt-ha/charts/proxysql/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: passbolt-proxysql
  labels:
    helm.sh/chart: proxysql-1.2.1
    app.kubernetes.io/name: proxysql
    app.kubernetes.io/instance: my-passbolt-ha
    app.kubernetes.io/version: "2.6.5"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 3
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: proxysql
      app.kubernetes.io/instance: my-passbolt-ha
  template:
    metadata:
      labels:
        app.kubernetes.io/name: proxysql
        app.kubernetes.io/instance: my-passbolt-ha
    spec:
      serviceAccountName: passbolt-proxysql
      securityContext:
        fsGroup: 999
        runAsGroup: 999
        runAsNonRoot: true
        runAsUser: 999
      containers:
        - name: proxysql
          securityContext:
            {}
          image: "proxysql/proxysql:2.6.5"
          imagePullPolicy: Always
          command:
            - proxysql
            - "-f"
            - "--idle-threads"
            - "-D"
            - "/var/lib/proxysql"
            - "--reload"
          ports:
            - name: mysql
              containerPort: 3306
              protocol: TCP
            - name: proxysql
              containerPort: 6032
              protocol: TCP
            - name: web
              containerPort: 443
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: proxysql
          readinessProbe:
            tcpSocket:
              port: proxysql
          volumeMounts:
            - name: proxysql-config
              mountPath: /etc/proxysql.cnf
              subPath: proxysql.cnf
              readOnly: true
          resources:
            limits:
              cpu: 200m
              memory: 512Mi
            requests:
              cpu: 100m
              memory: 128Mi
      volumes:
        - name: proxysql-config
          configMap:
            name: passbolt-proxysql
---
# Source: passbolt-ha/charts/mysql/templates/primary/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: passbolt-mysql-primary
  namespace: "default"
  labels:
    app.kubernetes.io/instance: my-passbolt-ha
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mysql
    app.kubernetes.io/version: 8.0.36
    helm.sh/chart: mysql-9.23.0
    app.kubernetes.io/component: primary
spec:
  replicas: 1
  podManagementPolicy: ""
  selector:
    matchLabels:
      app.kubernetes.io/instance: my-passbolt-ha
      app.kubernetes.io/name: mysql
      app.kubernetes.io/component: primary
  serviceName: passbolt-mysql-primary
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      annotations:
        checksum/configuration: f0215f5fe9901690c0d39caf08aeccf97f5a7dd52f62fda64f45a341a1ce29f8
      labels:
        app.kubernetes.io/instance: my-passbolt-ha
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: mysql
        app.kubernetes.io/version: 8.0.36
        helm.sh/chart: mysql-9.23.0
        app.kubernetes.io/component: primary
    spec:
      serviceAccountName: passbolt-mysql
      
      automountServiceAccountToken: false
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/instance: my-passbolt-ha
                    app.kubernetes.io/name: mysql
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      securityContext:
        fsGroup: 1001
        fsGroupChangePolicy: Always
        supplementalGroups: []
        sysctls: []
      initContainers:
        - name: volume-permissions
          image: docker.io/bitnami/os-shell:12-debian-12-r16
          imagePullPolicy: "Always"
          command:
            - /bin/bash
            - -ec
            - |
              mkdir -p "/bitnami/mysql"
              chown "1001:1001" "/bitnami/mysql"
              find "/bitnami/mysql" -mindepth 1 -maxdepth 1 -not -name ".snapshot" -not -name "lost+found" | xargs -r chown -R "1001:1001"
          securityContext:
            runAsUser: 0
          volumeMounts:
            - name: data
              mountPath: /bitnami/mysql
            - name: empty-dir
              mountPath: /tmp
              subPath: tmp-dir
      containers:
        - name: mysql
          image: docker.io/bitnami/mysql:8.0.36-debian-12-r8
          imagePullPolicy: "Always"
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: false
            runAsGroup: 0
            runAsNonRoot: true
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: passbolt-mysql
                  key: mysql-root-password
            - name: MYSQL_USER
              value: "passbolt"
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: passbolt-mysql
                  key: mysql-password
            - name: MYSQL_PORT
              value: "3306"
            - name: MYSQL_DATABASE
              value: "passbolt"
            - name: MYSQL_REPLICATION_MODE
              value: "master"
            - name: MYSQL_REPLICATION_USER
              value: "replicator"
            - name: MYSQL_REPLICATION_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: passbolt-mysql
                  key: mysql-replication-password
          envFrom:
          ports:
            - name: mysql
              containerPort: 3306
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
            exec:
              command:
                - /bin/bash
                - -ec
                - |
                  password_aux="${MYSQL_ROOT_PASSWORD:-}"
                  if [[ -f "${MYSQL_ROOT_PASSWORD_FILE:-}" ]]; then
                      password_aux=$(cat "$MYSQL_ROOT_PASSWORD_FILE")
                  fi
                  mysqladmin status -uroot -p"${password_aux}"
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
            exec:
              command:
                - /bin/bash
                - -ec
                - |
                  password_aux="${MYSQL_ROOT_PASSWORD:-}"
                  if [[ -f "${MYSQL_ROOT_PASSWORD_FILE:-}" ]]; then
                      password_aux=$(cat "$MYSQL_ROOT_PASSWORD_FILE")
                  fi
                  mysqladmin status -uroot -p"${password_aux}"
          startupProbe:
            failureThreshold: 10
            initialDelaySeconds: 15
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
            exec:
              command:
                - /bin/bash
                - -ec
                - |
                  password_aux="${MYSQL_ROOT_PASSWORD:-}"
                  if [[ -f "${MYSQL_ROOT_PASSWORD_FILE:-}" ]]; then
                      password_aux=$(cat "$MYSQL_ROOT_PASSWORD_FILE")
                  fi
                  mysqladmin status -uroot -p"${password_aux}"
          volumeMounts:
            - name: data
              mountPath: /bitnami/mysql
            - name: empty-dir
              mountPath: /tmp
              subPath: tmp-dir
            - name: empty-dir
              mountPath: /opt/bitnami/mysql/conf
              subPath: app-conf-dir
            - name: empty-dir
              mountPath: /opt/bitnami/mysql/tmp
              subPath: app-tmp-dir
            - name: empty-dir
              mountPath: /opt/bitnami/mysql/logs
              subPath: app-logs-dir
            - name: config
              mountPath: /opt/bitnami/mysql/conf/my.cnf
              subPath: my.cnf
      volumes:
        - name: config
          configMap:
            name: passbolt-mysql-primary
        - name: empty-dir
          emptyDir: {}
  volumeClaimTemplates:
    - metadata:
        name: data
        labels:
          app.kubernetes.io/instance: my-passbolt-ha
          app.kubernetes.io/name: mysql
          app.kubernetes.io/component: primary
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "8Gi"
---
# Source: passbolt-ha/charts/mysql/templates/secondary/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: passbolt-mysql-secondary
  namespace: "default"
  labels:
    app.kubernetes.io/instance: my-passbolt-ha
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mysql
    app.kubernetes.io/version: 8.0.36
    helm.sh/chart: mysql-9.23.0
    app.kubernetes.io/component: secondary
spec:
  replicas: 2
  podManagementPolicy: ""
  selector:
    matchLabels:
      app.kubernetes.io/instance: my-passbolt-ha
      app.kubernetes.io/name: mysql
      app.kubernetes.io/component: secondary
  serviceName: passbolt-mysql-secondary
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      annotations:
        checksum/configuration: aabd12ff817e54a7c0c25035ffc57180301edfa7fa6f7396cf2790aa6bfad6b1
      labels:
        app.kubernetes.io/instance: my-passbolt-ha
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: mysql
        app.kubernetes.io/version: 8.0.36
        helm.sh/chart: mysql-9.23.0
        app.kubernetes.io/component: secondary
    spec:
      serviceAccountName: passbolt-mysql
      
      automountServiceAccountToken: false
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/instance: my-passbolt-ha
                    app.kubernetes.io/name: mysql
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      securityContext:
        fsGroup: 1001
        fsGroupChangePolicy: Always
        supplementalGroups: []
        sysctls: []
      initContainers:
        - name: volume-permissions
          image: docker.io/bitnami/os-shell:12-debian-12-r16
          imagePullPolicy: "Always"
          command:
            - /bin/bash
            - -ec
            - |
              mkdir -p "/bitnami/mysql"
              chown "1001:1001" "/bitnami/mysql"
              find "/bitnami/mysql" -mindepth 1 -maxdepth 1 -not -name ".snapshot" -not -name "lost+found" | xargs -r chown -R "1001:1001"
          securityContext:
            runAsUser: 0
          volumeMounts:
            - name: data
              mountPath: /bitnami/mysql
            - name: empty-dir
              mountPath: /tmp
              subPath: tmp-dir
      containers:
        - name: mysql
          image: docker.io/bitnami/mysql:8.0.36-debian-12-r8
          imagePullPolicy: "Always"
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: false
            runAsGroup: 0
            runAsNonRoot: true
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: MYSQL_REPLICATION_MODE
              value: "slave"
            - name: MYSQL_MASTER_HOST
              value: passbolt-mysql-primary
            - name: MYSQL_MASTER_PORT_NUMBER
              value: "3306"
            - name: MYSQL_MASTER_ROOT_USER
              value: "root"
            - name: MYSQL_PORT
              value: "3306"
            - name: MYSQL_REPLICATION_USER
              value: "replicator"
            - name: MYSQL_MASTER_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: passbolt-mysql
                  key: mysql-root-password
            - name: MYSQL_REPLICATION_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: passbolt-mysql
                  key: mysql-replication-password
          envFrom:
          ports:
            - name: mysql
              containerPort: 3306
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
            exec:
              command:
                - /bin/bash
                - -ec
                - |
                  password_aux="${MYSQL_MASTER_ROOT_PASSWORD:-}"
                  if [[ -f "${MYSQL_MASTER_ROOT_PASSWORD_FILE:-}" ]]; then
                      password_aux=$(cat "$MYSQL_MASTER_ROOT_PASSWORD_FILE")
                  fi
                  mysqladmin status -uroot -p"${password_aux}"
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
            exec:
              command:
                - /bin/bash
                - -ec
                - |
                  password_aux="${MYSQL_MASTER_ROOT_PASSWORD:-}"
                  if [[ -f "${MYSQL_MASTER_ROOT_PASSWORD_FILE:-}" ]]; then
                      password_aux=$(cat "$MYSQL_MASTER_ROOT_PASSWORD_FILE")
                  fi
                  mysqladmin status -uroot -p"${password_aux}"
          startupProbe:
            failureThreshold: 15
            initialDelaySeconds: 15
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
            exec:
              command:
                - /bin/bash
                - -ec
                - |
                  password_aux="${MYSQL_MASTER_ROOT_PASSWORD:-}"
                  if [[ -f "${MYSQL_MASTER_ROOT_PASSWORD_FILE:-}" ]]; then
                      password_aux=$(cat "$MYSQL_MASTER_ROOT_PASSWORD_FILE")
                  fi
                  mysqladmin status -uroot -p"${password_aux}"
          volumeMounts:
            - name: data
              mountPath: /bitnami/mysql
            - name: config
              mountPath: /opt/bitnami/mysql/conf/my.cnf
              subPath: my.cnf
            - name: empty-dir
              mountPath: /tmp
              subPath: tmp-dir
            - name: empty-dir
              mountPath: /opt/bitnami/mysql/conf
              subPath: app-conf-dir
            - name: empty-dir
              mountPath: /opt/bitnami/mysql/tmp
              subPath: app-tmp-dir
            - name: empty-dir
              mountPath: /opt/bitnami/mysql/logs
              subPath: app-logs-dir
      volumes:
        - name: config
          configMap:
            name: passbolt-mysql-secondary
        - name: empty-dir
          emptyDir: {}
  volumeClaimTemplates:
    - metadata:
        name: data
        labels:
          app.kubernetes.io/instance: my-passbolt-ha
          app.kubernetes.io/name: mysql
          app.kubernetes.io/component: secondary
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "8Gi"
---
# Source: passbolt-ha/charts/passbolt/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "passbolt-test-connection"
  labels:
    helm.sh/chart: passbolt-1.1.17
    app.kubernetes.io/name: passbolt
    app.kubernetes.io/instance: my-passbolt-ha
    app.kubernetes.io/version: "3.4.0-ce-non-root"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['passbolt:80/healthcheck/status.json']
  restartPolicy: Never
