---
# Source: qovery/charts/qovery-priority-class/templates/priorityclass.yaml
apiVersion: scheduling.k8s.io/v1
kind: PriorityClass
metadata:
  name: "qovery-high-priority"
  labels:
    qovery-type: "qovery-high-priority"
value: 1000000
globalDefault: false
description: "This priority class should be used for Qovery service pods only."
---
# Source: qovery/charts/qovery-cluster-agent/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: qovery-cluster-agent
  labels:
    helm.sh/chart: qovery-cluster-agent-0.1.0
    app.kubernetes.io/name: qovery-cluster-agent
    app.kubernetes.io/instance: my-qovery
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: qovery/charts/qovery-shell-agent/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: qovery-shell-agent
  labels:
    helm.sh/chart: qovery-shell-agent-0.1.0
    app.kubernetes.io/name: qovery-shell-agent
    app.kubernetes.io/instance: my-qovery
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: qovery/charts/qovery-cluster-agent/templates/secret-tls.yaml
apiVersion: v1
kind: Secret
type: kubernetes.io/tls
metadata:
  # Set a different name for self-signed secret to avoid conflicts with previous installation
  name: qovery-cluster-agent-self-signed-tls
  namespace: qovery
data:
  tls.crt: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWRENDQWp5Z0F3SUJBZ0lVYnNzbXB1bHZJWlRLWHQzdGNpZTREejNhQkZ3d0RRWUpLb1pJaHZjTkFRRUwKQlFBd0p6RWxNQ01HQTFVRUF3d2NjVzkyWlhKNUxXTnNkWE4wWlhJdFlXZGxiblF0ZDJWaWFHOXZhekFnRncweQpOREEzTURNeE5UVTFNalphR0E4ek1ERXdNREl5TlRFMU5UVXlObG93SnpFbE1DTUdBMVVFQXd3Y2NXOTJaWEo1CkxXTnNkWE4wWlhJdFlXZGxiblF0ZDJWaWFHOXZhekNDQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0MKQVFvQ2dnRUJBTG5UZCtEMzVCRWZ0SWpUNTdRUjMxS2FaQmlpMUNLOFdOVVJsOFFhM1A5dEtkUEdOUWRiRE9yeApseWxveHIxTWt3SXFaSHkwZXA0cU54UVVZWm1KTUdOK1NpMmtKMEM3VWk5K1hLUHJGelZCbnh6TVNwR2czSFArCndaNmZDenF3OWd3cVBRRVRFbjczbFJDVzJtTUxzbk9jbFJRRmRpdFVkc25DN21wa2FSUUZhZTY2MG9SaTdUV1YKZ1RGZDhqR2c4ZGViTjgyTWNsUTZ3OUQvZzRoVU9OdGV6NjNBNGluZ3U1UUtmNFMrcmhHdXh3V1ZXWFFoWGoyMQo3QTFpWmFQODdMeFRXTStkVnZMR1lrNUJaYTZLMTU1N2FWMHl6OWM1Qm5QVFdFTU9vZEFPbXpIUm0wZ2JZdmVZCkdDTXBJM0R6ZlpIVVo5RTBrYm1qcFkrQWNXTThSOU1DQXdFQUFhTjJNSFF3TWdZRFZSMFJCQ3N3S1lJbmNXOTIKWlhKNUxXTnNkWE4wWlhJdFlXZGxiblF0YzJWeWRtbGpaUzV4YjNabGNua3VjM1pqTUIwR0ExVWREZ1FXQkJRagpVNU91ZlBzeFBZc0VJbUJOekppSXdmV2kwekFmQmdOVkhTTUVHREFXZ0JSOTBUT0g5WUNiTVhUK3FYeVRtdWxLCjA4Z3ZYREFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBczQraUNQeVZSOEM4UGt5UUZWTHZ3dkFVS1ZuSnYwN2QKVzQ0R1QyaWo0OXdKSVpXc1ZhbEhXSE5CajBaSGlPYWFTbkNlaTJ3cEFtUW5SQWJHMjhyZWxBTUZRVTczdUN4UApJa3NiUGsrRTlzUVR1NVpYVFZoeHYwQVpMOWkrWVc5ZnRzQW9YUU42L1VCMkg1ZWZHSU1yaktYcTFRTDYwRVlrCmxMK2xUSnFXcjRPY3BXNStucmljbTMrYlA0QTYyMVlXVS9JZVBUTVlwUEV3UkN3cTBZZFg5ODFIblFlNmlIMTkKaHkwajZLUHY4RlY3L1R6dWVGbk5Va2ZvM1dRWTVxZzNDeTNVb2Z2M1dMdGNjVGFsTnNHT05pMGVMQ2tudTQvSQpqUUh5WWY2K0laa2lnbVdoR0JuQXd5VEtCZWxYVlhkc1FiRDdsL1VjaTA3U0I0NHNOM0ltbVE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
  tls.key: "LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2UUlCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktjd2dnU2pBZ0VBQW9JQkFRQzUwM2ZnOStRUkg3U0kKMCtlMEVkOVNtbVFZb3RRaXZGalZFWmZFR3R6L2JTblR4alVIV3d6cThaY3BhTWE5VEpNQ0ttUjh0SHFlS2pjVQpGR0daaVRCamZrb3RwQ2RBdTFJdmZseWo2eGMxUVo4Y3pFcVJvTnh6L3NHZW53czZzUFlNS2owQkV4Sis5NVVRCmx0cGpDN0p6bkpVVUJYWXJWSGJKd3U1cVpHa1VCV251dXRLRVl1MDFsWUV4WGZJeG9QSFhtemZOakhKVU9zUFEKLzRPSVZEamJYcyt0d09JcDRMdVVDbitFdnE0UnJzY0ZsVmwwSVY0OXRld05ZbVdqL095OFUxalBuVmJ5eG1KTwpRV1d1aXRlZWUybGRNcy9YT1FaejAxaEREcUhRRHBzeDBadElHMkwzbUJnaktTTnc4MzJSMUdmUk5KRzVvNldQCmdIRmpQRWZUQWdNQkFBRUNnZ0VBQmxXdHRDdDduaFFMWkFqdFFwZW5LRWgvVHdyTkV2TmwzU3l5ZUJrTWoyQVoKMlVJeGZwYVdWNWNmTnA4cVVRTE9zbHRzdHFNa1p2RjFQdjAxL1RWYzBVSWdpZVNwT2xmTDltK2YvWU5weWVhbApWVjl1WFkyazFqL2xrRVB5SjM4TFNZdUxFWUhBMDFQaC9SM0pKOXFNajFwaDZ4RWtKdVkxNG5QL2ZWSWJMdWttClZSMzk4UlhhdEU2V0VISm9aeWdabWpKdWliRUZUSEs5dWpuaXhKTUpVZFVheXJxc3JxWEZlbFo4bTZyUUpCME4KRkdQdExsS09lYXc4WGZhWnVNdUtVSGtUTnQxVDYwNE5UNFlWc2FkZHpjYW5RZHdXV3NSOCt6cU5RZ0NRV2ZDMwpXN0Jsemw0VGFoZnQwd21yai90aXpEZTVVN2NHR0Q5ampJM0h0OWc4VVFLQmdRRG1GN0hrQ0x1MXZuWXkxVm43CnJURjVObkZCZjlGTEFBbzFYNzU5eEErR0o0N29JTnZseVNlQlNqYkoyZUQ3LzgyblpDaU0vdlNCWTI4Y2NEcU0KcExTbk1PMkNmOVNZTFlmaWJvU2pCUXdGVktERzNPdWVndDdrK3lzVDdweER2ZTVBQVYyVXZ4cDJQU05JVVFMUgpab1l6Q0hLOHY0S3RGWDlwdStqSkJta3gyUUtCZ1FET3Y5QWRldk5xWmx2N1hvVS9PbVNQNkZnT2RHSjlhMGZmCnMzZEdGaHNhTndRNWd3WlZuZXkydXVQaXBPK0VTQnVoUVJVRjg2dlBYbWNydnBTZ2NxRHNpTTZLdERPN0JMcUcKMHNHbVk1cG84UGluR2llRVJOWlNJN20zcmxEcklod2lHcDdjelM4RGY3K1lkMnFpZUQ3T2pFME9ldlhKNHNjbQpFd1hzUGJhUGl3S0JnQnJaQXZISHJ4ZHF6T0hya1I5VHV5VVluQ2gzWUpWdXdNSXZsTXVaOS9IQVplVmlDQ2FNCnpTWkI0WmkxNnBHYzdJTXVwYWltQ3lPWjFab3M0amdNOCtOYVN5eGgvQTF4cXB4YUp2SGFvZWR4VTMxQXcrRncKQmRBVUdwZXR6Ti8rcG5FamQ2Ym1rWkRnVzJDUnkxRmh0Q0Q2U0dFTHU1UzBvSFJXNzdlZEh1TXBBb0dCQUxFNApxSHRzdGhUQmN4MHdzNFUwVjVrbnI3dU1OaFNPRGtrSi9EYWVvbExCVUNUQVZJQzFZNEJyQ1FaeEhVTEYwTEZVCktXSTFzbE9KOTJQKzlFWG9uRnJGRms2OUV3Ni9pZWdoNW83ckdDUFdVejVoNC9lMFRnYVF5eFJSSHRtL0htQjUKY3kyUDBEbnVtbHhtR0lqMkM5aGZXWG9OR24wWW9GN1p0WjBBZFduckFvR0FWeTFnODU2ajl5N3NoWHRrL1RMbApJay9xR0xVMnVPcytkZjBhaGc5d2xpaHVyZUFJVGVEak83SDRjYXpMRUVvKzJDaFNQa0lQZmYrSGp6Mkt0QkQ3CitYYTlFazlPWVpxRnRETkpiZFdWWnBTazRENmw4VFN1VDdDeEZuMkNhOGlHelQ2SnFqdy9EWFE5NnJSTEYzWWIKZnU3TDJOMFFMdjBkbXZ5bmNqTFFTRnc9Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K"
---
# Source: qovery/charts/qovery-cluster-agent/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: qovery-cluster-agent
  namespace: qovery
  labels:
    helm.sh/chart: qovery-cluster-agent-0.1.0
    app.kubernetes.io/name: qovery-cluster-agent
    app.kubernetes.io/instance: my-qovery
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
type: Opaque
stringData:
  CLUSTER_ID: '*clusterId'
  CLUSTER_JWT_TOKEN: '*jwtToken'
  GRPC_SERVER: '*agentGatewayUrl'
  LOKI_URL: '*lokiUrl'
  ORGANIZATION_ID: '*organizationId'
---
# Source: qovery/charts/qovery-shell-agent/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: qovery-shell-agent
  namespace: qovery
  labels:
    helm.sh/chart: qovery-shell-agent-0.1.0
    app.kubernetes.io/name: qovery-shell-agent
    app.kubernetes.io/instance: my-qovery
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
type: Opaque
stringData:
  CLUSTER_ID: '*clusterId'
  CLUSTER_JWT_TOKEN: '*jwtToken'
  GRPC_SERVER: '*agentGatewayUrl'
  ORGANIZATION_ID: '*organizationId'
  RUST_LIB_BACKTRACE: "0"
---
# Source: qovery/charts/qovery-cluster-agent/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: qovery-cluster-agent
  labels:
    helm.sh/chart: qovery-cluster-agent-0.1.0
    app.kubernetes.io/name: qovery-cluster-agent
    app.kubernetes.io/instance: my-qovery
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - ""
      - batch
    resources:
      - services
      - pods
      - pods/log
      - jobs
      - nodes
      - namespaces
      - events
      - nodes/stats
      - nodes/proxy
      - configmaps
    verbs:
      - get
      - list
      - watch
      - delete
  - apiGroups:
      - metrics.k8s.io
    resources:
      - pods
    verbs:
      - get
  - apiGroups:
      - cert-manager.io
    resources:
      - certificates
    verbs:
      - list
      - get
      - watch
  - apiGroups:
      - networking.k8s.io
    resources:
      - ingresses
    verbs:
      - get
      - list
---
# Source: qovery/charts/qovery-shell-agent/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: qovery-shell-agent
  labels:
    helm.sh/chart: qovery-shell-agent-0.1.0
    app.kubernetes.io/name: qovery-shell-agent
    app.kubernetes.io/instance: my-qovery
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - ""
    resources:
      - pods
      - pods/log
      - namespaces
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - pods/exec
      - pods/portforward
      - pods/proxy
      - pods/attach
    verbs:
      - get
      - list
      - watch
      - create
---
# Source: qovery/charts/qovery-cluster-agent/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: qovery-cluster-agent
  labels:
    helm.sh/chart: qovery-cluster-agent-0.1.0
    app.kubernetes.io/name: qovery-cluster-agent
    app.kubernetes.io/instance: my-qovery
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: qovery-cluster-agent
subjects:
  - kind: ServiceAccount
    name: qovery-cluster-agent
    namespace: default
---
# Source: qovery/charts/qovery-shell-agent/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: qovery-shell-agent
  labels:
    helm.sh/chart: qovery-shell-agent-0.1.0
    app.kubernetes.io/name: qovery-shell-agent
    app.kubernetes.io/instance: my-qovery
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: qovery-shell-agent
subjects:
  - kind: ServiceAccount
    name: qovery-shell-agent
    namespace: default
---
# Source: qovery/charts/qovery-cluster-agent/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: qovery-cluster-agent-service
  namespace: qovery
spec:
  selector:
      app.kubernetes.io/name: qovery-cluster-agent
      app.kubernetes.io/instance: my-qovery
  ports:
    - protocol: TCP
      port: 443
      targetPort: 8080
---
# Source: qovery/charts/qovery-cluster-agent/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: qovery-cluster-agent
  labels:
    helm.sh/chart: qovery-cluster-agent-0.1.0
    app.kubernetes.io/name: qovery-cluster-agent
    app.kubernetes.io/instance: my-qovery
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: qovery-cluster-agent
      app.kubernetes.io/instance: my-qovery
  strategy:
    type: RollingUpdate
  template:
    metadata:
      annotations:
        checksum/config: a53e0b6ee042bb9f8c61d172de30c023de7574989d4b8bf9ff7a3cc1eeae58c0
      labels:
        app.kubernetes.io/name: qovery-cluster-agent
        app.kubernetes.io/instance: my-qovery
    spec:
      serviceAccountName: qovery-cluster-agent
      securityContext:
        {}
      containers:
        - name: qovery-cluster-agent
          securityContext:
            {}
          image: "public.ecr.aws/r3m4q3r9/cluster-agent:*clusterAgentVersion"
          env:
            
            - name: "CLUSTER_ID"
              valueFrom:
                secretKeyRef:
                  name: qovery-cluster-agent
                  key: CLUSTER_ID
            
            - name: "CLUSTER_JWT_TOKEN"
              valueFrom:
                secretKeyRef:
                  name: qovery-cluster-agent
                  key: CLUSTER_JWT_TOKEN
            
            - name: "GRPC_SERVER"
              valueFrom:
                secretKeyRef:
                  name: qovery-cluster-agent
                  key: GRPC_SERVER
            
            - name: "LOKI_URL"
              valueFrom:
                secretKeyRef:
                  name: qovery-cluster-agent
                  key: LOKI_URL
            
            - name: "ORGANIZATION_ID"
              valueFrom:
                secretKeyRef:
                  name: qovery-cluster-agent
                  key: ORGANIZATION_ID
            
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
            - name: https
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
              scheme: HTTPS
            failureThreshold: 10
            periodSeconds: 60
            timeoutSeconds: 10
          resources:
            {}
          volumeMounts:
            - name: tls-certs
              mountPath: /etc/certs
              readOnly: true
      volumes:
        - name: tls-certs
          secret:
            secretName: qovery-cluster-agent-self-signed-tls
---
# Source: qovery/charts/qovery-shell-agent/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: qovery-shell-agent
  labels:
    helm.sh/chart: qovery-shell-agent-0.1.0
    app.kubernetes.io/name: qovery-shell-agent
    app.kubernetes.io/instance: my-qovery
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: qovery-shell-agent
      app.kubernetes.io/instance: my-qovery
  template:
    metadata:
      annotations:
        checksum/config: 64f02382abdbaa52237f6bc69b046ecee46b706ee510515cc29c76aaa29d0455
      labels:
        app.kubernetes.io/name: qovery-shell-agent
        app.kubernetes.io/instance: my-qovery
    spec:
      serviceAccountName: qovery-shell-agent
      securityContext:
        {}
      containers:
        - name: qovery-shell-agent
          securityContext:
            {}
          image: "public.ecr.aws/r3m4q3r9/shell-agent:*shellAgentVersion"
          env:
            - name: "CLUSTER_ID"
              valueFrom:
                secretKeyRef:
                  name: qovery-shell-agent
                  key: CLUSTER_ID
            - name: "CLUSTER_JWT_TOKEN"
              valueFrom:
                secretKeyRef:
                  name: qovery-shell-agent
                  key: CLUSTER_JWT_TOKEN
            - name: "GRPC_SERVER"
              valueFrom:
                secretKeyRef:
                  name: qovery-shell-agent
                  key: GRPC_SERVER
            - name: "ORGANIZATION_ID"
              valueFrom:
                secretKeyRef:
                  name: qovery-shell-agent
                  key: ORGANIZATION_ID
            - name: "RUST_LIB_BACKTRACE"
              valueFrom:
                secretKeyRef:
                  name: qovery-shell-agent
                  key: RUST_LIB_BACKTRACE
            
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: http
            failureThreshold: 10
            periodSeconds: 60
            timeoutSeconds: 10
          resources:
            {}
---
# Source: qovery/charts/qovery-cluster-agent/templates/admission-controller-webhook-configuration.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: qovery-cluster-agent-webhook
  namespace: qovery

webhooks:
  - name: qovery-cluster-agent-service.qovery.svc
    clientConfig:
      caBundle: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNVENDQWhtZ0F3SUJBZ0lVQVZKdEc5SDRiYng4bExUNGRJWFBpQW4yUlNBd0RRWUpLb1pJaHZjTkFRRUwKQlFBd0p6RWxNQ01HQTFVRUF3d2NjVzkyWlhKNUxXTnNkWE4wWlhJdFlXZGxiblF0ZDJWaWFHOXZhekFnRncweQpOREEzTURNeE5UVXdOVFZhR0E4ek1ERXdNREl5TlRFMU5UQTFOVm93SnpFbE1DTUdBMVVFQXd3Y2NXOTJaWEo1CkxXTnNkWE4wWlhJdFlXZGxiblF0ZDJWaWFHOXZhekNDQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0MKQVFvQ2dnRUJBTGFsNUU1NmxZSXVOb01OUVBxOW9xYlQwc0xLdWh4alNicUlOQi92N1BRMlFjWEpoUmVNTXI3dQo3VjRVUmorWkxYRHRWUU93NFAzQmVYT25PV0REOFRETVZ5TnI5V3k1VVlWZzRWclJyeDUvSnBRdEdUUHFIZFByCk5wbDBBMkpiR1h1NVU5SlNhR1owNGdpOFNBemdYSS9zQTZ5RlE2SjR1eFZzSVZIbFFCWGY3YnBXTkdhazNNR1cKWVJzSzBhaHhDMlloRm16RjNjUmNKNUVXWnFkekpDd2x6RCtsNEQvUDZFcWN4ai8zUTZpMGl0L2tHWlJ1YXFCbwp2TlZWbmE1SzJtbG11MHNsQlBHTXhRWkpNRVNSSlVBTzZSbWtoYUMzaUhkVVJTTitpN09YTk5tSEhQRW5YTXBECnJGRjJ3WW5tL0tlOWFTd0NlMyt2L1VlNHBaZWFjeDhDQXdFQUFhTlRNRkV3SFFZRFZSME9CQllFRkgzUk00ZjEKZ0pzeGRQNnBmSk9hNlVyVHlDOWNNQjhHQTFVZEl3UVlNQmFBRkgzUk00ZjFnSnN4ZFA2cGZKT2E2VXJUeUM5YwpNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBRmNCRWpZaFlzSWZtYXBzCit6Mjh6aGpSYXMrbGhBQW0yV1BseEZkbE5zbXFua2R2eEJRcmlBRmJEQm51RUxVdElCUGxPdHozMlhnRzV0MjcKSExXd2pWWkFRNmRERjJJWVQzeWJDaExnYkdycVR6UFNCYTdrNm1WZUZ6cmZEVmNKTVhGdHJ3TUVqODgvT3pGaQpOQjhXdjNabGFxUGtsS1FyR2IrWDBCYVhKckswWEIrY0l5R1FCZ2QxR0tXcGIycEJWejRvc1FHMUN5ZHpuTllYCkp0ekxHb2NwdTljbHNpcmxjVVVYNjlHUVBNZldyS0hIRGtrejQ3NWFnT2pkSWI5TUFjZWwxWENsQmdlWHJuMkwKNkFGaGNYYnhVRVIzUjNTQlJtM3d6ZVowMllUYVpMVS9XOVYxam1hbVIwSDVsSzEwOU9CM2VPTmdVeC9uTjlBUApvU2VhN0djPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
      service:
        name: qovery-cluster-agent-service
        namespace: qovery
        path: "/mutate"
    rules:
      - operations: ["CREATE", "UPDATE"]
        apiGroups: ["*"]
        apiVersions: ["v1"]
        resources: ["services", "deployments", "statefulsets", "jobs", "cronjobs", "daemonsets"]
    # Set failurePolicy to 'Ignore':
    # * to prevent blocking everything in the clusters in case of bugs
    # * to let us install this webhook in cluster-agent chart as we have no control on the order of yaml file installation during chart install
    #   (if MutatingWebhookConfiguration is installed before updating the cluster-agent deployment, the endpoint won't be available and could cause errors)
    failurePolicy: Ignore
    admissionReviewVersions: ["v1"]
    sideEffects: None
    timeoutSeconds: 5
