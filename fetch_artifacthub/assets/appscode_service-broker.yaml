---
# Source: service-broker/templates/service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-service-broker
  namespace: default
  labels:
    chart: "service-broker-0.3.1"
    app: "service-broker"
    release: "my-service-broker"
    heritage: "Helm"
---
# Source: service-broker/templates/cluster-service-broker.yaml
kind: Secret
apiVersion: v1
metadata:
  name: my-service-broker-accessor-token
  namespace: catalog
  labels:
    chart: "service-broker-0.3.1"
    app: "service-broker"
    release: "my-service-broker"
    heritage: "Helm"
  annotations:
    kubernetes.io/service-account.name: service-catalog-controller-manager
type: kubernetes.io/service-account-token
---
# Source: service-broker/templates/cluster-service-broker.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-service-broker-apiserver-cert
  namespace: default
  labels:
    chart: "service-broker-0.3.1"
    app: "service-broker"
    release: "my-service-broker"
    heritage: "Helm"
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURXekNDQWtPZ0F3SUJBZ0lSQVB4Q01ERmpxdEJkRU5uL1R0NFp4V1V3RFFZSktvWklodmNOQVFFTEJRQXcKRFRFTE1Ba0dBMVVFQXhNQ1kyRXdIaGNOTWpRd09URTJNRGcxTVRFeldoY05NelF3T1RFME1EZzFNVEV6V2pBYwpNUm93R0FZRFZRUURFeEZ0ZVMxelpYSjJhV05sTFdKeWIydGxjakNDQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFECmdnRVBBRENDQVFvQ2dnRUJBS3NBTCtVcndEQy9wVjk0WTdHKzJZUEhwcUd0SHhCaVhnQWFSNHZjVDhHR2dSUWgKSXZZZlJCdFRQZ2t2UTRFcUNXcy91N29XSTJ6MHA3TmM3ZXkzWG5PTmk4RVVBNlRkQ2N2Y2ZDRDMreE11ZVRtRQp6cnhCRmg2cXVrVjltcGxLV2czNGxYTE5aKzFGVDd4L2tpMlU2dVh1TDdsNHZkbTk1VU5TMWhDbUVOSjdSYnpZCngvVUhpTGJ3bFBJVGFRVUtVTmVJdHRQaU9HdHk0VWh3QVEyT1A5bUVPTUNNWHZHS0RHSmM1VUlMTWFGVXkzcTUKUE8xSC8yR1BhRERtOEFpdnpBY2ZQZnJhS3RQaCtQVUt1cmpyNlUvazkycTVYeUxPd1FUUjliMGxSeEc4dGFEYgpXMWNubjZLUFg5c1hiZTBFVnpHQmd6TDFtUXNmc2tQajdtd3lYbmtDQXdFQUFhT0JwakNCb3pBT0JnTlZIUThCCkFmOEVCQU1DQmFBd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQXdHQTFVZEV3RUIKL3dRQ01BQXdId1lEVlIwakJCZ3dGb0FVWjNaaXFUeFd6cEVhQm11VzlRcVc3czd2MXhZd1F3WURWUjBSQkR3dwpPb0laYlhrdGMyVnlkbWxqWlMxaWNtOXJaWEl1WkdWbVlYVnNkSUlkYlhrdGMyVnlkbWxqWlMxaWNtOXJaWEl1ClpHVm1ZWFZzZEM1emRtTXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBR3ZiYmVDeFpVVVRETEFrbEd1bk1YR04Kb2FIVFFMbUordGRqWGNTUTFSSXJpeW02Z2hSSmpHNHRiUjJXYmI0Y0JwalJaYXd4VkMzYTZvMG5mOEgzQk5IVgpmeHgySEszL2pCRjJ2UVcycjRMRHNpQ0NKK3lZUUtCanJMcEhKRU1ta2paTGwyM2hnNHVrZVhLRTVaSXF5RFhSCno5dTJDVnhVUTdqYXJrY2dIY1RlUm80QUNyRng1TGZLT0JyV1BTbGxCLzl2T3VWdUZHdTVaekx5Z0lTa0lXUkMKcGlJVnRuMThQTlR0Yk4yWE5CYmhJOVUvbmRxbXpMRnVXdnArMGNqM1UxcXBQUEplTDdGRFBEMHRWTTBCcmo4TgpLSk5SYTFHZCs0MWYrbHJkTmJEZkxEZ0JhcU5EVDFBUWlUVG80dFNxeGl0UFU3alkzTFUrb1ZrY0JBZllENlE9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBcXdBdjVTdkFNTCtsWDNoanNiN1pnOGVtb2EwZkVHSmVBQnBIaTl4UHdZYUJGQ0VpCjloOUVHMU0rQ1M5RGdTb0pheis3dWhZamJQU25zMXp0N0xkZWM0Mkx3UlFEcE4wSnk5eDhJUGY3RXk1NU9ZVE8KdkVFV0hxcTZSWDJhbVVwYURmaVZjczFuN1VWUHZIK1NMWlRxNWU0dnVYaTkyYjNsUTFMV0VLWVEwbnRGdk5qSAo5UWVJdHZDVThoTnBCUXBRMTRpMjArSTRhM0xoU0hBQkRZNC8yWVE0d0l4ZThZb01ZbHpsUWdzeG9WVExlcms4CjdVZi9ZWTlvTU9id0NLL01CeDg5K3RvcTArSDQ5UXE2dU92cFQrVDNhcmxmSXM3QkJOSDF2U1ZIRWJ5MW9OdGIKVnllZm9vOWYyeGR0N1FSWE1ZR0RNdldaQ3greVErUHViREplZVFJREFRQUJBb0lCQUhTNzdQWlNWcUl3d2pFWgpXMTFrdnRLQ1FkT08vbXpONmdQQjdPT2lZMlBtY1VtUGtYRlpTTUlxb21mY3R3Vis3KzBpRmdKanlJMUJ1eFhyCnM1UnNYWE1leHEvby9NL1lBUzhFOWt2L1hZdnJwdC9JTk9VNHZXUDBBck1ibXFWWXAzOXdHbjNEa1ZYZGdpQloKS2k0cHdlMXpHMnRPN0xPdk9jb3F5MjJVSUZtK3BiMlNaMEErUW5zQWVOSHVxZ2xSOGRQTmNzQk14dit6RVE4WQpnWW5hZ3Y2QzRHbDlNeCs4YjZxdVdHOEh1cGhOeDBvZmZIc2JPVnF0bmdGdmdva3RGdmNwSUpHNlM2dHBYek1yCmtoVUxyYzZSbkNEU3FCSlJ3NjdtbzAzM3BXdEVxUTZ6KzVGYjZDY0UxTGQ2L1RtODJPS1M2NHA2QURWYjMweGwKalJrMmdlMENnWUVBMkJ4RW1SM1kyUHhCY1ZaRjVqWHRaamYrTDU1TWM1Ti84bWJ6ZmFLSFU3d0F4dFFLN3dYcQpnTWFxc1NycWo5NnpNdmNyQ0RxbTV6YmlhSjhrMkVpdzI4blh0MnVFczRQTkhwc2N6SzhtNUVnTHJROHRMRWVGCnBGWEJTcm95NW8wRThDQVdOSHBRaER4V2dIQmtSdnNLa2lhSG93aVd2bXJBRlh5RDZNMTg5L01DZ1lFQXlwQmcKK2lScWdiR1JzelVnOTdlRlhGaGZ3NCsrcWJOMWVseDVOVVVGVGNrSWtGaVdIKzBYTVJFdERrbkVWTWxsOStQWgpEd0RJZUpuMjhOaWVENTdteU9TWHAwWWFmZmdpQll0TkFhVHA1TUJCNjUxZFBQa3R2TlJjR2RtenpGV1VOUGtECmZJOXNidUtFWjlpejVGZUFodHBaMmZSczUweCtPN1BGcVE0bDl1TUNnWUJqaThIZGRlNHBKU2xQOTVtRERWd3AKTmFtVWJhcHhvb1BST0xMNE1DRjk1Si9HOW0yQzVJcThmc2FwalVjMnRqSjlTM1U2K1NsZ1g5dXlyWHZmVkx5Qwp3VnJvVmxKdURrd3h5T2xmTDE4TzBGRHdpb2tZV0dtcTVRV0FVbnlYem1WejVwUFQ0SE91TmN6eXBOTE1EMTh6Ckt5UlhhT0ZuSE8wVitLRWFYMjB0R1FLQmdRREkrQmVPOWFSSnlsK3d1ZXhjZU5LeVBPZStBWlo3alpYbmNXbTgKQlI5dS9oNG1BQTNwM1BOZWRoa0tqUHRoMTNMNFR6RmlKamUvRjVvZGQvelJxS2gxOWYzVU1zUkQ2SFB3cGpVZgpoWHVjdlhacGlmWWdjV1FFYlhoM0dUdStaY1dtRE14OXYxb29aVXBTTVhqQSttT0U1NHV2cDBhSThLWnBHMEhuCktTZFhXd0tCZ0R1amdYcFE0U3FGc2srNHBmdUh4cndwZjAwa1ZvYytGTEt0eGJlZzZzRHZnZTVIdkR4a0tFYUIKMy9saGxUM1NXSHpSY29CR1dTQW1BN1pVN2hjbUc3OHNtTGxaUG5oeG1QOVVpL29LNzRvU0pEclp2bUpjM3RVdApHbmRWcU9BTDZEckZKc3FaUnR3cGxDMmdiR3JoT3A0Sm1JNERZb0l0K2hmcUhNK2ZrOTVDCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: service-broker/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: kubedb
  namespace: default
  labels:
    chart: "service-broker-0.3.1"
    app: "service-broker"
    release: "my-service-broker"
    heritage: "Helm"
data:
  elasticsearch.yaml: |
    id: 315fc21c-829e-4aa1-8c16-f7921c33550d
    name: elasticsearch
    description: KubeDB managed ElasticSearch
    bindable: true
    planupdatable: true
    metadata:
      displayName: KubeDB managed ElasticSearch
      imageUrl: https://cdn.appscode.com/images/logo/databases/elasticsearch.png
    plans:
    - id: c4e99557-3a81-452e-b9cf-660f01c155c0
      name: demo-elasticsearch
      description: Demo Standalone Elasticsearch database
      free: true
    - id: 2f05622b-724d-458f-abc8-f223b1afa0b9
      name: demo-elasticsearch-cluster
      description: Demo Elasticsearch cluster
      free: true
    - id: 6fa212e2-e043-4ae9-91c2-8e5c4403d894
      name: elasticsearch
      description: Elasticsearch cluster with custom specification
      free: true
  memcached.yaml: |
    id: d88856cb-fe3f-4473-ba8b-641480da810f
    name: memcached
    description: KubeDB managed Memcached
    bindable: true
    planupdatable: true
    metadata:
      displayName: KubeDB managed Memcached
      imageUrl: https://cdn.appscode.com/images/logo/databases/memcached.png
    plans:
    - id: af1ce2dc-5734-4e41-aaa2-8aa6a58d688f
      name: demo-memcached
      description: Demo Memcached
      free: true
    - id: d40e49b2-f8fb-4d47-96d3-35089bd0942d
      name: memcached
      description: Memcached with custom specification
      free: true
  mongodb.yaml: |
    id: d690058d-666c-45d8-ba98-fcb9fb47742e
    name: mongodb
    description: KubeDB managed MongoDB
    bindable: true
    planupdatable: true
    metadata:
      displayName: KubeDB managed MongoDB
      imageUrl: https://cdn.appscode.com/images/logo/databases/mongodb.png
    plans:
    - id: 498c12a6-7a68-4983-807b-75737f99062a
      name: demo-mongodb
      description: Demo Standalone MongoDB database
      free: true
    - id: 6af19c54-7757-42e5-bb74-b8350037c4a2
      name: demo-mongodb-cluster
      description: Demo MongoDB cluster
      free: true
    - id: e8f87ba6-0711-42db-a663-a3c75b78a541
      name: mongodb
      description: MongoDB database with custom specification
      free: true
  mysql.yaml: |
    id: 938a70c5-f2bc-4658-82dd-566bed7797e9
    name: mysql
    description: KubeDB managed MySQL
    bindable: true
    planupdatable: true
    metadata:
      displayName: KubeDB managed MySQL
      imageUrl: https://cdn.appscode.com/images/logo/databases/mysql.png
    plans:
    - id: 1fd1abf1-e8e1-44a2-8214-bf0fd1ce9417
      name: demo-mysql
      description: Demo MySQL database
      free: true
    - id: 6ed1ab9e-a640-4f26-9328-423b2e3816d7
      name: mysql
      description: MySQL database with custom specification
      free: true
  postgresql.yaml: |
    id: 2010d83f-d908-4d9f-879c-ce8f5f527f2a
    name: postgresql
    description: KubeDB managed PostgreSQL
    bindable: true
    planupdatable: true
    metadata:
      displayName: KubeDB managed PostgreSQL
      imageUrl: https://cdn.appscode.com/images/logo/databases/postgresql.png
    plans:
    - id: c4bcf392-7ebb-4623-a79d-13d00d761d56
      name: demo-postgresql
      description: Demo Standalone PostgreSQL database
      free: true
    - id: 41818203-0e2d-4d30-809f-a60c8c73dae8
      name: demo-ha-postgresql
      description: Demo HA PostgreSQL database
      free: true
    - id: 13373a9b-d5f5-4d9a-88df-d696bbc19071
      name: postgresql
      description: PostgreSQL database with custom specification
      free: true
  redis.yaml: |
    id: ccfd1c81-e59f-4875-a39f-75ba55320ce0
    name: redis
    description: KubeDB managed Redis
    bindable: true
    planupdatable: true
    metadata:
      displayName: KubeDB managed Redis
      imageUrl: https://cdn.appscode.com/images/logo/databases/redis.png
    plans:
    - id: 4b6ad8a7-272e-4cfd-bb38-5b9d4bd3962f
      name: demo-redis
      description: Demo Redis
      free: true
    - id: 45716530-cadb-4247-b06a-24a34200d734
      name: redis
      description: Redis with custom specification
      free: true
---
# Source: service-broker/templates/cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-service-broker
  labels:
    chart: "service-broker-0.3.1"
    app: "service-broker"
    release: "my-service-broker"
    heritage: "Helm"
rules:
- apiGroups:
  - appcatalog.appscode.com
  resources:
  - appbindings
  verbs: ["get"]
- apiGroups:
  - servicecatalog.k8s.io
  resources:
  - serviceinstances
  verbs: ["list"]
- apiGroups:
  - servicecatalog.k8s.io
  resources:
  - clusterservicebrokers
  verbs: ["delete"]
- apiGroups:
  - ""
  resources:
  - nodes
  verbs: ["list"]
- apiGroups:
  - ""
  resources:
  - secrets
  verbs: ["get"]
- apiGroups:
  - kubedb.com
  resources:
  - mysqls
  - postgreses
  - elasticsearches
  - mongodbs
  - memcacheds
  - redises
  verbs: ["get", "list", "create", "delete"]
---
# Source: service-broker/templates/cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-service-broker
  labels:
    chart: "service-broker-0.3.1"
    app: "service-broker"
    release: "my-service-broker"
    heritage: "Helm"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-service-broker
subjects:
  - kind: ServiceAccount
    name: my-service-broker
    namespace: default
---
# Source: service-broker/templates/cluster-service-broker.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-service-broker-accessor
  labels:
    chart: "service-broker-0.3.1"
    app: "service-broker"
    release: "my-service-broker"
    heritage: "Helm"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: servicecatalog.k8s.io:broker-accessor
subjects:
  - kind: ServiceAccount
    name: service-catalog-controller-manager
    namespace: catalog
---
# Source: service-broker/templates/cluster-service-broker.yaml
# to delegate authentication and authorization
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-service-broker-auth-delegator
  labels:
    chart: "service-broker-0.3.1"
    app: "service-broker"
    release: "my-service-broker"
    heritage: "Helm"
roleRef:
  kind: ClusterRole
  apiGroup: rbac.authorization.k8s.io
  name: system:auth-delegator
subjects:
- kind: ServiceAccount
  name: my-service-broker
  namespace: default
---
# Source: service-broker/templates/cluster-service-broker.yaml
# to read the config for terminating authentication
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: my-service-broker-extension-server-authentication-reader
  namespace: kube-system
  labels:
    chart: "service-broker-0.3.1"
    app: "service-broker"
    release: "my-service-broker"
    heritage: "Helm"
roleRef:
  kind: Role
  apiGroup: rbac.authorization.k8s.io
  name: extension-apiserver-authentication-reader
subjects:
- kind: ServiceAccount
  name: my-service-broker
  namespace: default
---
# Source: service-broker/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-service-broker
  namespace: default
  labels:
    chart: "service-broker-0.3.1"
    app: "service-broker"
    release: "my-service-broker"
    heritage: "Helm"
spec:
  ports:
  # Port used to expose admission webhook apiserver
  - name: api
    port: 443
    targetPort: 8443
  selector:
    app: service-broker
    release: my-service-broker
---
# Source: service-broker/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-service-broker
  namespace: default
  labels:
    chart: "service-broker-0.3.1"
    app: "service-broker"
    release: "my-service-broker"
    heritage: "Helm"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: service-broker
      release: my-service-broker
  template:
    metadata:
      labels:
        chart: "service-broker-0.3.1"
        app: "service-broker"
        release: "my-service-broker"
        heritage: "Helm"
    spec:
      serviceAccountName: my-service-broker
      containers:
      - name: broker
        image: "appscode/service-broker:0.3.1"
        imagePullPolicy: IfNotPresent
        args:
        - run
        - --logtostderr
        - --v=3
        - --secure-port=8443
        - --audit-log-path=-
        - --tls-cert-file=/var/serving-cert/tls.crt
        - --tls-private-key-file=/var/serving-cert/tls.key
        - --use-kubeapiserver-fqdn-for-aks=true
        - --enable-analytics=true
        - --catalog-path=/etc/config/catalog
        - --catalog-names="kubedb"
        - --defaultNamespace=default
        ports:
        - containerPort: 8443
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8443
            scheme: HTTPS
          initialDelaySeconds: 5
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8443
            scheme: HTTPS
          initialDelaySeconds: 5
        resources:
          {}
        volumeMounts:
        - mountPath: /var/serving-cert
          name: serving-cert
        - mountPath: /etc/config/catalog/kubedb
          name: kubedb-volume
      volumes:
      - name: serving-cert
        secret:
          defaultMode: 420
          secretName: my-service-broker-apiserver-cert
      - name: kubedb-volume
        configMap:
          name: kubedb
          # defaultMode: 511
      nodeSelector:
        beta.kubernetes.io/arch: amd64
        beta.kubernetes.io/os: linux
---
# Source: service-broker/templates/cluster-service-broker.yaml
apiVersion: servicecatalog.k8s.io/v1beta1
kind: ClusterServiceBroker
metadata:
  name: my-service-broker
  labels:
    chart: "service-broker-0.3.1"
    app: "service-broker"
    release: "my-service-broker"
    heritage: "Helm"
spec:
  url: https://my-service-broker.default.svc
  caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCakNDQWU2Z0F3SUJBZ0lSQUpKYVA3M2c2c1liTy9XZ0plSWZ5UTR3RFFZSktvWklodmNOQVFFTEJRQXcKRFRFTE1Ba0dBMVVFQXhNQ1kyRXdIaGNOTWpRd09URTJNRGcxTVRFeldoY05NelF3T1RFME1EZzFNVEV6V2pBTgpNUXN3Q1FZRFZRUURFd0pqWVRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBT2ErCjJzWmY3L2I5TENrSThsTTNLT3FYYjVBUGpwbGx5Yks2YTZ5dis5NmlyN2RPME1sUWxDOTlRZjdBVlZlUlE3ejkKckRMR3JDRUl0OCtYc2JnR0gvczAxemRJdVZqL0hNMkVtaHF3eVY5N25NVVdnRDcrZ1FrYVdjeTZNOE1Md3pXeApKbC92TXBVL0lYMFp0RXNUdnJ1RmN2MG1GSmQxNG5lYTdUdXpQWGw3RTZxT1BqblZCOGhZWWVWU0VVSjBLenFKCjZJNW9SQ2trK1FhNXd0ZklQUWVoQjE5QWxEMVpOWm1HUTVjdlZGSzVBUm9hNUtQK2E2dkt1aktXaVpxSzRzNjYKRGNCaDVEY1Z0WWhVcVZnNEJFTGVPSXdnOFZSSXQrTnRZTXRUVXNNTU9MVnVrejl2bWlNTnVsSkF0MXZRLzhEeQo3dUxMZC81cWRvWjFUT0Vnd1FjQ0F3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trTUIwR0ExVWRKUVFXCk1CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVcKQkJSbmRtS3BQRmJPa1JvR2E1YjFDcGJ1enUvWEZqQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFQdkhFZ2s2cwpCSDRVYjl6ZFFhbmxKN29wVTU4eFBTWnJDYndrWC8vcDcwN1hxWXJJNnZkaGZBazVuNUdpakEveUNpU0pvRWhWCno2L1RnTjFKMStXOG0zZWprOEtYMittcmpoUEpzSTRwNTh3cDRBdTY4N0tlWGt2VDExTyt0MHlBZ1gyV1RPRXEKWXRSSHgwVElENVF0TXdhY2ZZcmxDL01iR3BvNTYwL2JlRjlGSlpXeVpYdDFLVFhFaFlrdktHaXJCSGRyTlBLcAo0ck4wOXAwUzR3akZqUDlnYm1iU01VQ1dwK0pJVWNYVG5RQm1KdHJFOStidFZEMnQ0RCtBWm0rMnhjbklrRzJtCnpoZStGMGNMRUZROXJHc2ZSMnJyU1ZQSEI2ZWVtZmN0aGVEWXJkSFpjb1AzbzJYaEdvQVhLSWhDbVd1N0ROU3YKd0EvNzlHWFBKbUR3Z0E9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  authInfo:
    bearer:
      secretRef:
        name: my-service-broker-accessor-token
        namespace: catalog
---
# Source: service-broker/templates/broker-accessor.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: servicecatalog.k8s.io:broker-accessor
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
- nonResourceURLs: ["/v2/*"]
  verbs: ["get", "put", "patch", "delete"]
---
# Source: service-broker/templates/cleaner.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: my-service-broker-cleaner
  labels:
    chart: "service-broker-0.3.1"
    app: "service-broker"
    release: "my-service-broker"
    heritage: "Helm"
  annotations:
    "helm.sh/hook": pre-delete
    "helm.sh/hook-delete-policy": hook-succeeded,hook-failed
spec:
  backoffLimit: 3
  activeDeadlineSeconds: 120
  template:
    spec:
      serviceAccountName: my-service-broker
      containers:
      - name: busybox
        image: appscode/kubectl:v1.12
        command:
          - sh
          - -c
          - "sleep 2; kubectl delete clusterservicebroker my-service-broker || true"
        imagePullPolicy: IfNotPresent
      restartPolicy: Never
