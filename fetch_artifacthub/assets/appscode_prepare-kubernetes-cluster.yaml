---
# Source: prepare-kubernetes-cluster/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-prepare-kubernetes-cluster
  namespace: default
  labels:
    helm.sh/chart: prepare-kubernetes-cluster-v0.1.0
    app.kubernetes.io/name: prepare-kubernetes-cluster
    app.kubernetes.io/instance: my-prepare-kubernetes-cluster
    app.kubernetes.io/version: "v0.1.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: prepare-kubernetes-cluster/templates/dm.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: my-prepare-kubernetes-cluster
  namespace: default
  labels:
    helm.sh/chart: prepare-kubernetes-cluster-v0.1.0
    app.kubernetes.io/name: prepare-kubernetes-cluster
    app.kubernetes.io/instance: my-prepare-kubernetes-cluster
    app.kubernetes.io/version: "v0.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: prepare-kubernetes-cluster
      app.kubernetes.io/instance: my-prepare-kubernetes-cluster
  template:
    metadata:
      labels:
        app.kubernetes.io/name: prepare-kubernetes-cluster
        app.kubernetes.io/instance: my-prepare-kubernetes-cluster
    spec:
      serviceAccountName: my-prepare-kubernetes-cluster
      securityContext:
        {}
      containers:
        - name: preparer
          securityContext:
            privileged: true
          image: "tianon/toybox:0.8.4"
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - -c
            - sysctl -w vm.max_map_count=262144;sleep 3600
          resources:
            {}
          volumeMounts:
            - name: host-root
              mountPath: /host
      volumes:
        - name: host-root
          hostPath:
            path: /
      restartPolicy: Always
      nodeSelector:
        beta.kubernetes.io/os: linux
