---
# Source: quickstart/charts/postgres/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-quickstart-postgres
  labels:
    helm.sh/chart: postgres-0.1.0
    app.kubernetes.io/name: postgres
    app.kubernetes.io/instance: my-quickstart
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: quickstart/charts/redis/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-quickstart-redis
  labels:
    helm.sh/chart: redis-0.1.0
    app.kubernetes.io/name: redis
    app.kubernetes.io/instance: my-quickstart
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: quickstart/charts/postgres/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-quickstart-postgres
  labels:
    helm.sh/chart: postgres-0.1.0
    app.kubernetes.io/name: postgres
    app.kubernetes.io/instance: my-quickstart
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 5432
      targetPort: 5432
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: postgres
    app.kubernetes.io/instance: my-quickstart
---
# Source: quickstart/charts/redis/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-quickstart-redis
  labels:
    helm.sh/chart: redis-0.1.0
    app.kubernetes.io/name: redis
    app.kubernetes.io/instance: my-quickstart
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 6379
      targetPort: 6379
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: redis
    app.kubernetes.io/instance: my-quickstart
---
# Source: quickstart/charts/postgres/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-quickstart-postgres
  labels:
    helm.sh/chart: postgres-0.1.0
    app.kubernetes.io/name: postgres
    app.kubernetes.io/instance: my-quickstart
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: postgres
      app.kubernetes.io/instance: my-quickstart
  template:
    metadata:
      labels:
        app.kubernetes.io/name: postgres
        app.kubernetes.io/instance: my-quickstart
    spec:
      volumes:
      - name: dshm
        emptyDir:
          medium: Memory
      serviceAccountName: my-quickstart-postgres
      securityContext:
        {}
      containers:
        - name: postgres
          securityContext:
            {}
          image: "postgres:latest"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 5432
              protocol: TCP
          env:
            - name: POSTGRES_PASSWORD
              value: password
          args: ["-c", "max_connections=10000"]
          volumeMounts:
            - mountPath: /dev/shm
              name: dshm
          resources:
            {}
---
# Source: quickstart/charts/redis/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-quickstart-redis
  labels:
    helm.sh/chart: redis-0.1.0
    app.kubernetes.io/name: redis
    app.kubernetes.io/instance: my-quickstart
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: redis
      app.kubernetes.io/instance: my-quickstart
  template:
    metadata:
      labels:
        app.kubernetes.io/name: redis
        app.kubernetes.io/instance: my-quickstart
    spec:
      serviceAccountName: my-quickstart-redis
      securityContext:
        {}
      containers:
        - name: redis
          securityContext:
            {}
          image: "redis:latest"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 6379
              protocol: TCP
          resources:
            {}
---
# Source: quickstart/templates/loader.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: featureform-quickstart-loader
spec:
  template:
    spec:
      containers:
      - image: featureformcom/quickstart-loader:latest
        name: featureform-quickstart-loader
        env:
          - name: HOST
            value: "my-quickstart-postgres"
          - name: PORT
            value: "5432"
          - name: TEST_SIZE
            value: "short"
      restartPolicy: Never
  backoffLimit: 10
---
# Source: quickstart/charts/postgres/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "my-quickstart-postgres-test-connection"
  labels:
    helm.sh/chart: postgres-0.1.0
    app.kubernetes.io/name: postgres
    app.kubernetes.io/instance: my-quickstart
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['my-quickstart-postgres:80']
  restartPolicy: Never
---
# Source: quickstart/charts/redis/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "my-quickstart-redis-test-connection"
  labels:
    helm.sh/chart: redis-0.1.0
    app.kubernetes.io/name: redis
    app.kubernetes.io/instance: my-quickstart
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['my-quickstart-redis:80']
  restartPolicy: Never
---
# Source: quickstart/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "my-quickstart-test-connection"
  labels:
    helm.sh/chart: quickstart-0.1.1
    app.kubernetes.io/name: quickstart
    app.kubernetes.io/instance: my-quickstart
    app.kubernetes.io/version: "1.1.1"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['my-quickstart:80']
  restartPolicy: Never
