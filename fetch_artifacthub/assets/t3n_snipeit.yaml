---
# Source: snipeit/templates/secret.yaml
kind: Secret
apiVersion: v1
metadata:
  name: my-snipeit
  labels:
    app.kubernetes.io/name: snipeit
    app.kubernetes.io/instance: my-snipeit
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: snipeit-3.4.1
data:

  MYSQL_USER: c25pcGVpdA==
  MYSQL_DATABASE: ZGItc25pcGVpdA==
  MYSQL_PASSWORD: 
  MYSQL_PORT_3306_TCP_ADDR: bXlzcWw=
  MYSQL_PORT_3306_TCP_PORT: IjMzMDYi
  APP_KEY:
---
# Source: snipeit/templates/persistentvolumeclaim.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: my-snipeit
  labels:
    app.kubernetes.io/name: snipeit
    app.kubernetes.io/instance: my-snipeit
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: snipeit-3.4.1
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
---
# Source: snipeit/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-snipeit
  labels:
    app.kubernetes.io/name: snipeit
    app.kubernetes.io/instance: my-snipeit
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: snipeit-3.4.1
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 80
      protocol: TCP
  selector:
    app.kubernetes.io/name: snipeit
    app.kubernetes.io/instance: my-snipeit
---
# Source: snipeit/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-snipeit
  labels:
    app.kubernetes.io/name: snipeit
    app.kubernetes.io/instance: my-snipeit
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: snipeit-3.4.1
spec:
  replicas: 1
  revisionHistoryLimit: 0
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: snipeit
      app.kubernetes.io/instance: my-snipeit
  template:
    metadata:
      labels:
        app.kubernetes.io/name: snipeit
        app.kubernetes.io/instance: my-snipeit
      annotations:
        checksum/secret: 1db10114f222176bec6e4385ffc2d53f26430c978e59ed09067a5c4701cf032b
    spec:
      initContainers:
        - name: config-data
          image: busybox
          command: ["sh", "-c", "find /var/www/html/storage/framework/sessions -not -user 1000 -exec chown 1000 {} \\+"]
          volumeMounts:
            - name: data
              mountPath: /var/www/html/storage/framework/sessions
              subPath: sessions
      containers:
        - name: my-snipeit
          image: "snipe/snipe-it:v6.0.14"
          imagePullPolicy: IfNotPresent
          env:
            - name: APP_ENV
              value: "production"
            - name: APP_DEBUG
              value: "false"
            - name: APP_URL
              value: "http://example.local"
            - name: APP_TIMEZONE
              value: "Europe/Berlin"
            - name: APP_LOCALE
              value: "en"

          envFrom:
            - secretRef:
                name: my-snipeit
            

          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: 80
            periodSeconds: 15
            timeoutSeconds: 3
          readinessProbe:
            httpGet:
              path: /health
              port: 80
            periodSeconds: 15
            timeoutSeconds: 3
          volumeMounts:
            - name: data
              mountPath: /var/lib/snipeit
              subPath: www
            - name: data
              mountPath: /var/www/html/storage/framework/sessions
              subPath: sessions
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: my-snipeit
---
# Source: snipeit/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: my-snipeit
  labels:
    app.kubernetes.io/name: snipeit
    app.kubernetes.io/instance: my-snipeit
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: snipeit-3.4.1
spec:
  rules:
    - host: example.local
      http:
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name: my-snipeit
                port:
                  number: 80
