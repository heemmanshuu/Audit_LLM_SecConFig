---
# Source: mikrotik-exporter/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-mikrotik-exporter
  labels:
    helm.sh/chart: mikrotik-exporter-0.1.0
    app.kubernetes.io/name: mikrotik-exporter
    app.kubernetes.io/instance: my-mikrotik-exporter
    app.kubernetes.io/version: "v1.1.2"
    app.kubernetes.io/managed-by: Helm
---
# Source: mikrotik-exporter/templates/config-map.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-mikrotik-exporter
  labels:
    helm.sh/chart: mikrotik-exporter-0.1.0
    app.kubernetes.io/name: mikrotik-exporter
    app.kubernetes.io/instance: my-mikrotik-exporter
    app.kubernetes.io/version: "v1.1.2"
    app.kubernetes.io/managed-by: Helm
data:
  config.yaml: |
    devices:
    - address: 192.168.0.1
      features:
        bgp: false
        bridge_hosts: true
        capsman: false
        conntrack: true
        dhcp: true
        dhcp_leases: true
        ethernet: true
        health: true
        ip_pools: true
        ipsec: false
        lte: false
        netwatch: false
        ospf_neighbors: false
        poe: true
        routes: false
        sfp: false
        w60g: false
        wlan: false
        wlan_stations: false
      name: my_router
      password: prometheus
      username: prometheus
---
# Source: mikrotik-exporter/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-mikrotik-exporter
  labels:
    helm.sh/chart: mikrotik-exporter-0.1.0
    app.kubernetes.io/name: mikrotik-exporter
    app.kubernetes.io/instance: my-mikrotik-exporter
    app.kubernetes.io/version: "v1.1.2"
    app.kubernetes.io/managed-by: Helm
  annotations:
    prometheus.io/scheme: http
    prometheus.io/scrape: "true"
spec:
  type: ClusterIP
  ports:
    - port: 9436
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: mikrotik-exporter
    app.kubernetes.io/instance: my-mikrotik-exporter
---
# Source: mikrotik-exporter/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-mikrotik-exporter
  labels:
    helm.sh/chart: mikrotik-exporter-0.1.0
    app.kubernetes.io/name: mikrotik-exporter
    app.kubernetes.io/instance: my-mikrotik-exporter
    app.kubernetes.io/version: "v1.1.2"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: mikrotik-exporter
      app.kubernetes.io/instance: my-mikrotik-exporter
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mikrotik-exporter
        app.kubernetes.io/instance: my-mikrotik-exporter
    spec:
      serviceAccountName: my-mikrotik-exporter
      securityContext:
        {}
      containers:
        - name: mikrotik-exporter
          securityContext:
            {}
          image: "ogi4i/mikrotik-exporter:v1.1.2"
          args:
            - "-config-file"
            - "/config/config.yaml"
          imagePullPolicy: IfNotPresent
          env:
            - name: MIKROTIK_EXPORTER_PORT
              value: "9436"
          volumeMounts:
            - mountPath: /config/
              name: config
          ports:
            - name: http
              containerPort: 9436
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /live
              port: http
          resources:
            {}
      volumes:
        - name: config
          configMap:
            name: my-mikrotik-exporter
