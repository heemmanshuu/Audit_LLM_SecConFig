---
# Source: workload-api/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-workload-api
  labels:
    helm.sh/chart: workload-api-0.50.3
    app.kubernetes.io/name: workload-api
    app.kubernetes.io/instance: my-workload-api
    app.kubernetes.io/version: "0.50.35"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8007
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: workload-api
    app.kubernetes.io/instance: my-workload-api
---
# Source: workload-api/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-workload-api
  labels:
    helm.sh/chart: workload-api-0.50.3
    app.kubernetes.io/name: workload-api
    app.kubernetes.io/instance: my-workload-api
    app.kubernetes.io/version: "0.50.35"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: workload-api
      app.kubernetes.io/instance: my-workload-api
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: workload-api
        app.kubernetes.io/instance: my-workload-api
    spec:
      serviceAccountName: placeholderServiceAccount
      containers:
      - name: airbyte-workload-api-server-container
        image: airbyte/airbyte-workload-api-server:0.50.35
        imagePullPolicy: "IfNotPresent"
        env:
        - name: INTERNAL_API_HOST
          valueFrom:
            configMapKeyRef:
              name: my-workload-api-airbyte-env
              key: INTERNAL_API_HOST
        - name: AIRBYTE_API_HOST
          valueFrom:
            configMapKeyRef:
              name: my-workload-api-airbyte-env
              key: AIRBYTE_API_HOST
        - name: AIRBYTE_VERSION
          valueFrom:
            configMapKeyRef:
              name: my-workload-api-airbyte-env
              key: AIRBYTE_VERSION
        - name: DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: my-workload-api-airbyte-secrets
              key: DATABASE_PASSWORD
        - name: DATABASE_URL
          valueFrom:
            configMapKeyRef:
              name: my-workload-api-airbyte-env
              key: DATABASE_URL
        - name: DATABASE_USER
          valueFrom:
            secretKeyRef:
              name: my-workload-api-airbyte-secrets
              key: DATABASE_USER
        - name: TEMPORAL_HOST
          valueFrom:
            configMapKeyRef:
              name: my-workload-api-airbyte-env
              key: TEMPORAL_HOST
        - name: WORKLOAD_API_BEARER_TOKEN
          valueFrom:
            secretKeyRef:
              name: my-workload-api-airbyte-secrets
              key: WORKLOAD_API_BEARER_TOKEN

        # Values from secret

        # Values from env

        # Values from extraEnv for more compability(if you want to use external secret source or other stuff)
        livenessProbe:
          httpGet:
            path: /health/liveness
            port: http
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health/liveness
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 3

        ports:
        - name: http
          containerPort: 8007
          protocol: TCP
        resources:
          limits: {}
          requests: {}
        volumeMounts:
      volumes:
---
# Source: workload-api/templates/secrets.yaml
# Create secrets only for the local deployment
