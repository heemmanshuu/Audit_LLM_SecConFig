---
# Source: dash-ops/templates/service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: dash-ops
  name: dash-ops
---
# Source: dash-ops/templates/secret.yaml
apiVersion: v1
kind: Secret
data:
metadata:
  name: dash-ops
type: Opaque
---
# Source: dash-ops/templates/config-map.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app: dash-ops
  name: dash-ops
data:
  dash-ops.yaml: |-
    # Use the example found in the project readme: https://github.com/dash-ops/dash-ops#running-on-a-kubernetes-cluster
---
# Source: dash-ops/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app: dash-ops
  name: dash-ops
rules:
- apiGroups: ["", "metrics.k8s.io", "extensions", "apps"] 
  resources: ["pods/log", "events", "nodes", "namespaces", "pods", "deployments", "replicasets"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["extensions", "apps"]
  resources: ["deployments"]
  verbs: ["update"]
---
# Source: dash-ops/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app: dash-ops
  name: dash-ops
subjects:
- kind: ServiceAccount
  name: dash-ops
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: dash-ops
---
# Source: dash-ops/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app: dash-ops
  name: dash-ops
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: dash-ops
  sessionAffinity: None
  type: NodePort
---
# Source: dash-ops/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: dash-ops
  name: dash-ops
spec:
  replicas: 1
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: dash-ops
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: dash-ops
      name: dash-ops
    spec:
      serviceAccountName: "dash-ops"
      containers:
      - name: dash-ops
        image: "dashops/dash-ops:latest"
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /api/health
            port: 8080
          initialDelaySeconds: 180
          periodSeconds: 5
        readinessProbe:
          httpGet:
            path: /api/health
            port: 8080
          initialDelaySeconds: 60
          failureThreshold: 6
          periodSeconds: 20
        resources:
          limits:
            memory: 600Mi
          requests:
            memory: 600Mi
        env:
        - name: DASH_CONFIG
          value: /config/dash-ops.yaml
        volumeMounts:
        - name: config-volume
          mountPath: /config
      volumes:
        - name: config-volume
          configMap:
            name: dash-ops
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
