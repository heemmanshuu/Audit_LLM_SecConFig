---
# Source: postgres-controller/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    helm.sh/chart: postgres-controller-1.3
    app.kubernetes.io/name: postgres-controller
    app.kubernetes.io/instance: my-postgres-controller
    app.kubernetes.io/version: "0.5"
    app.kubernetes.io/managed-by: Helm
  name: my-postgres-controller
---
# Source: postgres-controller/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    helm.sh/chart: postgres-controller-1.3
    app.kubernetes.io/name: postgres-controller
    app.kubernetes.io/instance: my-postgres-controller
    app.kubernetes.io/version: "0.5"
    app.kubernetes.io/managed-by: Helm
  name: my-postgres-controller
data:
  postgres-controller.yaml: |
    postgres_instances:
      default:
        host: hostname
        password: postgres
        port: 5432
        user: postgres
---
# Source: postgres-controller/templates/crd.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: pgdatabases.postgresql.org
  labels:
    helm.sh/chart: postgres-controller-1.3
    app.kubernetes.io/name: postgres-controller
    app.kubernetes.io/instance: my-postgres-controller
    app.kubernetes.io/version: "0.5"
    app.kubernetes.io/managed-by: Helm
spec:
  group: postgresql.org
  scope: Namespaced
  names:
    plural: pgdatabases
    singular: pgdatabase
    kind: PostgresDatabase
    shortNames:
    - pgdb
  versions:
    - name: v1
      served: true
      storage: true
      schema:
        openAPIV3Schema:
          type: object
          properties:
            spec:
              type: object
              required:
              - dbName
              - dbRoleName
              - dbRolePassword
              properties:
                dbName:
                  type: string
                dbRoleName:
                  type: string
                dbRolePassword:
                  type: string
                dbInstanceId:
                  type: string
                dbExtensions:
                  type: array
                  items:
                    type: string
                extraSQL:
                  type: string
      additionalPrinterColumns:
      - name: DBNAME
        type: string
        description: The name of the database
        jsonPath: .spec.dbName
---
# Source: postgres-controller/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    helm.sh/chart: postgres-controller-1.3
    app.kubernetes.io/name: postgres-controller
    app.kubernetes.io/instance: my-postgres-controller
    app.kubernetes.io/version: "0.5"
    app.kubernetes.io/managed-by: Helm
  name: my-postgres-controller
rules:
  - apiGroups: ["postgresql.org"]
    resources: ["pgdatabases"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete", "deletecollection"]
---
# Source: postgres-controller/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    helm.sh/chart: postgres-controller-1.3
    app.kubernetes.io/name: postgres-controller
    app.kubernetes.io/instance: my-postgres-controller
    app.kubernetes.io/version: "0.5"
    app.kubernetes.io/managed-by: Helm
  name: my-postgres-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-postgres-controller
subjects:
  - kind: ServiceAccount
    name: my-postgres-controller
    namespace: default
---
# Source: postgres-controller/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-postgres-controller
  labels:
    helm.sh/chart: postgres-controller-1.3
    app.kubernetes.io/name: postgres-controller
    app.kubernetes.io/instance: my-postgres-controller
    app.kubernetes.io/version: "0.5"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: postgres-controller
      app.kubernetes.io/instance: my-postgres-controller
  template:
    metadata:
      annotations:
        checksum/config: d4e529336abb98f82e7567b41b6f4dec1e6a99cb64f0634b1974bfb9b1b906f9
      labels:
        app.kubernetes.io/name: postgres-controller
        app.kubernetes.io/instance: my-postgres-controller
        app: postgres-controller
        release: my-postgres-controller
    spec:
      serviceAccountName: my-postgres-controller
      containers:
        - name: postgres-controller
          image: "maxrocketinternet/postgres-controller:0.5"
          imagePullPolicy: IfNotPresent
          env:
            - name: CONFIG_FILE
              value: "/config/postgres-controller.yaml"
            - name: LOG_LEVEL
              value: "info"
          resources:
            {}
          volumeMounts:
            - name: config
              mountPath: /config
      volumes:
        - name: config
          configMap:
            name: my-postgres-controller
