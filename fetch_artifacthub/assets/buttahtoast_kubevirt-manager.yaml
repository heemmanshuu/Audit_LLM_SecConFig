---
# Source: kubevirt-manager/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-kubevirt-manager
  labels:
    helm.sh/chart: kubevirt-manager-0.1.3
    app.kubernetes.io/name: kubevirt-manager
    app.kubernetes.io/instance: my-kubevirt-manager
    app.kubernetes.io/version: "1.3.3"
    app.kubernetes.io/managed-by: Helm
    kubevirt-manager.io/version: "1.3.3"
---
# Source: kubevirt-manager/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-kubevirt-manager-manager
  labels:
    helm.sh/chart: kubevirt-manager-0.1.3
    app.kubernetes.io/name: kubevirt-manager
    app.kubernetes.io/instance: my-kubevirt-manager
    app.kubernetes.io/version: "1.3.3"
    app.kubernetes.io/managed-by: Helm
    kubevirt-manager.io/version: "1.3.3"
rules:
  - apiGroups: [""]
    resources: ["nodes", "namespaces"]
    verbs: ["get", "list"]
  - apiGroups: [""]
    resources: ["customresourcedefinitions"]
    verbs: ["get", "list"]
  - apiGroups: [""]
    resources: ["persistentvolumeclaims", "persistentvolumes", "services", "secrets", "serviceaccounts", "configmaps"]
    verbs: ["*"]
  - apiGroups: ["apps"]
    resources: ["deployments"]
    verbs: ["*"]
  - apiGroups: ["rbac.authorization.k8s.io"]
    resources: ["rolebindings"]
    verbs: ["*"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["storageclasses"]
    verbs: ["get", "list"]
  - apiGroups: ["apiextensions.k8s.io"]
    resources: ["customresourcedefinitions"]
    verbs: ["get", "list"]
  - apiGroups: ["k8s.cni.cncf.io"]
    resources: ["network-attachment-definitions"]
    verbs: ["get", "list"]
  - apiGroups: ["kubevirt.io"]
    resources: ["virtualmachines", "virtualmachineinstances"]
    verbs: ["*"]
  - apiGroups: ["subresources.kubevirt.io"]
    resources: ["*"]
    verbs: ["get", "list", "update", "patch"]
  - apiGroups: ["instancetype.kubevirt.io"]
    resources: ["*"]
    verbs: ["*"] 
  - apiGroups: ["cdi.kubevirt.io"]
    resources: ["*"]
    verbs: ["*"]
  - apiGroups: ["pool.kubevirt.io"]
    resources: ["*"]
    verbs: ["*"]
  - apiGroups: ["scheduling.k8s.io"]
    resources: ["priorityclasses"]
    verbs: ["get", "list"]
  - apiGroups: ["autoscaling"]
    resources: ["horizontalpodautoscalers"]
    verbs: ["*"]
  - apiGroups: ["cluster.x-k8s.io"]
    resources: ["clusters", "machinedeployments"]
    verbs: ["*"]
  - apiGroups: ["controlplane.cluster.x-k8s.io"]
    resources: ["kubeadmcontrolplanes"]
    verbs: ["*"]
  - apiGroups: ["infrastructure.cluster.x-k8s.io"]
    resources: ["kubevirtmachinetemplates", "kubevirtclusters"]
    verbs: ["*"]
  - apiGroups: ["bootstrap.cluster.x-k8s.io"]
    resources: ["kubeadmconfigtemplates"]
    verbs: ["*"]
  - apiGroups: ["addons.cluster.x-k8s.io"]
    resources: ["clusterresourcesets"]
    verbs: ["*"]
---
# Source: kubevirt-manager/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-kubevirt-manager-manager-kccm
  labels:
    helm.sh/chart: kubevirt-manager-0.1.3
    app.kubernetes.io/name: kubevirt-manager
    app.kubernetes.io/instance: my-kubevirt-manager
    app.kubernetes.io/version: "1.3.3"
    app.kubernetes.io/managed-by: Helm
    kubevirt-manager.io/version: "1.3.3"
rules:
  - apiGroups: ["kubevirt.io"]
    resources: ["virtualmachines"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["kubevirt.io"]
    resources: ["virtualmachineinstances"]
    verbs: ["get", "list", "watch", "update"]
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["services"]
    verbs: ["*"]
---
# Source: kubevirt-manager/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-kubevirt-manager-manager
  labels:
    helm.sh/chart: kubevirt-manager-0.1.3
    app.kubernetes.io/name: kubevirt-manager
    app.kubernetes.io/instance: my-kubevirt-manager
    app.kubernetes.io/version: "1.3.3"
    app.kubernetes.io/managed-by: Helm
    kubevirt-manager.io/version: "1.3.3"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-kubevirt-manager-manager
subjects:
- kind: ServiceAccount
  name: my-kubevirt-manager
  namespace: default
---
# Source: kubevirt-manager/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-kubevirt-manager-manager-kccm
  labels:
    helm.sh/chart: kubevirt-manager-0.1.3
    app.kubernetes.io/name: kubevirt-manager
    app.kubernetes.io/instance: my-kubevirt-manager
    app.kubernetes.io/version: "1.3.3"
    app.kubernetes.io/managed-by: Helm
    kubevirt-manager.io/version: "1.3.3"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-kubevirt-manager-manager-kccm
subjects:
- kind: ServiceAccount
  name: my-kubevirt-manager
  namespace: default
---
# Source: kubevirt-manager/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-kubevirt-manager
  labels:
    helm.sh/chart: kubevirt-manager-0.1.3
    app.kubernetes.io/name: kubevirt-manager
    app.kubernetes.io/instance: my-kubevirt-manager
    app.kubernetes.io/version: "1.3.3"
    app.kubernetes.io/managed-by: Helm
    kubevirt-manager.io/version: "1.3.3"
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: kubevirt-manager
    app.kubernetes.io/instance: my-kubevirt-manager
---
# Source: kubevirt-manager/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-kubevirt-manager
  labels:
    helm.sh/chart: kubevirt-manager-0.1.3
    app.kubernetes.io/name: kubevirt-manager
    app.kubernetes.io/instance: my-kubevirt-manager
    app.kubernetes.io/version: "1.3.3"
    app.kubernetes.io/managed-by: Helm
    kubevirt-manager.io/version: "1.3.3"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kubevirt-manager
      app.kubernetes.io/instance: my-kubevirt-manager
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kubevirt-manager
        app.kubernetes.io/instance: my-kubevirt-manager
    spec:
      serviceAccountName: my-kubevirt-manager
      securityContext:
        {}
      containers:
        - name: kubevirt-manager
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsGroup: 30000
            runAsUser: 10000
          image: "kubevirtmanager/kubevirt-manager:1.3.3"
          imagePullPolicy: IfNotPresent
          args:
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {}
          volumeMounts:
          - name: cache-volume
            mountPath: /var/cache/nginx
          - name: run-volume
            mountPath: /var/run
      volumes:
        - name: cache-volume
          emptyDir: {}
        - name: run-volume
          emptyDir: {}
