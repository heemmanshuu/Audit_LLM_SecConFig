---
# Source: mdb/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-mdb
  namespace: default
  labels:
    app.kubernetes.io/name: mdb
    helm.sh/chart: mdb-5.0.7
    app.kubernetes.io/instance: my-mdb
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "1.0.0"
spec:
  type: ClusterIP
  ports:
    - name: http
      targetPort: http
      port: 8080
      protocol: TCP
  selector:
    app.kubernetes.io/name: mdb
    app.kubernetes.io/instance: my-mdb
---
# Source: mdb/templates/deployment-statefulset.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-mdb
  namespace: default
  labels:
    app.kubernetes.io/name: mdb
    helm.sh/chart: mdb-5.0.7
    app.kubernetes.io/instance: my-mdb
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "1.0.0"
    canary: "false"
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: mdb
      app.kubernetes.io/instance: my-mdb
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mdb
        helm.sh/chart: mdb-5.0.7
        app.kubernetes.io/instance: my-mdb
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/version: "1.0.0"
        canary: "false"
      annotations:
    spec:
      automountServiceAccountToken: false
      shareProcessNamespace: false
      serviceAccountName: default
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/instance: my-mdb
                    app.kubernetes.io/name: mdb
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      hostNetwork: false
      hostIPC: false
      securityContext:
        fsGroup: 1001
        sysctls: []
      
      containers:
        - name: mdb
          image: docker.io/bitnami/nginx:latest
          imagePullPolicy: "IfNotPresent"
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
            runAsUser: 1001
          env:
          envFrom:
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: http
            initialDelaySeconds: 45
            periodSeconds: 20
            timeoutSeconds: 3
            successThreshold: 1
            failureThreshold: 5
          readinessProbe:
            tcpSocket:
              port: http
            initialDelaySeconds: 45
            periodSeconds: 20
            timeoutSeconds: 3
            successThreshold: 1
            failureThreshold: 5
          volumeMounts:
      volumes:
        - name: data-storage
          emptyDir: {}
