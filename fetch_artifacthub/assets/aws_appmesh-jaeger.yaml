---
# Source: appmesh-jaeger/templates/account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-appmesh-jaeger
  labels:
    app.kubernetes.io/name: appmesh-jaeger
    helm.sh/chart: appmesh-jaeger-1.0.3
    app.kubernetes.io/instance: my-appmesh-jaeger
    app.kubernetes.io/version: "1.29.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: appmesh-jaeger/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-appmesh-jaeger
  labels:
    app.kubernetes.io/name: appmesh-jaeger
    helm.sh/chart: appmesh-jaeger-1.0.3
    app.kubernetes.io/instance: my-appmesh-jaeger
    app.kubernetes.io/version: "1.29.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 9411
      targetPort: 9411
      protocol: TCP
      name: http-zipkin
    - port: 16686
      targetPort: 16686
      protocol: TCP
      name: http-ui
  selector:
    app.kubernetes.io/name: appmesh-jaeger
    app.kubernetes.io/instance: my-appmesh-jaeger
---
# Source: appmesh-jaeger/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-appmesh-jaeger
  labels:
    app.kubernetes.io/name: appmesh-jaeger
    helm.sh/chart: appmesh-jaeger-1.0.3
    app.kubernetes.io/instance: my-appmesh-jaeger
    app.kubernetes.io/version: "1.29.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: appmesh-jaeger
      app.kubernetes.io/instance: my-appmesh-jaeger
  template:
    metadata:
      labels:
        app.kubernetes.io/name: appmesh-jaeger
        app.kubernetes.io/instance: my-appmesh-jaeger
        app.kubernetes.io/part-of: appmesh
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "14269"
    spec:
      serviceAccountName: my-appmesh-jaeger
      volumes:
      - name: data
        emptyDir: {}
      containers:
        - name: appmesh-jaeger
          image: "jaegertracing/all-in-one:1.29"
          imagePullPolicy: IfNotPresent
          ports:
            # agent: accept zipkin.thrift over compact thrift protocol (deprecated, used by legacy clients only)
            - containerPort: 5775
              protocol: UDP
            # agent: accept jaeger.thrift over compact thrift protocol
            - containerPort: 6831
              protocol: UDP
            # agent: accept jaeger.thrift over binary thrift protocol
            - containerPort: 6832
              protocol: UDP
            # collector: Zipkin compatible endpoint
            - containerPort: 9411
              protocol: TCP
            # query: serve frontend
            - containerPort: 16686
              protocol: TCP
            # agent: serve configs
            - containerPort: 5778
              protocol: TCP
            # collector: accept jaeger.thrift directly from clients
            - containerPort: 14268
              protocol: TCP
            # collector: Health Check server
            - containerPort: 14269
              protocol: TCP
          env:
            - name: MEMORY_MAX_TRACES
              value: "40000"
            - name: COLLECTOR_ZIPKIN_HOST_PORT
              value: "9411"
            - name: BADGER_EPHEMERAL
              value: "false"
            - name: SPAN_STORAGE_TYPE
              value: "badger"
            - name: BADGER_DIRECTORY_VALUE
              value: "/badger/data"
            - name: BADGER_DIRECTORY_KEY
              value: "/badger/key"
            - name: QUERY_BASE_PATH
              value:  /jaeger
          livenessProbe:
            httpGet:
              path: /
              port: 14269
            initialDelaySeconds: 0
            periodSeconds: 10
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /
              port: 14269
            initialDelaySeconds: 0
            periodSeconds: 10
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 3
          volumeMounts:
            - name: data
              mountPath: /badger
          resources:
            limits:
              cpu: 2000m
              memory: 2Gi
            requests:
              cpu: 100m
              memory: 256Mi
