---
# Source: pie/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-pie
  namespace: default
  labels:
    helm.sh/chart: pie-0.8.1
    app.kubernetes.io/name: pie
    app.kubernetes.io/instance: my-pie
    app.kubernetes.io/version: "0.13.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: pie/templates/pie.topolvm.io_pieprobes.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  name: pieprobes.pie.topolvm.io
spec:
  group: pie.topolvm.io
  names:
    kind: PieProbe
    listKind: PieProbeList
    plural: pieprobes
    singular: pieprobe
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: PieProbe is the Schema for the pieprobes API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: PieProbeSpec defines the desired state of PieProbe
            properties:
              disableMountProbes:
                default: false
                type: boolean
                x-kubernetes-validations:
                - message: disableMountProbes is immutable
                  rule: self == oldSelf
              disableProvisionProbe:
                default: false
                type: boolean
                x-kubernetes-validations:
                - message: disableProvisionProbe is immutable
                  rule: self == oldSelf
              monitoringStorageClass:
                type: string
                x-kubernetes-validations:
                - message: monitoringStorageClass is immutable
                  rule: self == oldSelf
              nodeSelector:
                description: |-
                  A node selector represents the union of the results of one or more label queries
                  over a set of nodes; that is, it represents the OR of the selectors represented
                  by the node selector terms.
                properties:
                  nodeSelectorTerms:
                    description: Required. A list of node selector terms. The terms
                      are ORed.
                    items:
                      description: |-
                        A null or empty node selector term matches no objects. The requirements of
                        them are ANDed.
                        The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
                      properties:
                        matchExpressions:
                          description: A list of node selector requirements by node's
                            labels.
                          items:
                            description: |-
                              A node selector requirement is a selector that contains values, a key, and an operator
                              that relates the key and values.
                            properties:
                              key:
                                description: The label key that the selector applies
                                  to.
                                type: string
                              operator:
                                description: |-
                                  Represents a key's relationship to a set of values.
                                  Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                type: string
                              values:
                                description: |-
                                  An array of string values. If the operator is In or NotIn,
                                  the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                  the values array must be empty. If the operator is Gt or Lt, the values
                                  array must have a single element, which will be interpreted as an integer.
                                  This array is replaced during a strategic merge patch.
                                items:
                                  type: string
                                type: array
                                x-kubernetes-list-type: atomic
                            required:
                            - key
                            - operator
                            type: object
                          type: array
                          x-kubernetes-list-type: atomic
                        matchFields:
                          description: A list of node selector requirements by node's
                            fields.
                          items:
                            description: |-
                              A node selector requirement is a selector that contains values, a key, and an operator
                              that relates the key and values.
                            properties:
                              key:
                                description: The label key that the selector applies
                                  to.
                                type: string
                              operator:
                                description: |-
                                  Represents a key's relationship to a set of values.
                                  Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                type: string
                              values:
                                description: |-
                                  An array of string values. If the operator is In or NotIn,
                                  the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                  the values array must be empty. If the operator is Gt or Lt, the values
                                  array must have a single element, which will be interpreted as an integer.
                                  This array is replaced during a strategic merge patch.
                                items:
                                  type: string
                                type: array
                                x-kubernetes-list-type: atomic
                            required:
                            - key
                            - operator
                            type: object
                          type: array
                          x-kubernetes-list-type: atomic
                      type: object
                      x-kubernetes-map-type: atomic
                    type: array
                    x-kubernetes-list-type: atomic
                required:
                - nodeSelectorTerms
                type: object
                x-kubernetes-map-type: atomic
              probePeriod:
                default: 1
                maximum: 59
                minimum: 1
                type: integer
              probeThreshold:
                default: 1m
                type: string
              pvcCapacity:
                anyOf:
                - type: integer
                - type: string
                default: 100Mi
                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                x-kubernetes-int-or-string: true
                x-kubernetes-validations:
                - message: pvcCapacity is immutable
                  rule: self == oldSelf
            required:
            - monitoringStorageClass
            - nodeSelector
            - probePeriod
            - probeThreshold
            type: object
          status:
            description: PieProbeStatus defines the observed state of PieProbe
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: pie/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-pie
rules:
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - pie.topolvm.io
  resources:
  - pieprobes
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - pie.topolvm.io
  resources:
  - pieprobes/finalizers
  verbs:
  - update
- apiGroups:
  - pie.topolvm.io
  resources:
  - pieprobes/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - storage.k8s.io
  resources:
  - storageclasses
  verbs:
  - get
  - list
  - watch
---
# Source: pie/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-pie
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-pie
subjects:
- kind: ServiceAccount
  name: my-pie
  namespace: default
---
# Source: pie/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: my-pie
  namespace: default
rules:
- apiGroups:
  - batch
  resources:
  - cronjobs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - batch
  resources:
  - jobs
  verbs:
  - delete
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: pie/templates/role.yaml
# permissions to do leader election.
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: my-pie-leader-election
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
# Source: pie/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: my-pie
  namespace: default
subjects:
- kind: ServiceAccount
  namespace: default
  name: my-pie
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: my-pie
---
# Source: pie/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: my-pie-leader-election
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: my-pie-leader-election
subjects:
- kind: ServiceAccount
  name: my-pie
  namespace: default
---
# Source: pie/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-pie
  namespace: default
  labels:
    helm.sh/chart: pie-0.8.1
    app.kubernetes.io/name: pie
    app.kubernetes.io/instance: my-pie
    app.kubernetes.io/version: "0.13.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - name: metrics
      protocol: TCP
      port: 8080
      targetPort: 8080
    - name: receiver
      protocol: TCP
      port: 8082
      targetPort: 8082
  selector:
    app.kubernetes.io/name: pie
    app.kubernetes.io/instance: my-pie
---
# Source: pie/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-pie
  namespace: default
  labels:
    helm.sh/chart: pie-0.8.1
    app.kubernetes.io/name: pie
    app.kubernetes.io/instance: my-pie
    app.kubernetes.io/version: "0.13.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: pie
      app.kubernetes.io/instance: my-pie
  template:
    metadata:
      labels:
        app.kubernetes.io/name: pie
        app.kubernetes.io/instance: my-pie
    spec:
      serviceAccountName: my-pie
      securityContext:
        {}
      containers:
        - name: controller
          securityContext:
            {}
          image: "ghcr.io/topolvm/pie:0.13.0"
          imagePullPolicy: IfNotPresent
          ports:
            - name: metrics
              protocol: TCP
              containerPort: 8080
            - name: health
              protocol: TCP
              containerPort: 8081
            - name: receiver
              protocol: TCP
              containerPort: 8082
          livenessProbe:
            httpGet:
              path: /healthz
              port: health
          readinessProbe:
            httpGet:
              path: /readyz
              port: health
          resources:
            {}
          args:
          - "controller"
          - "--container-image"
          - "ghcr.io/topolvm/pie:0.13.0"
          - "--namespace"
          - "default"
          - "--controller-url"
          - "http://my-pie.default.svc:8082"
