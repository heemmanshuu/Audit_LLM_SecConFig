---
# Source: pipeline-enterprise/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-pipeline-enterprise
  labels:
    helm.sh/chart: pipeline-enterprise-0.23.0
    app.kubernetes.io/name: pipeline-enterprise
    app.kubernetes.io/instance: my-pipeline-enterprise
    app.kubernetes.io/version: "v0.23.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: pipeline-enterprise/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-pipeline-enterprise
  labels:
    helm.sh/chart: pipeline-enterprise-0.23.0
    app.kubernetes.io/name: pipeline-enterprise
    app.kubernetes.io/instance: my-pipeline-enterprise
    app.kubernetes.io/version: "v0.23.0"
    app.kubernetes.io/managed-by: Helm
data:
  config.yaml: |
    
    {}
---
# Source: pipeline-enterprise/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-pipeline-enterprise-worker
  labels:
    helm.sh/chart: pipeline-enterprise-0.23.0
    app.kubernetes.io/name: pipeline-enterprise
    app.kubernetes.io/instance: my-pipeline-enterprise
    app.kubernetes.io/version: "v0.23.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: worker
spec:
  type: ClusterIP
  ports:
    - port: 10000
      targetPort: telemetry
      protocol: TCP
      name: telemetry
  selector:
    app.kubernetes.io/name: pipeline-enterprise
    app.kubernetes.io/instance: my-pipeline-enterprise
    app.kubernetes.io/component: worker
---
# Source: pipeline-enterprise/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-pipeline-enterprise-worker
  labels:
    helm.sh/chart: pipeline-enterprise-0.23.0
    app.kubernetes.io/name: pipeline-enterprise
    app.kubernetes.io/instance: my-pipeline-enterprise
    app.kubernetes.io/version: "v0.23.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: worker
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: pipeline-enterprise
      app.kubernetes.io/instance: my-pipeline-enterprise
      app.kubernetes.io/component: worker
  template:
    metadata:
      labels:
        app.kubernetes.io/name: pipeline-enterprise
        app.kubernetes.io/instance: my-pipeline-enterprise
        app.kubernetes.io/component: worker
    spec:
      serviceAccountName: my-pipeline-enterprise
      securityContext:
        {}
      containers:
        - name: worker
          securityContext:
            {}
          image: "ghcr.io/banzaicloud/pipeline-enterprise:v0.23.0"
          imagePullPolicy: IfNotPresent
          args: ["worker", "--config=/etc/pipeline/config.yaml", "--telemetry-addr=0.0.0.0:10000"]
          ports:
            - name: telemetry
              containerPort: 10000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz/live
              port: telemetry
          resources:
            {}
          volumeMounts:
            - name: config
              mountPath: /etc/pipeline/config.yaml
              subPath: config.yaml
              readOnly: true
      volumes:
        - name: config
          configMap:
            name: my-pipeline-enterprise
