---
# Source: kube-ecr-secrets-operator/templates/sa.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kube-ecr-secrets-operator-controller-manager
---
# Source: kube-ecr-secrets-operator/templates/cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kube-ecr-secrets-operator-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - aws.zakariaamine.com
  resources:
  - awsecrcredentials
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - aws.zakariaamine.com
  resources:
  - awsecrcredentials/finalizers
  verbs:
  - update
- apiGroups:
  - aws.zakariaamine.com
  resources:
  - awsecrcredentials/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
# Source: kube-ecr-secrets-operator/templates/cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kube-ecr-secrets-operator-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kube-ecr-secrets-operator-manager-role
subjects:
- kind: ServiceAccount
  name: kube-ecr-secrets-operator-controller-manager
  namespace: default
---
# Source: kube-ecr-secrets-operator/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: kube-ecr-secrets-operator-webhook-service
  labels:
    app.kubernetes.io/name: kube-ecr-secrets-operator
    app.kubernetes.io/instance: my-kube-ecr-secrets-operator
spec:
  ports:
  - port: 443
    protocol: TCP
    targetPort: 9443
  selector:
    control-plane: controller-manager
---
# Source: kube-ecr-secrets-operator/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: controller-manager
    app.kubernetes.io/name: kube-ecr-secrets-operator
    app.kubernetes.io/instance: my-kube-ecr-secrets-operator
  name: kube-ecr-secrets-operator-controller-manager
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
        app.kubernetes.io/name: kube-ecr-secrets-operator
        app.kubernetes.io/instance: my-kube-ecr-secrets-operator
    spec:
      containers:
      - command:
        - /manager
        image: ghcr.io/zak905/kube-ecr-secrets-operator/controller-manager:0.1.1
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      securityContext:
        runAsNonRoot: true
      serviceAccountName: kube-ecr-secrets-operator-controller-manager
      terminationGracePeriodSeconds: 10
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: webhook-server-cert
---
# Source: kube-ecr-secrets-operator/templates/certificate.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: kube-ecr-secrets-operator-serving-cert
spec:
  dnsNames:
  - kube-ecr-secrets-operator-webhook-service.default.svc
  - kube-ecr-secrets-operator-webhook-service.default.svc.cluster.local
  issuerRef:
    kind: Issuer
    name: kube-ecr-secrets-operator-selfsigned-issuer
  secretName: webhook-server-cert
---
# Source: kube-ecr-secrets-operator/templates/certificate.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: kube-ecr-secrets-operator-selfsigned-issuer
spec:
  selfSigned: {}
---
# Source: kube-ecr-secrets-operator/templates/validating-webhook-config.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: default/kube-ecr-secrets-operator-serving-cert
  name: kube-ecr-secrets-operator-mutating-webhook-configuration
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: kube-ecr-secrets-operator-webhook-service
      namespace: default
      path: /validate-mutate-awsecrcredential
  failurePolicy: Fail
  name: ecrcredential.zakariaamine.com
  objectSelector:
    matchExpressions:
    - key: control-plane
      operator: NotIn
      values:
      - controller-manager
  rules:
  - apiGroups:
    - aws.zakariaamine.com
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - awsecrcredentials
  sideEffects: NoneOnDryRun
