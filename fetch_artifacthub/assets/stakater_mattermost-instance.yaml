---
# Source: mattermost-instance/charts/minio/templates/tenant/service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: minio-tenant
  namespace: default
---
# Source: mattermost-instance/templates/rbac.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: mattermost-instance
  labels:
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
rules:
  - verbs:
      - "*"
    apiGroups:
      - installation.mattermost.com
    resources:
      - mattermosts
---
# Source: mattermost-instance/charts/minio/templates/tenant/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: minio-tenant-role
  namespace: default
rules:
  - apiGroups:
      - "apiextensions.k8s.io"
    resources:
      - customresourcedefinitions
    verbs:
      - get
      - update
  - apiGroups:
      - ""
    resources:
      - persistentvolumeclaims
    verbs:
      - get
      - update
      - list
  - apiGroups:
      - ""
    resources:
      - namespaces
      - nodes
    verbs:
      - get
      - watch
      - list
  - apiGroups:
      - ""
    resources:
      - pods
      - services
      - events
      - configmaps
    verbs:
      - get
      - watch
      - create
      - list
      - delete
      - deletecollection
      - update
      - patch
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - get
      - watch
      - create
      - update
      - list
      - delete
      - deletecollection
  - apiGroups:
      - apps
    resources:
      - statefulsets
      - deployments
      - deployments/finalizers
    verbs:
      - get
      - create
      - list
      - patch
      - watch
      - update
      - delete
  - apiGroups:
      - batch
    resources:
      - jobs
    verbs:
      - get
      - create
      - list
      - patch
      - watch
      - update
      - delete
  - apiGroups:
      - "certificates.k8s.io"
    resources:
      - "certificatesigningrequests"
      - "certificatesigningrequests/approval"
      - "certificatesigningrequests/status"
    verbs:
      - update
      - create
      - get
      - delete
      - list
  - apiGroups:
      - certificates.k8s.io
    resourceNames:
      - kubernetes.io/legacy-unknown
      - kubernetes.io/kube-apiserver-client
      - kubernetes.io/kubelet-serving
      - beta.eks.amazonaws.com/app-serving
    resources:
      - signers
    verbs:
      - approve
      - sign
  - apiGroups:
      - minio.min.io
    resources:
      - "*"
    verbs:
      - "*"
  - apiGroups:
      - min.io
    resources:
      - "*"
    verbs:
      - "*"
  - apiGroups:
      - monitoring.coreos.com
    resources:
      - prometheuses
    verbs:
      - '*'
  - apiGroups:
      - "coordination.k8s.io"
    resources:
      - leases
    verbs:
      - get
      - update
      - create
  - apiGroups:
      - security.openshift.io 
    resourceNames:
      - anyuid
    resources:
      - securitycontextconstraints 
    verbs: 
      - use
---
# Source: mattermost-instance/charts/minio/templates/tenant/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: minio-tenant-binding
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: minio-tenant-role
subjects:
  - kind: ServiceAccount
    name: minio-tenant
    namespace: default
---
# Source: mattermost-instance/charts/postgres-instance/templates/postgres-exporter-service.yaml
kind: Service
apiVersion: v1
metadata:
  name: postgres-exporter
  namespace: default
  labels:
    postgres-operator.crunchydata.com/cluster: postgres
    postgres-operator.crunchydata.com/crunchy-postgres-exporter: "true"
spec:
  ports:
    - name: exporter
      protocol: TCP
      port: 9187
      targetPort: 9187
  selector:
    postgres-operator.crunchydata.com/cluster: postgres
    postgres-operator.crunchydata.com/crunchy-postgres-exporter: "true"
---
# Source: mattermost-instance/templates/mattermost-forecastle.yaml
apiVersion: forecastle.stakater.com/v1alpha1
kind: ForecastleApp
metadata:
  name: stakater
  namespace: default
spec:
  name: Mattermost
  group: Stakater
  icon: https://user-images.githubusercontent.com/7205829/137170381-fe86eef0-bccc-4fdd-8e92-b258884ebdd7.png
  urlFrom:
    routeRef:
      name: stakater 
  networkRestricted: false
---
# Source: mattermost-instance/templates/mattermost-tenant.yaml
apiVersion: installation.mattermost.com/v1beta1
kind: Mattermost
metadata:
  name: stakater-mattermost                        # Chose the desired name
  namespace: default
spec:
  probes:
    livenessProbe:
      failureThreshold: 3
      httpGet:
        path: /api/v4/system/ping
        port: 8065
        scheme: HTTP
      initialDelaySeconds: 60
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 50
    readinessProbe:
      failureThreshold: 6
      httpGet:
        path: /api/v4/system/ping
        port: 8065
        scheme: HTTP
      initialDelaySeconds: 60
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 50
  size: 500users                               # Adjust to your requirements
  replicas: 2
  scheduling:
    resources:
      limits:
        cpu: "2"
        memory: 4Gi
      requests:
        cpu: 500m
        memory: 500Mi
  ingress:
    enabled: false 
    host: stakater-mattermost-instance.apps.devtest.vxdqgl7u.kubeapp.cloud        # Adjust to your domain
    annotations:
      kubernetes.io/ingress.class: nginx
  version: 7.4.0
  licenseSecret:                               # If you have created secret in step 1, put its name here
  database:
    external:
      secret: mattermost-postgres-connection      # Name of a Kubernetes secret that contains connection string to external database.
  fileStore:
    external:
      url: minio.mattermost-instance.svc:80
      bucket: test
      secret: minio-creds-secret
---
# Source: mattermost-instance/charts/postgres-instance/templates/postgrescluster.yaml
apiVersion: postgres-operator.crunchydata.com/v1beta1
kind: PostgresCluster
metadata:
  name: postgres
  namespace: default
spec:
  patroni:
    dynamicConfiguration:
      postgresql:
        pg_hba:
          - hostnossl all all all password
          - host  all  all 0.0.0.0/0 md5
  image: registry.developers.crunchydata.com/crunchydata/crunchy-postgres:centos8-14.2-0
  users:
  - databases:
    - documentservice-db
    name: documentservice-user
  postgresVersion: 14
  instances:
    - dataVolumeClaimSpec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 10Gi
      name: instance1
  backups:
    pgbackrest:
      repos:
      - name: repo1
        volume:
          volumeClaimSpec:
            accessModes:
            - "ReadWriteOnce"
            resources:
              requests:
                storage: 1Gi
#--------Added to reduce WAL file size and WAL file count-----------#
      global:
        repo1-retention-full: "1"
        repo1-retention-full-type: count
        archive-push-queue-max: 5G
#---------------------#
  monitoring:
    pgmonitor:
      exporter:
        image: registry.developers.crunchydata.com/crunchydata/crunchy-postgres-exporter:ubi8-5.1.1-0
---
# Source: mattermost-instance/templates/route.yaml
kind: Route
apiVersion: route.openshift.io/v1
metadata:
  name: stakater 
  namespace: default
spec:
  host: stakater-mattermost-instance.apps.devtest.vxdqgl7u.kubeapp.cloud 
  to:
    kind: Service
    name: stakater-mattermost 
    weight: 100
  port:
    targetPort: app
  tls:
    insecureEdgeTerminationPolicy: Redirect
    termination: edge
  wildcardPolicy: None
---
# Source: mattermost-instance/charts/minio/templates/tenant/sealedSecret.yaml
apiVersion: bitnami.com/v1alpha1
kind: SealedSecret
metadata:
  name: minio-creds-secret
  namespace: default
spec:
  encryptedData:
    accesskey: AgCEGU9TgW79VKGB/kTZmC+iEoBTF6KLs6lnqDmEwvNYAT7HEEdPk4Dcxk0Q/4WWW6TS67NPDm+5mSw+1yunZwHVgliW361gX4xnn2U1etPW40QkWgji/FVlgOYkF57YsBQNS2AjSFKO0iGlUNPQG7QfEU8HtuTqfqF70w6xqUFXFRvuiGVO9wGT5XiSFfsOJu+oxbUvC1fo57u2UUK7sn5eQIFxQiNu1ZvSnGdw6p63pcJSpWtLiRpe0Zplv7hASGj8mRpGYj+z2i/sWs+El9Hp8xCDSCkOrWbXTARm1TBJKoSUz2lJeQ5TZPSzfztSwWb7upQlNveX8DbUWw6N8eAwmTEmGt/46CPZR5o2m4qUy815xCn7k50kEiSw7sHNywjNEXiZvEf6P0NFUSz4Gg9lj2LhzjfyKIo6NphtOQV7AYmny+OACJ50s+InKH17eJMaaf3/HJroOF60/6ZABHHULpZJYmDjAFkLSOR9J3/7GkBW2K51Kqz+bXhySWaBurtEWpnrPzK8Ri6ncOhhU4CUzCGn5QHesludr275E4EpjD/L509nGMNB1GZRVY1AZQCf3dkjrkqe6RcFvTInCNzE3KThpSXIEckN4xgFAVgoQ8gXwQfWcqItL9F4aHFppPDFI6cns+Xy9aOxB0R4ha8bo44+/jgZF/geLSgc8B3s7HB4W7NHuy9RantNo4K0LWL/LCfzBg==
    secretkey: AgADlyacndHSHnza6okE06420z3cOV90R1IzSKeA0up657tybGv6hWGhcHxt2XtZJtT5NtDjUwlYKLftqeDkwrXUEpUR5SlHkx8ey2Ws1iTr/1z+LuAOEVGz6D/epTXnO+Og28DNwudFc51jYSJu6GssY428dAafQcubACj8EdoSfyowHXx3Ibo+9p19aEgSgMdNO55GtwNSU32VrNbgNwDPJf7IsiX392u1j9Qfgpwgrff/fJXbx0vUYAhQ37jpFsWBOoMAudZymv8ed7fVX9W5xFLXar0jKnmo5cXSCuLlQxB/pumU/3Slm0vjPrljkmQbsd1RY8V/XFmG9HktRH3rLdNaYgQF9zVfUF7oue+b+lPF/wih9RQcR9JAk/LJYLY4r1Kph9wn2SC+izTDSGADGO8pLPPwhmC55XowhQrqWtqxtiSkCMz3vpF9eRdOvjKJ3Px4g/31aFgOZ1oFkJVbIammRvzWGYtwZSlcrWfd9AG3uCnJWa/RCENN1ukUByLyyBuzFRFjjFAjwOoqN9pYUDBPp4ef1eUtHvkQkQZhXINQUAarM036QKgMUtYOirxlaWH/JCl7uMgOexGPXzFnxIC2SPwGDDjyqam5dX6nvjXbrby4d0EyMdL8kp6YP3m7ogP65UZj89lLKZsOymn0jc+xPs+0dq4gOwRG9vX4VEVsLTpT/5M0yg9Vlj1KHi6UZmVYKUkOTQ==
  template:
    metadata:
      name: minio-creds-secret
      namespace: default
---
# Source: mattermost-instance/templates/db-connection-secret.yaml
## Take connection string or uri from postgres-pguser-documentservice-user secret and use postgres instead of postgresql in the beginning to avoid uri error
## https://github.com/mattermost/mattermost-operator/issues/269
apiVersion: bitnami.com/v1alpha1
kind: SealedSecret
metadata:
  name: mattermost-postgres-connection
  namespace: default
spec:
  encryptedData:
    DB_CONNECTION_STRING: AgCHEddZlZgRm2NF+AD4e9ZTR82kyVsNDFwApmZm5BqeGWpDYtK+DCi0a767agAjwRR3mdpxzvpQKgmjz4I9yFI1sLzjr1N8AlcPKDtKDt+iD7NOX/C7mALo3qXeuRbc/YQQyyCODVzo9ob/WMDD1szXOb0QXAhO51DxFQTK06ql/elnisSwh5kKjKBRZzAx7kMEVYJ+awqIEOtJs5p+l6xtpfE1DJHB6eNrHXnw/jecM87H7DXH26+4zdCNf4Bb7aZxHbnTVmj3PUgXOFz2j/+x84glUWNXnBKALSKzP/wA5OYAMl1AH+NcOqQX8S/UOg5POb3tCxa8+ac8IJw8lBxTtl6ipk+sD1rEdnDB894iTUWxhkEDUuzTBtDGxB85AgT7J/JFrcQbhdbyCnEV5vWs7La7eJcJT7siGPZS1tN3S/c9xtw9kdNOqEAzmUf4bmvN9mALgF6lbddyGSDBMu5TcvCxgntHYk4eg5NCZK8+tdgdHwjJdNqRs8J+PpfwbjYgY9IDZYymy+qG4yR4OUFfMCIjhWGn7qIIhunWe0NfkawESFKWQYIFf05oOkkWSlmWOZqDkr8Kkn83amFRA05Wev7DyRb4PjTKf5ejMdxCF/vE8QzuYk2ZDvod+xvRgx/Ma6qj/YSMNfLWMmD33vxbW1DNDPWVv0FNJDxwnUXM1ZTDTbZY13Vn+EsIj5aUMOo61Q+Lj4nOQ/EFa6m4ECgv8svWb+BTqSjx1ZVDoVKw4fjh83uyJF2YZzvDqJutaNHaVmuMgZaLe2UVIpzzdA+OorXMaifz4FbxD/eHDmVOYJjn10OfiLgcsrH3oVuWxVc8UgPC65Vhm4YXhAlOGF/yp7399nIuoiFRfl7RoFr6XXp8Tw== 
  template:
    metadata:
      name: mattermost-postgres-connection
      namespace: default
---
# Source: mattermost-instance/charts/minio/templates/tenant/tenant.yaml
apiVersion: minio.min.io/v2
kind: Tenant
metadata:
  name: minio
spec:
  serviceAccountName: minio-tenant
# Currently there is a bug and the bucket might not be created automatically. github issue: https://github.com/minio/operator/issues/1224
  buckets:
    - name: test
      region: us-east-1
  credsSecret:
    name: minio-creds-secret
  pools:
    - servers: 1
      volumeClaimTemplate:
        metadata:
          name: data
        spec:
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: 1Gi
          storageClassName: stakater
      volumesPerServer: 1
  requestAutoCert: true
  serviceMetadata:
    consoleServiceAnnotations:
      v2.min.io: console-svc
    consoleServiceLabels:
      label: console-svc
    minioServiceAnnotations:
      v2.min.io: minio-svc
    minioServiceLabels:
      label: minio-svc
