---
# Source: sloop/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-sloop
  labels:
    helm.sh/chart: sloop-0.0.5
    app.kubernetes.io/name: sloop
    app.kubernetes.io/instance: my-sloop
    app.kubernetes.io/version: "sha-2ce8bbe"
    app.kubernetes.io/managed-by: Helm
---
# Source: sloop/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-sloop
  labels:
    helm.sh/chart: sloop-0.0.5
    app.kubernetes.io/name: sloop
    app.kubernetes.io/instance: my-sloop
    app.kubernetes.io/version: "sha-2ce8bbe"
    app.kubernetes.io/managed-by: Helm
data:
  sloop.json: |
    {
      "displayContext": "cluster",
      "defaultNamespace": "default",
      "defaultKind": "Pod",
      "defaultLookback": "1h",
      "leftBarLinks": [
      ],
      "resourceLinks": [
      ]
    }
---
# Source: sloop/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-sloop
  labels:
    helm.sh/chart: sloop-0.0.5
    app.kubernetes.io/name: sloop
    app.kubernetes.io/instance: my-sloop
    app.kubernetes.io/version: "sha-2ce8bbe"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
      - endpoints
      - events
      - limitranges
      - namespaces
      - nodes
      - persistentvolumeclaims
      - persistentvolumes
      - pods
      - replicationcontrollers
      - resourcequotas
      - services
    verbs:
      - list
      - watch
  - apiGroups:
      - batch
    resources:
      - cronjobs
      - jobs
    verbs:
      - list
      - watch
  - apiGroups:
      - extensions
      - apps
    resources:
      - daemonsets
      - deployments
      - replicasets
      - statefulsets
    verbs:
      - list
      - watch
  - apiGroups:
      - autoscaling
    resources:
      - horizontalpodautoscalers
    verbs:
      - list
      - watch
  - apiGroups:
      - extensions
      - networking.k8s.io
    resources:
      - ingress
    verbs:
      - list
      - watch
  - apiGroups:
      - policy
    resources:
      - poddisruptionbudgets
    verbs:
      - list
      - watch
  - apiGroups:
      - storage.k8s.io
    resources:
      - storageclasses
    verbs:
      - list
      - watch
  - apiGroups:
      - autoscaling.k8s.io
    resources:
      - verticalpodautoscalers
    verbs:
      - list
      - watch
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - list
      - watch
---
# Source: sloop/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-sloop
  labels:
    helm.sh/chart: sloop-0.0.5
    app.kubernetes.io/name: sloop
    app.kubernetes.io/instance: my-sloop
    app.kubernetes.io/version: "sha-2ce8bbe"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-sloop
subjects:
  - kind: ServiceAccount
    name: my-sloop
    namespace: default
---
# Source: sloop/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-sloop
  labels:
    helm.sh/chart: sloop-0.0.5
    app.kubernetes.io/name: sloop
    app.kubernetes.io/instance: my-sloop
    app.kubernetes.io/version: "sha-2ce8bbe"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: sloop
    app.kubernetes.io/instance: my-sloop
---
# Source: sloop/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-sloop
  labels:
    helm.sh/chart: sloop-0.0.5
    app.kubernetes.io/name: sloop
    app.kubernetes.io/instance: my-sloop
    app.kubernetes.io/version: "sha-2ce8bbe"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: sloop
      app.kubernetes.io/instance: my-sloop
  template:
    metadata:
      labels:
        app.kubernetes.io/name: sloop
        app.kubernetes.io/instance: my-sloop
    spec:
      serviceAccountName: my-sloop
      containers:
        - name: sloop
          command: ["/sloop"]
          args: ["--config=/config/sloop.json"]
          image: "ghcr.io/salesforce/sloop:sha-2ce8bbe"
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: http
          readinessProbe:
            httpGet:
              path: /healthz
              port: http
          volumeMounts:
            - name: config
              mountPath: /config/
      volumes:
        - name: config
          configMap:
            name: my-sloop
