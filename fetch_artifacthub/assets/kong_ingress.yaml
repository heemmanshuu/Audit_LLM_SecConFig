---
# Source: ingress/charts/controller/templates/service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-ingress-controller
  namespace: default
  labels:
    app.kubernetes.io/name: controller
    helm.sh/chart: controller-2.41.1
    app.kubernetes.io/instance: "my-ingress"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "3.6"
---
# Source: ingress/charts/gateway/templates/service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-ingress-gateway
  namespace: default
  labels:
    app.kubernetes.io/name: gateway
    helm.sh/chart: gateway-2.41.1
    app.kubernetes.io/instance: "my-ingress"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "3.6"
---
# Source: ingress/charts/controller/templates/admission-webhook.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-ingress-controller-validation-webhook-ca-keypair
  namespace:  default
  labels:
    app.kubernetes.io/name: controller
    helm.sh/chart: controller-2.41.1
    app.kubernetes.io/instance: "my-ingress"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "3.6"
type: kubernetes.io/tls
data:
    tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURJekNDQWd1Z0F3SUJBZ0lRRENwcEtpRDVlV2ZvaEFtNFYzeU9yREFOQmdrcWhraUc5dzBCQVFzRkFEQWMKTVJvd0dBWURWUVFERXhGcmIyNW5MV0ZrYldsemMybHZiaTFqWVRBZUZ3MHlOREE1TVRZd09ERXhNemhhRncwegpOREE1TVRRd09ERXhNemhhTUJ3eEdqQVlCZ05WQkFNVEVXdHZibWN0WVdSdGFYTnphVzl1TFdOaE1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXhuUnlUQzE0SSswQXJiUk1tNXlKSWN2RGF5Z3gKZnBIOS8zQ3VLeFZrQzFJM0xUQzQzcFd6RWZTTERiUDVCdlRPYTRxdGl2Nk1pOWNXSWdObUFoTCtJcXlEMGdETQpLZ2tRZUdaeHNHUWxTRC9NV0FDcTV6MDFTbUJCVEN5ckJ4SUMvRTJ1S2FFbktqWHhrWFRuUDNYMnc1Q0xmQm5HCjJZbUFkaWFFb1czTmVZd1F1MXVIbHBOaDZWTm5IS0k3WWNUWTlMc0w4RGdld1Y3Vm9nRi9SVklRbjhlUU5oQVkKbXBqdTA5bnZNd1drVDVNZjJZVjF3dDQxOWlSVjhyS1ZBcGlxWTBRb29qc3VFK044TXdxMTdEOU5id2pNeFBpego2YVM1SmduRXhVR2pEalM3VlhKcVNobmJRV0xFN3M4Q2oyaGk1enc0OFQ4bCtmME9tTUl2L2p5eFVRSURBUUFCCm8yRXdYekFPQmdOVkhROEJBZjhFQkFNQ0FxUXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0VHQ0NzR0FRVUYKQndNQ01BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZIckt5eTBaM1RoTDBPRnNoOUxXNVFWMQpod2ZGTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFCSCsrbHIwTTZaUU5saWxlREk1N1BMN1pEb2RlM1J4SktYCkZmTnZ2d3htZTFsVWFZcVFPNE5oTUE2SExGMmtnUW4raHNaRjU5QldRYWxSMkhMSWJnekE2Qll6MnM4QVh1ZmcKRnNuSXJ3d3Y2WEZBMm0zdkZIVlNYNXNvdE1uUWhEdlhyZUlIVWlaTmFrZ2MxanVSdWxReGxSbGdFV3YrUUhpQgpxVi81VjhoQ3hUcTV2REVmU1RnSXNoM0l3V09KQ1FQNWxYS2dVZUxveWsxVVU4Nk1sbDBCU1N4cGFqbWlJRlBlClJLelhBcVNqc2NPdWIzYVRYZXNnVjFzOXNyNkpjUzVBYnkvdUdQS2YyeC9teXBBSnBvRzVQRWs2UVp4cjdZSEwKUWptOVdMNm5yUzdoc3c1K0lmdGtjMFAzMngzYk1SbTgwU2duKzZaRjNQK2xScUFmR29pKwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBeG5SeVRDMTRJKzBBcmJSTW01eUpJY3ZEYXlneGZwSDkvM0N1S3hWa0MxSTNMVEM0CjNwV3pFZlNMRGJQNUJ2VE9hNHF0aXY2TWk5Y1dJZ05tQWhMK0lxeUQwZ0RNS2drUWVHWnhzR1FsU0QvTVdBQ3EKNXowMVNtQkJUQ3lyQnhJQy9FMnVLYUVuS2pYeGtYVG5QM1gydzVDTGZCbkcyWW1BZGlhRW9XM05lWXdRdTF1SApscE5oNlZObkhLSTdZY1RZOUxzTDhEZ2V3VjdWb2dGL1JWSVFuOGVRTmhBWW1wanUwOW52TXdXa1Q1TWYyWVYxCnd0NDE5aVJWOHJLVkFwaXFZMFFvb2pzdUUrTjhNd3ExN0Q5TmJ3ak14UGl6NmFTNUpnbkV4VUdqRGpTN1ZYSnEKU2huYlFXTEU3czhDajJoaTV6dzQ4VDhsK2YwT21NSXYvanl4VVFJREFRQUJBb0lCQURJU3Y2UW85TjlidFlnZQpyaFcxY1lSdGZXbFVRdWpFdldudWJJUENhZlBSVXNxOE9Ha3hMSFdqVmxLbXpuYkszaXFVV3lWdkJOZGo5ZG12Ck1kWGtKT3RxeS9mNDY0clByckF5YVEwd3Q1ZDdRWHdTN3d4WmpWQ3U2TXJubWwrMlU3cUZmeVJSM1NmeFpIcG4KSE5JT1dhME9rNk5FZmIvMXljd0YvQUVmUzNFWFM3S3Jxekl6VDNIR2NDeFYxZUltTVNqQ3B4eGowYkhtSFFRNwp2bTFaQksxbFdLNHJCWlZESklsZkcyUE5MTlNlNXVpZTBMeEh6NnQ1WUt5K2xlRmdpMlBqYWFndEpuTmFCYnZvClVEZThicUp6VEE5TkdUMDlrcG56blpGZHR5MTYwY25pOUlZbGdVLzZWT1RwSmg3KzZVNHZBcjdEV1Mrb1hOMzMKanR6Z3cyRUNnWUVBL2dJaUFXSExGN2tnWVhMUU1IUDRENGdXYldPMkNpSGp1eEI5dU1kQkF0ZW5wL21OTVN4YgpNUVZ4c2pRaW9pbGFaSGpQM1pVeTRneGVBekRHd0dHV3dHTVVWWk5TSmZFZXZ0Sy80VnV2eHJBNTY0RTgwckxmClN2RHZ5TjVLUTNmMXIrd1VTaHpIR0VaMXFONExyNXZycGpPQ1BReVowZk5TZEorNldrSlhWYWNDZ1lFQXlBTE4KVDc2bTB4YTRBZ2RiMnNCSWxpcVNTcGU3czI5dC9ndmVKVGkzK1Q4ODZ3ZlJQbDZmN1d0RkhWNWQrNDZ4cmdKZQp3UUJVMFpJeUloejJrS0trVlMvalVwRzNKQjVOZEZZSys3TnFKZ2ozQjkycHFrL091TVhwTWJORkJRQ2FkVHM0CnYwNzZ0a015NHR1cFJMUzlvV0ErL0V5V0dHZzhyUEtsVEhBNmtFY0NnWUJVYlRNT1VJbm5sYkhNa2hQZXR2MFIKZElNMzByZVVBSlduL0tBOUJZVjNRMlRIY1N2YjEwbHNMc29PbUVPV3NMWUp4Um9hSlZnblNFTUxQbkFoUzQ2RwozYWZKbGREdEtZcTFsR2tRcDUveUkycnMreVRUUjM3dWNzelFjQW94Q0xOUnlOOHBqdzBoNVhHQU1tV2g5ZXBLCmNMNXVPano2U3F6eWRKREZKVjNQNndLQmdRQ0FlTXhJSEw0cmVMeFpFVUQvRWVPT0VXcEdYNUJCZ2FHMVBRcEQKL2xxdHp1RGlWdk1nak1kTlNVbnJ3Mkc2NDcxZGVFaEUwR0dxKzYwWUhHS0VKUFJKZzZrUXNHaGkydFFGbGY4WQpEZlp3MS9GVkxCeC9PU1FmcTRCT1hFaEpIa29ZWXlIZ1FHcnFCOS8zdUFEU0VRWjlVY1VqYWs0Ky96VjZJYUhyCnAycjJvUUtCZ1FEbDk4YXJnZlo1Q09BT3dodllmUDBhZlJoRTVVMndVWmQ0aDZUVVh1QWxJczVyTzhwcTZMangKY3VYemtZZnZrZmtnRE41VlJ4MFM0cVdpTjRwMnlndzlGNmFFSFdJY1dMdFM5RzdLU3A0cS9HUk1EK25IWEVTbQp0cXNta2g3S3V0QU9LTkRIVVJmMG5jSFk4NlV1VTNrTEkvU1l2aDJZVzZoMnVFUUI5bVlLYkE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: ingress/charts/controller/templates/admission-webhook.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-ingress-controller-validation-webhook-keypair
  namespace:  default
  labels:
    app.kubernetes.io/name: controller
    helm.sh/chart: controller-2.41.1
    app.kubernetes.io/instance: "my-ingress"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "3.6"
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURpVENDQW5HZ0F3SUJBZ0lSQVB4b3gya05xNm0vdSs4THRLaXhrU2N3RFFZSktvWklodmNOQVFFTEJRQXcKSERFYU1CZ0dBMVVFQXhNUmEyOXVaeTFoWkcxcGMzTnBiMjR0WTJFd0hoY05NalF3T1RFMk1EZ3hNVE00V2hjTgpNelF3T1RFME1EZ3hNVE00V2pBL01UMHdPd1lEVlFRREV6UnRlUzFwYm1keVpYTnpMV052Ym5SeWIyeHNaWEl0CmRtRnNhV1JoZEdsdmJpMTNaV0pvYjI5ckxtUmxabUYxYkhRdWMzWmpNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUYKQUFPQ0FROEFNSUlCQ2dLQ0FRRUF4STJTcU1MWUp3enpLaG1idERBODVJSXphQ2ZnTUZIcm5OcjNWL1VwOHRPdwoxU01VUUZXRFF4QWptaEU5UW0xWjZOS1plZ3N0amRFR2ltbFBFdjhTdWgwb1BoS3JsYUd4MWxEbUJ0SVkyRGFECnp5Y0FaTjVFSmcxWFhVNkJxUi9sVW8vUTNFdExBbzUwWWptbVdpYkc3ZVE2ak9Uai81Sk5mb0pidlVwTUdsM2gKWDRQZjZRSGRjbGFFUmpsSldFVS9KRy9mb3VqaFlkVDJEclVWeWNZc0xzS0pqVlF1RTN0eks4dUVFSUhmQ0UwKwpGSEpSTWViRXJmMnBOV0NCUkhLb2RGYjMwZ0NPejZaYmpwb2VmTDNqN01tR0YzTnE2eHFwMWYzdmppTktzQzZ1CnZoMTJCUlI5MlJNanc2RVN5RzdTVnhkSjBRV3NCc0tlTm1ZQ3FLNndzUUlEQVFBQm80R2lNSUdmTUE0R0ExVWQKRHdFQi93UUVBd0lGb0RBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdEQVlEVlIwVApBUUgvQkFJd0FEQWZCZ05WSFNNRUdEQVdnQlI2eXNzdEdkMDRTOURoYklmUzF1VUZkWWNIeFRBL0JnTlZIUkVFCk9EQTJnalJ0ZVMxcGJtZHlaWE56TFdOdmJuUnliMnhzWlhJdGRtRnNhV1JoZEdsdmJpMTNaV0pvYjI5ckxtUmwKWm1GMWJIUXVjM1pqTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFCalU5d2k3Wno3ZlRPK09xVVB5c0g3YTZOdAplb1lZbVhIQ0ZLSGxLMDdwUFNsWGpxWTYwQ3M3V0x6MFZURFFXQU50dGZLVXNoVnZTeFdUbGlNMitTNU1FY1hWCkp1Uk1Ndk1EWExmT0ptaTcwRjB2dlJWamVrby83SzVHMVZmcXpBOXUrK3lyOCtlM3dkSFdBaWZwekFIaXNQOXIKenRQSWgyVXBRZWllRE4xLytLUlZrUUJxdi9UQW0xd2FNR1Z0VkIzcVZIZjBGYnVSNU9XOVRyWHdZZWRyUSsxdQpReFVGMWNLcnpUQXlqVDRaUWdkMWd5dks4OUdTN25rNGZQLzVTdUkxL0l1TFk0MjJFaFFINkFWQm10WjhCMmg1CjM5TG05SVZJMVJnUkdRUmx5bnc2RDN4SVhNbVFINU5wSWd5Mk1vVitYYk1UdEV1K0p5QndrYmZXbmJGegotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBeEkyU3FNTFlKd3p6S2htYnREQTg1SUl6YUNmZ01GSHJuTnIzVi9VcDh0T3cxU01VClFGV0RReEFqbWhFOVFtMVo2TktaZWdzdGpkRUdpbWxQRXY4U3VoMG9QaEtybGFHeDFsRG1CdElZMkRhRHp5Y0EKWk41RUpnMVhYVTZCcVIvbFVvL1EzRXRMQW81MFlqbW1XaWJHN2VRNmpPVGovNUpOZm9KYnZVcE1HbDNoWDRQZgo2UUhkY2xhRVJqbEpXRVUvSkcvZm91amhZZFQyRHJVVnljWXNMc0tKalZRdUUzdHpLOHVFRUlIZkNFMCtGSEpSCk1lYkVyZjJwTldDQlJIS29kRmIzMGdDT3o2WmJqcG9lZkwzajdNbUdGM05xNnhxcDFmM3ZqaU5Lc0M2dXZoMTIKQlJSOTJSTWp3NkVTeUc3U1Z4ZEowUVdzQnNLZU5tWUNxSzZ3c1FJREFRQUJBb0lCQUVkQmgreTBqb1pCdEpvTApwSjREYXQvd3I5QlB2SC9vQXdIZmhCSVlLRGdITkxGZ1FVUTlmQlBBOHhjMHJyKzVRd0liNzFZR1hXSnZaKzZmCjFQSHZGUXZ4N0Jmc3p0VzFRL0tOYTRjSGZjaE1veVpqWGtvekpnT2hqSTJnRzNPRHc3QlZ3UU5NTElwbHVKMnYKaHJaaUhuWTU2bHdQMHZSaFJzVFpYNGJWTzVmRzA3cDQrN2Y2ak9HNHE1NzZ3eS9MTWpTQVdiSm90V0FUYmhoLwp0a1pDL2s4YkY2OWlpRjhQc2JMWjVwZUZZQ3ZMMW00Z2l3aXhFakE3V1l3YjVaZFFBd0x1SlJUakpCc1pVVWhXCktIU3ZYL1hxa3Y2Z09ZcHVSRGtBWnZQcVN0ZHB1WHRxbkR5amMvV3VwMFo0ODJtZzA4dEZNWVZKNEVFWXNiWkQKdDYxZlQ5MENnWUVBOXdEQjN1RGNGRGFIcmhYWWlHTnZGNVZjcDBFdjVKcFFUS0NMVExOcVI1clBZdzZNalJyRQpXdTk1WG9wUTVIQVpacmtuS0J5bjhvRCs5Z25YcFB0WGhxVXZSbGM1RjY4eDdKdlZLaUEyUWJ3U3BlSkhHcWhFCk5pQUlUSU5MWWk4T0ZUL2NnOEx6aGJvdDVMR0hmL0k1dzZzK2QwS0lad3pGQk00TC8reVlUVThDZ1lFQXk3WmgKMDFZR2doV1Nva0lGNWZaSmVsaHVCSlFxaVFiK3Vub1gwNFNIY0ZEcVFLbUlPS29aNFpjbGd5YzQxa3JMdUtZTQp4YlF4NzRCdC91OFg5dlk5by9XYjNpUWRVY3pRMWFMeHhQbXNHWG5GNEJrSm5kMkkxV2RSWFNHeHVZZDN0eXBuCkY5UGN0dncwWUo5TlU1VUJod0VBTjdkemV1SXEvdTNJYTkwMW9mOENnWUFVSzlPcFIrT3hJdUxockpjS1RGUisKTUl4b2ZFSlZBT1VkM042RFhRT0k1WE9hTzAzdkdBaUJCSjE4d3Y3b0tOOXFMQ1N1ZWVpZFBUdVZEQ2k0S0c1MQphSGY3M3BPakE0T29OdkdwaHdmblJseWZmMk1mSWk2djNOM1FvY2crTkdtS0FyVVhiWXhGbDNhMy9tZDZZMldrClBRL1UzWElXT0V5K243VUxLVjhtc1FLQmdETm92SGxUL1dKNHhUK1RmOStQN3Uwa1FlZC82TmdaM3RENm5PYXgKVEdqSTBzVXN3NGJoVHBUQ3l5RzFGVC9uTWxCUC8yc3BWV3pHc1h1anBSMmErT1ZXeDFZaE1SRUNxalV2NE9tLwp4SEhOYkdWb2pDZTl6NWxqY0lJYlRibXZlVVBOUEtVanYxQ2loeWxYS25HTWFnMUM4R1lmTXRKeEh6NmtqVzdECkxaVExBb0dBYWQ5aXdDVklsVFl4UGZPWE1zVzJDNkxIVmtJeG5adFRLNkZDTzU3MmZvSlMya0tXdXB4ODAyVHcKblc4eHdSdEhoakpoaTR2UzVicEFLbVJzbkZ6Z1BldEFLYm1lM0R5ampZQlc1QXhxVWJPVkJwdmRyUHdzTzZ1dwpsWm93bzl5U0dZKzNpMUpwSEpBU2I2SEEyL0dmWk04OUJieFBXRXZOQ3dCRHpzZjFFajQ9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: ingress/charts/controller/templates/controller-rbac-resources.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/name: controller
    helm.sh/chart: controller-2.41.1
    app.kubernetes.io/instance: "my-ingress"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "3.6"
  name: my-ingress-controller
rules:

- apiGroups:
  - configuration.konghq.com
  resources:
  - kongcustomentities
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongcustomentities/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongupstreampolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongupstreampolicies/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongconsumergroups
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongconsumergroups/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - ingressclassparameterses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongconsumers
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongconsumers/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongingresses/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongplugins
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongplugins/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - tcpingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - tcpingresses/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - udpingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - udpingresses/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - extensions
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - extensions
  resources:
  - ingresses/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch

- apiGroups:
  - configuration.konghq.com
  resources:
  - konglicenses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - konglicenses/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongvaults
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongvaults/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongclusterplugins
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongclusterplugins/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingressclasses
  verbs:
  - get
  - list
  - watch
---
# Source: ingress/charts/controller/templates/controller-rbac-resources.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-ingress-controller
  labels:
    app.kubernetes.io/name: controller
    helm.sh/chart: controller-2.41.1
    app.kubernetes.io/instance: "my-ingress"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "3.6"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-ingress-controller
subjects:
  - kind: ServiceAccount
    name: my-ingress-controller
    namespace: default
---
# Source: ingress/charts/controller/templates/controller-rbac-resources.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: my-ingress-controller
  namespace: default
  labels:
    app.kubernetes.io/name: controller
    helm.sh/chart: controller-2.41.1
    app.kubernetes.io/instance: "my-ingress"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "3.6"
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
      - pods
      - secrets
      - namespaces
    verbs:
      - get
  - apiGroups:
      - ""
    resources:
      - configmaps
    resourceNames:
      # Defaults to "<election-id>-<ingress-class>"
      # Here: "<kong-ingress-controller-leader-nginx>-<nginx>"
      # This has to be adapted if you change either parameter
      # when launching the nginx-ingress-controller.
      - "kong-ingress-controller-leader-kong-kong"
    verbs:
      - get
      - update
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - create
  # Begin KIC 2.x leader permissions
  - apiGroups:
      - ""
      - coordination.k8s.io
    resources:
      - configmaps
      - leases
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
  - apiGroups:
      - ""
    resources:
      - services
    verbs:
      - get
---
# Source: ingress/charts/controller/templates/controller-rbac-resources.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: my-ingress-controller
  namespace: default
  labels:
    app.kubernetes.io/name: controller
    helm.sh/chart: controller-2.41.1
    app.kubernetes.io/instance: "my-ingress"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "3.6"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: my-ingress-controller
subjects:
  - kind: ServiceAccount
    name: my-ingress-controller
    namespace: default
---
# Source: ingress/charts/controller/templates/admission-webhook.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-ingress-controller-validation-webhook
  namespace: default
  labels:
    app.kubernetes.io/name: controller
    helm.sh/chart: controller-2.41.1
    app.kubernetes.io/instance: "my-ingress"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "3.6"
spec:
  ports:
  - name: webhook
    port: 443
    protocol: TCP
    targetPort: webhook
  selector:
    app.kubernetes.io/name: controller
    helm.sh/chart: controller-2.41.1
    app.kubernetes.io/instance: "my-ingress"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "3.6"
    app.kubernetes.io/component: app
---
# Source: ingress/charts/gateway/templates/service-kong-admin.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-ingress-gateway-admin
  namespace: default
  labels:
    app.kubernetes.io/name: gateway
    helm.sh/chart: gateway-2.41.1
    app.kubernetes.io/instance: "my-ingress"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "3.6"
spec:
  type: ClusterIP
  ports:
  - name: kong-admin-tls
    port: 8444
    targetPort: 8444
    protocol: TCP
  clusterIP: None
  selector:
    app.kubernetes.io/name: gateway
    app.kubernetes.io/component: app
    app.kubernetes.io/instance: "my-ingress"
---
# Source: ingress/charts/gateway/templates/service-kong-manager.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-ingress-gateway-manager
  namespace: default
  labels:
    app.kubernetes.io/name: gateway
    helm.sh/chart: gateway-2.41.1
    app.kubernetes.io/instance: "my-ingress"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "3.6"
spec:
  type: NodePort
  ports:
  - name: kong-manager
    port: 8002
    targetPort: 8002
    protocol: TCP
  - name: kong-manager-tls
    port: 8445
    targetPort: 8445
    protocol: TCP
  selector:
    app.kubernetes.io/name: gateway
    app.kubernetes.io/component: app
    app.kubernetes.io/instance: "my-ingress"
---
# Source: ingress/charts/gateway/templates/service-kong-proxy.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-ingress-gateway-proxy
  namespace: default
  labels:
    app.kubernetes.io/name: gateway
    helm.sh/chart: gateway-2.41.1
    app.kubernetes.io/instance: "my-ingress"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "3.6"
    enable-metrics: "true"
spec:
  type: LoadBalancer
  ports:
  - name: kong-proxy
    port: 80
    targetPort: 8000
    protocol: TCP
  - name: kong-proxy-tls
    port: 443
    targetPort: 8443
    protocol: TCP
  selector:
    app.kubernetes.io/name: gateway
    app.kubernetes.io/component: app
    app.kubernetes.io/instance: "my-ingress"
---
# Source: ingress/charts/controller/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-ingress-controller
  namespace:  default
  labels:
    app.kubernetes.io/name: controller
    helm.sh/chart: controller-2.41.1
    app.kubernetes.io/instance: "my-ingress"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "3.6"
    app.kubernetes.io/component: app
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: controller
      app.kubernetes.io/component: app
      app.kubernetes.io/instance: "my-ingress"

  template:
    metadata:
      annotations:
        kuma.io/service-account-token-volume: my-ingress-controller-token
        kuma.io/gateway: "enabled"
        traffic.kuma.io/exclude-outbound-ports: "8444"
        traffic.sidecar.istio.io/excludeOutboundPorts: "8444"
        traffic.sidecar.istio.io/includeInboundPorts: ""
      labels:
        app.kubernetes.io/name: controller
        helm.sh/chart: controller-2.41.1
        app.kubernetes.io/instance: "my-ingress"
        app.kubernetes.io/managed-by: "Helm"
        app.kubernetes.io/version: "3.6"
        app.kubernetes.io/component: app
        app: my-ingress-controller
        version: "3.6"
    spec:
      serviceAccountName: my-ingress-controller
      automountServiceAccountToken: false
      
      containers:
      - name: ingress-controller
        securityContext:
      
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        args:
        
        ports:
        - name: webhook
          containerPort: 8080
          protocol: TCP
        - name: cmetrics
          containerPort: 10255
          protocol: TCP
        - name: cstatus
          containerPort: 10254
          protocol: TCP
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace  
        
        
        
        
        
        
        - name: CONTROLLER_ADMISSION_WEBHOOK_LISTEN
          value: "0.0.0.0:8080"
        - name: CONTROLLER_ELECTION_ID
          value: "kong-ingress-controller-leader-kong"
        - name: CONTROLLER_INGRESS_CLASS
          value: "kong"
        - name: CONTROLLER_KONG_ADMIN_SVC
          value: "default/my-ingress-gateway-admin"
        - name: CONTROLLER_KONG_ADMIN_TLS_SKIP_VERIFY
          value: "true"
        - name: CONTROLLER_PUBLISH_SERVICE
          value: "default/my-ingress-gateway-proxy"
        
        image: kong/kubernetes-ingress-controller:3.3
        imagePullPolicy: IfNotPresent
      
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /readyz
            port: 10254
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 10254
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        resources:
          {}
        volumeMounts:
        - name: webhook-cert
          mountPath: /admission-webhook
          readOnly: true
        - name: my-ingress-controller-token
          mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          readOnly: true
        
        
       
      securityContext:
        {}
      terminationGracePeriodSeconds: 30
      volumes:
        - name: my-ingress-controller-prefix-dir
          emptyDir:
            sizeLimit: 256Mi
        - name: my-ingress-controller-tmp
          emptyDir:
            sizeLimit: 1Gi
        - name: my-ingress-controller-token
          projected:
            sources:
            - serviceAccountToken:
                expirationSeconds: 3607
                path: token
            - configMap:
                items:
                - key: ca.crt
                  path: ca.crt
                name: kube-root-ca.crt
            - downwardAPI:
                items:
                - fieldRef:
                    apiVersion: v1
                    fieldPath: metadata.namespace
                  path: namespace
        - name: webhook-cert
          secret:
            secretName: my-ingress-controller-validation-webhook-keypair
---
# Source: ingress/charts/gateway/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-ingress-gateway
  namespace:  default
  labels:
    app.kubernetes.io/name: gateway
    helm.sh/chart: gateway-2.41.1
    app.kubernetes.io/instance: "my-ingress"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "3.6"
    app.kubernetes.io/component: app
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: gateway
      app.kubernetes.io/component: app
      app.kubernetes.io/instance: "my-ingress"

  template:
    metadata:
      annotations:
        kuma.io/service-account-token-volume: my-ingress-gateway-token
        kuma.io/gateway: "enabled"
        traffic.sidecar.istio.io/includeInboundPorts: ""
      labels:
        app.kubernetes.io/name: gateway
        helm.sh/chart: gateway-2.41.1
        app.kubernetes.io/instance: "my-ingress"
        app.kubernetes.io/managed-by: "Helm"
        app.kubernetes.io/version: "3.6"
        app.kubernetes.io/component: app
        app: my-ingress-gateway
        version: "3.6"
    spec:
      serviceAccountName: my-ingress-gateway
      automountServiceAccountToken: false
      
      initContainers:
      - name: clear-stale-pid
        image: kong:3.6
        imagePullPolicy: IfNotPresent
        securityContext:
        
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        resources:
          {}
        command:
        - "rm"
        - "-vrf"
        - "$KONG_PREFIX/pids"
        env:
         
        
        
        - name: KONG_ADMIN_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_ADMIN_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ADMIN_GUI_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_ADMIN_GUI_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ADMIN_LISTEN
          value: "0.0.0.0:8444 http2 ssl, [::]:8444 http2 ssl"
        - name: KONG_CLUSTER_LISTEN
          value: "off"
        - name: KONG_DATABASE
          value: "off"
        - name: KONG_LUA_PACKAGE_PATH
          value: "/opt/?.lua;/opt/?/init.lua;;"
        - name: KONG_NGINX_WORKER_PROCESSES
          value: "2"
        - name: KONG_PORTAL_API_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_PORTAL_API_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_PORT_MAPS
          value: "80:8000, 443:8443"
        - name: KONG_PREFIX
          value: "/kong_prefix/"
        - name: KONG_PROXY_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_PROXY_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_PROXY_LISTEN
          value: "0.0.0.0:8000, [::]:8000, 0.0.0.0:8443 http2 ssl, [::]:8443 http2 ssl"
        - name: KONG_PROXY_STREAM_ACCESS_LOG
          value: "/dev/stdout basic"
        - name: KONG_PROXY_STREAM_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ROLE
          value: "traditional"
        - name: KONG_ROUTER_FLAVOR
          value: "traditional"
        - name: KONG_STATUS_ACCESS_LOG
          value: "off"
        - name: KONG_STATUS_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_STATUS_LISTEN
          value: "0.0.0.0:8100, [::]:8100"
        - name: KONG_STREAM_LISTEN
          value: "off"
        
        volumeMounts:
        - name: my-ingress-gateway-prefix-dir
          mountPath: /kong_prefix/
        - name: my-ingress-gateway-tmp
          mountPath: /tmp
      containers:
      - name: "proxy"
        image: kong:3.6
        imagePullPolicy: IfNotPresent
        securityContext:
        
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        env:
         
        
        
        - name: KONG_ADMIN_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_ADMIN_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ADMIN_GUI_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_ADMIN_GUI_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ADMIN_LISTEN
          value: "0.0.0.0:8444 http2 ssl, [::]:8444 http2 ssl"
        - name: KONG_CLUSTER_LISTEN
          value: "off"
        - name: KONG_DATABASE
          value: "off"
        - name: KONG_LUA_PACKAGE_PATH
          value: "/opt/?.lua;/opt/?/init.lua;;"
        - name: KONG_NGINX_WORKER_PROCESSES
          value: "2"
        - name: KONG_PORTAL_API_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_PORTAL_API_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_PORT_MAPS
          value: "80:8000, 443:8443"
        - name: KONG_PREFIX
          value: "/kong_prefix/"
        - name: KONG_PROXY_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_PROXY_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_PROXY_LISTEN
          value: "0.0.0.0:8000, [::]:8000, 0.0.0.0:8443 http2 ssl, [::]:8443 http2 ssl"
        - name: KONG_PROXY_STREAM_ACCESS_LOG
          value: "/dev/stdout basic"
        - name: KONG_PROXY_STREAM_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ROLE
          value: "traditional"
        - name: KONG_ROUTER_FLAVOR
          value: "traditional"
        - name: KONG_STATUS_ACCESS_LOG
          value: "off"
        - name: KONG_STATUS_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_STATUS_LISTEN
          value: "0.0.0.0:8100, [::]:8100"
        - name: KONG_STREAM_LISTEN
          value: "off"
        - name: KONG_NGINX_DAEMON
          value: "off"
        
        lifecycle:
          preStop:
            exec:
              command:
              - kong
              - quit
              - --wait=15
        ports:
        - name: admin-tls
          containerPort: 8444
          protocol: TCP
        - name: proxy
          containerPort: 8000
          protocol: TCP
        - name: proxy-tls
          containerPort: 8443
          protocol: TCP
        - name: status
          containerPort: 8100
          protocol: TCP
        volumeMounts:
          - name: my-ingress-gateway-prefix-dir
            mountPath: /kong_prefix/
          - name: my-ingress-gateway-tmp
            mountPath: /tmp
          
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /status/ready
            port: status
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /status
            port: status
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        resources:
          {} 
      securityContext:
        {}
      terminationGracePeriodSeconds: 30
      volumes:
        - name: my-ingress-gateway-prefix-dir
          emptyDir:
            sizeLimit: 256Mi
        - name: my-ingress-gateway-tmp
          emptyDir:
            sizeLimit: 1Gi
        - name: my-ingress-gateway-token
          projected:
            sources:
            - serviceAccountToken:
                expirationSeconds: 3607
                path: token
            - configMap:
                items:
                - key: ca.crt
                  path: ca.crt
                name: kube-root-ca.crt
            - downwardAPI:
                items:
                - fieldRef:
                    apiVersion: v1
                    fieldPath: metadata.namespace
                  path: namespace
---
# Source: ingress/charts/controller/templates/admission-webhook.yaml
kind: ValidatingWebhookConfiguration
apiVersion: admissionregistration.k8s.io/v1
metadata:
  name: my-ingress-controller-validations
  namespace: default
  labels:
    app.kubernetes.io/name: controller
    helm.sh/chart: controller-2.41.1
    app.kubernetes.io/instance: "my-ingress"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "3.6"
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURJekNDQWd1Z0F3SUJBZ0lRRENwcEtpRDVlV2ZvaEFtNFYzeU9yREFOQmdrcWhraUc5dzBCQVFzRkFEQWMKTVJvd0dBWURWUVFERXhGcmIyNW5MV0ZrYldsemMybHZiaTFqWVRBZUZ3MHlOREE1TVRZd09ERXhNemhhRncwegpOREE1TVRRd09ERXhNemhhTUJ3eEdqQVlCZ05WQkFNVEVXdHZibWN0WVdSdGFYTnphVzl1TFdOaE1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXhuUnlUQzE0SSswQXJiUk1tNXlKSWN2RGF5Z3gKZnBIOS8zQ3VLeFZrQzFJM0xUQzQzcFd6RWZTTERiUDVCdlRPYTRxdGl2Nk1pOWNXSWdObUFoTCtJcXlEMGdETQpLZ2tRZUdaeHNHUWxTRC9NV0FDcTV6MDFTbUJCVEN5ckJ4SUMvRTJ1S2FFbktqWHhrWFRuUDNYMnc1Q0xmQm5HCjJZbUFkaWFFb1czTmVZd1F1MXVIbHBOaDZWTm5IS0k3WWNUWTlMc0w4RGdld1Y3Vm9nRi9SVklRbjhlUU5oQVkKbXBqdTA5bnZNd1drVDVNZjJZVjF3dDQxOWlSVjhyS1ZBcGlxWTBRb29qc3VFK044TXdxMTdEOU5id2pNeFBpego2YVM1SmduRXhVR2pEalM3VlhKcVNobmJRV0xFN3M4Q2oyaGk1enc0OFQ4bCtmME9tTUl2L2p5eFVRSURBUUFCCm8yRXdYekFPQmdOVkhROEJBZjhFQkFNQ0FxUXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0VHQ0NzR0FRVUYKQndNQ01BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZIckt5eTBaM1RoTDBPRnNoOUxXNVFWMQpod2ZGTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFCSCsrbHIwTTZaUU5saWxlREk1N1BMN1pEb2RlM1J4SktYCkZmTnZ2d3htZTFsVWFZcVFPNE5oTUE2SExGMmtnUW4raHNaRjU5QldRYWxSMkhMSWJnekE2Qll6MnM4QVh1ZmcKRnNuSXJ3d3Y2WEZBMm0zdkZIVlNYNXNvdE1uUWhEdlhyZUlIVWlaTmFrZ2MxanVSdWxReGxSbGdFV3YrUUhpQgpxVi81VjhoQ3hUcTV2REVmU1RnSXNoM0l3V09KQ1FQNWxYS2dVZUxveWsxVVU4Nk1sbDBCU1N4cGFqbWlJRlBlClJLelhBcVNqc2NPdWIzYVRYZXNnVjFzOXNyNkpjUzVBYnkvdUdQS2YyeC9teXBBSnBvRzVQRWs2UVp4cjdZSEwKUWptOVdMNm5yUzdoc3c1K0lmdGtjMFAzMngzYk1SbTgwU2duKzZaRjNQK2xScUFmR29pKwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    service:
      name: my-ingress-controller-validation-webhook
      namespace: default
  failurePolicy: Ignore
  matchPolicy: Equivalent
  name: secrets.credentials.validation.ingress-controller.konghq.com
  objectSelector:
    matchExpressions:
    - key: "konghq.com/credential"
      operator: "Exists"
  rules:
  - apiGroups:
    - ""
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - secrets
  sideEffects: None
- admissionReviewVersions:
  - v1
  clientConfig:
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURJekNDQWd1Z0F3SUJBZ0lRRENwcEtpRDVlV2ZvaEFtNFYzeU9yREFOQmdrcWhraUc5dzBCQVFzRkFEQWMKTVJvd0dBWURWUVFERXhGcmIyNW5MV0ZrYldsemMybHZiaTFqWVRBZUZ3MHlOREE1TVRZd09ERXhNemhhRncwegpOREE1TVRRd09ERXhNemhhTUJ3eEdqQVlCZ05WQkFNVEVXdHZibWN0WVdSdGFYTnphVzl1TFdOaE1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXhuUnlUQzE0SSswQXJiUk1tNXlKSWN2RGF5Z3gKZnBIOS8zQ3VLeFZrQzFJM0xUQzQzcFd6RWZTTERiUDVCdlRPYTRxdGl2Nk1pOWNXSWdObUFoTCtJcXlEMGdETQpLZ2tRZUdaeHNHUWxTRC9NV0FDcTV6MDFTbUJCVEN5ckJ4SUMvRTJ1S2FFbktqWHhrWFRuUDNYMnc1Q0xmQm5HCjJZbUFkaWFFb1czTmVZd1F1MXVIbHBOaDZWTm5IS0k3WWNUWTlMc0w4RGdld1Y3Vm9nRi9SVklRbjhlUU5oQVkKbXBqdTA5bnZNd1drVDVNZjJZVjF3dDQxOWlSVjhyS1ZBcGlxWTBRb29qc3VFK044TXdxMTdEOU5id2pNeFBpego2YVM1SmduRXhVR2pEalM3VlhKcVNobmJRV0xFN3M4Q2oyaGk1enc0OFQ4bCtmME9tTUl2L2p5eFVRSURBUUFCCm8yRXdYekFPQmdOVkhROEJBZjhFQkFNQ0FxUXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0VHQ0NzR0FRVUYKQndNQ01BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZIckt5eTBaM1RoTDBPRnNoOUxXNVFWMQpod2ZGTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFCSCsrbHIwTTZaUU5saWxlREk1N1BMN1pEb2RlM1J4SktYCkZmTnZ2d3htZTFsVWFZcVFPNE5oTUE2SExGMmtnUW4raHNaRjU5QldRYWxSMkhMSWJnekE2Qll6MnM4QVh1ZmcKRnNuSXJ3d3Y2WEZBMm0zdkZIVlNYNXNvdE1uUWhEdlhyZUlIVWlaTmFrZ2MxanVSdWxReGxSbGdFV3YrUUhpQgpxVi81VjhoQ3hUcTV2REVmU1RnSXNoM0l3V09KQ1FQNWxYS2dVZUxveWsxVVU4Nk1sbDBCU1N4cGFqbWlJRlBlClJLelhBcVNqc2NPdWIzYVRYZXNnVjFzOXNyNkpjUzVBYnkvdUdQS2YyeC9teXBBSnBvRzVQRWs2UVp4cjdZSEwKUWptOVdMNm5yUzdoc3c1K0lmdGtjMFAzMngzYk1SbTgwU2duKzZaRjNQK2xScUFmR29pKwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    service:
      name: my-ingress-controller-validation-webhook
      namespace: default
  failurePolicy: Ignore
  matchPolicy: Equivalent
  name: secrets.plugins.validation.ingress-controller.konghq.com
  objectSelector:
    matchExpressions:
    - key: owner
      operator: NotIn
      values:
      - helm
  rules:
  - apiGroups:
    - ""
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - secrets
  sideEffects: None
- name: validations.kong.konghq.com
  objectSelector:
    matchExpressions:
    - key: owner
      operator: NotIn
      values:
      - helm
  failurePolicy: Ignore
  sideEffects: None
  admissionReviewVersions: ["v1beta1"]
  rules:
  - apiGroups:
    - configuration.konghq.com
    apiVersions:
    - '*'
    operations:
    - CREATE
    - UPDATE
    resources:
    - kongconsumers
    - kongplugins
    - kongclusterplugins
    - kongingresses
  - apiGroups:
    - ''
    apiVersions:
    - 'v1'
    operations:
    - CREATE
    - UPDATE
    resources:
    - services
  - apiGroups:
    - networking.k8s.io
    apiVersions:
      - 'v1'
    operations:
    - CREATE
    - UPDATE
    resources:
    - ingresses
  - apiGroups:
    - gateway.networking.k8s.io
    apiVersions:
    - 'v1alpha2'
    - 'v1beta1'
    - 'v1'
    operations:
    - CREATE
    - UPDATE
    resources:
    - gateways
    - httproutes
  clientConfig:
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURJekNDQWd1Z0F3SUJBZ0lRRENwcEtpRDVlV2ZvaEFtNFYzeU9yREFOQmdrcWhraUc5dzBCQVFzRkFEQWMKTVJvd0dBWURWUVFERXhGcmIyNW5MV0ZrYldsemMybHZiaTFqWVRBZUZ3MHlOREE1TVRZd09ERXhNemhhRncwegpOREE1TVRRd09ERXhNemhhTUJ3eEdqQVlCZ05WQkFNVEVXdHZibWN0WVdSdGFYTnphVzl1TFdOaE1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXhuUnlUQzE0SSswQXJiUk1tNXlKSWN2RGF5Z3gKZnBIOS8zQ3VLeFZrQzFJM0xUQzQzcFd6RWZTTERiUDVCdlRPYTRxdGl2Nk1pOWNXSWdObUFoTCtJcXlEMGdETQpLZ2tRZUdaeHNHUWxTRC9NV0FDcTV6MDFTbUJCVEN5ckJ4SUMvRTJ1S2FFbktqWHhrWFRuUDNYMnc1Q0xmQm5HCjJZbUFkaWFFb1czTmVZd1F1MXVIbHBOaDZWTm5IS0k3WWNUWTlMc0w4RGdld1Y3Vm9nRi9SVklRbjhlUU5oQVkKbXBqdTA5bnZNd1drVDVNZjJZVjF3dDQxOWlSVjhyS1ZBcGlxWTBRb29qc3VFK044TXdxMTdEOU5id2pNeFBpego2YVM1SmduRXhVR2pEalM3VlhKcVNobmJRV0xFN3M4Q2oyaGk1enc0OFQ4bCtmME9tTUl2L2p5eFVRSURBUUFCCm8yRXdYekFPQmdOVkhROEJBZjhFQkFNQ0FxUXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0VHQ0NzR0FRVUYKQndNQ01BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZIckt5eTBaM1RoTDBPRnNoOUxXNVFWMQpod2ZGTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFCSCsrbHIwTTZaUU5saWxlREk1N1BMN1pEb2RlM1J4SktYCkZmTnZ2d3htZTFsVWFZcVFPNE5oTUE2SExGMmtnUW4raHNaRjU5QldRYWxSMkhMSWJnekE2Qll6MnM4QVh1ZmcKRnNuSXJ3d3Y2WEZBMm0zdkZIVlNYNXNvdE1uUWhEdlhyZUlIVWlaTmFrZ2MxanVSdWxReGxSbGdFV3YrUUhpQgpxVi81VjhoQ3hUcTV2REVmU1RnSXNoM0l3V09KQ1FQNWxYS2dVZUxveWsxVVU4Nk1sbDBCU1N4cGFqbWlJRlBlClJLelhBcVNqc2NPdWIzYVRYZXNnVjFzOXNyNkpjUzVBYnkvdUdQS2YyeC9teXBBSnBvRzVQRWs2UVp4cjdZSEwKUWptOVdMNm5yUzdoc3c1K0lmdGtjMFAzMngzYk1SbTgwU2duKzZaRjNQK2xScUFmR29pKwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    service:
      name: my-ingress-controller-validation-webhook
      namespace: default
