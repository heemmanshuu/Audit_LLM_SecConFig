---
# Source: tenant-operator/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: controller-manager
  namespace: default
  labels:
    helm.sh/chart: tenant-operator-0.7.0
    app.kubernetes.io/name: tenant-operator
    app.kubernetes.io/instance: my-tenant-operator
    app.kubernetes.io/version: "0.7.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: tenant-operator/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-tenant-operator-manager-role
rules:
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - validatingwebhookconfigurations
  verbs:
  - create
  - patch
  - get
  - list
  - watch
- apiGroups:
  - argoproj.io
  resources:
  - appprojects
  - appprojects/finalizers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
- apiGroups:
  - ""
  resources:
  - limitranges
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces/finalizers
  verbs:
  - update
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - kubernetes-client.io
  resources:
  - externalsecrets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - quota.openshift.io
  resources:
  - clusterresourcequotas
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterrolebindings
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - rolebindings
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - tenantoperator.stakater.com
  resources:
  - integrationconfigs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - tenantoperator.stakater.com
  resources:
  - integrationconfigs/finalizers
  verbs:
  - update
- apiGroups:
  - tenantoperator.stakater.com
  resources:
  - integrationconfigs/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - tenantoperator.stakater.com
  resources:
  - quotas
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - tenantoperator.stakater.com
  resources:
  - quotas/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - tenantoperator.stakater.com
  resources:
  - templategroupinstances
  - templateinstances
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - tenantoperator.stakater.com
  resources:
  - templategroupinstances/finalizers
  verbs:
  - update
- apiGroups:
  - tenantoperator.stakater.com
  resources:
  - templategroupinstances/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - tenantoperator.stakater.com
  resources:
  - templateinstances
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - tenantoperator.stakater.com
  resources:
  - templateinstances/finalizers
  verbs:
  - update
- apiGroups:
  - tenantoperator.stakater.com
  resources:
  - templateinstances/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - tenantoperator.stakater.com
  resources:
  - templates
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - tenantoperator.stakater.com
  resources:
  - templates/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - tenantoperator.stakater.com
  resources:
  - tenants
  - tenants/finalizers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - tenantoperator.stakater.com
  resources:
  - tenants/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - user.openshift.io
  resources:
  - groups
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - apps
  resources:
  - deployments
  - statefulsets
  verbs:
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - tenantoperator.stakater.com
  resources:
  - resourcesupervisors
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - tenantoperator.stakater.com
  resources:
  - resourcesupervisors/finalizers
  verbs:
  - update
- apiGroups:
  - tenantoperator.stakater.com
  resources:
  - resourcesupervisors/status
  verbs:
  - get
  - patch
  - update
---
# Source: tenant-operator/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-tenant-operator-metrics-reader
rules:
- nonResourceURLs:
  - "/metrics"
  verbs:
  - get
---
# Source: tenant-operator/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-tenant-operator-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
# Source: tenant-operator/templates/owner_role.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: owner
rules:
  - verbs:
      - create
      - update
      - patch
    apiGroups:
      - ''
    resources:
      - namespaces
---
# Source: tenant-operator/templates/user-roles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
  name: templateinstances-edit-role
rules:
  - apiGroups:
      - tenantoperator.stakater.com
    resources:
      - templateinstances
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
---
# Source: tenant-operator/templates/user-roles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    rbac.authorization.k8s.io/aggregate-to-view: "true"
  name: templateinstances-view-role
rules:
  - apiGroups:
      - tenantoperator.stakater.com
    resources:
      - templateinstances
    verbs:
      - get
      - list
      - watch
---
# Source: tenant-operator/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-tenant-operator-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-tenant-operator-manager-role
subjects:
- kind: ServiceAccount
  name: controller-manager
  namespace: default
---
# Source: tenant-operator/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-tenant-operator-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-tenant-operator-proxy-role
subjects:
- kind: ServiceAccount
  name: controller-manager
  namespace: default
---
# Source: tenant-operator/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-tenant-operator-metrics-reader-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-tenant-operator-metrics-reader
subjects:
- kind: ServiceAccount
  name: controller-manager
  namespace: default
---
# Source: tenant-operator/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-tenant-operator-admin-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: admin
subjects:
- kind: ServiceAccount
  name: controller-manager
  namespace: default
---
# Source: tenant-operator/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-tenant-operator-owner-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: owner
subjects:
- kind: ServiceAccount
  name: controller-manager
  namespace: default
---
# Source: tenant-operator/templates/role.yaml
# permissions to do leader election.
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: my-tenant-operator-leader-election-role
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
# Source: tenant-operator/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: my-tenant-operator-leader-election-rolebinding
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: my-tenant-operator-leader-election-role
subjects:
- kind: ServiceAccount
  name: controller-manager
  namespace: default
---
# Source: tenant-operator/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-tenant-operator-quota-template-metrics-service
  namespace: default
  labels:
    control-plane: controller-manager-quota-template
    helm.sh/chart: tenant-operator-0.7.0
    app.kubernetes.io/name: tenant-operator
    app.kubernetes.io/instance: my-tenant-operator
    app.kubernetes.io/version: "0.7.0"
    app.kubernetes.io/managed-by: Helm
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    control-plane: controller-manager-quota-template
---
# Source: tenant-operator/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-tenant-operator-admission-webhooks-metrics-service
  namespace: default
  labels:
    control-plane: controller-manager-admission-webhooks
    helm.sh/chart: tenant-operator-0.7.0
    app.kubernetes.io/name: tenant-operator
    app.kubernetes.io/instance: my-tenant-operator
    app.kubernetes.io/version: "0.7.0"
    app.kubernetes.io/managed-by: Helm
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    control-plane: controller-manager-admission-webhooks
---
# Source: tenant-operator/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-tenant-operator-tenant-metrics-service
  namespace: default
  labels:
    control-plane: controller-manager-tenant
    helm.sh/chart: tenant-operator-0.7.0
    app.kubernetes.io/name: tenant-operator
    app.kubernetes.io/instance: my-tenant-operator
    app.kubernetes.io/version: "0.7.0"
    app.kubernetes.io/managed-by: Helm
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    control-plane: controller-manager-tenant
---
# Source: tenant-operator/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-tenant-operator-template-instance-metrics-service
  namespace: default
  labels:
    control-plane: controller-manager-template-instance
    helm.sh/chart: tenant-operator-0.7.0
    app.kubernetes.io/name: tenant-operator
    app.kubernetes.io/instance: my-tenant-operator
    app.kubernetes.io/version: "0.7.0"
    app.kubernetes.io/managed-by: Helm
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    control-plane: controller-manager-template-instance
---
# Source: tenant-operator/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-tenant-operator-template-group-metrics-service
  namespace: default
  labels:
    control-plane: controller-manager-template-group-instance
    helm.sh/chart: tenant-operator-0.7.0
    app.kubernetes.io/name: tenant-operator
    app.kubernetes.io/instance: my-tenant-operator
    app.kubernetes.io/version: "0.7.0"
    app.kubernetes.io/managed-by: Helm
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    control-plane: controller-manager-template-group-instance
---
# Source: tenant-operator/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-tenant-operator-admission-webhooks-service
  namespace: default
  labels:
    helm.sh/chart: tenant-operator-0.7.0
    app.kubernetes.io/name: tenant-operator
    app.kubernetes.io/instance: my-tenant-operator
    app.kubernetes.io/version: "0.7.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    service.beta.openshift.io/serving-cert-secret-name: admission-webhooks-server-cert
spec:
  type: ClusterIP
  ports:
    - port: 443
      targetPort: 9443
  selector:
    control-plane: controller-manager-admission-webhooks
---
# Source: tenant-operator/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-tenant-operator-tenant-webhook-service
  namespace: default
  labels:
    helm.sh/chart: tenant-operator-0.7.0
    app.kubernetes.io/name: tenant-operator
    app.kubernetes.io/instance: my-tenant-operator
    app.kubernetes.io/version: "0.7.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    service.beta.openshift.io/serving-cert-secret-name: tenant-webhook-server-cert
spec:
  type: ClusterIP
  ports:
    - port: 443
      targetPort: 9443
  selector:
    control-plane: controller-manager-tenant
---
# Source: tenant-operator/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-tenant-operator-quota-template-webhook-service
  namespace: default
  labels:
    helm.sh/chart: tenant-operator-0.7.0
    app.kubernetes.io/name: tenant-operator
    app.kubernetes.io/instance: my-tenant-operator
    app.kubernetes.io/version: "0.7.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    service.beta.openshift.io/serving-cert-secret-name: quota-template-webhook-server-cert
spec:
  type: ClusterIP
  ports:
    - port: 443
      targetPort: 9443
  selector:
    control-plane: controller-manager-quota-template
---
# Source: tenant-operator/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-tenant-operator-template-instance-webhook-service
  namespace: default
  labels:
    helm.sh/chart: tenant-operator-0.7.0
    app.kubernetes.io/name: tenant-operator
    app.kubernetes.io/instance: my-tenant-operator
    app.kubernetes.io/version: "0.7.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    service.beta.openshift.io/serving-cert-secret-name: template-instance-webhook-server-cert
spec:
  type: ClusterIP
  ports:
    - port: 443
      targetPort: 9443
  selector:
    control-plane: controller-manager-template-instance
---
# Source: tenant-operator/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-tenant-operator-template-group-webhook-service
  namespace: default
  labels:
    helm.sh/chart: tenant-operator-0.7.0
    app.kubernetes.io/name: tenant-operator
    app.kubernetes.io/instance: my-tenant-operator
    app.kubernetes.io/version: "0.7.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    service.beta.openshift.io/serving-cert-secret-name: template-group-webhook-server-cert
spec:
  type: ClusterIP
  ports:
    - port: 443
      targetPort: 9443
  selector:
    control-plane: controller-manager-template-group-instance
---
# Source: tenant-operator/templates/namespace-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tenant-operator-namespace-controller
  namespace: default
  labels:
    helm.sh/chart: tenant-operator-0.7.0
    app.kubernetes.io/name: tenant-operator
    app.kubernetes.io/instance: my-tenant-operator
    app.kubernetes.io/version: "0.7.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: tenant-operator
      app.kubernetes.io/instance: my-tenant-operator
  template:
    metadata:
      labels:
        app.kubernetes.io/name: tenant-operator
        app.kubernetes.io/instance: my-tenant-operator
      annotations:
        kubectl.kubernetes.io/default-container: manager
    spec:
      imagePullSecrets:
        - name: saap-dockerconfigjson
      serviceAccountName: controller-manager
      securityContext:
        runAsNonRoot: true
      containers:
        - args:
          - --health-probe-bind-address=:8081
          - --metrics-bind-address=127.0.0.1:8080
          - --leader-elect
          command:
          - /manager
          env:
          - name: OPERATOR_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: NAMESPACE_CONTROLLER
            value: "true"
          - name: LEADER_ELECTION_ID
            value: c50b40d1.stakater.com
          image: "docker-stakater-nexus.apps.prod.clusters.stakater.io/stakater-ab/tenant-operator:v0.7.0"
          imagePullPolicy: IfNotPresent
          securityContext:
            allowPrivilegeEscalation: false
          name: manager
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8081
            initialDelaySeconds: 15
            timeoutSeconds: 15
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8081
            initialDelaySeconds: 5
            timeoutSeconds: 15
            periodSeconds: 10
          resources:
            {}
        - args:
          - --secure-listen-address=0.0.0.0:8443
          - --upstream=http://127.0.0.1:8080/
          - --logtostderr=true
          - --v=10
          # Issue: https://github.com/operator-framework/operator-sdk/issues/4813
          image: registry.redhat.io/openshift4/ose-kube-rbac-proxy:v4.11.0
          imagePullPolicy: IfNotPresent
          name: kube-rbac-proxy
          ports:
          - containerPort: 8443
            name: https
            protocol: TCP
          resources:
            limits:
              cpu: 500m
              memory: 128Mi
            requests:
              cpu: 5m
              memory: 64Mi
      terminationGracePeriodSeconds: 10
---
# Source: tenant-operator/templates/template-quota-intconfig-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tenant-operator-template-quota-intconfig-controller
  namespace: default
  labels:
    control-plane: controller-manager-quota-template
    helm.sh/chart: tenant-operator-0.7.0
    app.kubernetes.io/name: tenant-operator
    app.kubernetes.io/instance: my-tenant-operator
    app.kubernetes.io/version: "0.7.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager-quota-template
  template:
    metadata:
      labels:
        control-plane: controller-manager-quota-template
      annotations:
        kubectl.kubernetes.io/default-container: manager
    spec:
      imagePullSecrets:
        - name: saap-dockerconfigjson
      serviceAccountName: controller-manager
      securityContext:
        runAsNonRoot: true
      containers:
        - args:
          - --health-probe-bind-address=:8081
          - --metrics-bind-address=127.0.0.1:8080
          - --leader-elect
          command:
          - /manager
          env:
          - name: OPERATOR_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: TEMPLATE_QUOTA_INTEGRATIONCONFIG_CONTROLLER
            value: "true"
          - name: OPERATOR_NAME_PREFIX
            value: my-tenant-operator
          - name: ENABLE_WEBHOOKS
            value: "true"
          - name: LEADER_ELECTION_ID
            value: c59a40c1.stakater.com
          image: "docker-stakater-nexus.apps.prod.clusters.stakater.io/stakater-ab/tenant-operator:v0.7.0"
          imagePullPolicy: IfNotPresent
          securityContext:
            allowPrivilegeEscalation: false
          name: manager
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8081
            initialDelaySeconds: 15
            timeoutSeconds: 15
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8081
            initialDelaySeconds: 5
            timeoutSeconds: 15
            periodSeconds: 10
          resources:
            {}
          ports:
          - containerPort: 9443
            name: webhook-server
            protocol: TCP
          volumeMounts:
          - mountPath: /tmp/k8s-webhook-server/serving-certs
            name: cert
            readOnly: true
        - args:
          - --secure-listen-address=0.0.0.0:8443
          - --upstream=http://127.0.0.1:8080/
          - --logtostderr=true
          - --v=10
          # Issue: https://github.com/operator-framework/operator-sdk/issues/4813
          image: registry.redhat.io/openshift4/ose-kube-rbac-proxy:v4.11.0
          imagePullPolicy: IfNotPresent
          name: kube-rbac-proxy
          ports:
          - containerPort: 8443
            name: https
            protocol: TCP
          resources:
            limits:
              cpu: 500m
              memory: 128Mi
            requests:
              cpu: 5m
              memory: 64Mi
      terminationGracePeriodSeconds: 10
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName:  quota-template-webhook-server-cert
---
# Source: tenant-operator/templates/templategroupinstance-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tenant-operator-templategroupinstance-controller
  namespace: default
  labels:
    control-plane: controller-manager-template-group-instance
    helm.sh/chart: tenant-operator-0.7.0
    app.kubernetes.io/name: tenant-operator
    app.kubernetes.io/instance: my-tenant-operator
    app.kubernetes.io/version: "0.7.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager-template-group-instance
  template:
    metadata:
      labels:
        control-plane: controller-manager-template-group-instance
      annotations:
        kubectl.kubernetes.io/default-container: manager
    spec:
      imagePullSecrets:
        - name: saap-dockerconfigjson
      serviceAccountName: controller-manager
      securityContext:
        runAsNonRoot: true
      containers:
        - args:
          - --health-probe-bind-address=:8081
          - --metrics-bind-address=127.0.0.1:8080
          - --leader-elect
          command:
          - /manager
          env:
          - name: OPERATOR_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: TEMPLATEGROUPINSTANCE_CONTROLLER
            value: "true"
          - name: OPERATOR_NAME_PREFIX
            value: my-tenant-operator
          - name: ENABLE_WEBHOOKS
            value: "true"
          - name: LEADER_ELECTION_ID
            value: c51c40e1.stakater.com
          image: "docker-stakater-nexus.apps.prod.clusters.stakater.io/stakater-ab/tenant-operator:v0.7.0"
          imagePullPolicy: IfNotPresent
          securityContext:
            allowPrivilegeEscalation: false
          name: manager
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8081
            initialDelaySeconds: 15
            timeoutSeconds: 15
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8081
            initialDelaySeconds: 5
            timeoutSeconds: 15
            periodSeconds: 10
          resources:
            {}
          ports:
          - containerPort: 9443
            name: webhook-server
            protocol: TCP
          volumeMounts:
          - mountPath: /tmp/k8s-webhook-server/serving-certs
            name: cert
            readOnly: true
        - args:
          - --secure-listen-address=0.0.0.0:8443
          - --upstream=http://127.0.0.1:8080/
          - --logtostderr=true
          - --v=10
          # Issue: https://github.com/operator-framework/operator-sdk/issues/4813
          image: registry.redhat.io/openshift4/ose-kube-rbac-proxy:v4.11.0
          imagePullPolicy: IfNotPresent
          name: kube-rbac-proxy
          ports:
          - containerPort: 8443
            name: https
            protocol: TCP
          resources:
            limits:
              cpu: 500m
              memory: 128Mi
            requests:
              cpu: 5m
              memory: 64Mi
      terminationGracePeriodSeconds: 10
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName:  template-group-webhook-server-cert
---
# Source: tenant-operator/templates/templateinstance-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tenant-operator-templateinstance-controller
  namespace: default
  labels:
    control-plane: controller-manager-template-instance
    helm.sh/chart: tenant-operator-0.7.0
    app.kubernetes.io/name: tenant-operator
    app.kubernetes.io/instance: my-tenant-operator
    app.kubernetes.io/version: "0.7.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager-template-instance
  template:
    metadata:
      labels:
        control-plane: controller-manager-template-instance
      annotations:
        kubectl.kubernetes.io/default-container: manager
    spec:
      imagePullSecrets:
        - name: saap-dockerconfigjson
      serviceAccountName: controller-manager
      securityContext:
        runAsNonRoot: true
      containers:
        - args:
          - --health-probe-bind-address=:8081
          - --metrics-bind-address=127.0.0.1:8080
          - --leader-elect
          command:
          - /manager
          env:
          - name: OPERATOR_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: TEMPLATEINSTANCE_CONTROLLER
            value: "true"
          - name: OPERATOR_NAME_PREFIX
            value: my-tenant-operator
          - name: ENABLE_WEBHOOKS
            value: "true"
          - name: LEADER_ELECTION_ID
            value: c52d40f1.stakater.com
          image: "docker-stakater-nexus.apps.prod.clusters.stakater.io/stakater-ab/tenant-operator:v0.7.0"
          imagePullPolicy: IfNotPresent
          securityContext:
            allowPrivilegeEscalation: false
          name: manager
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8081
            initialDelaySeconds: 15
            timeoutSeconds: 15
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8081
            initialDelaySeconds: 5
            timeoutSeconds: 15
            periodSeconds: 10
          resources:
            {}
          ports:
          - containerPort: 9443
            name: webhook-server
            protocol: TCP
          volumeMounts:
          - mountPath: /tmp/k8s-webhook-server/serving-certs
            name: cert
            readOnly: true
        - args:
          - --secure-listen-address=0.0.0.0:8443
          - --upstream=http://127.0.0.1:8080/
          - --logtostderr=true
          - --v=10
          # Issue: https://github.com/operator-framework/operator-sdk/issues/4813
          image: registry.redhat.io/openshift4/ose-kube-rbac-proxy:v4.11.0
          imagePullPolicy: IfNotPresent
          name: kube-rbac-proxy
          ports:
          - containerPort: 8443
            name: https
            protocol: TCP
          resources:
            limits:
              cpu: 500m
              memory: 128Mi
            requests:
              cpu: 5m
              memory: 64Mi
      terminationGracePeriodSeconds: 10
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName:  template-instance-webhook-server-cert
---
# Source: tenant-operator/templates/tenant-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tenant-operator-tenant-controller
  namespace: default
  labels:
    control-plane: controller-manager-tenant
    helm.sh/chart: tenant-operator-0.7.0
    app.kubernetes.io/name: tenant-operator
    app.kubernetes.io/instance: my-tenant-operator
    app.kubernetes.io/version: "0.7.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager-tenant
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager-tenant
    spec:
      imagePullSecrets:
        - name: saap-dockerconfigjson
      serviceAccountName: controller-manager
      securityContext:
        runAsNonRoot: true
      containers:
        - args:
          - --health-probe-bind-address=:8081
          - --metrics-bind-address=127.0.0.1:8080
          - --leader-elect
          command:
          - /manager
          env:
          - name: OPERATOR_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: TENANT_CONTROLLER
            value: "true"
          - name: OPERATOR_NAME_PREFIX
            value: my-tenant-operator
          - name: ENABLE_WEBHOOKS
            value: "true"
          - name: LEADER_ELECTION_ID
            value: c53e40g1.stakater.com
          image: "docker-stakater-nexus.apps.prod.clusters.stakater.io/stakater-ab/tenant-operator:v0.7.0"
          imagePullPolicy: IfNotPresent
          securityContext:
            allowPrivilegeEscalation: false
          name: manager
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8081
            initialDelaySeconds: 15
            timeoutSeconds: 15
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8081
            initialDelaySeconds: 5
            timeoutSeconds: 15
            periodSeconds: 10
          resources:
            {}
          ports:
          - containerPort: 9443
            name: webhook-server
            protocol: TCP
          volumeMounts:
          - mountPath: /tmp/k8s-webhook-server/serving-certs
            name: cert
            readOnly: true
        - args:
          - --secure-listen-address=0.0.0.0:8443
          - --upstream=http://127.0.0.1:8080/
          - --logtostderr=true
          - --v=10
          # Issue: https://github.com/operator-framework/operator-sdk/issues/4813
          image: registry.redhat.io/openshift4/ose-kube-rbac-proxy:v4.11.0
          imagePullPolicy: IfNotPresent
          name: kube-rbac-proxy
          ports:
          - containerPort: 8443
            name: https
            protocol: TCP
          resources:
            limits:
              cpu: 500m
              memory: 128Mi
            requests:
              cpu: 5m
              memory: 64Mi
      terminationGracePeriodSeconds: 10
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName:  tenant-webhook-server-cert
---
# Source: tenant-operator/templates/webhook-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tenant-operator-admission-webhooks
  namespace: default
  labels:
    control-plane: controller-manager-admission-webhooks
    helm.sh/chart: tenant-operator-0.7.0
    app.kubernetes.io/name: tenant-operator
    app.kubernetes.io/instance: my-tenant-operator
    app.kubernetes.io/version: "0.7.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager-admission-webhooks
  template:
    metadata:
      labels:
        control-plane: controller-manager-admission-webhooks
      annotations:
        kubectl.kubernetes.io/default-container: manager
    spec:
      imagePullSecrets:
        - name: saap-dockerconfigjson
      serviceAccountName: controller-manager
      securityContext:
        runAsNonRoot: true
      containers:
        - args:
          - --health-probe-bind-address=:8081
          - --metrics-bind-address=127.0.0.1:8080
          - --leader-elect
          command:
          - /manager
          env:
          - name: OPERATOR_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: ENABLE_ADMISSION_WEBHOOKS
            value: "true"
          - name: OPERATOR_NAME_PREFIX
            value: my-tenant-operator
          - name: LEADER_ELECTION_ID
            value: c54f40h1.stakater.com
          image: "docker-stakater-nexus.apps.prod.clusters.stakater.io/stakater-ab/tenant-operator:v0.7.0"
          imagePullPolicy: IfNotPresent
          securityContext:
            allowPrivilegeEscalation: false
          name: manager
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8081
            initialDelaySeconds: 15
            timeoutSeconds: 15
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8081
            initialDelaySeconds: 5
            timeoutSeconds: 15
            periodSeconds: 10
          ports:
          - containerPort: 9443
            name: webhook-server
            protocol: TCP
          resources:
            {}
          volumeMounts:
          - mountPath: /tmp/k8s-webhook-server/serving-certs
            name: cert
            readOnly: true
        - args:
          - --secure-listen-address=0.0.0.0:8443
          - --upstream=http://127.0.0.1:8080/
          - --logtostderr=true
          - --v=10
          # Issue: https://github.com/operator-framework/operator-sdk/issues/4813
          image: registry.redhat.io/openshift4/ose-kube-rbac-proxy:v4.11.0
          imagePullPolicy: IfNotPresent
          name: kube-rbac-proxy
          ports:
          - containerPort: 8443
            name: https
            protocol: TCP
          resources:
            limits:
              cpu: 500m
              memory: 128Mi
            requests:
              cpu: 5m
              memory: 64Mi
      terminationGracePeriodSeconds: 10
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName:  admission-webhooks-server-cert
---
# Source: tenant-operator/templates/integrationconfig.yaml
apiVersion: tenantoperator.stakater.com/v1alpha1
kind: IntegrationConfig
metadata:
  name: tenant-operator-config
  namespace: default
spec:
  openshift:
    privilegedNamespaces:
    - default
    - ^openshift-*
    - ^stakater-*
    - ^kube-*
    - ^redhat-*
    - ^hive-*
    privilegedServiceAccounts:
    - ^system:serviceaccount:openshift-*
    - ^system:serviceaccount:stakater-*
    - ^system:serviceaccount:kube-*
    - ^system:serviceaccount:redhat-*
    - ^system:serviceaccount:hive-*
