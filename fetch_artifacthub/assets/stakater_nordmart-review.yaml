---
# Source: nordmart-review/charts/mongodb/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: review-mongodb
  namespace: "default"
  labels:
    app.kubernetes.io/name: mongodb
    helm.sh/chart: mongodb-12.1.15
    app.kubernetes.io/instance: my-nordmart-review
    app.kubernetes.io/managed-by: Helm
secrets:
  - name: review-mongodb
automountServiceAccountToken: true
---
# Source: nordmart-review/charts/nordmartReviewApi/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: nordmart-review-api
    appVersion: "1.0.35"
    group: com.stakater.platform
    provider: stakater
    team: stakater
    chart: "nordmartReviewApi-1.1.14"
    release: "my-nordmart-review"
    heritage: "Helm"
  namespace: default
  name: nordmart-review-api
---
# Source: nordmart-review/charts/nordmartReviewUi/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: nordmart-review-ui
    appVersion: "1.0.14"
    group: com.stakater.platform
    provider: stakater
    team: stakater
    chart: "nordmartReviewUi-1.1.14"
    release: "my-nordmart-review"
    heritage: "Helm"
  namespace: default
  name: nordmart-review-ui
---
# Source: nordmart-review/charts/mongodb/templates/common-scripts-cm.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: review-mongodb-common-scripts
  namespace: "default"
  labels:
    app.kubernetes.io/name: mongodb
    helm.sh/chart: mongodb-12.1.15
    app.kubernetes.io/instance: my-nordmart-review
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: mongodb
data:
  startup-probe.sh: |
    #!/bin/bash
    mongosh  $TLS_OPTIONS --port $MONGODB_PORT_NUMBER --eval 'db.hello().isWritablePrimary || db.hello().secondary' | grep -q 'true'
  readiness-probe.sh: |
    #!/bin/bash
    # Run the proper check depending on the version
    [[ $(mongod -version | grep "db version") =~ ([0-9]+\.[0-9]+\.[0-9]+) ]] && VERSION=${BASH_REMATCH[1]}
    . /opt/bitnami/scripts/libversion.sh
    VERSION_MAJOR="$(get_sematic_version "$VERSION" 1)"
    VERSION_MINOR="$(get_sematic_version "$VERSION" 2)"
    VERSION_PATCH="$(get_sematic_version "$VERSION" 3)"
    if [[ "$VERSION_MAJOR" -ge 5 ]] || [[ "$VERSION_MAJOR" -ge 4 ]] && [[ "$VERSION_MINOR" -ge 4 ]] && [[ "$VERSION_PATCH" -ge 2 ]]; then
        mongosh $TLS_OPTIONS --port $MONGODB_PORT_NUMBER --eval 'db.hello().isWritablePrimary || db.hello().secondary' | grep -q 'true'
    else
        mongosh  $TLS_OPTIONS --port $MONGODB_PORT_NUMBER --eval 'db.isMaster().ismaster || db.isMaster().secondary' | grep -q 'true'
    fi
  ping-mongodb.sh: |
    #!/bin/bash
    mongosh  $TLS_OPTIONS --port $MONGODB_PORT_NUMBER --eval "db.adminCommand('ping')"
---
# Source: nordmart-review/charts/nordmartReviewApi/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app: nordmart-review-api
    appVersion: "1.0.35"
    group: com.stakater.platform
    provider: stakater
    team: stakater
    chart: "nordmartReviewApi-1.1.14"
    release: "my-nordmart-review"
    heritage: "Helm"
  name: nordmart-review-api-config
  namespace: default
data:
  DB_NAME: nordmartDB
  MONGO_HOST: review-mongodb
---
# Source: nordmart-review/charts/mongodb/templates/standalone/pvc.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: review-mongodb
  namespace: "default"
  labels:
    app.kubernetes.io/name: mongodb
    helm.sh/chart: mongodb-12.1.15
    app.kubernetes.io/instance: my-nordmart-review
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: mongodb
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "8Gi"
---
# Source: nordmart-review/charts/mongodb/templates/standalone/svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: review-mongodb
  namespace: "default"
  labels:
    app.kubernetes.io/name: mongodb
    helm.sh/chart: mongodb-12.1.15
    app.kubernetes.io/instance: my-nordmart-review
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: mongodb
spec:
  type: ClusterIP
  sessionAffinity: None
  ports:
    - name: "mongodb"
      port: 27017
      targetPort: mongodb
      nodePort: null
  selector:
    app.kubernetes.io/name: mongodb
    app.kubernetes.io/instance: my-nordmart-review
    app.kubernetes.io/component: mongodb
---
# Source: nordmart-review/charts/nordmartReviewApi/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app: nordmart-review-api
    appVersion: "1.0.35"
    group: com.stakater.platform
    provider: stakater
    team: stakater
    chart: "nordmartReviewApi-1.1.14"
    release: "my-nordmart-review"
    heritage: "Helm"
  name: nordmart-review-api
  namespace: default
spec:
  selector:
    app: nordmart-review-api
  ports:
    - name: http
      port: 8080
      targetPort: 8080
---
# Source: nordmart-review/charts/nordmartReviewUi/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app: nordmart-review-ui
    appVersion: "1.0.14"
    group: com.stakater.platform
    provider: stakater
    team: stakater
    chart: "nordmartReviewUi-1.1.14"
    release: "my-nordmart-review"
    heritage: "Helm"
  name: nordmart-review-ui
  namespace: default
spec:
  selector:
    app: nordmart-review-ui
  ports:
    - name: http
      port: 8080
      protocol: TCP
      targetPort: 4200
---
# Source: nordmart-review/charts/mongodb/templates/standalone/dep-sts.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: review-mongodb
  namespace: "default"
  labels:
    app.kubernetes.io/name: mongodb
    helm.sh/chart: mongodb-12.1.15
    app.kubernetes.io/instance: my-nordmart-review
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: mongodb
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: mongodb
      app.kubernetes.io/instance: my-nordmart-review
      app.kubernetes.io/component: mongodb
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mongodb
        helm.sh/chart: mongodb-12.1.15
        app.kubernetes.io/instance: my-nordmart-review
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: mongodb
    spec:
      
      serviceAccountName: review-mongodb
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: mongodb
                    app.kubernetes.io/instance: my-nordmart-review
                    app.kubernetes.io/component: mongodb
                namespaces:
                  - "default"
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      
      containers:
        - name: mongodb
          image: docker.io/bitnami/mongodb:5.0.9-debian-10-r0
          imagePullPolicy: "IfNotPresent"
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: ALLOW_EMPTY_PASSWORD
              value: "yes"
            - name: MONGODB_SYSTEM_LOG_VERBOSITY
              value: "0"
            - name: MONGODB_DISABLE_SYSTEM_LOG
              value: "no"
            - name: MONGODB_DISABLE_JAVASCRIPT
              value: "no"
            - name: MONGODB_ENABLE_JOURNAL
              value: "yes"
            - name: MONGODB_PORT_NUMBER
              value: "27017"
            - name: MONGODB_ENABLE_IPV6
              value: "no"
            - name: MONGODB_ENABLE_DIRECTORY_PER_DB
              value: "no"
          ports:
            - name: mongodb
              containerPort: 27017
          livenessProbe:
            failureThreshold: 6
            initialDelaySeconds: 30
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 10
            exec:
              command:
                - /bitnami/scripts/ping-mongodb.sh
          readinessProbe:
            failureThreshold: 6
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
            exec:
              command:
                - /bitnami/scripts/readiness-probe.sh
          resources:
            limits:
              cpu: 0.5
              memory: 1Gi
            requests:
              cpu: 0.1
              memory: 128Mi
          volumeMounts:
            - name: datadir
              mountPath: /bitnami/mongodb
              subPath: 
            - name: common-scripts
              mountPath: /bitnami/scripts
      volumes:
        - name: common-scripts
          configMap:
            name: review-mongodb-common-scripts
            defaultMode: 0550
        - name: datadir
          persistentVolumeClaim:
            claimName: review-mongodb
---
# Source: nordmart-review/charts/nordmartReviewApi/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: nordmart-review-api
    appVersion: "1.0.35"
    group: com.stakater.platform
    provider: stakater
    team: stakater
    chart: "nordmartReviewApi-1.1.14"
    release: "my-nordmart-review"
    heritage: "Helm"
    appCategory: backend
  annotations: 
    reloader.stakater.com/auto: "true"
  name: nordmart-review-api
  namespace: default
spec:
  selector:
    matchLabels:
      app: nordmart-review-api
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: nordmart-review-api
    spec:
      containers:
      - name: nordmart-review-api
        image: "docker.io/stakater/stakater-nordmart-review:1.0.35"
        imagePullPolicy: IfNotPresent
        envFrom:
        - configMapRef:
            name: nordmart-review-api-config 
        livenessProbe:
          failureThreshold: 3
          periodSeconds: 60
          successThreshold: 1
          timeoutSeconds: 1
          initialDelaySeconds: 10
          httpGet:
            path: /actuator/health
            port: 8080 
        readinessProbe:
          failureThreshold: 3
          periodSeconds: 60
          successThreshold: 1
          timeoutSeconds: 1
          initialDelaySeconds: 10
          httpGet:
            path: /actuator/health
            port: 8080
        resources:
          limits:
            memory: 1Gi
            cpu: 0.6
          requests:
            memory: 128Mi
            cpu: 0.1
      serviceAccountName: nordmart-review-api
---
# Source: nordmart-review/charts/nordmartReviewUi/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: nordmart-review-ui
    appVersion: "1.0.14"
    group: com.stakater.platform
    provider: stakater
    team: stakater
    chart: "nordmartReviewUi-1.1.14"
    release: "my-nordmart-review"
    heritage: "Helm"
    appCategory: frontend
  annotations: 
    reloader.stakater.com/auto: "true"
  name: nordmart-review-ui
  namespace: default
spec:
  selector:
    matchLabels:
      app: nordmart-review-ui
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: nordmart-review-ui
    spec:
      containers:
      - name: nordmart-review-ui
        image: "docker.io/stakater/stakater-nordmart-review-ui:1.0.14"
        imagePullPolicy: IfNotPresent
        env:
        - name: PORT
          value: "4200"
        - name: REVIEW_API
          value: https://nordmart-review-api-default.apps.devtest.vxdqgl7u.kubeapp.cloud 
        livenessProbe:
          failureThreshold: 3
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
          initialDelaySeconds: 10
          httpGet:
            path: /health
            port: 4200 
        readinessProbe:
          failureThreshold: 3
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
          initialDelaySeconds: 10
          httpGet:
            path: /health
            port: 4200
        resources:
          limits:
            memory: 256Mi
            cpu: 0.5
          requests:
            memory: 128Mi
            cpu: 0.1
      serviceAccountName: nordmart-review-ui
---
# Source: nordmart-review/charts/nordmartReviewUi/templates/forecastle.yaml
apiVersion: forecastle.stakater.com/v1alpha1
kind: ForecastleApp
metadata:
  labels:
    app: nordmart-review-ui
    appVersion: "1.0.14"
    group: com.stakater.platform
    provider: stakater
    team: stakater
    chart: "nordmartReviewUi-1.1.14"
    release: "my-nordmart-review"
    heritage: "Helm"
  name: nordmart-review-ui
  namespace: default
spec:
  name: Nordmart Review UI
  group: Nordmart
  icon: https://raw.githubusercontent.com/stakater/ForecastleIcons/master/stakater-big.png
  urlFrom:
    routeRef:
      name: nordmart-review-ui
  networkRestricted: false
---
# Source: nordmart-review/charts/nordmartReviewApi/templates/prometheusrule.yaml
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  labels:
    app: nordmart-review-api
    appVersion: "1.0.35"
    group: com.stakater.platform
    provider: stakater
    team: stakater
    chart: "nordmartReviewApi-1.1.14"
    release: "my-nordmart-review"
    heritage: "Helm"
    prometheus: stakater-workload-monitoring
  name: nordmart-review-api
  namespace: default
spec:
  groups:
    - name: nordmart-review-low-rating-warning
      rules:
      - alert: NordmartReviewLowRatingsCritical
        annotations:
          message: 'Total ratings below 2 has crossed the threshold 8. Total reviews:
            {{ $value }}.'
        expr: |
          sum by (namespace) (nordmart_review_ratings_total{rating="2"} or nordmart_review_ratings_total{rating="1"}) > 8
        labels:
          severity: critical
---
# Source: nordmart-review/charts/nordmartReviewApi/templates/route.yaml
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: nordmart-review-api
  namespace: default
  labels:
    app: nordmart-review-api
    appVersion: "1.0.35"
    group: com.stakater.platform
    provider: stakater
    team: stakater
    chart: "nordmartReviewApi-1.1.14"
    release: "my-nordmart-review"
    heritage: "Helm"
spec:
  port:
    targetPort: http
  to:
    kind: Service
    name: nordmart-review-api
    weight: 100
  wildcardPolicy: None
  tls:
    termination: edge
    insecureEdgeTerminationPolicy: Redirect
---
# Source: nordmart-review/charts/nordmartReviewUi/templates/route.yaml
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: nordmart-review-ui
  namespace: default
  labels:
    app: nordmart-review-ui
    appVersion: "1.0.14"
    group: com.stakater.platform
    provider: stakater
    team: stakater
    chart: "nordmartReviewUi-1.1.14"
    release: "my-nordmart-review"
    heritage: "Helm"
spec:
  port:
    targetPort: http
  to:
    kind: Service
    name: nordmart-review-ui
    weight: 100
  wildcardPolicy: None
  tls:
    termination: edge
    insecureEdgeTerminationPolicy: Redirect
---
# Source: nordmart-review/charts/nordmartReviewApi/templates/servicemonitor.yaml
apiVersion: "monitoring.coreos.com/v1"
kind: ServiceMonitor
metadata:
  labels:
    app: nordmart-review-api
    appVersion: "1.0.35"
    group: com.stakater.platform
    provider: stakater
    team: stakater
    chart: "nordmartReviewApi-1.1.14"
    release: "my-nordmart-review"
    heritage: "Helm"
  name: nordmart-review-api-svc-monitor
  namespace: default
spec:
  selector:
    matchLabels:
      app: nordmart-review-api
  namespaceSelector:
    matchNames:
    - default
  endpoints:
    - interval: 5s
      path: /actuator/prometheus
      port: http
