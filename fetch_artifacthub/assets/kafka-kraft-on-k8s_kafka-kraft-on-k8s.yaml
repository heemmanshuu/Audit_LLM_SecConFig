---
# Source: kafka-kraft-on-k8s/templates/configmap_connect.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: connect-properties-cm
data:
  connect-distributed.properties: |-
    bootstrap.servers=kafka-svc.kafka-test.svc:9092
    group.id=kafka-connect-cluster
    key.converter=org.apache.kafka.connect.json.JsonConverter
    key.converter.schemas.enable=true
    value.converter=org.apache.kafka.connect.json.JsonConverter
    value.converter.schemas.enable=true
    offset.storage.topic=connect-offsets
    offset.storage.replication.factor=3
    offset.storage.partitions=25
    offset.storage.cleanup.policy=compact
    config.storage.topic=connect-configs
    config.storage.replication.factor=1
    status.storage.topic=connect-status
    status.storage.replication.factor=3
    status.storage.partitions=5
    listeners=HTTP://:8083
    plugin.path=/opt/kafka/libs
---
# Source: kafka-kraft-on-k8s/templates/configmap_controller.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: controller-properties-cm
data:
  controller.properties: |-
    process.roles=controller
    log.dirs=/mnt/kafka/0
    listeners=CONTROLLER://:9093
    controller.listener.names=CONTROLLER
    controller.listener.security.protocol.map=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,JMX:PLAINTEXT,SSL:SSL,SASL_PLAINTEXT:SASL_PLAINTEXT,SASL_SSL:SASL_SSL
    controller.quorum.voters=0@controller-0.controller-svc.kafka-test.svc:9093,1@controller-1.controller-svc.kafka-test.svc:9093,2@controller-2.controller-svc.kafka-test.svc:9093
---
# Source: kafka-kraft-on-k8s/templates/configmap_kafka.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: kafka-properties-cm
data:
  broker.properties: |-
    process.roles=broker
    listeners=PLAINTEXT://:9092
    advertised.listeners=PLAINTEXT://:9092
    log.dirs=/mnt/kafka/0
    num.partitions=8
    controller.listener.names=CONTROLLER
    inter.broker.listener.name=PLAINTEXT
    listener.security.protocol.map=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,JMX:PLAINTEXT,SSL:SSL,SASL_PLAINTEXT:SASL_PLAINTEXT,SASL_SSL:SASL_SSL
    controller.quorum.voters=0@controller-0.controller-svc.kafka-test.svc:9093,1@controller-1.controller-svc.kafka-test.svc:9093,2@controller-2.controller-svc.kafka-test.svc:9093
---
# Source: kafka-kraft-on-k8s/templates/service_connect.yaml
apiVersion: v1
kind: Service
metadata:
  name: connect-svc
  labels:
    app: connect-svc
  annotations:
    prometheus.io/port: "9000"
    prometheus.io/scrape: "true"
  namespace: kafka-test
spec:
  type: ClusterIP
  ports:
    - port: 8083
      name: "connect"
      protocol: TCP
      targetPort: 8083
    - port: 9000
      name: "prometheus"
      protocol: TCP
      targetPort: 9000
  selector:
    app: connect
---
# Source: kafka-kraft-on-k8s/templates/service_controller.yaml
apiVersion: v1
kind: Service
metadata:
  name: controller-svc
  labels:
    app: controller-svc
  annotations:
    prometheus.io/port: "9000"
    prometheus.io/scrape: "true"
  namespace: kafka-test
spec:
  type: ClusterIP
  ports:
    - port: 9093
      name: "controller"
      protocol: TCP
      targetPort: 9093
    - port: 9000
      name: "prometheus"
      protocol: TCP
      targetPort: 9000
  selector:
    app: controller
---
# Source: kafka-kraft-on-k8s/templates/service_kafka.yaml
apiVersion: v1
kind: Service
metadata:
  name: kafka-svc
  labels:
    app: kafka-svc
  annotations:
    prometheus.io/port: "9000"
    prometheus.io/scrape: "true"
  namespace: kafka-test
spec:
  type: ClusterIP
  ports:
    - port: 9092
      name: "kafka"
      protocol: TCP
      targetPort: 9092
    - port: 9093
      name: "controller"
      protocol: TCP
      targetPort: 9093
    - port: 9000
      name: "prometheus"
      protocol: TCP
      targetPort: 9000
  selector:
    app: kafkakraft
---
# Source: kafka-kraft-on-k8s/templates/sts_connect.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: connect
  annotations:
    "helm.sh/hook": pre-install
    "helm.sh/hook-weight": "3"
  labels:
    app: connect
  namespace: kafka-test
spec:
  selector:
    matchLabels:
      app: connect
  serviceName: connect-svc
  replicas: 3
  template:
    metadata:
      labels:
        app: connect
    spec:
      nodeSelector:
      securityContext:
      tolerations:
      imagePullSecrets:
      containers:
        - name: connect-container
          env:
            - name: "DEBUG"
              value: "false"
            - name: "ENVS_ENABLED"
              value: "false"
            - name: "KEY_CONVERTER"
              value: "org.apache.kafka.connect.json.JsonConverter"
            - name: "KEY_CONVERTER_SCHEMAS_ENABLE"
              value: "true"
            - name: "LISTENERS"
              value: "HTTP://:8083"
            - name: "NAMESPACE"
              value: "kafka-test"
            - name: "OFFSET_STORAGE_CLEANUP_POLICY"
              value: "compact"
            - name: "OFFSET_STORAGE_PARTITIONS"
              value: "25"
            - name: "OFFSET_STORAGE_REPLICATION_FACTOR"
              value: "3"
            - name: "PLUGIN_PATH"
              value: "/opt/kafka/libs"
            - name: "REPLICAS"
              value: "3"
            - name: "SERVICE"
              value: "kafka-svc"
            - name: "SERVICE_CONNECT"
              value: "connect-svc"
            - name: "STATUS_STORAGE_PARTITIONS"
              value: "5"
            - name: "STATUS_STORAGE_REPLICATION_FACTOR"
              value: "3"
            - name: "VALUE_CONVERTER"
              value: "org.apache.kafka.connect.json.JsonConverter"
            - name: "VALUE_CONVERTER_SCHEMAS_ENABLE"
              value: "true"
          image: kafkakraft/kafka-connect:3.7.0
          imagePullPolicy: IfNotPresent
          ports:
            - name: connect
              containerPort: 8083
            - name: prometheus
              containerPort: 9000
          livenessProbe:
            tcpSocket:
              port: 8083
            initialDelaySeconds: 5
            periodSeconds: 3
          readinessProbe:
            tcpSocket:
              port: 8083
            initialDelaySeconds: 5
            periodSeconds: 3
          resources:
          volumeMounts:
            - name: "connect-properties-cm-vol"
              mountPath: /opt/kafka/config/connect/
      volumes:
        - name: "connect-properties-cm-vol"
          configMap:
            name: "connect-properties-cm"
---
# Source: kafka-kraft-on-k8s/templates/sts_controller.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: controller
  annotations:
    "helm.sh/hook": pre-install
    "helm.sh/hook-weight": "1"
  labels:
    app: controller
  namespace: kafka-test
spec:
  selector:
    matchLabels:
      app: controller
  serviceName: controller-svc
  replicas: 3
  template:
    metadata:
      labels:
        app: controller
    spec:
      nodeSelector:
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsNonRoot: true
        runAsUser: 1001
      tolerations:
      imagePullSecrets:
      containers:
        - name: controller-container
          env:
            - name: "CLUSTER_ID"
              value: "QwjfU6MPQ_CMdFsbCx7EGg"
            - name: "CONTROLLER_LISTENERS"
              value: "CONTROLLER://:9093"
            - name: "CONTROLLER_LISTENER_NAMES"
              value: "CONTROLLER"
            - name: "CONTROLLER_LISTENER_SECURITY_PROTOCOL_MAP"
              value: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,JMX:PLAINTEXT,SSL:SSL,SASL_PLAINTEXT:SASL_PLAINTEXT,SASL_SSL:SASL_SSL"
            - name: "CONTROLLER_REPLICAS"
              value: "3"
            - name: "CONTROLLER_SERVICE"
              value: "controller-svc"
            - name: "DEBUG"
              value: "false"
            - name: "ENVS_ENABLED"
              value: "false"
            - name: "NAMESPACE"
              value: "kafka-test"
            - name: "PROCESS_ROLES"
              value: "controller"
            - name: "SERVICE"
              value: "kafka-svc"
            - name: "SHARE_DIR"
              value: "/mnt/kafka"
          image: kafkakraft/kafka-controller:3.7.0
          imagePullPolicy: IfNotPresent
          ports:
            - name: controller
              containerPort: 9093
            - name: prometheus
              containerPort: 9000
          livenessProbe:
            tcpSocket:
              port: 9093
            initialDelaySeconds: 5
            periodSeconds: 3
          readinessProbe:
            tcpSocket:
              port: 9093
            initialDelaySeconds: 5
            periodSeconds: 3
          resources:
          volumeMounts:
            - name: "kafka-storage-data"
              mountPath: /mnt/kafka
            - name: "controller-properties-cm-vol"
              mountPath: /opt/kafka/config/kraft/properties/
      volumes:
        - name: "controller-properties-cm-vol"
          configMap:
            name: "controller-properties-cm"

  volumeClaimTemplates:
    - metadata:
        name: "kafka-storage-data"
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 100Gi
---
# Source: kafka-kraft-on-k8s/templates/sts_kafka.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka
  annotations:
    "helm.sh/hook": pre-install
    "helm.sh/hook-weight": "2"
  labels:
    app: kafkakraft
  namespace: kafka-test
spec:
  selector:
    matchLabels:
      app: kafkakraft
  serviceName: kafka-svc
  replicas: 3
  template:
    metadata:
      labels:
        app: kafkakraft
    spec:
      nodeSelector:
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsNonRoot: true
        runAsUser: 1001
      tolerations:
      imagePullSecrets:
      containers:
        - name: kafka-container
          env:
            - name: "ADVERTISED_LISTENERS"
              value: "PLAINTEXT://:9092"
            - name: "AUTO_CREATE_TOPICS_ENABLE"
              value: "true"
            - name: "CLUSTER_ID"
              value: "QwjfU6MPQ_CMdFsbCx7EGg"
            - name: "CONTROLLER_LISTENER_NAMES"
              value: "CONTROLLER"
            - name: "CONTROLLER_LISTENER_SECURITY_PROTOCOL_MAP"
              value: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,JMX:PLAINTEXT,SSL:SSL,SASL_PLAINTEXT:SASL_PLAINTEXT,SASL_SSL:SASL_SSL"
            - name: "CONTROLLER_REPLICAS"
              value: "3"
            - name: "CONTROLLER_SERVICE"
              value: "controller-svc"
            - name: "DEBUG"
              value: "false"
            - name: "DEFAULT_REPLICATION_FACTOR"
              value: "3"
            - name: "ENVS_ENABLED"
              value: "false"
            - name: "INTER_BROKER_LISTENER_NAME"
              value: "PLAINTEXT"
            - name: "KAFKA_NUM_PARTITIONS"
              value: "8"
            - name: "LISTENERS"
              value: "PLAINTEXT://:9092"
            - name: "NAMESPACE"
              value: "kafka-test"
            - name: "NODE_ID_OFFSET"
              value: "1000"
            - name: "PROCESS_ROLES"
              value: "broker"
            - name: "REPLICAS"
              value: "3"
            - name: "SERVICE"
              value: "kafka-svc"
            - name: "SHARE_DIR"
              value: "/mnt/kafka"
          image: kafkakraft/kafkakraft:3.7.0
          imagePullPolicy: IfNotPresent
          ports:
            - name: kafka
              containerPort: 9092
            - name: controller
              containerPort: 9093
            - name: prometheus
              containerPort: 9000
          livenessProbe:
            tcpSocket:
              port: 9092
            initialDelaySeconds: 15
            periodSeconds: 10
          readinessProbe:
            tcpSocket:
              port: 9092
            initialDelaySeconds: 15
            periodSeconds: 10
          resources:
          volumeMounts:
            - name: "kafka-storage-data"
              mountPath: /mnt/kafka
            - name: "kafka-properties-cm-vol"
              mountPath: /opt/kafka/config/kraft/properties/
      volumes:
        - name: "kafka-properties-cm-vol"
          configMap:
            name: "kafka-properties-cm"

  volumeClaimTemplates:
    - metadata:
        name: "kafka-storage-data"
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 100Gi
