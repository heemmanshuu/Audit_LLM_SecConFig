---
# Source: faktory/templates/secret.yaml
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: my-faktory
  labels:
    app.kubernetes.io/name: faktory
    helm.sh/chart: faktory-0.12.4
    app.kubernetes.io/instance: my-faktory
    app.kubernetes.io/managed-by: Helm
data:
  password: "cEZNc2RCaFRXR1JhNndTdHpyQ2RvOVBN"
---
# Source: faktory/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-faktory
  labels:
    app.kubernetes.io/name: faktory
    helm.sh/chart: faktory-0.12.4
    app.kubernetes.io/instance: my-faktory
    app.kubernetes.io/managed-by: Helm
data:
---
# Source: faktory/templates/server-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-faktory-headless
  labels:
    app.kubernetes.io/name: faktory
    helm.sh/chart: faktory-0.12.4
    app.kubernetes.io/instance: my-faktory
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  clusterIP: None
  ports:
    - port: 7419
      name: tcp-server
      targetPort: server
      protocol: TCP
  selector:
    app.kubernetes.io/name: faktory
    app.kubernetes.io/instance: my-faktory
---
# Source: faktory/templates/ui-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-faktory-ui
  labels:
    app.kubernetes.io/name: faktory
    helm.sh/chart: faktory-0.12.4
    app.kubernetes.io/instance: my-faktory
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 7420
      name: http-ui
      targetPort: ui
  selector:
    app.kubernetes.io/name: faktory
    app.kubernetes.io/instance: my-faktory
---
# Source: faktory/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: my-faktory
  labels:
    app.kubernetes.io/name: faktory
    helm.sh/chart: faktory-0.12.4
    app.kubernetes.io/instance: my-faktory
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  serviceName: my-faktory
  updateStrategy:
    type: OnDelete
  selector:
    matchLabels:
      app.kubernetes.io/name: faktory
      app.kubernetes.io/instance: my-faktory
  template:
    metadata:
      labels:
        app.kubernetes.io/name: faktory
        app.kubernetes.io/instance: my-faktory
    spec:
      terminationGracePeriodSeconds: 10
      shareProcessNamespace: true      
      containers:
        - name: config-watcher
          image: "docker.io/library/busybox:latest"
          imagePullPolicy: IfNotPresent
          securityContext:
            capabilities:
              add:
              - SYS_PTRACE
          command:
            - sh
            - -c
            - |
              sum() {
                current=$(find /conf -type f -exec md5sum {} \; | sort -k 2 | md5sum)
              }
              sum
              last="$current"
              while true; do
                sum
                if [ "$current" != "$last" ]; then
                  pid=$(pidof faktory)
                  echo "$(date -Iseconds) [conf.d] changes detected - signaling Faktory with pid=$pid"
                  kill -HUP "$pid"
                  last="$current"
                fi
                sleep 1
              done
          volumeMounts:
            - name: configs
              mountPath: /conf
        - name: server
          image: "docker.io/contribsys/faktory:1.5.1"
          imagePullPolicy: IfNotPresent
          command:
            - /faktory
            - -b
            - :7419
            - -w
            - :7420
            - -e
            - production
          env:
            - name: FAKTORY_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: my-faktory
                  key: password
          ports:
            - containerPort: 7419
              name: server
              protocol: TCP
            - containerPort: 7420
              name: ui
          livenessProbe:
            tcpSocket:
              port: server
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          readinessProbe:
            tcpSocket:
              port: server
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          volumeMounts:
            - name: data
              mountPath: /var/lib/faktory
            - name: configs
              mountPath: /etc/faktory/conf.d
          resources:
            {}
      volumes:
        - name: configs
          configMap:
            name: my-faktory
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "8Gi"
