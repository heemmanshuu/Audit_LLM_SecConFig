---
# Source: nats-operator/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: nats-operator
---
# Source: nats-operator/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: nats-cluster-clients-auth
type: Opaque
data:
  clients-auth.json: ewogICJ1c2VycyI6IFsKICAgIHsKICAgICAgInVzZXJuYW1lIjogIm15LXVzZXIiLAogICAgICAicGFzc3dvcmQiOiAiVDBwUzNjcjN0IgogICAgfQogIF0KfQo=
---
# Source: nats-operator/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: nats-io-nats-operator-crd
rules:
# Allow creating CRDs
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs: ["get", "list", "create", "update", "watch"]
# Allow all actions on NatsClusters
- apiGroups:
  - nats.io
  resources:
  - natsclusters
  - natsserviceroles
  verbs: ["*"]
# Allowed actions on Pods
- apiGroups: [""]
  resources:
  - pods
  verbs: ["create", "watch", "get", "patch", "update", "delete", "list"]
---
# Source: nats-operator/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: nats-io-nats-operator-crd-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: nats-io-nats-operator-crd
subjects:
- kind: ServiceAccount
  name: nats-operator
  namespace: default
---
# Source: nats-operator/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: nats-io-nats-operator
rules:
# Allowed actions on Pods
- apiGroups: [""]
  resources:
  - pods
  verbs: ["create", "watch", "get", "patch", "update", "delete", "list"]

# Allowed actions on Services
- apiGroups: [""]
  resources:
  - services
  verbs: ["create", "watch", "get", "patch", "update", "delete", "list"]

# Allowed actions on Secrets
- apiGroups: [""]
  resources:
  - secrets
  verbs: ["create", "watch", "get", "update", "delete", "list"]

# Allow all actions on some special subresources
- apiGroups: [""]
  resources:
  - pods/exec
  - pods/log
  - serviceaccounts/token
  - events
  verbs: ["*"]

# Allow listing Namespaces and ServiceAccounts
- apiGroups: [""]
  resources:
  - namespaces
  - serviceaccounts
  verbs: ["list", "get", "watch"]

# Allow actions on Endpoints
- apiGroups: [""]
  resources:
  - endpoints
  verbs: ["create", "watch", "get", "update", "delete", "list"]
---
# Source: nats-operator/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: nats-io-nats-operator-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: nats-io-nats-operator
subjects:
- kind: ServiceAccount
  name: nats-operator
  namespace: default
---
# Source: nats-operator/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-nats-operator-nats-operator

  labels:
    app.kubernetes.io/name: nats-operator
    app.kubernetes.io/instance: my-nats-operator
    app.kubernetes.io/component: "operator"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "0.8.3"
    helm.sh/chart: nats-operator-0.8.3
    app: nats-operator
    chart: nats-operator-0.8.3
    release: my-nats-operator
    heritage: Helm
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 
      maxUnavailable: 
  selector:
    matchLabels:
      app: nats-operator
      release: my-nats-operator
  template:
    metadata:
      labels:
        app.kubernetes.io/name: nats-operator
        app.kubernetes.io/instance: my-nats-operator
        app.kubernetes.io/component: "operator"
        app: nats-operator
        release: my-nats-operator
    spec:
      serviceAccountName: nats-operator
      containers:
      - name: nats-operator
        image: docker.io/natsio/nats-operator:0.8.3
        imagePullPolicy: Always
        env:
        - name: MY_POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        ports:
        - name: readyz
          containerPort: 8080
        livenessProbe:
          httpGet:
            path: /readyz
            port: readyz
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 6
        readinessProbe:
          httpGet:
            path: /readyz
            port: readyz
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 6
        resources:
          {}
      securityContext:
        fsGroup: 1001
        runAsUser: 1001
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              topologyKey: kubernetes.io/hostname
              labelSelector:
                matchLabels:
                  app: "nats-operator"
                  release: "my-nats-operator"
---
# Source: nats-operator/templates/natscluster.yaml
apiVersion: "nats.io/v1alpha2"
kind: "NatsCluster"
metadata:
  name: nats-cluster
spec:
  size: 3
  version: 1.4.1

  pod:
    enableConfigReload: false
    reloaderImage: connecteverything/nats-server-config-reloader
    reloaderImageTag: 0.2.2-v1alpha2
    reloaderImagePullPolicy: IfNotPresent
    enableMetrics: false
    metricsImage: synadia/prometheus-nats-exporter
    metricsImageTag: 0.6.2
    metricsImagePullPolicy: IfNotPresent
  auth:
    enableServiceAccounts: false
    clientsAuthSecret: nats-cluster-clients-auth
    clientsAuthTimeout: 5
