---
# Source: fairwinds-metrics/templates/controller-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-fairwinds-metrics-controller
  labels:
    app.kubernetes.io/name: fairwinds-metrics
    helm.sh/chart: fairwinds-metrics-0.6.0
    app.kubernetes.io/instance: my-fairwinds-metrics
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller
---
# Source: fairwinds-metrics/templates/controller-clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-fairwinds-metrics-controller
  labels:
    app.kubernetes.io/name: fairwinds-metrics
    helm.sh/chart: fairwinds-metrics-0.6.0
    app.kubernetes.io/instance: my-fairwinds-metrics
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller
rules:
  - apiGroups:
      - ''
    resources:
      - 'namespaces'
      - 'secrets'
      - 'pods'
    verbs:
      - 'get'
      - 'list'
---
# Source: fairwinds-metrics/templates/controller-clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-fairwinds-metrics-controller
  labels:
    app.kubernetes.io/name: fairwinds-metrics
    helm.sh/chart: fairwinds-metrics-0.6.0
    app.kubernetes.io/instance: my-fairwinds-metrics
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-fairwinds-metrics-controller
subjects:
  - kind: ServiceAccount
    name: my-fairwinds-metrics-controller
    namespace: default
---
# Source: fairwinds-metrics/templates/controller-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-fairwinds-metrics-controller
  labels:
    app.kubernetes.io/name: fairwinds-metrics
    helm.sh/chart: fairwinds-metrics-0.6.0
    app.kubernetes.io/instance: my-fairwinds-metrics
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller
spec:
  type: ClusterIP
  ports:
    - port: 10042
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: fairwinds-metrics
    app.kubernetes.io/instance: my-fairwinds-metrics
    app.kubernetes.io/component: controller
---
# Source: fairwinds-metrics/templates/controller-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-fairwinds-metrics-controller
  labels:
    app.kubernetes.io/name: fairwinds-metrics
    helm.sh/chart: fairwinds-metrics-0.6.0
    app.kubernetes.io/instance: my-fairwinds-metrics
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: fairwinds-metrics
      app.kubernetes.io/instance: my-fairwinds-metrics
      app.kubernetes.io/component: controller
  template:
    metadata:
      labels:
        app.kubernetes.io/name: fairwinds-metrics
        app.kubernetes.io/instance: my-fairwinds-metrics
        app.kubernetes.io/component: controller
      annotations:
        ad.datadoghq.com/fairwinds-metrics.check_names: |
          ["prometheus"]
        ad.datadoghq.com/fairwinds-metrics.init_configs: |
          [{}]
        ad.datadoghq.com/fairwinds-metrics.instances: |
          [
            {
              "prometheus_url": "http://%%host%%:2112/metrics",
              "namespace": "fairwinds-metrics",
              "metrics": ["fairwinds_*"],
              "max_returned_metrics": "10"
            }
          ]
    spec:
      serviceAccountName: my-fairwinds-metrics-controller
      containers:
        - name: fairwinds-metrics
          image: "quay.io/fairwinds/custom-metrics:v0.6.0"
          imagePullPolicy: Always
          command:
            - /custom-metrics
            - controller
          args:
            - -v2
          securityContext:
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
            runAsNonRoot: true
            runAsUser: 10324
            capabilities:
              drop:
                - ALL
          ports:
            - name: http
              containerPort: 2112
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /metrics
              port: http
          readinessProbe:
            httpGet:
              path: /metrics
              port: http
          resources:
            limits:
              cpu: 25m
              memory: 32Mi
            requests:
              cpu: 25m
              memory: 32Mi
