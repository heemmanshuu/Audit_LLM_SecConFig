---
# Source: supabase/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: supabase
  labels:
    app.kubernetes.io/name: supabase
    helm.sh/chart: supabase-0.3.15
    app.kubernetes.io/instance: my-supabase
    app.kubernetes.io/managed-by: Helm
rules:
  # TODO: narrow api groups
  - apiGroups:
      - '*'
    resources:
      - '*'
    verbs:
      - '*'
---
# Source: supabase/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: supabase
  labels:
    app.kubernetes.io/name: supabase
    helm.sh/chart: supabase-0.3.15
    app.kubernetes.io/instance: my-supabase
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: supabase
subjects:
  - kind: ServiceAccount
    name: default
    namespace: default
---
# Source: supabase/templates/certificates/supabase.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: supabase
  labels:
    app.kubernetes.io/name: supabase
    helm.sh/chart: supabase-0.3.15
    app.kubernetes.io/instance: my-supabase
    app.kubernetes.io/managed-by: Helm
spec:
  secretName: supabase-cert
  isCA: false
  commonName: "my-supabase-release.default.svc.cluster.local"
  subject:
    organizations:
      - selfsigned
  privateKey:
    algorithm: RSA
    encoding: PKCS1
    size: 2048
  issuerRef:
    name: selfsigned
    kind: ClusterIssuer
    group: cert-manager.io
  dnsNames:
    - my-supabase-release
    - my-supabase-release.default
    - my-supabase-release.default.svc
    - my-supabase-release.default.svc.cluster.local
---
# Source: supabase/templates/releases/supabase.yaml
apiVersion: v2
kind: HelmRelease
metadata:
  name: my-supabase-release
  labels:
    app.kubernetes.io/name: supabase
    helm.sh/chart: supabase-0.3.15
    app.kubernetes.io/instance: my-supabase
    app.kubernetes.io/managed-by: Helm
spec:
  interval: 5m
  chart:
    spec:
      chart: supabase
      version: "0.3.15"
      sourceRef:
        apiVersion: v1
        kind: HelmRepository
        name: supabase
values:
  global:
    image:
      repository: "bitnami/gotrue"
      tag: "1.0.1-debian-11-r165"
      pullPolicy: "IfNotPresent"
    logLevel: info
    customTLS:
      enabled: true
      secret: my-supabase-release-letsencrypt
    podAnnotations: {}
    replicaCount: 1
    updateStrategy:
    type: "RollingUpdate"
    jwt:
      autoGenerate:
        annotations: null
    auth:
      image:
        repository: supabase/gotrue
        tag: v2.91.0
    kong:
      service:
        type: ClusterIP
      ingress:
        enabled: true
        hostname: example.bitspur.com
        annotations:
          kubernetes.io/ingress.class: nginx
          cert-manager.io/cluster-issuer: letsencryopenldappt-prod
        tls: true
    studio:
      publicURL: https://example.bitspur.com
      ingress:
        enabled: true
        hostname: example.bitspur.com
        annotations:
          kubernetes.io/ingress.class: nginx
          cert-manager.io/cluster-issuer: letsencrypt-prod
        tls: true
      default:
        replicaCount: 1
        resources: {}
      short:
        replicaCount: 1
        resources: {}
      long:
        replicaCount: 1
        resources: {}
      scheduler:
        replicaCount: 1
        resources: {}
    socketio:
      replicaCount: 1
      livenessProbe:
        tcpSocket:
          port:
        initialDelaySeconds: 5
        periodSeconds: 10
      readinessProbe:
        tcpSocket:
          port:
        initialDelaySeconds: 5
        periodSeconds: 10
      resources: {}
      service:
        type: ClusterIP
        port: 9999
    service:
      annotations: {}
      externalIPs: []
      # loadBalancerIP:
      # loadBalancerSourceRanges: []
      type: "ClusterIP"
    replication:
      enabled: false
      clusterName: "cluster.local"
      retry: 60
      timeout: 1
      interval: 00:00:00:10
      starttls: "critical"
      tls_reqcert: "never"
    persistence:
      enabled: true
    # environment:
    # DB_HOST: DATABASE.NAMESPACE.svc.cluster.local
    # DB_PORT: "5432"
    # DB_DRIVER: postgres
    # DB_NAME: postgres
    # DB_SSL: allow # disable, allow, prefer, require, verify-ca, verify-full
    # GOTRUE_API_HOST: "0.0.0.0"
    # GOTRUE_API_PORT: "9999"
    # GOTRUE_SITE_URL: https://STUDIO.EXAMPLE.COM
    # GOTRUE_URI_ALLOW_LIST: "*"
    # GOTRUE_DISABLE_SIGNUP: "false"
    # GOTRUE_JWT_DEFAULT_GROUP_NAME: authenticated
    # GOTRUE_JWT_ADMIN_ROLES: service_role
    # GOTRUE_JWT_AUD: authenticated
    # GOTRUE_JWT_EXP: "3600"
    # GOTRUE_EXTERNAL_EMAIL_ENABLED: "true"
    # GOTRUE_MAILER_AUTOCONFIRM: "true"
    # GOTRUE_SMTP_ADMIN_EMAIL: "SMTP_ADMIN_MAIL"
    # GOTRUE_SMTP_HOST: "SMTP_HOST"
    # GOTRUE_SMTP_PORT: "SMTP_PORT"
    # GOTRUE_SMTP_SENDER_NAME: "SMTP_SENDER_NAME"
    # GOTRUE_EXTERNAL_PHONE_ENABLED: "false"
    # GOTRUE_SMS_AUTOCONFIRM: "false"
    # GOTRUE_MAILER_URLPATHS_INVITE: "https://API.EXAMPLE.COM/auth/v1/verify"
    # GOTRUE_MAILER_URLPATHS_CONFIRMATION: "https://API.EXAMPLE.COM/auth/v1/verify"
    # GOTRUE_MAILER_URLPATHS_RECOVERY: "https://API.EXAMPLE.COM/auth/v1/verify"
    # GOTRUE_MAILER_URLPATHS_EMAIL_CHANGE: "https://API.EXAMPLE.COM/auth/v1/verify"
    ingress:
      ingressName: my-supabase-release
      enabled: 
      annotations:
      hosts:
        - host: ''
          paths:
          - path: /
            pathType: ImplementationSpecific
---
# Source: supabase/templates/releases/supabase.yaml
apiVersion: v2
kind: HelmRepository
metadata:
  name: supabase
  labels:
    app.kubernetes.io/name: supabase
    helm.sh/chart: supabase-0.3.15
    app.kubernetes.io/instance: my-supabase
    app.kubernetes.io/managed-by: Helm
spec:
  interval: 5m
  url: https://github.com/bitnami/charts/tree/main/bitnami/supabase
