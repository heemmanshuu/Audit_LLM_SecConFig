---
# Source: pipeline/templates/rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-pipeline
  labels:
    
    app.kubernetes.io/name: pipeline
    helm.sh/chart: pipeline-2.0.0
    app.kubernetes.io/instance: my-pipeline
    app.kubernetes.io/version: "0.82.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: pipeline/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-pipeline
  labels:
    
    app.kubernetes.io/name: pipeline
    helm.sh/chart: pipeline-2.0.0
    app.kubernetes.io/instance: my-pipeline
    app.kubernetes.io/version: "0.82.0"
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  clientId: ""
  clientSecret: ""
  tokenSigningKey: ""
---
# Source: pipeline/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-pipeline-tls
  labels:
    
    app.kubernetes.io/name: pipeline
    helm.sh/chart: pipeline-2.0.0
    app.kubernetes.io/instance: my-pipeline
    app.kubernetes.io/version: "0.82.0"
    app.kubernetes.io/managed-by: Helm
type: kubernetes.io/tls
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGekNDQWYrZ0F3SUJBZ0lRZjVhN1F2Vys1b1NWTWI0MGs4R3hWekFOQmdrcWhraUc5dzBCQVFzRkFEQVcKTVJRd0VnWURWUVFERXd0d2FYQmxiR2x1WlMxallUQWVGdzB5TkRBNU1UWXhNREF4TUROYUZ3MHlOVEE1TVRZeApNREF4TUROYU1CWXhGREFTQmdOVkJBTVRDM0JwY0dWc2FXNWxMV05oTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGCkFBT0NBUThBTUlJQkNnS0NBUUVBeTNpZkYrYjFHVEhJTjlJVSthQUkzUWxsNUZMUFYwVXNGVjkxc0dvV2dxdE4KZTN5N2FDYnlZT09iQlYzTC9aNkgxdndOb2RTVTZKSzg2U040ODhMZ2xZcjQ5d3FiRjhsOTZYZm5wZDZFbWsxdwpJQUlXaDNlY3pYaC9TSER1QUdmOXNsTzlUWm40UHFlUGdXUUhIMTNPRXNUbDJNQzQ4S0U2VGV1YWd6d0MrYk8zClF2MlUxcW5xWmVRK1ZVOHhuMGFiUkllU05pMVBKZkgyaG93SUx2VFZja05NZVJ3Sk9qVVpNUG1seGhUcGFsTjQKTEtNTU11QkFQdUszbTBlN0xURHZQMGFpUkRjVTlPak4rRk5McXAzdm5lTFJBV2x2M2RRVkYvamVqc3g0Zis5YwpUUVVZSlIzcjRDTldTd1pXTkVncEQvZFNraXZ2RHFNVDdmQU1HVExMSVFJREFRQUJvMkV3WHpBT0JnTlZIUThCCkFmOEVCQU1DQXFRd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQThHQTFVZEV3RUIKL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRk1DQnlkT3FucnZ0djBTbCtobkhDQXZZTmpjck1BMEdDU3FHU0liMwpEUUVCQ3dVQUE0SUJBUURFOXc4aEJuWm96em9lczVuei9QRWJtZDA5WFFBUVJkY2MwUHBmRTlVVHJnTlhJb2psCk9LMVpLQnFMclBMeXMvV3B2ODBISy9SYmF5NTZvMnVpNFhKNFY3eVZlQzVvM2pzM3BkdFJqN1hkOTVEQlBTeSsKWVlxWVhDMFZJRVI4NjNTbWUvOHU1TXZINTFlRC9EdTl1RlQrMUdLK0FmUGNud3lLR0YzNlIyK1pzVUlLdExHVQprYk9Rd2hLOXJ3T3BtRHE3UTJwc2JtV3N3bTc5QVFoWUUzTlNvbVY3dFkyeWpZb09pa2MxdjQ2T2xuVFpEaGppCjRDYUVOejVkRmtTZUkvOGZHTEdocnZudisvTjZEWUNESTZOU3c5bWFVRFBnQ0paWUlIMDgzT1NzdWJ1ZkFCdDkKcDlkTkNDRWVab01sMy8wOUwzRlBBS1k5UUdWdlhjNmh6QjgvCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTekNDQWpPZ0F3SUJBZ0lRZjlFNVNRNEFkWFJDMHUrU3UzMTNWREFOQmdrcWhraUc5dzBCQVFzRkFEQVcKTVJRd0VnWURWUVFERXd0d2FYQmxiR2x1WlMxallUQWVGdzB5TkRBNU1UWXhNREF4TUROYUZ3MHlOVEE1TVRZeApNREF4TUROYU1CWXhGREFTQmdOVkJBTVRDMjE1TFhCcGNHVnNhVzVsTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGCkFBT0NBUThBTUlJQkNnS0NBUUVBN21Rb0VoUVkxVXBSLzNLT2hKekhjdWpZeXYzTXllZHJVNDdYNG1jWXUwaGsKT3AyZ0tRUnNUTHM4SVpYRXRGaHZCc3puYmhZMzZKN3dPblJ2VW12QUFxQWh5bkcrMVBoTzJRQlAvYlVRSzJLMAozYkpmN0VoaEo1TDByeGwxcTMxWXd0UFh0VmJxS25NWlVkNlEvUFZSdkw2UTRBTUFzU3BUOFg1NFJjVXFiZFU0CnJZSDhBYk9QWEtKeGJFcEJ6OTlXYnJSZDlxTlMwblREbTVyK2Y1emFRZFJ5WVlRZDVXMjU0VFpMa2ZDdzZNM04KQ0kvYkZ3azhrY24yc2lMWHhtL3hCYUFRcGF5S3JGaElveUppTlhjNTFYL2dvbXcyR2VnTGxSTitUeUxvWVBCdgorWFNrU2d2VVZLOTN5cE1IMy8wSzEyYUpTdDFEbHg3aUs4WHBIRXcyeVFJREFRQUJvNEdVTUlHUk1BNEdBMVVkCkR3RUIvd1FFQXdJRm9EQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3REFZRFZSMFQKQVFIL0JBSXdBREFmQmdOVkhTTUVHREFXZ0JUQWdjblRxcDY3N2I5RXBmb1p4d2dMMkRZM0t6QXhCZ05WSFJFRQpLakFvZ2d0dGVTMXdhWEJsYkdsdVpZSVRiWGt0Y0dsd1pXeHBibVV1WkdWbVlYVnNkSWNFZndBQUFUQU5CZ2txCmhraUc5dzBCQVFzRkFBT0NBUUVBbm95QmpyVFJNSDk4dnBkNVpuT3czNmlGVC9TU0RlMk16QWV0bXkwVExEdGwKeSs4MWJPOGJqcm40c2hmeDlSNVIwTnl1WFVmRkpnSW1UczJ6clV3OU01NHJZV2l0Y2VKdDBPWS8veXdsR2FVeQpYbDVhUXZIREY1THd1SDZtby9IeW9RRkwvZnJhc3JCYzBMODNmMncxK3V1OGlPbGY0Ylk3K3dSYzRJekZYWU1zClFjWGNDNThQdDdBNjI0TTlrQ3huQkJ4ZjFvckNRQ2xHMHd0d2NmR1duTzh6ekRIT1Fsb0JBN0Ywc0hZem5MNFUKT05QZ2kyYktaU1Y3dURGRGhoK1R4b3UwLzc1NWc2Mk5wbjl1ejhTS3FSVnlQcHZZNkRLcUtjZlFhWlVqQlFvZQp5VG44ektmdEtyQVhuczVuWnF6aEFQRWRQcm1DTnZ5cEFhYnNXeGd2ZVE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBN21Rb0VoUVkxVXBSLzNLT2hKekhjdWpZeXYzTXllZHJVNDdYNG1jWXUwaGtPcDJnCktRUnNUTHM4SVpYRXRGaHZCc3puYmhZMzZKN3dPblJ2VW12QUFxQWh5bkcrMVBoTzJRQlAvYlVRSzJLMDNiSmYKN0VoaEo1TDByeGwxcTMxWXd0UFh0VmJxS25NWlVkNlEvUFZSdkw2UTRBTUFzU3BUOFg1NFJjVXFiZFU0cllIOApBYk9QWEtKeGJFcEJ6OTlXYnJSZDlxTlMwblREbTVyK2Y1emFRZFJ5WVlRZDVXMjU0VFpMa2ZDdzZNM05DSS9iCkZ3azhrY24yc2lMWHhtL3hCYUFRcGF5S3JGaElveUppTlhjNTFYL2dvbXcyR2VnTGxSTitUeUxvWVBCditYU2sKU2d2VVZLOTN5cE1IMy8wSzEyYUpTdDFEbHg3aUs4WHBIRXcyeVFJREFRQUJBb0lCQVFDV3JoZmwxVzRjNHUwUgpXWWRicXYwbVZLY3pKMWphQmJ5QkJEalFrZm0vNXZIeldzNXhIcXFWbFlOY2R4M3VJRGVOUk5iRGJxZklFUzRtCnhKSFl0dUtXeGtDVmhXL3BqVW5KUDdsUDA3SjB1ZDg0Z2hhL2NzQjJFeDAxMEJIZ1kwcEhXejl0RDVMVFlnMFAKQW04Q2RNMUZUKzZpcVVNMnVGcDJ1a21yVUFTUmhvd0tEU2pvN2FXcDV1RUFkYVRCeFRoUzQ3MUdmYlBMUkQ5ZQpLQit5T1R0YlNzbytpQ3JRT2NwRm9FcjdBZ3pMY1dKVERkVVhIdXFrTm9pY1NBMDM0WDEwU3MwbG9sSjgzLzVhCkRocERleTR5Z1FYT21tVDUrcyt6eUlFSlc1VElxSUVJK3VUK25OcGhlMWdBQlVXYlFTZThpbURLbCsreWZCdlQKMExTQXNhMEJBb0dCQVBvKzBQNVk1OXhxb2Z5d0xEenlTTHRLYk4xRWtGMVpBQUNpcmJVSTc3dWJrSmpVVUh4cApsYzUrTGR5VnM1YXdla3Mzc2dsOXo1dmdVZWU5by9TeW5GZFJSWFhLNGM0MXhHNXhPaFpXalo4RFZ5c0o3M0FUCitQT0xiUlF4RHB6NXJGclBTTE5sS0E1dElvRVREZ3A3YkFPdGlUaFUvNWF1RTZkbUNLWEczTkRkQW9HQkFQUGYKamlxMkFVejBHWUVNcWMyTHdNUHQwaUdiMjJ4NGF1Z2k1NUN4S0hBWk9XN214WjVkMnJqYzR2Uk43b3NvQmJQUwpXVVQxOHgyUEpvQ005dDVVNWNMbTFKMGdUc29kRTIvV1JJWk1pV0pmOVNRK21yWkdOUXAvOVdQSEZmeXJOcE02Ck55QisxWlBocm16b0wyeUgweWorcEJUUGk2UHlYVTl3VkJvdzZRamRBb0dCQUxjY1Rlcy9mUEd4YVRTd2FMNXoKL3pwazNFSVFrSjV0cUczT205THpaaEJlWmJFZThvSUc5S0p6ZS9XRDZUUmprQ2tINlJPKzVySkZzMGtpWUIyRwpzSlhJRjA1NUZUL0I0aWw2V3FuTHpiZEVSMzFydUxQSE9ZeGtRbjNhNDdtRGpGV3FoYVVYYVBjZGJua0tTMlRxCktRQ0w4L092WnBLSWNFTTJpeTlhMDJ0VkFvR0FWeXYzNDJoL2VvUmVnWFNIVmNPNHVkQk9wbGpSekNvVy9MZE4KVXJrZ25VRkcrRTloSUVTb0pDQkF0OWNMaDQ1Y3kzUkxHSTFadzUwaHhCMmZPTVhjQXhrRHNzNlRtMGRkWlVLUAo1L2wvdWp4V29nZ0d3VlRETE9la1RYQWllZGl4ZjFyMXpaWEl2ajJUWGJaNURUQlgySFY5TFRzcXpRV2JPUVFMCjYvakRzN2tDZ1lFQXVhZDBtKzFXUzNXcVZRTWNTdXJxTUE4dWF6VWJ5ZnlNd3RIRVJremwvcmMrSlQyazErcWsKYVhROXNyWUFRWmowMkJhdlU2WlVYMXFpT2I1cWlROHcxS0Ezbk9scHErais4SHFTaDdTSHNGc09nQ1V3MGltcwp0Tnl1TWJocy85VGZxczhGTGlwYkhabG9rYUJaTGlHUUFJMlNmM0VTZ0E4S0YzQnJDTmhyaEYwPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: pipeline/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-pipeline
  labels:
    
    app.kubernetes.io/name: pipeline
    helm.sh/chart: pipeline-2.0.0
    app.kubernetes.io/instance: my-pipeline
    app.kubernetes.io/version: "0.82.0"
    app.kubernetes.io/managed-by: Helm
data:
  config.yaml: |
    auth:
      oidc:
        clientId: ""
        clientSecret: ""
      token:
        signingKey: ""
    cluster:
      securityScan:
        anchore:
          enabled: false
          secretKey: adminPassword
          secretName: ""
          user: admin
    distribution:
      pke:
        amazon:
          enabled: true
        azure:
          enabled: true
    pipeline:
      basePath: /pipeline
      caCertFile: /tls/ca.crt
      certFile: /tls/tls.crt
      keyFile: /tls/tls.key
    vault:
      address: ""
      insecure: false
    database:
      driver: ""
      host: ""
      name: pipeline
      port: ""
      tls: "false"
      user: pipeline
---
# Source: pipeline/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-pipeline
  labels:
    
    app.kubernetes.io/name: pipeline
    helm.sh/chart: pipeline-2.0.0
    app.kubernetes.io/instance: my-pipeline
    app.kubernetes.io/version: "0.82.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
  - port: 9090
    targetPort: 9090
    protocol: TCP
    # https://github.com/containous/traefik/issues/3806
    name: "https-pipeline"
  selector:
    app.kubernetes.io/name: pipeline
    app.kubernetes.io/instance: my-pipeline
---
# Source: pipeline/templates/deployment-worker.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-pipeline-worker
  labels:
    
    app.kubernetes.io/name: pipeline-worker
    helm.sh/chart: pipeline-2.0.0
    app.kubernetes.io/instance: my-pipeline
    app.kubernetes.io/version: "0.82.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
spec:
  replicas: 1
  strategy:
    
    {}
  selector:
    matchLabels:
      app.kubernetes.io/name: pipeline-worker
      app.kubernetes.io/instance: my-pipeline
  template:
    metadata:
      name: my-pipeline
      labels:
        app.kubernetes.io/name: pipeline-worker
        app.kubernetes.io/instance: my-pipeline
      annotations:
        checksum/config: "c5bc6b95fb66395c42200afe6acb8bc98022f98aa4cd5b4d0c43a4a7859c31a4"
    spec:
      hostAliases:
        []
      containers:
      - name: pipeline
        image: ghcr.io/banzaicloud/pipeline:0.81.0
        imagePullPolicy: IfNotPresent
        command: ["/worker"]
        env:
          # Database password from secret
          # Authentication configuration
          - name: PIPELINE_AUTH_OIDC_CLIENTID
            valueFrom:
              secretKeyRef:
                name: my-pipeline
                key: clientId
          - name: PIPELINE_AUTH_OIDC_CLIENTSECRET
            valueFrom:
              secretKeyRef:
                name: my-pipeline
                key: clientSecret
          - name: PIPELINE_AUTH_TOKEN_SIGNINGKEY
            valueFrom:
              secretKeyRef:
                name: my-pipeline
                key: tokenSigningKey

          # Vault configuration
          - name: VAULT_ADDR
            value: 
          - name: VAULT_SKIP_VERIFY
            value: "false"

          # Additional environment variables
        resources:
          
            requests:
              cpu: 250m
              memory: 256Mi
        volumeMounts:
          - name: config-volume
            mountPath: /config
      volumes:
        - name: config-volume
          configMap:
            name: my-pipeline
      serviceAccountName: my-pipeline
---
# Source: pipeline/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-pipeline
  labels:
    
    app.kubernetes.io/name: pipeline
    helm.sh/chart: pipeline-2.0.0
    app.kubernetes.io/instance: my-pipeline
    app.kubernetes.io/version: "0.82.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
spec:
  replicas: 1
  strategy:
     
    rollingUpdate: null
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: pipeline
      app.kubernetes.io/instance: my-pipeline
  template:
    metadata:
      name: my-pipeline
      labels:
        app.kubernetes.io/name: pipeline
        app.kubernetes.io/instance: my-pipeline
      annotations:
        checksum/config: "c5bc6b95fb66395c42200afe6acb8bc98022f98aa4cd5b4d0c43a4a7859c31a4"
    spec:
      hostAliases:
        []
      containers:
      - name: pipeline
        image: ghcr.io/banzaicloud/pipeline:0.81.0
        imagePullPolicy: IfNotPresent
        args: ["/pipeline", "--addr=0.0.0.0:9090", "--telemetry-addr=0.0.0.0:9900"]
        env:
          - name: PIPELINE_TELEMETRY_ENABLED
            value: "false"
          # Database password from secret
          # Authentication configuration
          - name: PIPELINE_AUTH_OIDC_CLIENTID
            valueFrom:
              secretKeyRef:
                name: my-pipeline
                key: clientId
          - name: PIPELINE_AUTH_OIDC_CLIENTSECRET
            valueFrom:
              secretKeyRef:
                name: my-pipeline
                key: clientSecret
          - name: PIPELINE_AUTH_TOKEN_SIGNINGKEY
            valueFrom:
              secretKeyRef:
                name: my-pipeline
                key: tokenSigningKey

          - name: PIPELINECTL_API_URL
            value: https://127.0.0.1:9090
          - name: PIPELINECTL_API_VERIFY
            value: "false"

          # Vault configuration
          - name: VAULT_ADDR
            value: 
          - name: VAULT_SKIP_VERIFY
            value: "false"

          # Additional environment variables
        ports:
          - name: pipeline
            containerPort: 9090

        livenessProbe:
          httpGet:
            path: /pipeline/api
            port: 9090
            scheme: HTTPS
          initialDelaySeconds: 15
        readinessProbe:
          httpGet:
            path: /pipeline/api
            port: 9090
            scheme: HTTPS
          initialDelaySeconds: 10
        resources:
          
            requests:
              cpu: 250m
              memory: 256Mi
        volumeMounts:
          - name: config-volume
            mountPath: /config
          - name: pipeline-tls
            mountPath: /tls
      volumes:
        - name: config-volume
          configMap:
            name: my-pipeline
        - name: pipeline-tls
          secret:
            secretName: my-pipeline-tls
      serviceAccountName: my-pipeline
