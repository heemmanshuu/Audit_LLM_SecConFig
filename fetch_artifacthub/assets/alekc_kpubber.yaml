---
# Source: kpubber/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-kpubber
  labels:
    helm.sh/chart: kpubber-0.0.4
    app.kubernetes.io/name: kpubber
    app.kubernetes.io/instance: my-kpubber
    app.kubernetes.io/version: "v0.0.2"
    app.kubernetes.io/managed-by: Helm
---
# Source: kpubber/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-kpubber
  labels:
    helm.sh/chart: kpubber-0.0.4
    app.kubernetes.io/name: kpubber
    app.kubernetes.io/instance: my-kpubber
    app.kubernetes.io/version: "v0.0.2"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["patch"]
---
# Source: kpubber/templates/role_binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-kpubber
  labels:
    helm.sh/chart: kpubber-0.0.4
    app.kubernetes.io/name: kpubber
    app.kubernetes.io/instance: my-kpubber
    app.kubernetes.io/version: "v0.0.2"
    app.kubernetes.io/managed-by: Helm
subjects:
  - kind: ServiceAccount
    name: my-kpubber
    namespace: default
roleRef:
  kind: ClusterRole
  name: my-kpubber
  apiGroup: rbac.authorization.k8s.io
---
# Source: kpubber/templates/ds.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: my-kpubber
  labels:
    helm.sh/chart: kpubber-0.0.4
    app.kubernetes.io/name: kpubber
    app.kubernetes.io/instance: my-kpubber
    app.kubernetes.io/version: "v0.0.2"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: kpubber
      app.kubernetes.io/instance: my-kpubber
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kpubber
        app.kubernetes.io/instance: my-kpubber
    spec:
      serviceAccountName: my-kpubber
      dnsPolicy: ClusterFirst
      dnsConfig:
        nameservers:
        - 8.8.8.8
        - 1.1.1.1
      securityContext:
        {}
      containers:
        - name: kpubber
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: KEYS
              value: "kilo.squat.ai/force-endpoint flannel.alpha.coreos.com/public-ip-overwrite"
            - name: CRON_DISABLE
              value: "true"
            - name: CRON
              value: "@every 5m"
          securityContext:
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
          image: "ghcr.io/alekc/kpubber:v0.0.2"
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              cpu: 100m
              memory: 32Mi
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
