---
# Source: postee/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-postee
  labels:
    helm.sh/chart: postee-v2.14.0
    app.kubernetes.io/name: postee
    app.kubernetes.io/instance: my-postee
    app.kubernetes.io/version: "v2.14.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: postee/templates/cfg-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-postee-secret
data:
  cfg.yaml: |
    IyBUaGUgY29uZmlndXJhdGlvbiBmaWxlIGNvbnRhaW5zIGEgZ2VuZXJhbCBzZXR0aW5ncyBzZWN0aW9uLAojIHJvdXRlcywgdGVtcGxhdGVzIGFuZCBhY3Rpb25zIHNlY3Rpb25zLgoKbmFtZTogdGVuYW50ICAgICAgICAgICAgIyAgVGhlIHRlbmFudCBuYW1lCmFxdWEtc2VydmVyOiAgICAgICAgICAgICMgIFVSTCBvZiBBcXVhIFNlcnZlciBmb3IgbGlua3MuIEUuZy4gaHR0cHM6Ly9teXNlcnZlci5hcXVhc2VjLmNvbQptYXgtZGItc2l6ZTogMTAwME1CICAgICAgICMgIE1heCBzaXplIG9mIERCLiA8bnVtYmVycz48dW5pdCBzdWZmaXg+IHBhdHRlcm4gaXMgdXNlZCwgc3VjaCBhcyAiMzAwTUIiIG9yICIxR0IiLiBJZiBlbXB0eSBvciAwIHRoZW4gdW5saW1pdGVkCmRiLXZlcmlmeS1pbnRlcnZhbDogMSAgICMgIEhvdyBvZnRlbiB0byBjaGVjayB0aGUgREIgc2l6ZS4gQnkgZGVmYXVsdCwgUG9zdGVlIGNoZWNrcyBldmVyeSAxIGhvdXIKCiMgUm91dGVzIGFyZSB1c2VkIHRvIGRlZmluZSBob3cgdG8gaGFuZGxlIGFuIGluY29taW5nIG1lc3NhZ2UKcm91dGVzOgotIG5hbWU6IHN0ZG91dAogIGFjdGlvbnM6IFsgc3Rkb3V0IF0KICB0ZW1wbGF0ZTogcmF3LWpzb24KCiMtIG5hbWU6IHJvdXRlMSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICMgIFJvdXRlIG5hbWUuIE11c3QgYmUgdW5pcXVlCiMgIGlucHV0OiBjb250YWlucyhpbnB1dC5pbWFnZSwgImFscGluZSIpICAgICAgICMgIFJFR08gcnVsZSB0byBtYXRjaCBpbnB1dCBtZXNzYWdlIGFnYWluc3Qgcm91dGUKIyAgaW5wdXQtZmlsZXM6ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICMgIEFycmF5IGZpbGVQYXRocyB0byBmaWxlcyB3aXRoIFJFR08gcnVsZXMKIyAgIC0gQWxsb3ctSW1hZ2UtTmFtZS5yZWdvCiMgICAtIElnbm9yZS1JbWFnZS1OYW1lLnJlZ28KIyAgIC0gQWxsb3ctUmVnaXN0cnkucmVnbwojICAgLSBJZ25vcmUtUmVnaXN0cnkucmVnbwojICAgLSBQb2xpY3ktT25seS1GaXgtQXZhaWxhYmxlLnJlZ28KIyAgIC0gUG9saWN5LU1pbi1WdWxuZXJhYmlsaXR5LnJlZ28KIyAgIC0gUG9saWN5LVJlbGF0ZWQtRmVhdHVyZXMucmVnbwojICBhY3Rpb25zOiBbbXktc2xhY2tdICAgICAgICAgICAgICAgICAgICAgICAgICAjICBBY3Rpb24gbmFtZSAobmVlZHMgdG8gYmUgZGVmaW5lZCB1bmRlciAiYWN0aW9ucyIpIHdoaWNoIHdpbGwgcmVjZWl2ZSB0aGUgbWVzc2FnZQojICB0ZW1wbGF0ZTogc2xhY2stdGVtcGxhdGUgICAgICAgICAgICAgICAgICAgICAjICBUZW1wbGF0ZSBuYW1lIChuZWVkcyB0byBiZSBkZWZpbmVkIHVuZGVyICJ0ZW1wbGF0ZXMiKSB3aGljaCB3aWxsIGJlIHVzZWQgdG8gcHJvY2VzcyB0aGUgbWVzc2FnZSBvdXRwdXQgZm9ybWF0CiMgIHBsdWdpbnM6ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICMgIE9wdGlvbmFsIHBsdWdpbnMKIyAgIGFnZ3JlZ2F0ZS1tZXNzYWdlLW51bWJlcjogICAgICAgICAgICAgICAgICAgIyBOdW1iZXIgb2Ygc2FtZSBtZXNzYWdlcyB0byBhZ2dyZWdhdGUgaW50byBvbmUgb3V0cHV0IG1lc3NhZ2UKIyAgIGFnZ3JlZ2F0ZS1tZXNzYWdlLXRpbWVvdXQ6ICAgICAgICAgICAgICAgICAgIyBOdW1iZXIgb2Ygc2Vjb25kcy9taW51dGVzL2hvdXJzIHRvIGFnZ3JlZ2F0ZSBzYW1lIG1lc3NhZ2VzIGludG8gb25lIG91dHB1dC4gTWF4aW11bSBpcyAyNCBob3Vycy4gVXNlIFhzIG9yIFhtIG9yIFhoCiMgICB1bmlxdWUtbWVzc2FnZS1wcm9wczogWyJkaWdlc3QiLCJpbWFnZSIsInJlZ2lzdHJ5IiwgInZ1bG5lcmFiaWxpdHlfc3VtbWFyeS5oaWdoIiwgInZ1bG5lcmFiaWxpdHlfc3VtbWFyeS5tZWRpdW0iLCAidnVsbmVyYWJpbGl0eV9zdW1tYXJ5LmxvdyJdICMgT3B0aW9uYWw6IENvbW1hIHNlcGFyYXRlZCBsaXN0IG9mIHRvcCBsZXZlbCBwcm9wZXJ0aWVzIHdoaWNoIHVuaXF1bHQgaWRlbnRpZmllcyBhbiBldmVudCBtZXNzYWdlLiBJZiBtZXNzYWdlIHdpdGggc2FtZSBwcm9wZXJ0eSB2YWx1ZXMgaXMgcmVjZWl2ZWQgbW9yZSB0aGFuIG9uY2UgaXQgd2lsbCBiZSBpZ25vcmVkCiMgICB1bmlxdWUtbWVzc2FnZS10aW1lb3V0OiAgICAgICAgICAgICAgICAgICAgICMgTnVtYmVyIG9mIHNlY29uZHMvbWludXRlcy9ob3Vycy9kYXlzIGJlZm9yZSBleHBpcmluZyBvZiBhIG1lc3NhZ2UuIEV4cGlyZWQgbWVzc2FnZXMgYXJlIHJlbW92ZWQgZnJvbSBkYi4gSWYgb3B0aW9uIGlzIGVtcHR5IG1lc3NhZ2UgaXMgbmV2ZXIgZGVsZXRlZAoKIyAtIG5hbWU6IFRyaXZ5IE9wZXJhdG9yIEFsZXJ0cwojICAgaW5wdXQ6IGlucHV0LnJlcG9ydC5zdW1tYXJ5LmNyaXRpY2FsQ291bnQgPiAwICMgWW91IGNhbiBjdXN0b21pemUgdGhpcyBiYXNlZCBvbiB5b3VyIG5lZWRzCiMgICBhY3Rpb25zOiBbbXktc2xhY2tdCiMgICB0ZW1wbGF0ZTogdHJpdnktb3BlcmF0b3Itc2xhY2sKCiMgLSBuYW1lOiBUcml2eSBPcGVyYXRvciBTYm9tIFJlcG9ydCB0byBEZXBlbmRlbmN5IFRyYWNrCiMgICBpbnB1dDogY29udGFpbnMoaW5wdXQua2luZCwgIlNib21SZXBvcnQiKQojICAgYWN0aW9uczogWyBteS1kZXBlbmRlbmN5dHJhY2sgXQojICAgdGVtcGxhdGU6IHRyaXZ5LW9wZXJhdG9yLWRlcGVuZGVuY3l0cmFjawoKIyBUZW1wbGF0ZXMgYXJlIHVzZWQgdG8gZm9ybWF0IGEgbWVzc2FnZQp0ZW1wbGF0ZXM6Ci0gbmFtZTogdnVscy1zbGFjayAgICAgICAgICAgICAgICAgICMgIE91dCBvZiB0aGUgYm94IHRlbXBsYXRlIGZvciBzbGFjawogIHJlZ28tcGFja2FnZTogIHBvc3RlZS52dWxzLnNsYWNrICAgICAgIyAgU2xhY2sgdGVtcGxhdGUgUkVHTyBwYWNrYWdlIChhdmFpbGFibGUgb3V0IG9mIHRoZSBib3gpCi0gbmFtZTogdnVscy1odG1sICAgICAgICAgICAgICAgICAgICAgICAjICBPdXQgb2YgdGhlIGJveCBIVE1MIHRlbXBsYXRlCiAgcmVnby1wYWNrYWdlOiAgcG9zdGVlLnZ1bHMuaHRtbCAgICAgICAjICBIVE1MIHRlbXBsYXRlIFJFR08gcGFja2FnZSAoYXZhaWxhYmxlIG91dCBvZiB0aGUgYm94KQotIG5hbWU6IHJhdy1odG1sICAgICAgICAgICAgICAgICAgICAgICAgIyAgUmF3IG1lc3NhZ2UganNvbgogIHJlZ28tcGFja2FnZTogIHBvc3RlZS5yYXdtZXNzYWdlLmh0bWwgIyAgSFRNTCB0ZW1wbGF0ZSBSRUdPIHBhY2thZ2UgKGF2YWlsYWJsZSBvdXQgb2YgdGhlIGJveCkKLSBuYW1lOiBsZWdhY3kgICAgICAgICAgICAgICAgICAgICAgICAgICMgIE91dCBvZiB0aGUgYm94IGxlZ2FjeSBHb2xhbmcgdGVtcGxhdGUKICBsZWdhY3ktc2Nhbi1yZW5kZXJlcjogaHRtbAotIG5hbWU6IGxlZ2FjeS1zbGFjayAgICAgICAgICAgICAgICAgICAgIyAgTGVnYWN5IHNsYWNrIHRlbXBsYXRlIGltcGxlbWVudGVkIGluIEdvbGFuZwogIGxlZ2FjeS1zY2FuLXJlbmRlcmVyOiBzbGFjawotIG5hbWU6IGxlZ2FjeS1qaXJhICAgICAgICAgICAgICAgICAgICAgIyAgTGVnYWN5IGppcmEgdGVtcGxhdGUgaW1wbGVtZW50ZWQgaW4gR29sYW5nCiAgbGVnYWN5LXNjYW4tcmVuZGVyZXI6IGppcmEKLSBuYW1lOiBjdXN0b20tZW1haWwgICAgICAgICAgICAgICAgICAgICMgIEV4YW1wbGUgb2YgaG93IHRvIHVzZSBhIHRlbXBsYXRlIGZyb20gYSBXZWIgVVJMCiAgdXJsOiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAjICBVUkwgdG8gY3VzdG9tIFJFR08gZmlsZQotIG5hbWU6IHJhdy1qc29uICAgICAgICAgICAgICAgICAgICAgICAgIyByb3V0ZSBtZXNzYWdlICJBcyBJcyIgdG8gZXh0ZXJuYWwgd2ViaG9vawogIHJlZ28tcGFja2FnZTogcG9zdGVlLnJhd21lc3NhZ2UuanNvbgotIG5hbWU6IHZ1bHMtY3ljbG9uZWR4ICAgICAgICAgICAgICAgICAgIyBleHBvcnQgdnVsbmVyYWJpbGl0aWVzIHRvIEN5Y2xvbmVEWCBYTUwKICByZWdvLXBhY2thZ2U6IHBvc3RlZS52dWxzLmN5Y2xvbmR4Ci0gbmFtZTogdHJpdnktb3BlcmF0b3ItamlyYQogIHJlZ28tcGFja2FnZTogcG9zdGVlLnRyaXZ5b3BlcmF0b3IuamlyYQotIG5hbWU6IHRyaXZ5LW9wZXJhdG9yLXNsYWNrCiAgcmVnby1wYWNrYWdlOiBwb3N0ZWUudHJpdnlvcGVyYXRvci5zbGFjawotIG5hbWU6IHRyaXZ5LW9wZXJhdG9yLWRlcGVuZGVuY3l0cmFjawogIHJlZ28tcGFja2FnZTogcG9zdGVlLnRyaXZ5b3BlcmF0b3IuZGVwZW5kZW5jeXRyYWNrCgojIFJ1bGVzIGFyZSBwcmVkZWZpbmVkIHJlZ28gcG9saWNpZXMgdGhhdCBjYW4gYmUgdXNlZCB0byB0cmlnZ2VyIHJvdXRlcwpydWxlczoKLSBuYW1lOiBJbml0aWFsIEFjY2VzcwotIG5hbWU6IENyZWRlbnRpYWwgQWNjZXNzCi0gbmFtZTogUHJpdmlsZWdlIEVzY2FsYXRpb24KLSBuYW1lOiBEZWZlbnNlIEV2YXNpb24KLSBuYW1lOiBQZXJzaXN0ZW5jZQoKIyBBY3Rpb25zIGFyZSB0YXJnZXQgc2VydmljZXMgdGhhdCBzaG91bGQgY29uc3VtZSB0aGUgbWVzc2FnZXMKYWN0aW9uczoKLSBuYW1lOiBzdGRvdXQKICB0eXBlOiBzdGRvdXQKICBlbmFibGU6IHRydWUKCi0gbmFtZTogbXktamlyYSAgICMgIG5hbWUgbXVzdCBiZSB1bmlxdWUKICB0eXBlOiBqaXJhICAgICAgIyAgc3VwcG9ydGVkIHR5cGVzOiBqaXJhLCBlbWFpbAogIGVuYWJsZTogZmFsc2UKICB1cmw6ICAgICAgICAgICAgIyBNYW5kYXRvcnkuIEUuZyAiaHR0cHM6Ly9qb2huZG9lLmF0bGFzc2lhbi5uZXQiCiAgdXNlcjogICAgICAgICAgICMgTWFuZGF0b3J5LiBFLmcgOmpvaG5kb2VAZ21haWwuY29tIgogIHBhc3N3b3JkOiAgICAgICAjIE9wdGlvbmFsLiBTcGVjaWZ5IEppcmEgdXNlciBBUEkga2V5LiBVc2VkIG9ubHkgZm9yIEppcmEgQ2xvdWQKICB0b2tlbjogICAgICAgICAgIyBPcHRpb25hbC4gU3BlY2lmeSBKaXJhIHVzZXIgUGVyc29uYWwgQWNjZXNzIFRva2VuLiBVc2VkIG9ubHkgZm9yIEppcmEgU2VydmVyL0RhdGEgQ2VudGVyCiAgcHJvamVjdC1rZXk6ICAgICMgTWFuZGF0b3J5LiBTcGVjaWZ5IHRoZSBKSVJBIHByb2R1Y3Qga2V5CiAgdGxzLXZlcmlmeTogZmFsc2UKICBib2FyZDogICAgICAgICAgIyBPcHRpb25hbC4gU3BlY2lmeSB0aGUgSmlyYSBib2FyZCBuYW1lIHRvIG9wZW4gdGlja2V0cyBvbgogIGxhYmVsczogICAgICAgICAjIE9wdGlvbmFsLCBzcGVjaWZ5IGFycmF5IG9mIGxhYmVscyB0byBhZGQgdG8gVGlja2V0LCBmb3IgZXhhbXBsZTogWyJsYWJlbDEiLCAibGFiZWwyIl0KICBpc3N1ZXR5cGU6ICAgICAgIyBPcHRpb25hbC4gU3BlY2lmdHkgdGhlIGlzc3VlIHR5cGUgdG8gb3BlbiAoQnVnLCBUYXNrLCBldGMuKS4gRGVmYXVsdCBpcyAiVGFzayIKICBwcmlvcml0eTogICAgICAgIyBPcHRpb25hbC4gU3BlY2lmeSB0aGUgaXNzdWVzIHNldmVyaXR5LiBEZWZhdWx0IGlzICJIaWdoIgogIGFzc2lnbmVlOiAgICAgICAjIE9wdGlvbmFsLiBTcGVjaWZ5IHRoZSBhc3NpZ25lZCB1c2VyLiBEZWZhdWx0IGlzIHRoZSB1c2VyIHRoYXQgb3BlbmVkIHRoZSB0aWNrZXQKCi0gbmFtZTogbXktZW1haWwKICB0eXBlOiBlbWFpbAogIGVuYWJsZTogZmFsc2UKICB1c2VyOiAgICAgICMgT3B0aW9uYWwgKGlmIGF1dGggc3VwcG9ydGVkKTogU01UUCB1c2VyIG5hbWUgKGUuZy4gam9obmRvZUBnbWFpbC5jb20pCiAgcGFzc3dvcmQ6ICAjIE9wdGlvbmFsIChpZiBhdXRoIHN1cHBvcnRlZCk6IFNNVFAgcGFzc3dvcmQKICBob3N0OiAgICAgICMgTWFuZGF0b3J5OiBTTVRQIGhvc3QgbmFtZSAoZS5nLiBzbXRwLmdtYWlsLmNvbSkKICBwb3J0OiAgICAgICMgTWFuZGF0b3J5OiBTTVRQIHNlcnZlciBwb3J0IChlLmcuIDU4NykKICBzZW5kZXI6ICAgICMgTWFuZGF0b3J5OiBUaGUgZW1haWwgYWRkcmVzcyB0byB1c2UgYXMgYSBzZW5kZXIKICByZWNpcGllbnRzOiBbIiIsICIiXSAgIyBNYW5kYXRvcnk6IGNvbW1hIHNlcGFyYXRlZCBsaXN0IG9mIHJlY2lwaWVudHMKCi0gbmFtZTogbXktZW1haWwtc210cC1zZXJ2ZXIKICB0eXBlOiBlbWFpbAogIGVuYWJsZTogZmFsc2UKICB1c2UtbXg6IHRydWUKICBzZW5kZXI6ICAjIE1hbmRhdG9yeTogVGhlIGVtYWlsIGFkZHJlc3MgdG8gdXNlIGFzIGEgc2VuZGVyCiAgcmVjaXBpZW50czogWyIiLCAiIl0gICMgTWFuZGF0b3J5OiBjb21tYSBzZXBhcmF0ZWQgbGlzdCBvZiByZWNpcGllbnRzCgotIG5hbWU6IG15LXNsYWNrCiAgdHlwZTogc2xhY2sKICBlbmFibGU6IGZhbHNlCiAgdXJsOiBodHRwczovL2hvb2tzLnNsYWNrLmNvbS9zZXJ2aWNlcy9UQUFBQS9CQkIvPGtleT4KCi0gbmFtZTogbXMtdGVhbQogIHR5cGU6IHRlYW1zCiAgZW5hYmxlOiBmYWxzZQogIHVybDogaHR0cHM6Ly9vdXRsb29rLm9mZmljZS5jb20vd2ViaG9vay8uLi4uICAgIyAgV2ViaG9vaydzIHVybAoKLSBuYW1lOiB3ZWJob29rCiAgdHlwZTogd2ViaG9vawogIGVuYWJsZTogZmFsc2UKICB1cmw6IGh0dHBzOi8vLi4uLi93ZWJob29rLyAgICMgIFdlYmhvb2sncyB1cmwKICB0aW1lb3V0OiAgICAgICAgICAgICAgICAgICAgICMgIFdlYmhvb2sncyB0aW1lb3V0LiA8bnVtYmVycz48dW5pdCBzdWZmaXg+IHBhdHRlcm4gaXMgdXNlZCwgc3VjaCBhcyAiMzAwbXMiIG9yICIyaDQ1bSIuIERlZmF1bHQ6IDEyMHMKCi0gbmFtZTogc3BsdW5rCiAgdHlwZTogc3BsdW5rCiAgZW5hYmxlOiBmYWxzZQogIHVybDogaHR0cDovL2xvY2FsaG9zdDo4MDg4ICMgTWFuZGF0b3J5LiBVcmwgb2YgYSBTcGx1bmsgc2VydmVyCiAgdG9rZW46IDx0b2tlbj4gICAgICAgICAgICAgIyBNYW5kYXRvcnkuIGEgSFRUUCBFdmVudCBDb2xsZWN0b3IgVG9rZW4KICBzaXplLWxpbWl0OiAxMDAwMCAgICAgICAgICAjIE9wdGlvbmFsLiBNYXhpbXVtIHNjYW4gbGVuZ3RoLCBpbiBieXRlcy4gRGVmYXVsdDogMTAwMDAKICB0bHMtdmVyaWZ5OiBmYWxzZSAgICAgICAgICAjIEVuYWJsZSBza2lwIFRMUyBWZXJpZmljYXRpb24uIERlZmF1bHQ6IGZhbHNlLgoKLSBuYW1lOiBteS1zZXJ2aWNlbm93CiAgdHlwZTogc2VydmljZU5vdwogIGVuYWJsZTogZmFsc2UKICB1c2VyOiAgICAgICMgTWFuZGF0b3J5LiBFLmcgOmpvaG5kb2VAZ21haWwuY29tIgogIHBhc3N3b3JkOiAgIyBNYW5kYXRvcnkuIFNwZWNpZnkgdXNlciBBUEkga2V5CiAgaW5zdGFuY2U6ICAjIE1hbmRhdG9yeS4gTmFtZSBvZiBTZXJ2aWNlTiAgb3cgSW5zdGFuY2UKICBib2FyZDogICAgICMgIFNwZWNpZnkgdGhlIFNlcnZpY2VOb3cgYm9hcmQgbmFtZSB0byBvcGVuIHRpY2tldHMgb24uIERlZmF1bHQgaXMgImluY2lkZW50IgoKLSBuYW1lOiBteS1uZXh1cy1pcQogIHR5cGU6IG5leHVzSXEKICBlbmFibGU6IGZhbHNlCiAgdXNlcjogICAgICAgICAgICAgIyBNYW5kYXRvcnkuIFVzZXIgbmFtZQogIHBhc3N3b3JkOiAgICAgICAgICMgTWFuZGF0b3J5LiBVc2VyIHBhc3N3b3JkCiAgdXJsOiAgICAgICAgICAgICAgIyBNYW5kYXRvcnkuIFVybCBvZiBOZXh1cyBJUSBzZXJ2ZXIKICBvcmdhbml6YXRpb24taWQ6ICAjIE1hbmRhdG9yeS4gT3JnYW5pemF0aW9uIFVJRCBsaWtlICIyMjJkZTMzZTgwMDU0MDhhODQ0YzEyZWFiOTUyYzliMCIKCi0gbmFtZTogbXktZGVwZW5kZW5jeXRyYWNrCiAgdHlwZTogZGVwZW5kZW5jeXRyYWNrCiAgZW5hYmxlOiBmYWxzZQogIHVybDogICAgICAgICAgICAgICAgICAgICAgICMgTWFuZGF0b3J5LiBVcmwgb2YgRGVwZW5kZW5jeSBUcmFjawogIGRlcGVuZGVuY3ktdHJhY2stYXBpLWtleTogICMgTWFuZGF0b3J5LiBBUEkga2V5IG9mIERlcGVuZGVuY3kgVHJhY2sKCi0gbmFtZTogbXktb3BzZ2VuaWUKICB0eXBlOiBvcHNnZW5pZQogIGVuYWJsZTogZmFsc2UKICB0b2tlbjogPEFQSSBLZXk+ICAjIE1hbmRhdG9yeS4gYW4gQVBJIGtleSBmcm9tIGFuIEFQSSBpbnRlZ3JhdGlvbgogIHVzZXI6ICAgICAgICAgICAgICMgT3B0aW9uYWwuIERpc3BsYXkgbmFtZSBvZiB0aGUgcmVxdWVzdCBvd25lci4KICBhc3NpZ25lZTogICAgICAgICAjIE9wdGlvbmFsLiBDb21tYSBzZXBhcmF0ZWQgbGlzdCBvZiB1c2VycyB0aGF0IHRoZSBhbGVydCB3aWxsIGJlIHJvdXRlZCB0byBzZW5kIG5vdGlmaWNhdGlvbnMKICByZWNpcGllbnRzOiBbIiJdICAjIE9wdGlvbmFsLiBDb21tYSBzZXBhcmF0ZWQgbGlzdCBvZiB1c2VycyB0aGF0IHRoZSBhbGVydCB3aWxsIGJlY29tZSB2aXNpYmxlIHRvIHdpdGhvdXQgc2VuZGluZyBhbnkgbm90aWZpY2F0aW9uCiAgdGFnczogICAgICAgICAgICAgIyBPcHRpb25hbC4gQ29tbWEgc2VwYXJhdGVkIGxpc3Qgb2YgdGhlIGFsZXJ0IHRhZ3MuCiAgcHJpb3JpdHk6ICAgICAgICAgIyBPcHRpb25hbC4gU3BlY2lmeSB0aGUgYWxlcnQgcHJpb3JpdHkuIERlZmF1bHQgaXMgIlAzIgogIGFsaWFzOiAgICAgICAgICAgICMgT3B0aW9uYWwuIENsaWVudC1kZWZpbmVkIGlkZW50aWZpZXIgb2YgdGhlIGFsZXJ0LgogIGVudGl0eTogICAgICAgICAgICMgT3B0aW9uYWwuIEVudGl0eSBmaWVsZCBvZiB0aGUgYWxlcnQgdGhhdCBpcyBnZW5lcmFsbHkgdXNlZCB0byBzcGVjaWZ5IHdoaWNoIGRvbWFpbiBhbGVydCBpcyByZWxhdGVkIHRvLgo=
---
# Source: postee/templates/postee-ui-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-posteeui-creds
  labels:
    helm.sh/chart: postee-v2.14.0
    app.kubernetes.io/name: postee-ui
    app.kubernetes.io/instance: my-postee
    app.kubernetes.io/version: "v2.14.0"
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  postee-ui-user: "cG9zdGVl"
  postee-ui-password: "Y2hhbmdlbWU="
---
# Source: postee/templates/postee-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-postee
  labels:
    helm.sh/chart: postee-v2.14.0
    app.kubernetes.io/name: postee
    app.kubernetes.io/instance: my-postee
    app.kubernetes.io/version: "v2.14.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8082
      targetPort: 8082
      protocol: TCP
      name: http
    - port: 8445
      targetPort: 8445
      protocol: TCP
      name: http-ssl
  selector:
    app.kubernetes.io/name: postee
    app.kubernetes.io/instance: my-postee
---
# Source: postee/templates/postee-ui-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-posteeui
  labels:
    helm.sh/chart: postee-v2.14.0
    app.kubernetes.io/name: postee-ui
    app.kubernetes.io/instance: my-postee
    app.kubernetes.io/version: "v2.14.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: LoadBalancer
  ports:
    - port: 8000
      targetPort: 8000
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: postee-ui
    app.kubernetes.io/instance: my-postee
---
# Source: postee/templates/postee-ui.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-posteeui
  labels:
    helm.sh/chart: postee-v2.14.0
    app.kubernetes.io/name: postee-ui
    app.kubernetes.io/instance: my-postee
    app.kubernetes.io/version: "v2.14.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: postee-ui
      app.kubernetes.io/instance: my-postee
  template:
    metadata:
      labels:
        app.kubernetes.io/name: postee-ui
        app.kubernetes.io/instance: my-postee
    spec:
      serviceAccountName: my-postee
      securityContext:
        {}
      initContainers:
        - name: setting-cfg
          image: "busybox:1.34"
          imagePullPolicy: IfNotPresent
          command: ["/bin/chown", "-R", "1099", "/data"]
          volumeMounts:
            - name: postee-config
              mountPath: /data
      containers:
        - name: postee
          securityContext:
            {}
          image: "aquasec/postee-ui:2.12.0-amd64"
          imagePullPolicy: Always
          env:
            - name: POSTEE_UI_CFG
              value: /data/cfg.yaml
            - name: POSTEE_UI_PORT
              value: "8000"
            - name: POSTEE_UI_UPDATE_URL
              value: "http://my-postee:8082"
            - name: POSTEE_ADMIN_USER
              valueFrom:
                secretKeyRef:
                  name: my-posteeui-creds
                  key: postee-ui-user
            - name: POSTEE_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: my-posteeui-creds
                  key: postee-ui-password
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          volumeMounts:
            - name: postee-config
              mountPath: /data
            - name: postee-db
              mountPath: /server/database
          resources:
            limits:
              cpu: 500m
              memory: 256Mi
            requests:
              cpu: 200m
              memory: 128Mi
      volumes:
        - name: postee-db
          persistentVolumeClaim:
            claimName: "my-postee-db-my-postee-0"
        - name: postee-config
          persistentVolumeClaim:
            claimName: "my-postee-config-my-postee-0"
---
# Source: postee/templates/postee.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: my-postee
  labels:
    helm.sh/chart: postee-v2.14.0
    app.kubernetes.io/name: postee
    app.kubernetes.io/instance: my-postee
    app.kubernetes.io/version: "v2.14.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: postee
      app.kubernetes.io/instance: my-postee
  serviceName: my-postee
  volumeClaimTemplates:
    - metadata:
        name: my-postee-db
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 1Gi
    - metadata:
        name: my-postee-config
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 100Mi
    - metadata:
        name: my-postee-rego-template
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 100Mi
    - metadata:
        name: my-postee-filters
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 100Mi
  template:
    metadata:
      annotations:
        checksum/secret: 448faba7f44ec4bda0b132de2812ae3ccd8d7729df3d48fc1dda7147cd42dbfd
      labels:
        app.kubernetes.io/name: postee
        app.kubernetes.io/instance: my-postee
    spec:
      serviceAccountName: my-postee
      securityContext:
        {}
      initContainers:
        - name: setting-db
          image: "busybox:1.34"
          imagePullPolicy: IfNotPresent
          command: ["/bin/chown", "-R", "1099", "/server/database"]
          volumeMounts:
            - name: my-postee-db
              mountPath: /server/database
        - name: setting-cfg
          image: "busybox:1.34"
          imagePullPolicy: IfNotPresent
          command: ["/bin/cp", "/k8s/cfg.yaml", "/data/cfg.yaml"]
          volumeMounts:
            - name: my-postee-secret-vol
              mountPath: /k8s
            - name: my-postee-config
              mountPath: /data
      containers:
        - name: postee
          securityContext:
            {}
          image: "aquasec/postee:2.12.0-amd64"
          imagePullPolicy: Always
          env:
            - name: POSTEE_CFG
              value: /data/cfg.yaml
            - name: POSTEE_DEBUG
              value: "not"
          ports:
            - name: http
              containerPort: 8082
              protocol: TCP
            - name: tls
              containerPort: 8445
              protocol: TCP
          volumeMounts:
            - name: my-postee-db
              mountPath: /server/database
            - name: my-postee-config
              mountPath: /data
            - name: my-postee-rego-template
              mountPath: /server/rego-templates/custom
            - name: my-postee-filters
              mountPath: /server/rego-filters/custom
          resources:
            limits:
              cpu: 500m
              memory: 256Mi
            requests:
              cpu: 200m
              memory: 128Mi
      volumes:
        - secret:
            secretName: my-postee-secret
          name: my-postee-secret-vol
---
# Source: postee/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "my-postee-test-connection"
  labels:
    helm.sh/chart: postee-v2.14.0
    app.kubernetes.io/name: postee
    app.kubernetes.io/instance: my-postee
    app.kubernetes.io/version: "v2.14.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['my-postee:']
  restartPolicy: Never
