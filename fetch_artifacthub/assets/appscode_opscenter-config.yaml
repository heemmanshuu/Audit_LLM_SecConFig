---
# Source: opscenter-config/charts/panopticon/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-opscenter-config-panopticon
  namespace: default
  labels:
    helm.sh/chart: panopticon-v2022.06.14
    app.kubernetes.io/name: panopticon
    app.kubernetes.io/instance: my-opscenter-config
    app.kubernetes.io/version: "v0.0.6"
    app.kubernetes.io/managed-by: Helm
---
# Source: opscenter-config/charts/panopticon/templates/apiregistration.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-opscenter-config-panopticon-apiserver-cert
  namespace: default
  labels:
    helm.sh/chart: panopticon-v2022.06.14
    app.kubernetes.io/name: panopticon
    app.kubernetes.io/instance: my-opscenter-config
    app.kubernetes.io/version: "v0.0.6"
    app.kubernetes.io/managed-by: Helm
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURnakNDQW1xZ0F3SUJBZ0lSQUtWL1k2Wml4UGxDYXluYWoxa3I5d1V3RFFZSktvWklodmNOQVFFTEJRQXcKRFRFTE1Ba0dBMVVFQXhNQ1kyRXdIaGNOTWpRd09URTJNRGcwT1RRd1doY05NelF3T1RFME1EZzBPVFF3V2pBcApNU2N3SlFZRFZRUURFeDV0ZVMxdmNITmpaVzUwWlhJdFkyOXVabWxuTFhCaGJtOXdkR2xqYjI0d2dnRWlNQTBHCkNTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFERHIzb2lQVlBWWHR6enEyd0V0bWd4TGlMWWs0M3cKZ1o2MU9FZXc0TlNER0p4K2xSS0phMDlHeHdONXpCMnRJQmRhVHE3dDBDSXJBL3JwZVUycFZUSnFUQk9yVzdSSQpYNjkwMGVISzNWVzlKa0tLTVYrb3VGVnlJNVFlRnY2VWlIQUpyak9lMERlSjRFUVFhUzRKc0txaTk0MnBKUzBGCjM2UmtqdjdGc0xNMmFXTnBuRVd4UFR6dWxjTFdPWWpocmdQMXVxQ1F1U05UOW44MlZVRGFUeTNkcFp3S3M3S0cKVmo3aW5SU1NyN1NXYU1DaU1udk9Rbkp1VkhoSVhibDdod1dZQmRYWTZQNDB5NDRJMFJoVWZNcWM0clA1V2tESApXY05kV2U3R0NoeTRNdHhoc3o3WjhPRFJMY1JGTTlpQyt2dWlRM2FzRjJxbXVlUHFNQ0lSUy9nUkFnTUJBQUdqCmdjQXdnYjB3RGdZRFZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQUZHeTFHMnNTTndYNjh6YkU0aW5Nc2lDbgp2bjFrTUYwR0ExVWRFUVJXTUZTQ0ptMTVMVzl3YzJObGJuUmxjaTFqYjI1bWFXY3RjR0Z1YjNCMGFXTnZiaTVrClpXWmhkV3gwZ2lwdGVTMXZjSE5qWlc1MFpYSXRZMjl1Wm1sbkxYQmhibTl3ZEdsamIyNHVaR1ZtWVhWc2RDNXoKZG1Nd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFKRHVaVjhtWWRNbFZTamdrd1hvU2IzdGpYTWFob1dCUmJhTgowYzVXejBTWXRjVVR4UTJ6QlZYMm9zRU4vWGxDYzlYYTBOQUMxRTJVbUJveW1BdDJqY3BHbit4blFkOHRBWGFsCnE4UDF6ckxSd2t6eUxjazMrVngxRXdOZTBFWjdyYXlVUU84RDNXbHc3UlNQdkZYQXFnMW16VmdsRXBpZXhzak0KQjlGZXdoSnBtb0E3M2J1bk1yYjFMUUF0dHJEVTlqYzlkN082KzZGTWRLd2lEUU13UDZNSnAvVGRBSWw1Q0hFTQpiTVBzSVo5Mi9ZNStlY3M3K2VRdFFGbGwxQ2c2ek55OFZmNStSWjgzZ2x4OWIyMWdSS0Z3WWFXb0FURDNpb2ozCkU0L3oxdkR3aTdQcUhJOVRGTUd3MjZVYjZSK3FoeXROcFNQaEZJNU9EWEcrRGFTQXZDND0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdzY5NklqMVQxVjdjODZ0c0JMWm9NUzRpMkpPTjhJR2V0VGhIc09EVWd4aWNmcFVTCmlXdFBSc2NEZWN3ZHJTQVhXazZ1N2RBaUt3UDY2WGxOcVZVeWFrd1RxMXUwU0YrdmROSGh5dDFWdlNaQ2lqRmYKcUxoVmNpT1VIaGIrbElod0NhNHpudEEzaWVCRUVHa3VDYkNxb3ZlTnFTVXRCZCtrWkk3K3hiQ3pObWxqYVp4RgpzVDA4N3BYQzFqbUk0YTREOWJxZ2tMa2pVL1ovTmxWQTJrOHQzYVdjQ3JPeWhsWSs0cDBVa3ErMGxtakFvako3CnprSnlibFI0U0YyNWU0Y0ZtQVhWMk9qK05NdU9DTkVZVkh6S25PS3orVnBBeDFuRFhWbnV4Z29jdURMY1liTSsKMmZEZzBTM0VSVFBZZ3ZyN29rTjJyQmRxcHJuajZqQWlFVXY0RVFJREFRQUJBb0lCQVFDS0M4dTBSZUZUUCtYTgpmRnZxZ3lmRHNoRmhDYzd6SU8zdVYvS3pSQmlIRnlDblo5QzQ0dHY5U1Q0WmVUWmlRS1pZemZNM3owR2JhT1prCk9HL2lDamxUcGJHbWpENEZaSU1wZlRxMVd5azJFN3lUTXJ1U0VlQXRjZzMyb0RBZVpwWHJMbG82S2hkVUM4TFkKZE9yR2FUd25WVTQ1U2dHV0NDdzN5R3pRMTVQRnlKdXB5T015ay9NUkpuZ3BSK0svc1IybkJZeWpaa2NOcHFLWApRMC8vaTloS2hCS2xBN21VeW00VzVFNWJiWXhiYkNpbks3UFZFTGJYak16amt2ZEVvNUdvbnJrSXpCSWlUUEJxCkx6K2ttSFMxN2FJcHIyZktkMVQ3cmd5MmNBdGZKN1piM0trQ3B6MnVXYlBubmUreDM2OFZCZmxMZndRSTZnZHAKNW91WDRUWkZBb0dCQU1vYU5YM3NzakkyU3FaVXNGVkovaVNyUGpYSDNyeDVCOWJqcEZscWFhcGJHMWdVRHdqRwoycXdRdExzaWZPeDc1L0kvd0RycUY0OGVZQnBlcE5BVlM2amlVNkU3ekpjOHJKT0tWRk1oSE9tNklBR0YwN3NKClRmN2RoU0JmQzV0d3Y4UTl4NmYrWHRNRFpoZGJZOWxQVXhwYkluV1VBM0w0Ly83cTM2cTlVakhuQW9HQkFQZmYKTFRYaUJFVGtramszdFdZcENkbHVqejdSMmZ2bVRVSThHWlBJUlVrWFBTRytSZFNINVI1QlZIU3BGUTNFVHdiUAo0WWRIOUpSelVvdlFaV2FtL3RzWU9QQVlDUm1iZTlhaWV4bGEvM3JzRlU0ODRFRlRaNmp6ckpxdXRSZ2dpNEtuCjJyVUlsaG1JcUVpbjBrVmIyUmJOUC8wUGRkOXY4U29zYjl2eERMZEhBb0dBT3NWWVhPQWlDYndFQlU2SFlLWDkKdzhnUWRTOUVOR2Exd3VXNysweVlvYk9ReGhJL05Qd3V4dTZzdithTmtXK095Y0dFTXgyejhDaVRKZGZ6OFpiZgp3NkxkVXZ2Q3lSQVoxMlhZazd3RFhteUR0aTJtbnJOYi9RdUtGUm5PbEVzN1dPUG1WWklCSFRmVnptRURMa1NGCkZCc0FjRlMwbEJDWTBSYVlLRnladEcwQ2dZQU9yTC9ZZU5FWDR4QmxJczh5aFN0NEcvdVBGSTE3UkY4K2xLQlAKQjRSU2wzV2ZFY3pBa0dzWUozWUFraUlVOXBKWExPZUZRdFZRRktQR2MwZ05rOFZ5NHpRN3dyQ0hPNVZSVjcxQgord2sxRmRVTkZMMlNJSVg2a3JLZFZjcVM2eHBYV2VpdzN4bEQyYnRjMGRLNUdINzV3cDBQTm1NY0gxeC95ckcwCnE4aTg4UUtCZ1FDZWo4TXpBbkJCSDBYYTBKdGM3bHFjNDcwNVRhVWdmT21uN09pZGRnUzV5VDQ5TjhrNUVlL0wKY3FaRXFnek9aMVI3eXU5Ky9lR1VuRkl6UCtNRzlKNWlFcXhyTUdRNjlyN3haeitZOUh6R2FZY1JrUHRHWmJOcgpSOS90VFF4Z3Z1cEZSYlF3NXVta2NraWc3Y0cvNFNZYnd5WGsxS2xHeHl3dnVkbzBzNysrU0E9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: opscenter-config/charts/panopticon/templates/cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-opscenter-config-panopticon
  labels:
    helm.sh/chart: panopticon-v2022.06.14
    app.kubernetes.io/name: panopticon
    app.kubernetes.io/instance: my-opscenter-config
    app.kubernetes.io/version: "v0.0.6"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs: ["*"]
- apiGroups:
  - apiregistration.k8s.io
  resources:
  - apiservices
  verbs: ["get", "patch", "delete"]
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - validatingwebhookconfigurations
  verbs: ["delete", "get", "list", "watch", "patch"]
- apiGroups:
  - appcatalog.appscode.com
  resources:
  - "*"
  verbs: ["*"]
- apiGroups:
  - "*"
  resources:
  - "*"
  verbs: ["get", "list", "watch"]
---
# Source: opscenter-config/charts/panopticon/templates/apiregistration.yaml
# to delegate authentication and authorization
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-opscenter-config-panopticon-apiserver-auth-delegator
  labels:
    helm.sh/chart: panopticon-v2022.06.14
    app.kubernetes.io/name: panopticon
    app.kubernetes.io/instance: my-opscenter-config
    app.kubernetes.io/version: "v0.0.6"
    app.kubernetes.io/managed-by: Helm
roleRef:
  kind: ClusterRole
  apiGroup: rbac.authorization.k8s.io
  name: system:auth-delegator
subjects:
- kind: ServiceAccount
  name: my-opscenter-config-panopticon
  namespace: default
---
# Source: opscenter-config/charts/panopticon/templates/cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-opscenter-config-panopticon
  labels:
    helm.sh/chart: panopticon-v2022.06.14
    app.kubernetes.io/name: panopticon
    app.kubernetes.io/instance: my-opscenter-config
    app.kubernetes.io/version: "v0.0.6"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-opscenter-config-panopticon
subjects:
- kind: ServiceAccount
  name: my-opscenter-config-panopticon
  namespace: default
---
# Source: opscenter-config/charts/panopticon/templates/license-checker-cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-opscenter-config-panopticon-license-checker
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: appscode:license-checker
subjects:
- kind: ServiceAccount
  name: my-opscenter-config-panopticon
  namespace: default
---
# Source: opscenter-config/charts/panopticon/templates/license-reader-cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-opscenter-config-panopticon-license-reader
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: appscode:license-reader
subjects:
- kind: ServiceAccount
  name: my-opscenter-config-panopticon
  namespace: default
---
# Source: opscenter-config/charts/panopticon/templates/apiregistration.yaml
# to read the config for terminating authentication
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: my-opscenter-config-panopticon-apiserver-extension-server-authentication-reader
  namespace: kube-system
  labels:
    helm.sh/chart: panopticon-v2022.06.14
    app.kubernetes.io/name: panopticon
    app.kubernetes.io/instance: my-opscenter-config
    app.kubernetes.io/version: "v0.0.6"
    app.kubernetes.io/managed-by: Helm
roleRef:
  kind: Role
  apiGroup: rbac.authorization.k8s.io
  name: extension-apiserver-authentication-reader
subjects:
- kind: ServiceAccount
  name: my-opscenter-config-panopticon
  namespace: default
---
# Source: opscenter-config/charts/panopticon/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-opscenter-config-panopticon
  namespace: default
  labels:
    helm.sh/chart: panopticon-v2022.06.14
    app.kubernetes.io/name: panopticon
    app.kubernetes.io/instance: my-opscenter-config
    app.kubernetes.io/version: "v0.0.6"
    app.kubernetes.io/managed-by: Helm
spec:
  ports:
  # Port used to expose admission webhook apiserver
  - name: api
    port: 443
    targetPort: 8443
  - name: telemetry
    port: 8081
    targetPort: 8081
  selector:
    app.kubernetes.io/name: panopticon
    app.kubernetes.io/instance: my-opscenter-config
---
# Source: opscenter-config/charts/panopticon/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-opscenter-config-panopticon
  namespace: default
  labels:
    helm.sh/chart: panopticon-v2022.06.14
    app.kubernetes.io/name: panopticon
    app.kubernetes.io/instance: my-opscenter-config
    app.kubernetes.io/version: "v0.0.6"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: panopticon
      app.kubernetes.io/instance: my-opscenter-config
  template:
    metadata:
      labels:
        app.kubernetes.io/name: panopticon
        app.kubernetes.io/instance: my-opscenter-config
      annotations:
        checksum/apiregistration.yaml: 672e98315a0612c2cb85cfc08420a0b494fde183264bf64b55eccfcb96dea439
    spec:
      imagePullSecrets:
        []
      serviceAccountName: my-opscenter-config-panopticon
      containers:
      - name: operator
        securityContext:
          {}
        image: ghcr.io/appscode/panopticon:v0.0.6
        imagePullPolicy: IfNotPresent
        args:
        - run
        - --v=3
        - --secure-port=8443
        - --audit-log-path=-
        - --tls-cert-file=/var/serving-cert/tls.crt
        - --tls-private-key-file=/var/serving-cert/tls.key
        - --authorization-always-allow-paths=/healthz
        - --authorization-always-allow-paths=/readyz
        - --authorization-always-allow-paths=/livez
        - --authorization-always-allow-paths=/metrics
        - --use-kubeapiserver-fqdn-for-aks=true
        - --enable-validating-webhook=true
        ports:
        - containerPort: 8443
        - containerPort: 8081
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        resources:
          {}
        volumeMounts:
        - mountPath: /var/serving-cert
          name: serving-cert
      volumes:
      - name: serving-cert
        secret:
          defaultMode: 420
          secretName: my-opscenter-config-panopticon-apiserver-cert
      securityContext:
        fsGroup: 65535
      nodeSelector:
        kubernetes.io/os: linux
---
# Source: opscenter-config/charts/panopticon/templates/apiregistration.yaml
# register as aggregated apiserver
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  name: v1alpha1.validators.metrics.appscode.com
  labels:
    helm.sh/chart: panopticon-v2022.06.14
    app.kubernetes.io/name: panopticon
    app.kubernetes.io/instance: my-opscenter-config
    app.kubernetes.io/version: "v0.0.6"
    app.kubernetes.io/managed-by: Helm
spec:
  group: validators.metrics.appscode.com
  version: v1alpha1
  service:
    namespace: default
    name: my-opscenter-config-panopticon
  caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lRVWxVcnVGSzdwM3RocndwQzZ0QWVNekFOQmdrcWhraUc5dzBCQVFzRkFEQU4KTVFzd0NRWURWUVFERXdKallUQWVGdzB5TkRBNU1UWXdPRFE1TkRCYUZ3MHpOREE1TVRRd09EUTVOREJhTUEweApDekFKQmdOVkJBTVRBbU5oTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUFyY2ZwCjdlaGVybk9JZUtJZ0c5bzVyQ1oxSTE3YUk0NWJqL3hNWXdGb1E5aElDakNicCtEc2RNWE8zU290Z1NmOXEvWHAKOGdFMkVya0tQTkNYZ0puazhQTmp1S0xyeWZ3M0hIbGtjTWlWcUF3VTF6ZnY5NnkycytId1BOSDBMYk1TeUVSWgpycW15akp0T1hlRldrRkg3UkJDcHRPRjh4WXFmVlFNTlcwc042WlhVbFZ3ZVZqdVhhVG1BY0tsQkZvV0JhR1d5Cms5VWpJT2pKMzhNeVhjdkxyN3VlMXhSeGRnV1BRYm9pRER1Y1M3Mk5CVmVzWlgxcXZXRUJCdlVqMFhvVFpiY3YKbGQ2dHNaRTNJT0FBRG8rZVJDMFdDcjNZRTE2RGJDdkwzSy9wSU1rN2lxRndXejYvUk9xUVNBWUZzdFhEZncrVgpRUmhrcUkvQnMwTVpySzFMbHdJREFRQUJvMkV3WHpBT0JnTlZIUThCQWY4RUJBTUNBcVF3SFFZRFZSMGxCQll3CkZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUUKRkd5MUcyc1NOd1g2OHpiRTRpbk1zaUNudm4xa01BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQXFSbjd3MmdoagpqZHp0RDl4eDZKT1RVSUkrRFovcldpckRoK215dmxpM24yNGJrNFQzNHg4S0hzN0RPNGp0SUtvZS9MNVJDL0RKClpTUEpyWVpxd2VCZDcxekNnY085NDFjZFVhbTlCVDBaTHEydEVDMEZ0aHB0Sm0yYjFKUDVZdVc1dExFOWZZdEgKdkRBVVprMmcvVno3R1hVM1BNY0d2ZlRNdkZVQjkraFNrTkdzNG1iYWxWZVZqZHkreFRqbjNZdzkzbzJUUHcyUQpBUGx4ZUREemFYUzhmTTZibEtiaUxKYWo1cTlVRWZzeWtrQlV0am4wUUdCODZWYWI3cHJFZHFTazZHckNzMGc2CmxaR1VHR3BEaFJ3LzZTOG5RQkJNR1RLZDhXc1J3VFlUTEJsZkExdWhyaC8weFpXL2o1VWVGaWZSNW5NWnlsdGkKZXJIK0RJOEcrbEpBCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  groupPriorityMinimum: 10000
  versionPriority: 15
---
# Source: opscenter-config/charts/panopticon/templates/license.yaml
# if license file is provided, then create a secret for license
---
# Source: opscenter-config/templates/grafana/grafana-auth.yaml
# if basic auth or bearer token is provided, then create a secret for auth
---
# Source: opscenter-config/templates/grafana/grafana-tls.yaml
# if tls is provided, then create a secret for tls
---
# Source: opscenter-config/templates/prometheus/prometheus-auth.yaml
# if basic auth or bearer token is provided, then create a secret for auth
---
# Source: opscenter-config/templates/prometheus/prometheus-tls.yaml
# if tls is provided, then create a secret for tls
---
# Source: opscenter-config/templates/grafana/appbinding.yaml
apiVersion: appcatalog.appscode.com/v1alpha1
kind: AppBinding
metadata:
  name: opscenter-grafana
  namespace: default
  labels:
    helm.sh/chart: opscenter-config-v2022.06.14
    app.kubernetes.io/name: opscenter-config
    app.kubernetes.io/instance: my-opscenter-config
    app.kubernetes.io/version: "v2022.06.14"
    app.kubernetes.io/managed-by: Helm
spec:
  type: Grafana
  clientConfig:
    service:
      scheme: 
      name: 
      namespace: 
      port:
---
# Source: opscenter-config/templates/prometheus/appbinding.yaml
apiVersion: appcatalog.appscode.com/v1alpha1
kind: AppBinding
metadata:
  name: opscenter-prometheus
  namespace: default
  labels:
    helm.sh/chart: opscenter-config-v2022.06.14
    app.kubernetes.io/name: opscenter-config
    app.kubernetes.io/instance: my-opscenter-config
    app.kubernetes.io/version: "v2022.06.14"
    app.kubernetes.io/managed-by: Helm
spec:
  type: Prometheus
  clientConfig:
    service:
      scheme: 
      name: 
      namespace: 
      port:
---
# Source: opscenter-config/charts/ui-presets/templates/kubedb.com/v1alpha2/elasticsearches/preset.yaml
apiVersion: charts.x-helm.dev/v1alpha1
kind: ClusterChartPreset
metadata:
  name: kubedb.com-v1alpha2-elasticsearches
spec:
  displayName: Elasticsearch
  selector: {}
  values:
    spec:
      monitoring:
        agent: ""
        serviceMonitor:
          labels: {}
    form:
      alert:
        enabled: false
        labels: {}
---
# Source: opscenter-config/charts/ui-presets/templates/kubedb.com/v1alpha2/mariadbs/preset.yaml
apiVersion: charts.x-helm.dev/v1alpha1
kind: ClusterChartPreset
metadata:
  name: kubedb.com-v1alpha2-mariadbs
spec:
  displayName: MariaDB
  selector: {}
  values:
    spec:
      monitoring:
        agent: ""
        serviceMonitor:
          labels: {}
    form:
      alert:
        enabled: false
        labels: {}
---
# Source: opscenter-config/charts/ui-presets/templates/kubedb.com/v1alpha2/mongodbs/preset.yaml
apiVersion: charts.x-helm.dev/v1alpha1
kind: ClusterChartPreset
metadata:
  name: kubedb.com-v1alpha2-mongodbs
spec:
  displayName: MongoDB
  selector: {}
  values:
    spec:
      monitoring:
        agent: ""
        serviceMonitor:
          labels: {}
    form:
      alert:
        enabled: false
        labels: {}
---
# Source: opscenter-config/charts/ui-presets/templates/kubedb.com/v1alpha2/mysqls/preset.yaml
apiVersion: charts.x-helm.dev/v1alpha1
kind: ClusterChartPreset
metadata:
  name: kubedb.com-v1alpha2-mysqls
spec:
  displayName: MySQL
  selector: {}
  values:
    spec:
      monitoring:
        agent: ""
        serviceMonitor:
          labels: {}
    form:
      alert:
        enabled: false
        labels: {}
---
# Source: opscenter-config/charts/ui-presets/templates/kubedb.com/v1alpha2/pgbouncers/preset.yaml
apiVersion: charts.x-helm.dev/v1alpha1
kind: ClusterChartPreset
metadata:
  name: kubedb.com-v1alpha2-pgbouncers
spec:
  displayName: PgBouncer
  selector: {}
  values:
    spec:
      monitoring:
        agent: ""
        serviceMonitor:
          labels: {}
    # form:
    #   alert:
    #
    #     enabled: false
    #     labels: {}
    #
---
# Source: opscenter-config/charts/ui-presets/templates/kubedb.com/v1alpha2/postgreses/preset.yaml
apiVersion: charts.x-helm.dev/v1alpha1
kind: ClusterChartPreset
metadata:
  name: kubedb.com-v1alpha2-postgreses
spec:
  displayName: Postgres
  selector: {}
  values:
    spec:
      monitoring:
        agent: ""
        serviceMonitor:
          labels: {}
    form:
      alert:
        enabled: false
        labels: {}
---
# Source: opscenter-config/charts/ui-presets/templates/kubedb.com/v1alpha2/proxysqls/preset.yaml
apiVersion: charts.x-helm.dev/v1alpha1
kind: ClusterChartPreset
metadata:
  name: kubedb.com-v1alpha2-proxysqls
spec:
  displayName: ProxySQL
  selector: {}
  values:
    spec:
      monitoring:
        agent: ""
        serviceMonitor:
          labels: {}
    form:
      alert:
        enabled: false
        labels: {}
---
# Source: opscenter-config/charts/ui-presets/templates/kubedb.com/v1alpha2/redises/preset.yaml
apiVersion: charts.x-helm.dev/v1alpha1
kind: ClusterChartPreset
metadata:
  name: kubedb.com-v1alpha2-redises
spec:
  displayName: Redis
  selector: {}
  values:
    spec:
      monitoring:
        agent: ""
        serviceMonitor:
          labels: {}
    form:
      alert:
        enabled: false
        labels: {}
---
# Source: opscenter-config/charts/ui-presets/templates/kubevault.com/v1alpha1/vaultservers/preset.yaml
apiVersion: charts.x-helm.dev/v1alpha1
kind: ClusterChartPreset
metadata:
  name: kubevault.com-v1alpha1-vaultservers
spec:
  selector: {}
  values:
    spec:
      monitoring:
        agent: ""
        serviceMonitor:
          labels: {}
    form:
      alert:
        enabled: false
        labels: {}
---
# Source: opscenter-config/charts/ui-presets/templates/kubedb.com/v1alpha2/elasticsearches/editor.yaml
apiVersion: ui.k8s.appscode.com/v1alpha1
kind: ResourceEditor
metadata:
  creationTimestamp: null
  labels:
    k8s.io/group: kubedb.com
    k8s.io/kind: Elasticsearch
    k8s.io/resource: elasticsearches
    k8s.io/version: v1alpha2
  name: kubedb.com-v1alpha2-elasticsearches
spec:
  resource:
    group: kubedb.com
    kind: Elasticsearch
    name: elasticsearches
    scope: Namespaced
    version: v1alpha2
  variants:
  - apiGroup: charts.x-helm.dev
    kind: ClusterChartPreset
    name: kubedb.com-v1alpha2-elasticsearches
---
# Source: opscenter-config/charts/ui-presets/templates/kubedb.com/v1alpha2/mariadbs/editor.yaml
apiVersion: ui.k8s.appscode.com/v1alpha1
kind: ResourceEditor
metadata:
  creationTimestamp: null
  labels:
    k8s.io/group: kubedb.com
    k8s.io/kind: MariaDB
    k8s.io/resource: mariadbs
    k8s.io/version: v1alpha2
  name: kubedb.com-v1alpha2-mariadbs
spec:
  resource:
    group: kubedb.com
    kind: MariaDB
    name: mariadbs
    scope: Namespaced
    version: v1alpha2
  variants:
  - apiGroup: charts.x-helm.dev
    kind: ClusterChartPreset
    name: kubedb.com-v1alpha2-mariadbs
---
# Source: opscenter-config/charts/ui-presets/templates/kubedb.com/v1alpha2/mongodbs/editor.yaml
apiVersion: ui.k8s.appscode.com/v1alpha1
kind: ResourceEditor
metadata:
  creationTimestamp: null
  labels:
    k8s.io/group: kubedb.com
    k8s.io/kind: MongoDB
    k8s.io/resource: mongodbs
    k8s.io/version: v1alpha2
  name: kubedb.com-v1alpha2-mongodbs
spec:
  resource:
    group: kubedb.com
    kind: MongoDB
    name: mongodbs
    scope: Namespaced
    version: v1alpha2
  variants:
  - apiGroup: charts.x-helm.dev
    kind: ClusterChartPreset
    name: kubedb.com-v1alpha2-mongodbs
---
# Source: opscenter-config/charts/ui-presets/templates/kubedb.com/v1alpha2/mysqls/editor.yaml
apiVersion: ui.k8s.appscode.com/v1alpha1
kind: ResourceEditor
metadata:
  creationTimestamp: null
  labels:
    k8s.io/group: kubedb.com
    k8s.io/kind: MySQL
    k8s.io/resource: mysqls
    k8s.io/version: v1alpha2
  name: kubedb.com-v1alpha2-mysqls
spec:
  resource:
    group: kubedb.com
    kind: MySQL
    name: mysqls
    scope: Namespaced
    version: v1alpha2
  variants:
  - apiGroup: charts.x-helm.dev
    kind: ClusterChartPreset
    name: kubedb.com-v1alpha2-mysqls
---
# Source: opscenter-config/charts/ui-presets/templates/kubedb.com/v1alpha2/pgbouncers/editor.yaml
apiVersion: ui.k8s.appscode.com/v1alpha1
kind: ResourceEditor
metadata:
  creationTimestamp: null
  labels:
    k8s.io/group: kubedb.com
    k8s.io/kind: PgBouncer
    k8s.io/resource: pgbouncers
    k8s.io/version: v1alpha2
  name: kubedb.com-v1alpha2-pgbouncers
spec:
  resource:
    group: kubedb.com
    kind: PgBouncer
    name: pgbouncers
    scope: Namespaced
    version: v1alpha2
  variants:
    - apiGroup: charts.x-helm.dev
      kind: ClusterChartPreset
      name: kubedb.com-v1alpha2-pgbouncers
---
# Source: opscenter-config/charts/ui-presets/templates/kubedb.com/v1alpha2/postgreses/editor.yaml
apiVersion: ui.k8s.appscode.com/v1alpha1
kind: ResourceEditor
metadata:
  creationTimestamp: null
  labels:
    k8s.io/group: kubedb.com
    k8s.io/kind: Postgres
    k8s.io/resource: postgreses
    k8s.io/version: v1alpha2
  name: kubedb.com-v1alpha2-postgreses
spec:
  resource:
    group: kubedb.com
    kind: Postgres
    name: postgreses
    scope: Namespaced
    version: v1alpha2
  variants:
  - apiGroup: charts.x-helm.dev
    kind: ClusterChartPreset
    name: kubedb.com-v1alpha2-postgreses
---
# Source: opscenter-config/charts/ui-presets/templates/kubedb.com/v1alpha2/proxysqls/editor.yaml
apiVersion: ui.k8s.appscode.com/v1alpha1
kind: ResourceEditor
metadata:
  creationTimestamp: null
  labels:
    k8s.io/group: kubedb.com
    k8s.io/kind: ProxySQL
    k8s.io/resource: proxysqls
    k8s.io/version: v1alpha2
  name: kubedb.com-v1alpha2-proxysqls
spec:
  resource:
    group: kubedb.com
    kind: ProxySQL
    name: proxysqls
    scope: Namespaced
    version: v1alpha2
  variants:
    - apiGroup: charts.x-helm.dev
      kind: ClusterChartPreset
      name: kubedb.com-v1alpha2-proxysqls
---
# Source: opscenter-config/charts/ui-presets/templates/kubedb.com/v1alpha2/redises/editor.yaml
apiVersion: ui.k8s.appscode.com/v1alpha1
kind: ResourceEditor
metadata:
  creationTimestamp: null
  labels:
    k8s.io/group: kubedb.com
    k8s.io/kind: Redis
    k8s.io/resource: redises
    k8s.io/version: v1alpha2
  name: kubedb.com-v1alpha2-redises
spec:
  resource:
    group: kubedb.com
    kind: Redis
    name: redises
    scope: Namespaced
    version: v1alpha2
  variants:
  - apiGroup: charts.x-helm.dev
    kind: ClusterChartPreset
    name: kubedb.com-v1alpha2-redises
---
# Source: opscenter-config/charts/ui-presets/templates/kubevault.com/v1alpha1/vaultservers/editor.yaml
apiVersion: ui.k8s.appscode.com/v1alpha1
kind: ResourceEditor
metadata:
  creationTimestamp: null
  labels:
    k8s.io/group: kubevault.com
    k8s.io/kind: VaultServer
    k8s.io/resource: vaultservers
    k8s.io/version: v1alpha1
  name: kubevault.com-v1alpha1-vaultservers
spec:
  resource:
    group: kubevault.com
    kind: VaultServer
    name: vaultservers
    scope: Namespaced
    version: v1alpha1
  variants:
  - apiGroup: charts.x-helm.dev
    kind: ClusterChartPreset
    name: kubevault.com-v1alpha1-vaultservers
---
# Source: opscenter-config/charts/panopticon/templates/servicemonitor.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: my-opscenter-config-panopticon
  namespace: default
  labels:
    app.kubernetes.io/name: panopticon
    app.kubernetes.io/instance: my-opscenter-config
spec:
  namespaceSelector:
    matchNames:
    - default
  selector:
    matchLabels:
      app.kubernetes.io/name: panopticon
      app.kubernetes.io/instance: my-opscenter-config
  endpoints:
  - port: api
    bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
    scheme: https
    interval: 10s
    relabelings:
      - action: labeldrop
        regex: (pod|service|endpoint|namespace)
    tlsConfig:
      ca:
        secret:
          name: my-opscenter-config-panopticon-apiserver-cert
          key: tls.crt
      serverName: "my-opscenter-config-panopticon.default.svc"
  - port: telemetry
    bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
    scheme: http
    interval: 10s
---
# Source: opscenter-config/charts/panopticon/templates/license-checker-cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: appscode:license-checker
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
# Get cluster id
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs: ["get"]
# Issue license
- apiGroups:
  - proxyserver.licenses.appscode.com
  resources:
  - licenserequests
  verbs: ["create"]
# Detect workload/owner of operator pod
- apiGroups:
  - ""
  resources:
  - pods
  verbs: ["get"]
- apiGroups:
  - apps
  resources:
  - deployments
  - replicasets
  verbs: ["get"]
# Write events in case of license verification failure
- apiGroups:
  - ""
  resources:
  - events
  verbs: ["get", "list", "create", "patch"]
---
# Source: opscenter-config/charts/panopticon/templates/license-reader-cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: appscode:license-reader
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
# Detect license server endpoint for kubedb addons
- apiGroups:
  - apiregistration.k8s.io
  resources:
  - apiservices
  verbs: ["get"]
- nonResourceURLs:
  - /appscode/license
  verbs: ["get"]
---
# Source: opscenter-config/charts/panopticon/templates/cleaner.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: my-opscenter-config-panopticon-cleaner
  namespace: default
  labels:
    helm.sh/chart: panopticon-v2022.06.14
    app.kubernetes.io/name: panopticon
    app.kubernetes.io/instance: my-opscenter-config
    app.kubernetes.io/version: "v0.0.6"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": pre-delete
    "helm.sh/hook-delete-policy": hook-succeeded,hook-failed
spec:
  backoffLimit: 3
  activeDeadlineSeconds: 120
  template:
    spec:
      imagePullSecrets:
        []
      serviceAccountName: my-opscenter-config-panopticon
      containers:
      - name: busybox
        securityContext:
          {}
        image: ghcr.io/appscode/kubectl:v1.22
        command:
          - sh
          - -c
          - "sleep 2; \
           kubectl delete validatingwebhookconfigurations validators.metrics.appscode.com || true; \
           kubectl delete apiservice v1alpha1.validators.metrics.appscode.com || true;"
        imagePullPolicy: IfNotPresent
      restartPolicy: Never
      securityContext:
        fsGroup: 65535
---
# Source: opscenter-config/charts/panopticon/templates/validating-webhook.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: validators.metrics.appscode.com
  labels:
    helm.sh/chart: panopticon-v2022.06.14
    app.kubernetes.io/name: panopticon
    app.kubernetes.io/instance: my-opscenter-config
    app.kubernetes.io/version: "v0.0.6"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
webhooks:
  - name: metricsconfigurations.validators.metrics.appscode.com
    clientConfig:
      service:
        namespace: default
        name: kubernetes
        path: /apis/validators.metrics.appscode.com/v1alpha1/metricsconfigurationwebhooks
      caBundle: dW5rbm93bg==
    rules:
      - operations:
          - CREATE
          - UPDATE
        apiGroups:
          - metrics.appscode.com
        apiVersions:
          - "*"
        resources:
          - metricsconfigurations
    admissionReviewVersions: ["v1beta1"]
    failurePolicy: Fail
    sideEffects: None
