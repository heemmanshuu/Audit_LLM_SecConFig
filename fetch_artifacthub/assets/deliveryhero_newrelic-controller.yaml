---
# Source: newrelic-controller/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/name: newrelic-controller
    helm.sh/chart: newrelic-controller-1.1
    app.kubernetes.io/instance: my-newrelic-controller
    app.kubernetes.io/version: "0.8"
    app.kubernetes.io/managed-by: Helm
  name: my-newrelic-controller
---
# Source: newrelic-controller/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-newrelic-controller
  labels:
    app.kubernetes.io/name: newrelic-controller
    helm.sh/chart: newrelic-controller-1.1
    app.kubernetes.io/instance: my-newrelic-controller
    app.kubernetes.io/version: "0.8"
    app.kubernetes.io/managed-by: Helm
data:
  api_key: "eW91cl9rZXlfaGVyZQ=="
type: Opaque
---
# Source: newrelic-controller/templates/crd.yaml
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: newrelicsettings.newrelic.com
  labels:
    app.kubernetes.io/name: newrelic-controller
    helm.sh/chart: newrelic-controller-1.1
    app.kubernetes.io/instance: my-newrelic-controller
    app.kubernetes.io/version: "0.8"
    app.kubernetes.io/managed-by: Helm
spec:
  group: newrelic.com
  versions:
    - name: v1
      served: true
      storage: true
  scope: Namespaced
  names:
    plural: newrelicsettings
    singular: newrelicsetting
    kind: NewRelicSetting
    shortNames:
    - nrs
  validation:
    openAPIV3Schema:
      properties:
        spec:
          required:
          - application
          properties:
            application:
              type: object
---
# Source: newrelic-controller/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/name: newrelic-controller
    helm.sh/chart: newrelic-controller-1.1
    app.kubernetes.io/instance: my-newrelic-controller
    app.kubernetes.io/version: "0.8"
    app.kubernetes.io/managed-by: Helm
  name: my-newrelic-controller
rules:
  - apiGroups: ["newrelic.com"]
    resources: ["newrelicsettings"]
    verbs: ["get", "list", "watch", "create", "update", "patch"]
---
# Source: newrelic-controller/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/name: newrelic-controller
    helm.sh/chart: newrelic-controller-1.1
    app.kubernetes.io/instance: my-newrelic-controller
    app.kubernetes.io/version: "0.8"
    app.kubernetes.io/managed-by: Helm
  name: my-newrelic-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-newrelic-controller
subjects:
  - kind: ServiceAccount
    name: my-newrelic-controller
    namespace: default
---
# Source: newrelic-controller/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-newrelic-controller
  labels:
    app.kubernetes.io/name: newrelic-controller
    helm.sh/chart: newrelic-controller-1.1
    app.kubernetes.io/instance: my-newrelic-controller
    app.kubernetes.io/version: "0.8"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: newrelic-controller
      app.kubernetes.io/instance: my-newrelic-controller
  template:
    metadata:
      labels:
        app.kubernetes.io/name: newrelic-controller
        app.kubernetes.io/instance: my-newrelic-controller
    spec:
      serviceAccountName: my-newrelic-controller
      containers:
        - name: newrelic-controller
          image: "maxrocketinternet/newrelic-controller:0.8"
          imagePullPolicy: IfNotPresent
          env:
            - name: NEW_RELIC_API_KEY
              valueFrom:
                secretKeyRef:
                  name: my-newrelic-controller
                  key: api_key
            - name: LOG_LEVEL
              value: "info"
          resources:
            {}
