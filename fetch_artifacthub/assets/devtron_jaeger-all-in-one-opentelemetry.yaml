---
# Source: jaeger-all-in-one-opentelemetry/templates/ConfigMap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-jaeger-all-in-one-opentelemetry-config
  namespace: opentelemetry
  labels:
   app: opentelemetry
   component: optl-collector-config
data:
  optl-collector-config:     |
      receivers:
        otlp:
          protocols:
            grpc:
              endpoint: "0.0.0.0:4317"
            http:
              endpoint: "0.0.0.0:4318"
      processors:
        batch:
        memory_limiter:
          # 80% of maximum memory up to 2G
          limit_mib: 1500
          # 25% of limit up to 2G
          spike_limit_mib: 512
          check_interval: 5s
      extensions:
        zpages: {}
        memory_ballast:
          # Memory Ballast size should be max 1/3 to 1/2 of memory.
          size_mib: 683
      exporters:
        logging:
          loglevel: info
        jaeger:
          endpoint: jaeger-headless.opentelemetry:14250
          tls:
            insecure: true
      service:
        extensions: [zpages, memory_ballast]
        pipelines:
          traces/1:
            receivers: [otlp]
            #processors: [memory_limiter, batch]
            exporters: [logging, jaeger]
---
# Source: jaeger-all-in-one-opentelemetry/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
 name: my-jaeger-all-in-one-opentelemetry-optl
 namespace: opentelemetry
 labels:
   app: opentelemetry
   component: otel-collector
spec:
 type: ClusterIP
 ports:
   - name: otlp-grpc 
     port: 4317
     protocol: TCP
     targetPort:  4317
   - name: otlp-http 
     port: 4318
     protocol: TCP
     targetPort:  4318
 selector:
   app: opentelemetry
   name: optl
---
# Source: jaeger-all-in-one-opentelemetry/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-jaeger-all-in-one-opentelemetry-jaeger-headless
  namespace: opentelemetry
  labels:
   app: opentelemetry
   component: optl-collector
spec:
  ports:
   - port: 16686
     name: web
   - port: 14250
     name: optl-connection
   - port: 4317
     name: grpc
  clusterIP: None
  selector:
       app: opentelemetry
       component: optl-collector
       name: jaeger
---
# Source: jaeger-all-in-one-opentelemetry/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-jaeger-all-in-one-opentelemetry-jaeger-query
  namespace: opentelemetry
  labels:
   app: opentelemetry
   component: optl-collector
   name: jaeger
spec:
  ports:
    - name: query-http
      port: 16686
      protocol: TCP
  selector:
      app: opentelemetry
      component: optl-collector
      name: jaeger
  type: ClusterIP
---
# Source: jaeger-all-in-one-opentelemetry/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
 name: my-jaeger-all-in-one-opentelemetry-optl-deployment
 namespace: opentelemetry
 labels:
   name: optl
   app: opentelemetry
   component: optl-collector
spec:
 selector:
   matchLabels:
     name: optl
     app: opentelemetry
     component: optl-collector
 minReadySeconds: 5
 replicas: 1
 template:
   metadata:
     name: my-jaeger-all-in-one-opentelemetry-optl
     namespace: opentelemetry
     labels:
       name: optl
       app: opentelemetry
       component: optl-collector
   spec:
     containers:
       - command:
           - '/otelcol'
           - '--config=/conf/optl-collector-config.yaml'
         image: otel/opentelemetry-collector:latest
         name: otel-collector
         resources:
           limits:
             cpu: 1
             memory: 2Gi
           requests:
             cpu: 200m
             memory: 400Mi
         ports:
           - containerPort: 4317
         volumeMounts:
           - name: optl-collector-config-vol
             mountPath: /conf
     volumes:
       - configMap:
           name: my-jaeger-all-in-one-opentelemetry-config
           items:
             - key: optl-collector-config
               path: optl-collector-config.yaml
         name: optl-collector-config-vol
---
# Source: jaeger-all-in-one-opentelemetry/templates/StatefulSet.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
 name: my-jaeger-all-in-one-opentelemetry-jaeger-all-in-one
 namespace: opentelemetry
 labels:
   app: opentelemetry
   component: optl-collector
   name: jaeger
spec: 
  serviceName: "jaeger-headless"
  replicas: 1
  selector:
   matchLabels:
      app: opentelemetry
      component: optl-collector
      name: jaeger
  template:
   metadata:
     labels:
       app: opentelemetry
       component: optl-collector
       name: jaeger
   spec:
     containers:
       - image: jaegertracing/all-in-one:latest
         name: jaeger
         ports:
          - containerPort: 16686
          - containerPort: 14250
          - containerPort: 4317
        
         env:
           - name: "SPAN_STORAGE_TYPE"
             value: "badger"
           - name: "COLLECTOR_OTLP_ENABLED"
             value: "true"
           - name: "BADGER_EPHEMERAL"
             value: "false"
           - name: "BADGER_DIRECTORY_VALUE"
             value: "/badger/data"
           - name: "BADGER_DIRECTORY_KEY"
             value: "/badger/key"
         volumeMounts:
         - name: jaeger-pvc
           mountPath: /badger
  volumeClaimTemplates:
  - metadata:
      name: jaeger-pvc
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage:  10Gi
---
# Source: jaeger-all-in-one-opentelemetry/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: my-jaeger-all-in-one-opentelemetry-ingress
spec:
  rules:
    - host: "foo.bar.com"
      http:
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name: my-jaeger-all-in-one-opentelemetry-jaeger-query 
                port:
                  number: 16686
---
# Source: jaeger-all-in-one-opentelemetry/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "my-jaeger-all-in-one-opentelemetry-test-connection"
  labels:
    helm.sh/chart: jaeger-all-in-one-opentelemetry-0.1.0
    app.kubernetes.io/name: jaeger-all-in-one-opentelemetry
    app.kubernetes.io/instance: my-jaeger-all-in-one-opentelemetry
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['my-jaeger-all-in-one-opentelemetry:80']
  restartPolicy: Never
