---
# Source: kubernetes-replicator/templates/rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-kubernetes-replicator
  labels:
    helm.sh/chart: kubernetes-replicator-2.10.2
    app.kubernetes.io/name: kubernetes-replicator
    app.kubernetes.io/instance: my-kubernetes-replicator
    app.kubernetes.io/version: "v2.10.2"
    app.kubernetes.io/managed-by: Helm
automountServiceAccountToken: true
---
# Source: kubernetes-replicator/templates/rbac.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: my-kubernetes-replicator
  labels:
    helm.sh/chart: kubernetes-replicator-2.10.2
    app.kubernetes.io/name: kubernetes-replicator
    app.kubernetes.io/instance: my-kubernetes-replicator
    app.kubernetes.io/version: "v2.10.2"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
    - ""
    resources:
    - namespaces
    verbs:
    - get
    - watch
    - list

  - apiGroups:
    - ""
    resources:
    - secrets
    - configmaps
    - serviceaccounts
    verbs:
    - get
    - watch
    - list
    - create
    - update
    - patch
    - delete
  - apiGroups:
    - rbac.authorization.k8s.io
    resources:
    - roles
    - rolebindings
    verbs:
    - get
    - watch
    - list
    - create
    - update
    - patch
    - delete
---
# Source: kubernetes-replicator/templates/rbac.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: my-kubernetes-replicator
  labels:
    helm.sh/chart: kubernetes-replicator-2.10.2
    app.kubernetes.io/name: kubernetes-replicator
    app.kubernetes.io/instance: my-kubernetes-replicator
    app.kubernetes.io/version: "v2.10.2"
    app.kubernetes.io/managed-by: Helm
roleRef:
  kind: ClusterRole
  name: my-kubernetes-replicator
  apiGroup: rbac.authorization.k8s.io
subjects:
  - kind: ServiceAccount
    name: my-kubernetes-replicator
    namespace: "default"
---
# Source: kubernetes-replicator/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-kubernetes-replicator
  labels:
    helm.sh/chart: kubernetes-replicator-2.10.2
    app.kubernetes.io/name: kubernetes-replicator
    app.kubernetes.io/instance: my-kubernetes-replicator
    app.kubernetes.io/version: "v2.10.2"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kubernetes-replicator
      app.kubernetes.io/instance: my-kubernetes-replicator
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kubernetes-replicator
        app.kubernetes.io/instance: my-kubernetes-replicator
    spec:
      serviceAccountName: my-kubernetes-replicator
      automountServiceAccountToken: true
      securityContext:
        {}
      containers:
        - name: kubernetes-replicator
          securityContext:
            {}
          image: "quay.io/mittwald/kubernetes-replicator:v2.10.2"
          imagePullPolicy: Always
          args:
            - -replicate-secrets=true
            - -replicate-configmaps=true
            - -replicate-roles=true
            - -replicate-role-bindings=true
            - -replicate-service-accounts=true
          ports:
            - name: health
              containerPort: 9102
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: health
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /readyz
              port: health
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 3
          resources:
            {}
