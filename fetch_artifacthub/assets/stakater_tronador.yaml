---
# Source: tronador/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-tronador
  labels:
    helm.sh/chart: tronador-0.0.1
    app.kubernetes.io/name: tronador
    app.kubernetes.io/instance: my-tronador
    app.kubernetes.io/version: "0.0.1"
    app.kubernetes.io/managed-by: Helm
---
# Source: tronador/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: tronador
rules:
- apiGroups:
  - tronador.stakater.com
  resources:
  - testenvconfigs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - tronador.stakater.com
  resources:
  - testenvconfigs/finalizers
  verbs:
  - update
- apiGroups:
  - tronador.stakater.com
  resources:
  - testenvconfigs/status
  verbs:
  - get
  - patch
  - update
---
# Source: tronador/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-tronador-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: admin
subjects:
- kind: ServiceAccount
  name: my-tronador
  namespace: default
---
# Source: tronador/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-tronador-operator-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: tronador
subjects:
- kind: ServiceAccount
  name: my-tronador
  namespace: default
---
# Source: tronador/templates/role.yaml
# permissions to do leader election.
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: my-tronador-role
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - configmaps/status
  verbs:
  - get
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
# Source: tronador/templates/role_binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: my-tronador-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: my-tronador-role
subjects:
- kind: ServiceAccount
  name: my-tronador
  namespace: default
---
# Source: tronador/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: default
  name: my-tronador
  labels:
    helm.sh/chart: tronador-0.0.1
    app.kubernetes.io/name: tronador
    app.kubernetes.io/instance: my-tronador
    app.kubernetes.io/version: "0.0.1"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: tronador
      app.kubernetes.io/instance: my-tronador
  template:
    metadata:
      labels:
        app.kubernetes.io/name: tronador
        app.kubernetes.io/instance: my-tronador
    spec:
      serviceAccountName: my-tronador
      securityContext:
        {}
      containers:
        - name: tronador
          env:
          - name: OPERATOR_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          args:
          - --enable-leader-election
          securityContext:
            {}
          image: "stakater/tronador:v0.0.1"
          imagePullPolicy: IfNotPresent
          resources:
            {}
