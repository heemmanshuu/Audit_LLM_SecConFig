---
# Source: dash0-operator/templates/operator/service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: dash0-operator-controller
  namespace: default
  labels:
    app.kubernetes.io/name: dash0-operator
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: service-account
    app.kubernetes.io/version: "0.18.0"
    app.kubernetes.io/part-of: dash0-operator
    app.kubernetes.io/managed-by: "Helm"
    helm.sh/chart: dash0-operator-0.18.0
---
# Source: dash0-operator/templates/operator/deployment-and-webhook.yaml
apiVersion: v1
kind: Secret
type: kubernetes.io/tls
metadata:
  name: dash0-operator-certificates
  labels:
    app.kubernetes.io/name: dash0-operator
    app.kubernetes.io/component: certificates
    app.kubernetes.io/instance: secret
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKRENDQWd5Z0F3SUJBZ0lSQU9Db0hUYnhzOGhxSFlYVVpSMkMybXd3RFFZSktvWklodmNOQVFFTEJRQXcKSERFYU1CZ0dBMVVFQXhNUlpHRnphREF0YjNCbGNtRjBiM0l0WTJFd0hoY05NalF3T1RFMk1EZ3lPREF5V2hjTgpNalV3T1RFMk1EZ3lPREF5V2pBY01Sb3dHQVlEVlFRREV4RmtZWE5vTUMxdmNHVnlZWFJ2Y2kxallUQ0NBU0l3CkRRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFONmJ3L1RiMTAveERBajZEdEk1d0JNOU11QngKNjNFeUJFeFBhUUkrYUZ0TnNVMDh0OWZnaEpnQWlKZVMvWEJQbEdqQlpPMkxhTkpNWTU0Uks2eW9lK1IzZVhadwpSb2lHR1I4NXpuaDBuMUhMTzFnbXF0aHovMzV5UUk3WkVSUVdTNUNYUWw3ZXY4RGZELy96M2RaNytkWTZIMitJCnJrOVJqNXRISExoV0RCMzZKOXhVUWpmV2lYRG96STRtZklMN1prbDByM0NOay9ock5JVXN1VHdSZEJNcUNkQnAKWWIzRXM3QmtxZnpWTW93Y3N3TzQ1RXJ3TElPZ2hpaitlMHcrdGtYaG5iNFZQMkt6Zk81eGE3QjRDb1FrSkkvVwpYR1FPTHhucDVhL0RwZ0pFVVVyK2haQjlTQjFiNWp1UVF2OG4rRmMyd0pWc1owb0lPVnJaS0NtR2RQa0NBd0VBCkFhTmhNRjh3RGdZRFZSMFBBUUgvQkFRREFnS2tNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01CMEdBMVVkRGdRV0JCUVM3Z20zenJlUC9jZHA5dG9jVkRZNQpDSndqc1RBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQWoxQ2RCS25tb2tSZm5sRWhDbVBIdUczRWhpaUZhN2liCmpLTldFellTb04yZW5qcUtsVm50aDlma2h0M0lHR3dLZ1JxQnZLNnNLUWhDVnJZUUZLL2JJaDhQK2lHVm5URzgKZURnNnBnczF6OThKcEtGc3N6RUFrQXd3bXQxalplWnJoM3ZqU0tkNlhYdWhnc0VXdC9BZTdrZ3RZZVBnWDN1TQpobUJXVjZkaDlxKzdXR1hZaGRaOUhtdnF1ZENsVTBPUlc1MHU5NG9iRnh5WHZrVXU5Q0FzcmtJeDNWdEVNWC80CjhGUE11a3FoZzFhZXdjdWV6ckM4Y1p2WjdDTTFGSmg0QzdZYkZyby9McTVDWjRYMUlMdmplbTUvQytVR0xETk0Kcm1HdTJYa21sUlIvVllJZ1dHdHZMbk9iTkJFU2JhcEtCc3hSYTJXcFZYaVRaaGJJbHhOOVdBPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURkVENDQWwyZ0F3SUJBZ0lRT1Y2REFScEJoRS9KWGcvUHpiTEx3akFOQmdrcWhraUc5dzBCQVFzRkFEQWMKTVJvd0dBWURWUVFERXhGa1lYTm9NQzF2Y0dWeVlYUnZjaTFqWVRBZUZ3MHlOREE1TVRZd09ESTRNREphRncweQpOVEE1TVRZd09ESTRNREphTUJreEZ6QVZCZ05WQkFNVERtUmhjMmd3TFc5d1pYSmhkRzl5TUlJQklqQU5CZ2txCmhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBcXFtLzJGNkNMR3VuMXNIUFNBUkZyMnFqbDlKN2VnRmsKUlB6NGpwTEFHTXRjRlV2UnRtVVAvSW4yRlRGdDViR1k3S3Myc1RCZE9CTWdqZFM4aUZKemIvZitqRSt2QTllYwpiTTgvVDhuNHZHNlhwRkVyZWlJSjVhTEJnR1ByZEkrU2xNOHZyU05nQVVKb0lsWTZhdWtvQWtyZW50bHZ6bUdBCnFDOEdqRkF5ektlSFYrd3VMb0FvaGpMdEVuYk54ekNRZC9KbUlNUHcrRjkwcDN1Q1hwbXZuL3J6d2RyZkFtVmUKa1AwaThUNnJKc3RkTlNjQnZKTmh5Y3lxWGQ5OU9IUCtZVVZBUTFlSjJNcVZmL0pUMlB1Y1lCNUloaExxZlRPKwp4OWhJN0YrMVdVajAvOXRhTkNaS0cxelBDZjgzTnNWK1NCY2ZwS0k5OWlKZGVPZWlUSkVmeVFJREFRQUJvNEcxCk1JR3lNQTRHQTFVZER3RUIvd1FFQXdJRm9EQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUgKQXdJd0RBWURWUjBUQVFIL0JBSXdBREFmQmdOVkhTTUVHREFXZ0JRUzdnbTN6cmVQL2NkcDl0b2NWRFk1Q0p3agpzVEJTQmdOVkhSRUVTekJKZ2lOa1lYTm9NQzF2Y0dWeVlYUnZjaTFwYm1wbFkzUnZjaTVrWldaaGRXeDBMbk4yClk0SWlaR0Z6YURBdGIzQmxjbUYwYjNJdGJXVjBjbWxqY3k1a1pXWmhkV3gwTG5OMll6QU5CZ2txaGtpRzl3MEIKQVFzRkFBT0NBUUVBbWVmdDU3MGcycU4xdGF1YzFob05MTHY1U1ZoQWo5VHFpM1gvT29PYlRHL0tsSGJYMW12eQptSUw4dzNndnpwZkVvdjJmL0I5U1BRVndWdWhMSkxEaXhsZHdzN3BVZ0pZM002UnhlczJERm5LL2ZrN2M2cEp0CnhIaC9TNFJOalRPdzJPakUwZTBXVFkrTmZuZ0JISEVFRk03SEpZYk9abmVMQkxNVE9xcEdpbVJxM1h2bElJMngKc2MvY0RSeXRFWi9SSCtsbit1ZFlCWGQvMWN4U0wzajF1WVlGd21qQWdwekVLVmRWb2hUNk5RTGZBRWdlUEQ2SQpHZHRveGFIVFA4Qk9mWlVaaVRTWTV5MHhDcHBaQ2p6d1FuQkFlRVFQUndUZ3hYYWZDKzZqRHFyVTBMKzdTZTh5CmdtZDJ2YjhGWnlIS3F5eERieWF1T3ZlNlJuTHI5Y0VhV2c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBcXFtLzJGNkNMR3VuMXNIUFNBUkZyMnFqbDlKN2VnRmtSUHo0anBMQUdNdGNGVXZSCnRtVVAvSW4yRlRGdDViR1k3S3Myc1RCZE9CTWdqZFM4aUZKemIvZitqRSt2QTllY2JNOC9UOG40dkc2WHBGRXIKZWlJSjVhTEJnR1ByZEkrU2xNOHZyU05nQVVKb0lsWTZhdWtvQWtyZW50bHZ6bUdBcUM4R2pGQXl6S2VIVit3dQpMb0FvaGpMdEVuYk54ekNRZC9KbUlNUHcrRjkwcDN1Q1hwbXZuL3J6d2RyZkFtVmVrUDBpOFQ2ckpzdGROU2NCCnZKTmh5Y3lxWGQ5OU9IUCtZVVZBUTFlSjJNcVZmL0pUMlB1Y1lCNUloaExxZlRPK3g5aEk3RisxV1VqMC85dGEKTkNaS0cxelBDZjgzTnNWK1NCY2ZwS0k5OWlKZGVPZWlUSkVmeVFJREFRQUJBb0lCQUJ2WWFJSGdJYk1udVpIVAp1NE5QbHlNZzdpSkdhSGttb3ZxU24rZDdVRFo3YjhIVnhoalJjb05NNjBiWDhzdG9aOEF0eTFXcnczbnp2UHNICk85K3VQRUdIb0JPNnFKNmkzbFh1bHJEcERsbUlYZHVrbHNodHAxbTliWDhLVG8rTklXaUFTWkloVkhmQUl3ZC8KTkRiZlpmVEJ6SUwwalVhS0tCakkyM09uWGpKLzJ0eWhrWGlBUDhZNGx1ckd0MTdOREdxaENNUm02M2F3NnovagppOENhOFdEc0sxeC9pck9FNE54Q1Q0OThzVTF6dlRKQUpFRTkweUR4bDFBMFhmN096Y1RqemlvZ1BlYmZQajhVCkR2NXM3eGxTcXVrTFpMaVU5WU9IRm43aXo0UW5nZEVSTW8rNCtyZnVwVFFNaEowRU1COFhCK1BIMkVKb1FWVEsKMjN3cStWRUNnWUVBMXJvaUc1eEpxa1R0ejZzTlFMVjdSdkp2OWZBRkJaOXE2WjFNckxUTGJ2cmFwUU9YaDJvUApCOGhHM0xJL2tQc3NoblY3Um1iNDhzRkI4Zzdjd051b3FUUlVUT0lBdGQ3K2Jjc1U0Z0pnNlU3eUgxelZib0pNCi9hNmRFM2hHRzRGN25zdk0vdEV3dnUvd2p5UDhjb3J1NWg1TXZxZkRpeVUyQmlPSUdEc0RVWjBDZ1lFQXkzZG0KMittVWRHRkxUKzgydnJYUUhxYXVTZG5BaHM0V3dZN0w1VDdGOGdhK2VuRjhwdUxIa2dLeFdNNGI3cDVSL3p1bgpFengyb2hyVzVNdXoySU5GcUNsNjMzYUtoQWpPRVVwRjJXVWdUUktkVXVXZnNnb0tLUnd2Z0VzYkdYOGwvWldYClNLcXNVbUpKWTI4Z2dzd0xKQy9ZRExKR3hNUUgyd0hjNHlETEZSMENnWUF1NXV0S1VxSDRraVBMeDVZV2UwMloKR3AxLy85Um8vUUJTVk95SmtOZ2F2cXFCZnI1YmNyd2p2QWhXYm96Wjh6TXZqM3ZFemZzMHN5ZmZZb1d2am90UgpvaitEcDUzMkcrWkJQeW1wa0ZGd3hMQzRUd1BEcHF5QWdPS0lmUzM3RmhaVmdqaWR0RDNNaHdacGpiZTNvVWM3CmRvVFc1RGdmTFpxV1RxNk1kRjl1TlFLQmdEY3o5UmRUWDNEWCtPditGaGRXRXRwT0ZObDZsKzY3T1pkWVc5K2QKMFd6aUFZb05BbW53KzM2VTluTUdzTE5rQnhFOXFRM2lDTG5nbUU5SktVbGtER0VjcC9hN0hjZkc3OG5uSWQ1aQp2b25LdEI2S3FISlFvUU1ZWDVicVNiYjROV0dBMWFQa2tvNWpsay9CRmN3RytqcmVORHIxbjVmQksvUnlvL0NICnRESE5Bb0dBUjI0WFdUYlNxMExpalNpOGZkYkpCaEY1cGU5elczTEJoZ3d6V0RNUE9NZCtScTZhVEhSdVRJMjkKK3FpYVowZmZITTkwb25CWEFURWZmUUw0dTRXc0xHakx4TFAvWHAzREpzYlArclpJOGxzMmNVY3I0RUErRkJGMgpFWWdieDlZUHhEcUhEZkRXUndPbVpoZllQOHp0SEoyVm9hMDQxQjJEMlJNalpOODZkRzA9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: dash0-operator/templates/operator/custom-resource-definition-monitoring.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: dash0monitorings.operator.dash0.com
spec:
  group: operator.dash0.com
  names:
    kind: Dash0Monitoring
    listKind: Dash0MonitoringList
    plural: dash0monitorings
    singular: dash0monitoring
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Dash0Monitoring is the schema for the Dash0Monitoring API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: |-
              Dash0MonitoringSpec describes the details of monitoring a single Kubernetes namespace with Dash0 and sending
              telemetry to an observability backend.
            properties:
              export:
                description: |-
                  The configuration of the observability backend to which telemetry data will be sent. This property is mandatory.
                  This can either be Dash0 or another OTLP-compatible backend. You can also combine up to three exporters (i.e.
                  Dash0 plus gRPC plus HTTP). This allows sending the same data to two or three targets simultaneously. At least
                  one exporter has to be defined.
                minProperties: 1
                properties:
                  dash0:
                    description: The configuration of the Dash0 ingress endpoint to
                      which telemetry data will be sent.
                    properties:
                      authorization:
                        description: Mandatory authorization settings for sending
                          data to Dash0.
                        maxProperties: 1
                        minProperties: 1
                        properties:
                          secretRef:
                            description: |-
                              A reference to a Kubernetes secret containing the Dash0 authorization token. This property is optional, and is
                              ignored if the token property is set. The authorization token for your Dash0 organization can be copied from
                              https://app.dash0.com/settings.
                            properties:
                              key:
                                default: token
                                description: The key of the value which contains the
                                  Dash0 authorization token. Defaults to "token"
                                type: string
                              name:
                                default: dash0-authorization-secret
                                description: The name of the secret containing the
                                  Dash0 authorization token. Defaults to "dash0-authorization-secret".
                                type: string
                            required:
                            - key
                            - name
                            type: object
                          token:
                            description: |-
                              The Dash0 authorization token. This property is optional, but either this property or the SecretRef property has
                              to be provided. If both are provided, the token will be used and SecretRef will be ignored. The authorization
                              token for your Dash0 organization can be copied from https://app.dash0.com/settings.
                            type: string
                        type: object
                      dataset:
                        default: default
                        description: |-
                          The name of the Dash0 dataset to which telemetry data will be sent. This property is optional. If omitted, the
                          dataset "default" will be used.
                        type: string
                      endpoint:
                        description: |-
                          The URL of the Dash0 ingress endpoint to which telemetry data will be sent. This property is mandatory. The value
                          needs to be the OTLP/gRPC endpoint of your Dash0 organization. The correct OTLP/gRPC endpoint can be copied fom
                          https://app.dash0.com/settings. The correct endpoint value will always start with `ingress.` and end in
                          `dash0.com:4317`.
                        type: string
                    required:
                    - authorization
                    - endpoint
                    type: object
                  grpc:
                    description: The settings for an exporter to send telemetry to
                      an arbitrary OTLP-compatible receiver via gRPC.
                    properties:
                      endpoint:
                        description: The URL of the OTLP-compatible receiver to which
                          telemetry data will be sent. This property is mandatory.
                        type: string
                      headers:
                        description: Additional headers to be sent with each gRPC
                          request, for example for authorization. This property is
                          optional.
                        items:
                          properties:
                            name:
                              type: string
                            value:
                              type: string
                          required:
                          - name
                          - value
                          type: object
                        type: array
                    required:
                    - endpoint
                    type: object
                  http:
                    description: The settings for an exporter to send telemetry to
                      an arbitrary OTLP-compatible receiver via HTTP.
                    properties:
                      encoding:
                        default: proto
                        description: The encoding of the OTLP data when sent via HTTP.
                          Can be either proto or json, defaults to proto.
                        enum:
                        - proto
                        - json
                        type: string
                      endpoint:
                        description: The URL of the OTLP-compatible receiver to which
                          telemetry data will be sent. This property is mandatory.
                        type: string
                      headers:
                        description: Additional headers to be sent with each HTTP
                          request, for example for authorization. This property is
                          optional.
                        items:
                          properties:
                            name:
                              type: string
                            value:
                              type: string
                          required:
                          - name
                          - value
                          type: object
                        type: array
                    required:
                    - endpoint
                    type: object
                type: object
              instrumentWorkloads:
                default: all
                description: |-
                  Global opt-out for workload instrumentation for the target namespace. There are three possible settings: `all`,
                  `created-and-updated` and `none`. By default, the setting `all` is assumed.


                  If set to `all` (or omitted), the operator will:
                  * instrument existing workloads in the target namespace (i.e. workloads already running in the namespace) when
                    the Dash0 monitoring resource is deployed,
                  * instrument existing workloads or update the instrumentation of already instrumented workloads in the target
                    namespace when the Dash0 Kubernetes operator is first started or restarted (for example when updating the
                    operator),
                  * instrument new workloads in the target namespace when they are deployed, and
                  * instrument changed workloads in the target namespace when changes are applied to them.
                  Note that the first two actions (instrumenting existing workloads) will result in restarting the pods of the
                  affected workloads.


                  If set to `created-and-updated`, the operator will not instrument existing workloads in the target namespace.
                  Instead, it will only:
                  * instrument new workloads in the target namespace when they are deployed, and
                  * instrument changed workloads in the target namespace when changes are applied to them.
                  This setting is useful if you want to avoid pod restarts as a side effect of deploying the Dash0 monitoring
                  resource or restarting the Dash0 Kubernetes operator.


                  You can opt out of instrumenting workloads entirely by setting this option to `none`. With
                  `instrumentWorkloads: none`, workloads in the target namespace will never be instrumented to send telemetry to
                  Dash0.


                  If this setting is omitted, the value `all` is assumed and new/updated as well as existing Kubernetes workloads
                  will be intrumented by the operator to send telemetry to Dash0, as described above.


                  More fine-grained per-workload control over instrumentation is available by setting the label
                  dash0.com/enable=false on individual workloads.
                enum:
                - all
                - created-and-updated
                - none
                type: string
            required:
            - export
            type: object
          status:
            description: Dash0MonitoringStatus defines the observed state of the Dash0Monitoring
              monitoring resource.
            properties:
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current state of this resource."
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        ---
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                        useful (see .node.status.conditions), the ability to deconflict is important.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              previousInstrumentWorkloads:
                description: The spec.instrumentWorkloads setting that has been observed
                  in the previous reconcile cycle.
                enum:
                - all
                - created-and-updated
                - none
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: dash0-operator/templates/operator/custom-resource-definition-operator-configuration.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: dash0operatorconfigurations.operator.dash0.com
spec:
  group: operator.dash0.com
  names:
    kind: Dash0OperatorConfiguration
    listKind: Dash0OperatorConfigurationList
    plural: dash0operatorconfigurations
    singular: dash0operatorconfiguration
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Dash0OperatorConfiguration is the schema for the Dash0OperatorConfiguration
          API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: Dash0OperatorConfigurationSpec describes cluster-wide configuration
              settings for the Dash0 Kubernetes operator.
            properties:
              export:
                description: |-
                  The configuration of the default observability backend to which telemetry data will be sent by the operator, as
                  well as the backend that will receive the operator's self-monitoring data. This property is mandatory.
                  This can either be Dash0 or another OTLP-compatible backend. You can also combine up to three exporters (i.e.
                  Dash0 plus gRPC plus HTTP). This allows sending the same data to two or three targets simultaneously. At least
                  one exporter has to be defined.


                  Please note that self-monitoring data is only sent to one backend, with Dash0 taking precedence over gRPC and
                  HTTP, and gRPC taking precedence over HTTP if multiple exports are defined. Furthermore, HTTP export with JSON
                  encoding is not supported for self-monitoring telemetry.
                minProperties: 1
                properties:
                  dash0:
                    description: The configuration of the Dash0 ingress endpoint to
                      which telemetry data will be sent.
                    properties:
                      authorization:
                        description: Mandatory authorization settings for sending
                          data to Dash0.
                        maxProperties: 1
                        minProperties: 1
                        properties:
                          secretRef:
                            description: |-
                              A reference to a Kubernetes secret containing the Dash0 authorization token. This property is optional, and is
                              ignored if the token property is set. The authorization token for your Dash0 organization can be copied from
                              https://app.dash0.com/settings.
                            properties:
                              key:
                                default: token
                                description: The key of the value which contains the
                                  Dash0 authorization token. Defaults to "token"
                                type: string
                              name:
                                default: dash0-authorization-secret
                                description: The name of the secret containing the
                                  Dash0 authorization token. Defaults to "dash0-authorization-secret".
                                type: string
                            required:
                            - key
                            - name
                            type: object
                          token:
                            description: |-
                              The Dash0 authorization token. This property is optional, but either this property or the SecretRef property has
                              to be provided. If both are provided, the token will be used and SecretRef will be ignored. The authorization
                              token for your Dash0 organization can be copied from https://app.dash0.com/settings.
                            type: string
                        type: object
                      dataset:
                        default: default
                        description: |-
                          The name of the Dash0 dataset to which telemetry data will be sent. This property is optional. If omitted, the
                          dataset "default" will be used.
                        type: string
                      endpoint:
                        description: |-
                          The URL of the Dash0 ingress endpoint to which telemetry data will be sent. This property is mandatory. The value
                          needs to be the OTLP/gRPC endpoint of your Dash0 organization. The correct OTLP/gRPC endpoint can be copied fom
                          https://app.dash0.com/settings. The correct endpoint value will always start with `ingress.` and end in
                          `dash0.com:4317`.
                        type: string
                    required:
                    - authorization
                    - endpoint
                    type: object
                  grpc:
                    description: The settings for an exporter to send telemetry to
                      an arbitrary OTLP-compatible receiver via gRPC.
                    properties:
                      endpoint:
                        description: The URL of the OTLP-compatible receiver to which
                          telemetry data will be sent. This property is mandatory.
                        type: string
                      headers:
                        description: Additional headers to be sent with each gRPC
                          request, for example for authorization. This property is
                          optional.
                        items:
                          properties:
                            name:
                              type: string
                            value:
                              type: string
                          required:
                          - name
                          - value
                          type: object
                        type: array
                    required:
                    - endpoint
                    type: object
                  http:
                    description: The settings for an exporter to send telemetry to
                      an arbitrary OTLP-compatible receiver via HTTP.
                    properties:
                      encoding:
                        default: proto
                        description: The encoding of the OTLP data when sent via HTTP.
                          Can be either proto or json, defaults to proto.
                        enum:
                        - proto
                        - json
                        type: string
                      endpoint:
                        description: The URL of the OTLP-compatible receiver to which
                          telemetry data will be sent. This property is mandatory.
                        type: string
                      headers:
                        description: Additional headers to be sent with each HTTP
                          request, for example for authorization. This property is
                          optional.
                        items:
                          properties:
                            name:
                              type: string
                            value:
                              type: string
                          required:
                          - name
                          - value
                          type: object
                        type: array
                    required:
                    - endpoint
                    type: object
                type: object
              selfMonitoring:
                default:
                  enabled: true
                description: Global opt-out for self-monitoring for this operator
                properties:
                  enabled:
                    default: true
                    type: boolean
                required:
                - enabled
                type: object
            type: object
          status:
            description: Dash0OperatorConfigurationStatus defines the observed state
              of the Dash0 operator configuration resource.
            properties:
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current state of this resource."
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        ---
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                        useful (see .node.status.conditions), the ability to deconflict is important.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: dash0-operator/templates/operator/cluster-roles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: dash0-operator-manager-role
  labels:
    app.kubernetes.io/name: dash0-operator
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: manager-role
    app.kubernetes.io/version: "0.18.0"
    app.kubernetes.io/part-of: dash0-operator
    app.kubernetes.io/managed-by: "Helm"
    helm.sh/chart: dash0-operator-0.18.0

rules:

# Permissions required to instrument workloads in the apps API group.
- apiGroups:
  - apps
  resources:
  - daemonsets
  - deployments
  - replicasets
  - statefulsets
  verbs:
  - get
  - list
  - patch
  - update
  - watch

# Permissions required to instrument workloads in the batch API group.
- apiGroups:
  - batch
  resources:
  - cronjobs
  - jobs
  verbs:
  - get
  - list
  - patch
  - update
  - watch

# Permissions required to queue events to report about the operator's actions, and to attach dangling events to their
# respective involved objects.
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - list
  - patch
  - update
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get

# Permissions required to automatically restart (i.e. delete) pods when instrumenting replicasets that are not part of a
# higher order workload (e.g. a deployment, daemonset).
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - delete
  - get
  - list

# Permissions required to manage the Dash0 monitoring resource, its finalizers and status.
- apiGroups:
  - operator.dash0.com
  resources:
  - dash0monitorings
  verbs:
  - create
  - delete
  - deletecollection
  - get
  - list
  - patch
  - update
  - watch

# Permissions required to manage the Dash0 monitoring resource, its finalizers and status.
- apiGroups:
  - operator.dash0.com
  resources:
  - dash0monitorings/finalizers
  verbs:
  - update

# Permissions required to manage the Dash0 monitoring resource, its finalizers and status.
- apiGroups:
  - operator.dash0.com
  resources:
  - dash0monitorings/status
  verbs:
  - get
  - patch
  - update

# Permissions required to manage the Dash0 operator configuration resource, its finalizers and status.
- apiGroups:
  - operator.dash0.com
  resources:
  - dash0operatorconfigurations
  verbs:
  - create
  - delete
  - deletecollection
  - get
  - list
  - patch
  - update
  - watch

# Permissions required to manage the Dash0 operator configuration resource, its finalizers and status.
- apiGroups:
  - operator.dash0.com
  resources:
  - dash0operatorconfigurations/finalizers
  verbs:
  - update

# Permissions required to manage the Dash0 operator configuration resource, its finalizers and status.
- apiGroups:
  - operator.dash0.com
  resources:
  - dash0operatorconfigurations/status
  verbs:
  - get
  - patch
  - update

# Permissions required to manage OTel collector resources.
- apiGroups:
  - ""
  resources:
  - configmaps
  - serviceaccounts
  - services
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterroles
  - clusterrolebindings
  - roles
  - rolebindings
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - apps
  resources:
  # Note: apps.daemonsets and app.deployments are also listed further up together with the other workload types in the
  # apps API group, with fewer permissions. The declaration here extends that list of permissions to make sure we can
  # also create and delete the daemonset and deployment for the OTel collector instance that the Dash0 operator
  # manages.
  - daemonsets
  - deployments
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch

# Permissions required due to the fact that the operator needs to create dedicated service accounts/cluster roles/
# cluster role bindings for the OTel collector daemonset/deployment and give it a set of permissions; which it can only
# do if holds these permissions itself.
#
# First, the permissions for the OpenTelemetry collector DaemonSet:
- apiGroups:
  - ""
  resources:
  - pods
  - namespaces
  - nodes/stats
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apps
  resources:
  - replicasets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - extensions
  resources:
  - replicasets
  verbs:
  - get
  - list
  - watch
# Next, the permissions for the OpenTelemetry collector Deployment:
- apiGroups:
  - ""
  resources:
  - events
  - namespaces
  - namespaces/status
  - nodes
  - nodes/spec
  - pods
  - pods/status
  - replicationcontrollers
  - replicationcontrollers/status
  - resourcequotas
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apps
  resources:
  - daemonsets
  - deployments
  - replicasets
  - statefulsets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - extensions
  resources:
  - daemonsets
  - deployments
  - replicasets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - batch
  resources:
  - jobs
  - cronjobs
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - autoscaling
  resources:
  - horizontalpodautoscalers
  verbs:
  - get
  - list
  - watch
---
# Source: dash0-operator/templates/operator/cluster-roles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: dash0-operator-metrics-reader
  labels:
    app.kubernetes.io/name: dash0-operator
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: metrics-role
    app.kubernetes.io/version: "0.18.0"
    app.kubernetes.io/part-of: dash0-operator
    app.kubernetes.io/managed-by: "Helm"
    helm.sh/chart: dash0-operator-0.18.0
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
# Source: dash0-operator/templates/operator/cluster-roles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: dash0-operator-proxy-role
  labels:
    app.kubernetes.io/name: dash0-operator
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: proxy-role
    app.kubernetes.io/version: "0.18.0"
    app.kubernetes.io/part-of: dash0-operator
    app.kubernetes.io/managed-by: "Helm"
    helm.sh/chart: dash0-operator-0.18.0
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
# Source: dash0-operator/templates/operator/cluster-role-bindings.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: dash0-operator-manager-rolebinding
  labels:
    app.kubernetes.io/name: dash0-operator
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: role-binding
    app.kubernetes.io/version: "0.18.0"
    app.kubernetes.io/part-of: dash0-operator
    app.kubernetes.io/managed-by: "Helm"
    helm.sh/chart: dash0-operator-0.18.0
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: dash0-operator-manager-role
subjects:
- kind: ServiceAccount
  name: dash0-operator-controller
  namespace: default
---
# Source: dash0-operator/templates/operator/cluster-role-bindings.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: dash0-operator-proxy-rolebinding
  labels:
    app.kubernetes.io/name: dash0-operator
    app.kubernetes.io/component: proxy
    app.kubernetes.io/instance: role-binding
    app.kubernetes.io/version: "0.18.0"
    app.kubernetes.io/part-of: dash0-operator
    app.kubernetes.io/managed-by: "Helm"
    helm.sh/chart: dash0-operator-0.18.0
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: dash0-operator-proxy-role
subjects:
- kind: ServiceAccount
  name: dash0-operator-controller
  namespace: default
---
# Source: dash0-operator/templates/operator/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: dash0-operator-leader-election-role
  namespace: default
  labels:
    app.kubernetes.io/name: dash0-operator
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: leader-election-role
    app.kubernetes.io/version: "0.18.0"
    app.kubernetes.io/part-of: dash0-operator
    app.kubernetes.io/managed-by: "Helm"
    helm.sh/chart: dash0-operator-0.18.0
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
# Source: dash0-operator/templates/operator/role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: dash0-operator-leader-election-rolebinding
  namespace: default
  labels:
    app.kubernetes.io/name: dash0-operator
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: leader-election-rolebinding
    app.kubernetes.io/version: "0.18.0"
    app.kubernetes.io/part-of: dash0-operator
    app.kubernetes.io/managed-by: "Helm"
    helm.sh/chart: dash0-operator-0.18.0
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: dash0-operator-leader-election-role
subjects:
- kind: ServiceAccount
  name: dash0-operator-controller
  namespace: default
---
# Source: dash0-operator/templates/operator/deployment-and-webhook.yaml
apiVersion: v1
kind: Service
metadata:
  name: dash0-operator-injector
  labels:
    app.kubernetes.io/name: dash0-operator
    app.kubernetes.io/component: injector
    app.kubernetes.io/instance: mutating-webhook-service
    app.kubernetes.io/version: "0.18.0"
    app.kubernetes.io/part-of: dash0-operator
    app.kubernetes.io/managed-by: "Helm"
    helm.sh/chart: dash0-operator-0.18.0
spec:
  ports:
  - port: 443
    protocol: TCP
    targetPort: 9443
  selector:
    app.kubernetes.io/name: dash0-operator
    app.kubernetes.io/component: controller
    dash0.com/cert-digest: "dJTiBDRVJUSUZJQ"
---
# Source: dash0-operator/templates/operator/deployment-and-webhook.yaml
apiVersion: v1
kind: Service
metadata:
  name: dash0-operator-metrics
  namespace: default
  labels:
    app.kubernetes.io/name: dash0-operator
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: metrics-service
    app.kubernetes.io/version: "0.18.0"
    app.kubernetes.io/part-of: dash0-operator
    app.kubernetes.io/managed-by: "Helm"
    helm.sh/chart: dash0-operator-0.18.0
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: https
  selector:
    app.kubernetes.io/name: dash0-operator
    app.kubernetes.io/component: controller
    dash0.com/cert-digest: "dJTiBDRVJUSUZJQ"
---
# Source: dash0-operator/templates/operator/deployment-and-webhook.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dash0-operator-controller
  namespace: default
  labels:
    app.kubernetes.io/name: dash0-operator
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: deployment
    app.kubernetes.io/version: "0.18.0"
    app.kubernetes.io/part-of: dash0-operator
    app.kubernetes.io/managed-by: "Helm"
    helm.sh/chart: dash0-operator-0.18.0
    dash0.com/enable: "false"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: dash0-operator
      app.kubernetes.io/component: controller
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        app.kubernetes.io/name: dash0-operator
        app.kubernetes.io/component: controller
        dash0.com/cert-digest: "dJTiBDRVJUSUZJQ"
    spec:
      containers:
      - name: manager
        image: "ghcr.io/dash0hq/operator-controller:0.18.0"
        command:
        - /manager
        args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        - --leader-elect
        env:
        - name: DASH0_OPERATOR_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: DASH0_DEPLOYMENT_NAME
          value: dash0-operator-controller
        - name: OTEL_COLLECTOR_NAME_PREFIX
          value: "my-dash0-operator"
        - name: DASH0_OPERATOR_IMAGE
          value: "ghcr.io/dash0hq/operator-controller:0.18.0"
        - name: DASH0_INIT_CONTAINER_IMAGE
          value: "ghcr.io/dash0hq/instrumentation:0.18.0"
        - name: DASH0_COLLECTOR_IMAGE
          value: "ghcr.io/dash0hq/collector:0.18.0"
        - name: DASH0_CONFIGURATION_RELOADER_IMAGE
          value: "ghcr.io/dash0hq/configuration-reloader:0.18.0"
        - name: DASH0_FILELOG_OFFSET_SYNCH_IMAGE
          value: "ghcr.io/dash0hq/filelog-offset-synch:0.18.0"
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: K8S_POD_UID
          valueFrom:
            fieldRef:
              fieldPath: metadata.uid
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            ephemeral-storage: 500Mi
            memory: 128Mi
          requests:
            cpu: 10m
            ephemeral-storage: 500Mi
            memory: 64Mi
        
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: certificates
          readOnly: true
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
      - name: kube-rbac-proxy
        image: quay.io/brancz/kube-rbac-proxy:v0.18.0
        args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=0
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            ephemeral-storage: 500Mi
            memory: 128Mi
          requests:
            cpu: 5m
            ephemeral-storage: 500Mi
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: dash0-operator-controller
      automountServiceAccountToken: true
      terminationGracePeriodSeconds: 10
      volumes:
      - name: certificates
        secret:
          defaultMode: 420
          secretName: dash0-operator-certificates
---
# Source: dash0-operator/templates/operator/deployment-and-webhook.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: dash0-operator-injector
  labels:
    app.kubernetes.io/name: dash0-operator
    app.kubernetes.io/component: injector
    app.kubernetes.io/instance: mutating-webhook
    app.kubernetes.io/version: "0.18.0"
    app.kubernetes.io/part-of: dash0-operator
    app.kubernetes.io/managed-by: "Helm"
    helm.sh/chart: dash0-operator-0.18.0
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKRENDQWd5Z0F3SUJBZ0lSQU9Db0hUYnhzOGhxSFlYVVpSMkMybXd3RFFZSktvWklodmNOQVFFTEJRQXcKSERFYU1CZ0dBMVVFQXhNUlpHRnphREF0YjNCbGNtRjBiM0l0WTJFd0hoY05NalF3T1RFMk1EZ3lPREF5V2hjTgpNalV3T1RFMk1EZ3lPREF5V2pBY01Sb3dHQVlEVlFRREV4RmtZWE5vTUMxdmNHVnlZWFJ2Y2kxallUQ0NBU0l3CkRRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFONmJ3L1RiMTAveERBajZEdEk1d0JNOU11QngKNjNFeUJFeFBhUUkrYUZ0TnNVMDh0OWZnaEpnQWlKZVMvWEJQbEdqQlpPMkxhTkpNWTU0Uks2eW9lK1IzZVhadwpSb2lHR1I4NXpuaDBuMUhMTzFnbXF0aHovMzV5UUk3WkVSUVdTNUNYUWw3ZXY4RGZELy96M2RaNytkWTZIMitJCnJrOVJqNXRISExoV0RCMzZKOXhVUWpmV2lYRG96STRtZklMN1prbDByM0NOay9ock5JVXN1VHdSZEJNcUNkQnAKWWIzRXM3QmtxZnpWTW93Y3N3TzQ1RXJ3TElPZ2hpaitlMHcrdGtYaG5iNFZQMkt6Zk81eGE3QjRDb1FrSkkvVwpYR1FPTHhucDVhL0RwZ0pFVVVyK2haQjlTQjFiNWp1UVF2OG4rRmMyd0pWc1owb0lPVnJaS0NtR2RQa0NBd0VBCkFhTmhNRjh3RGdZRFZSMFBBUUgvQkFRREFnS2tNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01CMEdBMVVkRGdRV0JCUVM3Z20zenJlUC9jZHA5dG9jVkRZNQpDSndqc1RBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQWoxQ2RCS25tb2tSZm5sRWhDbVBIdUczRWhpaUZhN2liCmpLTldFellTb04yZW5qcUtsVm50aDlma2h0M0lHR3dLZ1JxQnZLNnNLUWhDVnJZUUZLL2JJaDhQK2lHVm5URzgKZURnNnBnczF6OThKcEtGc3N6RUFrQXd3bXQxalplWnJoM3ZqU0tkNlhYdWhnc0VXdC9BZTdrZ3RZZVBnWDN1TQpobUJXVjZkaDlxKzdXR1hZaGRaOUhtdnF1ZENsVTBPUlc1MHU5NG9iRnh5WHZrVXU5Q0FzcmtJeDNWdEVNWC80CjhGUE11a3FoZzFhZXdjdWV6ckM4Y1p2WjdDTTFGSmg0QzdZYkZyby9McTVDWjRYMUlMdmplbTUvQytVR0xETk0Kcm1HdTJYa21sUlIvVllJZ1dHdHZMbk9iTkJFU2JhcEtCc3hSYTJXcFZYaVRaaGJJbHhOOVdBPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    service:
      name: dash0-operator-injector
      namespace: default
      path: /v1alpha1/inject/dash0
  failurePolicy: Ignore
  name: inject.dash0.kb.io
  rules:
  - apiGroups:
    - apps
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - daemonsets
    - deployments
    - replicasets
    - statefulsets
  - apiGroups:
    - batch
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - cronjobs
  - apiGroups:
      - batch
    apiVersions:
      - v1
    operations:
      # do not listen to UPDATE for jobs, we cannot revert instrumentation or do anything on UPDATE requests, since jobs
      # are immutable
      - CREATE
    resources:
      - jobs
  - apiGroups: [""]
    apiVersions:
    - v1
    operations:
    # do not listen to UPDATE for pods, we cannot revert instrumentation or do anything on UPDATE requests, since pods
    # are effectively immutable (we cannot restart ownerless pods)
      - CREATE
    resources:
    - pods
  sideEffects: None
  timeoutSeconds: 5
---
# Source: dash0-operator/templates/operator/pre-delete-hook.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: dash0-operator-pre-delete
  namespace: default
  labels:
    app.kubernetes.io/name: dash0-operator
    app.kubernetes.io/component: uninstallation-process
    app.kubernetes.io/version: "0.18.0"
    app.kubernetes.io/part-of: dash0-operator
    app.kubernetes.io/managed-by: "Helm"
    helm.sh/chart: dash0-operator-0.18.0
    dash0.com/enable: "false"
  annotations:
    "helm.sh/hook": pre-delete
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  template:
    metadata:
      name: my-dash0-operator-pre-delete-job
      labels:
        app.kubernetes.io/name: dash0-operator
        app.kubernetes.io/component: uninstallation-process
        app.kubernetes.io/instance: pre-delete-hook
        app.kubernetes.io/managed-by: "Helm"
        helm.sh/chart: dash0-operator-0.18.0
    spec:
      restartPolicy: OnFailure
      containers:
        - name: pre-delete-job
          image: "ghcr.io/dash0hq/operator-controller:0.18.0"
          imagePullPolicy: 
          command:
            - /manager
            - "--uninstrument-all"
          
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            capabilities:
              drop:
              - ALL
          resources:
            limits:
              cpu: 500m
              ephemeral-storage: 500Mi
              memory: 128Mi
            requests:
              cpu: 10m
              ephemeral-storage: 500Mi
              memory: 64Mi
      securityContext:
        runAsNonRoot: true
      serviceAccountName: dash0-operator-controller
      automountServiceAccountToken: true
  backoffLimit: 2
