---
# Source: online-boutique/templates/ad.yaml
apiVersion: v1
kind: Service
metadata:
  name: adservice
  labels:
    
    app.kubernetes.io/name: online-boutique
    app.kubernetes.io/version: 0.1.0
    app: adservice
  annotations:
    servicemesh.kubesphere.io/enabled: "true"
spec:
  type: ClusterIP
  selector:
    app: adservice
    
    app.kubernetes.io/name: online-boutique
    app.kubernetes.io/version: 0.1.0
  ports:
  - name: grpc
    port: 9555
    targetPort: 9555
---
# Source: online-boutique/templates/cart.yaml
apiVersion: v1
kind: Service
metadata:
  name: cartservice
  labels:
    
    app.kubernetes.io/name: online-boutique
    app.kubernetes.io/version: 0.1.0
    app: cartservice
  annotations:
    servicemesh.kubesphere.io/enabled: "true"
spec:
  type: ClusterIP
  selector:
    app: cartservice
    
    app.kubernetes.io/name: online-boutique
    app.kubernetes.io/version: 0.1.0
  ports:
  - name: grpc
    port: 7070
    targetPort: 7070
---
# Source: online-boutique/templates/checkout.yaml
apiVersion: v1
kind: Service
metadata:
  name: checkoutservice
  labels:
    
    app.kubernetes.io/name: online-boutique
    app.kubernetes.io/version: 0.1.0
    app: checkoutservice
  annotations:
    servicemesh.kubesphere.io/enabled: "true"
spec:
  type: ClusterIP
  selector:
    app: checkoutservice
    
    app.kubernetes.io/name: online-boutique
    app.kubernetes.io/version: 0.1.0
  ports:
  - name: grpc
    port: 5050
    targetPort: 5050
---
# Source: online-boutique/templates/currency.yaml
apiVersion: v1
kind: Service
metadata:
  name: currencyservice
  labels:
    
    app.kubernetes.io/name: online-boutique
    app.kubernetes.io/version: 0.1.0
    app: currencyservice
  annotations:
    servicemesh.kubesphere.io/enabled: "true"
spec:
  type: ClusterIP
  selector:
    app: currencyservice
    
    app.kubernetes.io/name: online-boutique
    app.kubernetes.io/version: 0.1.0
  ports:
  - name: grpc
    port: 7000
    targetPort: 7000
---
# Source: online-boutique/templates/email.yaml
apiVersion: v1
kind: Service
metadata:
  name: emailservice
  labels:
    
    app.kubernetes.io/name: online-boutique
    app.kubernetes.io/version: 0.1.0
    app: emailservice
  annotations:
    servicemesh.kubesphere.io/enabled: "true"
spec:
  type: ClusterIP
  selector:
    app: emailservice
    
    app.kubernetes.io/name: online-boutique
    app.kubernetes.io/version: 0.1.0
  ports:
  - name: grpc
    port: 5000
    targetPort: 8080
---
# Source: online-boutique/templates/frontend.yaml
apiVersion: v1
kind: Service
metadata:
  name: frontend
  labels:
    
    app.kubernetes.io/name: online-boutique
    app.kubernetes.io/version: 0.1.0
    app: frontend
  annotations:
    servicemesh.kubesphere.io/enabled: "true"
spec:
  type: NodePort
  selector:
    app: frontend
    
    app.kubernetes.io/name: online-boutique
    app.kubernetes.io/version: 0.1.0
  ports:
  - name: http
    port: 80
    targetPort: 8080
---
# Source: online-boutique/templates/payment.yaml
apiVersion: v1
kind: Service
metadata:
  name: paymentservice
  labels:
    
    app.kubernetes.io/name: online-boutique
    app.kubernetes.io/version: 0.1.0
    app: paymentservice
  annotations:
    servicemesh.kubesphere.io/enabled: "true"
spec:
  type: ClusterIP
  selector:
    app: paymentservice
    
    app.kubernetes.io/name: online-boutique
    app.kubernetes.io/version: 0.1.0
  ports:
  - name: grpc
    port: 50051
    targetPort: 50051
---
# Source: online-boutique/templates/productcatalog.yaml
apiVersion: v1
kind: Service
metadata:
  name: productcatalogservice
  labels:
    
    app.kubernetes.io/name: online-boutique
    app.kubernetes.io/version: 0.1.0
    app: productcatalogservice
  annotations:
    servicemesh.kubesphere.io/enabled: "true"
spec:
  type: ClusterIP
  selector:
    app: productcatalogservice
    
    app.kubernetes.io/name: online-boutique
    app.kubernetes.io/version: 0.1.0
  ports:
  - name: grpc
    port: 3550
    targetPort: 3550
---
# Source: online-boutique/templates/recommendation.yaml
apiVersion: v1
kind: Service
metadata:
  name: recommendationservice
  labels:
    
    app.kubernetes.io/name: online-boutique
    app.kubernetes.io/version: 0.1.0
    app: recommendationservice
  annotations:
    servicemesh.kubesphere.io/enabled: "true"
spec:
  type: ClusterIP
  selector:
    app: recommendationservice
    
    app.kubernetes.io/name: online-boutique
    app.kubernetes.io/version: 0.1.0
  ports:
  - name: grpc
    port: 8080
    targetPort: 8080
---
# Source: online-boutique/templates/redis.yaml
apiVersion: v1
kind: Service
metadata:
  name: redis-cart
  labels:
    
    app.kubernetes.io/name: online-boutique
    app.kubernetes.io/version: 0.1.0
    app: redis-cart
  annotations:
    servicemesh.kubesphere.io/enabled: "true"
spec:
  type: ClusterIP
  selector:
    app: redis-cart
    
    app.kubernetes.io/name: online-boutique
    app.kubernetes.io/version: 0.1.0
  ports:
  - name: redis
    port: 6379
    targetPort: 6379
---
# Source: online-boutique/templates/shipping.yaml
apiVersion: v1
kind: Service
metadata:
  name: shippingservice
  labels:
    
    app.kubernetes.io/name: online-boutique
    app.kubernetes.io/version: 0.1.0
    app: shippingservice
  annotations:
    servicemesh.kubesphere.io/enabled: "true"
spec:
  type: ClusterIP
  selector:
    app: shippingservice
    
    app.kubernetes.io/name: online-boutique
    app.kubernetes.io/version: 0.1.0
  ports:
  - name: grpc
    port: 50051
    targetPort: 50051
---
# Source: online-boutique/templates/ad-v1.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: adservice-v1 
  annotations:
    servicemesh.kubesphere.io/enabled: "true"
  labels:
    
    app.kubernetes.io/name: online-boutique
    app.kubernetes.io/version: 0.1.0
    app: adservice
    version: v1
spec:
  selector:
    matchLabels:
      app: adservice
      version: v1
      
      app.kubernetes.io/name: online-boutique
      app.kubernetes.io/version: 0.1.0
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      labels:
        app: adservice
        version: v1
        
        app.kubernetes.io/name: online-boutique
        app.kubernetes.io/version: 0.1.0
    spec:
      serviceAccountName: default
      terminationGracePeriodSeconds: 5
      containers:
      - name: server
        image: gcr.io/google-samples/microservices-demo/adservice:v0.2.3
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 9555
        env:
        - name: PORT
          value: "9555"
        # - name: DISABLE_STATS
        #   value: "1"
        # - name: DISABLE_TRACING
        #   value: "1"
        # - name: JAEGER_SERVICE_ADDR
        #   value: "jaeger-collector:14268"
        resources:
          requests:
            cpu: 200m
            memory: 180Mi
          limits:
            cpu: 300m
            memory: 300Mi
        readinessProbe:
          initialDelaySeconds: 20
          periodSeconds: 15
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:9555"]
        livenessProbe:
          initialDelaySeconds: 20
          periodSeconds: 15
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:9555"]
---
# Source: online-boutique/templates/cart-v1.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cartservice-v1 
  annotations:
    servicemesh.kubesphere.io/enabled: "true"
  labels:
    
    app.kubernetes.io/name: online-boutique
    app.kubernetes.io/version: 0.1.0
    app: cartservice
    version: v1
spec:
  selector:
    matchLabels:
      app: cartservice
      version: v1
      
      app.kubernetes.io/name: online-boutique
      app.kubernetes.io/version: 0.1.0
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      labels:
        app: cartservice
        version: v1
        
        app.kubernetes.io/name: online-boutique
        app.kubernetes.io/version: 0.1.0
    spec:
      serviceAccountName: default
      terminationGracePeriodSeconds: 5
      containers:
      - name: server
        image: gcr.io/google-samples/microservices-demo/cartservice:v0.2.3
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 7070
        env:
        - name: REDIS_ADDR
          value: "redis-cart:6379"
        resources:
          requests:
            cpu: 200m
            memory: 64Mi
          limits:
            cpu: 300m
            memory: 128Mi
        readinessProbe:
          initialDelaySeconds: 15
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:7070", "-rpc-timeout=5s"]
        livenessProbe:
          initialDelaySeconds: 15
          periodSeconds: 10
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:7070", "-rpc-timeout=5s"]
---
# Source: online-boutique/templates/checkout-v1.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: checkoutservice-v1
  annotations:
    servicemesh.kubesphere.io/enabled: "true"
  labels:
    
    app.kubernetes.io/name: online-boutique
    app.kubernetes.io/version: 0.1.0
    app: checkoutservice
    version: v1
spec:
  selector:
    matchLabels:
      app: checkoutservice
      version: v1
      
      app.kubernetes.io/name: online-boutique
      app.kubernetes.io/version: 0.1.0
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      labels:
        app: checkoutservice
        version: v1
        
        app.kubernetes.io/name: online-boutique
        app.kubernetes.io/version: 0.1.0
    spec:
      serviceAccountName: default
      containers:
        - name: server
          image: gcr.io/google-samples/microservices-demo/checkoutservice:v0.2.3
          imagePullPolicy: IfNotPresent
          #image: gcr.io/google-samples/microservices-demo/checkoutservice:v0.2.3
          ports:
          - containerPort: 5050
          readinessProbe:
            exec:
              command: ["/bin/grpc_health_probe", "-addr=:5050"]
          livenessProbe:
            exec:
              command: ["/bin/grpc_health_probe", "-addr=:5050"]
          env:
          - name: PORT
            value: "5050"
          - name: PRODUCT_CATALOG_SERVICE_ADDR
            value: "productcatalogservice:3550"
          - name: SHIPPING_SERVICE_ADDR
            value: "shippingservice:50051"
          - name: PAYMENT_SERVICE_ADDR
            value: "paymentservice:50051"
          - name: EMAIL_SERVICE_ADDR
            value: "emailservice:5000"
          - name: CURRENCY_SERVICE_ADDR
            value: "currencyservice:7000"
          - name: CART_SERVICE_ADDR
            value: "cartservice:7070"
          # - name: DISABLE_STATS
          #   value: "1"
          # - name: DISABLE_TRACING
          #   value: "1"
          # - name: DISABLE_PROFILER
          #   value: "1"
          # - name: JAEGER_SERVICE_ADDR
          #   value: "jaeger-collector:14268"
          resources:
            requests:
              cpu: 100m
              memory: 64Mi
            limits:
              cpu: 200m
              memory: 128Mi
---
# Source: online-boutique/templates/currency-v1.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: currencyservice-v1 
  annotations:
    servicemesh.kubesphere.io/enabled: "true"
  labels:
    
    app.kubernetes.io/name: online-boutique
    app.kubernetes.io/version: 0.1.0
    app: currencyservice
    version: v1
spec:
  selector:
    matchLabels:
      app: currencyservice
      version: v1
      
      app.kubernetes.io/name: online-boutique
      app.kubernetes.io/version: 0.1.0
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      labels:
        app: currencyservice
        version: v1
        
        app.kubernetes.io/name: online-boutique
        app.kubernetes.io/version: 0.1.0
    spec:
      serviceAccountName: default
      terminationGracePeriodSeconds: 5
      containers:
      - name: server
        image: gcr.io/google-samples/microservices-demo/currencyservice:v0.2.3
        #image: gcr.io/google-samples/microservices-demo/currencyservice:v0.2.3
        imagePullPolicy: IfNotPresent
        ports:
        - name: grpc
          containerPort: 7000
        env:
        - name: PORT
          value: "7000"
        # - name: DISABLE_TRACING
        #   value: "1"
        # - name: DISABLE_PROFILER
        #   value: "1"
        # - name: DISABLE_DEBUGGER
        #   value: "1"
        readinessProbe:
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:7000"]
        livenessProbe:
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:7000"]
        resources:
          requests:
            cpu: 100m
            memory: 64Mi
          limits:
            cpu: 200m
            memory: 128Mi
---
# Source: online-boutique/templates/email-v1.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: emailservice-v1 
  annotations:
    servicemesh.kubesphere.io/enabled: "true"
  labels:
    
    app.kubernetes.io/name: online-boutique
    app.kubernetes.io/version: 0.1.0
    app: emailservice
    version: v1
spec:
  selector:
    matchLabels:
      app: emailservice
      version: v1
      
      app.kubernetes.io/name: online-boutique
      app.kubernetes.io/version: 0.1.0
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      labels:
        app: emailservice
        version: v1
        
        app.kubernetes.io/name: online-boutique
        app.kubernetes.io/version: 0.1.0
    spec:
      serviceAccountName: default
      terminationGracePeriodSeconds: 5
      containers:
      - name: server
        image: gcr.io/google-samples/microservices-demo/emailservice:v0.2.3
        #image: gcr.io/google-samples/microservices-demo/emailservice:v0.2.3
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
        env:
        - name: PORT
          value: "8080"
        # - name: DISABLE_TRACING
        #   value: "1"
        - name: DISABLE_PROFILER
          value: "1"
        readinessProbe:
          periodSeconds: 5
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:8080"]
        livenessProbe:
          periodSeconds: 5
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:8080"]
        resources:
          requests:
            cpu: 100m
            memory: 64Mi
            command: ["/bin/grpc_health_probe", "-addr=:8080"]
        livenessProbe:
          periodSeconds: 5
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:8080"]
        resources:
          requests:
            cpu: 100m
            memory: 64Mi
          limits:
            cpu: 200m
            memory: 128Mi
---
# Source: online-boutique/templates/frontend-v1.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-v1 
  annotations:
    servicemesh.kubesphere.io/enabled: "true"
  labels:
    
    app.kubernetes.io/name: online-boutique
    app.kubernetes.io/version: 0.1.0
    app: frontend
    version: v1
spec:
  selector:
    matchLabels:
      app: frontend
      version: v1
      
      app.kubernetes.io/name: online-boutique
      app.kubernetes.io/version: 0.1.0
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      labels:
        app: frontend
        version: v1
        
        app.kubernetes.io/name: online-boutique
        app.kubernetes.io/version: 0.1.0
    spec:
      serviceAccountName: default
      containers:
        - name: server
          image: gcr.io/google-samples/microservices-demo/frontend:v0.2.3
          #image: gcr.io/google-samples/microservices-demo/frontend:v0.2.3
          imagePullPolicy: IfNotPresent
          ports:
          - containerPort: 8080
          readinessProbe:
            initialDelaySeconds: 10
            httpGet:
              path: "/_healthz"
              port: 8080
              httpHeaders:
              - name: "Cookie"
                value: "shop_session-id=x-readiness-probe"
          livenessProbe:
            initialDelaySeconds: 10
            httpGet:
              path: "/_healthz"
              port: 8080
              httpHeaders:
              - name: "Cookie"
                value: "shop_session-id=x-liveness-probe"
          env:
          - name: PORT
            value: "8080"
          - name: PRODUCT_CATALOG_SERVICE_ADDR
            value: "productcatalogservice:3550"
          - name: CURRENCY_SERVICE_ADDR
            value: "currencyservice:7000"
          - name: CART_SERVICE_ADDR
            value: "cartservice:7070"
          - name: RECOMMENDATION_SERVICE_ADDR
            value: "recommendationservice:8080"
          - name: SHIPPING_SERVICE_ADDR
            value: "shippingservice:50051"
          - name: CHECKOUT_SERVICE_ADDR
            value: "checkoutservice:5050"
          - name: AD_SERVICE_ADDR
            value: "adservice:9555"
          # # ENV_PLATFORM: One of: local, gcp, aws, azure, onprem
          # # When not set, defaults to "local" unless running in GKE, otherwies auto-sets to gcp
          # - name: ENV_PLATFORM
          #   value: "aws"
          # - name: DISABLE_TRACING
          #   value: "1"
          # - name: DISABLE_PROFILER
          #   value: "1"
          # - name: JAEGER_SERVICE_ADDR
          #   value: "jaeger-collector:14268"
          resources:
            requests:
              cpu: 100m
              memory: 64Mi
            limits:
              cpu: 200m
              memory: 128Mi
---
# Source: online-boutique/templates/loadgenerator.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: loadgenerator
  labels:
    
    app.kubernetes.io/name: online-boutique
    app.kubernetes.io/version: 0.1.0
spec:
  selector:
    matchLabels:
      app: loadgenerator
      
      app.kubernetes.io/name: online-boutique
      app.kubernetes.io/version: 0.1.0
  replicas: 1
  template:
    metadata:
      labels:
        app: loadgenerator
        
        app.kubernetes.io/name: online-boutique
        app.kubernetes.io/version: 0.1.0
      annotations:
        sidecar.istio.io/rewriteAppHTTPProbers: "true"
    spec:
      serviceAccountName: default
      terminationGracePeriodSeconds: 5
      restartPolicy: Always
      containers:
      - name: main
        image: gcr.io/google-samples/microservices-demo/loadgenerator:v0.2.3
        imagePullPolicy: IfNotPresent
        env:
        - name: FRONTEND_ADDR
          value: "frontend:80"
        - name: USERS
          value: "10"
        resources:
          requests:
            cpu: 300m
            memory: 256Mi
          limits:
            cpu: 500m
            memory: 512Mi
---
# Source: online-boutique/templates/payment-v1.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: paymentservice-v1 
  annotations:
    servicemesh.kubesphere.io/enabled: "true"
  labels:
    
    app.kubernetes.io/name: online-boutique
    app.kubernetes.io/version: 0.1.0
    app: paymentservice
    version: v1
spec:
  selector:
    matchLabels:
      app: paymentservice
      version: v1
      
      app.kubernetes.io/name: online-boutique
      app.kubernetes.io/version: 0.1.0
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      labels:
        app: paymentservice
        version: v1
        
        app.kubernetes.io/name: online-boutique
        app.kubernetes.io/version: 0.1.0
    spec:
      serviceAccountName: default
      terminationGracePeriodSeconds: 5
      containers:
      - name: server
        image: gcr.io/google-samples/microservices-demo/paymentservice:v0.2.3
        #image: gcr.io/google-samples/microservices-demo/paymentservice:v0.2.3
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 50051
        env:
        - name: PORT
          value: "50051"
        readinessProbe:
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:50051"]
        livenessProbe:
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:50051"]
        resources:
          requests:
            cpu: 100m
            memory: 64Mi
          limits:
            cpu: 200m
            memory: 128Mi
---
# Source: online-boutique/templates/productcatalog-v1.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: productcatalogservice-v1 
  annotations:
    servicemesh.kubesphere.io/enabled: "true"
  labels:
    
    app.kubernetes.io/name: online-boutique
    app.kubernetes.io/version: 0.1.0
    app: productcatalogservice
    version: v1
spec:
  selector:
    matchLabels:
      app: productcatalogservice
      version: v1
      
      app.kubernetes.io/name: online-boutique
      app.kubernetes.io/version: 0.1.0
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      labels:
        app: productcatalogservice
        version: v1
        
        app.kubernetes.io/name: online-boutique
        app.kubernetes.io/version: 0.1.0
    spec:
      serviceAccountName: default
      terminationGracePeriodSeconds: 5
      containers:
      - name: server
        image: gcr.io/google-samples/microservices-demo/productcatalogservice:v0.2.3
        #image: gcr.io/google-samples/microservices-demo/productcatalogservice:v0.2.3
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 3550
        env:
        - name: PORT
          value: "3550"
        # - name: DISABLE_STATS
        #   value: "1"
        # - name: DISABLE_TRACING
        #   value: "1"
        # - name: DISABLE_PROFILER
        #   value: "1"
        # - name: JAEGER_SERVICE_ADDR
        #   value: "jaeger-collector:14268"
        readinessProbe:
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:3550"]
        livenessProbe:
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:3550"]
        resources:
          requests:
            cpu: 100m
            memory: 64Mi
          limits:
            cpu: 200m
            memory: 128Mi
---
# Source: online-boutique/templates/recommendation-v1.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: recommendationservice-v1 
  annotations:
    servicemesh.kubesphere.io/enabled: "true"
  labels:
    
    app.kubernetes.io/name: online-boutique
    app.kubernetes.io/version: 0.1.0
    app: recommendationservice
    version: v1
spec:
  selector:
    matchLabels:
      app: recommendationservice
      version: v1
      
      app.kubernetes.io/name: online-boutique
      app.kubernetes.io/version: 0.1.0
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      labels:
        app: recommendationservice
        version: v1
        
        app.kubernetes.io/name: online-boutique
        app.kubernetes.io/version: 0.1.0
    spec:
      serviceAccountName: default
      terminationGracePeriodSeconds: 5
      containers:
      - name: server
        image: gcr.io/google-samples/microservices-demo/recommendationservice:v0.2.3
        #image: gcr.io/google-samples/microservices-demo/recommendationservice:v0.2.3
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
        readinessProbe:
          periodSeconds: 5
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:8080"]
        livenessProbe:
          periodSeconds: 5
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:8080"]
        env:
        - name: PORT
          value: "8080"
        - name: PRODUCT_CATALOG_SERVICE_ADDR
          value: "productcatalogservice:3550"
        - name: DISABLE_TRACING
          value: "1"
        - name: DISABLE_PROFILER
          value: "1"
        - name: DISABLE_DEBUGGER
          value: "1"
        resources:
          requests:
            cpu: 100m
            memory: 220Mi
          limits:
            cpu: 200m
            memory: 450Mi
---
# Source: online-boutique/templates/redis-v1.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-cart-v1 
  annotations:
    servicemesh.kubesphere.io/enabled: "true"
  labels:
    
    app.kubernetes.io/name: online-boutique
    app.kubernetes.io/version: 0.1.0
    app: redis-cart
    version: v1
spec:
  selector:
    matchLabels:
      app: redis-cart
      version: v1
      
      app.kubernetes.io/name: online-boutique
      app.kubernetes.io/version: 0.1.0
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      labels:
        app: redis-cart
        version: v1
        
        app.kubernetes.io/name: online-boutique
        app.kubernetes.io/version: 0.1.0
    spec:
      containers:
      - name: redis
        image: redis:alpine
        #image: redis:alpine
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 6379
        readinessProbe:
          periodSeconds: 5
          tcpSocket:
            port: 6379
        livenessProbe:
          periodSeconds: 5
          tcpSocket:
            port: 6379
        volumeMounts:
        - mountPath: /data
          name: redis-data
        resources:
          limits:
            memory: 256Mi
            cpu: 125m
          requests:
            cpu: 70m
            memory: 200Mi
      volumes:
      - name: redis-data
        emptyDir: {}
---
# Source: online-boutique/templates/shipping-v1.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: shippingservice-v1 
  annotations:
    servicemesh.kubesphere.io/enabled: "true"
  labels:
    
    app.kubernetes.io/name: online-boutique
    app.kubernetes.io/version: 0.1.0
    app: shippingservice
    version: v1
spec:
  selector:
    matchLabels:
      app: shippingservice
      version: v1
      
      app.kubernetes.io/name: online-boutique
      app.kubernetes.io/version: 0.1.0
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      labels:
        app: shippingservice
        version: v1
        
        app.kubernetes.io/name: online-boutique
        app.kubernetes.io/version: 0.1.0
    spec:
      serviceAccountName: default
      containers:
      - name: server
        image: gcr.io/google-samples/microservices-demo/shippingservice:v0.2.3
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 50051
        env:
        - name: PORT
          value: "50051"
        # - name: DISABLE_STATS
        #   value: "1"
        # - name: DISABLE_TRACING
        #   value: "1"
        # - name: DISABLE_PROFILER
        #   value: "1"
        # - name: JAEGER_SERVICE_ADDR
        #   value: "jaeger-collector:14268"
        readinessProbe:
          periodSeconds: 5
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:50051"]
        livenessProbe:
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:50051"]
        resources:
          requests:
            cpu: 100m
            memory: 64Mi
          limits:
            cpu: 200m
            memory: 128Mi
---
# Source: online-boutique/templates/application.yaml
apiVersion: app.k8s.io/v1beta1
kind: Application
metadata:
  name: online-boutique
  labels:
    
    app.kubernetes.io/name: online-boutique
    app.kubernetes.io/version: 0.1.0
  annotations:
    servicemesh.kubesphere.io/enabled: 'true'
spec:
  selector:
    matchLabels:
      app.kubernetes.io/version: 0.1.0
      app.kubernetes.io/name: online-boutique
  addOwnerRef: true
  componentKinds:
    - group: ''
      kind: Service
    - group: apps
      kind: Deployment
    - group: apps
      kind: StatefulSet
    - group: extensions
      kind: Ingress
    - group: servicemesh.kubesphere.io
      kind: Strategy
    - group: servicemesh.kubesphere.io
      kind: ServicePolicy
