---
# Source: ctfd/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-ctfd
  labels:
    helm.sh/chart: ctfd-1.0.0
    app.kubernetes.io/name: ctfd
    app.kubernetes.io/instance: my-ctfd
    app.kubernetes.io/version: "3.7.3"
    app.kubernetes.io/managed-by: Helm
---
# Source: ctfd/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-ctfd-secrets
  labels:
    helm.sh/chart: ctfd-1.0.0
    app.kubernetes.io/name: ctfd
    app.kubernetes.io/instance: my-ctfd
    app.kubernetes.io/version: "3.7.3"
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  SECRET_KEY: VEhadGFFSlNaR3R0VFVoMmNuSnNhVzF4ZGtadFV6VlJPVWRLVjFJd1pGWnNSMDQxYm1FMldYVnU=
---
# Source: ctfd/templates/persistantvolumeclaim.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: my-ctfd-storage
  labels:
    helm.sh/chart: ctfd-1.0.0
    app.kubernetes.io/name: ctfd
    app.kubernetes.io/instance: my-ctfd
    app.kubernetes.io/version: "3.7.3"
    app.kubernetes.io/managed-by: Helm
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  volumeMode: Filesystem
---
# Source: ctfd/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-ctfd-web
  labels:
    helm.sh/chart: ctfd-1.0.0
    app.kubernetes.io/name: ctfd
    app.kubernetes.io/instance: my-ctfd
    app.kubernetes.io/version: "3.7.3"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 8000
      targetPort: http
      protocol: "TCP"
  selector:
    app.kubernetes.io/name: ctfd
    app.kubernetes.io/instance: my-ctfd
---
# Source: ctfd/templates/controller.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-ctfd
  labels:
    helm.sh/chart: ctfd-1.0.0
    app.kubernetes.io/name: ctfd
    app.kubernetes.io/instance: my-ctfd
    app.kubernetes.io/version: "3.7.3"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: ctfd
      app.kubernetes.io/instance: my-ctfd
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ctfd
        app.kubernetes.io/instance: my-ctfd
    spec:
      serviceAccountName: my-ctfd
      containers:
        - name: ctfd
          image: "ghcr.io/ctfd/ctfd:3.7.3"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8000
              protocol: "TCP"
          env:
            - name: "TZ"
              value: "UTC"
            - name: UPLOAD_FOLDER
              value: /data/uploads
            - name: LOG_FOLDER
              value: /data/logs
            - name: SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: my-ctfd-secrets
                  key: SECRET_KEY
          volumeMounts:
            - name: my-ctfd-storage
              mountPath: /data/uploads
              subPath: uploads
            - name: my-ctfd-storage
              mountPath: /data/logs
              subPath: logs
          livenessProbe:
            httpGet:
              path: /healthcheck
              port: http
          readinessProbe:
            httpGet:
              path: /healthcheck
              port: http
          resources: {}
      volumes:
        - name: my-ctfd-storage
          persistentVolumeClaim:
            claimName: my-ctfd-storage
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsNonRoot: true
        runAsUser: 1001
