---
# Source: eos-user-cache-refresher/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-eos-user-cache-refresher-script
  labels:
    helm.sh/chart: eos-user-cache-refresher-0.0.1
    app.kubernetes.io/name: eos-user-cache-refresher
    app.kubernetes.io/instance: my-eos-user-cache-refresher
    app.kubernetes.io/version: "4.8.78"
    app.kubernetes.io/managed-by: Helm
data:
  user_cache_refresh.sh: |
    #!/bin/bash
    set -x
    alias eos='eos -r 0 0'
    shopt -s expand_aliases

    init_probe() {
      local cmd=$@
      local max_wait=60
      local sleep=5
      start_time=$(date +%s)
      rc=-1
      while [ $rc -ne 0 ];
      do
        timeout --preserve-status $sleep $cmd >/dev/null 2>&1
        rc=$?

        # Bail out after max_wait
        tot_wait=$(($(date +%s)-start_time))
        echo "        $tot_wait seconds... (timeout at $max_wait)"
        if [ $tot_wait -ge $max_wait ]; then
          echo "ERROR: cmd \`$cmd\` failed after $tot_wait secs. Giving up."
          exit 1
        fi
        sleep $sleep
      done
    }

    run_eos_access_ls() {
      date --iso-8601=seconds
      timeout --preserve-status 10 eos access ls 2>&1
      if [ $? -ne 0 ];
      then
        echo "Warning: `eos access ls` timed out"
      fi
      echo
    }

    # Wait for the MGM to be online
    echo "INFO: Checking the MGM is online..."
    echo "INFO: EOS_MGM_URL="$EOS_MGM_URL
    init_probe eos ns
    echo "INFO: MGM is online."

    # Refresh cached user info

    while true
    do

      run_eos_access_ls
      sleep 30
    done

    exit 0
---
# Source: eos-user-cache-refresher/templates/job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: my-eos-user-cache-refresher
  labels:
    helm.sh/chart: eos-user-cache-refresher-0.0.1
    app.kubernetes.io/name: eos-user-cache-refresher
    app.kubernetes.io/instance: my-eos-user-cache-refresher
    app.kubernetes.io/version: "4.8.78"
    app.kubernetes.io/managed-by: Helm
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/name: eos-user-cache-refresher
        app.kubernetes.io/instance: my-eos-user-cache-refresher
        component: eos-mgm
        service: eos
    spec:
      affinity:
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: component
                  operator: In
                  values:
                  - eos-mgm
              topologyKey: "kubernetes.io/hostname"
      restartPolicy: OnFailure
      containers:
        - name: eos-user-cache-refresher
          image: gitlab-registry.cern.ch/dss/eos/eos-all:4.8.78
          imagePullPolicy: Always
          command: ["/bin/bash", "/root/user_cache_refresh.sh"]
          env:
            - name: XrdSecPROTOCOL
              value: sss
            - name: XrdSecsssKT
              value: /etc/eos.keytab
            - name: EOS_MGM_URL
              value: root://my-eos-user-cache-refresher-mgm-0.my-eos-user-cache-refresher-mgm.default.svc.cluster.local
          volumeMounts:
            - name: eos-sss-keytab
              mountPath: /etc/eos.keytab
              subPath: eos.keytab
            - name: eos-user-cache-refresher-script
              mountPath: /root/user_cache_refresh.sh
              subPath: user_cache_refresh.sh
      volumes:
        - name: eos-sss-keytab
          secret:
            secretName: eos-sss-keytab
            defaultMode: 0400
        - name: eos-user-cache-refresher-script
          configMap:
            name: my-eos-user-cache-refresher-script
            defaultMode: 0755
