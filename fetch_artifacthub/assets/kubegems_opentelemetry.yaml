---
# Source: opentelemetry/templates/opentelemetry.yaml
apiVersion: plugins.kubegems.io/v1beta1
kind: Plugin
metadata:
  name: opentelemetry-collector
  namespace: "default"
spec:
  kind: helm
  url: https://open-telemetry.github.io/opentelemetry-helm-charts
  chart: opentelemetry-collector
  version: "0.28.0"
  values:
    config:
      extensions:
        health_check: {}
        memory_ballast: {}
        pprof:
          endpoint: 0.0.0.0:1777
      receivers:
        jaeger:
          protocols:
            grpc:
              endpoint: 0.0.0.0:14250
            thrift_compact:
              endpoint: 0.0.0.0:6831
            thrift_http:
              endpoint: 0.0.0.0:14268
        otlp:
          protocols:
            grpc:
              endpoint: 0.0.0.0:4317
            http:
              endpoint: 0.0.0.0:4318
              include_metadata: true
              cors:
                allowed_origins:
                  - "*"
                allowed_headers:
                  - "*"
        prometheus:
          config:
            scrape_configs:
              - job_name: otel-prometheus-receiver
                scrape_interval: 30s
                static_configs:
                  - targets:
                      - ${MY_POD_IP}:8888
      processors:
        k8sattributes:
          passthrough: true
        spanmetrics:
          dimensions:
            - name: namespace
            - name: pod
            - name: node
            - name: http.status_code
          dimensions_cache_size: 2000
          latency_histogram_buckets:
            - 1ms
            - 10ms
            - 100ms
            - 500ms
            - 1s
            - 10s
          metrics_exporter: prometheus
      exporters:
        jaeger:
          endpoint: 
          tls:
            insecure: true
        prometheus:
          endpoint: 0.0.0.0:8889
          resource_to_telemetry_conversion:
            enabled: true
      service:
        extensions:
          - health_check
          - memory_ballast
          - pprof
        telemetry:
          metrics:
            address: 0.0.0.0:8888
          logs:
            level: "info"
        pipelines:
          logs:
            exporters:
              - logging
            processors:
              - memory_limiter
              - batch
            receivers:
              - otlp
          metrics:
            exporters:
              - prometheus
            processors:
              - memory_limiter
              - batch
            receivers:
              - otlp
              # do not use prometheus receiver because of
              # https://github.com/open-telemetry/opentelemetry-collector-contrib/issues/14900
              # - prometheus
          traces:
            exporters:
              - jaeger
            processors:
              - batch
              - memory_limiter
              - k8sattributes
              - spanmetrics
            receivers:
              - otlp
              - jaeger
              - zipkin
    image:
      
      tag: 0.70.0
    mode: deployment
    replicaCount: 2
    ports:
      metrics:
        enabled: true
      otlp-metrics:
        enabled: true
        containerPort: 8889
        servicePort: 8889
        hostPort: 8889 # only useful when agent mode(daemonset).
        protocol: TCP
      pprof:
        enabled: true
        containerPort: 1777
        servicePort: 1777
        hostPort: 1777
        protocol: TCP
    clusterRole:
      create: true
      rules:
        - apiGroups:
            - ""
          resources:
            - pods
            - nodes
          verbs:
            - get
            - list
            - watch
    resources:
      limits:
        cpu: 1000m
        memory: 2Gi
      requests:
        cpu: 100m
        memory: 128Mi
    serviceMonitor:
      enabled: true
      metricsEndpoints:
        - honorLabels: true
          port: metrics
        - honorLabels: true
          port: otlp-metrics
