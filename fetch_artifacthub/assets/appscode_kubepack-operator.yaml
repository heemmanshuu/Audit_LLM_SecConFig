---
# Source: kubepack-operator/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-kubepack-operator
  namespace: default
  labels:
    helm.sh/chart: kubepack-operator-v0.1.0
    app.kubernetes.io/name: kubepack-operator
    app.kubernetes.io/instance: my-kubepack-operator
    app.kubernetes.io/version: "v0.1.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: kubepack-operator/templates/apiregistration.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-kubepack-operator-apiserver-cert
  namespace: default
  labels:
    helm.sh/chart: kubepack-operator-v0.1.0
    app.kubernetes.io/name: kubepack-operator
    app.kubernetes.io/instance: my-kubepack-operator
    app.kubernetes.io/version: "v0.1.0"
    app.kubernetes.io/managed-by: Helm
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURZekNDQWt1Z0F3SUJBZ0lRRlRjbWNZVkdLNHd5dVFSNHFSZXd5VEFOQmdrcWhraUc5dzBCQVFzRkFEQU4KTVFzd0NRWURWUVFERXdKallUQWVGdzB5TkRBNU1UWXdPRFV5TURWYUZ3MHpOREE1TVRRd09EVXlNRFZhTUI4eApIVEFiQmdOVkJBTVRGRzE1TFd0MVltVndZV05yTFc5d1pYSmhkRzl5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGCkFBT0NBUThBTUlJQkNnS0NBUUVBdzZ1cmd6M2dwT2RCdU1qTjdMc0ZIUjJVOWtXRmVJd3FBY05MTWVxanpDWi8KdUVLUkNqVzJ4bVFPYlhBOEFnOWtWMExpY3RSMG0rZGFUbEVWdXV1akxZTG1WeGhUUFk3NDRWSS96dlVVQmJyQgpFTEZCOTI5LzlyUGRMTktVZ2dGMTRaajBvQUFnZlVEaGhyTnIzTUhEZVlZQnNwM0hoMjRQSFp4UXRmSXBLeTVpClNmRmNTWVpDTmxrS2lRSW5sSW02TEVyb09sQnJ4L1czcUpYK3dweEV3QW92amlDemNnd0FXUGxZbTNKNkt0UjIKYWVLUVVmcmd1dnRwLzNkeGZyWjFJaWNSbVNmSnl0R0NYbnpkY0ZWWW5uWHZYWnM0NjRCWCtmY0xnajFlMTNkOAp3N2s1QVgwcXV6dTdsNnhyY1VJYjNPdXQ0YXB3NXdMWnptcjRteEwvalFJREFRQUJvNEdzTUlHcE1BNEdBMVVkCkR3RUIvd1FFQXdJRm9EQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3REFZRFZSMFQKQVFIL0JBSXdBREFmQmdOVkhTTUVHREFXZ0JTNGgrSHBRUE00a0NJbC9hZ1ZNaTNoRjIxMVRqQkpCZ05WSFJFRQpRakJBZ2h4dGVTMXJkV0psY0dGamF5MXZjR1Z5WVhSdmNpNWtaV1poZFd4MGdpQnRlUzFyZFdKbGNHRmpheTF2CmNHVnlZWFJ2Y2k1a1pXWmhkV3gwTG5OMll6QU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFIVGMrTlYvRFl3K2UKV1pYQnhxTTlidCtHVmhyeG9RdGxESTBBTVlOdUs3eTF5dEkzenh1UlVXR2Q5aWFqaiszUkRBSC9td1pDNGJXVQo2QUFWTEdRQS81NGNvdC9rNGhXVzJQdmU4dEZWOGdNTHBHcUg4ZWlIRVdYYXhtRVNHRFRvNm5nbExzVjhBYWxJCjNRZG1jdWlRckZjQkh0WFRFUzdqOGoyKzBadHRLeGZEei9Tc3d2QmhnMm1YZGZVVWRsckNoaXFGMkZ6Y3ZSaWkKaFVkaW40eEFvK3ZHOWJHTFd1OExZNThLWnREaG1EU1pZRXRUZVBsSmlvanY5SGFrNGpnQm9aUnVONk9IQVVMKwpDRVhHYU5UQUdJaDYwdFVwbjV2bkYra3llSS9RUnRNcWk0UVJOSjZac0VTRVpMWE00eUNvL0ZHVERwYm9SMk02CjZyNVRmYVBKRnc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdzZ1cmd6M2dwT2RCdU1qTjdMc0ZIUjJVOWtXRmVJd3FBY05MTWVxanpDWi91RUtSCkNqVzJ4bVFPYlhBOEFnOWtWMExpY3RSMG0rZGFUbEVWdXV1akxZTG1WeGhUUFk3NDRWSS96dlVVQmJyQkVMRkIKOTI5LzlyUGRMTktVZ2dGMTRaajBvQUFnZlVEaGhyTnIzTUhEZVlZQnNwM0hoMjRQSFp4UXRmSXBLeTVpU2ZGYwpTWVpDTmxrS2lRSW5sSW02TEVyb09sQnJ4L1czcUpYK3dweEV3QW92amlDemNnd0FXUGxZbTNKNkt0UjJhZUtRClVmcmd1dnRwLzNkeGZyWjFJaWNSbVNmSnl0R0NYbnpkY0ZWWW5uWHZYWnM0NjRCWCtmY0xnajFlMTNkOHc3azUKQVgwcXV6dTdsNnhyY1VJYjNPdXQ0YXB3NXdMWnptcjRteEwvalFJREFRQUJBb0lCQUZQbjNwRlZ6R29LUExXSApiajV3YUIzM0hIU0tsVlIvRGxoWkxYcUhPcHdGZWtsQ1NqM05rTVg4QysvRDdBZWFJQllIT1dHeVZ4cXZsNXJ6CnpGU3VUUGZzSk9mK0oxdkRYbGdJMUJIa0tDVFkwNGRiNjRTMlRISTI2TVlhdXRJUTNFTFVPem9OTStGaUhCT08KQnRmUVF3bHVmSFhpa0xnemFzbnd5TzlzbTFqSE4veGRqbWZYV2lBU3ZzbjhtNUJUK1UwWVBTSG5XOWFEblIxQwpOTW9TU1FHSk5TYkVEWERjeituYXlxK2JndkZ3QkVDd2pDQjdVQTlrZ1g2Qk5PYzErRlN2YzN1L3BZU1dPTWorCjNXMTczNWU1QUttRnNGQVl2bmw1VVBCL0RDOEgwUlU5SzV6b3dLelRxc2lydEgycWZ2Ym1yVHVNTkZwTDdSMFAKVkF1VHp3VUNnWUVBMWYrZmJCeElkVStFUGJCeVpwb09WR051Z0hiSHp6N3ZlbE9oc2F4Vk16YWE4bnNNK1NRawpkb1ZNalovMHppRDl2V00wUUVoOWQwaWpKZkM3bkdzeHNNc1loNzVCNHlpckJLUnBNKzhrN0tmaFpMdU9OM0t6Cm1oQkluRXQydm9odUlDZk5qUDNrUXRVM0ZTZzQvTkZYOFdheXc1ZWJLTHhTNWJkTkprZWVOdzhDZ1lFQTZoTW8KZE5CM0JEcGRlbVA4VUdNeXZGZE1oV2VCckNpd1hDc01Zc1BHQ0t6U2lJY0poZjEzY3l6SkNUdG1lWUFQYkJLdwpXSC9YK051WklCeXFKYm9DNWk4MjZOckpuU3hxRnBScHI5d2JWNDJHbkI1QTZZMThrTFhTNHVMY1ZqSENWY3QxCndMV3pMbFg0Qzkxbng2RDBDelE2ZG1xVnowV2pxNXQ2KzEraS82TUNnWUFwSUdaUURhTnpRQ1BuQXlrSlJPUXEKSGEzWDdIdjcvVmxpeGYzV09vdHBPejVPQ1kzMXQ1ZDJXNm5ac2ZzSFBsbmxjdEpRNUYyUWRobzhxV1kwNm5qegpSQ1RqdVpIS0NUL010Wmd1VGZCbnR0L2ZUeGhHMmJsZ2kyNlk4dnZRSkVJZDFlaHdCejgrQk9JQUkrbkgxS2UxCkVncWJBbURrVkVVT05zc1I1ME9seXdLQmdRQ0tiZ1lRLzNCRGVkanFsdE1USDNkVDF6VVQrQ0RDRmRZbXkvYXAKT2lxVjJzOHZtdHpROXhON2M5TDR1TDVqd0k1ZVZiY2d2NHFVVEJxRTJTN3UzTkQySEpvV243MTRURm41UEpBOApScW1NMzgvcDZDSnZmUk5iNll2c1Rrb01WNlVjWkJVaGdOT1U1WmFxUGFnd2NVbWlqcUs4Z1ZCVG9sV25HVzVqCjF5MW9qUUtCZ1FDa0QrN21Zc0Nkd1krQWRZd0V6T29xZndLQkZuSS9TZjBWd0lDaWJkYUo1TzJGVTRVeUxpMFoKVGNtSll2QmhGM2duVWJac1pGUm9BSWZuRFJnMHFFdHpuaEJsUVBEZ2RhanJFRWJqQkRpc2JxeXR0WUhlVk5EQwo1ekU1bVV2S1g3UmNwdVVJZTZlV0JzcUtYVWMwRllGNzk0MHpZWFVaZVB2bWRWSUVDclZ0Mnc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: kubepack-operator/templates/cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-kubepack-operator
  labels:
    helm.sh/chart: kubepack-operator-v0.1.0
    app.kubernetes.io/name: kubepack-operator
    app.kubernetes.io/instance: my-kubepack-operator
    app.kubernetes.io/version: "v0.1.0"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs: ["*"]
- apiGroups:
  - apiregistration.k8s.io
  resources:
  - apiservices
  verbs: ["delete", "get", "patch"]
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - mutatingwebhookconfigurations
  - validatingwebhookconfigurations
  verbs: ["delete", "list", "watch", "patch"]
- apiGroups:
  - kubepack.com
  - appcatalog.appscode.com
  resources:
  - "*"
  verbs: ["*"]
- apiGroups:
  - apps
  resources:
  - deployments
  verbs: ["create","get", "update", "patch"]
- apiGroups:
  - ""
  resources:
  - secrets
  - services
  - serviceaccounts
  verbs: ["create", "get", "patch"]
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs: ["create", "patch", "get", "list", "watch"]
- apiGroups:
  - ""
  resources:
  - nodes
  verbs: ["list"]
- apiGroups:
  - ""
  resources:
  - events
  verbs: ["create"]
- apiGroups:
  - monitoring.coreos.com
  resources:
  - servicemonitors
  verbs: ["*"]
- apiGroups:
  - ""
  resources:
  - pods
  - pods/exec
  verbs: ["get", "create", "list"]
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterroles
  - clusterrolebindings
  - roles
  - rolebindings
  verbs: ["get", "update", "create", "patch"]
---
# Source: kubepack-operator/templates/apiregistration.yaml
# to delegate authentication and authorization
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-kubepack-operator-apiserver-auth-delegator
  labels:
    helm.sh/chart: kubepack-operator-v0.1.0
    app.kubernetes.io/name: kubepack-operator
    app.kubernetes.io/instance: my-kubepack-operator
    app.kubernetes.io/version: "v0.1.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  kind: ClusterRole
  apiGroup: rbac.authorization.k8s.io
  name: system:auth-delegator
subjects:
- kind: ServiceAccount
  name: my-kubepack-operator
  namespace: default
---
# Source: kubepack-operator/templates/cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-kubepack-operator
  labels:
    helm.sh/chart: kubepack-operator-v0.1.0
    app.kubernetes.io/name: kubepack-operator
    app.kubernetes.io/instance: my-kubepack-operator
    app.kubernetes.io/version: "v0.1.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-kubepack-operator
subjects:
- kind: ServiceAccount
  name: my-kubepack-operator
  namespace: default
---
# Source: kubepack-operator/templates/apiregistration.yaml
# to read the config for terminating authentication
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: my-kubepack-operator-apiserver-extension-server-authentication-reader
  namespace: kube-system
  labels:
    helm.sh/chart: kubepack-operator-v0.1.0
    app.kubernetes.io/name: kubepack-operator
    app.kubernetes.io/instance: my-kubepack-operator
    app.kubernetes.io/version: "v0.1.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  kind: Role
  apiGroup: rbac.authorization.k8s.io
  name: extension-apiserver-authentication-reader
subjects:
- kind: ServiceAccount
  name: my-kubepack-operator
  namespace: default
---
# Source: kubepack-operator/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-kubepack-operator
  namespace: default
  labels:
    helm.sh/chart: kubepack-operator-v0.1.0
    app.kubernetes.io/name: kubepack-operator
    app.kubernetes.io/instance: my-kubepack-operator
    app.kubernetes.io/version: "v0.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  ports:
  # Port used to expose admission webhook apiserver
  - name: api
    port: 443
    targetPort: 8443
  selector:
    app.kubernetes.io/name: kubepack-operator
    app.kubernetes.io/instance: my-kubepack-operator
---
# Source: kubepack-operator/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-kubepack-operator
  namespace: default
  labels:
    helm.sh/chart: kubepack-operator-v0.1.0
    app.kubernetes.io/name: kubepack-operator
    app.kubernetes.io/instance: my-kubepack-operator
    app.kubernetes.io/version: "v0.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kubepack-operator
      app.kubernetes.io/instance: my-kubepack-operator
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kubepack-operator
        app.kubernetes.io/instance: my-kubepack-operator
      annotations:
        checksum/apiregistration.yaml: 2200a2baf7df1d0a8079bc542814fcd169a060d5fb4895ddbf28d004ffb8722c
    spec:
      serviceAccountName: my-kubepack-operator
      securityContext:
        # ensure that s/a token is readable xref: https://issues.k8s.io/70679
        fsGroup: 65535
      containers:
      - name: operator
        securityContext:
          {}
        image: kubepack/kubepack-operator:v0.1.0
        imagePullPolicy: IfNotPresent
        args:
        - run
        - --v=3
        - --secure-port=8443
        - --audit-log-path=-
        - --tls-cert-file=/var/serving-cert/tls.crt
        - --tls-private-key-file=/var/serving-cert/tls.key
        - --enable-mutating-webhook=false
        - --enable-validating-webhook=false
        - --bypass-validating-webhook-xray=false
        - --use-kubeapiserver-fqdn-for-aks=true
        - --enable-analytics=true
        ports:
        - containerPort: 8443
        env:
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: MY_POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        resources:
          {}
        volumeMounts:
        - mountPath: /var/serving-cert
          name: serving-cert
      volumes:
      - name: serving-cert
        secret:
          defaultMode: 420
          secretName: my-kubepack-operator-apiserver-cert
      securityContext:
        fsGroup: 65535
      nodeSelector:
        beta.kubernetes.io/arch: amd64
        beta.kubernetes.io/os: linux
---
# Source: kubepack-operator/templates/mutating-webhook.yaml
# GKE returns Major:"1", Minor:"10+"
---
# Source: kubepack-operator/templates/validating-webhook.yaml
# GKE returns Major:"1", Minor:"10+"
---
# Source: kubepack-operator/templates/user-roles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kubepack:core:admin
  labels:
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
- apiGroups:
  - appcatalog.appscode.com
  - kubepack.com
  resources:
  - "*"
  verbs: ["*"]
---
# Source: kubepack-operator/templates/user-roles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kubepack:core:edit
  labels:
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
- apiGroups:
  - kubepack.com
  resources:
  - applications
  verbs: ["*"]
- apiGroups:
  - appcatalog.appscode.com
  resources:
  - appbindings
  verbs: ["*"]
---
# Source: kubepack-operator/templates/user-roles.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kubepack:core:view
  labels:
    rbac.authorization.k8s.io/aggregate-to-view: "true"
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
- apiGroups:
  - kubepack.com
  resources:
  - applications
  verbs: ["get", "list", "watch"]
- apiGroups:
  - appcatalog.appscode.com
  resources:
  - appbindings
  verbs: ["get", "list", "watch"]
---
# Source: kubepack-operator/templates/cleaner.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: my-kubepack-operator-cleaner
  namespace: default
  labels:
    helm.sh/chart: kubepack-operator-v0.1.0
    app.kubernetes.io/name: kubepack-operator
    app.kubernetes.io/instance: my-kubepack-operator
    app.kubernetes.io/version: "v0.1.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": pre-delete
    "helm.sh/hook-delete-policy": hook-succeeded,hook-failed
spec:
  backoffLimit: 3
  activeDeadlineSeconds: 120
  template:
    spec:
      serviceAccountName: my-kubepack-operator
      containers:
      - name: kubectl
        image: appscode/kubectl:v1.16
        command:
          - sh
          - -c
          - "sleep 2; \
          kubectl delete validatingwebhookconfigurations validators.kubepack.com || true; \
          kubectl delete mutatingwebhookconfiguration mutators.kubepack.com || true; \
          kubectl delete apiservice v1alpha1.mutators.kubepack.com || true; \
          kubectl delete apiservice v1alpha1.validators.kubepack.com || true;"
        imagePullPolicy: IfNotPresent
      restartPolicy: Never
