---
# Source: ingress-annotator/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-ingress-annotator
  namespace: default
  labels:
    helm.sh/chart: ingress-annotator-0.1.10
    app.kubernetes.io/name: ingress-annotator
    app.kubernetes.io/instance: my-ingress-annotator
    app.kubernetes.io/version: "v0.1.11"
    app.kubernetes.io/managed-by: Helm
---
# Source: ingress-annotator/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: ingress-annotator
  namespace: default
  labels:
    helm.sh/chart: ingress-annotator-0.1.10
    app.kubernetes.io/name: ingress-annotator
    app.kubernetes.io/instance: my-ingress-annotator
    app.kubernetes.io/version: "v0.1.11"
    app.kubernetes.io/managed-by: Helm
data:
  rules: |
---
# Source: ingress-annotator/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-ingress-annotator-manager-role
  labels:
    helm.sh/chart: ingress-annotator-0.1.10
    app.kubernetes.io/name: ingress-annotator
    app.kubernetes.io/instance: my-ingress-annotator
    app.kubernetes.io/version: "v0.1.11"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - patch
  - update
  - watch
---
# Source: ingress-annotator/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-ingress-annotator-manager-rolebinding
  labels:
    helm.sh/chart: ingress-annotator-0.1.10
    app.kubernetes.io/name: ingress-annotator
    app.kubernetes.io/instance: my-ingress-annotator
    app.kubernetes.io/version: "v0.1.11"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-ingress-annotator-manager-role
subjects:
- kind: ServiceAccount
  name: my-ingress-annotator
  namespace: default
---
# Source: ingress-annotator/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: my-ingress-annotator-leader-election-role
  namespace: default
  labels:
    helm.sh/chart: ingress-annotator-0.1.10
    app.kubernetes.io/name: ingress-annotator
    app.kubernetes.io/instance: my-ingress-annotator
    app.kubernetes.io/version: "v0.1.11"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
# Source: ingress-annotator/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: my-ingress-annotator-leader-election-rolebinding
  namespace: default
  labels:
    helm.sh/chart: ingress-annotator-0.1.10
    app.kubernetes.io/name: ingress-annotator
    app.kubernetes.io/instance: my-ingress-annotator
    app.kubernetes.io/version: "v0.1.11"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: my-ingress-annotator-leader-election-role
subjects:
- kind: ServiceAccount
  name: my-ingress-annotator
  namespace: default
---
# Source: ingress-annotator/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-ingress-annotator-metrics
  namespace: default
  labels:
    helm.sh/chart: ingress-annotator-0.1.10
    app.kubernetes.io/name: ingress-annotator
    app.kubernetes.io/instance: my-ingress-annotator
    app.kubernetes.io/version: "v0.1.11"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8081
      targetPort: https
      protocol: TCP
      name: https
  selector:
    app.kubernetes.io/name: ingress-annotator
    app.kubernetes.io/instance: my-ingress-annotator
---
# Source: ingress-annotator/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-ingress-annotator
  namespace: default
  labels:
    helm.sh/chart: ingress-annotator-0.1.10
    app.kubernetes.io/name: ingress-annotator
    app.kubernetes.io/instance: my-ingress-annotator
    app.kubernetes.io/version: "v0.1.11"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: ingress-annotator
      app.kubernetes.io/instance: my-ingress-annotator
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ingress-annotator
        app.kubernetes.io/instance: my-ingress-annotator
    spec:
      serviceAccountName: my-ingress-annotator
      terminationGracePeriodSeconds: 10
      containers:
        - name: ingress-annotator
          securityContext:
            runAsNonRoot: true
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
          image: "ghcr.io/kuoss/ingress-annotator:v0.1.11"
          imagePullPolicy: IfNotPresent
          args:
            - --metrics-bind-address=:8443
            - --leader-elect
            - --health-probe-bind-address=:8081
          command:
            - /manager
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8081
            initialDelaySeconds: 15
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8081
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
            {}
