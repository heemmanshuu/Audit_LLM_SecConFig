---
# Source: nri-resource-policy-template/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: nri-resource-policy-template
  namespace: default
  labels:
    helm.sh/chart: nri-resource-policy-template-v0.7.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: nri-resource-policy-template
    app.kubernetes.io/instance: my-nri-resource-policy-template
---
# Source: nri-resource-policy-template/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: nri-resource-policy-template
  labels:
    helm.sh/chart: nri-resource-policy-template-v0.7.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: nri-resource-policy-template
    app.kubernetes.io/instance: my-nri-resource-policy-template
rules:
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - watch
- apiGroups:
  - topology.node.k8s.io
  resources:
  - noderesourcetopologies
  verbs:
  - create
  - get
  - list
  - update
  - delete
---
# Source: nri-resource-policy-template/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: nri-resource-policy-template
  labels:
    helm.sh/chart: nri-resource-policy-template-v0.7.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: nri-resource-policy-template
    app.kubernetes.io/instance: my-nri-resource-policy-template
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: nri-resource-policy-template
subjects:
- kind: ServiceAccount
  name: nri-resource-policy-template
  namespace: default
---
# Source: nri-resource-policy-template/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: nri-resource-policy-template
  namespace: default
  labels:
    helm.sh/chart: nri-resource-policy-template-v0.7.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: nri-resource-policy-template
    app.kubernetes.io/instance: my-nri-resource-policy-template
rules:
- apiGroups:
  - config.nri
  resources:
  - templatepolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - config.nri
  resources:
  - templatepolicies/status
  verbs:
  - get
  - update
  - patch
---
# Source: nri-resource-policy-template/templates/rolebindings.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: nri-resource-policy-template
  namespace: default
  labels:
    helm.sh/chart: nri-resource-policy-template-v0.7.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: nri-resource-policy-template
    app.kubernetes.io/instance: my-nri-resource-policy-template
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: nri-resource-policy-template
subjects:
- kind: ServiceAccount
  name: nri-resource-policy-template
  namespace: default
---
# Source: nri-resource-policy-template/templates/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    helm.sh/chart: nri-resource-policy-template-v0.7.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: nri-resource-policy-template
    app.kubernetes.io/instance: my-nri-resource-policy-template
  name: nri-resource-policy-template
  namespace: default
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: nri-resource-policy-template
      app.kubernetes.io/instance: my-nri-resource-policy-template
  template:
    metadata:
      labels:
        helm.sh/chart: nri-resource-policy-template-v0.7.0
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: nri-resource-policy-template
        app.kubernetes.io/instance: my-nri-resource-policy-template
    spec:
      serviceAccount: nri-resource-policy-template
      nodeSelector:
        kubernetes.io/os: "linux"
      containers:
        - name: nri-resource-policy-template
          args:
            - --host-root
            - /host
            - --config-namespace
            - default
            - --pid-file
            - /tmp/nri-resource-policy.pid
            - -metrics-interval
            - 5s
            - --nri-plugin-index
            - "90"
          ports:
            - containerPort: 8891
              protocol: TCP
              hostPort: 8891
              name: metrics
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: ENABLE_TEST_APIS
            value: "1"
          image: ghcr.io/containers/nri-plugins/nri-resource-policy-template:v0.7.0
          imagePullPolicy: IfNotPresent
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop: ["ALL"]
          resources:
            requests:
              cpu: 500m
              memory: 512Mi
          volumeMounts:
          - name: resource-policydata
            mountPath: /var/lib/nri-resource-policy
          - name: hostsysfs
            mountPath: /host/sys
          - name: resource-policysockets
            mountPath: /var/run/nri-resource-policy
          - name: nrisockets
            mountPath: /var/run/nri
      priorityClassName: system-node-critical
      volumes:
      - name: resource-policydata
        hostPath:
          path: /var/lib/nri-resource-policy
          type: DirectoryOrCreate
      - name: hostsysfs
        hostPath:
          path: /sys
          type: Directory
      - name: resource-policysockets
        hostPath:
          path: /var/run/nri-resource-policy
      - name: nrisockets
        hostPath:
          path: /var/run/nri
          type: DirectoryOrCreate
---
# Source: nri-resource-policy-template/templates/config.yaml
apiVersion: config.nri/v1alpha1
kind: TemplatePolicy
metadata:
  name: default
  namespace: default
  labels:
    helm.sh/chart: nri-resource-policy-template-v0.7.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: nri-resource-policy-template
    app.kubernetes.io/instance: my-nri-resource-policy-template
spec:
  instrumentation:
    reportPeriod: 60s
    samplingRatePerMillion: 0
  log:
    klog:
      skip_headers: true
    source: true
  reservedResources:
    cpu: 750m
