---
# Source: psmdb-db/templates/cluster.yaml
apiVersion: psmdb.percona.com/v1
kind: PerconaServerMongoDB
metadata:
  name: my-psmdb-db
  namespace: default
  labels:
    app.kubernetes.io/name: psmdb-db
    helm.sh/chart: psmdb-db-1.17.0
    app.kubernetes.io/instance: my-psmdb-db
    app.kubernetes.io/version: "1.17.0"
    app.kubernetes.io/managed-by: Helm
  finalizers:
    - percona.com/delete-psmdb-pods-in-order
spec:
  crVersion: 1.17.0
  pause: false
  unmanaged: false
  image: "percona/percona-server-mongodb:7.0.12-7"
  imagePullPolicy: "Always"
  unsafeFlags:
    backupIfUnhealthy: false
    mongosSize: false
    replsetSize: false
    terminationGracePeriod: false
    tls: false
  multiCluster:
    enabled: false
  secrets:
    users: my-psmdb-db-secrets
  updateStrategy: SmartUpdate
  upgradeOptions:
    versionServiceEndpoint: https://check.percona.com
    apply: disabled
    schedule: 0 2 * * *
    setFCV: false
  pmm:
    enabled: false
    image: "percona/pmm-client:2.42.0"
    serverHost: monitoring-service

  replsets:
  - name: rs0
    size: 3
    affinity:
      antiAffinityTopologyKey: kubernetes.io/hostname
    podDisruptionBudget:
      maxUnavailable: 1
    expose:
      enabled: false
      exposeType: ClusterIP
    resources:
      limits:
        cpu: 300m
        memory: 0.5G
      requests:
        cpu: 300m
        memory: 0.5G
    volumeSpec:
      persistentVolumeClaim:
        resources:
          requests:
            storage: 3Gi
    nonvoting:
      enabled: false
      size: 3
      affinity:
        antiAffinityTopologyKey: kubernetes.io/hostname
      podDisruptionBudget:
        maxUnavailable: 1
      resources:
        limits:
          cpu: 300m
          memory: 0.5G
        requests:
          cpu: 300m
          memory: 0.5G
      volumeSpec:
        persistentVolumeClaim:
          resources:
            requests:
              storage: 3Gi
    arbiter:
      enabled: false
      size: 1
      affinity:
        antiAffinityTopologyKey: kubernetes.io/hostname

  sharding:
    enabled: true
    balancer:
      enabled: true

    configsvrReplSet:
      size: 3
      affinity:
        antiAffinityTopologyKey: kubernetes.io/hostname
      podDisruptionBudget:
        maxUnavailable: 1
      expose:
        enabled: false
        exposeType: ClusterIP
      resources:
        limits:
          cpu: 300m
          memory: 0.5G
        requests:
          cpu: 300m
          memory: 0.5G
      volumeSpec:
        persistentVolumeClaim:
          resources:
            requests:
              storage: 3Gi

    mongos:
      size: 2
      affinity:
        antiAffinityTopologyKey: kubernetes.io/hostname
      podDisruptionBudget:
        maxUnavailable: 1
      resources:
        limits:
          cpu: 300m
          memory: 0.5G
        requests:
          cpu: 300m
          memory: 0.5G
      expose:
        exposeType: ClusterIP

  backup:
    enabled: true
    image: "percona/percona-backup-mongodb:2.5.0"
    storages:
      null
    pitr:
      enabled: false
    tasks:
      null
