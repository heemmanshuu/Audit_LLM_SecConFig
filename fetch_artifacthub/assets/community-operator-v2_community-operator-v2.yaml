---
# Source: community-operator-v2/templates/service_account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-community-operator-v2-controller-manager
  labels:
    app.kubernetes.io/name: my-community-operator-v2
    helm.sh/chart: community-operator-v2-1.0.0
    app.kubernetes.io/instance: my-community-operator-v2
    app.kubernetes.io/managed-by: Helm
---
# Source: community-operator-v2/templates/configmap.yaml
apiVersion: v1
data:
  controller_manager_config.yaml: |
    apiVersion: controller-runtime.sigs.k8s.io/v1alpha1
    kind: ControllerManagerConfig
    health:
      healthProbeBindAddress: :8081
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
    leaderElection:
      leaderElect: true
      resourceName: d6919303.frp.com
kind: ConfigMap
metadata:
  name: my-community-operator-v2-manager-config
  labels:
    app.kubernetes.io/name: my-community-operator-v2
    helm.sh/chart: community-operator-v2-1.0.0
    app.kubernetes.io/instance: my-community-operator-v2
    app.kubernetes.io/managed-by: Helm
---
# Source: community-operator-v2/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-community-operator-v2-manager-role
  labels:
    app.kubernetes.io/name: my-community-operator-v2
    helm.sh/chart: community-operator-v2-1.0.0
    app.kubernetes.io/instance: my-community-operator-v2
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - community.zufardhiyaulhaq.com
  resources:
  - announcements
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - community.zufardhiyaulhaq.com
  resources:
  - announcements/status
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - community.zufardhiyaulhaq.com
  resources:
  - communities
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - community.zufardhiyaulhaq.com
  resources:
  - communities/status
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - community.zufardhiyaulhaq.com
  resources:
  - meetups
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - community.zufardhiyaulhaq.com
  resources:
  - meetups/status
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - community.zufardhiyaulhaq.com
  resources:
  - telegramhandlers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - community.zufardhiyaulhaq.com
  resources:
  - telegramhandlers/status
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - community.zufardhiyaulhaq.com
  resources:
  - twitterhandlers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - community.zufardhiyaulhaq.com
  resources:
  - twitterhandlers/status
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - community.zufardhiyaulhaq.com
  resources:
  - weeklies
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - community.zufardhiyaulhaq.com
  resources:
  - weeklies/status
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: community-operator-v2/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-community-operator-v2-metrics-reader
rules:
- nonResourceURLs:
  - "/metrics"
  verbs:
  - get
---
# Source: community-operator-v2/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-community-operator-v2-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
# Source: community-operator-v2/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-community-operator-v2-manager-rolebinding
  labels:
    app.kubernetes.io/name: my-community-operator-v2
    helm.sh/chart: community-operator-v2-1.0.0
    app.kubernetes.io/instance: my-community-operator-v2
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-community-operator-v2-manager-role
subjects:
- kind: ServiceAccount
  name: my-community-operator-v2-controller-manager
  namespace: default
---
# Source: community-operator-v2/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-community-operator-v2-proxy-rolebinding
  labels:
    app.kubernetes.io/name: my-community-operator-v2
    helm.sh/chart: community-operator-v2-1.0.0
    app.kubernetes.io/instance: my-community-operator-v2
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-community-operator-v2-proxy-role
subjects:
- kind: ServiceAccount
  name: my-community-operator-v2-controller-manager
  namespace: default
---
# Source: community-operator-v2/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: my-community-operator-v2-leader-election-role
  labels:
    app.kubernetes.io/name: my-community-operator-v2
    helm.sh/chart: community-operator-v2-1.0.0
    app.kubernetes.io/instance: my-community-operator-v2
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
# Source: community-operator-v2/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: my-community-operator-v2-leader-election-rolebinding
  labels:
    app.kubernetes.io/name: my-community-operator-v2
    helm.sh/chart: community-operator-v2-1.0.0
    app.kubernetes.io/instance: my-community-operator-v2
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: my-community-operator-v2-leader-election-role
subjects:
- kind: ServiceAccount
  name: my-community-operator-v2-controller-manager
  namespace: default
---
# Source: community-operator-v2/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    control-plane: controller-manager
    app.kubernetes.io/name: my-community-operator-v2
    helm.sh/chart: community-operator-v2-1.0.0
    app.kubernetes.io/instance: my-community-operator-v2
    app.kubernetes.io/managed-by: Helm
  name: my-community-operator-v2-controller-manager-metrics-service
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: https
  selector:
    app.kubernetes.io/name: my-community-operator-v2
    control-plane: controller-manager
---
# Source: community-operator-v2/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: controller-manager
    app.kubernetes.io/name: my-community-operator-v2
    helm.sh/chart: community-operator-v2-1.0.0
    app.kubernetes.io/instance: my-community-operator-v2
    app.kubernetes.io/managed-by: Helm
  name: my-community-operator-v2-controller-manager
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: my-community-operator-v2
      control-plane: controller-manager
  template:
    metadata:
      labels:
        app.kubernetes.io/name: my-community-operator-v2
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=10
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.8.0
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        - --leader-elect
        command:
        - /manager
        image: "zufardhiyaulhaq/community-operator-v2:v1.0.0"
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources: 
          limits:
            cpu: 200m
            memory: 100Mi
          requests:
            cpu: 100m
            memory: 20Mi
        securityContext:
          allowPrivilegeEscalation: false
      securityContext:
        runAsNonRoot: true
      serviceAccountName: my-community-operator-v2-controller-manager
      terminationGracePeriodSeconds: 10
