---
# Source: boundary-softsci/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: boundary
  labels:
    helm.sh/chart: boundary-softsci-0.2.4
    app: boundary
    service: boundary
    app.kubernetes.io/instance: my-boundary-softsci
    app.kubernetes.io/version: "0.7.1"
    app.kubernetes.io/managed-by: Helm
---
# Source: boundary-softsci/templates/serviceaccount.yaml
kind: ServiceAccount
apiVersion: v1
metadata:
  name: vault-boundary
  namespace: default
  labels:
    app.kubernetes.io/instance: vault
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: vault
    helm.sh/chart: vault-0.22.0
  annotations:
    meta.helm.sh/release-name: vault
    meta.helm.sh/release-namespace: default
secrets:
  - name: vault-token
  - name: vault-boundary-token
  - name: vault-token-ql4hz
---
# Source: boundary-softsci/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: boundary-config
  labels:
    helm.sh/chart: boundary-softsci-0.2.4
    app: boundary
    service: boundary
    app.kubernetes.io/instance: my-boundary-softsci
    app.kubernetes.io/version: "0.7.1"
    app.kubernetes.io/managed-by: Helm
  creationTimestamp: null
data:
  boundary-config-admin.hcl: |
    disable_mlock = true
    log_format    = "standard"
    controller {
      name        = "kubernetes-controller"
      description = "Boundary controller"
      database {
        url = "postgresql://postgres:postgres@postgres:5432/boundary?sslmode=disable"
      }
      public_cluster_addr = "localhost"
    }
    worker {
      name        = "kubernetes-worker"
      description = "Boundary worker"
      address     = "localhost"
      controllers = ["localhost"]
      public_addr = "192.168.1.1:30202"
    }
    listener "tcp" {
      address     = "0.0.0.0"
      purpose     = "api"
      tls_disable = true
    }
    listener "tcp" {
      address     = "0.0.0.0"
      purpose     = "cluster"
      tls_disable = true
    }
    listener "tcp" {
      address     = "0.0.0.0"
      purpose     = "proxy"
      tls_disable = true
    }
    kms "aead" {
      purpose = "recovery"
      key_id = "global_recovery"
      aead_type = "aes-gcm"
      key = "Ivj8Si8UQBp+Zm2lLbUDTxOGikE8rSo6QihCjWSTXqY="
    }
    kms "aead" {
      purpose = "root"
      key_id = "global_root"
      aead_type = "aes-gcm"
      key = "D0vmvzf8l+C709nVfEH3hgBCj6IF/1eb9kCTYTtnDVc="
    }
    kms "aead" {
      purpose = "worker-auth"
      key_id = "global_worker-auth"
      aead_type = "aes-gcm"
      key = "8Aj2j2JpFmY1WdjKcmETyYwUi7njP74MLVXWNov4rZ8="
    }
  boundary-config.hcl: |
    disable_mlock = true
    log_format    = "standard"
    controller {
      name        = "kubernetes-controller"
      description = "Boundary controller"
      database {
        url = "postgresql://postgres:postgres@postgres:5432/boundary?sslmode=disable"
      }
      public_cluster_addr = "localhost"
    }
    worker {
      name        = "kubernetes-worker"
      description = "Boundary worker"
      address     = "localhost"
      controllers = ["localhost"]
      public_addr = "192.168.1.1:30202"
    }
    listener "tcp" {
      address     = "0.0.0.0"
      purpose     = "api"
      tls_disable = true
    }
    listener "tcp" {
      address     = "0.0.0.0"
      purpose     = "cluster"
      tls_disable = true
    }
    listener "tcp" {
      address     = "0.0.0.0"
      purpose     = "proxy"
      tls_disable = true
    }
    kms "aead" {
      purpose = "recovery"
      key_id = "global_recovery"
      aead_type = "aes-gcm"
      key = "Ivj8Si8UQBp+Zm2lLbUDTxOGikE8rSo6QihCjWSTXqY="
    }
    kms "aead" {
      purpose = "root"
      key_id = "global_root"
      aead_type = "aes-gcm"
      key = "D0vmvzf8l+C709nVfEH3hgBCj6IF/1eb9kCTYTtnDVc="
    }
    kms "aead" {
      purpose = "worker-auth"
      key_id = "global_worker-auth"
      aead_type = "aes-gcm"
      key = "8Aj2j2JpFmY1WdjKcmETyYwUi7njP74MLVXWNov4rZ8="
    }
---
# Source: boundary-softsci/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: boundary-0
  labels:
    helm.sh/chart: boundary-softsci-0.2.4
    app: boundary
    service: boundary
    app.kubernetes.io/instance: my-boundary-softsci
    app.kubernetes.io/version: "0.7.1"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 9200
      targetPort: api
      protocol: TCP
      name: api
    - port: 9201
      targetPort: cluster
      protocol: TCP
      name: cluster
  selector:
    app: boundary
    service: boundary
    app.kubernetes.io/instance: my-boundary-softsci
---
# Source: boundary-softsci/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: boundary-1
  labels:
    helm.sh/chart: boundary-softsci-0.2.4
    app: boundary
    service: boundary
    app.kubernetes.io/instance: my-boundary-softsci
    app.kubernetes.io/version: "0.7.1"
    app.kubernetes.io/managed-by: Helm
spec:
  type: NodePort
  ports:
    - port: 9202
      targetPort: data
      nodePort: 30202
      protocol: TCP
      name: data
  selector:
    app: boundary
    service: boundary
    app.kubernetes.io/instance: my-boundary-softsci
---
# Source: boundary-softsci/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: boundary
  labels:
    helm.sh/chart: boundary-softsci-0.2.4
    app: boundary
    service: boundary
    app.kubernetes.io/instance: my-boundary-softsci
    app.kubernetes.io/version: "0.7.1"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: boundary
      service: boundary
      app.kubernetes.io/instance: my-boundary-softsci
  template:
    metadata:
      annotations:
        consul.hashicorp.com/connect-inject: "false"
      labels:
        app: boundary
        service: boundary
        app.kubernetes.io/instance: my-boundary-softsci
    spec:
      serviceAccountName: boundary
      securityContext:
        {}
      initContainers:
        - name: boundary-init
          image: "hashicorp/boundary:latest"
          command:
            - /bin/sh
            - "-c"
          args:
            -  boundary database init -skip-auth-method-creation -skip-host-resources-creation -skip-scopes-creation -skip-target-creation -config /boundary/boundary-config.hcl || sleep 10000
          env:
            - name: HOSTNAME
              value: boundary
            - name: token
              valueFrom:
                secretKeyRef:
                  name: VAULT_TOKEN
                  key: token
          volumeMounts:
            - name: boundary-config
              mountPath: /boundary
              readOnly: true
      containers:
        - name: boundary-softsci
          command:
            - /bin/sh
            - "-c"
          args:
            - boundary server -config /boundary/boundary-config.hcl
          env:
            - name: HOSTNAME
              value: boundary
            - name: token
              valueFrom:
                secretKeyRef:
                  name: VAULT_TOKEN
                  key: token
          volumeMounts:
            - name: boundary-config
              mountPath: /boundary
              readOnly: true
          securityContext:
            {}
          image: "hashicorp/boundary:latest"
          imagePullPolicy: IfNotPresent
          ports:
            - name: api
              containerPort: 9200
              protocol: TCP
            - name: cluster
              containerPort: 9201
              protocol: TCP
            - name: data
              containerPort: 9202
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: api
          readinessProbe:
            httpGet:
              path: /
              port: api
          resources:
            {}
      volumes:
        - name: boundary-config
          configMap:
            name: boundary-config
---
# Source: boundary-softsci/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: boundary
  labels:
    helm.sh/chart: boundary-softsci-0.2.4
    app: boundary
    service: boundary
    app.kubernetes.io/instance: my-boundary-softsci
    app.kubernetes.io/version: "0.7.1"
    app.kubernetes.io/managed-by: Helm
spec:
  ingressClassName: nginx
  rules:
    - host: "boundary.home.lan"
      http:
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name: boundary-0
                port:
                  name: api
