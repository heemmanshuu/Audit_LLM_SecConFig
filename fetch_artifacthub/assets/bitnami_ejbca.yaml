---
# Source: ejbca/charts/mariadb/templates/networkpolicy.yaml
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: my-ejbca-mariadb
  namespace: "default"
  labels:
    app.kubernetes.io/instance: my-ejbca
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mariadb
    app.kubernetes.io/version: 11.4.3
    helm.sh/chart: mariadb-19.0.5
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/instance: my-ejbca
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: mariadb
      app.kubernetes.io/version: 11.4.3
      helm.sh/chart: mariadb-19.0.5
  policyTypes:
    - Ingress
    - Egress
  egress:
    - {}
  ingress:
    - ports:
        - port: 3306
        - port: 3306
---
# Source: ejbca/templates/networkpolicy.yaml
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: my-ejbca
  namespace: "default"
  labels:
    app.kubernetes.io/instance: my-ejbca
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ejbca
    app.kubernetes.io/version: 8.3.2
    helm.sh/chart: ejbca-15.0.6
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/instance: my-ejbca
      app.kubernetes.io/name: ejbca
  policyTypes:
    - Ingress
    - Egress
  egress:
    - {}
  ingress:
    - ports:
        - port: 8080
        - port: 8443
---
# Source: ejbca/charts/mariadb/templates/primary/pdb.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: my-ejbca-mariadb
  namespace: "default"
  labels:
    app.kubernetes.io/instance: my-ejbca
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mariadb
    app.kubernetes.io/version: 11.4.3
    helm.sh/chart: mariadb-19.0.5
    app.kubernetes.io/component: primary
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: my-ejbca
      app.kubernetes.io/name: mariadb
      app.kubernetes.io/component: primary
---
# Source: ejbca/templates/pdb.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: my-ejbca
  namespace: "default"
  labels:
    app.kubernetes.io/instance: my-ejbca
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ejbca
    app.kubernetes.io/version: 8.3.2
    helm.sh/chart: ejbca-15.0.6
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: my-ejbca
      app.kubernetes.io/name: ejbca
---
# Source: ejbca/charts/mariadb/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-ejbca-mariadb
  namespace: "default"
  labels:
    app.kubernetes.io/instance: my-ejbca
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mariadb
    app.kubernetes.io/version: 11.4.3
    helm.sh/chart: mariadb-19.0.5
automountServiceAccountToken: false
---
# Source: ejbca/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-ejbca
  namespace: "default"
  labels:
    app.kubernetes.io/instance: my-ejbca
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ejbca
    app.kubernetes.io/version: 8.3.2
    helm.sh/chart: ejbca-15.0.6
automountServiceAccountToken: false
---
# Source: ejbca/charts/mariadb/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-ejbca-mariadb
  namespace: "default"
  labels:
    app.kubernetes.io/instance: my-ejbca
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mariadb
    app.kubernetes.io/version: 11.4.3
    helm.sh/chart: mariadb-19.0.5
type: Opaque
data:
  mariadb-root-password: "c3RKYkltSlduYQ=="
  mariadb-password: "WHMxUU01UUVzeg=="
---
# Source: ejbca/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-ejbca
  namespace: "default"
  labels:
    app.kubernetes.io/instance: my-ejbca
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ejbca
    app.kubernetes.io/version: 8.3.2
    helm.sh/chart: ejbca-15.0.6
type: Opaque
data:
  ejbca-admin-password: "NGw1NTNLUk1mQg=="
---
# Source: ejbca/charts/mariadb/templates/primary/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-ejbca-mariadb
  namespace: "default"
  labels:
    app.kubernetes.io/instance: my-ejbca
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mariadb
    app.kubernetes.io/version: 11.4.3
    helm.sh/chart: mariadb-19.0.5
    app.kubernetes.io/component: primary
data:
  my.cnf: |-
    [mysqld]
    skip-name-resolve
    explicit_defaults_for_timestamp
    basedir=/opt/bitnami/mariadb
    datadir=/bitnami/mariadb/data
    plugin_dir=/opt/bitnami/mariadb/plugin
    port=3306
    socket=/opt/bitnami/mariadb/tmp/mysql.sock
    tmpdir=/opt/bitnami/mariadb/tmp
    max_allowed_packet=16M
    bind-address=*
    pid-file=/opt/bitnami/mariadb/tmp/mysqld.pid
    log-error=/opt/bitnami/mariadb/logs/mysqld.log
    character-set-server=UTF8
    collation-server=utf8_general_ci
    slow_query_log=0
    long_query_time=10.0
    
    [client]
    port=3306
    socket=/opt/bitnami/mariadb/tmp/mysql.sock
    default-character-set=UTF8
    plugin_dir=/opt/bitnami/mariadb/plugin
    
    [manager]
    port=3306
    socket=/opt/bitnami/mariadb/tmp/mysql.sock
    pid-file=/opt/bitnami/mariadb/tmp/mysqld.pid
---
# Source: ejbca/templates/pvc.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: my-ejbca
  namespace: "default"
  labels:
    app.kubernetes.io/instance: my-ejbca
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ejbca
    app.kubernetes.io/version: 8.3.2
    helm.sh/chart: ejbca-15.0.6
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "2Gi"
---
# Source: ejbca/charts/mariadb/templates/primary/svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-ejbca-mariadb
  namespace: "default"
  labels:
    app.kubernetes.io/instance: my-ejbca
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mariadb
    app.kubernetes.io/version: 11.4.3
    helm.sh/chart: mariadb-19.0.5
    app.kubernetes.io/component: primary
  annotations:
spec:
  type: ClusterIP
  sessionAffinity: None
  ports:
    - name: mysql
      port: 3306
      protocol: TCP
      targetPort: mysql
      nodePort: null
  selector:
    app.kubernetes.io/instance: my-ejbca
    app.kubernetes.io/name: mariadb
    app.kubernetes.io/component: primary
---
# Source: ejbca/templates/svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-ejbca
  namespace: "default"
  labels:
    app.kubernetes.io/instance: my-ejbca
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ejbca
    app.kubernetes.io/version: 8.3.2
    helm.sh/chart: ejbca-15.0.6
spec:
  type: LoadBalancer
  externalTrafficPolicy: "Cluster"
  sessionAffinity: None
  ports:
    - name: http
      port: 8080
      targetPort: http
    - name: https
      port: 8443
      targetPort: https
  selector:
    app.kubernetes.io/instance: my-ejbca
    app.kubernetes.io/name: ejbca
---
# Source: ejbca/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-ejbca
  namespace: "default"
  labels:
    app.kubernetes.io/instance: my-ejbca
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ejbca
    app.kubernetes.io/version: 8.3.2
    helm.sh/chart: ejbca-15.0.6
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: my-ejbca
      app.kubernetes.io/name: ejbca
  replicas: 1
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: my-ejbca
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: ejbca
        app.kubernetes.io/version: 8.3.2
        helm.sh/chart: ejbca-15.0.6
      annotations:
        checksum/secret: 4c18dd84269ab6f7a3aaca552ddf6022609e2a90b975235eb3e3870b3e4d09ed
    spec:
      
      automountServiceAccountToken: false
      serviceAccountName: my-ejbca
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/instance: my-ejbca
                    app.kubernetes.io/name: ejbca
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      priorityClassName: ""
      securityContext:
        fsGroup: 1001
        fsGroupChangePolicy: Always
        supplementalGroups: []
        sysctls: []
      initContainers:
        - name: prepare-writable-files
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seLinuxOptions: null
            seccompProfile:
              type: RuntimeDefault
          image: docker.io/bitnami/ejbca:8.3.2-debian-12-r2
          imagePullPolicy: "IfNotPresent"
          command:
            - /bin/bash
          args:
            - -ec
            - |
              #!/bin/bash

              . /opt/bitnami/scripts/liblog.sh

              # We need the standalone.conf to be writable but not the rest of the bin folder
              info "Copying standalone.conf"
              cp /opt/bitnami/wildfly/bin/standalone.conf /wildfly-standalone-conf-dir
              info "Writable files successfully copied"

          volumeMounts:
            - name: empty-dir
              mountPath: /wildfly-standalone-conf-dir
              subPath: wildfly-standalone-conf-dir
      containers:
        - name: ejbca
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seLinuxOptions: null
            seccompProfile:
              type: RuntimeDefault
          image: docker.io/bitnami/ejbca:8.3.2-debian-12-r2
          imagePullPolicy: "IfNotPresent"
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: EJBCA_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: my-ejbca
                  key: ejbca-admin-password
            - name: EJBCA_DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: my-ejbca-mariadb
                  key: mariadb-password
            - name: EJBCA_ADMIN_USERNAME
              value: "bitnami"
            - name: EJBCA_DATABASE_HOST
              value: "my-ejbca-mariadb"
            - name: EJBCA_DATABASE_PORT
              value: "3306"
            - name: EJBCA_DATABASE_NAME
              value: "bitnami_ejbca"
            - name: EJBCA_DATABASE_USERNAME
              value: "bn_ejbca"
            - name: EJBCA_HTTP_PORT_NUMBER
              value: "8080"
            - name: EJBCA_HTTPS_PORT_NUMBER
              value: "8443"
            - name: EJBCA_HTTPS_ADVERTISED_PORT_NUMBER
              value: "443"
            - name: EJBCA_CA_NAME
              value: "ManagementCA"
          envFrom:
          ports:
            - name: http
              containerPort: 8080
            - name: https
              containerPort: 8443
            - name: https-pub
              containerPort: 8442
            - name: ajp
              containerPort: 8009
          livenessProbe:
            initialDelaySeconds: 500
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
            tcpSocket:
              port: http
          readinessProbe:
            initialDelaySeconds: 500
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
            httpGet:
              path: /ejbca/doc
              port: http
          volumeMounts:
            - name: empty-dir
              mountPath: /opt/bitnami/wildfly/standalone
              subPath: wildfly-standalone-dir
            - name: empty-dir
              mountPath: /opt/bitnami/wildfly/bin/standalone.conf
              subPath: wildfly-standalone-conf-dir/standalone.conf
            - name: empty-dir
              mountPath: /opt/bitnami/wildfly/tmp
              subPath: wildfly-tmp-dir
            - name: empty-dir
              mountPath: /opt/bitnami/ejbca/tmp
              subPath: app-tmp-dir
            - name: empty-dir
              mountPath: /opt/bitnami/wildfly/domain/configuration
              subPath: wildfly-domain-conf-dir
            - name: empty-dir
              mountPath: /opt/bitnami/ejbca/conf
              subPath: app-conf-dir
            - name: empty-dir
              mountPath: /tmp
              subPath: tmp-dir
            - name: ejbca-data
              mountPath: /bitnami/wildfly
              subPath: wildfly
          resources:
            limits:
              cpu: "3.0"
              ephemeral-storage: 2Gi
              memory: 6144Mi
            requests:
              cpu: "1.0"
              ephemeral-storage: 50Mi
              memory: 3072Mi
      volumes:
        - name: empty-dir
          emptyDir: {}
        - name: ejbca-data
          persistentVolumeClaim:
            claimName: my-ejbca
---
# Source: ejbca/charts/mariadb/templates/primary/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: my-ejbca-mariadb
  namespace: "default"
  labels:
    app.kubernetes.io/instance: my-ejbca
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mariadb
    app.kubernetes.io/version: 11.4.3
    helm.sh/chart: mariadb-19.0.5
    app.kubernetes.io/component: primary
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/instance: my-ejbca
      app.kubernetes.io/name: mariadb
      app.kubernetes.io/component: primary
  serviceName: my-ejbca-mariadb
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      annotations:
        checksum/configuration: 8d83f82bfdfc9d7331d584c017f7fd0ed66f04259a18a7bfd547688c5a5612b3
      labels:
        app.kubernetes.io/instance: my-ejbca
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: mariadb
        app.kubernetes.io/version: 11.4.3
        helm.sh/chart: mariadb-19.0.5
        app.kubernetes.io/component: primary
    spec:
      
      automountServiceAccountToken: false
      serviceAccountName: my-ejbca-mariadb
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/instance: my-ejbca
                    app.kubernetes.io/name: mariadb
                    app.kubernetes.io/component: primary
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      securityContext:
        fsGroup: 1001
        fsGroupChangePolicy: Always
        supplementalGroups: []
        sysctls: []
      initContainers:
        - name: preserve-logs-symlinks
          image: docker.io/bitnami/mariadb:11.4.3-debian-12-r0
          imagePullPolicy: "IfNotPresent"
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seLinuxOptions: {}
            seccompProfile:
              type: RuntimeDefault
          resources:
            limits:
              cpu: 375m
              ephemeral-storage: 2Gi
              memory: 384Mi
            requests:
              cpu: 250m
              ephemeral-storage: 50Mi
              memory: 256Mi
          command:
            - /bin/bash
          args:
            - -ec
            - |
              #!/bin/bash

              . /opt/bitnami/scripts/libfs.sh
              # We copy the logs folder because it has symlinks to stdout and stderr
              if ! is_dir_empty /opt/bitnami/mariadb/logs; then
                cp -r /opt/bitnami/mariadb/logs /emptydir/app-logs-dir
              fi
          volumeMounts:
            - name: empty-dir
              mountPath: /emptydir
      containers:
        - name: mariadb
          image: docker.io/bitnami/mariadb:11.4.3-debian-12-r0
          imagePullPolicy: "IfNotPresent"
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seLinuxOptions: {}
            seccompProfile:
              type: RuntimeDefault
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: MARIADB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: my-ejbca-mariadb
                  key: mariadb-root-password
            - name: MARIADB_USER
              value: "bn_ejbca"
            - name: MARIADB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: my-ejbca-mariadb
                  key: mariadb-password
            - name: MARIADB_DATABASE
              value: "bitnami_ejbca"
          ports:
            - name: mysql
              containerPort: 3306
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 120
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
            exec:
              command:
                - /bin/bash
                - -ec
                - |
                  password_aux="${MARIADB_ROOT_PASSWORD:-}"
                  if [[ -f "${MARIADB_ROOT_PASSWORD_FILE:-}" ]]; then
                      password_aux=$(cat "$MARIADB_ROOT_PASSWORD_FILE")
                  fi
                  mariadb-admin status -uroot -p"${password_aux}"
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
            exec:
              command:
                - /bin/bash
                - -ec
                - |
                  password_aux="${MARIADB_ROOT_PASSWORD:-}"
                  if [[ -f "${MARIADB_ROOT_PASSWORD_FILE:-}" ]]; then
                      password_aux=$(cat "$MARIADB_ROOT_PASSWORD_FILE")
                  fi
                  mariadb-admin ping -uroot -p"${password_aux}"
          resources:
            limits:
              cpu: 375m
              ephemeral-storage: 2Gi
              memory: 384Mi
            requests:
              cpu: 250m
              ephemeral-storage: 50Mi
              memory: 256Mi
          volumeMounts:
            - name: data
              mountPath: /bitnami/mariadb
            - name: config
              mountPath: /opt/bitnami/mariadb/conf/my.cnf
              subPath: my.cnf
            - name: empty-dir
              mountPath: /tmp
              subPath: tmp-dir
            - name: empty-dir
              mountPath: /opt/bitnami/mariadb/conf
              subPath: app-conf-dir
            - name: empty-dir
              mountPath: /opt/bitnami/mariadb/tmp
              subPath: app-tmp-dir
            - name: empty-dir
              mountPath: /opt/bitnami/mariadb/logs
              subPath: app-logs-dir
      volumes:
        - name: empty-dir
          emptyDir: {}
        - name: config
          configMap:
            name: my-ejbca-mariadb
  volumeClaimTemplates:
    - metadata:
        name: data
        labels:
          app.kubernetes.io/instance: my-ejbca
          app.kubernetes.io/name: mariadb
          app.kubernetes.io/component: primary
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "8Gi"
