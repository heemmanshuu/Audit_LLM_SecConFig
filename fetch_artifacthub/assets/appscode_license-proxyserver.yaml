---
# Source: license-proxyserver/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-license-proxyserver
  namespace: default
  labels:
    helm.sh/chart: license-proxyserver-v2024.9.13
    app.kubernetes.io/name: license-proxyserver
    app.kubernetes.io/instance: my-license-proxyserver
    app.kubernetes.io/version: "v0.0.15"
    app.kubernetes.io/managed-by: Helm
---
# Source: license-proxyserver/templates/apiregistration.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-license-proxyserver-apiserver-cert
  namespace: default
  labels:
    helm.sh/chart: license-proxyserver-v2024.9.13
    app.kubernetes.io/name: license-proxyserver
    app.kubernetes.io/instance: my-license-proxyserver
    app.kubernetes.io/version: "v0.0.15"
    app.kubernetes.io/managed-by: Helm
type: kubernetes.io/tls
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lRS1JIa0JwSmYrTmwvQTMyN0I1RE5xekFOQmdrcWhraUc5dzBCQVFzRkFEQU4KTVFzd0NRWURWUVFERXdKallUQWVGdzB5TkRBNU1UWXhNREk0TVRaYUZ3MHpOREE1TVRReE1ESTRNVFphTUEweApDekFKQmdOVkJBTVRBbU5oTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUE5U1Q1ClBxVUZ4cEdvUEZtdUdOSmQyVlJKQ1U5aUVsOXN2ZmlSRks2OGViR1RZU2pGOGFHblROOVcxS0lENFJ3YzQ2QTkKeGhVdGMvTjV1bVhVOHZKWURvWk9GL0VOUHFtUjRIQ2JpeTJvY01wZjF0cklPUm5EYXIvcWIwN1FwcEpkS01lbwowRC8yVTM2VFF3ZzJlRGZCekRUUDZJbVE5NzdiTzhwWXg2a0lCb0YzcklRMk5HM0tZUkVuY1p6MTVHR0ROQWl4CklSOXdrU1Z0ejNQZ1RtNWhRSHJ4NjBLejdJSUtPQmdWS0FIVHN5MUxDb1dPUjRCYnNEblJXdythODdsZ2hCb3UKM2RPaEt1aG1kanZ4WHZ4L2NDYlkyc1l1R1hhbENhdllnT0dVaUNiV2VKWW5vSTgvL0tYN0lFSjZic2cxM21ybQpMSmlzMG1pK3ZqQWhPZ20zVXdJREFRQUJvMkV3WHpBT0JnTlZIUThCQWY4RUJBTUNBcVF3SFFZRFZSMGxCQll3CkZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUUKRkxTTk0rUTlqNG5VUEU4Qytmc2Zjd3Z4VkZjM01BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQ2taTFVPVVE4dAorNHVUeldCNGw4TWljbGZqcDlvd2l5djA1U3BEZzE1U1JzYVlMM2REV3FOckhSaEtzUmZGM3I4VkNXZDA0YWRxCmJBWE4yWDFLTStoNkpmckVXOUkxSUJETFhEWDk1bzJiL0FXZGhacm9LNllsUGxFZ3RmVFlNaDAxdmx4dktGMUsKcC90NktsTTNsbmczQmtSTVQwaG8vbG1hUnBWWWxCVExleitEOGFIaGxLK2FJV2RWTjhzMU5pd1p1RDdEUHNzQQpZdDJ1aGpNSHUybmhVMTcvN2NOd1VNMVFrQjd0NVFGVXJIeFBJSEhKMnhCbk0vL0lMVDRzYmVlTWJ3SDl4RWc3CnB1RVZFWG1ONjRYSE1JUVZVcUw4NFJweXhNbmczRE9OM3dadGRFSHMrM0tPZ0JGRTFjakJpU254V3VVSHMzYjQKZllPM0lkbG1OTnZzCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURhVENDQWxHZ0F3SUJBZ0lRTVczUDlnUENOM0Y4K0F4VVVhVVRCVEFOQmdrcWhraUc5dzBCQVFzRkFEQU4KTVFzd0NRWURWUVFERXdKallUQWVGdzB5TkRBNU1UWXhNREk0TVRaYUZ3MHpOREE1TVRReE1ESTRNVFphTUNFeApIekFkQmdOVkJBTVRGbTE1TFd4cFkyVnVjMlV0Y0hKdmVIbHpaWEoyWlhJd2dnRWlNQTBHQ1NxR1NJYjNEUUVCCkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDWGNtMmtxUXlvdXM1V05maVQ2aHBmNmpscXdpcnJ6MVdySEtqc3J3OHIKaUh0a3BVSjJ4QWw3cHg5dlY2QjNTSjJhTXFGa0xBdTNhZzJvVzFneWVJRVUrMGlxSHc1Q3JNNExaaTZoRnhwWgp2SHJFQlVVcGJVeS9adkFoNjd6RjFXSFVyRjZ2NnRPVC8wcUpjSmNzdjFoaTVpVkxmZUVwOCsrVmMxdFlDS1NGCm1GNFYyclltWEo2ZmZnUnhPRk1xUU05Rm9wbFRmNmR5Nm1JdldmUVZpdENma0xhMkV0OExERUhSZEViQzI5V04KRHRONVFtcG1qM2JTMUF5OGlmeHpZelVaakw0TDQwb1l5OTJ6bHBoVWkyeHh6Ty85VitINjRBNnNkSW9ibTA3RQpqYUp2ZWptQ1hiVDBuZSs1RlBSZXp5b0VZaEhZRzUyd1VHbWtJT2ZHcUx5VEFnTUJBQUdqZ2JBd2dhMHdEZ1lEClZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBTUJnTlYKSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQUZMU05NK1E5ajRuVVBFOEMrZnNmY3d2eFZGYzNNRTBHQTFVZApFUVJHTUVTQ0htMTVMV3hwWTJWdWMyVXRjSEp2ZUhselpYSjJaWEl1WkdWbVlYVnNkSUlpYlhrdGJHbGpaVzV6ClpTMXdjbTk0ZVhObGNuWmxjaTVrWldaaGRXeDBMbk4yWXpBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQUlOY0oKQi81MHFtQUZtZWdITlpzUk1iaytLUEM2Tmdsa1pxYjVCQnVvNUdjQyt1Sm1pNVNFSVA4K01SMUJ0cXpNdGdFWAowZHZTWTc5RkFmckRic3VtWEdmY29tUDZpQVcyTzFSY21lU1NIY0FJTUduVndlM0ZaQjI3eFBFbVgyUXlnbDF5CnlpTFFCZit4cXArVXQ2ZWpsSU1zNElBcERDZ1RMam1peDFjMVowSFV1QnpsZVEydWpja3JXWjVyYldBSUR3c1oKcnRsQmExY3hUK242Q3pJSGtpK1BZWjFpbmVOWEMxWElXR29UNzZBWlFmRFFnUzFwQmFLZFBWYlRGUEFJWXplWgpZUlpmUU84N1h4dmJHbHRXbXZ2TXBpS215MDZUclQzU0hUZk0rZzA5QVNRelBERmw2RmZGMk5nOEt1Zng1REhHCko1QUV6clNlZy8wU21GWDRlUT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBbDNKdHBLa01xTHJPVmpYNGsrb2FYK281YXNJcTY4OVZxeHlvN0s4UEs0aDdaS1ZDCmRzUUplNmNmYjFlZ2QwaWRtaktoWkN3THQyb05xRnRZTW5pQkZQdElxaDhPUXF6T0MyWXVvUmNhV2J4NnhBVkYKS1cxTXYyYndJZXU4eGRWaDFLeGVyK3JUay85S2lYQ1hMTDlZWXVZbFMzM2hLZlB2bFhOYldBaWtoWmhlRmRxMgpKbHllbjM0RWNUaFRLa0RQUmFLWlUzK25jdXBpTDFuMEZZclFuNUMydGhMZkN3eEIwWFJHd3R2VmpRN1RlVUpxClpvOTIwdFFNdkluOGMyTTFHWXkrQytOS0dNdmRzNWFZVkl0c2NjenYvVmZoK3VBT3JIU0tHNXRPeEkyaWIzbzUKZ2wyMDlKM3Z1UlQwWHM4cUJHSVIyQnVkc0ZCcHBDRG54cWk4a3dJREFRQUJBb0lCQUM4eFF5VmFZRTE3Mkt4WQpxUnMraWZWMWdXclpFcExreXVkRlNRWm9EcXdjSFlkaFQvSytaODRXWjk5RVNRYWlwQ25XdVNBRDhhcTM2NFdZCjRVVG85Q0JicFdzTnZsM2NoMkJaK1JITnB6SnJYejRSL2xsSWEvQUEzYmRVUkVESm0zQ3dQZGxIcmFLaW5ORnoKT2tpQlg4T0J3QUZrT25QZVJid21kRUpjZnhmNXhpOXhMelhrSVhGczFlM0RCUGpmYUpZVmQxSnFyWlZ3UzVDYQpQUG4xUmxYL25IejdSYWRicnpJZFZyUUdCdTFOT2VhRk1hYXdmSzRqR1BadmsvSFJ4ZEhpak5rQkRiYW1zbjlKCnIxVHJGcXo2M0Fia2l2UTArRWwwU0MrcHdiL3pZZGo3ZTkxSVVid3lDZTdPak51UksxVEJ4STVoSTk1dmR4S3YKblZGcVZFRUNnWUVBd3pMZXU2QmQ1RzJibi9HZHlCV0pnSXNycGQ0YXd1K3ZNcmpBa0ROSkxwTTZEY3hQenhXRAo4NkNuemRjV0paZ2hTWGg0NjYwbkFkcDRMQzl5eXl3VVRjTnV6ZkV6dFJqYUkrYUlBQ3BuRHh3WWUreVZQT041Clc0YUhQalRqSzdkNXJ6Y2FpY2gxdUhHNGZ4djhySDhUMzdmMWlEczBhUG1wb3JsRkZSdGNuN0VDZ1lFQXhwN00KajZoR2ZTY00ySXRzNFRucXFPUGJNVHdvTWhzYzR4WHo4N0JKWnIxRDVvNG4wSkpjSDVZTnhhVndXOW9abVV5dwpPS2I2cDJGUEU4Q0JJMFY3U0txVGxrRmZKUy9USC9EQmZraWw3OFlOeXpjakMzalQrbVVHQldDUXFFNmYyVXJQCk1RN1J3cjNFQ3pEYmRuUlR2Rmp5R1hHQ1VTeWsya3VmeHgraGxZTUNnWUFncXVyTHk5THEzODBqdjNRQWdGbzYKd1EvVStvN1FBUHo1S0NKUi84TkhvQ3dmRXdwb1JkbUhkR09nOTFZbGhJaE5tM1BoUFdGQjFpWTJmdHBmVmtrdgptbjE0eWQwMWVhdElSdFNMOG95ODRwN1dYb203WHZaNGN0TS9mZXBtN3BYVzFRb0Q5U0IrZGNuQ3ZCUlZhZzhSCmFlQVZwSkxvM3ArZE5CUnpxOWljZ1FLQmdRQ3VoNVBSR0ZqNFdId2RQRWJza212MUJHUHptNXptaXBTVHB4SzYKcThtVUVmTzhnR1hVRFFnT2FWaW91SHRHK3h0TGJldmJuRDdkSGREUzFuR2pnTWFZVCt0b09RRldOL1FaT1FHTgo2bUNGbFU5QnBxMlF3eGZpQ3l1RFJodFhDZC9Fbk12N203NE9sWm5UQzVlTk95THBlbThpbEcraXpNdi9WanlNClNPcy82UUtCZ0hMc1lsWGNqMnJvWWt4T0VMNW5sOEZ0V3h3NytzeWVDNW00ZDNIWnl1OEppR2pQTXNuZUhlbXYKWGJ4MG1Xam9XYmdKUXZSVE0rQWZnMi9SQy96b0JnNGNCcXdTa3pFbmtLTVNXa3FyS0JBWGE4cWEvNEpHaVNydgpzMHNITXhxd3Joakc0bGxCQ0cwcEFrNXpURnlBOENRT1NDS1M5OTlkSThDVmtQSUw5WktpCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: license-proxyserver/templates/licenses.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-license-proxyserver-licenses
  namespace: default
  labels:
    helm.sh/chart: license-proxyserver-v2024.9.13
    app.kubernetes.io/name: license-proxyserver
    app.kubernetes.io/instance: my-license-proxyserver
    app.kubernetes.io/version: "v0.0.15"
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
---
# Source: license-proxyserver/templates/cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-license-proxyserver
  labels:
    helm.sh/chart: license-proxyserver-v2024.9.13
    app.kubernetes.io/name: license-proxyserver
    app.kubernetes.io/instance: my-license-proxyserver
    app.kubernetes.io/version: "v0.0.15"
    app.kubernetes.io/managed-by: Helm
rules:
# Get cluster id
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs: ["get"]
# create/update license secret
- apiGroups:
  - ""
  resources:
  - secrets
  verbs: ["get", "list", "watch", "create", "update", "patch"]
# ocm cluster claim
- apiGroups:
  - cluster.open-cluster-management.io
  resources:
  - clusterclaims
  verbs: ["get", "list", "watch", "create", "update", "patch"]
---
# Source: license-proxyserver/templates/apiregistration.yaml
# to delegate authentication and authorization
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-license-proxyserver-apiserver-auth-delegator
  labels:
    helm.sh/chart: license-proxyserver-v2024.9.13
    app.kubernetes.io/name: license-proxyserver
    app.kubernetes.io/instance: my-license-proxyserver
    app.kubernetes.io/version: "v0.0.15"
    app.kubernetes.io/managed-by: Helm
roleRef:
  kind: ClusterRole
  apiGroup: rbac.authorization.k8s.io
  name: system:auth-delegator
subjects:
- kind: ServiceAccount
  name: my-license-proxyserver
  namespace: default
---
# Source: license-proxyserver/templates/cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-license-proxyserver
  labels:
    helm.sh/chart: license-proxyserver-v2024.9.13
    app.kubernetes.io/name: license-proxyserver
    app.kubernetes.io/instance: my-license-proxyserver
    app.kubernetes.io/version: "v0.0.15"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-license-proxyserver
subjects:
- kind: ServiceAccount
  name: my-license-proxyserver
  namespace: default
---
# Source: license-proxyserver/templates/apiregistration.yaml
# to read the config for terminating authentication
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: my-license-proxyserver-apiserver-extension-server-authentication-reader
  namespace: kube-system
  labels:
    helm.sh/chart: license-proxyserver-v2024.9.13
    app.kubernetes.io/name: license-proxyserver
    app.kubernetes.io/instance: my-license-proxyserver
    app.kubernetes.io/version: "v0.0.15"
    app.kubernetes.io/managed-by: Helm
roleRef:
  kind: Role
  apiGroup: rbac.authorization.k8s.io
  name: extension-apiserver-authentication-reader
subjects:
- kind: ServiceAccount
  name: my-license-proxyserver
  namespace: default
---
# Source: license-proxyserver/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-license-proxyserver
  namespace: default
  labels:
    helm.sh/chart: license-proxyserver-v2024.9.13
    app.kubernetes.io/name: license-proxyserver
    app.kubernetes.io/instance: my-license-proxyserver
    app.kubernetes.io/version: "v0.0.15"
    app.kubernetes.io/managed-by: Helm
spec:
  ports:
  # Port used to expose admission webhook apiserver
  - name: api
    port: 443
    targetPort: 8443
  - name: telemetry
    port: 8080
    targetPort: 8080
  selector:
    app.kubernetes.io/name: license-proxyserver
    app.kubernetes.io/instance: my-license-proxyserver
---
# Source: license-proxyserver/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-license-proxyserver
  namespace: default
  labels:
    helm.sh/chart: license-proxyserver-v2024.9.13
    app.kubernetes.io/name: license-proxyserver
    app.kubernetes.io/instance: my-license-proxyserver
    app.kubernetes.io/version: "v0.0.15"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: license-proxyserver
      app.kubernetes.io/instance: my-license-proxyserver
  template:
    metadata:
      labels:
        app.kubernetes.io/name: license-proxyserver
        app.kubernetes.io/instance: my-license-proxyserver
      annotations:
        checksum/licenses: 7bd806e0c3f03b4c962e427f18bf7ec21ce883eabe7316746df858a8de0c56f9
        checksum/token: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b
    spec:
      
      serviceAccountName: my-license-proxyserver
      containers:
      - name: server
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65534
          seccompProfile:
            type: RuntimeDefault
        image: ghcr.io/appscode/license-proxyserver:v0.0.15
        imagePullPolicy: IfNotPresent
        args:
        - run
        - --v=3
        - --secure-port=8443
        - --audit-log-path=-
        - --tls-cert-file=/var/serving-cert/tls.crt
        - --tls-private-key-file=/var/serving-cert/tls.key
        - --cache-dir=/tmp/licenses
        - --use-kubeapiserver-fqdn-for-aks=true
        - --license-dir=/var/run/secrets/appscode/license
        ports:
        - containerPort: 8443
        - containerPort: 8080
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        resources:
          {}
        volumeMounts:
        - mountPath: /tmp/licenses
          name: cache-dir
        - mountPath: /var/serving-cert
          name: serving-cert
        - mountPath: /var/run/secrets/appscode/license
          name: licenses
      volumes:
      - name: cache-dir
        emptyDir: {}
      - name: serving-cert
        secret:
          defaultMode: 420
          secretName: my-license-proxyserver-apiserver-cert
      - name: licenses
        secret:
          defaultMode: 420
          secretName: my-license-proxyserver-licenses
          optional: true
      securityContext:
        fsGroup: 65535
      nodeSelector:
        kubernetes.io/os: linux
---
# Source: license-proxyserver/templates/apiregistration.yaml
# register as aggregated apiserver
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  name: v1alpha1.proxyserver.licenses.appscode.com
  labels:
    helm.sh/chart: license-proxyserver-v2024.9.13
    app.kubernetes.io/name: license-proxyserver
    app.kubernetes.io/instance: my-license-proxyserver
    app.kubernetes.io/version: "v0.0.15"
    app.kubernetes.io/managed-by: Helm
spec:
  group: proxyserver.licenses.appscode.com
  version: v1alpha1
  service:
    namespace: default
    name: my-license-proxyserver
  caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lRS1JIa0JwSmYrTmwvQTMyN0I1RE5xekFOQmdrcWhraUc5dzBCQVFzRkFEQU4KTVFzd0NRWURWUVFERXdKallUQWVGdzB5TkRBNU1UWXhNREk0TVRaYUZ3MHpOREE1TVRReE1ESTRNVFphTUEweApDekFKQmdOVkJBTVRBbU5oTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUE5U1Q1ClBxVUZ4cEdvUEZtdUdOSmQyVlJKQ1U5aUVsOXN2ZmlSRks2OGViR1RZU2pGOGFHblROOVcxS0lENFJ3YzQ2QTkKeGhVdGMvTjV1bVhVOHZKWURvWk9GL0VOUHFtUjRIQ2JpeTJvY01wZjF0cklPUm5EYXIvcWIwN1FwcEpkS01lbwowRC8yVTM2VFF3ZzJlRGZCekRUUDZJbVE5NzdiTzhwWXg2a0lCb0YzcklRMk5HM0tZUkVuY1p6MTVHR0ROQWl4CklSOXdrU1Z0ejNQZ1RtNWhRSHJ4NjBLejdJSUtPQmdWS0FIVHN5MUxDb1dPUjRCYnNEblJXdythODdsZ2hCb3UKM2RPaEt1aG1kanZ4WHZ4L2NDYlkyc1l1R1hhbENhdllnT0dVaUNiV2VKWW5vSTgvL0tYN0lFSjZic2cxM21ybQpMSmlzMG1pK3ZqQWhPZ20zVXdJREFRQUJvMkV3WHpBT0JnTlZIUThCQWY4RUJBTUNBcVF3SFFZRFZSMGxCQll3CkZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUUKRkxTTk0rUTlqNG5VUEU4Qytmc2Zjd3Z4VkZjM01BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQ2taTFVPVVE4dAorNHVUeldCNGw4TWljbGZqcDlvd2l5djA1U3BEZzE1U1JzYVlMM2REV3FOckhSaEtzUmZGM3I4VkNXZDA0YWRxCmJBWE4yWDFLTStoNkpmckVXOUkxSUJETFhEWDk1bzJiL0FXZGhacm9LNllsUGxFZ3RmVFlNaDAxdmx4dktGMUsKcC90NktsTTNsbmczQmtSTVQwaG8vbG1hUnBWWWxCVExleitEOGFIaGxLK2FJV2RWTjhzMU5pd1p1RDdEUHNzQQpZdDJ1aGpNSHUybmhVMTcvN2NOd1VNMVFrQjd0NVFGVXJIeFBJSEhKMnhCbk0vL0lMVDRzYmVlTWJ3SDl4RWc3CnB1RVZFWG1ONjRYSE1JUVZVcUw4NFJweXhNbmczRE9OM3dadGRFSHMrM0tPZ0JGRTFjakJpU254V3VVSHMzYjQKZllPM0lkbG1OTnZzCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  groupPriorityMinimum: 10000
  versionPriority: 15
---
# Source: license-proxyserver/templates/servicemonitor.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: my-license-proxyserver
  namespace: default
  labels:
    app.kubernetes.io/name: license-proxyserver
    app.kubernetes.io/instance: my-license-proxyserver
spec:
  namespaceSelector:
    matchNames:
    - default
  selector:
    matchLabels:
      app.kubernetes.io/name: license-proxyserver
      app.kubernetes.io/instance: my-license-proxyserver
  endpoints:
  - port: api
    bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
    scheme: https
    interval: 10s
    relabelings:
      - action: labeldrop
        regex: (pod|service|endpoint|namespace)
    tlsConfig:
      ca:
        secret:
          name: my-license-proxyserver-apiserver-cert
          key: ca.crt
      serverName: "my-license-proxyserver.default.svc"
  - port: telemetry
    bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
    scheme: http
    interval: 10s
