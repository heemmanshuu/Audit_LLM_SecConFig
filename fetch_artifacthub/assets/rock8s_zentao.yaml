---
# Source: zentao/templates/secrets/mysql.yaml
apiVersion: v1
kind: Secret
metadata:
  name: mysql
  labels:
    app.kubernetes.io/name: zentao
    helm.sh/chart: zentao-0.0.1
    app.kubernetes.io/instance: my-zentao
    app.kubernetes.io/managed-by: Helm
stringData:
  MYSQL_DB: "zentao"
  MYSQL_PORT: "3306"
  MYSQL_USER: "root"
  MYSQL_HOST: ""
  MYSQL_PASSWORD: ""
---
# Source: zentao/templates/secrets/zentao.yaml
apiVersion: v1
kind: Secret
metadata:
  name: zentao
  labels:
    app.kubernetes.io/name: zentao
    helm.sh/chart: zentao-0.0.1
    app.kubernetes.io/instance: my-zentao
    app.kubernetes.io/managed-by: Helm
stringData:
  APP_DEFAULT_PORT: '80'
  APP_DOMAIN: zentao-discovery.default.svc.cluster.local
  # CI_PASSWORD: {\{ .Values.config.zentao.ci.password | quote }}
  # CI_PROTOCOL: {\{ .Values.config.zentao.ci.protocol | quote }}
  # CI_TYPE: {\{ .Values.config.zentao.ci.type | quote }}
  # CI_URL: {\{ .Values.config.zentao.ci.url | quote }}
  # CI_USERNAME: {\{ .Values.config.zentao.ci.username | quote }}
  DEBUG: "0"
  EASYSOFT_DEBUG: "false"
  # GIT_DOMAIN: {\{ .Values.config.zentao.git.domain | quote }}
  # GIT_INSTANCE_NAME: {\{ .Values.config.zentao.git.instanceName | quote }}
  # GIT_PASSWORD: {\{ .Values.config.zentao.git.password | quote }}
  # GIT_PROTOCOL: {\{ .Values.config.zentao.git.protocol | quote }}
  # GIT_TYPE: {\{ .Values.config.zentao.git.type | quote }}
  # GIT_USERNAME: {\{ .Values.config.zentao.git.username | quote }}
  IS_CONTAINER: "true"
  # LDAP_ENABLED: {\{ .Values.config.zentao.ldap.enabled | quote }}
  # LINK_CI: {\{ .Values.config.zentao.ci.link | quote }}
  # LINK_GIT: {\{ .Values.config.zentao.ci.link | quote }}
  PHP_MAX_EXECUTION_TIME: "120"
  PHP_MEMORY_LIMIT: "512M"
  PHP_POST_MAX_SIZE: "128M"
  PHP_UPLOAD_MAX_FILESIZE: "128M"
  PROTOCOL_TYPE: 'http'
  # SMTP_ENABLED: {\{ .Values.config.zentao.smtp.enabled | quote }}
  # SMTP_FROMNAME: {\{ .Values.config.zentao.smtp.fromName | quote }}
  # SMTP_HOST: {\{ .Values.config.zentao.smtp.host | quote }}
  # SMTP_PASS: {\{ .Values.config.zentao.smtp.password | quote }}
  # SMTP_PORT: {\{ .Values.config.zentao.smtp.port | quote }}
  # SMTP_USER: {\{ .Values.config.zentao.smtp.user | quote }}
---
# Source: zentao/templates/pvcs/zentao.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: zentao
  labels:
    app.kubernetes.io/name: zentao
    helm.sh/chart: zentao-0.0.1
    app.kubernetes.io/instance: my-zentao
    app.kubernetes.io/managed-by: Helm
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
# Source: zentao/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: zentao
  labels:
    app.kubernetes.io/name: zentao
    helm.sh/chart: zentao-0.0.1
    app.kubernetes.io/instance: my-zentao
    app.kubernetes.io/managed-by: Helm
rules:
  # TODO: narrow api groups
  - apiGroups:
      - '*'
    resources:
      - '*'
    verbs:
      - '*'
---
# Source: zentao/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: zentao
  labels:
    app.kubernetes.io/name: zentao
    helm.sh/chart: zentao-0.0.1
    app.kubernetes.io/instance: my-zentao
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: zentao
subjects:
  - kind: ServiceAccount
    name: default
    namespace: default
---
# Source: zentao/templates/services/zentao.yaml
apiVersion: v1
kind: Service
metadata:
  name: zentao
  labels:
    app.kubernetes.io/name: zentao
    helm.sh/chart: zentao-0.0.1
    app.kubernetes.io/instance: my-zentao
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 80
      targetPort: container
  selector:
    app.kubernetes.io/name: zentao
    app.kubernetes.io/instance: my-zentao
---
# Source: zentao/templates/deployments/zentao.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: zentao
  labels:
    app.kubernetes.io/name: zentao
    helm.sh/chart: zentao-0.0.1
    app.kubernetes.io/instance: my-zentao
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: zentao
      app.kubernetes.io/instance: my-zentao
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: zentao
        app.kubernetes.io/instance: my-zentao
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 89
              preference:
                matchExpressions:
                  - key: application/state
                    operator: In
                    values:
                      - stateless
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 90
              podAffinityTerm:
                topologyKey: kubernetes.io/hostname
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - zentao
                    - key: release
                      operator: In
                      values:
                        - my-zentao
      containers:
        - name: zentao
          image: easysoft/quickon-zentao:18.5
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              cpu: 200m
              memory: 256Mi
            limits:
              cpu: 500m
              memory: 512Mi
          ports:
            - name: container
              containerPort: 80
          volumeMounts:
            - name: data
              mountPath: /data/zentao
          envFrom:
            - secretRef:
                name: zentao
            - secretRef:
                name: mysql
          livenessProbe:
            tcpSocket:
              port: 80
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 6
            successThreshold: 1
          readinessProbe:
            tcpSocket:
              port: 80
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 6
            successThreshold: 1
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: zentao
