---
# Source: k8qu/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: k8qu-controller
  namespace: default
  labels:
    
    app: k8qu
---
# Source: k8qu/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: k8qu-controller-role
  namespace: default
  labels:
    
    app: k8qu
rules:
  - apiGroups:
      - "k8qu.io"
    resources:
      - "*"
    verbs:
      - "*"
---
# Source: k8qu/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: k8qu-controller-rolebinding
  namespace: default
  labels:
    
    app: k8qu
subjects:
  - kind: ServiceAccount
    name: k8qu-controller
    namespace: default
roleRef:
  kind: ClusterRole
  name: k8qu-controller-role
  apiGroup: rbac.authorization.k8s.io
---
# Source: k8qu/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: k8qu-controller
  namespace: default
  labels:
    
    app: k8qu
spec:
  replicas: 1
  selector:
    matchLabels:
      app: k8qu-controller
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: k8qu-controller
    spec:
      serviceAccountName: k8qu-controller
      containers:
        - image: "ghcr.io/gijsvandulmen/k8qu:1.4"
          imagePullPolicy: Always
          name: k8qu-controller
          env:
            - name: LOG_LEVEL
              value: "INFO"
          resources:
            limits:
              cpu: 500m
              memory: 300Mi
            requests:
              cpu: 100m
              memory: 50Mi
      terminationGracePeriodSeconds: 5
