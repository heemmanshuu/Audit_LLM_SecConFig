---
# Source: kuberay-apiserver/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/name: kuberay-apiserver
  name: kuberay-apiserver
---
# Source: kuberay-apiserver/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/name: kuberay-apiserver
  name: kuberay-apiserver
rules:
- apiGroups:
  - ray.io
  resources:
  - rayclusters
  - rayjobs
  - rayservices
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - list
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - get
  - list
---
# Source: kuberay-apiserver/templates/rolebinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  labels:
    helm.sh/chart: kuberay-apiserver-1.2.1
    app.kubernetes.io/name: kuberay-apiserver
    app.kubernetes.io/instance: my-kuberay-apiserver
    app.kubernetes.io/managed-by: Helm
  name: my-kuberay-apiserver
subjects:
- kind: ServiceAccount
  name: kuberay-apiserver
  namespace: default
roleRef:
  kind: ClusterRole
  name: kuberay-apiserver
  apiGroup: rbac.authorization.k8s.io
---
# Source: kuberay-apiserver/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: kuberay-apiserver-service
  annotations:
    prometheus.io/path: /metrics
    prometheus.io/scrape: "true"
    prometheus.io/port: "8888"
  labels:
    app.kubernetes.io/component: kuberay-apiserver
spec:
  type: NodePort
  selector:
    app.kubernetes.io/component: kuberay-apiserver
    app.kubernetes.io/name: my-kuberay-apiserver
  ports:
    - name: http
      port: 8888
      targetPort: 8988
        
      
      nodePort: 31888
      
    
    - name: rpc
      port: 8887
      targetPort: 8987
        
      
      nodePort: 31887
---
# Source: kuberay-apiserver/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kuberay-apiserver
  labels:
    helm.sh/chart: kuberay-apiserver-1.2.1
    app.kubernetes.io/name: kuberay-apiserver
    app.kubernetes.io/instance: my-kuberay-apiserver
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/component: kuberay-apiserver
      app.kubernetes.io/name: my-kuberay-apiserver
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/component: kuberay-apiserver
        app.kubernetes.io/name: my-kuberay-apiserver
    spec:
      serviceAccountName: kuberay-apiserver
      containers:
      - name: kuberay-apiserver-container
        image: "quay.io/kuberay/apiserver:v1.2.1"
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8888
          name: http
          protocol: TCP
        - containerPort: 8887
          name: grpc
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 300m
            memory: 300Mi
        livenessProbe:
          httpGet:
            path: /healthz
            port: http
        readinessProbe:
          httpGet:
            path: /healthz
            port: http
      - name: security-proxy-container
        image: "quay.io/kuberay/security-proxy:nightly"
        imagePullPolicy: IfNotPresent
        ports:
          - name: http
            containerPort: 8988
            protocol: TCP
          - name: grpc
            containerPort: 8987
            protocol: TCP
        env:
          - name: ENABLE_GRPC
            value: "true"
          - name: GRPC_LOCAL_PORT
            value: "8987"
          - name: HTTP_LOCAL_PORT
            value: "8988"
          - name: SECURITY_PREFIX
            value: "/"
          - name: SECURITY_TOKEN
            value: "12345"
          - name: "HTTP_REMOTE_PORT"
            value: "8888"
          - name: "GRPC_REMOTE_PORT"
            value: "8887"
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 300m
            memory: 300Mi
