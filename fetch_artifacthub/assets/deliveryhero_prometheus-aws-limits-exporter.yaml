---
# Source: prometheus-aws-limits-exporter/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-prometheus-aws-limits-exporter
  labels:
    helm.sh/chart: prometheus-aws-limits-exporter-0.2.1
    app.kubernetes.io/name: prometheus-aws-limits-exporter
    app.kubernetes.io/instance: my-prometheus-aws-limits-exporter
    app.kubernetes.io/version: "0.6.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: prometheus-aws-limits-exporter/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-prometheus-aws-limits-exporter
  labels:
    helm.sh/chart: prometheus-aws-limits-exporter-0.2.1
    app.kubernetes.io/name: prometheus-aws-limits-exporter
    app.kubernetes.io/instance: my-prometheus-aws-limits-exporter
    app.kubernetes.io/version: "0.6.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 8080
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: prometheus-aws-limits-exporter
    app.kubernetes.io/instance: my-prometheus-aws-limits-exporter
---
# Source: prometheus-aws-limits-exporter/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-prometheus-aws-limits-exporter
  labels:
    helm.sh/chart: prometheus-aws-limits-exporter-0.2.1
    app.kubernetes.io/name: prometheus-aws-limits-exporter
    app.kubernetes.io/instance: my-prometheus-aws-limits-exporter
    app.kubernetes.io/version: "0.6.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: prometheus-aws-limits-exporter
      app.kubernetes.io/instance: my-prometheus-aws-limits-exporter
  template:
    metadata:
      labels:
        app.kubernetes.io/name: prometheus-aws-limits-exporter
        app.kubernetes.io/instance: my-prometheus-aws-limits-exporter
    spec:
      serviceAccountName: my-prometheus-aws-limits-exporter
      securityContext:
        {}
      containers:
        - name: prometheus-aws-limits-exporter
          securityContext:
            {}
          image: "danielfm/aws-limits-exporter:0.6.0"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /-/healthy
              port: 8080
            timeoutSeconds: 60
          readinessProbe:
            httpGet:
              path: /-/healthy
              port: 8080
            timeoutSeconds: 10
          resources:
            {}
