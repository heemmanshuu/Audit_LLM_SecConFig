---
# Source: kubermatic-operator/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-kubermatic-operator
  labels:
    helm.sh/chart: kubermatic-operator-v2.24.5
    app.kubernetes.io/name: kubermatic-operator
    app.kubernetes.io/instance: my-kubermatic-operator
    app.kubernetes.io/version: "v2.24.5"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: operator
---
# Source: kubermatic-operator/templates/crds.tpl
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    app.kubernetes.io/version: v2.24.5
    controller-gen.kubebuilder.io/version: v0.13.0
    helm.sh/resource-policy: keep
    kubermatic.k8c.io/location: master,seed
  labels:
    app.kubernetes.io/component: operator
    app.kubernetes.io/instance: my-kubermatic-operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubermatic-operator
    app.kubernetes.io/version: v2.24.5
    helm.sh/chart: kubermatic-operator-v2.24.5
  name: applicationdefinitions.apps.kubermatic.k8c.io
spec:
  group: apps.kubermatic.k8c.io
  names:
    kind: ApplicationDefinition
    listKind: ApplicationDefinitionList
    plural: applicationdefinitions
    shortNames:
    - appdef
    singular: applicationdefinition
  scope: Cluster
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: ApplicationDefinition is the Schema for the applicationdefinitions
          API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ApplicationDefinitionSpec defines the desired state of ApplicationDefinition.
            properties:
              defaultDeployOptions:
                description: DefaultDeployOptions holds the settings specific to the
                  templating method used to deploy the application. These settings
                  can be overridden in applicationInstallation.
                properties:
                  helm:
                    description: HelmDeployOptions holds the deployment settings when
                      templating method is Helm.
                    properties:
                      atomic:
                        description: Atomic corresponds to the --atomic flag on Helm
                          cli. if set, the installation process deletes the installation
                          on failure; the upgrade process rolls back changes made
                          in case of failed upgrade.
                        type: boolean
                      enableDNS:
                        description: EnableDNS  corresponds to the --enable-dns flag
                          on Helm cli. enable DNS lookups when rendering templates.
                          if you enable this flag, you have to verify that helm template
                          function 'getHostByName' is not being used in a chart to
                          disclose any information you do not want to be passed to
                          DNS servers.(c.f. CVE-2023-25165)
                        type: boolean
                      timeout:
                        description: Timeout corresponds to the --timeout flag on
                          Helm cli. time to wait for any individual Kubernetes operation.
                        type: string
                      wait:
                        description: Wait corresponds to the --wait flag on Helm cli.
                          if set, will wait until all Pods, PVCs, Services, and minimum
                          number of Pods of a Deployment, StatefulSet, or ReplicaSet
                          are in a ready state before marking the release as successful.
                          It will wait for as long as timeout
                        type: boolean
                    type: object
                type: object
              defaultValues:
                description: DefaultValues describe overrides for manifest-rendering
                  in UI when creating an application.
                type: object
                x-kubernetes-preserve-unknown-fields: true
              description:
                description: Description of the application. what is its purpose
                type: string
              method:
                description: Method used to install the application
                enum:
                - helm
                type: string
              versions:
                description: Available version for this application
                items:
                  properties:
                    template:
                      description: Template defines how application is installed (source
                        provenance, Method...)
                      properties:
                        source:
                          description: Defined how the source of the application (e.g
                            Helm chart) is retrieved. Exactly one type of source must
                            be defined.
                          properties:
                            git:
                              description: Install application from a Git repository
                              properties:
                                credentials:
                                  description: Credentials are optional and holds
                                    the git credentials
                                  properties:
                                    method:
                                      description: Authentication method. Either password
                                        or token or ssh-key. if method is password
                                        then username and password must be defined.
                                        if method is token then token must be defined.
                                        if method is ssh-key then ssh-key must be
                                        defined.
                                      enum:
                                      - password
                                      - token
                                      - ssh-key
                                      type: string
                                    password:
                                      description: Password holds the ref and key
                                        in the secret for the Password credential.
                                        The Secret must exist in the namespace where
                                        KKP is installed (default is "kubermatic").
                                        The Secret must be annotated with `apps.kubermatic.k8c.io/secret-type:`
                                        set to helm or git
                                      properties:
                                        key:
                                          description: The key of the secret to select
                                            from.  Must be a valid secret key.
                                          type: string
                                        name:
                                          description: 'Name of the referent. More
                                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion,
                                            kind, uid?'
                                          type: string
                                        optional:
                                          description: Specify whether the Secret
                                            or its key must be defined
                                          type: boolean
                                      required:
                                      - key
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    sshKey:
                                      description: SSHKey holds the ref and key in
                                        the secret for the SshKey credential. The
                                        Secret must exist in the namespace where KKP
                                        is installed (default is "kubermatic"). The
                                        Secret must be annotated with `apps.kubermatic.k8c.io/secret-type:`
                                        set to helm or git
                                      properties:
                                        key:
                                          description: The key of the secret to select
                                            from.  Must be a valid secret key.
                                          type: string
                                        name:
                                          description: 'Name of the referent. More
                                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion,
                                            kind, uid?'
                                          type: string
                                        optional:
                                          description: Specify whether the Secret
                                            or its key must be defined
                                          type: boolean
                                      required:
                                      - key
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    token:
                                      description: Token holds the ref and key in
                                        the secret for the token credential. The Secret
                                        must exist in the namespace where KKP is installed
                                        (default is "kubermatic"). The Secret must
                                        be annotated with `apps.kubermatic.k8c.io/secret-type:`
                                        set to helm or git
                                      properties:
                                        key:
                                          description: The key of the secret to select
                                            from.  Must be a valid secret key.
                                          type: string
                                        name:
                                          description: 'Name of the referent. More
                                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion,
                                            kind, uid?'
                                          type: string
                                        optional:
                                          description: Specify whether the Secret
                                            or its key must be defined
                                          type: boolean
                                      required:
                                      - key
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    username:
                                      description: Username holds the ref and key
                                        in the secret for the username credential.
                                        The Secret must exist in the namespace where
                                        KKP is installed (default is "kubermatic").
                                        The Secret must be annotated with `apps.kubermatic.k8c.io/secret-type:`
                                        set to helm or git
                                      properties:
                                        key:
                                          description: The key of the secret to select
                                            from.  Must be a valid secret key.
                                          type: string
                                        name:
                                          description: 'Name of the referent. More
                                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion,
                                            kind, uid?'
                                          type: string
                                        optional:
                                          description: Specify whether the Secret
                                            or its key must be defined
                                          type: boolean
                                      required:
                                      - key
                                      type: object
                                      x-kubernetes-map-type: atomic
                                  required:
                                  - method
                                  type: object
                                path:
                                  description: Path of the "source" in the repository.
                                    default is repository root
                                  type: string
                                ref:
                                  description: Git reference to checkout. For large
                                    repositories, we recommend to either use Tag,
                                    Branch or Branch+Commit. This allows a shallow
                                    clone, which dramatically speeds up performance
                                  properties:
                                    branch:
                                      description: Branch to checkout. Only the last
                                        commit of the branch will be checkout in order
                                        to reduce the amount of data to download.
                                      type: string
                                    commit:
                                      description: "Commit SHA in a Branch to checkout.
                                        \n It must be used in conjunction with branch
                                        field."
                                      pattern: ^[a-f0-9]{40}$
                                      type: string
                                    tag:
                                      description: Tag to check out. It can not be
                                        used in conjunction with commit or branch.
                                      type: string
                                  type: object
                                remote:
                                  description: URL to the repository. Can be HTTP(s)
                                    (e.g. https://example.com/myrepo) or SSH (e.g.
                                    git://example.com[:port]/path/to/repo.git/)
                                  minLength: 1
                                  type: string
                              required:
                              - ref
                              - remote
                              type: object
                            helm:
                              description: Install Application from a Helm repository
                              properties:
                                chartName:
                                  description: Name of the Chart.
                                  minLength: 1
                                  type: string
                                chartVersion:
                                  description: Version of the Chart.
                                  minLength: 1
                                  type: string
                                credentials:
                                  description: Credentials are optional and hold the
                                    ref to the secret with helm credentials. Either
                                    username / Password or registryConfigFile can
                                    be defined.
                                  properties:
                                    password:
                                      description: Password holds the ref and key
                                        in the secret for the Password credential.
                                        The Secret must exist in the namespace where
                                        KKP is installed (default is "kubermatic").
                                        The Secret must be annotated with `apps.kubermatic.k8c.io/secret-type:`
                                        set to helm or git
                                      properties:
                                        key:
                                          description: The key of the secret to select
                                            from.  Must be a valid secret key.
                                          type: string
                                        name:
                                          description: 'Name of the referent. More
                                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion,
                                            kind, uid?'
                                          type: string
                                        optional:
                                          description: Specify whether the Secret
                                            or its key must be defined
                                          type: boolean
                                      required:
                                      - key
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    registryConfigFile:
                                      description: RegistryConfigFile holds the ref
                                        and key in the secret for the registry credential
                                        file. The value is dockercfg file that follows
                                        the same format rules as ~/.docker/config.json
                                        The The Secret must exist in the namespace
                                        where KKP is installed (default is "kubermatic").
                                        The Secret must be annotated with `apps.kubermatic.k8c.io/secret-type:`
                                        set to helm or git
                                      properties:
                                        key:
                                          description: The key of the secret to select
                                            from.  Must be a valid secret key.
                                          type: string
                                        name:
                                          description: 'Name of the referent. More
                                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion,
                                            kind, uid?'
                                          type: string
                                        optional:
                                          description: Specify whether the Secret
                                            or its key must be defined
                                          type: boolean
                                      required:
                                      - key
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    username:
                                      description: Username holds the ref and key
                                        in the secret for the username credential.
                                        The Secret must exist in the namespace where
                                        KKP is installed (default is "kubermatic").
                                        The Secret must be annotated with `apps.kubermatic.k8c.io/secret-type:`
                                        set to helm or git
                                      properties:
                                        key:
                                          description: The key of the secret to select
                                            from.  Must be a valid secret key.
                                          type: string
                                        name:
                                          description: 'Name of the referent. More
                                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion,
                                            kind, uid?'
                                          type: string
                                        optional:
                                          description: Specify whether the Secret
                                            or its key must be defined
                                          type: boolean
                                      required:
                                      - key
                                      type: object
                                      x-kubernetes-map-type: atomic
                                  type: object
                                url:
                                  description: URl of the helm repository. It can
                                    be an HTTP(s) repository (e.g. https://localhost/myrepo)
                                    or on OCI repository (e.g. oci://localhost:5000/myrepo).
                                  pattern: ^(http|https|oci)://.+
                                  type: string
                              required:
                              - chartName
                              - chartVersion
                              - url
                              type: object
                          type: object
                        templateCredentials:
                          description: DependencyCredentials holds the credentials
                            that may be needed for templating the application.
                          properties:
                            helmCredentials:
                              description: HelmCredentials holds the ref to the secret
                                with helm credentials needed to build helm dependencies.
                                It is not required when using helm as a source, as
                                dependencies are already prepackaged in this case.
                                It's either username / password or a registryConfigFile
                                can be defined.
                              properties:
                                password:
                                  description: Password holds the ref and key in the
                                    secret for the Password credential. The Secret
                                    must exist in the namespace where KKP is installed
                                    (default is "kubermatic"). The Secret must be
                                    annotated with `apps.kubermatic.k8c.io/secret-type:`
                                    set to helm or git
                                  properties:
                                    key:
                                      description: The key of the secret to select
                                        from.  Must be a valid secret key.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the Secret or its
                                        key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                                  x-kubernetes-map-type: atomic
                                registryConfigFile:
                                  description: RegistryConfigFile holds the ref and
                                    key in the secret for the registry credential
                                    file. The value is dockercfg file that follows
                                    the same format rules as ~/.docker/config.json
                                    The The Secret must exist in the namespace where
                                    KKP is installed (default is "kubermatic"). The
                                    Secret must be annotated with `apps.kubermatic.k8c.io/secret-type:`
                                    set to helm or git
                                  properties:
                                    key:
                                      description: The key of the secret to select
                                        from.  Must be a valid secret key.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the Secret or its
                                        key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                                  x-kubernetes-map-type: atomic
                                username:
                                  description: Username holds the ref and key in the
                                    secret for the username credential. The Secret
                                    must exist in the namespace where KKP is installed
                                    (default is "kubermatic"). The Secret must be
                                    annotated with `apps.kubermatic.k8c.io/secret-type:`
                                    set to helm or git
                                  properties:
                                    key:
                                      description: The key of the secret to select
                                        from.  Must be a valid secret key.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the Secret or its
                                        key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                                  x-kubernetes-map-type: atomic
                              type: object
                          type: object
                      required:
                      - source
                      type: object
                    version:
                      description: Version of the application (e.g. v1.2.3)
                      pattern: v?([0-9]+)(\.[0-9]+)?(\.[0-9]+)?(-([0-9A-Za-z\-]+(\.[0-9A-Za-z\-]+)*))?(\+([0-9A-Za-z\-]+(\.[0-9A-Za-z\-]+)*))?
                      type: string
                  required:
                  - template
                  - version
                  type: object
                type: array
            required:
            - description
            - method
            - versions
            type: object
        type: object
    served: true
    storage: true
---
# Source: kubermatic-operator/templates/crds.tpl
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    app.kubernetes.io/version: v2.24.5
    controller-gen.kubebuilder.io/version: v0.13.0
    helm.sh/resource-policy: keep
    kubermatic.k8c.io/location: usercluster
  labels:
    app.kubernetes.io/component: operator
    app.kubernetes.io/instance: my-kubermatic-operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubermatic-operator
    app.kubernetes.io/version: v2.24.5
    helm.sh/chart: kubermatic-operator-v2.24.5
  name: applicationinstallations.apps.kubermatic.k8c.io
spec:
  group: apps.kubermatic.k8c.io
  names:
    kind: ApplicationInstallation
    listKind: ApplicationInstallationList
    plural: applicationinstallations
    shortNames:
    - appinstall
    singular: applicationinstallation
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: ApplicationInstallation describes a single installation of an
          Application.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              applicationRef:
                description: ApplicationRef is a reference to identify which Application
                  should be deployed
                properties:
                  name:
                    description: Name of the Application. Should be a valid lowercase
                      RFC1123 domain name
                    maxLength: 63
                    pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                    type: string
                  version:
                    description: Version of the Application. Must be a valid SemVer
                      version
                    pattern: v?([0-9]+)(\.[0-9]+)?(\.[0-9]+)?(-([0-9A-Za-z\-]+(\.[0-9A-Za-z\-]+)*))?(\+([0-9A-Za-z\-]+(\.[0-9A-Za-z\-]+)*))?
                    type: string
                required:
                - name
                - version
                type: object
              deployOptions:
                description: DeployOptions holds the settings specific to the templating
                  method used to deploy the application.
                properties:
                  helm:
                    description: HelmDeployOptions holds the deployment settings when
                      templating method is Helm.
                    properties:
                      atomic:
                        description: Atomic corresponds to the --atomic flag on Helm
                          cli. if set, the installation process deletes the installation
                          on failure; the upgrade process rolls back changes made
                          in case of failed upgrade.
                        type: boolean
                      enableDNS:
                        description: EnableDNS  corresponds to the --enable-dns flag
                          on Helm cli. enable DNS lookups when rendering templates.
                          if you enable this flag, you have to verify that helm template
                          function 'getHostByName' is not being used in a chart to
                          disclose any information you do not want to be passed to
                          DNS servers.(c.f. CVE-2023-25165)
                        type: boolean
                      timeout:
                        description: Timeout corresponds to the --timeout flag on
                          Helm cli. time to wait for any individual Kubernetes operation.
                        type: string
                      wait:
                        description: Wait corresponds to the --wait flag on Helm cli.
                          if set, will wait until all Pods, PVCs, Services, and minimum
                          number of Pods of a Deployment, StatefulSet, or ReplicaSet
                          are in a ready state before marking the release as successful.
                          It will wait for as long as timeout
                        type: boolean
                    type: object
                type: object
              namespace:
                description: Namespace describe the desired state of the namespace
                  where application will be created.
                properties:
                  annotations:
                    additionalProperties:
                      type: string
                    description: 'Annotations of the namespace More info: http://kubernetes.io/docs/user-guide/annotations'
                    type: object
                  create:
                    default: true
                    description: Create defines whether the namespace should be created
                      if it does not exist. Defaults to true
                    type: boolean
                  labels:
                    additionalProperties:
                      type: string
                    description: 'Labels of the namespace More info: http://kubernetes.io/docs/user-guide/labels'
                    type: object
                  name:
                    description: Name is the namespace to deploy the Application into.
                      Should be a valid lowercase RFC1123 domain name
                    maxLength: 63
                    pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                    type: string
                required:
                - create
                - name
                type: object
              reconciliationInterval:
                description: "ReconciliationInterval is the interval at which to force
                  the reconciliation of the application. By default, Applications
                  are only reconciled on changes on spec, annotations, or the parent
                  application definition. Meaning that if the user manually deletes
                  the workload deployed by the application, nothing will happen until
                  the application CR change. \n Setting a value greater than zero
                  force reconciliation even if no changes occurred on application
                  CR. Setting a value equal to 0 disables the force reconciliation
                  of the application (default behavior). Setting this too low can
                  cause a heavy load and may disrupt your application workload depending
                  on the template method."
                type: string
              values:
                description: Values describe overrides for manifest-rendering. It's
                  a free yaml field.
                type: object
                x-kubernetes-preserve-unknown-fields: true
            required:
            - applicationRef
            - namespace
            type: object
          status:
            description: ApplicationInstallationStatus denotes status information
              about an ApplicationInstallation.
            properties:
              applicationVersion:
                description: ApplicationVersion contains information installing /
                  removing application
                properties:
                  template:
                    description: Template defines how application is installed (source
                      provenance, Method...)
                    properties:
                      source:
                        description: Defined how the source of the application (e.g
                          Helm chart) is retrieved. Exactly one type of source must
                          be defined.
                        properties:
                          git:
                            description: Install application from a Git repository
                            properties:
                              credentials:
                                description: Credentials are optional and holds the
                                  git credentials
                                properties:
                                  method:
                                    description: Authentication method. Either password
                                      or token or ssh-key. if method is password then
                                      username and password must be defined. if method
                                      is token then token must be defined. if method
                                      is ssh-key then ssh-key must be defined.
                                    enum:
                                    - password
                                    - token
                                    - ssh-key
                                    type: string
                                  password:
                                    description: Password holds the ref and key in
                                      the secret for the Password credential. The
                                      Secret must exist in the namespace where KKP
                                      is installed (default is "kubermatic"). The
                                      Secret must be annotated with `apps.kubermatic.k8c.io/secret-type:`
                                      set to helm or git
                                    properties:
                                      key:
                                        description: The key of the secret to select
                                          from.  Must be a valid secret key.
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Add other useful fields. apiVersion,
                                          kind, uid?'
                                        type: string
                                      optional:
                                        description: Specify whether the Secret or
                                          its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  sshKey:
                                    description: SSHKey holds the ref and key in the
                                      secret for the SshKey credential. The Secret
                                      must exist in the namespace where KKP is installed
                                      (default is "kubermatic"). The Secret must be
                                      annotated with `apps.kubermatic.k8c.io/secret-type:`
                                      set to helm or git
                                    properties:
                                      key:
                                        description: The key of the secret to select
                                          from.  Must be a valid secret key.
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Add other useful fields. apiVersion,
                                          kind, uid?'
                                        type: string
                                      optional:
                                        description: Specify whether the Secret or
                                          its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  token:
                                    description: Token holds the ref and key in the
                                      secret for the token credential. The Secret
                                      must exist in the namespace where KKP is installed
                                      (default is "kubermatic"). The Secret must be
                                      annotated with `apps.kubermatic.k8c.io/secret-type:`
                                      set to helm or git
                                    properties:
                                      key:
                                        description: The key of the secret to select
                                          from.  Must be a valid secret key.
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Add other useful fields. apiVersion,
                                          kind, uid?'
                                        type: string
                                      optional:
                                        description: Specify whether the Secret or
                                          its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  username:
                                    description: Username holds the ref and key in
                                      the secret for the username credential. The
                                      Secret must exist in the namespace where KKP
                                      is installed (default is "kubermatic"). The
                                      Secret must be annotated with `apps.kubermatic.k8c.io/secret-type:`
                                      set to helm or git
                                    properties:
                                      key:
                                        description: The key of the secret to select
                                          from.  Must be a valid secret key.
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Add other useful fields. apiVersion,
                                          kind, uid?'
                                        type: string
                                      optional:
                                        description: Specify whether the Secret or
                                          its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                    x-kubernetes-map-type: atomic
                                required:
                                - method
                                type: object
                              path:
                                description: Path of the "source" in the repository.
                                  default is repository root
                                type: string
                              ref:
                                description: Git reference to checkout. For large
                                  repositories, we recommend to either use Tag, Branch
                                  or Branch+Commit. This allows a shallow clone, which
                                  dramatically speeds up performance
                                properties:
                                  branch:
                                    description: Branch to checkout. Only the last
                                      commit of the branch will be checkout in order
                                      to reduce the amount of data to download.
                                    type: string
                                  commit:
                                    description: "Commit SHA in a Branch to checkout.
                                      \n It must be used in conjunction with branch
                                      field."
                                    pattern: ^[a-f0-9]{40}$
                                    type: string
                                  tag:
                                    description: Tag to check out. It can not be used
                                      in conjunction with commit or branch.
                                    type: string
                                type: object
                              remote:
                                description: URL to the repository. Can be HTTP(s)
                                  (e.g. https://example.com/myrepo) or SSH (e.g. git://example.com[:port]/path/to/repo.git/)
                                minLength: 1
                                type: string
                            required:
                            - ref
                            - remote
                            type: object
                          helm:
                            description: Install Application from a Helm repository
                            properties:
                              chartName:
                                description: Name of the Chart.
                                minLength: 1
                                type: string
                              chartVersion:
                                description: Version of the Chart.
                                minLength: 1
                                type: string
                              credentials:
                                description: Credentials are optional and hold the
                                  ref to the secret with helm credentials. Either
                                  username / Password or registryConfigFile can be
                                  defined.
                                properties:
                                  password:
                                    description: Password holds the ref and key in
                                      the secret for the Password credential. The
                                      Secret must exist in the namespace where KKP
                                      is installed (default is "kubermatic"). The
                                      Secret must be annotated with `apps.kubermatic.k8c.io/secret-type:`
                                      set to helm or git
                                    properties:
                                      key:
                                        description: The key of the secret to select
                                          from.  Must be a valid secret key.
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Add other useful fields. apiVersion,
                                          kind, uid?'
                                        type: string
                                      optional:
                                        description: Specify whether the Secret or
                                          its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  registryConfigFile:
                                    description: RegistryConfigFile holds the ref
                                      and key in the secret for the registry credential
                                      file. The value is dockercfg file that follows
                                      the same format rules as ~/.docker/config.json
                                      The The Secret must exist in the namespace where
                                      KKP is installed (default is "kubermatic").
                                      The Secret must be annotated with `apps.kubermatic.k8c.io/secret-type:`
                                      set to helm or git
                                    properties:
                                      key:
                                        description: The key of the secret to select
                                          from.  Must be a valid secret key.
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Add other useful fields. apiVersion,
                                          kind, uid?'
                                        type: string
                                      optional:
                                        description: Specify whether the Secret or
                                          its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  username:
                                    description: Username holds the ref and key in
                                      the secret for the username credential. The
                                      Secret must exist in the namespace where KKP
                                      is installed (default is "kubermatic"). The
                                      Secret must be annotated with `apps.kubermatic.k8c.io/secret-type:`
                                      set to helm or git
                                    properties:
                                      key:
                                        description: The key of the secret to select
                                          from.  Must be a valid secret key.
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Add other useful fields. apiVersion,
                                          kind, uid?'
                                        type: string
                                      optional:
                                        description: Specify whether the Secret or
                                          its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                    x-kubernetes-map-type: atomic
                                type: object
                              url:
                                description: URl of the helm repository. It can be
                                  an HTTP(s) repository (e.g. https://localhost/myrepo)
                                  or on OCI repository (e.g. oci://localhost:5000/myrepo).
                                pattern: ^(http|https|oci)://.+
                                type: string
                            required:
                            - chartName
                            - chartVersion
                            - url
                            type: object
                        type: object
                      templateCredentials:
                        description: DependencyCredentials holds the credentials that
                          may be needed for templating the application.
                        properties:
                          helmCredentials:
                            description: HelmCredentials holds the ref to the secret
                              with helm credentials needed to build helm dependencies.
                              It is not required when using helm as a source, as dependencies
                              are already prepackaged in this case. It's either username
                              / password or a registryConfigFile can be defined.
                            properties:
                              password:
                                description: Password holds the ref and key in the
                                  secret for the Password credential. The Secret must
                                  exist in the namespace where KKP is installed (default
                                  is "kubermatic"). The Secret must be annotated with
                                  `apps.kubermatic.k8c.io/secret-type:` set to helm
                                  or git
                                properties:
                                  key:
                                    description: The key of the secret to select from.  Must
                                      be a valid secret key.
                                    type: string
                                  name:
                                    description: 'Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion, kind,
                                      uid?'
                                    type: string
                                  optional:
                                    description: Specify whether the Secret or its
                                      key must be defined
                                    type: boolean
                                required:
                                - key
                                type: object
                                x-kubernetes-map-type: atomic
                              registryConfigFile:
                                description: RegistryConfigFile holds the ref and
                                  key in the secret for the registry credential file.
                                  The value is dockercfg file that follows the same
                                  format rules as ~/.docker/config.json The The Secret
                                  must exist in the namespace where KKP is installed
                                  (default is "kubermatic"). The Secret must be annotated
                                  with `apps.kubermatic.k8c.io/secret-type:` set to
                                  helm or git
                                properties:
                                  key:
                                    description: The key of the secret to select from.  Must
                                      be a valid secret key.
                                    type: string
                                  name:
                                    description: 'Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion, kind,
                                      uid?'
                                    type: string
                                  optional:
                                    description: Specify whether the Secret or its
                                      key must be defined
                                    type: boolean
                                required:
                                - key
                                type: object
                                x-kubernetes-map-type: atomic
                              username:
                                description: Username holds the ref and key in the
                                  secret for the username credential. The Secret must
                                  exist in the namespace where KKP is installed (default
                                  is "kubermatic"). The Secret must be annotated with
                                  `apps.kubermatic.k8c.io/secret-type:` set to helm
                                  or git
                                properties:
                                  key:
                                    description: The key of the secret to select from.  Must
                                      be a valid secret key.
                                    type: string
                                  name:
                                    description: 'Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion, kind,
                                      uid?'
                                    type: string
                                  optional:
                                    description: Specify whether the Secret or its
                                      key must be defined
                                    type: boolean
                                required:
                                - key
                                type: object
                                x-kubernetes-map-type: atomic
                            type: object
                        type: object
                    required:
                    - source
                    type: object
                  version:
                    description: Version of the application (e.g. v1.2.3)
                    pattern: v?([0-9]+)(\.[0-9]+)?(\.[0-9]+)?(-([0-9A-Za-z\-]+(\.[0-9A-Za-z\-]+)*))?(\+([0-9A-Za-z\-]+(\.[0-9A-Za-z\-]+)*))?
                    type: string
                required:
                - template
                - version
                type: object
              conditions:
                additionalProperties:
                  properties:
                    lastHeartbeatTime:
                      description: Last time we got an update on a given condition.
                      format: date-time
                      type: string
                    lastTransitionTime:
                      description: Last time the condition transit from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: Human readable message indicating details about
                        last transition.
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: (brief) reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                  required:
                  - status
                  type: object
                description: Conditions contains conditions an installation is in,
                  its primary use case is status signaling between controllers or
                  between controllers and the API
                type: object
              failures:
                description: Failures counts the number of failed installation or
                  updagrade. it is reset on successful reconciliation.
                type: integer
              helmRelease:
                description: HelmRelease holds the information about the helm release
                  installed by this application. This field is only filled if template
                  method is 'helm'.
                properties:
                  info:
                    description: Info provides information about a release.
                    properties:
                      deleted:
                        description: Deleted tracks when this object was deleted.
                        format: date-time
                        type: string
                      description:
                        description: Description is human-friendly "log entry" about
                          this release.
                        type: string
                      firstDeployed:
                        description: FirstDeployed is when the release was first deployed.
                        format: date-time
                        type: string
                      lastDeployed:
                        description: LastDeployed is when the release was last deployed.
                        format: date-time
                        type: string
                      notes:
                        description: Notes is  the rendered templates/NOTES.txt if
                          available.
                        type: string
                      status:
                        description: Status is the current state of the release.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the release.
                    type: string
                  version:
                    description: Version is an int which represents the revision of
                      the release.
                    type: integer
                type: object
              method:
                description: Method used to install the application
                enum:
                - helm
                type: string
            required:
            - method
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: kubermatic-operator/templates/crds.tpl
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    app.kubernetes.io/version: v2.24.5
    controller-gen.kubebuilder.io/version: v0.13.0
    helm.sh/resource-policy: keep
    kubermatic.k8c.io/location: master
  labels:
    app.kubernetes.io/component: operator
    app.kubernetes.io/instance: my-kubermatic-operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubermatic-operator
    app.kubernetes.io/version: v2.24.5
    helm.sh/chart: kubermatic-operator-v2.24.5
  name: addonconfigs.kubermatic.k8c.io
spec:
  group: kubermatic.k8c.io
  names:
    kind: AddonConfig
    listKind: AddonConfigList
    plural: addonconfigs
    singular: addonconfig
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1
    schema:
      openAPIV3Schema:
        description: AddonConfig specifies addon configuration. Addons can be installed
          without a matching AddonConfig, but they will be missing a logo, description
          and the potentially necessary form fields in the KKP dashboard to make the
          addon comfortable to use.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Spec describes the configuration of an addon.
            properties:
              description:
                description: Description of the configured addon, it will be displayed
                  in the addon overview in the UI
                type: string
              formSpec:
                description: Controls that can be set for configured addon
                items:
                  description: AddonFormControl specifies addon form control.
                  properties:
                    displayName:
                      description: DisplayName is visible in the UI
                      type: string
                    helpText:
                      description: HelpText is visible in the UI next to the control
                      type: string
                    internalName:
                      description: InternalName is used internally to save in the
                        addon object
                      type: string
                    required:
                      description: Required indicates if the control has to be set
                      type: boolean
                    type:
                      description: Type of displayed control
                      type: string
                  type: object
                type: array
              logo:
                description: Logo of the configured addon, encoded in base64
                type: string
              logoFormat:
                description: LogoFormat contains logo format of the configured addon,
                  i.e. svg+xml
                type: string
              shortDescription:
                description: ShortDescription of the configured addon that contains
                  more detailed information about the addon, it will be displayed
                  in the addon details view in the UI
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources: {}
---
# Source: kubermatic-operator/templates/crds.tpl
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    app.kubernetes.io/version: v2.24.5
    controller-gen.kubebuilder.io/version: v0.13.0
    helm.sh/resource-policy: keep
    kubermatic.k8c.io/location: master,seed
  labels:
    app.kubernetes.io/component: operator
    app.kubernetes.io/instance: my-kubermatic-operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubermatic-operator
    app.kubernetes.io/version: v2.24.5
    helm.sh/chart: kubermatic-operator-v2.24.5
  name: addons.kubermatic.k8c.io
spec:
  group: kubermatic.k8c.io
  names:
    kind: Addon
    listKind: AddonList
    plural: addons
    singular: addon
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1
    schema:
      openAPIV3Schema:
        description: Addon specifies a cluster addon. Addons can be installed into
          user clusters to provide additional manifests for CNIs, CSIs or other applications,
          which makes addons a necessary component to create functioning user clusters.
          Addon objects must be created inside cluster namespaces.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Spec describes the desired addon state.
            properties:
              cluster:
                description: Cluster is the reference to the cluster the addon should
                  be installed in
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: 'If referring to a piece of an object instead of
                      an entire object, this string should contain a valid JSON/Go
                      field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within
                      a pod, this would take on a value like: "spec.containers{name}"
                      (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]"
                      (container with index 2 in this pod). This syntax is chosen
                      only to have some well-defined way of referencing a part of
                      an object. TODO: this design is not final and this field is
                      subject to change in the future.'
                    type: string
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                  resourceVersion:
                    description: 'Specific resourceVersion to which this reference
                      is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              isDefault:
                description: IsDefault indicates whether the addon is installed because
                  it was configured in the default addon section in the KubermaticConfiguration.
                  User-installed addons must not set this field to true, as extra
                  default Addon objects (that are not in the KubermaticConfiguration)
                  will be garbage-collected.
                type: boolean
              name:
                description: Name defines the name of the addon to install
                type: string
              requiredResourceTypes:
                description: RequiredResourceTypes allows to indicate that this addon
                  needs some resource type before it can be installed. This can be
                  used to indicate that a specific CRD and/or extension apiserver
                  must be installed before this addon can be installed. The addon
                  will not be installed until that resource is served.
                items:
                  description: GroupVersionKind unambiguously identifies a kind. It
                    doesn't anonymously include GroupVersion to avoid automatic coercion.
                    It doesn't use a GroupVersion to avoid custom marshalling.
                  properties:
                    group:
                      type: string
                    kind:
                      type: string
                    version:
                      type: string
                  type: object
                type: array
              variables:
                description: Variables is free form data to use for parsing the manifest
                  templates
                type: object
                x-kubernetes-preserve-unknown-fields: true
            required:
            - cluster
            - name
            type: object
          status:
            description: Status contains information about the reconciliation status.
            properties:
              conditions:
                additionalProperties:
                  properties:
                    lastHeartbeatTime:
                      description: Last time we got an update on a given condition.
                      format: date-time
                      type: string
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                  required:
                  - lastHeartbeatTime
                  - status
                  type: object
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: kubermatic-operator/templates/crds.tpl
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    app.kubernetes.io/version: v2.24.5
    controller-gen.kubebuilder.io/version: v0.13.0
    helm.sh/resource-policy: keep
    kubermatic.k8c.io/location: master
  labels:
    app.kubernetes.io/component: operator
    app.kubernetes.io/instance: my-kubermatic-operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubermatic-operator
    app.kubernetes.io/version: v2.24.5
    helm.sh/chart: kubermatic-operator-v2.24.5
  name: admissionplugins.kubermatic.k8c.io
spec:
  group: kubermatic.k8c.io
  names:
    kind: AdmissionPlugin
    listKind: AdmissionPluginList
    plural: admissionplugins
    singular: admissionplugin
  scope: Cluster
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: AdmissionPlugin is the type representing a AdmissionPlugin.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Spec describes an admission plugin name and in which k8s
              version it is supported.
            properties:
              fromVersion:
                description: FromVersion flag can be empty. It means the plugin fit
                  to all k8s versions
                type: string
              pluginName:
                type: string
            required:
            - pluginName
            type: object
        type: object
    served: true
    storage: true
---
# Source: kubermatic-operator/templates/crds.tpl
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    app.kubernetes.io/version: v2.24.5
    controller-gen.kubebuilder.io/version: v0.13.0
    helm.sh/resource-policy: keep
    kubermatic.k8c.io/location: master,seed
  labels:
    app.kubernetes.io/component: operator
    app.kubernetes.io/instance: my-kubermatic-operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubermatic-operator
    app.kubernetes.io/version: v2.24.5
    helm.sh/chart: kubermatic-operator-v2.24.5
  name: alertmanagers.kubermatic.k8c.io
spec:
  group: kubermatic.k8c.io
  names:
    kind: Alertmanager
    listKind: AlertmanagerList
    plural: alertmanagers
    singular: alertmanager
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Spec describes the configuration of the Alertmanager.
            properties:
              configSecret:
                description: ConfigSecret refers to the Secret in the same namespace
                  as the Alertmanager object, which contains configuration for this
                  Alertmanager.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
                x-kubernetes-map-type: atomic
            required:
            - configSecret
            type: object
          status:
            description: Status stores status information about the Alertmanager.
            properties:
              configStatus:
                description: ConfigStatus stores status information about the AlertManager
                  configuration.
                properties:
                  errorMessage:
                    description: ErrorMessage contains a default error message in
                      case the configuration could not be applied. Will be reset if
                      the error was resolved and condition becomes True
                    type: string
                  lastUpdated:
                    description: LastUpdated stores the last successful time when
                      the configuration was successfully applied
                    format: date-time
                    type: string
                  status:
                    description: Status of whether the configuration was applied,
                      one of True, False
                    type: string
                required:
                - status
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: kubermatic-operator/templates/crds.tpl
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    app.kubernetes.io/version: v2.24.5
    controller-gen.kubebuilder.io/version: v0.13.0
    helm.sh/resource-policy: keep
    kubermatic.k8c.io/location: master
  labels:
    app.kubernetes.io/component: operator
    app.kubernetes.io/instance: my-kubermatic-operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubermatic-operator
    app.kubernetes.io/version: v2.24.5
    helm.sh/chart: kubermatic-operator-v2.24.5
  name: allowedregistries.kubermatic.k8c.io
spec:
  group: kubermatic.k8c.io
  names:
    kind: AllowedRegistry
    listKind: AllowedRegistryList
    plural: allowedregistries
    singular: allowedregistry
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - description: RegistryPrefix contains the prefix of the registry which will be
        allowed. User clusters will be able to deploy only images which are prefixed
        with one of the allowed image registry prefixes.
      jsonPath: .spec.registryPrefix
      name: RegistryPrefix
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1
    schema:
      openAPIV3Schema:
        description: AllowedRegistry is the object representing an allowed registry.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Spec describes the desired state for an allowed registry.
            properties:
              registryPrefix:
                description: RegistryPrefix contains the prefix of the registry which
                  will be allowed. User clusters will be able to deploy only images
                  which are prefixed with one of the allowed image registry prefixes.
                type: string
            required:
            - registryPrefix
            type: object
        type: object
    served: true
    storage: true
    subresources: {}
---
# Source: kubermatic-operator/templates/crds.tpl
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    app.kubernetes.io/version: v2.24.5
    controller-gen.kubebuilder.io/version: v0.13.0
    helm.sh/resource-policy: keep
    kubermatic.k8c.io/location: master,seed
  labels:
    app.kubernetes.io/component: operator
    app.kubernetes.io/instance: my-kubermatic-operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubermatic-operator
    app.kubernetes.io/version: v2.24.5
    helm.sh/chart: kubermatic-operator-v2.24.5
  name: clusters.kubermatic.k8c.io
spec:
  group: kubermatic.k8c.io
  names:
    kind: Cluster
    listKind: ClusterList
    plural: clusters
    singular: cluster
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.humanReadableName
      name: HumanReadableName
      type: string
    - jsonPath: .status.userEmail
      name: Owner
      type: string
    - jsonPath: .spec.version
      name: Version
      type: string
    - jsonPath: .spec.cloud.providerName
      name: Provider
      type: string
    - jsonPath: .spec.cloud.dc
      name: Datacenter
      type: string
    - jsonPath: .status.phase
      name: Phase
      type: string
    - jsonPath: .spec.pause
      name: Paused
      type: boolean
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1
    schema:
      openAPIV3Schema:
        description: Cluster represents a Kubermatic Kubernetes Platform user cluster.
          Cluster objects exist on Seed clusters and each user cluster consists of
          a namespace containing the Kubernetes control plane and additional pods
          (like Prometheus or the machine-controller).
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Spec describes the desired cluster state.
            properties:
              admissionPlugins:
                description: A list of arbitrary admission plugin names that are passed
                  to kube-apiserver. Must not include admission plugins that can be
                  enabled via a separate setting.
                items:
                  type: string
                type: array
              apiServerAllowedIPRanges:
                description: 'Optional: APIServerAllowedIPRanges is a list of IP ranges
                  allowed to access the API server. Applicable only if the expose
                  strategy of the cluster is LoadBalancer. If not configured, access
                  to the API server is unrestricted.'
                properties:
                  cidrBlocks:
                    items:
                      type: string
                    type: array
                required:
                - cidrBlocks
                type: object
              applicationSettings:
                description: 'Optional: ApplicationSettings contains the settings
                  relative to the application feature.'
                properties:
                  cacheSize:
                    anyOf:
                    - type: integer
                    - type: string
                    description: CacheSize is the size of the cache used to download
                      application's sources.
                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                    x-kubernetes-int-or-string: true
                type: object
              auditLogging:
                description: 'Optional: AuditLogging configures Kubernetes API audit
                  logging (https://kubernetes.io/docs/tasks/debug-application-cluster/audit/)
                  for the user cluster.'
                properties:
                  enabled:
                    description: Enabled will enable or disable audit logging.
                    type: boolean
                  policyPreset:
                    description: 'Optional: PolicyPreset can be set to utilize a pre-defined
                      set of audit policy rules.'
                    enum:
                    - ""
                    - metadata
                    - recommended
                    - minimal
                    type: string
                  sidecar:
                    description: 'Optional: Configures the fluent-bit sidecar deployed
                      alongside kube-apiserver.'
                    properties:
                      config:
                        description: AuditSidecarConfiguration defines custom configuration
                          for the fluent-bit sidecar deployed with a kube-apiserver.
                          Also see https://docs.fluentbit.io/manual/v/1.8/administration/configuring-fluent-bit/configuration-file.
                        properties:
                          filters:
                            items:
                              additionalProperties:
                                type: string
                              type: object
                            type: array
                          outputs:
                            items:
                              additionalProperties:
                                type: string
                              type: object
                            type: array
                          service:
                            additionalProperties:
                              type: string
                            type: object
                        type: object
                      resources:
                        description: ResourceRequirements describes the compute resource
                          requirements.
                        properties:
                          claims:
                            description: "Claims lists the names of resources, defined
                              in spec.resourceClaims, that are used by this container.
                              \n This is an alpha field and requires enabling the
                              DynamicResourceAllocation feature gate. \n This field
                              is immutable. It can only be set for containers."
                            items:
                              description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                              properties:
                                name:
                                  description: Name must match the name of one entry
                                    in pod.spec.resourceClaims of the Pod where this
                                    field is used. It makes that resource available
                                    inside a container.
                                  type: string
                              required:
                              - name
                              type: object
                            type: array
                            x-kubernetes-list-map-keys:
                            - name
                            x-kubernetes-list-type: map
                          limits:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Limits describes the maximum amount of compute
                              resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                          requests:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Requests describes the minimum amount of
                              compute resources required. If Requests is omitted for
                              a container, it defaults to Limits if that is explicitly
                              specified, otherwise to an implementation-defined value.
                              Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                        type: object
                    type: object
                type: object
              cloud:
                description: Cloud contains information regarding the cloud provider
                  that is responsible for hosting the cluster's workload.
                properties:
                  alibaba:
                    description: Alibaba defines the configuration data of the Alibaba.
                    properties:
                      accessKeyID:
                        description: The Access Key ID used to authenticate against
                          Alibaba.
                        type: string
                      accessKeySecret:
                        description: The Access Key Secret used to authenticate against
                          Alibaba.
                        type: string
                      credentialsReference:
                        description: GlobalObjectKeySelector is needed as we can not
                          use v1.SecretKeySelector because it is not cross namespace.
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: 'If referring to a piece of an object instead
                              of an entire object, this string should contain a valid
                              JSON/Go field access statement, such as desiredState.manifest.containers[2].
                              For example, if the object reference is to a container
                              within a pod, this would take on a value like: "spec.containers{name}"
                              (where "name" refers to the name of the container that
                              triggered the event) or if no container name is specified
                              "spec.containers[2]" (container with index 2 in this
                              pod). This syntax is chosen only to have some well-defined
                              way of referencing a part of an object. TODO: this design
                              is not final and this field is subject to change in
                              the future.'
                            type: string
                          key:
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                          resourceVersion:
                            description: 'Specific resourceVersion to which this reference
                              is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                    type: object
                  anexia:
                    description: Anexia defines the configuration data of the Anexia.
                    properties:
                      credentialsReference:
                        description: GlobalObjectKeySelector is needed as we can not
                          use v1.SecretKeySelector because it is not cross namespace.
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: 'If referring to a piece of an object instead
                              of an entire object, this string should contain a valid
                              JSON/Go field access statement, such as desiredState.manifest.containers[2].
                              For example, if the object reference is to a container
                              within a pod, this would take on a value like: "spec.containers{name}"
                              (where "name" refers to the name of the container that
                              triggered the event) or if no container name is specified
                              "spec.containers[2]" (container with index 2 in this
                              pod). This syntax is chosen only to have some well-defined
                              way of referencing a part of an object. TODO: this design
                              is not final and this field is subject to change in
                              the future.'
                            type: string
                          key:
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                          resourceVersion:
                            description: 'Specific resourceVersion to which this reference
                              is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                      token:
                        description: Token is used to authenticate with the Anexia
                          API.
                        type: string
                    type: object
                  aws:
                    description: AWS defines the configuration data of the Amazon
                      Web Services(AWS) cloud provider.
                    properties:
                      accessKeyID:
                        description: The Access key ID used to authenticate against
                          AWS.
                        type: string
                      assumeRoleARN:
                        description: Defines the ARN for an IAM role that should be
                          assumed when handling resources on AWS. It will be used
                          to acquire temporary security credentials using an STS AssumeRole
                          API operation whenever creating an AWS session.
                        type: string
                      assumeRoleExternalID:
                        description: An arbitrary string that may be needed when calling
                          the STS AssumeRole API operation. Using an external ID can
                          help to prevent the "confused deputy problem".
                        type: string
                      credentialsReference:
                        description: GlobalObjectKeySelector is needed as we can not
                          use v1.SecretKeySelector because it is not cross namespace.
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: 'If referring to a piece of an object instead
                              of an entire object, this string should contain a valid
                              JSON/Go field access statement, such as desiredState.manifest.containers[2].
                              For example, if the object reference is to a container
                              within a pod, this would take on a value like: "spec.containers{name}"
                              (where "name" refers to the name of the container that
                              triggered the event) or if no container name is specified
                              "spec.containers[2]" (container with index 2 in this
                              pod). This syntax is chosen only to have some well-defined
                              way of referencing a part of an object. TODO: this design
                              is not final and this field is subject to change in
                              the future.'
                            type: string
                          key:
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                          resourceVersion:
                            description: 'Specific resourceVersion to which this reference
                              is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                      disableIAMReconciling:
                        description: DisableIAMReconciling is used to disable reconciliation
                          for IAM related configuration. This is useful in air-gapped
                          setups where access to IAM service is not possible.
                        type: boolean
                      instanceProfileName:
                        type: string
                      nodePortsAllowedIPRange:
                        description: A CIDR range that will be used to allow access
                          to the node port range in the security group to. Only applies
                          if the security group is generated by KKP and not preexisting.
                          If NodePortsAllowedIPRange nor NodePortsAllowedIPRanges
                          is set, the node port range can be accessed from anywhere.
                        type: string
                      nodePortsAllowedIPRanges:
                        description: 'Optional: CIDR ranges that will be used to allow
                          access to the node port range in the security group to.
                          Only applies if the security group is generated by KKP and
                          not preexisting. If NodePortsAllowedIPRange nor NodePortsAllowedIPRanges
                          is set,  the node port range can be accessed from anywhere.'
                        properties:
                          cidrBlocks:
                            items:
                              type: string
                            type: array
                        required:
                        - cidrBlocks
                        type: object
                      roleARN:
                        description: The IAM role, the control plane will use. The
                          control plane will perform an assume-role
                        type: string
                      routeTableID:
                        type: string
                      secretAccessKey:
                        description: The Secret Access Key used to authenticate against
                          AWS.
                        type: string
                      securityGroupID:
                        type: string
                      vpcID:
                        type: string
                    required:
                    - instanceProfileName
                    - roleARN
                    - routeTableID
                    - securityGroupID
                    - vpcID
                    type: object
                  azure:
                    description: Azure defines the configuration data of the Microsoft
                      Azure cloud.
                    properties:
                      assignAvailabilitySet:
                        description: 'Optional: AssignAvailabilitySet determines whether
                          KKP creates and assigns an AvailabilitySet to machines.
                          Defaults to `true` internally if not set.'
                        type: boolean
                      availabilitySet:
                        description: An availability set that will be associated with
                          nodes created for this cluster. If this field is set to
                          empty string at cluster creation and `AssignAvailabilitySet`
                          is set to `true`, a new availability set will be created
                          and this field will be updated to the generated availability
                          set's name.
                        type: string
                      clientID:
                        description: The service principal used to access Azure. Can
                          be read from `credentialsReference` instead.
                        type: string
                      clientSecret:
                        description: The client secret corresponding to the given
                          service principal. Can be read from `credentialsReference`
                          instead.
                        type: string
                      credentialsReference:
                        description: CredentialsReference allows referencing a `Secret`
                          resource instead of passing secret data in this spec.
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: 'If referring to a piece of an object instead
                              of an entire object, this string should contain a valid
                              JSON/Go field access statement, such as desiredState.manifest.containers[2].
                              For example, if the object reference is to a container
                              within a pod, this would take on a value like: "spec.containers{name}"
                              (where "name" refers to the name of the container that
                              triggered the event) or if no container name is specified
                              "spec.containers[2]" (container with index 2 in this
                              pod). This syntax is chosen only to have some well-defined
                              way of referencing a part of an object. TODO: this design
                              is not final and this field is subject to change in
                              the future.'
                            type: string
                          key:
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                          resourceVersion:
                            description: 'Specific resourceVersion to which this reference
                              is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                      loadBalancerSKU:
                        description: LoadBalancerSKU sets the LB type that will be
                          used for the Azure cluster, possible values are "basic"
                          and "standard", if empty, "basic" will be used.
                        enum:
                        - standard
                        - basic
                        type: string
                      nodePortsAllowedIPRange:
                        description: A CIDR range that will be used to allow access
                          to the node port range in the security group to. Only applies
                          if the security group is generated by KKP and not preexisting.
                          If NodePortsAllowedIPRange nor NodePortsAllowedIPRanges
                          is set, the node port range can be accessed from anywhere.
                        type: string
                      nodePortsAllowedIPRanges:
                        description: 'Optional: CIDR ranges that will be used to allow
                          access to the node port range in the security group to.
                          Only applies if the security group is generated by KKP and
                          not preexisting. If NodePortsAllowedIPRange nor NodePortsAllowedIPRanges
                          is set,  the node port range can be accessed from anywhere.'
                        properties:
                          cidrBlocks:
                            items:
                              type: string
                            type: array
                        required:
                        - cidrBlocks
                        type: object
                      resourceGroup:
                        description: The resource group that will be used to look
                          up and create resources for the cluster in. If set to empty
                          string at cluster creation, a new resource group will be
                          created and this field will be updated to the generated
                          resource group's name.
                        type: string
                      routeTable:
                        description: The name of a route table associated with the
                          subnet referenced by `subnet`. If set to empty string at
                          cluster creation, a new route table will be created and
                          this field will be updated to the generated route table's
                          name. If no subnet is defined at cluster creation, this
                          field should be empty as well.
                        type: string
                      securityGroup:
                        description: The name of a security group associated with
                          the subnet referenced by `subnet`. If set to empty string
                          at cluster creation, a new security group will be created
                          and this field will be updated to the generated security
                          group's name. If no subnet is defined at cluster creation,
                          this field should be empty as well.
                        type: string
                      subnet:
                        description: The name of a subnet in the VNet referenced by
                          `vnet`. If set to empty string at cluster creation, a new
                          subnet will be created and this field will be updated to
                          the generated subnet's name. If no VNet is defined at cluster
                          creation, this field should be empty as well.
                        type: string
                      subscriptionID:
                        description: The Azure Subscription used for this cluster.
                          Can be read from `credentialsReference` instead.
                        type: string
                      tenantID:
                        description: The Azure Active Directory Tenant used for this
                          cluster. Can be read from `credentialsReference` instead.
                        type: string
                      vnet:
                        description: The name of the VNet resource used for setting
                          up networking in. If set to empty string at cluster creation,
                          a new VNet will be created and this field will be updated
                          to the generated VNet's name.
                        type: string
                      vnetResourceGroup:
                        description: 'Optional: Defines a second resource group that
                          will be used for VNet related resources instead. If left
                          empty, NO additional resource group will be created and
                          all VNet related resources use the resource group defined
                          by `resourceGroup`.'
                        type: string
                    required:
                    - availabilitySet
                    - loadBalancerSKU
                    - resourceGroup
                    - routeTable
                    - securityGroup
                    - subnet
                    - vnet
                    - vnetResourceGroup
                    type: object
                  bringyourown:
                    description: BringYourOwn defines the configuration data for a
                      Bring Your Own cluster.
                    type: object
                  dc:
                    description: DatacenterName states the name of a cloud provider
                      "datacenter" (defined in `Seed` resources) this cluster should
                      be deployed into.
                    type: string
                  digitalocean:
                    description: Digitalocean defines the configuration data of the
                      DigitalOcean cloud provider.
                    properties:
                      credentialsReference:
                        description: GlobalObjectKeySelector is needed as we can not
                          use v1.SecretKeySelector because it is not cross namespace.
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: 'If referring to a piece of an object instead
                              of an entire object, this string should contain a valid
                              JSON/Go field access statement, such as desiredState.manifest.containers[2].
                              For example, if the object reference is to a container
                              within a pod, this would take on a value like: "spec.containers{name}"
                              (where "name" refers to the name of the container that
                              triggered the event) or if no container name is specified
                              "spec.containers[2]" (container with index 2 in this
                              pod). This syntax is chosen only to have some well-defined
                              way of referencing a part of an object. TODO: this design
                              is not final and this field is subject to change in
                              the future.'
                            type: string
                          key:
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                          resourceVersion:
                            description: 'Specific resourceVersion to which this reference
                              is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                      token:
                        description: Token is used to authenticate with the DigitalOcean
                          API.
                        type: string
                    type: object
                  fake:
                    description: Fake is a dummy cloud provider that is only used
                      for testing purposes. Do not try to actually use it.
                    properties:
                      token:
                        type: string
                    type: object
                  gcp:
                    description: GCP defines the configuration data of the Google
                      Cloud Platform(GCP).
                    properties:
                      credentialsReference:
                        description: GlobalObjectKeySelector is needed as we can not
                          use v1.SecretKeySelector because it is not cross namespace.
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: 'If referring to a piece of an object instead
                              of an entire object, this string should contain a valid
                              JSON/Go field access statement, such as desiredState.manifest.containers[2].
                              For example, if the object reference is to a container
                              within a pod, this would take on a value like: "spec.containers{name}"
                              (where "name" refers to the name of the container that
                              triggered the event) or if no container name is specified
                              "spec.containers[2]" (container with index 2 in this
                              pod). This syntax is chosen only to have some well-defined
                              way of referencing a part of an object. TODO: this design
                              is not final and this field is subject to change in
                              the future.'
                            type: string
                          key:
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                          resourceVersion:
                            description: 'Specific resourceVersion to which this reference
                              is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                      network:
                        type: string
                      nodePortsAllowedIPRange:
                        description: A CIDR range that will be used to allow access
                          to the node port range in the firewall rules to. If NodePortsAllowedIPRange
                          nor NodePortsAllowedIPRanges is set, the node port range
                          can be accessed from anywhere.
                        type: string
                      nodePortsAllowedIPRanges:
                        description: 'Optional: CIDR ranges that will be used to allow
                          access to the node port range in the firewall rules to.
                          If NodePortsAllowedIPRange nor NodePortsAllowedIPRanges
                          is set,  the node port range can be accessed from anywhere.'
                        properties:
                          cidrBlocks:
                            items:
                              type: string
                            type: array
                        required:
                        - cidrBlocks
                        type: object
                      serviceAccount:
                        description: The Google Service Account (JSON format), encoded
                          with base64.
                        type: string
                      subnetwork:
                        type: string
                    required:
                    - network
                    - subnetwork
                    type: object
                  hetzner:
                    description: Hetzner defines the configuration data of the Hetzner
                      cloud.
                    properties:
                      credentialsReference:
                        description: GlobalObjectKeySelector is needed as we can not
                          use v1.SecretKeySelector because it is not cross namespace.
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: 'If referring to a piece of an object instead
                              of an entire object, this string should contain a valid
                              JSON/Go field access statement, such as desiredState.manifest.containers[2].
                              For example, if the object reference is to a container
                              within a pod, this would take on a value like: "spec.containers{name}"
                              (where "name" refers to the name of the container that
                              triggered the event) or if no container name is specified
                              "spec.containers[2]" (container with index 2 in this
                              pod). This syntax is chosen only to have some well-defined
                              way of referencing a part of an object. TODO: this design
                              is not final and this field is subject to change in
                              the future.'
                            type: string
                          key:
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                          resourceVersion:
                            description: 'Specific resourceVersion to which this reference
                              is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                      network:
                        description: Network is the pre-existing Hetzner network in
                          which the machines are running. While machines can be in
                          multiple networks, a single one must be chosen for the HCloud
                          CCM to work. If this is empty, the network configured on
                          the datacenter will be used.
                        type: string
                      token:
                        description: Token is used to authenticate with the Hetzner
                          cloud API.
                        type: string
                    type: object
                  kubevirt:
                    description: Kubevirt defines the configuration data of the KubeVirt.
                    properties:
                      credentialsReference:
                        description: GlobalObjectKeySelector is needed as we can not
                          use v1.SecretKeySelector because it is not cross namespace.
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: 'If referring to a piece of an object instead
                              of an entire object, this string should contain a valid
                              JSON/Go field access statement, such as desiredState.manifest.containers[2].
                              For example, if the object reference is to a container
                              within a pod, this would take on a value like: "spec.containers{name}"
                              (where "name" refers to the name of the container that
                              triggered the event) or if no container name is specified
                              "spec.containers[2]" (container with index 2 in this
                              pod). This syntax is chosen only to have some well-defined
                              way of referencing a part of an object. TODO: this design
                              is not final and this field is subject to change in
                              the future.'
                            type: string
                          key:
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                          resourceVersion:
                            description: 'Specific resourceVersion to which this reference
                              is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                      csiKubeconfig:
                        type: string
                      imageCloningEnabled:
                        description: ImageCloningEnabled flag enable/disable cloning
                          for a cluster.
                        type: boolean
                      infraStorageClasses:
                        description: 'Deprecated: in favor of StorageClasses. InfraStorageClasses
                          is a list of storage classes from KubeVirt infra cluster
                          that are used for initialization of user cluster storage
                          classes by the CSI driver kubevirt (hot pluggable disks)'
                        items:
                          type: string
                        type: array
                      kubeconfig:
                        description: The cluster's kubeconfig file, encoded with base64.
                        type: string
                      preAllocatedDataVolumes:
                        description: Custom Images are a good example of this use
                          case.
                        items:
                          properties:
                            annotations:
                              additionalProperties:
                                type: string
                              type: object
                            name:
                              type: string
                            size:
                              type: string
                            storageClass:
                              type: string
                            url:
                              type: string
                          required:
                          - name
                          - size
                          - storageClass
                          - url
                          type: object
                        type: array
                      storageClasses:
                        description: StorageClasses is a list of storage classes from
                          KubeVirt infra cluster that are used for initialization
                          of user cluster storage classes by the CSI driver kubevirt
                          (hot pluggable disks. It contains also some flag specifying
                          which one is the default one.
                        items:
                          properties:
                            isDefaultClass:
                              description: 'Optional: IsDefaultClass. If true, the
                                created StorageClass in the tenant cluster will be
                                annotated with: storageclass.kubernetes.io/is-default-class
                                : true If missing or false, annotation will be: storageclass.kubernetes.io/is-default-class
                                : false'
                              type: boolean
                            name:
                              type: string
                          required:
                          - name
                          type: object
                        type: array
                    type: object
                  nutanix:
                    description: Nutanix defines the configuration data of the Nutanix.
                    properties:
                      clusterName:
                        description: ClusterName is the Nutanix cluster that this
                          user cluster will be deployed to.
                        type: string
                      credentialsReference:
                        description: GlobalObjectKeySelector is needed as we can not
                          use v1.SecretKeySelector because it is not cross namespace.
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: 'If referring to a piece of an object instead
                              of an entire object, this string should contain a valid
                              JSON/Go field access statement, such as desiredState.manifest.containers[2].
                              For example, if the object reference is to a container
                              within a pod, this would take on a value like: "spec.containers{name}"
                              (where "name" refers to the name of the container that
                              triggered the event) or if no container name is specified
                              "spec.containers[2]" (container with index 2 in this
                              pod). This syntax is chosen only to have some well-defined
                              way of referencing a part of an object. TODO: this design
                              is not final and this field is subject to change in
                              the future.'
                            type: string
                          key:
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                          resourceVersion:
                            description: 'Specific resourceVersion to which this reference
                              is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                      csi:
                        description: NutanixCSIConfig for CSI driver that connects
                          to a prism element.
                        properties:
                          endpoint:
                            description: Prism Element Endpoint to access Nutanix
                              Prism Element for CSI driver.
                            type: string
                          fstype:
                            description: 'Optional: defaults to "xfs"'
                            type: string
                          password:
                            description: Prism Element Password for CSI driver.
                            type: string
                          port:
                            description: 'Optional: Port to use when connecting to
                              the Nutanix Prism Element endpoint (defaults to 9440).'
                            format: int32
                            type: integer
                          ssSegmentedIscsiNetwork:
                            description: 'Optional: defaults to "false".'
                            type: boolean
                          storageContainer:
                            description: 'Optional: defaults to "SelfServiceContainer".'
                            type: string
                          username:
                            description: Prism Element Username for CSI driver.
                            type: string
                        required:
                        - endpoint
                        type: object
                      password:
                        description: Password corresponding to the provided user.
                        type: string
                      projectName:
                        description: The name of the project that this cluster is
                          deployed into. If none is given, no project will be used.
                        type: string
                      proxyURL:
                        description: 'Optional: Used to configure a HTTP proxy to
                          access Nutanix Prism Central.'
                        type: string
                      username:
                        description: Username to access the Nutanix Prism Central
                          API.
                        type: string
                    required:
                    - clusterName
                    type: object
                  openstack:
                    description: Openstack defines the configuration data of an OpenStack
                      cloud.
                    properties:
                      applicationCredentialID:
                        type: string
                      applicationCredentialSecret:
                        type: string
                      cinderTopologyEnabled:
                        description: Flag to configure enablement of topology support
                          for the Cinder CSI plugin. This requires Nova and Cinder
                          to have matching availability zones configured.
                        type: boolean
                      credentialsReference:
                        description: GlobalObjectKeySelector is needed as we can not
                          use v1.SecretKeySelector because it is not cross namespace.
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: 'If referring to a piece of an object instead
                              of an entire object, this string should contain a valid
                              JSON/Go field access statement, such as desiredState.manifest.containers[2].
                              For example, if the object reference is to a container
                              within a pod, this would take on a value like: "spec.containers{name}"
                              (where "name" refers to the name of the container that
                              triggered the event) or if no container name is specified
                              "spec.containers[2]" (container with index 2 in this
                              pod). This syntax is chosen only to have some well-defined
                              way of referencing a part of an object. TODO: this design
                              is not final and this field is subject to change in
                              the future.'
                            type: string
                          key:
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                          resourceVersion:
                            description: 'Specific resourceVersion to which this reference
                              is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                      domain:
                        type: string
                      enableIngressHostname:
                        description: Enable the `enable-ingress-hostname` cloud provider
                          option on the Openstack CCM. Can only be used with the external
                          CCM and might be deprecated and removed in future versions
                          as it is considered a workaround for the PROXY protocol
                          to preserve client IPs.
                        type: boolean
                      floatingIPPool:
                        description: "FloatingIPPool holds the name of the public
                          network The public network is reachable from the outside
                          world and should provide the pool of IP addresses to choose
                          from. \n When specified, all worker nodes will receive a
                          public ip from this floating ip pool \n Note that the network
                          is external if the \"External\" field is set to true"
                        type: string
                      ingressHostnameSuffix:
                        description: Set a specific suffix for the hostnames used
                          for the PROXY protocol workaround that is enabled by EnableIngressHostname.
                          The suffix is set to `nip.io` by default. Can only be used
                          with the external CCM and might be deprecated and removed
                          in future versions as it is considered a workaround only.
                        type: string
                      ipv6SubnetID:
                        description: IPv6SubnetID holds the ID of the subnet used
                          for IPv6 networking. If not provided, a new subnet will
                          be created if IPv6 is enabled.
                        type: string
                      ipv6SubnetPool:
                        description: IPv6SubnetPool holds the name of the subnet pool
                          used for creating new IPv6 subnets. If not provided, the
                          default IPv6 subnet pool will be used.
                        type: string
                      network:
                        description: "Network holds the name of the internal network
                          When specified, all worker nodes will be attached to this
                          network. If not specified, a network, subnet & router will
                          be created. \n Note that the network is internal if the
                          \"External\" field is set to false"
                        type: string
                      nodePortsAllowedIPRange:
                        description: A CIDR range that will be used to allow access
                          to the node port range in the security group to. Only applies
                          if the security group is generated by KKP and not preexisting.
                          If NodePortsAllowedIPRange nor NodePortsAllowedIPRanges
                          is set, the node port range can be accessed from anywhere.
                        type: string
                      nodePortsAllowedIPRanges:
                        description: 'Optional: CIDR ranges that will be used to allow
                          access to the node port range in the security group to.
                          Only applies if the security group is generated by KKP and
                          not preexisting. If NodePortsAllowedIPRange nor NodePortsAllowedIPRanges
                          is set, the node port range can be accessed from anywhere.'
                        properties:
                          cidrBlocks:
                            items:
                              type: string
                            type: array
                        required:
                        - cidrBlocks
                        type: object
                      password:
                        type: string
                      project:
                        description: project, formally known as tenant.
                        type: string
                      projectID:
                        description: project id, formally known as tenantID.
                        type: string
                      routerID:
                        type: string
                      securityGroups:
                        type: string
                      subnetID:
                        type: string
                      token:
                        description: Used internally during cluster creation
                        type: string
                      useOctavia:
                        description: "Whether or not to use Octavia for LoadBalancer
                          type of Service implementation instead of using Neutron-LBaaS.
                          Attention:Openstack CCM use Octavia as default load balancer
                          implementation since v1.17.0 \n Takes precedence over the
                          'use_octavia' flag provided at datacenter level if both
                          are specified."
                        type: boolean
                      useToken:
                        type: boolean
                      username:
                        type: string
                    required:
                    - floatingIPPool
                    - network
                    - routerID
                    - securityGroups
                    - subnetID
                    type: object
                  packet:
                    description: Packet defines the configuration data of a Packet
                      cloud.
                    properties:
                      apiKey:
                        type: string
                      billingCycle:
                        type: string
                      credentialsReference:
                        description: GlobalObjectKeySelector is needed as we can not
                          use v1.SecretKeySelector because it is not cross namespace.
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: 'If referring to a piece of an object instead
                              of an entire object, this string should contain a valid
                              JSON/Go field access statement, such as desiredState.manifest.containers[2].
                              For example, if the object reference is to a container
                              within a pod, this would take on a value like: "spec.containers{name}"
                              (where "name" refers to the name of the container that
                              triggered the event) or if no container name is specified
                              "spec.containers[2]" (container with index 2 in this
                              pod). This syntax is chosen only to have some well-defined
                              way of referencing a part of an object. TODO: this design
                              is not final and this field is subject to change in
                              the future.'
                            type: string
                          key:
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                          resourceVersion:
                            description: 'Specific resourceVersion to which this reference
                              is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                      projectID:
                        type: string
                    required:
                    - billingCycle
                    type: object
                  providerName:
                    description: ProviderName is the name of the cloud provider used
                      for this cluster. This must match the given provider spec (e.g.
                      if the providerName is "aws", then the `aws` field must be set).
                    type: string
                  vmwareclouddirector:
                    description: VMwareCloudDirector defines the configuration data
                      of the VMware Cloud Director.
                    properties:
                      apiToken:
                        description: The VMware Cloud Director API token.
                        type: string
                      credentialsReference:
                        description: GlobalObjectKeySelector is needed as we can not
                          use v1.SecretKeySelector because it is not cross namespace.
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: 'If referring to a piece of an object instead
                              of an entire object, this string should contain a valid
                              JSON/Go field access statement, such as desiredState.manifest.containers[2].
                              For example, if the object reference is to a container
                              within a pod, this would take on a value like: "spec.containers{name}"
                              (where "name" refers to the name of the container that
                              triggered the event) or if no container name is specified
                              "spec.containers[2]" (container with index 2 in this
                              pod). This syntax is chosen only to have some well-defined
                              way of referencing a part of an object. TODO: this design
                              is not final and this field is subject to change in
                              the future.'
                            type: string
                          key:
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                          resourceVersion:
                            description: 'Specific resourceVersion to which this reference
                              is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                      csi:
                        description: Config for CSI driver
                        properties:
                          filesystem:
                            description: Filesystem to use for named disks, defaults
                              to "ext4"
                            type: string
                          storageProfile:
                            description: The name of the storage profile to use for
                              disks created by CSI driver
                            type: string
                        required:
                        - storageProfile
                        type: object
                      organization:
                        description: The name of organization to use.
                        type: string
                      ovdcNetwork:
                        description: The name of organizational virtual data center
                          network that will be associated with the VMs and vApp.
                        type: string
                      password:
                        description: The VMware Cloud Director user password.
                        type: string
                      username:
                        description: The VMware Cloud Director user name.
                        type: string
                      vapp:
                        description: VApp used for isolation of VMs and their associated
                          network
                        type: string
                      vdc:
                        description: The organizational virtual data center.
                        type: string
                    required:
                    - csi
                    - ovdcNetwork
                    type: object
                  vsphere:
                    description: VSphere defines the configuration data of the vSphere.
                    properties:
                      basePath:
                        description: 'Optional: BasePath configures a vCenter folder
                          path that KKP will create an individual cluster folder in.
                          If it''s an absolute path, the RootPath configured in the
                          datacenter will be ignored. If it is a relative path, the
                          BasePath part will be appended to the RootPath to construct
                          the full path. For both cases, the full folder structure
                          needs to exist. KKP will only try to create the cluster
                          folder.'
                        type: string
                      credentialsReference:
                        description: GlobalObjectKeySelector is needed as we can not
                          use v1.SecretKeySelector because it is not cross namespace.
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: 'If referring to a piece of an object instead
                              of an entire object, this string should contain a valid
                              JSON/Go field access statement, such as desiredState.manifest.containers[2].
                              For example, if the object reference is to a container
                              within a pod, this would take on a value like: "spec.containers{name}"
                              (where "name" refers to the name of the container that
                              triggered the event) or if no container name is specified
                              "spec.containers[2]" (container with index 2 in this
                              pod). This syntax is chosen only to have some well-defined
                              way of referencing a part of an object. TODO: this design
                              is not final and this field is subject to change in
                              the future.'
                            type: string
                          key:
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                          resourceVersion:
                            description: 'Specific resourceVersion to which this reference
                              is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                      datastore:
                        description: Datastore to be used for storing virtual machines
                          and as a default for dynamic volume provisioning, it is
                          mutually exclusive with DatastoreCluster.
                        type: string
                      datastoreCluster:
                        description: DatastoreCluster to be used for storing virtual
                          machines, it is mutually exclusive with Datastore.
                        type: string
                      folder:
                        description: Folder to be used to group the provisioned virtual
                          machines.
                        type: string
                      infraManagementUser:
                        description: This user will be used for everything except
                          cloud provider functionality
                        properties:
                          password:
                            type: string
                          username:
                            type: string
                        type: object
                      networks:
                        description: List of vSphere networks.
                        items:
                          type: string
                        type: array
                      password:
                        description: The vSphere user password.
                        type: string
                      resourcePool:
                        description: ResourcePool is used to manage resources such
                          as cpu and memory for vSphere virtual machines. The resource
                          pool should be defined on vSphere cluster level.
                        type: string
                      storagePolicy:
                        description: StoragePolicy to be used for storage provisioning
                        type: string
                      tags:
                        description: Tags represents the tags that are attached or
                          created on the cluster level, that are then propagated down
                          to the MachineDeployments. In order to attach tags on MachineDeployment,
                          users must create the tag on a cluster level first then
                          attach that tag on the MachineDeployment.
                        properties:
                          categoryID:
                            description: CategoryID is the id of the vsphere category
                              that the tag belongs to. If the category id is left
                              empty, the default category id for the cluster will
                              be used.
                            type: string
                          tags:
                            description: Tags represents the name of the created tags.
                            items:
                              type: string
                            type: array
                        required:
                        - tags
                        type: object
                      username:
                        description: The vSphere user name.
                        type: string
                      vmNetName:
                        description: 'The name of the vSphere network. Deprecated:
                          Use networks instead.'
                        type: string
                    required:
                    - infraManagementUser
                    - storagePolicy
                    type: object
                required:
                - dc
                - providerName
                type: object
              clusterNetwork:
                description: 'Optional: ClusterNetwork specifies the different networking
                  parameters for a cluster.'
                properties:
                  coreDNSReplicas:
                    description: CoreDNSReplicas is the number of desired pods of
                      user cluster coredns deployment.
                    format: int32
                    type: integer
                  dnsDomain:
                    description: Domain name for services.
                    type: string
                  ipFamily:
                    description: 'Optional: IP family used for cluster networking.
                      Supported values are "", "IPv4" or "IPv4+IPv6". Can be omitted
                      / empty if pods and services network ranges are specified. In
                      that case it defaults according to the IP families of the provided
                      network ranges. If neither ipFamily nor pods & services network
                      ranges are specified, defaults to "IPv4".'
                    enum:
                    - ""
                    - IPv4
                    - IPv4+IPv6
                    type: string
                  ipvs:
                    description: IPVS defines kube-proxy ipvs configuration options
                    properties:
                      strictArp:
                        default: true
                        description: StrictArp configure arp_ignore and arp_announce
                          to avoid answering ARP queries from kube-ipvs0 interface.
                          defaults to true.
                        type: boolean
                    type: object
                  konnectivityEnabled:
                    description: 'Deprecated: KonnectivityEnabled enables konnectivity
                      for controlplane to node network communication. As OpenVPN will
                      be removed in the future KKP versions, clusters with konnectivity
                      disabled will not be supported. All existing clusters with OpenVPN
                      should migrate to the Konnectivity.'
                    type: boolean
                  nodeCidrMaskSizeIPv4:
                    description: NodeCIDRMaskSizeIPv4 is the mask size used to address
                      the nodes within provided IPv4 Pods CIDR. It has to be larger
                      than the provided IPv4 Pods CIDR. Defaults to 24.
                    format: int32
                    type: integer
                  nodeCidrMaskSizeIPv6:
                    description: NodeCIDRMaskSizeIPv6 is the mask size used to address
                      the nodes within provided IPv6 Pods CIDR. It has to be larger
                      than the provided IPv6 Pods CIDR. Defaults to 64.
                    format: int32
                    type: integer
                  nodeLocalDNSCacheEnabled:
                    default: true
                    description: NodeLocalDNSCacheEnabled controls whether the NodeLocal
                      DNS Cache feature is enabled. Defaults to true.
                    type: boolean
                  pods:
                    description: The network ranges from which POD networks are allocated.
                      It can contain one IPv4 and/or one IPv6 CIDR. If both address
                      families are specified, the first one defines the primary address
                      family.
                    properties:
                      cidrBlocks:
                        items:
                          type: string
                        type: array
                    required:
                    - cidrBlocks
                    type: object
                  proxyMode:
                    default: ipvs
                    description: ProxyMode defines the kube-proxy mode ("ipvs" / "iptables"
                      / "ebpf"). Defaults to "ipvs". "ebpf" disables kube-proxy and
                      requires CNI support.
                    enum:
                    - ipvs
                    - iptables
                    - ebpf
                    type: string
                  services:
                    description: The network ranges from which service VIPs are allocated.
                      It can contain one IPv4 and/or one IPv6 CIDR. If both address
                      families are specified, the first one defines the primary address
                      family.
                    properties:
                      cidrBlocks:
                        items:
                          type: string
                        type: array
                    required:
                    - cidrBlocks
                    type: object
                  tunnelingAgentIP:
                    description: TunnelingAgentIP is the address used by the tunneling
                      agents
                    type: string
                required:
                - dnsDomain
                - pods
                - proxyMode
                - services
                type: object
              cniPlugin:
                description: 'Optional: CNIPlugin refers to the spec of the CNI plugin
                  used by the Cluster.'
                properties:
                  type:
                    description: Type is the CNI plugin type to be used.
                    enum:
                    - canal
                    - cilium
                    - none
                    type: string
                  version:
                    description: Version defines the CNI plugin version to be used.
                      This varies by chosen CNI plugin type.
                    type: string
                required:
                - type
                - version
                type: object
              componentsOverride:
                description: 'Optional: Component specific overrides that allow customization
                  of control plane components.'
                properties:
                  apiserver:
                    description: Apiserver configures kube-apiserver settings.
                    properties:
                      endpointReconcilingDisabled:
                        type: boolean
                      nodePortRange:
                        type: string
                      replicas:
                        format: int32
                        type: integer
                      resources:
                        description: ResourceRequirements describes the compute resource
                          requirements.
                        properties:
                          claims:
                            description: "Claims lists the names of resources, defined
                              in spec.resourceClaims, that are used by this container.
                              \n This is an alpha field and requires enabling the
                              DynamicResourceAllocation feature gate. \n This field
                              is immutable. It can only be set for containers."
                            items:
                              description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                              properties:
                                name:
                                  description: Name must match the name of one entry
                                    in pod.spec.resourceClaims of the Pod where this
                                    field is used. It makes that resource available
                                    inside a container.
                                  type: string
                              required:
                              - name
                              type: object
                            type: array
                            x-kubernetes-list-map-keys:
                            - name
                            x-kubernetes-list-type: map
                          limits:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Limits describes the maximum amount of compute
                              resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                          requests:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Requests describes the minimum amount of
                              compute resources required. If Requests is omitted for
                              a container, it defaults to Limits if that is explicitly
                              specified, otherwise to an implementation-defined value.
                              Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                        type: object
                      tolerations:
                        items:
                          description: The pod this Toleration is attached to tolerates
                            any taint that matches the triple <key,value,effect> using
                            the matching operator <operator>.
                          properties:
                            effect:
                              description: Effect indicates the taint effect to match.
                                Empty means match all taint effects. When specified,
                                allowed values are NoSchedule, PreferNoSchedule and
                                NoExecute.
                              type: string
                            key:
                              description: Key is the taint key that the toleration
                                applies to. Empty means match all taint keys. If the
                                key is empty, operator must be Exists; this combination
                                means to match all values and all keys.
                              type: string
                            operator:
                              description: Operator represents a key's relationship
                                to the value. Valid operators are Exists and Equal.
                                Defaults to Equal. Exists is equivalent to wildcard
                                for value, so that a pod can tolerate all taints of
                                a particular category.
                              type: string
                            tolerationSeconds:
                              description: TolerationSeconds represents the period
                                of time the toleration (which must be of effect NoExecute,
                                otherwise this field is ignored) tolerates the taint.
                                By default, it is not set, which means tolerate the
                                taint forever (do not evict). Zero and negative values
                                will be treated as 0 (evict immediately) by the system.
                              format: int64
                              type: integer
                            value:
                              description: Value is the taint value the toleration
                                matches to. If the operator is Exists, the value should
                                be empty, otherwise just a regular string.
                              type: string
                          type: object
                        type: array
                    type: object
                  controllerManager:
                    description: ControllerManager configures kube-controller-manager
                      settings.
                    properties:
                      leaderElection:
                        properties:
                          leaseDurationSeconds:
                            description: LeaseDurationSeconds is the duration in seconds
                              that non-leader candidates will wait to force acquire
                              leadership. This is measured against time of last observed
                              ack.
                            format: int32
                            type: integer
                          renewDeadlineSeconds:
                            description: RenewDeadlineSeconds is the duration in seconds
                              that the acting controlplane will retry refreshing leadership
                              before giving up.
                            format: int32
                            type: integer
                          retryPeriodSeconds:
                            description: RetryPeriodSeconds is the duration in seconds
                              the LeaderElector clients should wait between tries
                              of actions.
                            format: int32
                            type: integer
                        type: object
                      replicas:
                        format: int32
                        type: integer
                      resources:
                        description: ResourceRequirements describes the compute resource
                          requirements.
                        properties:
                          claims:
                            description: "Claims lists the names of resources, defined
                              in spec.resourceClaims, that are used by this container.
                              \n This is an alpha field and requires enabling the
                              DynamicResourceAllocation feature gate. \n This field
                              is immutable. It can only be set for containers."
                            items:
                              description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                              properties:
                                name:
                                  description: Name must match the name of one entry
                                    in pod.spec.resourceClaims of the Pod where this
                                    field is used. It makes that resource available
                                    inside a container.
                                  type: string
                              required:
                              - name
                              type: object
                            type: array
                            x-kubernetes-list-map-keys:
                            - name
                            x-kubernetes-list-type: map
                          limits:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Limits describes the maximum amount of compute
                              resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                          requests:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Requests describes the minimum amount of
                              compute resources required. If Requests is omitted for
                              a container, it defaults to Limits if that is explicitly
                              specified, otherwise to an implementation-defined value.
                              Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                        type: object
                      tolerations:
                        items:
                          description: The pod this Toleration is attached to tolerates
                            any taint that matches the triple <key,value,effect> using
                            the matching operator <operator>.
                          properties:
                            effect:
                              description: Effect indicates the taint effect to match.
                                Empty means match all taint effects. When specified,
                                allowed values are NoSchedule, PreferNoSchedule and
                                NoExecute.
                              type: string
                            key:
                              description: Key is the taint key that the toleration
                                applies to. Empty means match all taint keys. If the
                                key is empty, operator must be Exists; this combination
                                means to match all values and all keys.
                              type: string
                            operator:
                              description: Operator represents a key's relationship
                                to the value. Valid operators are Exists and Equal.
                                Defaults to Equal. Exists is equivalent to wildcard
                                for value, so that a pod can tolerate all taints of
                                a particular category.
                              type: string
                            tolerationSeconds:
                              description: TolerationSeconds represents the period
                                of time the toleration (which must be of effect NoExecute,
                                otherwise this field is ignored) tolerates the taint.
                                By default, it is not set, which means tolerate the
                                taint forever (do not evict). Zero and negative values
                                will be treated as 0 (evict immediately) by the system.
                              format: int64
                              type: integer
                            value:
                              description: Value is the taint value the toleration
                                matches to. If the operator is Exists, the value should
                                be empty, otherwise just a regular string.
                              type: string
                          type: object
                        type: array
                    type: object
                  etcd:
                    description: Etcd configures the etcd ring used to store Kubernetes
                      data.
                    properties:
                      clusterSize:
                        description: ClusterSize is the number of replicas created
                          for etcd. This should be an odd number to guarantee consensus,
                          e.g. 3, 5 or 7.
                        format: int32
                        type: integer
                      diskSize:
                        anyOf:
                        - type: integer
                        - type: string
                        description: DiskSize is the volume size used when creating
                          persistent storage from the configured StorageClass. This
                          is inherited from KubermaticConfiguration if not set. Defaults
                          to 5Gi.
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                      hostAntiAffinity:
                        description: HostAntiAffinity allows to enforce a certain
                          type of host anti-affinity on etcd pods. Options are "preferred"
                          (default) and "required". Please note that enforcing anti-affinity
                          via "required" can mean that pods are never scheduled.
                        enum:
                        - ""
                        - preferred
                        - required
                        type: string
                      resources:
                        description: Resources allows to override the resource requirements
                          for etcd Pods.
                        properties:
                          claims:
                            description: "Claims lists the names of resources, defined
                              in spec.resourceClaims, that are used by this container.
                              \n This is an alpha field and requires enabling the
                              DynamicResourceAllocation feature gate. \n This field
                              is immutable. It can only be set for containers."
                            items:
                              description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                              properties:
                                name:
                                  description: Name must match the name of one entry
                                    in pod.spec.resourceClaims of the Pod where this
                                    field is used. It makes that resource available
                                    inside a container.
                                  type: string
                              required:
                              - name
                              type: object
                            type: array
                            x-kubernetes-list-map-keys:
                            - name
                            x-kubernetes-list-type: map
                          limits:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Limits describes the maximum amount of compute
                              resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                          requests:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Requests describes the minimum amount of
                              compute resources required. If Requests is omitted for
                              a container, it defaults to Limits if that is explicitly
                              specified, otherwise to an implementation-defined value.
                              Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                        type: object
                      storageClass:
                        description: StorageClass is the Kubernetes StorageClass used
                          for persistent storage which stores the etcd WAL and other
                          data persisted across restarts. Defaults to `kubermatic-fast`
                          (the global default).
                        type: string
                      tolerations:
                        description: Tolerations allows to override the scheduling
                          tolerations for etcd Pods.
                        items:
                          description: The pod this Toleration is attached to tolerates
                            any taint that matches the triple <key,value,effect> using
                            the matching operator <operator>.
                          properties:
                            effect:
                              description: Effect indicates the taint effect to match.
                                Empty means match all taint effects. When specified,
                                allowed values are NoSchedule, PreferNoSchedule and
                                NoExecute.
                              type: string
                            key:
                              description: Key is the taint key that the toleration
                                applies to. Empty means match all taint keys. If the
                                key is empty, operator must be Exists; this combination
                                means to match all values and all keys.
                              type: string
                            operator:
                              description: Operator represents a key's relationship
                                to the value. Valid operators are Exists and Equal.
                                Defaults to Equal. Exists is equivalent to wildcard
                                for value, so that a pod can tolerate all taints of
                                a particular category.
                              type: string
                            tolerationSeconds:
                              description: TolerationSeconds represents the period
                                of time the toleration (which must be of effect NoExecute,
                                otherwise this field is ignored) tolerates the taint.
                                By default, it is not set, which means tolerate the
                                taint forever (do not evict). Zero and negative values
                                will be treated as 0 (evict immediately) by the system.
                              format: int64
                              type: integer
                            value:
                              description: Value is the taint value the toleration
                                matches to. If the operator is Exists, the value should
                                be empty, otherwise just a regular string.
                              type: string
                          type: object
                        type: array
                      zoneAntiAffinity:
                        description: ZoneAntiAffinity allows to enforce a certain
                          type of availability zone anti-affinity on etcd pods. Options
                          are "preferred" (default) and "required". Please note that
                          enforcing anti-affinity via "required" can mean that pods
                          are never scheduled.
                        enum:
                        - ""
                        - preferred
                        - required
                        type: string
                    type: object
                  konnectivityProxy:
                    description: KonnectivityProxy configures konnectivity-server
                      and konnectivity-agent components.
                    properties:
                      keepaliveTime:
                        description: KeepaliveTime represents a duration of time to
                          check if the transport is still alive. The option is propagated
                          to agents and server. Defaults to 1m.
                        type: string
                      resources:
                        description: Resources configure limits/requests for Konnectivity
                          components.
                        properties:
                          claims:
                            description: "Claims lists the names of resources, defined
                              in spec.resourceClaims, that are used by this container.
                              \n This is an alpha field and requires enabling the
                              DynamicResourceAllocation feature gate. \n This field
                              is immutable. It can only be set for containers."
                            items:
                              description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                              properties:
                                name:
                                  description: Name must match the name of one entry
                                    in pod.spec.resourceClaims of the Pod where this
                                    field is used. It makes that resource available
                                    inside a container.
                                  type: string
                              required:
                              - name
                              type: object
                            type: array
                            x-kubernetes-list-map-keys:
                            - name
                            x-kubernetes-list-type: map
                          limits:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Limits describes the maximum amount of compute
                              resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                          requests:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Requests describes the minimum amount of
                              compute resources required. If Requests is omitted for
                              a container, it defaults to Limits if that is explicitly
                              specified, otherwise to an implementation-defined value.
                              Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                        type: object
                    type: object
                  nodePortProxyEnvoy:
                    description: NodePortProxyEnvoy configures the per-cluster nodeport-proxy-envoy
                      that is deployed if the `LoadBalancer` expose strategy is used.
                      This is not effective if a different expose strategy is configured.
                    properties:
                      dockerRepository:
                        description: DockerRepository is the repository containing
                          the component's image.
                        type: string
                      resources:
                        description: Resources describes the requested and maximum
                          allowed CPU/memory usage.
                        properties:
                          claims:
                            description: "Claims lists the names of resources, defined
                              in spec.resourceClaims, that are used by this container.
                              \n This is an alpha field and requires enabling the
                              DynamicResourceAllocation feature gate. \n This field
                              is immutable. It can only be set for containers."
                            items:
                              description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                              properties:
                                name:
                                  description: Name must match the name of one entry
                                    in pod.spec.resourceClaims of the Pod where this
                                    field is used. It makes that resource available
                                    inside a container.
                                  type: string
                              required:
                              - name
                              type: object
                            type: array
                            x-kubernetes-list-map-keys:
                            - name
                            x-kubernetes-list-type: map
                          limits:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Limits describes the maximum amount of compute
                              resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                          requests:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Requests describes the minimum amount of
                              compute resources required. If Requests is omitted for
                              a container, it defaults to Limits if that is explicitly
                              specified, otherwise to an implementation-defined value.
                              Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                        type: object
                    type: object
                  prometheus:
                    description: Prometheus configures the Prometheus instance deployed
                      into the cluster control plane.
                    properties:
                      resources:
                        description: ResourceRequirements describes the compute resource
                          requirements.
                        properties:
                          claims:
                            description: "Claims lists the names of resources, defined
                              in spec.resourceClaims, that are used by this container.
                              \n This is an alpha field and requires enabling the
                              DynamicResourceAllocation feature gate. \n This field
                              is immutable. It can only be set for containers."
                            items:
                              description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                              properties:
                                name:
                                  description: Name must match the name of one entry
                                    in pod.spec.resourceClaims of the Pod where this
                                    field is used. It makes that resource available
                                    inside a container.
                                  type: string
                              required:
                              - name
                              type: object
                            type: array
                            x-kubernetes-list-map-keys:
                            - name
                            x-kubernetes-list-type: map
                          limits:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Limits describes the maximum amount of compute
                              resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                          requests:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Requests describes the minimum amount of
                              compute resources required. If Requests is omitted for
                              a container, it defaults to Limits if that is explicitly
                              specified, otherwise to an implementation-defined value.
                              Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                        type: object
                    type: object
                  scheduler:
                    description: Scheduler configures kube-scheduler settings.
                    properties:
                      leaderElection:
                        properties:
                          leaseDurationSeconds:
                            description: LeaseDurationSeconds is the duration in seconds
                              that non-leader candidates will wait to force acquire
                              leadership. This is measured against time of last observed
                              ack.
                            format: int32
                            type: integer
                          renewDeadlineSeconds:
                            description: RenewDeadlineSeconds is the duration in seconds
                              that the acting controlplane will retry refreshing leadership
                              before giving up.
                            format: int32
                            type: integer
                          retryPeriodSeconds:
                            description: RetryPeriodSeconds is the duration in seconds
                              the LeaderElector clients should wait between tries
                              of actions.
                            format: int32
                            type: integer
                        type: object
                      replicas:
                        format: int32
                        type: integer
                      resources:
                        description: ResourceRequirements describes the compute resource
                          requirements.
                        properties:
                          claims:
                            description: "Claims lists the names of resources, defined
                              in spec.resourceClaims, that are used by this container.
                              \n This is an alpha field and requires enabling the
                              DynamicResourceAllocation feature gate. \n This field
                              is immutable. It can only be set for containers."
                            items:
                              description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                              properties:
                                name:
                                  description: Name must match the name of one entry
                                    in pod.spec.resourceClaims of the Pod where this
                                    field is used. It makes that resource available
                                    inside a container.
                                  type: string
                              required:
                              - name
                              type: object
                            type: array
                            x-kubernetes-list-map-keys:
                            - name
                            x-kubernetes-list-type: map
                          limits:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Limits describes the maximum amount of compute
                              resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                          requests:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Requests describes the minimum amount of
                              compute resources required. If Requests is omitted for
                              a container, it defaults to Limits if that is explicitly
                              specified, otherwise to an implementation-defined value.
                              Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                        type: object
                      tolerations:
                        items:
                          description: The pod this Toleration is attached to tolerates
                            any taint that matches the triple <key,value,effect> using
                            the matching operator <operator>.
                          properties:
                            effect:
                              description: Effect indicates the taint effect to match.
                                Empty means match all taint effects. When specified,
                                allowed values are NoSchedule, PreferNoSchedule and
                                NoExecute.
                              type: string
                            key:
                              description: Key is the taint key that the toleration
                                applies to. Empty means match all taint keys. If the
                                key is empty, operator must be Exists; this combination
                                means to match all values and all keys.
                              type: string
                            operator:
                              description: Operator represents a key's relationship
                                to the value. Valid operators are Exists and Equal.
                                Defaults to Equal. Exists is equivalent to wildcard
                                for value, so that a pod can tolerate all taints of
                                a particular category.
                              type: string
                            tolerationSeconds:
                              description: TolerationSeconds represents the period
                                of time the toleration (which must be of effect NoExecute,
                                otherwise this field is ignored) tolerates the taint.
                                By default, it is not set, which means tolerate the
                                taint forever (do not evict). Zero and negative values
                                will be treated as 0 (evict immediately) by the system.
                              format: int64
                              type: integer
                            value:
                              description: Value is the taint value the toleration
                                matches to. If the operator is Exists, the value should
                                be empty, otherwise just a regular string.
                              type: string
                          type: object
                        type: array
                    type: object
                  userClusterController:
                    description: UserClusterController configures the KKP usercluster-controller
                      deployed as part of the cluster control plane.
                    properties:
                      leaderElection:
                        properties:
                          leaseDurationSeconds:
                            description: LeaseDurationSeconds is the duration in seconds
                              that non-leader candidates will wait to force acquire
                              leadership. This is measured against time of last observed
                              ack.
                            format: int32
                            type: integer
                          renewDeadlineSeconds:
                            description: RenewDeadlineSeconds is the duration in seconds
                              that the acting controlplane will retry refreshing leadership
                              before giving up.
                            format: int32
                            type: integer
                          retryPeriodSeconds:
                            description: RetryPeriodSeconds is the duration in seconds
                              the LeaderElector clients should wait between tries
                              of actions.
                            format: int32
                            type: integer
                        type: object
                      replicas:
                        format: int32
                        type: integer
                      resources:
                        description: ResourceRequirements describes the compute resource
                          requirements.
                        properties:
                          claims:
                            description: "Claims lists the names of resources, defined
                              in spec.resourceClaims, that are used by this container.
                              \n This is an alpha field and requires enabling the
                              DynamicResourceAllocation feature gate. \n This field
                              is immutable. It can only be set for containers."
                            items:
                              description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                              properties:
                                name:
                                  description: Name must match the name of one entry
                                    in pod.spec.resourceClaims of the Pod where this
                                    field is used. It makes that resource available
                                    inside a container.
                                  type: string
                              required:
                              - name
                              type: object
                            type: array
                            x-kubernetes-list-map-keys:
                            - name
                            x-kubernetes-list-type: map
                          limits:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Limits describes the maximum amount of compute
                              resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                          requests:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Requests describes the minimum amount of
                              compute resources required. If Requests is omitted for
                              a container, it defaults to Limits if that is explicitly
                              specified, otherwise to an implementation-defined value.
                              Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                        type: object
                      tolerations:
                        items:
                          description: The pod this Toleration is attached to tolerates
                            any taint that matches the triple <key,value,effect> using
                            the matching operator <operator>.
                          properties:
                            effect:
                              description: Effect indicates the taint effect to match.
                                Empty means match all taint effects. When specified,
                                allowed values are NoSchedule, PreferNoSchedule and
                                NoExecute.
                              type: string
                            key:
                              description: Key is the taint key that the toleration
                                applies to. Empty means match all taint keys. If the
                                key is empty, operator must be Exists; this combination
                                means to match all values and all keys.
                              type: string
                            operator:
                              description: Operator represents a key's relationship
                                to the value. Valid operators are Exists and Equal.
                                Defaults to Equal. Exists is equivalent to wildcard
                                for value, so that a pod can tolerate all taints of
                                a particular category.
                              type: string
                            tolerationSeconds:
                              description: TolerationSeconds represents the period
                                of time the toleration (which must be of effect NoExecute,
                                otherwise this field is ignored) tolerates the taint.
                                By default, it is not set, which means tolerate the
                                taint forever (do not evict). Zero and negative values
                                will be treated as 0 (evict immediately) by the system.
                              format: int64
                              type: integer
                            value:
                              description: Value is the taint value the toleration
                                matches to. If the operator is Exists, the value should
                                be empty, otherwise just a regular string.
                              type: string
                          type: object
                        type: array
                    type: object
                required:
                - apiserver
                - controllerManager
                - etcd
                - nodePortProxyEnvoy
                - prometheus
                - scheduler
                type: object
              containerRuntime:
                default: containerd
                description: ContainerRuntime to use, i.e. `docker` or `containerd`.
                  By default `containerd` will be used.
                enum:
                - docker
                - containerd
                type: string
              debugLog:
                description: Enables more verbose logging in KKP's user-cluster-controller-manager.
                type: boolean
              disableCsiDriver:
                description: 'Optional: DisableCSIDriver disables the installation
                  of CSI driver on the cluster If this is true at the data center
                  then it can''t be over-written in the cluster configuration'
                type: boolean
              enableOperatingSystemManager:
                description: 'Optional: Enables operating-system-manager (OSM), which
                  is responsible for creating and managing worker node configuration.
                  This field is enabled(true) by default.'
                type: boolean
              enableUserSSHKeyAgent:
                description: 'Optional: Deploys the UserSSHKeyAgent to the user cluster.
                  This field is immutable. If enabled, the agent will be deployed
                  and used to sync user ssh keys attached by users to the cluster.
                  No SSH keys will be synced after node creation if this is disabled.'
                type: boolean
              encryptionConfiguration:
                description: 'Optional: Configures encryption-at-rest for Kubernetes
                  API data. This needs the `encryptionAtRest` feature gate.'
                properties:
                  enabled:
                    description: Enables encryption-at-rest on this cluster.
                    type: boolean
                  resources:
                    description: List of resources that will be stored encrypted in
                      etcd.
                    items:
                      type: string
                    minItems: 1
                    type: array
                  secretbox:
                    description: 'Configuration for the `secretbox` static key encryption
                      scheme as supported by Kubernetes. More info: https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/#providers'
                    properties:
                      keys:
                        description: List of 'secretbox' encryption keys. The first
                          element of this list is considered the "primary" key which
                          will be used for encrypting data while writing it. Additional
                          keys will be used for decrypting data while reading it,
                          if keys higher in the list did not succeed in decrypting
                          it.
                        items:
                          description: SecretboxKey stores a key or key reference
                            for encrypting Kubernetes API data at rest with a static
                            key.
                          properties:
                            name:
                              description: Identifier of a key, used in various places
                                to refer to the key.
                              type: string
                            secretRef:
                              description: Instead of passing the sensitive encryption
                                key via the `value` field, a secret can be referenced.
                                The key of the secret referenced here needs to hold
                                a key equivalent to the `value` field.
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                              x-kubernetes-map-type: atomic
                            value:
                              description: Value contains a 32-byte random key that
                                is base64 encoded. This is the key used for encryption.
                                Can be generated via `head -c 32 /dev/urandom | base64`,
                                for example.
                              type: string
                          required:
                          - name
                          type: object
                        minItems: 1
                        type: array
                    required:
                    - keys
                    type: object
                required:
                - enabled
                - resources
                type: object
              eventRateLimitConfig:
                description: 'Optional: Configures the EventRateLimit admission plugin
                  (if enabled via `useEventRateLimitAdmissionPlugin`) to create limits
                  on Kubernetes event generation. The EventRateLimit plugin is capable
                  of comparing and rate limiting incoming `Events` based on several
                  configured buckets.'
                properties:
                  namespace:
                    properties:
                      burst:
                        format: int32
                        type: integer
                      cacheSize:
                        format: int32
                        type: integer
                      qps:
                        format: int32
                        type: integer
                    required:
                    - burst
                    - qps
                    type: object
                  server:
                    properties:
                      burst:
                        format: int32
                        type: integer
                      cacheSize:
                        format: int32
                        type: integer
                      qps:
                        format: int32
                        type: integer
                    required:
                    - burst
                    - qps
                    type: object
                  sourceAndObject:
                    properties:
                      burst:
                        format: int32
                        type: integer
                      cacheSize:
                        format: int32
                        type: integer
                      qps:
                        format: int32
                        type: integer
                    required:
                    - burst
                    - qps
                    type: object
                  user:
                    properties:
                      burst:
                        format: int32
                        type: integer
                      cacheSize:
                        format: int32
                        type: integer
                      qps:
                        format: int32
                        type: integer
                    required:
                    - burst
                    - qps
                    type: object
                type: object
              exposeStrategy:
                description: ExposeStrategy is the strategy used to expose a cluster
                  control plane.
                enum:
                - NodePort
                - LoadBalancer
                - Tunneling
                type: string
              features:
                additionalProperties:
                  type: boolean
                description: A map of optional or early-stage features that can be
                  enabled for the user cluster. Some feature gates cannot be disabled
                  after being enabled. The available feature gates vary based on KKP
                  version, Kubernetes version and Seed configuration. Please consult
                  the KKP documentation for specific feature gates.
                type: object
              humanReadableName:
                description: HumanReadableName is the cluster name provided by the
                  user.
                type: string
              imagePullSecret:
                description: 'Optional: ImagePullSecret references a secret with container
                  registry credentials. This is passed to the machine-controller which
                  sets the registry credentials on node level.'
                properties:
                  name:
                    description: name is unique within a namespace to reference a
                      secret resource.
                    type: string
                  namespace:
                    description: namespace defines the space within which the secret
                      name must be unique.
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              kubelb:
                description: KubeLB holds the configuration for the kubeLB component.
                  Only available in Enterprise Edition.
                properties:
                  enabled:
                    description: Controls whether kubeLB is deployed or not.
                    type: boolean
                required:
                - enabled
                type: object
              kubernetesDashboard:
                description: KubernetesDashboard holds the configuration for the kubernetes-dashboard
                  component.
                properties:
                  enabled:
                    description: Controls whether kubernetes-dashboard is deployed
                      to the user cluster or not. Enabled by default.
                    type: boolean
                type: object
              machineNetworks:
                description: 'Optional: MachineNetworks is the list of the networking
                  parameters used for IPAM.'
                items:
                  description: MachineNetworkingConfig specifies the networking parameters
                    used for IPAM.
                  properties:
                    cidr:
                      type: string
                    dnsServers:
                      items:
                        type: string
                      type: array
                    gateway:
                      type: string
                  required:
                  - cidr
                  - dnsServers
                  - gateway
                  type: object
                type: array
              mla:
                description: 'Optional: MLA contains monitoring, logging and alerting
                  related settings for the user cluster.'
                properties:
                  loggingEnabled:
                    description: LoggingEnabled is the flag for enabling logging in
                      user cluster.
                    type: boolean
                  loggingResources:
                    description: LoggingResources is the resource requirements for
                      user cluster promtail.
                    properties:
                      claims:
                        description: "Claims lists the names of resources, defined
                          in spec.resourceClaims, that are used by this container.
                          \n This is an alpha field and requires enabling the DynamicResourceAllocation
                          feature gate. \n This field is immutable. It can only be
                          set for containers."
                        items:
                          description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                          properties:
                            name:
                              description: Name must match the name of one entry in
                                pod.spec.resourceClaims of the Pod where this field
                                is used. It makes that resource available inside a
                                container.
                              type: string
                          required:
                          - name
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Limits describes the maximum amount of compute
                          resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Requests describes the minimum amount of compute
                          resources required. If Requests is omitted for a container,
                          it defaults to Limits if that is explicitly specified, otherwise
                          to an implementation-defined value. Requests cannot exceed
                          Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                    type: object
                  monitoringEnabled:
                    description: MonitoringEnabled is the flag for enabling monitoring
                      in user cluster.
                    type: boolean
                  monitoringReplicas:
                    description: MonitoringReplicas is the number of desired pods
                      of user cluster prometheus deployment.
                    format: int32
                    type: integer
                  monitoringResources:
                    description: MonitoringResources is the resource requirements
                      for user cluster prometheus.
                    properties:
                      claims:
                        description: "Claims lists the names of resources, defined
                          in spec.resourceClaims, that are used by this container.
                          \n This is an alpha field and requires enabling the DynamicResourceAllocation
                          feature gate. \n This field is immutable. It can only be
                          set for containers."
                        items:
                          description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                          properties:
                            name:
                              description: Name must match the name of one entry in
                                pod.spec.resourceClaims of the Pod where this field
                                is used. It makes that resource available inside a
                                container.
                              type: string
                          required:
                          - name
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Limits describes the maximum amount of compute
                          resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Requests describes the minimum amount of compute
                          resources required. If Requests is omitted for a container,
                          it defaults to Limits if that is explicitly specified, otherwise
                          to an implementation-defined value. Requests cannot exceed
                          Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                    type: object
                type: object
              oidc:
                description: 'Optional: OIDC specifies the OIDC configuration parameters
                  for enabling authentication mechanism for the cluster.'
                properties:
                  clientID:
                    type: string
                  clientSecret:
                    type: string
                  extraScopes:
                    type: string
                  groupsClaim:
                    type: string
                  groupsPrefix:
                    type: string
                  issuerURL:
                    type: string
                  requiredClaim:
                    type: string
                  usernameClaim:
                    type: string
                  usernamePrefix:
                    type: string
                type: object
              opaIntegration:
                description: 'Optional: OPAIntegration is a preview feature that enables
                  OPA integration for the cluster. Enabling it causes OPA Gatekeeper
                  and its resources to be deployed on the user cluster. By default
                  it is disabled.'
                properties:
                  auditResources:
                    description: 'Optional: AuditResources is the resource requirements
                      for user cluster gatekeeper audit.'
                    properties:
                      claims:
                        description: "Claims lists the names of resources, defined
                          in spec.resourceClaims, that are used by this container.
                          \n This is an alpha field and requires enabling the DynamicResourceAllocation
                          feature gate. \n This field is immutable. It can only be
                          set for containers."
                        items:
                          description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                          properties:
                            name:
                              description: Name must match the name of one entry in
                                pod.spec.resourceClaims of the Pod where this field
                                is used. It makes that resource available inside a
                                container.
                              type: string
                          required:
                          - name
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Limits describes the maximum amount of compute
                          resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Requests describes the minimum amount of compute
                          resources required. If Requests is omitted for a container,
                          it defaults to Limits if that is explicitly specified, otherwise
                          to an implementation-defined value. Requests cannot exceed
                          Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                    type: object
                  controllerResources:
                    description: 'Optional: ControllerResources is the resource requirements
                      for user cluster gatekeeper controller.'
                    properties:
                      claims:
                        description: "Claims lists the names of resources, defined
                          in spec.resourceClaims, that are used by this container.
                          \n This is an alpha field and requires enabling the DynamicResourceAllocation
                          feature gate. \n This field is immutable. It can only be
                          set for containers."
                        items:
                          description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                          properties:
                            name:
                              description: Name must match the name of one entry in
                                pod.spec.resourceClaims of the Pod where this field
                                is used. It makes that resource available inside a
                                container.
                              type: string
                          required:
                          - name
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Limits describes the maximum amount of compute
                          resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Requests describes the minimum amount of compute
                          resources required. If Requests is omitted for a container,
                          it defaults to Limits if that is explicitly specified, otherwise
                          to an implementation-defined value. Requests cannot exceed
                          Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                    type: object
                  enabled:
                    description: Enables OPA Gatekeeper integration.
                    type: boolean
                  experimentalEnableMutation:
                    description: 'Optional: Enables experimental mutation in Gatekeeper.'
                    type: boolean
                  webhookTimeoutSeconds:
                    default: 10
                    description: The timeout in seconds that is set for the Gatekeeper
                      validating webhook admission review calls. Defaults to `10`
                      (seconds).
                    format: int32
                    type: integer
                type: object
              pause:
                default: false
                description: If this is set to true, the cluster will not be reconciled
                  by KKP. This indicates that the user needs to do some action to
                  resolve the pause.
                type: boolean
              pauseReason:
                description: PauseReason is the reason why the cluster is not being
                  managed. This field is for informational purpose only and can be
                  set by a user or a controller to communicate the reason for pausing
                  the cluster.
                type: string
              podNodeSelectorAdmissionPluginConfig:
                additionalProperties:
                  type: string
                description: 'Optional: Provides configuration for the PodNodeSelector
                  admission plugin (needs plugin enabled via `usePodNodeSelectorAdmissionPlugin`).
                  It''s used by the backend to create a configuration file for this
                  plugin. The key:value from this map is converted to <namespace>:<node-selectors-labels>
                  in the file. Use `clusterDefaultNodeSelector` as key to configure
                  a default node selector.'
                type: object
              serviceAccount:
                description: 'Optional: ServiceAccount contains service account related
                  settings for the user cluster''s kube-apiserver.'
                properties:
                  apiAudiences:
                    description: APIAudiences are the Identifiers of the API If this
                      is not specified, it will be set to a single element list containing
                      the issuer URL
                    items:
                      type: string
                    type: array
                  issuer:
                    description: Issuer is the identifier of the service account token
                      issuer If this is not specified, it will be set to the URL of
                      apiserver by default
                    type: string
                  tokenVolumeProjectionEnabled:
                    type: boolean
                type: object
              updateWindow:
                description: 'Optional: UpdateWindow configures automatic update systems
                  to respect a maintenance window for applying OS updates to nodes.
                  This is only respected on Flatcar nodes currently.'
                properties:
                  length:
                    description: Sets the length of the update window beginning with
                      the start time. This needs to be a valid duration as parsed
                      by Go's time.ParseDuration (https://pkg.go.dev/time#ParseDuration),
                      e.g. `2h`.
                    type: string
                  start:
                    description: Sets the start time of the update window. This can
                      be a time of day in 24h format, e.g. `22:30`, or a day of week
                      plus a time of day, for example `Mon 21:00`. Only short names
                      for week days are supported, i.e. `Mon`, `Tue`, `Wed`, `Thu`,
                      `Fri`, `Sat` and `Sun`.
                    type: string
                type: object
              useEventRateLimitAdmissionPlugin:
                description: Enables the admission plugin `EventRateLimit`. Needs
                  additional configuration via the `eventRateLimitConfig` field. This
                  plugin is considered "alpha" by Kubernetes.
                type: boolean
              usePodNodeSelectorAdmissionPlugin:
                description: Enables the admission plugin `PodNodeSelector`. Needs
                  additional configuration via the `podNodeSelectorAdmissionPluginConfig`
                  field.
                type: boolean
              usePodSecurityPolicyAdmissionPlugin:
                description: Enables the admission plugin `PodSecurityPolicy`. This
                  plugin is deprecated by Kubernetes.
                type: boolean
              version:
                description: Version defines the wanted version of the control plane.
                type: string
            required:
            - cloud
            - clusterNetwork
            - exposeStrategy
            - humanReadableName
            - version
            type: object
          status:
            description: Status contains reconciliation information for the cluster.
            properties:
              address:
                description: Address contains the IPs/URLs to access the cluster control
                  plane.
                properties:
                  adminToken:
                    description: AdminToken is the token for the kubeconfig, the user
                      can download
                    type: string
                  externalName:
                    description: ExternalName is the DNS name for this cluster
                    type: string
                  internalURL:
                    description: InternalName is the seed cluster internal absolute
                      DNS name to the API server
                    type: string
                  ip:
                    description: IP is the external IP under which the apiserver is
                      available
                    type: string
                  port:
                    description: Port is the port the API server listens on
                    format: int32
                    type: integer
                  url:
                    description: URL under which the Apiserver is available
                    type: string
                type: object
              conditions:
                additionalProperties:
                  properties:
                    kubermaticVersion:
                      description: KubermaticVersion current kubermatic version.
                      type: string
                    lastHeartbeatTime:
                      description: Last time we got an update on a given condition.
                      format: date-time
                      type: string
                    lastTransitionTime:
                      description: Last time the condition transit from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: Human readable message indicating details about
                        last transition.
                      type: string
                    reason:
                      description: (brief) reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                  required:
                  - kubermaticVersion
                  - lastHeartbeatTime
                  - status
                  type: object
                description: Conditions contains conditions the cluster is in, its
                  primary use case is status signaling between controllers or between
                  controllers and the API.
                type: object
              encryption:
                description: Encryption describes the status of the encryption-at-rest
                  feature for encrypted data in etcd.
                properties:
                  activeKey:
                    description: The current "primary" key used to encrypt data written
                      to etcd. Secondary keys that can be used for decryption (but
                      not encryption) might be configured in the ClusterSpec.
                    type: string
                  encryptedResources:
                    description: List of resources currently encrypted.
                    items:
                      type: string
                    type: array
                  phase:
                    description: The current phase of the encryption process. Can
                      be one of `Pending`, `Failed`, `Active` or `EncryptionNeeded`.
                      The `encryption_controller` logic will process the cluster based
                      on the current phase and issue necessary changes to make sure
                      encryption on the cluster is active and updated with what the
                      ClusterSpec defines.
                    enum:
                    - Pending
                    - Failed
                    - Active
                    - EncryptionNeeded
                    type: string
                required:
                - activeKey
                - encryptedResources
                - phase
                type: object
              errorMessage:
                description: ErrorMessage contains a default error message in case
                  the controller encountered an error. Will be reset if the error
                  was resolved.
                type: string
              errorReason:
                description: ErrorReason contains a error reason in case the controller
                  encountered an error. Will be reset if the error was resolved.
                enum:
                - InvalidConfiguration
                - UnsupportedChange
                - ReconcileError
                type: string
              extendedHealth:
                description: ExtendedHealth exposes information about the current
                  health state. Extends standard health status for new states.
                properties:
                  alertmanagerConfig:
                    enum:
                    - HealthStatusDown
                    - HealthStatusUp
                    - HealthStatusProvisioning
                    type: string
                  apiserver:
                    enum:
                    - HealthStatusDown
                    - HealthStatusUp
                    - HealthStatusProvisioning
                    type: string
                  applicationController:
                    enum:
                    - HealthStatusDown
                    - HealthStatusUp
                    - HealthStatusProvisioning
                    type: string
                  cloudProviderInfrastructure:
                    enum:
                    - HealthStatusDown
                    - HealthStatusUp
                    - HealthStatusProvisioning
                    type: string
                  controller:
                    enum:
                    - HealthStatusDown
                    - HealthStatusUp
                    - HealthStatusProvisioning
                    type: string
                  etcd:
                    enum:
                    - HealthStatusDown
                    - HealthStatusUp
                    - HealthStatusProvisioning
                    type: string
                  gatekeeperAudit:
                    enum:
                    - HealthStatusDown
                    - HealthStatusUp
                    - HealthStatusProvisioning
                    type: string
                  gatekeeperController:
                    enum:
                    - HealthStatusDown
                    - HealthStatusUp
                    - HealthStatusProvisioning
                    type: string
                  konnectivity:
                    enum:
                    - HealthStatusDown
                    - HealthStatusUp
                    - HealthStatusProvisioning
                    type: string
                  kubelb:
                    enum:
                    - HealthStatusDown
                    - HealthStatusUp
                    - HealthStatusProvisioning
                    type: string
                  kubernetesDashboard:
                    enum:
                    - HealthStatusDown
                    - HealthStatusUp
                    - HealthStatusProvisioning
                    type: string
                  logging:
                    enum:
                    - HealthStatusDown
                    - HealthStatusUp
                    - HealthStatusProvisioning
                    type: string
                  machineController:
                    enum:
                    - HealthStatusDown
                    - HealthStatusUp
                    - HealthStatusProvisioning
                    type: string
                  mlaGateway:
                    enum:
                    - HealthStatusDown
                    - HealthStatusUp
                    - HealthStatusProvisioning
                    type: string
                  monitoring:
                    enum:
                    - HealthStatusDown
                    - HealthStatusUp
                    - HealthStatusProvisioning
                    type: string
                  openvpn:
                    description: 'Deprecated: OpenVPN will be removed entirely in
                      the future.'
                    enum:
                    - HealthStatusDown
                    - HealthStatusUp
                    - HealthStatusProvisioning
                    type: string
                  operatingSystemManager:
                    enum:
                    - HealthStatusDown
                    - HealthStatusUp
                    - HealthStatusProvisioning
                    type: string
                  scheduler:
                    enum:
                    - HealthStatusDown
                    - HealthStatusUp
                    - HealthStatusProvisioning
                    type: string
                  userClusterControllerManager:
                    enum:
                    - HealthStatusDown
                    - HealthStatusUp
                    - HealthStatusProvisioning
                    type: string
                type: object
              inheritedLabels:
                additionalProperties:
                  type: string
                description: InheritedLabels are labels the cluster inherited from
                  the project. They are read-only for users.
                type: object
              lastProviderReconciliation:
                description: LastProviderReconciliation is the time when the cloud
                  provider resources were last fully reconciled (during normal cluster
                  reconciliation, KKP does not re-check things like security groups,
                  networks etc.).
                format: date-time
                type: string
              lastUpdated:
                description: 'Deprecated: LastUpdated contains the timestamp at which
                  the cluster was last modified. It is kept only for KKP 2.20 release
                  to not break the backwards-compatibility and not being set for KKP
                  higher releases.'
                format: date-time
                type: string
              namespaceName:
                description: NamespaceName defines the namespace the control plane
                  of this cluster is deployed in.
                type: string
              phase:
                description: Phase is a description of the current cluster status,
                  summarizing the various conditions, possible active updates etc.
                  This field is for informational purpose only and no logic should
                  be tied to the phase.
                enum:
                - Creating
                - Updating
                - Running
                - Terminating
                type: string
              resourceUsage:
                description: ResourceUsage shows the current usage of resources for
                  the cluster.
                properties:
                  cpu:
                    anyOf:
                    - type: integer
                    - type: string
                    description: CPU holds the quantity of CPU. For the format, please
                      check k8s.io/apimachinery/pkg/api/resource.Quantity.
                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                    x-kubernetes-int-or-string: true
                  memory:
                    anyOf:
                    - type: integer
                    - type: string
                    description: Memory represents the quantity of RAM size. For the
                      format, please check k8s.io/apimachinery/pkg/api/resource.Quantity.
                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                    x-kubernetes-int-or-string: true
                  storage:
                    anyOf:
                    - type: integer
                    - type: string
                    description: Storage represents the disk size. For the format,
                      please check k8s.io/apimachinery/pkg/api/resource.Quantity.
                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                    x-kubernetes-int-or-string: true
                type: object
              userEmail:
                description: UserEmail contains the email of the owner of this cluster.
                  During cluster creation only, this field will be used to bind the
                  `cluster-admin` `ClusterRole` to a cluster owner.
                type: string
              userName:
                description: 'Deprecated: UserName contains the name of the owner
                  of this cluster. This field is not actively used and will be removed
                  in the future.'
                type: string
              versions:
                description: Versions contains information regarding the current and
                  desired versions of the cluster control plane and worker nodes.
                properties:
                  apiserver:
                    description: Apiserver is the currently desired version of the
                      kube-apiserver. During upgrades across multiple minor versions
                      (e.g. from 1.20 to 1.23), this will gradually be increased by
                      the update-controller until the desired cluster version (spec.version)
                      is reached.
                    type: string
                  controlPlane:
                    description: ControlPlane is the currently active cluster version.
                      This can lag behind the apiserver version if an update is currently
                      rolling out.
                    type: string
                  controllerManager:
                    description: ControllerManager is the currently desired version
                      of the kube-controller-manager. This field behaves the same
                      as the apiserver field.
                    type: string
                  oldestNodeVersion:
                    description: OldestNodeVersion is the oldest node version currently
                      in use inside the cluster. This can be nil if there are no nodes.
                      This field is primarily for speeding up reconciling, so that
                      the controller doesn't have to re-fetch to the usercluster and
                      query its node on every reconciliation.
                    type: string
                  scheduler:
                    description: Scheduler is the currently desired version of the
                      kube-scheduler. This field behaves the same as the apiserver
                      field.
                    type: string
                required:
                - apiserver
                - controlPlane
                - controllerManager
                - scheduler
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: kubermatic-operator/templates/crds.tpl
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    app.kubernetes.io/version: v2.24.5
    controller-gen.kubebuilder.io/version: v0.13.0
    helm.sh/resource-policy: keep
    kubermatic.k8c.io/location: master,seed
  labels:
    app.kubernetes.io/component: operator
    app.kubernetes.io/instance: my-kubermatic-operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubermatic-operator
    app.kubernetes.io/version: v2.24.5
    helm.sh/chart: kubermatic-operator-v2.24.5
  name: clustertemplateinstances.kubermatic.k8c.io
spec:
  group: kubermatic.k8c.io
  names:
    kind: ClusterTemplateInstance
    listKind: ClusterTemplateInstanceList
    plural: clustertemplateinstances
    singular: clustertemplateinstance
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.projectID
      name: ProjectID
      type: string
    - jsonPath: .spec.clusterTemplateID
      name: ClusterTemplateID
      type: string
    - jsonPath: .spec.replicas
      name: Replicas
      type: integer
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1
    schema:
      openAPIV3Schema:
        description: ClusterTemplateInstance is the object representing a cluster
          template instance.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Spec specifies the data for cluster instances.
            properties:
              clusterTemplateID:
                type: string
              clusterTemplateName:
                type: string
              projectID:
                type: string
              replicas:
                format: int64
                type: integer
            required:
            - clusterTemplateID
            - clusterTemplateName
            - projectID
            - replicas
            type: object
        type: object
    served: true
    storage: true
    subresources: {}
---
# Source: kubermatic-operator/templates/crds.tpl
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    app.kubernetes.io/version: v2.24.5
    controller-gen.kubebuilder.io/version: v0.13.0
    helm.sh/resource-policy: keep
    kubermatic.k8c.io/location: master,seed
  labels:
    app.kubernetes.io/component: operator
    app.kubernetes.io/instance: my-kubermatic-operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubermatic-operator
    app.kubernetes.io/version: v2.24.5
    helm.sh/chart: kubermatic-operator-v2.24.5
  name: clustertemplates.kubermatic.k8c.io
spec:
  group: kubermatic.k8c.io
  names:
    kind: ClusterTemplate
    listKind: ClusterTemplateList
    plural: clustertemplates
    singular: clustertemplate
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.humanReadableName
      name: HumanReadableName
      type: string
    - jsonPath: .spec.version
      name: Version
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1
    schema:
      openAPIV3Schema:
        description: ClusterTemplate is the object representing a cluster template.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          clusterLabels:
            additionalProperties:
              type: string
            type: object
          credential:
            type: string
          inheritedClusterLabels:
            additionalProperties:
              type: string
            type: object
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Spec describes the desired state of a user cluster.
            properties:
              admissionPlugins:
                description: A list of arbitrary admission plugin names that are passed
                  to kube-apiserver. Must not include admission plugins that can be
                  enabled via a separate setting.
                items:
                  type: string
                type: array
              apiServerAllowedIPRanges:
                description: 'Optional: APIServerAllowedIPRanges is a list of IP ranges
                  allowed to access the API server. Applicable only if the expose
                  strategy of the cluster is LoadBalancer. If not configured, access
                  to the API server is unrestricted.'
                properties:
                  cidrBlocks:
                    items:
                      type: string
                    type: array
                required:
                - cidrBlocks
                type: object
              applicationSettings:
                description: 'Optional: ApplicationSettings contains the settings
                  relative to the application feature.'
                properties:
                  cacheSize:
                    anyOf:
                    - type: integer
                    - type: string
                    description: CacheSize is the size of the cache used to download
                      application's sources.
                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                    x-kubernetes-int-or-string: true
                type: object
              auditLogging:
                description: 'Optional: AuditLogging configures Kubernetes API audit
                  logging (https://kubernetes.io/docs/tasks/debug-application-cluster/audit/)
                  for the user cluster.'
                properties:
                  enabled:
                    description: Enabled will enable or disable audit logging.
                    type: boolean
                  policyPreset:
                    description: 'Optional: PolicyPreset can be set to utilize a pre-defined
                      set of audit policy rules.'
                    enum:
                    - ""
                    - metadata
                    - recommended
                    - minimal
                    type: string
                  sidecar:
                    description: 'Optional: Configures the fluent-bit sidecar deployed
                      alongside kube-apiserver.'
                    properties:
                      config:
                        description: AuditSidecarConfiguration defines custom configuration
                          for the fluent-bit sidecar deployed with a kube-apiserver.
                          Also see https://docs.fluentbit.io/manual/v/1.8/administration/configuring-fluent-bit/configuration-file.
                        properties:
                          filters:
                            items:
                              additionalProperties:
                                type: string
                              type: object
                            type: array
                          outputs:
                            items:
                              additionalProperties:
                                type: string
                              type: object
                            type: array
                          service:
                            additionalProperties:
                              type: string
                            type: object
                        type: object
                      resources:
                        description: ResourceRequirements describes the compute resource
                          requirements.
                        properties:
                          claims:
                            description: "Claims lists the names of resources, defined
                              in spec.resourceClaims, that are used by this container.
                              \n This is an alpha field and requires enabling the
                              DynamicResourceAllocation feature gate. \n This field
                              is immutable. It can only be set for containers."
                            items:
                              description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                              properties:
                                name:
                                  description: Name must match the name of one entry
                                    in pod.spec.resourceClaims of the Pod where this
                                    field is used. It makes that resource available
                                    inside a container.
                                  type: string
                              required:
                              - name
                              type: object
                            type: array
                            x-kubernetes-list-map-keys:
                            - name
                            x-kubernetes-list-type: map
                          limits:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Limits describes the maximum amount of compute
                              resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                          requests:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Requests describes the minimum amount of
                              compute resources required. If Requests is omitted for
                              a container, it defaults to Limits if that is explicitly
                              specified, otherwise to an implementation-defined value.
                              Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                        type: object
                    type: object
                type: object
              cloud:
                description: Cloud contains information regarding the cloud provider
                  that is responsible for hosting the cluster's workload.
                properties:
                  alibaba:
                    description: Alibaba defines the configuration data of the Alibaba.
                    properties:
                      accessKeyID:
                        description: The Access Key ID used to authenticate against
                          Alibaba.
                        type: string
                      accessKeySecret:
                        description: The Access Key Secret used to authenticate against
                          Alibaba.
                        type: string
                      credentialsReference:
                        description: GlobalObjectKeySelector is needed as we can not
                          use v1.SecretKeySelector because it is not cross namespace.
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: 'If referring to a piece of an object instead
                              of an entire object, this string should contain a valid
                              JSON/Go field access statement, such as desiredState.manifest.containers[2].
                              For example, if the object reference is to a container
                              within a pod, this would take on a value like: "spec.containers{name}"
                              (where "name" refers to the name of the container that
                              triggered the event) or if no container name is specified
                              "spec.containers[2]" (container with index 2 in this
                              pod). This syntax is chosen only to have some well-defined
                              way of referencing a part of an object. TODO: this design
                              is not final and this field is subject to change in
                              the future.'
                            type: string
                          key:
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                          resourceVersion:
                            description: 'Specific resourceVersion to which this reference
                              is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                    type: object
                  anexia:
                    description: Anexia defines the configuration data of the Anexia.
                    properties:
                      credentialsReference:
                        description: GlobalObjectKeySelector is needed as we can not
                          use v1.SecretKeySelector because it is not cross namespace.
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: 'If referring to a piece of an object instead
                              of an entire object, this string should contain a valid
                              JSON/Go field access statement, such as desiredState.manifest.containers[2].
                              For example, if the object reference is to a container
                              within a pod, this would take on a value like: "spec.containers{name}"
                              (where "name" refers to the name of the container that
                              triggered the event) or if no container name is specified
                              "spec.containers[2]" (container with index 2 in this
                              pod). This syntax is chosen only to have some well-defined
                              way of referencing a part of an object. TODO: this design
                              is not final and this field is subject to change in
                              the future.'
                            type: string
                          key:
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                          resourceVersion:
                            description: 'Specific resourceVersion to which this reference
                              is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                      token:
                        description: Token is used to authenticate with the Anexia
                          API.
                        type: string
                    type: object
                  aws:
                    description: AWS defines the configuration data of the Amazon
                      Web Services(AWS) cloud provider.
                    properties:
                      accessKeyID:
                        description: The Access key ID used to authenticate against
                          AWS.
                        type: string
                      assumeRoleARN:
                        description: Defines the ARN for an IAM role that should be
                          assumed when handling resources on AWS. It will be used
                          to acquire temporary security credentials using an STS AssumeRole
                          API operation whenever creating an AWS session.
                        type: string
                      assumeRoleExternalID:
                        description: An arbitrary string that may be needed when calling
                          the STS AssumeRole API operation. Using an external ID can
                          help to prevent the "confused deputy problem".
                        type: string
                      credentialsReference:
                        description: GlobalObjectKeySelector is needed as we can not
                          use v1.SecretKeySelector because it is not cross namespace.
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: 'If referring to a piece of an object instead
                              of an entire object, this string should contain a valid
                              JSON/Go field access statement, such as desiredState.manifest.containers[2].
                              For example, if the object reference is to a container
                              within a pod, this would take on a value like: "spec.containers{name}"
                              (where "name" refers to the name of the container that
                              triggered the event) or if no container name is specified
                              "spec.containers[2]" (container with index 2 in this
                              pod). This syntax is chosen only to have some well-defined
                              way of referencing a part of an object. TODO: this design
                              is not final and this field is subject to change in
                              the future.'
                            type: string
                          key:
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                          resourceVersion:
                            description: 'Specific resourceVersion to which this reference
                              is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                      disableIAMReconciling:
                        description: DisableIAMReconciling is used to disable reconciliation
                          for IAM related configuration. This is useful in air-gapped
                          setups where access to IAM service is not possible.
                        type: boolean
                      instanceProfileName:
                        type: string
                      nodePortsAllowedIPRange:
                        description: A CIDR range that will be used to allow access
                          to the node port range in the security group to. Only applies
                          if the security group is generated by KKP and not preexisting.
                          If NodePortsAllowedIPRange nor NodePortsAllowedIPRanges
                          is set, the node port range can be accessed from anywhere.
                        type: string
                      nodePortsAllowedIPRanges:
                        description: 'Optional: CIDR ranges that will be used to allow
                          access to the node port range in the security group to.
                          Only applies if the security group is generated by KKP and
                          not preexisting. If NodePortsAllowedIPRange nor NodePortsAllowedIPRanges
                          is set,  the node port range can be accessed from anywhere.'
                        properties:
                          cidrBlocks:
                            items:
                              type: string
                            type: array
                        required:
                        - cidrBlocks
                        type: object
                      roleARN:
                        description: The IAM role, the control plane will use. The
                          control plane will perform an assume-role
                        type: string
                      routeTableID:
                        type: string
                      secretAccessKey:
                        description: The Secret Access Key used to authenticate against
                          AWS.
                        type: string
                      securityGroupID:
                        type: string
                      vpcID:
                        type: string
                    required:
                    - instanceProfileName
                    - roleARN
                    - routeTableID
                    - securityGroupID
                    - vpcID
                    type: object
                  azure:
                    description: Azure defines the configuration data of the Microsoft
                      Azure cloud.
                    properties:
                      assignAvailabilitySet:
                        description: 'Optional: AssignAvailabilitySet determines whether
                          KKP creates and assigns an AvailabilitySet to machines.
                          Defaults to `true` internally if not set.'
                        type: boolean
                      availabilitySet:
                        description: An availability set that will be associated with
                          nodes created for this cluster. If this field is set to
                          empty string at cluster creation and `AssignAvailabilitySet`
                          is set to `true`, a new availability set will be created
                          and this field will be updated to the generated availability
                          set's name.
                        type: string
                      clientID:
                        description: The service principal used to access Azure. Can
                          be read from `credentialsReference` instead.
                        type: string
                      clientSecret:
                        description: The client secret corresponding to the given
                          service principal. Can be read from `credentialsReference`
                          instead.
                        type: string
                      credentialsReference:
                        description: CredentialsReference allows referencing a `Secret`
                          resource instead of passing secret data in this spec.
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: 'If referring to a piece of an object instead
                              of an entire object, this string should contain a valid
                              JSON/Go field access statement, such as desiredState.manifest.containers[2].
                              For example, if the object reference is to a container
                              within a pod, this would take on a value like: "spec.containers{name}"
                              (where "name" refers to the name of the container that
                              triggered the event) or if no container name is specified
                              "spec.containers[2]" (container with index 2 in this
                              pod). This syntax is chosen only to have some well-defined
                              way of referencing a part of an object. TODO: this design
                              is not final and this field is subject to change in
                              the future.'
                            type: string
                          key:
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                          resourceVersion:
                            description: 'Specific resourceVersion to which this reference
                              is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                      loadBalancerSKU:
                        description: LoadBalancerSKU sets the LB type that will be
                          used for the Azure cluster, possible values are "basic"
                          and "standard", if empty, "basic" will be used.
                        enum:
                        - standard
                        - basic
                        type: string
                      nodePortsAllowedIPRange:
                        description: A CIDR range that will be used to allow access
                          to the node port range in the security group to. Only applies
                          if the security group is generated by KKP and not preexisting.
                          If NodePortsAllowedIPRange nor NodePortsAllowedIPRanges
                          is set, the node port range can be accessed from anywhere.
                        type: string
                      nodePortsAllowedIPRanges:
                        description: 'Optional: CIDR ranges that will be used to allow
                          access to the node port range in the security group to.
                          Only applies if the security group is generated by KKP and
                          not preexisting. If NodePortsAllowedIPRange nor NodePortsAllowedIPRanges
                          is set,  the node port range can be accessed from anywhere.'
                        properties:
                          cidrBlocks:
                            items:
                              type: string
                            type: array
                        required:
                        - cidrBlocks
                        type: object
                      resourceGroup:
                        description: The resource group that will be used to look
                          up and create resources for the cluster in. If set to empty
                          string at cluster creation, a new resource group will be
                          created and this field will be updated to the generated
                          resource group's name.
                        type: string
                      routeTable:
                        description: The name of a route table associated with the
                          subnet referenced by `subnet`. If set to empty string at
                          cluster creation, a new route table will be created and
                          this field will be updated to the generated route table's
                          name. If no subnet is defined at cluster creation, this
                          field should be empty as well.
                        type: string
                      securityGroup:
                        description: The name of a security group associated with
                          the subnet referenced by `subnet`. If set to empty string
                          at cluster creation, a new security group will be created
                          and this field will be updated to the generated security
                          group's name. If no subnet is defined at cluster creation,
                          this field should be empty as well.
                        type: string
                      subnet:
                        description: The name of a subnet in the VNet referenced by
                          `vnet`. If set to empty string at cluster creation, a new
                          subnet will be created and this field will be updated to
                          the generated subnet's name. If no VNet is defined at cluster
                          creation, this field should be empty as well.
                        type: string
                      subscriptionID:
                        description: The Azure Subscription used for this cluster.
                          Can be read from `credentialsReference` instead.
                        type: string
                      tenantID:
                        description: The Azure Active Directory Tenant used for this
                          cluster. Can be read from `credentialsReference` instead.
                        type: string
                      vnet:
                        description: The name of the VNet resource used for setting
                          up networking in. If set to empty string at cluster creation,
                          a new VNet will be created and this field will be updated
                          to the generated VNet's name.
                        type: string
                      vnetResourceGroup:
                        description: 'Optional: Defines a second resource group that
                          will be used for VNet related resources instead. If left
                          empty, NO additional resource group will be created and
                          all VNet related resources use the resource group defined
                          by `resourceGroup`.'
                        type: string
                    required:
                    - availabilitySet
                    - loadBalancerSKU
                    - resourceGroup
                    - routeTable
                    - securityGroup
                    - subnet
                    - vnet
                    - vnetResourceGroup
                    type: object
                  bringyourown:
                    description: BringYourOwn defines the configuration data for a
                      Bring Your Own cluster.
                    type: object
                  dc:
                    description: DatacenterName states the name of a cloud provider
                      "datacenter" (defined in `Seed` resources) this cluster should
                      be deployed into.
                    type: string
                  digitalocean:
                    description: Digitalocean defines the configuration data of the
                      DigitalOcean cloud provider.
                    properties:
                      credentialsReference:
                        description: GlobalObjectKeySelector is needed as we can not
                          use v1.SecretKeySelector because it is not cross namespace.
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: 'If referring to a piece of an object instead
                              of an entire object, this string should contain a valid
                              JSON/Go field access statement, such as desiredState.manifest.containers[2].
                              For example, if the object reference is to a container
                              within a pod, this would take on a value like: "spec.containers{name}"
                              (where "name" refers to the name of the container that
                              triggered the event) or if no container name is specified
                              "spec.containers[2]" (container with index 2 in this
                              pod). This syntax is chosen only to have some well-defined
                              way of referencing a part of an object. TODO: this design
                              is not final and this field is subject to change in
                              the future.'
                            type: string
                          key:
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                          resourceVersion:
                            description: 'Specific resourceVersion to which this reference
                              is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                      token:
                        description: Token is used to authenticate with the DigitalOcean
                          API.
                        type: string
                    type: object
                  fake:
                    description: Fake is a dummy cloud provider that is only used
                      for testing purposes. Do not try to actually use it.
                    properties:
                      token:
                        type: string
                    type: object
                  gcp:
                    description: GCP defines the configuration data of the Google
                      Cloud Platform(GCP).
                    properties:
                      credentialsReference:
                        description: GlobalObjectKeySelector is needed as we can not
                          use v1.SecretKeySelector because it is not cross namespace.
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: 'If referring to a piece of an object instead
                              of an entire object, this string should contain a valid
                              JSON/Go field access statement, such as desiredState.manifest.containers[2].
                              For example, if the object reference is to a container
                              within a pod, this would take on a value like: "spec.containers{name}"
                              (where "name" refers to the name of the container that
                              triggered the event) or if no container name is specified
                              "spec.containers[2]" (container with index 2 in this
                              pod). This syntax is chosen only to have some well-defined
                              way of referencing a part of an object. TODO: this design
                              is not final and this field is subject to change in
                              the future.'
                            type: string
                          key:
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                          resourceVersion:
                            description: 'Specific resourceVersion to which this reference
                              is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                      network:
                        type: string
                      nodePortsAllowedIPRange:
                        description: A CIDR range that will be used to allow access
                          to the node port range in the firewall rules to. If NodePortsAllowedIPRange
                          nor NodePortsAllowedIPRanges is set, the node port range
                          can be accessed from anywhere.
                        type: string
                      nodePortsAllowedIPRanges:
                        description: 'Optional: CIDR ranges that will be used to allow
                          access to the node port range in the firewall rules to.
                          If NodePortsAllowedIPRange nor NodePortsAllowedIPRanges
                          is set,  the node port range can be accessed from anywhere.'
                        properties:
                          cidrBlocks:
                            items:
                              type: string
                            type: array
                        required:
                        - cidrBlocks
                        type: object
                      serviceAccount:
                        description: The Google Service Account (JSON format), encoded
                          with base64.
                        type: string
                      subnetwork:
                        type: string
                    required:
                    - network
                    - subnetwork
                    type: object
                  hetzner:
                    description: Hetzner defines the configuration data of the Hetzner
                      cloud.
                    properties:
                      credentialsReference:
                        description: GlobalObjectKeySelector is needed as we can not
                          use v1.SecretKeySelector because it is not cross namespace.
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: 'If referring to a piece of an object instead
                              of an entire object, this string should contain a valid
                              JSON/Go field access statement, such as desiredState.manifest.containers[2].
                              For example, if the object reference is to a container
                              within a pod, this would take on a value like: "spec.containers{name}"
                              (where "name" refers to the name of the container that
                              triggered the event) or if no container name is specified
                              "spec.containers[2]" (container with index 2 in this
                              pod). This syntax is chosen only to have some well-defined
                              way of referencing a part of an object. TODO: this design
                              is not final and this field is subject to change in
                              the future.'
                            type: string
                          key:
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                          resourceVersion:
                            description: 'Specific resourceVersion to which this reference
                              is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                      network:
                        description: Network is the pre-existing Hetzner network in
                          which the machines are running. While machines can be in
                          multiple networks, a single one must be chosen for the HCloud
                          CCM to work. If this is empty, the network configured on
                          the datacenter will be used.
                        type: string
                      token:
                        description: Token is used to authenticate with the Hetzner
                          cloud API.
                        type: string
                    type: object
                  kubevirt:
                    description: Kubevirt defines the configuration data of the KubeVirt.
                    properties:
                      credentialsReference:
                        description: GlobalObjectKeySelector is needed as we can not
                          use v1.SecretKeySelector because it is not cross namespace.
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: 'If referring to a piece of an object instead
                              of an entire object, this string should contain a valid
                              JSON/Go field access statement, such as desiredState.manifest.containers[2].
                              For example, if the object reference is to a container
                              within a pod, this would take on a value like: "spec.containers{name}"
                              (where "name" refers to the name of the container that
                              triggered the event) or if no container name is specified
                              "spec.containers[2]" (container with index 2 in this
                              pod). This syntax is chosen only to have some well-defined
                              way of referencing a part of an object. TODO: this design
                              is not final and this field is subject to change in
                              the future.'
                            type: string
                          key:
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                          resourceVersion:
                            description: 'Specific resourceVersion to which this reference
                              is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                      csiKubeconfig:
                        type: string
                      imageCloningEnabled:
                        description: ImageCloningEnabled flag enable/disable cloning
                          for a cluster.
                        type: boolean
                      infraStorageClasses:
                        description: 'Deprecated: in favor of StorageClasses. InfraStorageClasses
                          is a list of storage classes from KubeVirt infra cluster
                          that are used for initialization of user cluster storage
                          classes by the CSI driver kubevirt (hot pluggable disks)'
                        items:
                          type: string
                        type: array
                      kubeconfig:
                        description: The cluster's kubeconfig file, encoded with base64.
                        type: string
                      preAllocatedDataVolumes:
                        description: Custom Images are a good example of this use
                          case.
                        items:
                          properties:
                            annotations:
                              additionalProperties:
                                type: string
                              type: object
                            name:
                              type: string
                            size:
                              type: string
                            storageClass:
                              type: string
                            url:
                              type: string
                          required:
                          - name
                          - size
                          - storageClass
                          - url
                          type: object
                        type: array
                      storageClasses:
                        description: StorageClasses is a list of storage classes from
                          KubeVirt infra cluster that are used for initialization
                          of user cluster storage classes by the CSI driver kubevirt
                          (hot pluggable disks. It contains also some flag specifying
                          which one is the default one.
                        items:
                          properties:
                            isDefaultClass:
                              description: 'Optional: IsDefaultClass. If true, the
                                created StorageClass in the tenant cluster will be
                                annotated with: storageclass.kubernetes.io/is-default-class
                                : true If missing or false, annotation will be: storageclass.kubernetes.io/is-default-class
                                : false'
                              type: boolean
                            name:
                              type: string
                          required:
                          - name
                          type: object
                        type: array
                    type: object
                  nutanix:
                    description: Nutanix defines the configuration data of the Nutanix.
                    properties:
                      clusterName:
                        description: ClusterName is the Nutanix cluster that this
                          user cluster will be deployed to.
                        type: string
                      credentialsReference:
                        description: GlobalObjectKeySelector is needed as we can not
                          use v1.SecretKeySelector because it is not cross namespace.
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: 'If referring to a piece of an object instead
                              of an entire object, this string should contain a valid
                              JSON/Go field access statement, such as desiredState.manifest.containers[2].
                              For example, if the object reference is to a container
                              within a pod, this would take on a value like: "spec.containers{name}"
                              (where "name" refers to the name of the container that
                              triggered the event) or if no container name is specified
                              "spec.containers[2]" (container with index 2 in this
                              pod). This syntax is chosen only to have some well-defined
                              way of referencing a part of an object. TODO: this design
                              is not final and this field is subject to change in
                              the future.'
                            type: string
                          key:
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                          resourceVersion:
                            description: 'Specific resourceVersion to which this reference
                              is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                      csi:
                        description: NutanixCSIConfig for CSI driver that connects
                          to a prism element.
                        properties:
                          endpoint:
                            description: Prism Element Endpoint to access Nutanix
                              Prism Element for CSI driver.
                            type: string
                          fstype:
                            description: 'Optional: defaults to "xfs"'
                            type: string
                          password:
                            description: Prism Element Password for CSI driver.
                            type: string
                          port:
                            description: 'Optional: Port to use when connecting to
                              the Nutanix Prism Element endpoint (defaults to 9440).'
                            format: int32
                            type: integer
                          ssSegmentedIscsiNetwork:
                            description: 'Optional: defaults to "false".'
                            type: boolean
                          storageContainer:
                            description: 'Optional: defaults to "SelfServiceContainer".'
                            type: string
                          username:
                            description: Prism Element Username for CSI driver.
                            type: string
                        required:
                        - endpoint
                        type: object
                      password:
                        description: Password corresponding to the provided user.
                        type: string
                      projectName:
                        description: The name of the project that this cluster is
                          deployed into. If none is given, no project will be used.
                        type: string
                      proxyURL:
                        description: 'Optional: Used to configure a HTTP proxy to
                          access Nutanix Prism Central.'
                        type: string
                      username:
                        description: Username to access the Nutanix Prism Central
                          API.
                        type: string
                    required:
                    - clusterName
                    type: object
                  openstack:
                    description: Openstack defines the configuration data of an OpenStack
                      cloud.
                    properties:
                      applicationCredentialID:
                        type: string
                      applicationCredentialSecret:
                        type: string
                      cinderTopologyEnabled:
                        description: Flag to configure enablement of topology support
                          for the Cinder CSI plugin. This requires Nova and Cinder
                          to have matching availability zones configured.
                        type: boolean
                      credentialsReference:
                        description: GlobalObjectKeySelector is needed as we can not
                          use v1.SecretKeySelector because it is not cross namespace.
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: 'If referring to a piece of an object instead
                              of an entire object, this string should contain a valid
                              JSON/Go field access statement, such as desiredState.manifest.containers[2].
                              For example, if the object reference is to a container
                              within a pod, this would take on a value like: "spec.containers{name}"
                              (where "name" refers to the name of the container that
                              triggered the event) or if no container name is specified
                              "spec.containers[2]" (container with index 2 in this
                              pod). This syntax is chosen only to have some well-defined
                              way of referencing a part of an object. TODO: this design
                              is not final and this field is subject to change in
                              the future.'
                            type: string
                          key:
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                          resourceVersion:
                            description: 'Specific resourceVersion to which this reference
                              is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                      domain:
                        type: string
                      enableIngressHostname:
                        description: Enable the `enable-ingress-hostname` cloud provider
                          option on the Openstack CCM. Can only be used with the external
                          CCM and might be deprecated and removed in future versions
                          as it is considered a workaround for the PROXY protocol
                          to preserve client IPs.
                        type: boolean
                      floatingIPPool:
                        description: "FloatingIPPool holds the name of the public
                          network The public network is reachable from the outside
                          world and should provide the pool of IP addresses to choose
                          from. \n When specified, all worker nodes will receive a
                          public ip from this floating ip pool \n Note that the network
                          is external if the \"External\" field is set to true"
                        type: string
                      ingressHostnameSuffix:
                        description: Set a specific suffix for the hostnames used
                          for the PROXY protocol workaround that is enabled by EnableIngressHostname.
                          The suffix is set to `nip.io` by default. Can only be used
                          with the external CCM and might be deprecated and removed
                          in future versions as it is considered a workaround only.
                        type: string
                      ipv6SubnetID:
                        description: IPv6SubnetID holds the ID of the subnet used
                          for IPv6 networking. If not provided, a new subnet will
                          be created if IPv6 is enabled.
                        type: string
                      ipv6SubnetPool:
                        description: IPv6SubnetPool holds the name of the subnet pool
                          used for creating new IPv6 subnets. If not provided, the
                          default IPv6 subnet pool will be used.
                        type: string
                      network:
                        description: "Network holds the name of the internal network
                          When specified, all worker nodes will be attached to this
                          network. If not specified, a network, subnet & router will
                          be created. \n Note that the network is internal if the
                          \"External\" field is set to false"
                        type: string
                      nodePortsAllowedIPRange:
                        description: A CIDR range that will be used to allow access
                          to the node port range in the security group to. Only applies
                          if the security group is generated by KKP and not preexisting.
                          If NodePortsAllowedIPRange nor NodePortsAllowedIPRanges
                          is set, the node port range can be accessed from anywhere.
                        type: string
                      nodePortsAllowedIPRanges:
                        description: 'Optional: CIDR ranges that will be used to allow
                          access to the node port range in the security group to.
                          Only applies if the security group is generated by KKP and
                          not preexisting. If NodePortsAllowedIPRange nor NodePortsAllowedIPRanges
                          is set, the node port range can be accessed from anywhere.'
                        properties:
                          cidrBlocks:
                            items:
                              type: string
                            type: array
                        required:
                        - cidrBlocks
                        type: object
                      password:
                        type: string
                      project:
                        description: project, formally known as tenant.
                        type: string
                      projectID:
                        description: project id, formally known as tenantID.
                        type: string
                      routerID:
                        type: string
                      securityGroups:
                        type: string
                      subnetID:
                        type: string
                      token:
                        description: Used internally during cluster creation
                        type: string
                      useOctavia:
                        description: "Whether or not to use Octavia for LoadBalancer
                          type of Service implementation instead of using Neutron-LBaaS.
                          Attention:Openstack CCM use Octavia as default load balancer
                          implementation since v1.17.0 \n Takes precedence over the
                          'use_octavia' flag provided at datacenter level if both
                          are specified."
                        type: boolean
                      useToken:
                        type: boolean
                      username:
                        type: string
                    required:
                    - floatingIPPool
                    - network
                    - routerID
                    - securityGroups
                    - subnetID
                    type: object
                  packet:
                    description: Packet defines the configuration data of a Packet
                      cloud.
                    properties:
                      apiKey:
                        type: string
                      billingCycle:
                        type: string
                      credentialsReference:
                        description: GlobalObjectKeySelector is needed as we can not
                          use v1.SecretKeySelector because it is not cross namespace.
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: 'If referring to a piece of an object instead
                              of an entire object, this string should contain a valid
                              JSON/Go field access statement, such as desiredState.manifest.containers[2].
                              For example, if the object reference is to a container
                              within a pod, this would take on a value like: "spec.containers{name}"
                              (where "name" refers to the name of the container that
                              triggered the event) or if no container name is specified
                              "spec.containers[2]" (container with index 2 in this
                              pod). This syntax is chosen only to have some well-defined
                              way of referencing a part of an object. TODO: this design
                              is not final and this field is subject to change in
                              the future.'
                            type: string
                          key:
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                          resourceVersion:
                            description: 'Specific resourceVersion to which this reference
                              is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                      projectID:
                        type: string
                    required:
                    - billingCycle
                    type: object
                  providerName:
                    description: ProviderName is the name of the cloud provider used
                      for this cluster. This must match the given provider spec (e.g.
                      if the providerName is "aws", then the `aws` field must be set).
                    type: string
                  vmwareclouddirector:
                    description: VMwareCloudDirector defines the configuration data
                      of the VMware Cloud Director.
                    properties:
                      apiToken:
                        description: The VMware Cloud Director API token.
                        type: string
                      credentialsReference:
                        description: GlobalObjectKeySelector is needed as we can not
                          use v1.SecretKeySelector because it is not cross namespace.
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: 'If referring to a piece of an object instead
                              of an entire object, this string should contain a valid
                              JSON/Go field access statement, such as desiredState.manifest.containers[2].
                              For example, if the object reference is to a container
                              within a pod, this would take on a value like: "spec.containers{name}"
                              (where "name" refers to the name of the container that
                              triggered the event) or if no container name is specified
                              "spec.containers[2]" (container with index 2 in this
                              pod). This syntax is chosen only to have some well-defined
                              way of referencing a part of an object. TODO: this design
                              is not final and this field is subject to change in
                              the future.'
                            type: string
                          key:
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                          resourceVersion:
                            description: 'Specific resourceVersion to which this reference
                              is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                      csi:
                        description: Config for CSI driver
                        properties:
                          filesystem:
                            description: Filesystem to use for named disks, defaults
                              to "ext4"
                            type: string
                          storageProfile:
                            description: The name of the storage profile to use for
                              disks created by CSI driver
                            type: string
                        required:
                        - storageProfile
                        type: object
                      organization:
                        description: The name of organization to use.
                        type: string
                      ovdcNetwork:
                        description: The name of organizational virtual data center
                          network that will be associated with the VMs and vApp.
                        type: string
                      password:
                        description: The VMware Cloud Director user password.
                        type: string
                      username:
                        description: The VMware Cloud Director user name.
                        type: string
                      vapp:
                        description: VApp used for isolation of VMs and their associated
                          network
                        type: string
                      vdc:
                        description: The organizational virtual data center.
                        type: string
                    required:
                    - csi
                    - ovdcNetwork
                    type: object
                  vsphere:
                    description: VSphere defines the configuration data of the vSphere.
                    properties:
                      basePath:
                        description: 'Optional: BasePath configures a vCenter folder
                          path that KKP will create an individual cluster folder in.
                          If it''s an absolute path, the RootPath configured in the
                          datacenter will be ignored. If it is a relative path, the
                          BasePath part will be appended to the RootPath to construct
                          the full path. For both cases, the full folder structure
                          needs to exist. KKP will only try to create the cluster
                          folder.'
                        type: string
                      credentialsReference:
                        description: GlobalObjectKeySelector is needed as we can not
                          use v1.SecretKeySelector because it is not cross namespace.
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: 'If referring to a piece of an object instead
                              of an entire object, this string should contain a valid
                              JSON/Go field access statement, such as desiredState.manifest.containers[2].
                              For example, if the object reference is to a container
                              within a pod, this would take on a value like: "spec.containers{name}"
                              (where "name" refers to the name of the container that
                              triggered the event) or if no container name is specified
                              "spec.containers[2]" (container with index 2 in this
                              pod). This syntax is chosen only to have some well-defined
                              way of referencing a part of an object. TODO: this design
                              is not final and this field is subject to change in
                              the future.'
                            type: string
                          key:
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                          resourceVersion:
                            description: 'Specific resourceVersion to which this reference
                              is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                      datastore:
                        description: Datastore to be used for storing virtual machines
                          and as a default for dynamic volume provisioning, it is
                          mutually exclusive with DatastoreCluster.
                        type: string
                      datastoreCluster:
                        description: DatastoreCluster to be used for storing virtual
                          machines, it is mutually exclusive with Datastore.
                        type: string
                      folder:
                        description: Folder to be used to group the provisioned virtual
                          machines.
                        type: string
                      infraManagementUser:
                        description: This user will be used for everything except
                          cloud provider functionality
                        properties:
                          password:
                            type: string
                          username:
                            type: string
                        type: object
                      networks:
                        description: List of vSphere networks.
                        items:
                          type: string
                        type: array
                      password:
                        description: The vSphere user password.
                        type: string
                      resourcePool:
                        description: ResourcePool is used to manage resources such
                          as cpu and memory for vSphere virtual machines. The resource
                          pool should be defined on vSphere cluster level.
                        type: string
                      storagePolicy:
                        description: StoragePolicy to be used for storage provisioning
                        type: string
                      tags:
                        description: Tags represents the tags that are attached or
                          created on the cluster level, that are then propagated down
                          to the MachineDeployments. In order to attach tags on MachineDeployment,
                          users must create the tag on a cluster level first then
                          attach that tag on the MachineDeployment.
                        properties:
                          categoryID:
                            description: CategoryID is the id of the vsphere category
                              that the tag belongs to. If the category id is left
                              empty, the default category id for the cluster will
                              be used.
                            type: string
                          tags:
                            description: Tags represents the name of the created tags.
                            items:
                              type: string
                            type: array
                        required:
                        - tags
                        type: object
                      username:
                        description: The vSphere user name.
                        type: string
                      vmNetName:
                        description: 'The name of the vSphere network. Deprecated:
                          Use networks instead.'
                        type: string
                    required:
                    - infraManagementUser
                    - storagePolicy
                    type: object
                required:
                - dc
                - providerName
                type: object
              clusterNetwork:
                description: 'Optional: ClusterNetwork specifies the different networking
                  parameters for a cluster.'
                properties:
                  coreDNSReplicas:
                    description: CoreDNSReplicas is the number of desired pods of
                      user cluster coredns deployment.
                    format: int32
                    type: integer
                  dnsDomain:
                    description: Domain name for services.
                    type: string
                  ipFamily:
                    description: 'Optional: IP family used for cluster networking.
                      Supported values are "", "IPv4" or "IPv4+IPv6". Can be omitted
                      / empty if pods and services network ranges are specified. In
                      that case it defaults according to the IP families of the provided
                      network ranges. If neither ipFamily nor pods & services network
                      ranges are specified, defaults to "IPv4".'
                    enum:
                    - ""
                    - IPv4
                    - IPv4+IPv6
                    type: string
                  ipvs:
                    description: IPVS defines kube-proxy ipvs configuration options
                    properties:
                      strictArp:
                        default: true
                        description: StrictArp configure arp_ignore and arp_announce
                          to avoid answering ARP queries from kube-ipvs0 interface.
                          defaults to true.
                        type: boolean
                    type: object
                  konnectivityEnabled:
                    description: 'Deprecated: KonnectivityEnabled enables konnectivity
                      for controlplane to node network communication. As OpenVPN will
                      be removed in the future KKP versions, clusters with konnectivity
                      disabled will not be supported. All existing clusters with OpenVPN
                      should migrate to the Konnectivity.'
                    type: boolean
                  nodeCidrMaskSizeIPv4:
                    description: NodeCIDRMaskSizeIPv4 is the mask size used to address
                      the nodes within provided IPv4 Pods CIDR. It has to be larger
                      than the provided IPv4 Pods CIDR. Defaults to 24.
                    format: int32
                    type: integer
                  nodeCidrMaskSizeIPv6:
                    description: NodeCIDRMaskSizeIPv6 is the mask size used to address
                      the nodes within provided IPv6 Pods CIDR. It has to be larger
                      than the provided IPv6 Pods CIDR. Defaults to 64.
                    format: int32
                    type: integer
                  nodeLocalDNSCacheEnabled:
                    default: true
                    description: NodeLocalDNSCacheEnabled controls whether the NodeLocal
                      DNS Cache feature is enabled. Defaults to true.
                    type: boolean
                  pods:
                    description: The network ranges from which POD networks are allocated.
                      It can contain one IPv4 and/or one IPv6 CIDR. If both address
                      families are specified, the first one defines the primary address
                      family.
                    properties:
                      cidrBlocks:
                        items:
                          type: string
                        type: array
                    required:
                    - cidrBlocks
                    type: object
                  proxyMode:
                    default: ipvs
                    description: ProxyMode defines the kube-proxy mode ("ipvs" / "iptables"
                      / "ebpf"). Defaults to "ipvs". "ebpf" disables kube-proxy and
                      requires CNI support.
                    enum:
                    - ipvs
                    - iptables
                    - ebpf
                    type: string
                  services:
                    description: The network ranges from which service VIPs are allocated.
                      It can contain one IPv4 and/or one IPv6 CIDR. If both address
                      families are specified, the first one defines the primary address
                      family.
                    properties:
                      cidrBlocks:
                        items:
                          type: string
                        type: array
                    required:
                    - cidrBlocks
                    type: object
                  tunnelingAgentIP:
                    description: TunnelingAgentIP is the address used by the tunneling
                      agents
                    type: string
                required:
                - dnsDomain
                - pods
                - proxyMode
                - services
                type: object
              cniPlugin:
                description: 'Optional: CNIPlugin refers to the spec of the CNI plugin
                  used by the Cluster.'
                properties:
                  type:
                    description: Type is the CNI plugin type to be used.
                    enum:
                    - canal
                    - cilium
                    - none
                    type: string
                  version:
                    description: Version defines the CNI plugin version to be used.
                      This varies by chosen CNI plugin type.
                    type: string
                required:
                - type
                - version
                type: object
              componentsOverride:
                description: 'Optional: Component specific overrides that allow customization
                  of control plane components.'
                properties:
                  apiserver:
                    description: Apiserver configures kube-apiserver settings.
                    properties:
                      endpointReconcilingDisabled:
                        type: boolean
                      nodePortRange:
                        type: string
                      replicas:
                        format: int32
                        type: integer
                      resources:
                        description: ResourceRequirements describes the compute resource
                          requirements.
                        properties:
                          claims:
                            description: "Claims lists the names of resources, defined
                              in spec.resourceClaims, that are used by this container.
                              \n This is an alpha field and requires enabling the
                              DynamicResourceAllocation feature gate. \n This field
                              is immutable. It can only be set for containers."
                            items:
                              description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                              properties:
                                name:
                                  description: Name must match the name of one entry
                                    in pod.spec.resourceClaims of the Pod where this
                                    field is used. It makes that resource available
                                    inside a container.
                                  type: string
                              required:
                              - name
                              type: object
                            type: array
                            x-kubernetes-list-map-keys:
                            - name
                            x-kubernetes-list-type: map
                          limits:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Limits describes the maximum amount of compute
                              resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                          requests:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Requests describes the minimum amount of
                              compute resources required. If Requests is omitted for
                              a container, it defaults to Limits if that is explicitly
                              specified, otherwise to an implementation-defined value.
                              Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                        type: object
                      tolerations:
                        items:
                          description: The pod this Toleration is attached to tolerates
                            any taint that matches the triple <key,value,effect> using
                            the matching operator <operator>.
                          properties:
                            effect:
                              description: Effect indicates the taint effect to match.
                                Empty means match all taint effects. When specified,
                                allowed values are NoSchedule, PreferNoSchedule and
                                NoExecute.
                              type: string
                            key:
                              description: Key is the taint key that the toleration
                                applies to. Empty means match all taint keys. If the
                                key is empty, operator must be Exists; this combination
                                means to match all values and all keys.
                              type: string
                            operator:
                              description: Operator represents a key's relationship
                                to the value. Valid operators are Exists and Equal.
                                Defaults to Equal. Exists is equivalent to wildcard
                                for value, so that a pod can tolerate all taints of
                                a particular category.
                              type: string
                            tolerationSeconds:
                              description: TolerationSeconds represents the period
                                of time the toleration (which must be of effect NoExecute,
                                otherwise this field is ignored) tolerates the taint.
                                By default, it is not set, which means tolerate the
                                taint forever (do not evict). Zero and negative values
                                will be treated as 0 (evict immediately) by the system.
                              format: int64
                              type: integer
                            value:
                              description: Value is the taint value the toleration
                                matches to. If the operator is Exists, the value should
                                be empty, otherwise just a regular string.
                              type: string
                          type: object
                        type: array
                    type: object
                  controllerManager:
                    description: ControllerManager configures kube-controller-manager
                      settings.
                    properties:
                      leaderElection:
                        properties:
                          leaseDurationSeconds:
                            description: LeaseDurationSeconds is the duration in seconds
                              that non-leader candidates will wait to force acquire
                              leadership. This is measured against time of last observed
                              ack.
                            format: int32
                            type: integer
                          renewDeadlineSeconds:
                            description: RenewDeadlineSeconds is the duration in seconds
                              that the acting controlplane will retry refreshing leadership
                              before giving up.
                            format: int32
                            type: integer
                          retryPeriodSeconds:
                            description: RetryPeriodSeconds is the duration in seconds
                              the LeaderElector clients should wait between tries
                              of actions.
                            format: int32
                            type: integer
                        type: object
                      replicas:
                        format: int32
                        type: integer
                      resources:
                        description: ResourceRequirements describes the compute resource
                          requirements.
                        properties:
                          claims:
                            description: "Claims lists the names of resources, defined
                              in spec.resourceClaims, that are used by this container.
                              \n This is an alpha field and requires enabling the
                              DynamicResourceAllocation feature gate. \n This field
                              is immutable. It can only be set for containers."
                            items:
                              description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                              properties:
                                name:
                                  description: Name must match the name of one entry
                                    in pod.spec.resourceClaims of the Pod where this
                                    field is used. It makes that resource available
                                    inside a container.
                                  type: string
                              required:
                              - name
                              type: object
                            type: array
                            x-kubernetes-list-map-keys:
                            - name
                            x-kubernetes-list-type: map
                          limits:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Limits describes the maximum amount of compute
                              resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                          requests:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Requests describes the minimum amount of
                              compute resources required. If Requests is omitted for
                              a container, it defaults to Limits if that is explicitly
                              specified, otherwise to an implementation-defined value.
                              Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                        type: object
                      tolerations:
                        items:
                          description: The pod this Toleration is attached to tolerates
                            any taint that matches the triple <key,value,effect> using
                            the matching operator <operator>.
                          properties:
                            effect:
                              description: Effect indicates the taint effect to match.
                                Empty means match all taint effects. When specified,
                                allowed values are NoSchedule, PreferNoSchedule and
                                NoExecute.
                              type: string
                            key:
                              description: Key is the taint key that the toleration
                                applies to. Empty means match all taint keys. If the
                                key is empty, operator must be Exists; this combination
                                means to match all values and all keys.
                              type: string
                            operator:
                              description: Operator represents a key's relationship
                                to the value. Valid operators are Exists and Equal.
                                Defaults to Equal. Exists is equivalent to wildcard
                                for value, so that a pod can tolerate all taints of
                                a particular category.
                              type: string
                            tolerationSeconds:
                              description: TolerationSeconds represents the period
                                of time the toleration (which must be of effect NoExecute,
                                otherwise this field is ignored) tolerates the taint.
                                By default, it is not set, which means tolerate the
                                taint forever (do not evict). Zero and negative values
                                will be treated as 0 (evict immediately) by the system.
                              format: int64
                              type: integer
                            value:
                              description: Value is the taint value the toleration
                                matches to. If the operator is Exists, the value should
                                be empty, otherwise just a regular string.
                              type: string
                          type: object
                        type: array
                    type: object
                  etcd:
                    description: Etcd configures the etcd ring used to store Kubernetes
                      data.
                    properties:
                      clusterSize:
                        description: ClusterSize is the number of replicas created
                          for etcd. This should be an odd number to guarantee consensus,
                          e.g. 3, 5 or 7.
                        format: int32
                        type: integer
                      diskSize:
                        anyOf:
                        - type: integer
                        - type: string
                        description: DiskSize is the volume size used when creating
                          persistent storage from the configured StorageClass. This
                          is inherited from KubermaticConfiguration if not set. Defaults
                          to 5Gi.
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                      hostAntiAffinity:
                        description: HostAntiAffinity allows to enforce a certain
                          type of host anti-affinity on etcd pods. Options are "preferred"
                          (default) and "required". Please note that enforcing anti-affinity
                          via "required" can mean that pods are never scheduled.
                        enum:
                        - ""
                        - preferred
                        - required
                        type: string
                      resources:
                        description: Resources allows to override the resource requirements
                          for etcd Pods.
                        properties:
                          claims:
                            description: "Claims lists the names of resources, defined
                              in spec.resourceClaims, that are used by this container.
                              \n This is an alpha field and requires enabling the
                              DynamicResourceAllocation feature gate. \n This field
                              is immutable. It can only be set for containers."
                            items:
                              description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                              properties:
                                name:
                                  description: Name must match the name of one entry
                                    in pod.spec.resourceClaims of the Pod where this
                                    field is used. It makes that resource available
                                    inside a container.
                                  type: string
                              required:
                              - name
                              type: object
                            type: array
                            x-kubernetes-list-map-keys:
                            - name
                            x-kubernetes-list-type: map
                          limits:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Limits describes the maximum amount of compute
                              resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                          requests:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Requests describes the minimum amount of
                              compute resources required. If Requests is omitted for
                              a container, it defaults to Limits if that is explicitly
                              specified, otherwise to an implementation-defined value.
                              Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                        type: object
                      storageClass:
                        description: StorageClass is the Kubernetes StorageClass used
                          for persistent storage which stores the etcd WAL and other
                          data persisted across restarts. Defaults to `kubermatic-fast`
                          (the global default).
                        type: string
                      tolerations:
                        description: Tolerations allows to override the scheduling
                          tolerations for etcd Pods.
                        items:
                          description: The pod this Toleration is attached to tolerates
                            any taint that matches the triple <key,value,effect> using
                            the matching operator <operator>.
                          properties:
                            effect:
                              description: Effect indicates the taint effect to match.
                                Empty means match all taint effects. When specified,
                                allowed values are NoSchedule, PreferNoSchedule and
                                NoExecute.
                              type: string
                            key:
                              description: Key is the taint key that the toleration
                                applies to. Empty means match all taint keys. If the
                                key is empty, operator must be Exists; this combination
                                means to match all values and all keys.
                              type: string
                            operator:
                              description: Operator represents a key's relationship
                                to the value. Valid operators are Exists and Equal.
                                Defaults to Equal. Exists is equivalent to wildcard
                                for value, so that a pod can tolerate all taints of
                                a particular category.
                              type: string
                            tolerationSeconds:
                              description: TolerationSeconds represents the period
                                of time the toleration (which must be of effect NoExecute,
                                otherwise this field is ignored) tolerates the taint.
                                By default, it is not set, which means tolerate the
                                taint forever (do not evict). Zero and negative values
                                will be treated as 0 (evict immediately) by the system.
                              format: int64
                              type: integer
                            value:
                              description: Value is the taint value the toleration
                                matches to. If the operator is Exists, the value should
                                be empty, otherwise just a regular string.
                              type: string
                          type: object
                        type: array
                      zoneAntiAffinity:
                        description: ZoneAntiAffinity allows to enforce a certain
                          type of availability zone anti-affinity on etcd pods. Options
                          are "preferred" (default) and "required". Please note that
                          enforcing anti-affinity via "required" can mean that pods
                          are never scheduled.
                        enum:
                        - ""
                        - preferred
                        - required
                        type: string
                    type: object
                  konnectivityProxy:
                    description: KonnectivityProxy configures konnectivity-server
                      and konnectivity-agent components.
                    properties:
                      keepaliveTime:
                        description: KeepaliveTime represents a duration of time to
                          check if the transport is still alive. The option is propagated
                          to agents and server. Defaults to 1m.
                        type: string
                      resources:
                        description: Resources configure limits/requests for Konnectivity
                          components.
                        properties:
                          claims:
                            description: "Claims lists the names of resources, defined
                              in spec.resourceClaims, that are used by this container.
                              \n This is an alpha field and requires enabling the
                              DynamicResourceAllocation feature gate. \n This field
                              is immutable. It can only be set for containers."
                            items:
                              description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                              properties:
                                name:
                                  description: Name must match the name of one entry
                                    in pod.spec.resourceClaims of the Pod where this
                                    field is used. It makes that resource available
                                    inside a container.
                                  type: string
                              required:
                              - name
                              type: object
                            type: array
                            x-kubernetes-list-map-keys:
                            - name
                            x-kubernetes-list-type: map
                          limits:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Limits describes the maximum amount of compute
                              resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                          requests:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Requests describes the minimum amount of
                              compute resources required. If Requests is omitted for
                              a container, it defaults to Limits if that is explicitly
                              specified, otherwise to an implementation-defined value.
                              Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                        type: object
                    type: object
                  nodePortProxyEnvoy:
                    description: NodePortProxyEnvoy configures the per-cluster nodeport-proxy-envoy
                      that is deployed if the `LoadBalancer` expose strategy is used.
                      This is not effective if a different expose strategy is configured.
                    properties:
                      dockerRepository:
                        description: DockerRepository is the repository containing
                          the component's image.
                        type: string
                      resources:
                        description: Resources describes the requested and maximum
                          allowed CPU/memory usage.
                        properties:
                          claims:
                            description: "Claims lists the names of resources, defined
                              in spec.resourceClaims, that are used by this container.
                              \n This is an alpha field and requires enabling the
                              DynamicResourceAllocation feature gate. \n This field
                              is immutable. It can only be set for containers."
                            items:
                              description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                              properties:
                                name:
                                  description: Name must match the name of one entry
                                    in pod.spec.resourceClaims of the Pod where this
                                    field is used. It makes that resource available
                                    inside a container.
                                  type: string
                              required:
                              - name
                              type: object
                            type: array
                            x-kubernetes-list-map-keys:
                            - name
                            x-kubernetes-list-type: map
                          limits:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Limits describes the maximum amount of compute
                              resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                          requests:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Requests describes the minimum amount of
                              compute resources required. If Requests is omitted for
                              a container, it defaults to Limits if that is explicitly
                              specified, otherwise to an implementation-defined value.
                              Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                        type: object
                    type: object
                  prometheus:
                    description: Prometheus configures the Prometheus instance deployed
                      into the cluster control plane.
                    properties:
                      resources:
                        description: ResourceRequirements describes the compute resource
                          requirements.
                        properties:
                          claims:
                            description: "Claims lists the names of resources, defined
                              in spec.resourceClaims, that are used by this container.
                              \n This is an alpha field and requires enabling the
                              DynamicResourceAllocation feature gate. \n This field
                              is immutable. It can only be set for containers."
                            items:
                              description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                              properties:
                                name:
                                  description: Name must match the name of one entry
                                    in pod.spec.resourceClaims of the Pod where this
                                    field is used. It makes that resource available
                                    inside a container.
                                  type: string
                              required:
                              - name
                              type: object
                            type: array
                            x-kubernetes-list-map-keys:
                            - name
                            x-kubernetes-list-type: map
                          limits:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Limits describes the maximum amount of compute
                              resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                          requests:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Requests describes the minimum amount of
                              compute resources required. If Requests is omitted for
                              a container, it defaults to Limits if that is explicitly
                              specified, otherwise to an implementation-defined value.
                              Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                        type: object
                    type: object
                  scheduler:
                    description: Scheduler configures kube-scheduler settings.
                    properties:
                      leaderElection:
                        properties:
                          leaseDurationSeconds:
                            description: LeaseDurationSeconds is the duration in seconds
                              that non-leader candidates will wait to force acquire
                              leadership. This is measured against time of last observed
                              ack.
                            format: int32
                            type: integer
                          renewDeadlineSeconds:
                            description: RenewDeadlineSeconds is the duration in seconds
                              that the acting controlplane will retry refreshing leadership
                              before giving up.
                            format: int32
                            type: integer
                          retryPeriodSeconds:
                            description: RetryPeriodSeconds is the duration in seconds
                              the LeaderElector clients should wait between tries
                              of actions.
                            format: int32
                            type: integer
                        type: object
                      replicas:
                        format: int32
                        type: integer
                      resources:
                        description: ResourceRequirements describes the compute resource
                          requirements.
                        properties:
                          claims:
                            description: "Claims lists the names of resources, defined
                              in spec.resourceClaims, that are used by this container.
                              \n This is an alpha field and requires enabling the
                              DynamicResourceAllocation feature gate. \n This field
                              is immutable. It can only be set for containers."
                            items:
                              description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                              properties:
                                name:
                                  description: Name must match the name of one entry
                                    in pod.spec.resourceClaims of the Pod where this
                                    field is used. It makes that resource available
                                    inside a container.
                                  type: string
                              required:
                              - name
                              type: object
                            type: array
                            x-kubernetes-list-map-keys:
                            - name
                            x-kubernetes-list-type: map
                          limits:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Limits describes the maximum amount of compute
                              resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                          requests:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Requests describes the minimum amount of
                              compute resources required. If Requests is omitted for
                              a container, it defaults to Limits if that is explicitly
                              specified, otherwise to an implementation-defined value.
                              Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                        type: object
                      tolerations:
                        items:
                          description: The pod this Toleration is attached to tolerates
                            any taint that matches the triple <key,value,effect> using
                            the matching operator <operator>.
                          properties:
                            effect:
                              description: Effect indicates the taint effect to match.
                                Empty means match all taint effects. When specified,
                                allowed values are NoSchedule, PreferNoSchedule and
                                NoExecute.
                              type: string
                            key:
                              description: Key is the taint key that the toleration
                                applies to. Empty means match all taint keys. If the
                                key is empty, operator must be Exists; this combination
                                means to match all values and all keys.
                              type: string
                            operator:
                              description: Operator represents a key's relationship
                                to the value. Valid operators are Exists and Equal.
                                Defaults to Equal. Exists is equivalent to wildcard
                                for value, so that a pod can tolerate all taints of
                                a particular category.
                              type: string
                            tolerationSeconds:
                              description: TolerationSeconds represents the period
                                of time the toleration (which must be of effect NoExecute,
                                otherwise this field is ignored) tolerates the taint.
                                By default, it is not set, which means tolerate the
                                taint forever (do not evict). Zero and negative values
                                will be treated as 0 (evict immediately) by the system.
                              format: int64
                              type: integer
                            value:
                              description: Value is the taint value the toleration
                                matches to. If the operator is Exists, the value should
                                be empty, otherwise just a regular string.
                              type: string
                          type: object
                        type: array
                    type: object
                  userClusterController:
                    description: UserClusterController configures the KKP usercluster-controller
                      deployed as part of the cluster control plane.
                    properties:
                      leaderElection:
                        properties:
                          leaseDurationSeconds:
                            description: LeaseDurationSeconds is the duration in seconds
                              that non-leader candidates will wait to force acquire
                              leadership. This is measured against time of last observed
                              ack.
                            format: int32
                            type: integer
                          renewDeadlineSeconds:
                            description: RenewDeadlineSeconds is the duration in seconds
                              that the acting controlplane will retry refreshing leadership
                              before giving up.
                            format: int32
                            type: integer
                          retryPeriodSeconds:
                            description: RetryPeriodSeconds is the duration in seconds
                              the LeaderElector clients should wait between tries
                              of actions.
                            format: int32
                            type: integer
                        type: object
                      replicas:
                        format: int32
                        type: integer
                      resources:
                        description: ResourceRequirements describes the compute resource
                          requirements.
                        properties:
                          claims:
                            description: "Claims lists the names of resources, defined
                              in spec.resourceClaims, that are used by this container.
                              \n This is an alpha field and requires enabling the
                              DynamicResourceAllocation feature gate. \n This field
                              is immutable. It can only be set for containers."
                            items:
                              description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                              properties:
                                name:
                                  description: Name must match the name of one entry
                                    in pod.spec.resourceClaims of the Pod where this
                                    field is used. It makes that resource available
                                    inside a container.
                                  type: string
                              required:
                              - name
                              type: object
                            type: array
                            x-kubernetes-list-map-keys:
                            - name
                            x-kubernetes-list-type: map
                          limits:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Limits describes the maximum amount of compute
                              resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                          requests:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Requests describes the minimum amount of
                              compute resources required. If Requests is omitted for
                              a container, it defaults to Limits if that is explicitly
                              specified, otherwise to an implementation-defined value.
                              Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                        type: object
                      tolerations:
                        items:
                          description: The pod this Toleration is attached to tolerates
                            any taint that matches the triple <key,value,effect> using
                            the matching operator <operator>.
                          properties:
                            effect:
                              description: Effect indicates the taint effect to match.
                                Empty means match all taint effects. When specified,
                                allowed values are NoSchedule, PreferNoSchedule and
                                NoExecute.
                              type: string
                            key:
                              description: Key is the taint key that the toleration
                                applies to. Empty means match all taint keys. If the
                                key is empty, operator must be Exists; this combination
                                means to match all values and all keys.
                              type: string
                            operator:
                              description: Operator represents a key's relationship
                                to the value. Valid operators are Exists and Equal.
                                Defaults to Equal. Exists is equivalent to wildcard
                                for value, so that a pod can tolerate all taints of
                                a particular category.
                              type: string
                            tolerationSeconds:
                              description: TolerationSeconds represents the period
                                of time the toleration (which must be of effect NoExecute,
                                otherwise this field is ignored) tolerates the taint.
                                By default, it is not set, which means tolerate the
                                taint forever (do not evict). Zero and negative values
                                will be treated as 0 (evict immediately) by the system.
                              format: int64
                              type: integer
                            value:
                              description: Value is the taint value the toleration
                                matches to. If the operator is Exists, the value should
                                be empty, otherwise just a regular string.
                              type: string
                          type: object
                        type: array
                    type: object
                required:
                - apiserver
                - controllerManager
                - etcd
                - nodePortProxyEnvoy
                - prometheus
                - scheduler
                type: object
              containerRuntime:
                default: containerd
                description: ContainerRuntime to use, i.e. `docker` or `containerd`.
                  By default `containerd` will be used.
                enum:
                - docker
                - containerd
                type: string
              debugLog:
                description: Enables more verbose logging in KKP's user-cluster-controller-manager.
                type: boolean
              disableCsiDriver:
                description: 'Optional: DisableCSIDriver disables the installation
                  of CSI driver on the cluster If this is true at the data center
                  then it can''t be over-written in the cluster configuration'
                type: boolean
              enableOperatingSystemManager:
                description: 'Optional: Enables operating-system-manager (OSM), which
                  is responsible for creating and managing worker node configuration.
                  This field is enabled(true) by default.'
                type: boolean
              enableUserSSHKeyAgent:
                description: 'Optional: Deploys the UserSSHKeyAgent to the user cluster.
                  This field is immutable. If enabled, the agent will be deployed
                  and used to sync user ssh keys attached by users to the cluster.
                  No SSH keys will be synced after node creation if this is disabled.'
                type: boolean
              encryptionConfiguration:
                description: 'Optional: Configures encryption-at-rest for Kubernetes
                  API data. This needs the `encryptionAtRest` feature gate.'
                properties:
                  enabled:
                    description: Enables encryption-at-rest on this cluster.
                    type: boolean
                  resources:
                    description: List of resources that will be stored encrypted in
                      etcd.
                    items:
                      type: string
                    minItems: 1
                    type: array
                  secretbox:
                    description: 'Configuration for the `secretbox` static key encryption
                      scheme as supported by Kubernetes. More info: https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/#providers'
                    properties:
                      keys:
                        description: List of 'secretbox' encryption keys. The first
                          element of this list is considered the "primary" key which
                          will be used for encrypting data while writing it. Additional
                          keys will be used for decrypting data while reading it,
                          if keys higher in the list did not succeed in decrypting
                          it.
                        items:
                          description: SecretboxKey stores a key or key reference
                            for encrypting Kubernetes API data at rest with a static
                            key.
                          properties:
                            name:
                              description: Identifier of a key, used in various places
                                to refer to the key.
                              type: string
                            secretRef:
                              description: Instead of passing the sensitive encryption
                                key via the `value` field, a secret can be referenced.
                                The key of the secret referenced here needs to hold
                                a key equivalent to the `value` field.
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                              x-kubernetes-map-type: atomic
                            value:
                              description: Value contains a 32-byte random key that
                                is base64 encoded. This is the key used for encryption.
                                Can be generated via `head -c 32 /dev/urandom | base64`,
                                for example.
                              type: string
                          required:
                          - name
                          type: object
                        minItems: 1
                        type: array
                    required:
                    - keys
                    type: object
                required:
                - enabled
                - resources
                type: object
              eventRateLimitConfig:
                description: 'Optional: Configures the EventRateLimit admission plugin
                  (if enabled via `useEventRateLimitAdmissionPlugin`) to create limits
                  on Kubernetes event generation. The EventRateLimit plugin is capable
                  of comparing and rate limiting incoming `Events` based on several
                  configured buckets.'
                properties:
                  namespace:
                    properties:
                      burst:
                        format: int32
                        type: integer
                      cacheSize:
                        format: int32
                        type: integer
                      qps:
                        format: int32
                        type: integer
                    required:
                    - burst
                    - qps
                    type: object
                  server:
                    properties:
                      burst:
                        format: int32
                        type: integer
                      cacheSize:
                        format: int32
                        type: integer
                      qps:
                        format: int32
                        type: integer
                    required:
                    - burst
                    - qps
                    type: object
                  sourceAndObject:
                    properties:
                      burst:
                        format: int32
                        type: integer
                      cacheSize:
                        format: int32
                        type: integer
                      qps:
                        format: int32
                        type: integer
                    required:
                    - burst
                    - qps
                    type: object
                  user:
                    properties:
                      burst:
                        format: int32
                        type: integer
                      cacheSize:
                        format: int32
                        type: integer
                      qps:
                        format: int32
                        type: integer
                    required:
                    - burst
                    - qps
                    type: object
                type: object
              exposeStrategy:
                description: ExposeStrategy is the strategy used to expose a cluster
                  control plane.
                enum:
                - NodePort
                - LoadBalancer
                - Tunneling
                type: string
              features:
                additionalProperties:
                  type: boolean
                description: A map of optional or early-stage features that can be
                  enabled for the user cluster. Some feature gates cannot be disabled
                  after being enabled. The available feature gates vary based on KKP
                  version, Kubernetes version and Seed configuration. Please consult
                  the KKP documentation for specific feature gates.
                type: object
              humanReadableName:
                description: HumanReadableName is the cluster name provided by the
                  user.
                type: string
              imagePullSecret:
                description: 'Optional: ImagePullSecret references a secret with container
                  registry credentials. This is passed to the machine-controller which
                  sets the registry credentials on node level.'
                properties:
                  name:
                    description: name is unique within a namespace to reference a
                      secret resource.
                    type: string
                  namespace:
                    description: namespace defines the space within which the secret
                      name must be unique.
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              kubelb:
                description: KubeLB holds the configuration for the kubeLB component.
                  Only available in Enterprise Edition.
                properties:
                  enabled:
                    description: Controls whether kubeLB is deployed or not.
                    type: boolean
                required:
                - enabled
                type: object
              kubernetesDashboard:
                description: KubernetesDashboard holds the configuration for the kubernetes-dashboard
                  component.
                properties:
                  enabled:
                    description: Controls whether kubernetes-dashboard is deployed
                      to the user cluster or not. Enabled by default.
                    type: boolean
                type: object
              machineNetworks:
                description: 'Optional: MachineNetworks is the list of the networking
                  parameters used for IPAM.'
                items:
                  description: MachineNetworkingConfig specifies the networking parameters
                    used for IPAM.
                  properties:
                    cidr:
                      type: string
                    dnsServers:
                      items:
                        type: string
                      type: array
                    gateway:
                      type: string
                  required:
                  - cidr
                  - dnsServers
                  - gateway
                  type: object
                type: array
              mla:
                description: 'Optional: MLA contains monitoring, logging and alerting
                  related settings for the user cluster.'
                properties:
                  loggingEnabled:
                    description: LoggingEnabled is the flag for enabling logging in
                      user cluster.
                    type: boolean
                  loggingResources:
                    description: LoggingResources is the resource requirements for
                      user cluster promtail.
                    properties:
                      claims:
                        description: "Claims lists the names of resources, defined
                          in spec.resourceClaims, that are used by this container.
                          \n This is an alpha field and requires enabling the DynamicResourceAllocation
                          feature gate. \n This field is immutable. It can only be
                          set for containers."
                        items:
                          description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                          properties:
                            name:
                              description: Name must match the name of one entry in
                                pod.spec.resourceClaims of the Pod where this field
                                is used. It makes that resource available inside a
                                container.
                              type: string
                          required:
                          - name
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Limits describes the maximum amount of compute
                          resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Requests describes the minimum amount of compute
                          resources required. If Requests is omitted for a container,
                          it defaults to Limits if that is explicitly specified, otherwise
                          to an implementation-defined value. Requests cannot exceed
                          Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                    type: object
                  monitoringEnabled:
                    description: MonitoringEnabled is the flag for enabling monitoring
                      in user cluster.
                    type: boolean
                  monitoringReplicas:
                    description: MonitoringReplicas is the number of desired pods
                      of user cluster prometheus deployment.
                    format: int32
                    type: integer
                  monitoringResources:
                    description: MonitoringResources is the resource requirements
                      for user cluster prometheus.
                    properties:
                      claims:
                        description: "Claims lists the names of resources, defined
                          in spec.resourceClaims, that are used by this container.
                          \n This is an alpha field and requires enabling the DynamicResourceAllocation
                          feature gate. \n This field is immutable. It can only be
                          set for containers."
                        items:
                          description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                          properties:
                            name:
                              description: Name must match the name of one entry in
                                pod.spec.resourceClaims of the Pod where this field
                                is used. It makes that resource available inside a
                                container.
                              type: string
                          required:
                          - name
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Limits describes the maximum amount of compute
                          resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Requests describes the minimum amount of compute
                          resources required. If Requests is omitted for a container,
                          it defaults to Limits if that is explicitly specified, otherwise
                          to an implementation-defined value. Requests cannot exceed
                          Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                    type: object
                type: object
              oidc:
                description: 'Optional: OIDC specifies the OIDC configuration parameters
                  for enabling authentication mechanism for the cluster.'
                properties:
                  clientID:
                    type: string
                  clientSecret:
                    type: string
                  extraScopes:
                    type: string
                  groupsClaim:
                    type: string
                  groupsPrefix:
                    type: string
                  issuerURL:
                    type: string
                  requiredClaim:
                    type: string
                  usernameClaim:
                    type: string
                  usernamePrefix:
                    type: string
                type: object
              opaIntegration:
                description: 'Optional: OPAIntegration is a preview feature that enables
                  OPA integration for the cluster. Enabling it causes OPA Gatekeeper
                  and its resources to be deployed on the user cluster. By default
                  it is disabled.'
                properties:
                  auditResources:
                    description: 'Optional: AuditResources is the resource requirements
                      for user cluster gatekeeper audit.'
                    properties:
                      claims:
                        description: "Claims lists the names of resources, defined
                          in spec.resourceClaims, that are used by this container.
                          \n This is an alpha field and requires enabling the DynamicResourceAllocation
                          feature gate. \n This field is immutable. It can only be
                          set for containers."
                        items:
                          description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                          properties:
                            name:
                              description: Name must match the name of one entry in
                                pod.spec.resourceClaims of the Pod where this field
                                is used. It makes that resource available inside a
                                container.
                              type: string
                          required:
                          - name
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Limits describes the maximum amount of compute
                          resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Requests describes the minimum amount of compute
                          resources required. If Requests is omitted for a container,
                          it defaults to Limits if that is explicitly specified, otherwise
                          to an implementation-defined value. Requests cannot exceed
                          Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                    type: object
                  controllerResources:
                    description: 'Optional: ControllerResources is the resource requirements
                      for user cluster gatekeeper controller.'
                    properties:
                      claims:
                        description: "Claims lists the names of resources, defined
                          in spec.resourceClaims, that are used by this container.
                          \n This is an alpha field and requires enabling the DynamicResourceAllocation
                          feature gate. \n This field is immutable. It can only be
                          set for containers."
                        items:
                          description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                          properties:
                            name:
                              description: Name must match the name of one entry in
                                pod.spec.resourceClaims of the Pod where this field
                                is used. It makes that resource available inside a
                                container.
                              type: string
                          required:
                          - name
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Limits describes the maximum amount of compute
                          resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Requests describes the minimum amount of compute
                          resources required. If Requests is omitted for a container,
                          it defaults to Limits if that is explicitly specified, otherwise
                          to an implementation-defined value. Requests cannot exceed
                          Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                    type: object
                  enabled:
                    description: Enables OPA Gatekeeper integration.
                    type: boolean
                  experimentalEnableMutation:
                    description: 'Optional: Enables experimental mutation in Gatekeeper.'
                    type: boolean
                  webhookTimeoutSeconds:
                    default: 10
                    description: The timeout in seconds that is set for the Gatekeeper
                      validating webhook admission review calls. Defaults to `10`
                      (seconds).
                    format: int32
                    type: integer
                type: object
              pause:
                default: false
                description: If this is set to true, the cluster will not be reconciled
                  by KKP. This indicates that the user needs to do some action to
                  resolve the pause.
                type: boolean
              pauseReason:
                description: PauseReason is the reason why the cluster is not being
                  managed. This field is for informational purpose only and can be
                  set by a user or a controller to communicate the reason for pausing
                  the cluster.
                type: string
              podNodeSelectorAdmissionPluginConfig:
                additionalProperties:
                  type: string
                description: 'Optional: Provides configuration for the PodNodeSelector
                  admission plugin (needs plugin enabled via `usePodNodeSelectorAdmissionPlugin`).
                  It''s used by the backend to create a configuration file for this
                  plugin. The key:value from this map is converted to <namespace>:<node-selectors-labels>
                  in the file. Use `clusterDefaultNodeSelector` as key to configure
                  a default node selector.'
                type: object
              serviceAccount:
                description: 'Optional: ServiceAccount contains service account related
                  settings for the user cluster''s kube-apiserver.'
                properties:
                  apiAudiences:
                    description: APIAudiences are the Identifiers of the API If this
                      is not specified, it will be set to a single element list containing
                      the issuer URL
                    items:
                      type: string
                    type: array
                  issuer:
                    description: Issuer is the identifier of the service account token
                      issuer If this is not specified, it will be set to the URL of
                      apiserver by default
                    type: string
                  tokenVolumeProjectionEnabled:
                    type: boolean
                type: object
              updateWindow:
                description: 'Optional: UpdateWindow configures automatic update systems
                  to respect a maintenance window for applying OS updates to nodes.
                  This is only respected on Flatcar nodes currently.'
                properties:
                  length:
                    description: Sets the length of the update window beginning with
                      the start time. This needs to be a valid duration as parsed
                      by Go's time.ParseDuration (https://pkg.go.dev/time#ParseDuration),
                      e.g. `2h`.
                    type: string
                  start:
                    description: Sets the start time of the update window. This can
                      be a time of day in 24h format, e.g. `22:30`, or a day of week
                      plus a time of day, for example `Mon 21:00`. Only short names
                      for week days are supported, i.e. `Mon`, `Tue`, `Wed`, `Thu`,
                      `Fri`, `Sat` and `Sun`.
                    type: string
                type: object
              useEventRateLimitAdmissionPlugin:
                description: Enables the admission plugin `EventRateLimit`. Needs
                  additional configuration via the `eventRateLimitConfig` field. This
                  plugin is considered "alpha" by Kubernetes.
                type: boolean
              usePodNodeSelectorAdmissionPlugin:
                description: Enables the admission plugin `PodNodeSelector`. Needs
                  additional configuration via the `podNodeSelectorAdmissionPluginConfig`
                  field.
                type: boolean
              usePodSecurityPolicyAdmissionPlugin:
                description: Enables the admission plugin `PodSecurityPolicy`. This
                  plugin is deprecated by Kubernetes.
                type: boolean
              version:
                description: Version defines the wanted version of the control plane.
                type: string
            required:
            - cloud
            - clusterNetwork
            - exposeStrategy
            - humanReadableName
            - version
            type: object
          userSSHKeys:
            description: UserSSHKeys is the list of SSH public keys that should be
              assigned to all nodes in the cluster.
            items:
              description: ClusterTemplateSSHKey is the object for holding SSH key.
              properties:
                id:
                  description: ID is the name of the UserSSHKey object that is supposed
                    to be assigned to any ClusterTemplateInstance created based on
                    this template.
                  type: string
                name:
                  description: Name is the human readable SSH key name.
                  type: string
              required:
              - id
              - name
              type: object
            type: array
        required:
        - credential
        type: object
    served: true
    storage: true
    subresources: {}
---
# Source: kubermatic-operator/templates/crds.tpl
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    app.kubernetes.io/version: v2.24.5
    controller-gen.kubebuilder.io/version: v0.13.0
    helm.sh/resource-policy: keep
    kubermatic.k8c.io/location: master,seed
  labels:
    app.kubernetes.io/component: operator
    app.kubernetes.io/instance: my-kubermatic-operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubermatic-operator
    app.kubernetes.io/version: v2.24.5
    helm.sh/chart: kubermatic-operator-v2.24.5
  name: constraints.kubermatic.k8c.io
spec:
  group: kubermatic.k8c.io
  names:
    kind: Constraint
    listKind: ConstraintList
    plural: constraints
    singular: constraint
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1
    schema:
      openAPIV3Schema:
        description: Constraint specifies a kubermatic wrapper for the gatekeeper
          constraints.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Spec describes the desired state for the constraint.
            properties:
              constraintType:
                description: ConstraintType specifies the type of gatekeeper constraint
                  that the constraint applies to
                type: string
              disabled:
                description: Disabled  is the flag for disabling OPA constraints
                type: boolean
              enforcementAction:
                description: EnforcementAction defines the action to take in response
                  to a constraint being violated. By default, EnforcementAction is
                  set to deny as the default behavior is to deny admission requests
                  with any violation.
                type: string
              match:
                description: Match contains the constraint to resource matching data
                properties:
                  excludedNamespaces:
                    description: ExcludedNamespaces is a list of namespace names.
                      If defined, a constraint will only apply to resources not in
                      a listed namespace.
                    items:
                      type: string
                    type: array
                  kinds:
                    description: Kinds accepts a list of objects with apiGroups and
                      kinds fields that list the groups/kinds of objects to which
                      the constraint will apply. If multiple groups/kinds objects
                      are specified, only one match is needed for the resource to
                      be in scope
                    items:
                      description: Kind specifies the resource Kind and APIGroup.
                      properties:
                        apiGroups:
                          description: APIGroups specifies the APIGroups of the resources
                          items:
                            type: string
                          type: array
                        kinds:
                          description: Kinds specifies the kinds of the resources
                          items:
                            type: string
                          type: array
                      type: object
                    type: array
                  labelSelector:
                    description: LabelSelector is a standard Kubernetes label selector.
                    properties:
                      matchExpressions:
                        description: matchExpressions is a list of label selector
                          requirements. The requirements are ANDed.
                        items:
                          description: A label selector requirement is a selector
                            that contains values, a key, and an operator that relates
                            the key and values.
                          properties:
                            key:
                              description: key is the label key that the selector
                                applies to.
                              type: string
                            operator:
                              description: operator represents a key's relationship
                                to a set of values. Valid operators are In, NotIn,
                                Exists and DoesNotExist.
                              type: string
                            values:
                              description: values is an array of string values. If
                                the operator is In or NotIn, the values array must
                                be non-empty. If the operator is Exists or DoesNotExist,
                                the values array must be empty. This array is replaced
                                during a strategic merge patch.
                              items:
                                type: string
                              type: array
                          required:
                          - key
                          - operator
                          type: object
                        type: array
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: matchLabels is a map of {key,value} pairs. A
                          single {key,value} in the matchLabels map is equivalent
                          to an element of matchExpressions, whose key field is "key",
                          the operator is "In", and the values array contains only
                          "value". The requirements are ANDed.
                        type: object
                    type: object
                    x-kubernetes-map-type: atomic
                  namespaceSelector:
                    description: NamespaceSelector  is a standard Kubernetes namespace
                      selector. If defined, make sure to add Namespaces to your configs.config.gatekeeper.sh
                      object to ensure namespaces are synced into OPA
                    properties:
                      matchExpressions:
                        description: matchExpressions is a list of label selector
                          requirements. The requirements are ANDed.
                        items:
                          description: A label selector requirement is a selector
                            that contains values, a key, and an operator that relates
                            the key and values.
                          properties:
                            key:
                              description: key is the label key that the selector
                                applies to.
                              type: string
                            operator:
                              description: operator represents a key's relationship
                                to a set of values. Valid operators are In, NotIn,
                                Exists and DoesNotExist.
                              type: string
                            values:
                              description: values is an array of string values. If
                                the operator is In or NotIn, the values array must
                                be non-empty. If the operator is Exists or DoesNotExist,
                                the values array must be empty. This array is replaced
                                during a strategic merge patch.
                              items:
                                type: string
                              type: array
                          required:
                          - key
                          - operator
                          type: object
                        type: array
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: matchLabels is a map of {key,value} pairs. A
                          single {key,value} in the matchLabels map is equivalent
                          to an element of matchExpressions, whose key field is "key",
                          the operator is "In", and the values array contains only
                          "value". The requirements are ANDed.
                        type: object
                    type: object
                    x-kubernetes-map-type: atomic
                  namespaces:
                    description: Namespaces is a list of namespace names. If defined,
                      a constraint will only apply to resources in a listed namespace.
                    items:
                      type: string
                    type: array
                  scope:
                    description: Scope accepts *, Cluster, or Namespaced which determines
                      if cluster-scoped and/or namesapced-scoped resources are selected.
                      (defaults to *)
                    type: string
                type: object
              parameters:
                description: "Parameters specifies the parameters used by the constraint
                  template REGO. It supports both the legacy rawJSON parameters, in
                  which all the parameters are set in a JSON string, and regular parameters
                  like in Gatekeeper Constraints. If rawJSON is set, during constraint
                  syncing to the user cluster, the other parameters are ignored Example
                  with rawJSON parameters: \n parameters: rawJSON: '{\"labels\":[\"gatekeeper\"]}'
                  \n And with regular parameters: \n parameters: labels: [\"gatekeeper\"]"
                x-kubernetes-preserve-unknown-fields: true
              selector:
                description: Selector specifies the cluster selection filters
                properties:
                  labelSelector:
                    description: LabelSelector selects the Clusters to which the Constraint
                      applies based on their labels
                    properties:
                      matchExpressions:
                        description: matchExpressions is a list of label selector
                          requirements. The requirements are ANDed.
                        items:
                          description: A label selector requirement is a selector
                            that contains values, a key, and an operator that relates
                            the key and values.
                          properties:
                            key:
                              description: key is the label key that the selector
                                applies to.
                              type: string
                            operator:
                              description: operator represents a key's relationship
                                to a set of values. Valid operators are In, NotIn,
                                Exists and DoesNotExist.
                              type: string
                            values:
                              description: values is an array of string values. If
                                the operator is In or NotIn, the values array must
                                be non-empty. If the operator is Exists or DoesNotExist,
                                the values array must be empty. This array is replaced
                                during a strategic merge patch.
                              items:
                                type: string
                              type: array
                          required:
                          - key
                          - operator
                          type: object
                        type: array
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: matchLabels is a map of {key,value} pairs. A
                          single {key,value} in the matchLabels map is equivalent
                          to an element of matchExpressions, whose key field is "key",
                          the operator is "In", and the values array contains only
                          "value". The requirements are ANDed.
                        type: object
                    type: object
                    x-kubernetes-map-type: atomic
                  providers:
                    description: Providers is a list of cloud providers to which the
                      Constraint applies to. Empty means all providers are selected.
                    items:
                      type: string
                    type: array
                type: object
            required:
            - constraintType
            type: object
        type: object
    served: true
    storage: true
    subresources: {}
---
# Source: kubermatic-operator/templates/crds.tpl
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    app.kubernetes.io/version: v2.24.5
    controller-gen.kubebuilder.io/version: v0.13.0
    helm.sh/resource-policy: keep
    kubermatic.k8c.io/location: master,seed
  labels:
    app.kubernetes.io/component: operator
    app.kubernetes.io/instance: my-kubermatic-operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubermatic-operator
    app.kubernetes.io/version: v2.24.5
    helm.sh/chart: kubermatic-operator-v2.24.5
  name: constrainttemplates.kubermatic.k8c.io
spec:
  group: kubermatic.k8c.io
  names:
    kind: ConstraintTemplate
    listKind: ConstraintTemplateList
    plural: constrainttemplates
    singular: constrainttemplate
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1
    schema:
      openAPIV3Schema:
        description: ConstraintTemplate is the object representing a kubermatic wrapper
          for a gatekeeper constraint template.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Spec specifies the gatekeeper constraint template and KKP
              related spec.
            properties:
              crd:
                properties:
                  spec:
                    properties:
                      names:
                        properties:
                          kind:
                            type: string
                          shortNames:
                            items:
                              type: string
                            type: array
                        type: object
                      validation:
                        default:
                          legacySchema: false
                        properties:
                          legacySchema:
                            default: false
                            type: boolean
                          openAPIV3Schema:
                            type: object
                            x-kubernetes-preserve-unknown-fields: true
                        type: object
                    type: object
                type: object
              selector:
                description: Selector configures which clusters this constraint template
                  is applied to.
                properties:
                  labelSelector:
                    description: LabelSelector selects the Clusters to which the Constraint
                      Template applies based on their labels
                    properties:
                      matchExpressions:
                        description: matchExpressions is a list of label selector
                          requirements. The requirements are ANDed.
                        items:
                          description: A label selector requirement is a selector
                            that contains values, a key, and an operator that relates
                            the key and values.
                          properties:
                            key:
                              description: key is the label key that the selector
                                applies to.
                              type: string
                            operator:
                              description: operator represents a key's relationship
                                to a set of values. Valid operators are In, NotIn,
                                Exists and DoesNotExist.
                              type: string
                            values:
                              description: values is an array of string values. If
                                the operator is In or NotIn, the values array must
                                be non-empty. If the operator is Exists or DoesNotExist,
                                the values array must be empty. This array is replaced
                                during a strategic merge patch.
                              items:
                                type: string
                              type: array
                          required:
                          - key
                          - operator
                          type: object
                        type: array
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: matchLabels is a map of {key,value} pairs. A
                          single {key,value} in the matchLabels map is equivalent
                          to an element of matchExpressions, whose key field is "key",
                          the operator is "In", and the values array contains only
                          "value". The requirements are ANDed.
                        type: object
                    type: object
                    x-kubernetes-map-type: atomic
                  providers:
                    description: Providers is a list of cloud providers to which the
                      Constraint Template applies to. Empty means all providers are
                      selected.
                    items:
                      type: string
                    type: array
                type: object
              targets:
                items:
                  properties:
                    code:
                      description: The source code options for the constraint template.
                        "Rego" can only be specified in one place (either here or
                        in the "rego" field)
                      items:
                        properties:
                          engine:
                            description: 'The engine used to evaluate the code. Example:
                              "Rego". Required.'
                            type: string
                          source:
                            description: The source code for the template. Required.
                            x-kubernetes-preserve-unknown-fields: true
                        required:
                        - engine
                        - source
                        type: object
                      type: array
                      x-kubernetes-list-map-keys:
                      - engine
                      x-kubernetes-list-type: map
                    libs:
                      items:
                        type: string
                      type: array
                    rego:
                      type: string
                    target:
                      type: string
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources: {}
---
# Source: kubermatic-operator/templates/crds.tpl
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    app.kubernetes.io/version: v2.24.5
    controller-gen.kubebuilder.io/version: v0.13.0
    helm.sh/resource-policy: keep
    kubermatic.k8c.io/location: master,seed
  labels:
    app.kubernetes.io/component: operator
    app.kubernetes.io/instance: my-kubermatic-operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubermatic-operator
    app.kubernetes.io/version: v2.24.5
    helm.sh/chart: kubermatic-operator-v2.24.5
  name: etcdbackupconfigs.kubermatic.k8c.io
spec:
  group: kubermatic.k8c.io
  names:
    kind: EtcdBackupConfig
    listKind: EtcdBackupConfigList
    plural: etcdbackupconfigs
    singular: etcdbackupconfig
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1
    schema:
      openAPIV3Schema:
        description: EtcdBackupConfig describes how snapshots of user cluster etcds
          should be performed. Each user cluster automatically gets a default EtcdBackupConfig
          in its cluster namespace.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Spec describes details of an Etcd backup.
            properties:
              cluster:
                description: Cluster is the reference to the cluster whose etcd will
                  be backed up
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: 'If referring to a piece of an object instead of
                      an entire object, this string should contain a valid JSON/Go
                      field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within
                      a pod, this would take on a value like: "spec.containers{name}"
                      (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]"
                      (container with index 2 in this pod). This syntax is chosen
                      only to have some well-defined way of referencing a part of
                      an object. TODO: this design is not final and this field is
                      subject to change in the future.'
                    type: string
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                  resourceVersion:
                    description: 'Specific resourceVersion to which this reference
                      is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              destination:
                description: Destination indicates where the backup will be stored.
                  The destination name must correspond to a destination in the cluster's
                  Seed.Spec.EtcdBackupRestore.
                type: string
              keep:
                description: Keep is the number of backups to keep around before deleting
                  the oldest one If not set, defaults to DefaultKeptBackupsCount.
                  Only used if Schedule is set.
                type: integer
              name:
                description: Name defines the name of the backup The name of the backup
                  file in S3 will be <cluster>-<backup name> If a schedule is set
                  (see below), -<timestamp> will be appended.
                type: string
              schedule:
                description: Schedule is a cron expression defining when to perform
                  the backup. If not set, the backup is performed exactly once, immediately.
                type: string
            required:
            - cluster
            - destination
            - name
            type: object
          status:
            properties:
              cleanupRunning:
                description: If the controller was configured with a cleanupContainer,
                  CleanupRunning keeps track of the corresponding job
                type: boolean
              conditions:
                additionalProperties:
                  properties:
                    lastHeartbeatTime:
                      description: Last time we got an update on a given condition.
                      format: date-time
                      type: string
                    lastTransitionTime:
                      description: Last time the condition transit from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: Human readable message indicating details about
                        last transition.
                      type: string
                    reason:
                      description: (brief) reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                  required:
                  - lastHeartbeatTime
                  - status
                  type: object
                description: Conditions contains conditions of the EtcdBackupConfig
                type: object
              currentBackups:
                description: CurrentBackups tracks the creation and deletion progress
                  of all backups managed by the EtcdBackupConfig
                items:
                  properties:
                    backupFinishedTime:
                      format: date-time
                      type: string
                    backupMessage:
                      type: string
                    backupName:
                      type: string
                    backupPhase:
                      type: string
                    backupStartTime:
                      format: date-time
                      type: string
                    deleteFinishedTime:
                      format: date-time
                      type: string
                    deleteJobName:
                      type: string
                    deleteMessage:
                      type: string
                    deletePhase:
                      type: string
                    deleteStartTime:
                      format: date-time
                      type: string
                    jobName:
                      type: string
                    scheduledTime:
                      description: ScheduledTime will always be set when the BackupStatus
                        is created, so it'll never be nil
                      format: date-time
                      type: string
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: kubermatic-operator/templates/crds.tpl
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    app.kubernetes.io/version: v2.24.5
    controller-gen.kubebuilder.io/version: v0.13.0
    helm.sh/resource-policy: keep
    kubermatic.k8c.io/location: master,seed
  labels:
    app.kubernetes.io/component: operator
    app.kubernetes.io/instance: my-kubermatic-operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubermatic-operator
    app.kubernetes.io/version: v2.24.5
    helm.sh/chart: kubermatic-operator-v2.24.5
  name: etcdrestores.kubermatic.k8c.io
spec:
  group: kubermatic.k8c.io
  names:
    kind: EtcdRestore
    listKind: EtcdRestoreList
    plural: etcdrestores
    singular: etcdrestore
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1
    schema:
      openAPIV3Schema:
        description: EtcdRestore specifies an add-on.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Spec describes details of an etcd restore.
            properties:
              backupDownloadCredentialsSecret:
                description: BackupDownloadCredentialsSecret is the name of a secret
                  in the cluster-xxx namespace containing credentials needed to download
                  the backup
                type: string
              backupName:
                description: BackupName is the name of the backup to restore from
                type: string
              cluster:
                description: Cluster is the reference to the cluster whose etcd will
                  be backed up
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: 'If referring to a piece of an object instead of
                      an entire object, this string should contain a valid JSON/Go
                      field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within
                      a pod, this would take on a value like: "spec.containers{name}"
                      (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]"
                      (container with index 2 in this pod). This syntax is chosen
                      only to have some well-defined way of referencing a part of
                      an object. TODO: this design is not final and this field is
                      subject to change in the future.'
                    type: string
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                  resourceVersion:
                    description: 'Specific resourceVersion to which this reference
                      is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              destination:
                description: Destination indicates where the backup was stored. The
                  destination name should correspond to a destination in the cluster's
                  Seed.Spec.EtcdBackupRestore. If empty, it will use the legacy destination
                  configured in Seed.Spec.BackupRestore
                type: string
              name:
                description: Name defines the name of the restore The name of the
                  restore file in S3 will be <cluster>-<restore name> If a schedule
                  is set (see below), -<timestamp> will be appended.
                type: string
            required:
            - backupName
            - cluster
            - name
            type: object
          status:
            properties:
              phase:
                description: EtcdRestorePhase represents the lifecycle phase of an
                  EtcdRestore.
                enum:
                - Started
                - StsRebuilding
                - Completed
                - EtcdLauncherNotEnabled
                type: string
              restoreTime:
                format: date-time
                type: string
            required:
            - phase
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: kubermatic-operator/templates/crds.tpl
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    app.kubernetes.io/version: v2.24.5
    controller-gen.kubebuilder.io/version: v0.13.0
    helm.sh/resource-policy: keep
    kubermatic.k8c.io/location: master
  labels:
    app.kubernetes.io/component: operator
    app.kubernetes.io/instance: my-kubermatic-operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubermatic-operator
    app.kubernetes.io/version: v2.24.5
    helm.sh/chart: kubermatic-operator-v2.24.5
  name: externalclusters.kubermatic.k8c.io
spec:
  group: kubermatic.k8c.io
  names:
    kind: ExternalCluster
    listKind: ExternalClusterList
    plural: externalclusters
    singular: externalcluster
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.humanReadableName
      name: HumanReadableName
      type: string
    - jsonPath: .spec.cloudSpec.providerName
      name: Provider
      type: string
    - jsonPath: .spec.pause
      name: Paused
      type: boolean
    - jsonPath: .status.condition.phase
      name: Phase
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1
    schema:
      openAPIV3Schema:
        description: ExternalCluster is the object representing an external kubernetes
          cluster.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Spec describes the desired cluster state.
            properties:
              cloudSpec:
                description: CloudSpec contains provider specific fields
                properties:
                  aks:
                    properties:
                      clientID:
                        description: The service principal used to access Azure. Can
                          be read from `credentialsReference` instead.
                        type: string
                      clientSecret:
                        description: The client secret corresponding to the given
                          service principal. Can be read from `credentialsReference`
                          instead.
                        type: string
                      credentialsReference:
                        description: CredentialsReference allows referencing a `Secret`
                          resource instead of passing secret data in this spec.
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: 'If referring to a piece of an object instead
                              of an entire object, this string should contain a valid
                              JSON/Go field access statement, such as desiredState.manifest.containers[2].
                              For example, if the object reference is to a container
                              within a pod, this would take on a value like: "spec.containers{name}"
                              (where "name" refers to the name of the container that
                              triggered the event) or if no container name is specified
                              "spec.containers[2]" (container with index 2 in this
                              pod). This syntax is chosen only to have some well-defined
                              way of referencing a part of an object. TODO: this design
                              is not final and this field is subject to change in
                              the future.'
                            type: string
                          key:
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                          resourceVersion:
                            description: 'Specific resourceVersion to which this reference
                              is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                      location:
                        description: The geo-location where the resource lives
                        type: string
                      name:
                        type: string
                      resourceGroup:
                        description: The resource group that will be used to look
                          up and create resources for the cluster in. If set to empty
                          string at cluster creation, a new resource group will be
                          created and this field will be updated to the generated
                          resource group's name.
                        type: string
                      subscriptionID:
                        description: The Azure Subscription used for this cluster.
                          Can be read from `credentialsReference` instead.
                        type: string
                      tenantID:
                        description: The Azure Active Directory Tenant used for this
                          cluster. Can be read from `credentialsReference` instead.
                        type: string
                    required:
                    - credentialsReference
                    - location
                    - name
                    - resourceGroup
                    type: object
                  bringyourown:
                    type: object
                  eks:
                    properties:
                      accessKeyID:
                        description: The Access key ID used to authenticate against
                          AWS. Can be read from `credentialsReference` instead.
                        type: string
                      assumeRoleARN:
                        description: 'The ARN for an IAM role that should be assumed
                          when handling resources on AWS. It will be used to acquire
                          temporary security credentials using an STS AssumeRole API
                          operation whenever creating an AWS session. required: false'
                        type: string
                      assumeRoleExternalID:
                        description: 'An arbitrary string that may be needed when
                          calling the STS AssumeRole API operation. Using an external
                          ID can help to prevent the "confused deputy problem". required:
                          false'
                        type: string
                      credentialsReference:
                        description: GlobalObjectKeySelector is needed as we can not
                          use v1.SecretKeySelector because it is not cross namespace.
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: 'If referring to a piece of an object instead
                              of an entire object, this string should contain a valid
                              JSON/Go field access statement, such as desiredState.manifest.containers[2].
                              For example, if the object reference is to a container
                              within a pod, this would take on a value like: "spec.containers{name}"
                              (where "name" refers to the name of the container that
                              triggered the event) or if no container name is specified
                              "spec.containers[2]" (container with index 2 in this
                              pod). This syntax is chosen only to have some well-defined
                              way of referencing a part of an object. TODO: this design
                              is not final and this field is subject to change in
                              the future.'
                            type: string
                          key:
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                          resourceVersion:
                            description: 'Specific resourceVersion to which this reference
                              is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                      name:
                        type: string
                      region:
                        type: string
                      roleArn:
                        description: The Amazon Resource Name (ARN) of the IAM role
                          that provides permissions for the Kubernetes control plane
                          to make calls to Amazon Web Services API operations on your
                          behalf.
                        type: string
                      secretAccessKey:
                        description: The Secret Access Key used to authenticate against
                          AWS. Can be read from `credentialsReference` instead.
                        type: string
                      securityGroupIDs:
                        description: The security groups associated with the cross-account
                          elastic network interfaces that are used to allow communication
                          between your nodes and the Kubernetes control plane.
                        items:
                          type: string
                        type: array
                      subnetIDs:
                        description: The subnets associated with your cluster.
                        items:
                          type: string
                        type: array
                      vpcID:
                        description: The VPC associated with your cluster.
                        type: string
                    required:
                    - credentialsReference
                    - name
                    - region
                    type: object
                  gke:
                    properties:
                      credentialsReference:
                        description: GlobalObjectKeySelector is needed as we can not
                          use v1.SecretKeySelector because it is not cross namespace.
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: 'If referring to a piece of an object instead
                              of an entire object, this string should contain a valid
                              JSON/Go field access statement, such as desiredState.manifest.containers[2].
                              For example, if the object reference is to a container
                              within a pod, this would take on a value like: "spec.containers{name}"
                              (where "name" refers to the name of the container that
                              triggered the event) or if no container name is specified
                              "spec.containers[2]" (container with index 2 in this
                              pod). This syntax is chosen only to have some well-defined
                              way of referencing a part of an object. TODO: this design
                              is not final and this field is subject to change in
                              the future.'
                            type: string
                          key:
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                          resourceVersion:
                            description: 'Specific resourceVersion to which this reference
                              is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                      name:
                        type: string
                      serviceAccount:
                        description: 'ServiceAccount: The Google Cloud Platform Service
                          Account. Can be read from `credentialsReference` instead.'
                        type: string
                      zone:
                        description: 'Zone: The name of the Google Compute Engine
                          zone (https://cloud.google.com/compute/docs/zones#available)
                          in which the cluster resides.'
                        type: string
                    required:
                    - credentialsReference
                    - name
                    - zone
                    type: object
                  kubeone:
                    properties:
                      credentialsReference:
                        description: GlobalObjectKeySelector is needed as we can not
                          use v1.SecretKeySelector because it is not cross namespace.
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: 'If referring to a piece of an object instead
                              of an entire object, this string should contain a valid
                              JSON/Go field access statement, such as desiredState.manifest.containers[2].
                              For example, if the object reference is to a container
                              within a pod, this would take on a value like: "spec.containers{name}"
                              (where "name" refers to the name of the container that
                              triggered the event) or if no container name is specified
                              "spec.containers[2]" (container with index 2 in this
                              pod). This syntax is chosen only to have some well-defined
                              way of referencing a part of an object. TODO: this design
                              is not final and this field is subject to change in
                              the future.'
                            type: string
                          key:
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                          resourceVersion:
                            description: 'Specific resourceVersion to which this reference
                              is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                      manifestReference:
                        description: GlobalObjectKeySelector is needed as we can not
                          use v1.SecretKeySelector because it is not cross namespace.
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: 'If referring to a piece of an object instead
                              of an entire object, this string should contain a valid
                              JSON/Go field access statement, such as desiredState.manifest.containers[2].
                              For example, if the object reference is to a container
                              within a pod, this would take on a value like: "spec.containers{name}"
                              (where "name" refers to the name of the container that
                              triggered the event) or if no container name is specified
                              "spec.containers[2]" (container with index 2 in this
                              pod). This syntax is chosen only to have some well-defined
                              way of referencing a part of an object. TODO: this design
                              is not final and this field is subject to change in
                              the future.'
                            type: string
                          key:
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                          resourceVersion:
                            description: 'Specific resourceVersion to which this reference
                              is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                      providerName:
                        description: The name of the cloud provider used, one of "aws",
                          "azure", "digitalocean", "gcp", "hetzner", "nutanix", "openstack",
                          "packet", "vsphere" KubeOne natively-supported providers
                        type: string
                      region:
                        description: The cloud provider region in which the cluster
                          resides. This field is used only to display information.
                        type: string
                      sshReference:
                        description: GlobalObjectKeySelector is needed as we can not
                          use v1.SecretKeySelector because it is not cross namespace.
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: 'If referring to a piece of an object instead
                              of an entire object, this string should contain a valid
                              JSON/Go field access statement, such as desiredState.manifest.containers[2].
                              For example, if the object reference is to a container
                              within a pod, this would take on a value like: "spec.containers{name}"
                              (where "name" refers to the name of the container that
                              triggered the event) or if no container name is specified
                              "spec.containers[2]" (container with index 2 in this
                              pod). This syntax is chosen only to have some well-defined
                              way of referencing a part of an object. TODO: this design
                              is not final and this field is subject to change in
                              the future.'
                            type: string
                          key:
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                          resourceVersion:
                            description: 'Specific resourceVersion to which this reference
                              is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                    required:
                    - providerName
                    type: object
                  providerName:
                    description: ExternalClusterProvider is the identifier for the
                      cloud provider that hosts the external cluster control plane.
                    enum:
                    - aks
                    - bringyourown
                    - eks
                    - gke
                    - kubeone
                    type: string
                required:
                - providerName
                type: object
              clusterNetwork:
                description: ClusterNetwork contains the different networking parameters
                  for an external cluster.
                properties:
                  pods:
                    description: The network ranges from which POD networks are allocated.
                      It can contain one IPv4 and/or one IPv6 CIDR. If both address
                      families are specified, the first one defines the primary address
                      family.
                    properties:
                      cidrBlocks:
                        items:
                          type: string
                        type: array
                    type: object
                  services:
                    description: The network ranges from which service VIPs are allocated.
                      It can contain one IPv4 and/or one IPv6 CIDR. If both address
                      families are specified, the first one defines the primary address
                      family.
                    properties:
                      cidrBlocks:
                        items:
                          type: string
                        type: array
                    type: object
                type: object
              containerRuntime:
                description: ContainerRuntime to use, i.e. `docker` or `containerd`.
                type: string
              humanReadableName:
                description: HumanReadableName is the cluster name provided by the
                  user
                type: string
              kubeconfigReference:
                description: Reference to cluster Kubeconfig
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: 'If referring to a piece of an object instead of
                      an entire object, this string should contain a valid JSON/Go
                      field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within
                      a pod, this would take on a value like: "spec.containers{name}"
                      (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]"
                      (container with index 2 in this pod). This syntax is chosen
                      only to have some well-defined way of referencing a part of
                      an object. TODO: this design is not final and this field is
                      subject to change in the future.'
                    type: string
                  key:
                    type: string
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                  resourceVersion:
                    description: 'Specific resourceVersion to which this reference
                      is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              pause:
                description: If this is set to true, the cluster will not be reconciled
                  by KKP. This indicates that the user needs to do some action to
                  resolve the pause.
                type: boolean
              pauseReason:
                description: PauseReason is the reason why the cluster is not being
                  managed. This field is for informational purpose only and can be
                  set by a user or a controller to communicate the reason for pausing
                  the cluster.
                type: string
              version:
                description: Defines the wanted version of the control plane.
                type: string
            required:
            - cloudSpec
            - humanReadableName
            - pause
            - version
            type: object
          status:
            description: Status contains reconciliation information for the cluster.
            properties:
              condition:
                description: Conditions contains conditions an externalcluster is
                  in, its primary use case is status signaling for controller
                properties:
                  message:
                    description: Human readable message indicating details about last
                      transition.
                    type: string
                  phase:
                    type: string
                required:
                - phase
                type: object
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources: {}
---
# Source: kubermatic-operator/templates/crds.tpl
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    app.kubernetes.io/version: v2.24.5
    controller-gen.kubebuilder.io/version: v0.13.0
    helm.sh/resource-policy: keep
    kubermatic.k8c.io/location: master,seed
  labels:
    app.kubernetes.io/component: operator
    app.kubernetes.io/instance: my-kubermatic-operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubermatic-operator
    app.kubernetes.io/version: v2.24.5
    helm.sh/chart: kubermatic-operator-v2.24.5
  name: groupprojectbindings.kubermatic.k8c.io
spec:
  group: kubermatic.k8c.io
  names:
    kind: GroupProjectBinding
    listKind: GroupProjectBindingList
    plural: groupprojectbindings
    singular: groupprojectbinding
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.projectID
      name: ProjectID
      type: string
    - jsonPath: .spec.group
      name: Group
      type: string
    - jsonPath: .spec.role
      name: Role
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1
    schema:
      openAPIV3Schema:
        description: GroupProjectBinding specifies a binding between a group and a
          project This resource is used by the user management to manipulate member
          groups of the given project.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Spec describes an oidc group binding to a project.
            properties:
              group:
                description: Group is the group name that is bound to the given project.
                type: string
              projectID:
                description: ProjectID is the ID of the target project. Should be
                  a valid lowercase RFC1123 domain name
                maxLength: 63
                pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                type: string
              role:
                description: 'Role is the user''s role within the project, determining
                  their permissions. Possible roles are: "viewers" - allowed to get/list
                  project resources "editors" - allowed to edit all project resources
                  "owners" - same as editors, but also can manage users in the project'
                enum:
                - viewers
                - editors
                - owners
                type: string
            required:
            - group
            - projectID
            - role
            type: object
        type: object
    served: true
    storage: true
    subresources: {}
---
# Source: kubermatic-operator/templates/crds.tpl
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    app.kubernetes.io/version: v2.24.5
    controller-gen.kubebuilder.io/version: v0.13.0
    helm.sh/resource-policy: keep
    kubermatic.k8c.io/location: master,seed
  labels:
    app.kubernetes.io/component: operator
    app.kubernetes.io/instance: my-kubermatic-operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubermatic-operator
    app.kubernetes.io/version: v2.24.5
    helm.sh/chart: kubermatic-operator-v2.24.5
  name: ipamallocations.kubermatic.k8c.io
spec:
  group: kubermatic.k8c.io
  names:
    kind: IPAMAllocation
    listKind: IPAMAllocationList
    plural: ipamallocations
    singular: ipamallocation
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1
    schema:
      openAPIV3Schema:
        description: IPAMAllocation is the object representing an allocation from
          an IPAMPool made for a particular KKP user cluster.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: IPAMAllocationSpec specifies an allocation from an IPAMPool
              made for a particular KKP user cluster.
            properties:
              addresses:
                description: Addresses are the IP address ranges that are being used
                  for the allocation. Set when "type=range".
                items:
                  type: string
                type: array
              cidr:
                description: CIDR is the CIDR that is being used for the allocation.
                  Set when "type=prefix".
                pattern: ((^((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))/([0-9]|[1-2][0-9]|3[0-2])$)|(^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:))/([0-9]|[0-9][0-9]|1[0-1][0-9]|12[0-8])$))
                type: string
              dc:
                description: DC is the datacenter of the allocation.
                type: string
              type:
                description: Type is the allocation type that is being used.
                enum:
                - prefix
                - range
                type: string
            required:
            - dc
            - type
            type: object
        type: object
    served: true
    storage: true
    subresources: {}
---
# Source: kubermatic-operator/templates/crds.tpl
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    app.kubernetes.io/version: v2.24.5
    controller-gen.kubebuilder.io/version: v0.13.0
    helm.sh/resource-policy: keep
    kubermatic.k8c.io/location: master,seed
  labels:
    app.kubernetes.io/component: operator
    app.kubernetes.io/instance: my-kubermatic-operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubermatic-operator
    app.kubernetes.io/version: v2.24.5
    helm.sh/chart: kubermatic-operator-v2.24.5
  name: ipampools.kubermatic.k8c.io
spec:
  group: kubermatic.k8c.io
  names:
    kind: IPAMPool
    listKind: IPAMPoolList
    plural: ipampools
    singular: ipampool
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1
    schema:
      openAPIV3Schema:
        description: IPAMPool is the object representing Multi-Cluster IP Address
          Management (IPAM) configuration for KKP user clusters.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Spec describes the Multi-Cluster IP Address Management (IPAM)
              configuration for KKP user clusters.
            properties:
              datacenters:
                additionalProperties:
                  description: IPAMPoolDatacenterSettings contains IPAM Pool configuration
                    for a datacenter.
                  properties:
                    allocationPrefix:
                      description: AllocationPrefix is the prefix for the allocation.
                        Used when "type=prefix".
                      maximum: 128
                      minimum: 1
                      type: integer
                    allocationRange:
                      description: AllocationRange is the range for the allocation.
                        Used when "type=range".
                      minimum: 1
                      type: integer
                    excludePrefixes:
                      description: 'Optional: ExcludePrefixes is used to exclude particular
                        subnets for the allocation. NOTE: must be the same length
                        as allocationPrefix. Can be used when "type=prefix".'
                      items:
                        description: SubnetCIDR is used to store IPv4/IPv6 CIDR.
                        pattern: ((^((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))/([0-9]|[1-2][0-9]|3[0-2])$)|(^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:))/([0-9]|[0-9][0-9]|1[0-1][0-9]|12[0-8])$))
                        type: string
                      type: array
                    excludeRanges:
                      description: 'Optional: ExcludeRanges is used to exclude particular
                        IPs or IP ranges for the allocation. Examples: "192.168.1.100-192.168.1.110",
                        "192.168.1.255". Can be used when "type=range".'
                      items:
                        type: string
                      type: array
                    poolCidr:
                      description: PoolCIDR is the pool CIDR to be used for the allocation.
                      pattern: ((^((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))/([0-9]|[1-2][0-9]|3[0-2])$)|(^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:))/([0-9]|[0-9][0-9]|1[0-1][0-9]|12[0-8])$))
                      type: string
                    type:
                      description: Type is the allocation type to be used.
                      enum:
                      - prefix
                      - range
                      type: string
                  required:
                  - poolCidr
                  - type
                  type: object
                description: Datacenters contains a map of datacenters (DCs) for the
                  allocation.
                type: object
            required:
            - datacenters
            type: object
        type: object
    served: true
    storage: true
    subresources: {}
---
# Source: kubermatic-operator/templates/crds.tpl
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    app.kubernetes.io/version: v2.24.5
    controller-gen.kubebuilder.io/version: v0.13.0
    helm.sh/resource-policy: keep
    kubermatic.k8c.io/location: master,seed
  labels:
    app.kubernetes.io/component: operator
    app.kubernetes.io/instance: my-kubermatic-operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubermatic-operator
    app.kubernetes.io/version: v2.24.5
    helm.sh/chart: kubermatic-operator-v2.24.5
  name: kubermaticconfigurations.kubermatic.k8c.io
spec:
  group: kubermatic.k8c.io
  names:
    kind: KubermaticConfiguration
    listKind: KubermaticConfigurationList
    plural: kubermaticconfigurations
    singular: kubermaticconfiguration
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1
    schema:
      openAPIV3Schema:
        description: KubermaticConfiguration is the configuration required for running
          Kubermatic.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: KubermaticConfigurationSpec is the spec for a Kubermatic
              installation.
            properties:
              api:
                description: API configures the frontend REST API used by the dashboard.
                properties:
                  accessibleAddons:
                    description: AccessibleAddons is a list of addons that should
                      be enabled in the API.
                    items:
                      type: string
                    type: array
                  debugLog:
                    description: DebugLog enables more verbose logging.
                    type: boolean
                  dockerRepository:
                    description: DockerRepository is the repository containing the
                      Kubermatic REST API image.
                    type: string
                  pprofEndpoint:
                    description: PProfEndpoint controls the port the API should listen
                      on to provide pprof data. This port is never exposed from the
                      container and only available via port-forwardings.
                    type: string
                  replicas:
                    description: Replicas sets the number of pod replicas for the
                      API deployment.
                    format: int32
                    type: integer
                  resources:
                    description: Resources describes the requested and maximum allowed
                      CPU/memory usage.
                    properties:
                      claims:
                        description: "Claims lists the names of resources, defined
                          in spec.resourceClaims, that are used by this container.
                          \n This is an alpha field and requires enabling the DynamicResourceAllocation
                          feature gate. \n This field is immutable. It can only be
                          set for containers."
                        items:
                          description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                          properties:
                            name:
                              description: Name must match the name of one entry in
                                pod.spec.resourceClaims of the Pod where this field
                                is used. It makes that resource available inside a
                                container.
                              type: string
                          required:
                          - name
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Limits describes the maximum amount of compute
                          resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Requests describes the minimum amount of compute
                          resources required. If Requests is omitted for a container,
                          it defaults to Limits if that is explicitly specified, otherwise
                          to an implementation-defined value. Requests cannot exceed
                          Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                    type: object
                type: object
              auth:
                description: Auth defines keys and URLs for Dex. These must be defined
                  unless the HeadlessInstallation feature gate is set, which will
                  disable the UI/API and its need for an OIDC provider entirely.
                properties:
                  clientID:
                    type: string
                  issuerClientID:
                    type: string
                  issuerClientSecret:
                    type: string
                  issuerCookieKey:
                    type: string
                  issuerRedirectURL:
                    type: string
                  serviceAccountKey:
                    type: string
                  skipTokenIssuerTLSVerify:
                    type: boolean
                  tokenIssuer:
                    type: string
                type: object
              caBundle:
                description: CABundle references a ConfigMap in the same namespace
                  as the KubermaticConfiguration. This ConfigMap must contain a ca-bundle.pem
                  with PEM-encoded certificates. This bundle automatically synchronized
                  into each seed and each usercluster. APIGroup and Kind are currently
                  ignored.
                properties:
                  apiGroup:
                    description: APIGroup is the group for the resource being referenced.
                      If APIGroup is not specified, the specified Kind must be in
                      the core API group. For any other third-party types, APIGroup
                      is required.
                    type: string
                  kind:
                    description: Kind is the type of resource being referenced
                    type: string
                  name:
                    description: Name is the name of resource being referenced
                    type: string
                required:
                - kind
                - name
                type: object
                x-kubernetes-map-type: atomic
              exposeStrategy:
                description: 'ExposeStrategy is the strategy to expose the cluster
                  with. Note: The `seed_dns_overwrite` setting of a Seed''s datacenter
                  doesn''t have any effect if this is set to LoadBalancerStrategy.'
                enum:
                - NodePort
                - LoadBalancer
                - Tunneling
                type: string
              featureGates:
                additionalProperties:
                  type: boolean
                description: FeatureGates are used to optionally enable certain features.
                type: object
              imagePullSecret:
                description: ImagePullSecret is used to authenticate against Docker
                  registries.
                type: string
              ingress:
                description: Ingress contains settings for making the API and UI accessible
                  remotely.
                properties:
                  certificateIssuer:
                    description: CertificateIssuer is the name of a cert-manager Issuer
                      or ClusterIssuer (default) that will be used to acquire the
                      certificate for the configured domain. To use a namespaced Issuer,
                      set the Kind to "Issuer" and manually create the matching Issuer
                      in Kubermatic's namespace. Setting an empty name disables the
                      automatic creation of certificates and disables the TLS settings
                      on the Kubermatic Ingress.
                    properties:
                      apiGroup:
                        description: APIGroup is the group for the resource being
                          referenced. If APIGroup is not specified, the specified
                          Kind must be in the core API group. For any other third-party
                          types, APIGroup is required.
                        type: string
                      kind:
                        description: Kind is the type of resource being referenced
                        type: string
                      name:
                        description: Name is the name of resource being referenced
                        type: string
                    required:
                    - kind
                    - name
                    type: object
                    x-kubernetes-map-type: atomic
                  className:
                    description: ClassName is the Ingress resource's class name, used
                      for selecting the appropriate ingress controller.
                    type: string
                  disable:
                    description: Disable will prevent an Ingress from being created
                      at all. This is mostly useful during testing. If the Ingress
                      is disabled, the CertificateIssuer setting can also be left
                      empty, as no Certificate resource will be created.
                    type: boolean
                  domain:
                    description: Domain is the base domain where the dashboard shall
                      be available. Even with a disabled Ingress, this must always
                      be a valid hostname.
                    type: string
                required:
                - domain
                type: object
              masterController:
                description: MasterController configures the master-controller-manager.
                properties:
                  debugLog:
                    description: DebugLog enables more verbose logging.
                    type: boolean
                  dockerRepository:
                    description: DockerRepository is the repository containing the
                      Kubermatic master-controller-manager image.
                    type: string
                  pprofEndpoint:
                    description: PProfEndpoint controls the port the master-controller-manager
                      should listen on to provide pprof data. This port is never exposed
                      from the container and only available via port-forwardings.
                    type: string
                  projectsMigrator:
                    description: ProjectsMigrator configures the migrator for user
                      projects.
                    properties:
                      dryRun:
                        description: DryRun makes the migrator only log the actions
                          it would take.
                        type: boolean
                    type: object
                  replicas:
                    description: Replicas sets the number of pod replicas for the
                      master-controller-manager.
                    format: int32
                    type: integer
                  resources:
                    description: Resources describes the requested and maximum allowed
                      CPU/memory usage.
                    properties:
                      claims:
                        description: "Claims lists the names of resources, defined
                          in spec.resourceClaims, that are used by this container.
                          \n This is an alpha field and requires enabling the DynamicResourceAllocation
                          feature gate. \n This field is immutable. It can only be
                          set for containers."
                        items:
                          description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                          properties:
                            name:
                              description: Name must match the name of one entry in
                                pod.spec.resourceClaims of the Pod where this field
                                is used. It makes that resource available inside a
                                container.
                              type: string
                          required:
                          - name
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Limits describes the maximum amount of compute
                          resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Requests describes the minimum amount of compute
                          resources required. If Requests is omitted for a container,
                          it defaults to Limits if that is explicitly specified, otherwise
                          to an implementation-defined value. Requests cannot exceed
                          Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                    type: object
                type: object
              proxy:
                description: Proxy allows to configure Kubermatic to use proxies to
                  talk to the world outside of its cluster.
                properties:
                  http:
                    description: HTTP is the full URL to the proxy to use for plaintext
                      HTTP connections, e.g. "http://internalproxy.example.com:8080".
                    type: string
                  https:
                    description: HTTPS is the full URL to the proxy to use for encrypted
                      HTTPS connections, e.g. "http://secureinternalproxy.example.com:8080".
                    type: string
                  noProxy:
                    description: 'NoProxy is a comma-separated list of hostnames /
                      network masks for which no proxy shall be used. If you make
                      use of proxies, this list should contain all local and cluster-internal
                      domains and networks, e.g. "10.0.0.0/8,172.16.0.0/12,192.168.0.0/16,mydomain".
                      The operator will always prepend the following elements to this
                      list if proxying is configured (i.e. HTTP/HTTPS are not empty):
                      "127.0.0.1/8", "localhost", ".local", ".local.", "kubernetes",
                      ".default", ".svc"'
                    type: string
                type: object
              seedController:
                description: SeedController configures the seed-controller-manager.
                properties:
                  backupCleanupContainer:
                    description: 'Deprecated: BackupCleanupContainer is the container
                      used for removing expired backups from the storage location.
                      This field is a no-op and is no longer used. The old backup
                      controller it was used for has been removed. Do not set this
                      field.'
                    type: string
                  backupDeleteContainer:
                    description: BackupDeleteContainer is the container used for deleting
                      etcd snapshots from a backup location.
                    type: string
                  backupStoreContainer:
                    description: BackupStoreContainer is the container used for shipping
                      etcd snapshots to a backup location.
                    type: string
                  debugLog:
                    description: DebugLog enables more verbose logging.
                    type: boolean
                  dockerRepository:
                    description: DockerRepository is the repository containing the
                      Kubermatic seed-controller-manager image.
                    type: string
                  maximumParallelReconciles:
                    description: MaximumParallelReconciles limits the number of cluster
                      reconciliations that are active at any given time.
                    type: integer
                  pprofEndpoint:
                    description: PProfEndpoint controls the port the seed-controller-manager
                      should listen on to provide pprof data. This port is never exposed
                      from the container and only available via port-forwardings.
                    type: string
                  replicas:
                    description: Replicas sets the number of pod replicas for the
                      seed-controller-manager.
                    format: int32
                    type: integer
                  resources:
                    description: Resources describes the requested and maximum allowed
                      CPU/memory usage.
                    properties:
                      claims:
                        description: "Claims lists the names of resources, defined
                          in spec.resourceClaims, that are used by this container.
                          \n This is an alpha field and requires enabling the DynamicResourceAllocation
                          feature gate. \n This field is immutable. It can only be
                          set for containers."
                        items:
                          description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                          properties:
                            name:
                              description: Name must match the name of one entry in
                                pod.spec.resourceClaims of the Pod where this field
                                is used. It makes that resource available inside a
                                container.
                              type: string
                          required:
                          - name
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Limits describes the maximum amount of compute
                          resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Requests describes the minimum amount of compute
                          resources required. If Requests is omitted for a container,
                          it defaults to Limits if that is explicitly specified, otherwise
                          to an implementation-defined value. Requests cannot exceed
                          Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                    type: object
                type: object
              ui:
                description: UI configures the dashboard.
                properties:
                  config:
                    description: Config sets flags for various dashboard features.
                    type: string
                  dockerRepository:
                    description: DockerRepository is the repository containing the
                      Kubermatic dashboard image.
                    type: string
                  dockerTag:
                    description: DockerTag is used to overwrite the dashboard Docker
                      image tag and is only for development purposes. This field must
                      not be set in production environments. If DockerTag is specified
                      then DockerTagSuffix will be ignored. ---
                    type: string
                  dockerTagSuffix:
                    description: DockerTagSuffix is appended to the KKP version used
                      for referring to the custom dashboard image. If left empty,
                      either the `DockerTag` if specified or the original dashboard
                      Docker image tag will be used. With DockerTagSuffix the tag
                      becomes <KKP_VERSION:SUFFIX> i.e. "v2.15.0-SUFFIX".
                    type: string
                  extraVolumeMounts:
                    description: ExtraVolumeMounts allows to mount additional volumes
                      into the UI container.
                    items:
                      description: VolumeMount describes a mounting of a Volume within
                        a container.
                      properties:
                        mountPath:
                          description: Path within the container at which the volume
                            should be mounted.  Must not contain ':'.
                          type: string
                        mountPropagation:
                          description: mountPropagation determines how mounts are
                            propagated from the host to container and the other way
                            around. When not set, MountPropagationNone is used. This
                            field is beta in 1.10.
                          type: string
                        name:
                          description: This must match the Name of a Volume.
                          type: string
                        readOnly:
                          description: Mounted read-only if true, read-write otherwise
                            (false or unspecified). Defaults to false.
                          type: boolean
                        subPath:
                          description: Path within the volume from which the container's
                            volume should be mounted. Defaults to "" (volume's root).
                          type: string
                        subPathExpr:
                          description: Expanded path within the volume from which
                            the container's volume should be mounted. Behaves similarly
                            to SubPath but environment variable references $(VAR_NAME)
                            are expanded using the container's environment. Defaults
                            to "" (volume's root). SubPathExpr and SubPath are mutually
                            exclusive.
                          type: string
                      required:
                      - mountPath
                      - name
                      type: object
                    type: array
                  extraVolumes:
                    description: ExtraVolumes allows to mount additional volumes into
                      the UI container.
                    items:
                      description: Volume represents a named volume in a pod that
                        may be accessed by any container in the pod.
                      properties:
                        awsElasticBlockStore:
                          description: 'awsElasticBlockStore represents an AWS Disk
                            resource that is attached to a kubelet''s host machine
                            and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
                          properties:
                            fsType:
                              description: 'fsType is the filesystem type of the volume
                                that you want to mount. Tip: Ensure that the filesystem
                                type is supported by the host operating system. Examples:
                                "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4"
                                if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
                                TODO: how do we prevent errors in the filesystem from
                                compromising the machine'
                              type: string
                            partition:
                              description: 'partition is the partition in the volume
                                that you want to mount. If omitted, the default is
                                to mount by volume name. Examples: For volume /dev/sda1,
                                you specify the partition as "1". Similarly, the volume
                                partition for /dev/sda is "0" (or you can leave the
                                property empty).'
                              format: int32
                              type: integer
                            readOnly:
                              description: 'readOnly value true will force the readOnly
                                setting in VolumeMounts. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
                              type: boolean
                            volumeID:
                              description: 'volumeID is unique ID of the persistent
                                disk resource in AWS (Amazon EBS volume). More info:
                                https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
                              type: string
                          required:
                          - volumeID
                          type: object
                        azureDisk:
                          description: azureDisk represents an Azure Data Disk mount
                            on the host and bind mount to the pod.
                          properties:
                            cachingMode:
                              description: 'cachingMode is the Host Caching mode:
                                None, Read Only, Read Write.'
                              type: string
                            diskName:
                              description: diskName is the Name of the data disk in
                                the blob storage
                              type: string
                            diskURI:
                              description: diskURI is the URI of data disk in the
                                blob storage
                              type: string
                            fsType:
                              description: fsType is Filesystem type to mount. Must
                                be a filesystem type supported by the host operating
                                system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred
                                to be "ext4" if unspecified.
                              type: string
                            kind:
                              description: 'kind expected values are Shared: multiple
                                blob disks per storage account  Dedicated: single
                                blob disk per storage account  Managed: azure managed
                                data disk (only in managed availability set). defaults
                                to shared'
                              type: string
                            readOnly:
                              description: readOnly Defaults to false (read/write).
                                ReadOnly here will force the ReadOnly setting in VolumeMounts.
                              type: boolean
                          required:
                          - diskName
                          - diskURI
                          type: object
                        azureFile:
                          description: azureFile represents an Azure File Service
                            mount on the host and bind mount to the pod.
                          properties:
                            readOnly:
                              description: readOnly defaults to false (read/write).
                                ReadOnly here will force the ReadOnly setting in VolumeMounts.
                              type: boolean
                            secretName:
                              description: secretName is the  name of secret that
                                contains Azure Storage Account Name and Key
                              type: string
                            shareName:
                              description: shareName is the azure share Name
                              type: string
                          required:
                          - secretName
                          - shareName
                          type: object
                        cephfs:
                          description: cephFS represents a Ceph FS mount on the host
                            that shares a pod's lifetime
                          properties:
                            monitors:
                              description: 'monitors is Required: Monitors is a collection
                                of Ceph monitors More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                              items:
                                type: string
                              type: array
                            path:
                              description: 'path is Optional: Used as the mounted
                                root, rather than the full Ceph tree, default is /'
                              type: string
                            readOnly:
                              description: 'readOnly is Optional: Defaults to false
                                (read/write). ReadOnly here will force the ReadOnly
                                setting in VolumeMounts. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                              type: boolean
                            secretFile:
                              description: 'secretFile is Optional: SecretFile is
                                the path to key ring for User, default is /etc/ceph/user.secret
                                More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                              type: string
                            secretRef:
                              description: 'secretRef is Optional: SecretRef is reference
                                to the authentication secret for User, default is
                                empty. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                              properties:
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                              type: object
                              x-kubernetes-map-type: atomic
                            user:
                              description: 'user is optional: User is the rados user
                                name, default is admin More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                              type: string
                          required:
                          - monitors
                          type: object
                        cinder:
                          description: 'cinder represents a cinder volume attached
                            and mounted on kubelets host machine. More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                          properties:
                            fsType:
                              description: 'fsType is the filesystem type to mount.
                                Must be a filesystem type supported by the host operating
                                system. Examples: "ext4", "xfs", "ntfs". Implicitly
                                inferred to be "ext4" if unspecified. More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                              type: string
                            readOnly:
                              description: 'readOnly defaults to false (read/write).
                                ReadOnly here will force the ReadOnly setting in VolumeMounts.
                                More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                              type: boolean
                            secretRef:
                              description: 'secretRef is optional: points to a secret
                                object containing parameters used to connect to OpenStack.'
                              properties:
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                              type: object
                              x-kubernetes-map-type: atomic
                            volumeID:
                              description: 'volumeID used to identify the volume in
                                cinder. More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                              type: string
                          required:
                          - volumeID
                          type: object
                        configMap:
                          description: configMap represents a configMap that should
                            populate this volume
                          properties:
                            defaultMode:
                              description: 'defaultMode is optional: mode bits used
                                to set permissions on created files by default. Must
                                be an octal value between 0000 and 0777 or a decimal
                                value between 0 and 511. YAML accepts both octal and
                                decimal values, JSON requires decimal values for mode
                                bits. Defaults to 0644. Directories within the path
                                are not affected by this setting. This might be in
                                conflict with other options that affect the file mode,
                                like fsGroup, and the result can be other mode bits
                                set.'
                              format: int32
                              type: integer
                            items:
                              description: items if unspecified, each key-value pair
                                in the Data field of the referenced ConfigMap will
                                be projected into the volume as a file whose name
                                is the key and content is the value. If specified,
                                the listed keys will be projected into the specified
                                paths, and unlisted keys will not be present. If a
                                key is specified which is not present in the ConfigMap,
                                the volume setup will error unless it is marked optional.
                                Paths must be relative and may not contain the '..'
                                path or start with '..'.
                              items:
                                description: Maps a string key to a path within a
                                  volume.
                                properties:
                                  key:
                                    description: key is the key to project.
                                    type: string
                                  mode:
                                    description: 'mode is Optional: mode bits used
                                      to set permissions on this file. Must be an
                                      octal value between 0000 and 0777 or a decimal
                                      value between 0 and 511. YAML accepts both octal
                                      and decimal values, JSON requires decimal values
                                      for mode bits. If not specified, the volume
                                      defaultMode will be used. This might be in conflict
                                      with other options that affect the file mode,
                                      like fsGroup, and the result can be other mode
                                      bits set.'
                                    format: int32
                                    type: integer
                                  path:
                                    description: path is the relative path of the
                                      file to map the key to. May not be an absolute
                                      path. May not contain the path element '..'.
                                      May not start with the string '..'.
                                    type: string
                                required:
                                - key
                                - path
                                type: object
                              type: array
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: optional specify whether the ConfigMap
                                or its keys must be defined
                              type: boolean
                          type: object
                          x-kubernetes-map-type: atomic
                        csi:
                          description: csi (Container Storage Interface) represents
                            ephemeral storage that is handled by certain external
                            CSI drivers (Beta feature).
                          properties:
                            driver:
                              description: driver is the name of the CSI driver that
                                handles this volume. Consult with your admin for the
                                correct name as registered in the cluster.
                              type: string
                            fsType:
                              description: fsType to mount. Ex. "ext4", "xfs", "ntfs".
                                If not provided, the empty value is passed to the
                                associated CSI driver which will determine the default
                                filesystem to apply.
                              type: string
                            nodePublishSecretRef:
                              description: nodePublishSecretRef is a reference to
                                the secret object containing sensitive information
                                to pass to the CSI driver to complete the CSI NodePublishVolume
                                and NodeUnpublishVolume calls. This field is optional,
                                and  may be empty if no secret is required. If the
                                secret object contains more than one secret, all secret
                                references are passed.
                              properties:
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                              type: object
                              x-kubernetes-map-type: atomic
                            readOnly:
                              description: readOnly specifies a read-only configuration
                                for the volume. Defaults to false (read/write).
                              type: boolean
                            volumeAttributes:
                              additionalProperties:
                                type: string
                              description: volumeAttributes stores driver-specific
                                properties that are passed to the CSI driver. Consult
                                your driver's documentation for supported values.
                              type: object
                          required:
                          - driver
                          type: object
                        downwardAPI:
                          description: downwardAPI represents downward API about the
                            pod that should populate this volume
                          properties:
                            defaultMode:
                              description: 'Optional: mode bits to use on created
                                files by default. Must be a Optional: mode bits used
                                to set permissions on created files by default. Must
                                be an octal value between 0000 and 0777 or a decimal
                                value between 0 and 511. YAML accepts both octal and
                                decimal values, JSON requires decimal values for mode
                                bits. Defaults to 0644. Directories within the path
                                are not affected by this setting. This might be in
                                conflict with other options that affect the file mode,
                                like fsGroup, and the result can be other mode bits
                                set.'
                              format: int32
                              type: integer
                            items:
                              description: Items is a list of downward API volume
                                file
                              items:
                                description: DownwardAPIVolumeFile represents information
                                  to create the file containing the pod field
                                properties:
                                  fieldRef:
                                    description: 'Required: Selects a field of the
                                      pod: only annotations, labels, name and namespace
                                      are supported.'
                                    properties:
                                      apiVersion:
                                        description: Version of the schema the FieldPath
                                          is written in terms of, defaults to "v1".
                                        type: string
                                      fieldPath:
                                        description: Path of the field to select in
                                          the specified API version.
                                        type: string
                                    required:
                                    - fieldPath
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  mode:
                                    description: 'Optional: mode bits used to set
                                      permissions on this file, must be an octal value
                                      between 0000 and 0777 or a decimal value between
                                      0 and 511. YAML accepts both octal and decimal
                                      values, JSON requires decimal values for mode
                                      bits. If not specified, the volume defaultMode
                                      will be used. This might be in conflict with
                                      other options that affect the file mode, like
                                      fsGroup, and the result can be other mode bits
                                      set.'
                                    format: int32
                                    type: integer
                                  path:
                                    description: 'Required: Path is  the relative
                                      path name of the file to be created. Must not
                                      be absolute or contain the ''..'' path. Must
                                      be utf-8 encoded. The first item of the relative
                                      path must not start with ''..'''
                                    type: string
                                  resourceFieldRef:
                                    description: 'Selects a resource of the container:
                                      only resources limits and requests (limits.cpu,
                                      limits.memory, requests.cpu and requests.memory)
                                      are currently supported.'
                                    properties:
                                      containerName:
                                        description: 'Container name: required for
                                          volumes, optional for env vars'
                                        type: string
                                      divisor:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        description: Specifies the output format of
                                          the exposed resources, defaults to "1"
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                      resource:
                                        description: 'Required: resource to select'
                                        type: string
                                    required:
                                    - resource
                                    type: object
                                    x-kubernetes-map-type: atomic
                                required:
                                - path
                                type: object
                              type: array
                          type: object
                        emptyDir:
                          description: 'emptyDir represents a temporary directory
                            that shares a pod''s lifetime. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
                          properties:
                            medium:
                              description: 'medium represents what type of storage
                                medium should back this directory. The default is
                                "" which means to use the node''s default medium.
                                Must be an empty string (default) or Memory. More
                                info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
                              type: string
                            sizeLimit:
                              anyOf:
                              - type: integer
                              - type: string
                              description: 'sizeLimit is the total amount of local
                                storage required for this EmptyDir volume. The size
                                limit is also applicable for memory medium. The maximum
                                usage on memory medium EmptyDir would be the minimum
                                value between the SizeLimit specified here and the
                                sum of memory limits of all containers in a pod. The
                                default is nil which means that the limit is undefined.
                                More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                          type: object
                        ephemeral:
                          description: "ephemeral represents a volume that is handled
                            by a cluster storage driver. The volume's lifecycle is
                            tied to the pod that defines it - it will be created before
                            the pod starts, and deleted when the pod is removed. \n
                            Use this if: a) the volume is only needed while the pod
                            runs, b) features of normal volumes like restoring from
                            snapshot or capacity tracking are needed, c) the storage
                            driver is specified through a storage class, and d) the
                            storage driver supports dynamic volume provisioning through
                            a PersistentVolumeClaim (see EphemeralVolumeSource for
                            more information on the connection between this volume
                            type and PersistentVolumeClaim). \n Use PersistentVolumeClaim
                            or one of the vendor-specific APIs for volumes that persist
                            for longer than the lifecycle of an individual pod. \n
                            Use CSI for light-weight local ephemeral volumes if the
                            CSI driver is meant to be used that way - see the documentation
                            of the driver for more information. \n A pod can use both
                            types of ephemeral volumes and persistent volumes at the
                            same time."
                          properties:
                            volumeClaimTemplate:
                              description: "Will be used to create a stand-alone PVC
                                to provision the volume. The pod in which this EphemeralVolumeSource
                                is embedded will be the owner of the PVC, i.e. the
                                PVC will be deleted together with the pod.  The name
                                of the PVC will be `<pod name>-<volume name>` where
                                `<volume name>` is the name from the `PodSpec.Volumes`
                                array entry. Pod validation will reject the pod if
                                the concatenated name is not valid for a PVC (for
                                example, too long). \n An existing PVC with that name
                                that is not owned by the pod will *not* be used for
                                the pod to avoid using an unrelated volume by mistake.
                                Starting the pod is then blocked until the unrelated
                                PVC is removed. If such a pre-created PVC is meant
                                to be used by the pod, the PVC has to updated with
                                an owner reference to the pod once the pod exists.
                                Normally this should not be necessary, but it may
                                be useful when manually reconstructing a broken cluster.
                                \n This field is read-only and no changes will be
                                made by Kubernetes to the PVC after it has been created.
                                \n Required, must not be nil."
                              properties:
                                metadata:
                                  description: May contain labels and annotations
                                    that will be copied into the PVC when creating
                                    it. No other fields are allowed and will be rejected
                                    during validation.
                                  type: object
                                spec:
                                  description: The specification for the PersistentVolumeClaim.
                                    The entire content is copied unchanged into the
                                    PVC that gets created from this template. The
                                    same fields as in a PersistentVolumeClaim are
                                    also valid here.
                                  properties:
                                    accessModes:
                                      description: 'accessModes contains the desired
                                        access modes the volume should have. More
                                        info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                                      items:
                                        type: string
                                      type: array
                                    dataSource:
                                      description: 'dataSource field can be used to
                                        specify either: * An existing VolumeSnapshot
                                        object (snapshot.storage.k8s.io/VolumeSnapshot)
                                        * An existing PVC (PersistentVolumeClaim)
                                        If the provisioner or an external controller
                                        can support the specified data source, it
                                        will create a new volume based on the contents
                                        of the specified data source. When the AnyVolumeDataSource
                                        feature gate is enabled, dataSource contents
                                        will be copied to dataSourceRef, and dataSourceRef
                                        contents will be copied to dataSource when
                                        dataSourceRef.namespace is not specified.
                                        If the namespace is specified, then dataSourceRef
                                        will not be copied to dataSource.'
                                      properties:
                                        apiGroup:
                                          description: APIGroup is the group for the
                                            resource being referenced. If APIGroup
                                            is not specified, the specified Kind must
                                            be in the core API group. For any other
                                            third-party types, APIGroup is required.
                                          type: string
                                        kind:
                                          description: Kind is the type of resource
                                            being referenced
                                          type: string
                                        name:
                                          description: Name is the name of resource
                                            being referenced
                                          type: string
                                      required:
                                      - kind
                                      - name
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    dataSourceRef:
                                      description: 'dataSourceRef specifies the object
                                        from which to populate the volume with data,
                                        if a non-empty volume is desired. This may
                                        be any object from a non-empty API group (non
                                        core object) or a PersistentVolumeClaim object.
                                        When this field is specified, volume binding
                                        will only succeed if the type of the specified
                                        object matches some installed volume populator
                                        or dynamic provisioner. This field will replace
                                        the functionality of the dataSource field
                                        and as such if both fields are non-empty,
                                        they must have the same value. For backwards
                                        compatibility, when namespace isn''t specified
                                        in dataSourceRef, both fields (dataSource
                                        and dataSourceRef) will be set to the same
                                        value automatically if one of them is empty
                                        and the other is non-empty. When namespace
                                        is specified in dataSourceRef, dataSource
                                        isn''t set to the same value and must be empty.
                                        There are three important differences between
                                        dataSource and dataSourceRef: * While dataSource
                                        only allows two specific types of objects,
                                        dataSourceRef allows any non-core object,
                                        as well as PersistentVolumeClaim objects.
                                        * While dataSource ignores disallowed values
                                        (dropping them), dataSourceRef preserves all
                                        values, and generates an error if a disallowed
                                        value is specified. * While dataSource only
                                        allows local objects, dataSourceRef allows
                                        objects in any namespaces. (Beta) Using this
                                        field requires the AnyVolumeDataSource feature
                                        gate to be enabled. (Alpha) Using the namespace
                                        field of dataSourceRef requires the CrossNamespaceVolumeDataSource
                                        feature gate to be enabled.'
                                      properties:
                                        apiGroup:
                                          description: APIGroup is the group for the
                                            resource being referenced. If APIGroup
                                            is not specified, the specified Kind must
                                            be in the core API group. For any other
                                            third-party types, APIGroup is required.
                                          type: string
                                        kind:
                                          description: Kind is the type of resource
                                            being referenced
                                          type: string
                                        name:
                                          description: Name is the name of resource
                                            being referenced
                                          type: string
                                        namespace:
                                          description: Namespace is the namespace
                                            of resource being referenced Note that
                                            when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant
                                            object is required in the referent namespace
                                            to allow that namespace's owner to accept
                                            the reference. See the ReferenceGrant
                                            documentation for details. (Alpha) This
                                            field requires the CrossNamespaceVolumeDataSource
                                            feature gate to be enabled.
                                          type: string
                                      required:
                                      - kind
                                      - name
                                      type: object
                                    resources:
                                      description: 'resources represents the minimum
                                        resources the volume should have. If RecoverVolumeExpansionFailure
                                        feature is enabled users are allowed to specify
                                        resource requirements that are lower than
                                        previous value but must still be higher than
                                        capacity recorded in the status field of the
                                        claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources'
                                      properties:
                                        claims:
                                          description: "Claims lists the names of
                                            resources, defined in spec.resourceClaims,
                                            that are used by this container. \n This
                                            is an alpha field and requires enabling
                                            the DynamicResourceAllocation feature
                                            gate. \n This field is immutable. It can
                                            only be set for containers."
                                          items:
                                            description: ResourceClaim references
                                              one entry in PodSpec.ResourceClaims.
                                            properties:
                                              name:
                                                description: Name must match the name
                                                  of one entry in pod.spec.resourceClaims
                                                  of the Pod where this field is used.
                                                  It makes that resource available
                                                  inside a container.
                                                type: string
                                            required:
                                            - name
                                            type: object
                                          type: array
                                          x-kubernetes-list-map-keys:
                                          - name
                                          x-kubernetes-list-type: map
                                        limits:
                                          additionalProperties:
                                            anyOf:
                                            - type: integer
                                            - type: string
                                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                            x-kubernetes-int-or-string: true
                                          description: 'Limits describes the maximum
                                            amount of compute resources allowed. More
                                            info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                          type: object
                                        requests:
                                          additionalProperties:
                                            anyOf:
                                            - type: integer
                                            - type: string
                                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                            x-kubernetes-int-or-string: true
                                          description: 'Requests describes the minimum
                                            amount of compute resources required.
                                            If Requests is omitted for a container,
                                            it defaults to Limits if that is explicitly
                                            specified, otherwise to an implementation-defined
                                            value. Requests cannot exceed Limits.
                                            More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                          type: object
                                      type: object
                                    selector:
                                      description: selector is a label query over
                                        volumes to consider for binding.
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list
                                            of label selector requirements. The requirements
                                            are ANDed.
                                          items:
                                            description: A label selector requirement
                                              is a selector that contains values,
                                              a key, and an operator that relates
                                              the key and values.
                                            properties:
                                              key:
                                                description: key is the label key
                                                  that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a
                                                  key's relationship to a set of values.
                                                  Valid operators are In, NotIn, Exists
                                                  and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of
                                                  string values. If the operator is
                                                  In or NotIn, the values array must
                                                  be non-empty. If the operator is
                                                  Exists or DoesNotExist, the values
                                                  array must be empty. This array
                                                  is replaced during a strategic merge
                                                  patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                            - key
                                            - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value}
                                            pairs. A single {key,value} in the matchLabels
                                            map is equivalent to an element of matchExpressions,
                                            whose key field is "key", the operator
                                            is "In", and the values array contains
                                            only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    storageClassName:
                                      description: 'storageClassName is the name of
                                        the StorageClass required by the claim. More
                                        info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
                                      type: string
                                    volumeMode:
                                      description: volumeMode defines what type of
                                        volume is required by the claim. Value of
                                        Filesystem is implied when not included in
                                        claim spec.
                                      type: string
                                    volumeName:
                                      description: volumeName is the binding reference
                                        to the PersistentVolume backing this claim.
                                      type: string
                                  type: object
                              required:
                              - spec
                              type: object
                          type: object
                        fc:
                          description: fc represents a Fibre Channel resource that
                            is attached to a kubelet's host machine and then exposed
                            to the pod.
                          properties:
                            fsType:
                              description: 'fsType is the filesystem type to mount.
                                Must be a filesystem type supported by the host operating
                                system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred
                                to be "ext4" if unspecified. TODO: how do we prevent
                                errors in the filesystem from compromising the machine'
                              type: string
                            lun:
                              description: 'lun is Optional: FC target lun number'
                              format: int32
                              type: integer
                            readOnly:
                              description: 'readOnly is Optional: Defaults to false
                                (read/write). ReadOnly here will force the ReadOnly
                                setting in VolumeMounts.'
                              type: boolean
                            targetWWNs:
                              description: 'targetWWNs is Optional: FC target worldwide
                                names (WWNs)'
                              items:
                                type: string
                              type: array
                            wwids:
                              description: 'wwids Optional: FC volume world wide identifiers
                                (wwids) Either wwids or combination of targetWWNs
                                and lun must be set, but not both simultaneously.'
                              items:
                                type: string
                              type: array
                          type: object
                        flexVolume:
                          description: flexVolume represents a generic volume resource
                            that is provisioned/attached using an exec based plugin.
                          properties:
                            driver:
                              description: driver is the name of the driver to use
                                for this volume.
                              type: string
                            fsType:
                              description: fsType is the filesystem type to mount.
                                Must be a filesystem type supported by the host operating
                                system. Ex. "ext4", "xfs", "ntfs". The default filesystem
                                depends on FlexVolume script.
                              type: string
                            options:
                              additionalProperties:
                                type: string
                              description: 'options is Optional: this field holds
                                extra command options if any.'
                              type: object
                            readOnly:
                              description: 'readOnly is Optional: defaults to false
                                (read/write). ReadOnly here will force the ReadOnly
                                setting in VolumeMounts.'
                              type: boolean
                            secretRef:
                              description: 'secretRef is Optional: secretRef is reference
                                to the secret object containing sensitive information
                                to pass to the plugin scripts. This may be empty if
                                no secret object is specified. If the secret object
                                contains more than one secret, all secrets are passed
                                to the plugin scripts.'
                              properties:
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                              type: object
                              x-kubernetes-map-type: atomic
                          required:
                          - driver
                          type: object
                        flocker:
                          description: flocker represents a Flocker volume attached
                            to a kubelet's host machine. This depends on the Flocker
                            control service being running
                          properties:
                            datasetName:
                              description: datasetName is Name of the dataset stored
                                as metadata -> name on the dataset for Flocker should
                                be considered as deprecated
                              type: string
                            datasetUUID:
                              description: datasetUUID is the UUID of the dataset.
                                This is unique identifier of a Flocker dataset
                              type: string
                          type: object
                        gcePersistentDisk:
                          description: 'gcePersistentDisk represents a GCE Disk resource
                            that is attached to a kubelet''s host machine and then
                            exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                          properties:
                            fsType:
                              description: 'fsType is filesystem type of the volume
                                that you want to mount. Tip: Ensure that the filesystem
                                type is supported by the host operating system. Examples:
                                "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4"
                                if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                                TODO: how do we prevent errors in the filesystem from
                                compromising the machine'
                              type: string
                            partition:
                              description: 'partition is the partition in the volume
                                that you want to mount. If omitted, the default is
                                to mount by volume name. Examples: For volume /dev/sda1,
                                you specify the partition as "1". Similarly, the volume
                                partition for /dev/sda is "0" (or you can leave the
                                property empty). More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                              format: int32
                              type: integer
                            pdName:
                              description: 'pdName is unique name of the PD resource
                                in GCE. Used to identify the disk in GCE. More info:
                                https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                              type: string
                            readOnly:
                              description: 'readOnly here will force the ReadOnly
                                setting in VolumeMounts. Defaults to false. More info:
                                https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                              type: boolean
                          required:
                          - pdName
                          type: object
                        gitRepo:
                          description: 'gitRepo represents a git repository at a particular
                            revision. DEPRECATED: GitRepo is deprecated. To provision
                            a container with a git repo, mount an EmptyDir into an
                            InitContainer that clones the repo using git, then mount
                            the EmptyDir into the Pod''s container.'
                          properties:
                            directory:
                              description: directory is the target directory name.
                                Must not contain or start with '..'.  If '.' is supplied,
                                the volume directory will be the git repository.  Otherwise,
                                if specified, the volume will contain the git repository
                                in the subdirectory with the given name.
                              type: string
                            repository:
                              description: repository is the URL
                              type: string
                            revision:
                              description: revision is the commit hash for the specified
                                revision.
                              type: string
                          required:
                          - repository
                          type: object
                        glusterfs:
                          description: 'glusterfs represents a Glusterfs mount on
                            the host that shares a pod''s lifetime. More info: https://examples.k8s.io/volumes/glusterfs/README.md'
                          properties:
                            endpoints:
                              description: 'endpoints is the endpoint name that details
                                Glusterfs topology. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
                              type: string
                            path:
                              description: 'path is the Glusterfs volume path. More
                                info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
                              type: string
                            readOnly:
                              description: 'readOnly here will force the Glusterfs
                                volume to be mounted with read-only permissions. Defaults
                                to false. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
                              type: boolean
                          required:
                          - endpoints
                          - path
                          type: object
                        hostPath:
                          description: 'hostPath represents a pre-existing file or
                            directory on the host machine that is directly exposed
                            to the container. This is generally used for system agents
                            or other privileged things that are allowed to see the
                            host machine. Most containers will NOT need this. More
                            info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
                            --- TODO(jonesdl) We need to restrict who can use host
                            directory mounts and who can/can not mount host directories
                            as read/write.'
                          properties:
                            path:
                              description: 'path of the directory on the host. If
                                the path is a symlink, it will follow the link to
                                the real path. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath'
                              type: string
                            type:
                              description: 'type for HostPath Volume Defaults to ""
                                More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath'
                              type: string
                          required:
                          - path
                          type: object
                        iscsi:
                          description: 'iscsi represents an ISCSI Disk resource that
                            is attached to a kubelet''s host machine and then exposed
                            to the pod. More info: https://examples.k8s.io/volumes/iscsi/README.md'
                          properties:
                            chapAuthDiscovery:
                              description: chapAuthDiscovery defines whether support
                                iSCSI Discovery CHAP authentication
                              type: boolean
                            chapAuthSession:
                              description: chapAuthSession defines whether support
                                iSCSI Session CHAP authentication
                              type: boolean
                            fsType:
                              description: 'fsType is the filesystem type of the volume
                                that you want to mount. Tip: Ensure that the filesystem
                                type is supported by the host operating system. Examples:
                                "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4"
                                if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi
                                TODO: how do we prevent errors in the filesystem from
                                compromising the machine'
                              type: string
                            initiatorName:
                              description: initiatorName is the custom iSCSI Initiator
                                Name. If initiatorName is specified with iscsiInterface
                                simultaneously, new iSCSI interface <target portal>:<volume
                                name> will be created for the connection.
                              type: string
                            iqn:
                              description: iqn is the target iSCSI Qualified Name.
                              type: string
                            iscsiInterface:
                              description: iscsiInterface is the interface Name that
                                uses an iSCSI transport. Defaults to 'default' (tcp).
                              type: string
                            lun:
                              description: lun represents iSCSI Target Lun number.
                              format: int32
                              type: integer
                            portals:
                              description: portals is the iSCSI Target Portal List.
                                The portal is either an IP or ip_addr:port if the
                                port is other than default (typically TCP ports 860
                                and 3260).
                              items:
                                type: string
                              type: array
                            readOnly:
                              description: readOnly here will force the ReadOnly setting
                                in VolumeMounts. Defaults to false.
                              type: boolean
                            secretRef:
                              description: secretRef is the CHAP Secret for iSCSI
                                target and initiator authentication
                              properties:
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                              type: object
                              x-kubernetes-map-type: atomic
                            targetPortal:
                              description: targetPortal is iSCSI Target Portal. The
                                Portal is either an IP or ip_addr:port if the port
                                is other than default (typically TCP ports 860 and
                                3260).
                              type: string
                          required:
                          - iqn
                          - lun
                          - targetPortal
                          type: object
                        name:
                          description: 'name of the volume. Must be a DNS_LABEL and
                            unique within the pod. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                        nfs:
                          description: 'nfs represents an NFS mount on the host that
                            shares a pod''s lifetime More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                          properties:
                            path:
                              description: 'path that is exported by the NFS server.
                                More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                              type: string
                            readOnly:
                              description: 'readOnly here will force the NFS export
                                to be mounted with read-only permissions. Defaults
                                to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                              type: boolean
                            server:
                              description: 'server is the hostname or IP address of
                                the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                              type: string
                          required:
                          - path
                          - server
                          type: object
                        persistentVolumeClaim:
                          description: 'persistentVolumeClaimVolumeSource represents
                            a reference to a PersistentVolumeClaim in the same namespace.
                            More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                          properties:
                            claimName:
                              description: 'claimName is the name of a PersistentVolumeClaim
                                in the same namespace as the pod using this volume.
                                More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                              type: string
                            readOnly:
                              description: readOnly Will force the ReadOnly setting
                                in VolumeMounts. Default false.
                              type: boolean
                          required:
                          - claimName
                          type: object
                        photonPersistentDisk:
                          description: photonPersistentDisk represents a PhotonController
                            persistent disk attached and mounted on kubelets host
                            machine
                          properties:
                            fsType:
                              description: fsType is the filesystem type to mount.
                                Must be a filesystem type supported by the host operating
                                system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred
                                to be "ext4" if unspecified.
                              type: string
                            pdID:
                              description: pdID is the ID that identifies Photon Controller
                                persistent disk
                              type: string
                          required:
                          - pdID
                          type: object
                        portworxVolume:
                          description: portworxVolume represents a portworx volume
                            attached and mounted on kubelets host machine
                          properties:
                            fsType:
                              description: fSType represents the filesystem type to
                                mount Must be a filesystem type supported by the host
                                operating system. Ex. "ext4", "xfs". Implicitly inferred
                                to be "ext4" if unspecified.
                              type: string
                            readOnly:
                              description: readOnly defaults to false (read/write).
                                ReadOnly here will force the ReadOnly setting in VolumeMounts.
                              type: boolean
                            volumeID:
                              description: volumeID uniquely identifies a Portworx
                                volume
                              type: string
                          required:
                          - volumeID
                          type: object
                        projected:
                          description: projected items for all in one resources secrets,
                            configmaps, and downward API
                          properties:
                            defaultMode:
                              description: defaultMode are the mode bits used to set
                                permissions on created files by default. Must be an
                                octal value between 0000 and 0777 or a decimal value
                                between 0 and 511. YAML accepts both octal and decimal
                                values, JSON requires decimal values for mode bits.
                                Directories within the path are not affected by this
                                setting. This might be in conflict with other options
                                that affect the file mode, like fsGroup, and the result
                                can be other mode bits set.
                              format: int32
                              type: integer
                            sources:
                              description: sources is the list of volume projections
                              items:
                                description: Projection that may be projected along
                                  with other supported volume types
                                properties:
                                  configMap:
                                    description: configMap information about the configMap
                                      data to project
                                    properties:
                                      items:
                                        description: items if unspecified, each key-value
                                          pair in the Data field of the referenced
                                          ConfigMap will be projected into the volume
                                          as a file whose name is the key and content
                                          is the value. If specified, the listed keys
                                          will be projected into the specified paths,
                                          and unlisted keys will not be present. If
                                          a key is specified which is not present
                                          in the ConfigMap, the volume setup will
                                          error unless it is marked optional. Paths
                                          must be relative and may not contain the
                                          '..' path or start with '..'.
                                        items:
                                          description: Maps a string key to a path
                                            within a volume.
                                          properties:
                                            key:
                                              description: key is the key to project.
                                              type: string
                                            mode:
                                              description: 'mode is Optional: mode
                                                bits used to set permissions on this
                                                file. Must be an octal value between
                                                0000 and 0777 or a decimal value between
                                                0 and 511. YAML accepts both octal
                                                and decimal values, JSON requires
                                                decimal values for mode bits. If not
                                                specified, the volume defaultMode
                                                will be used. This might be in conflict
                                                with other options that affect the
                                                file mode, like fsGroup, and the result
                                                can be other mode bits set.'
                                              format: int32
                                              type: integer
                                            path:
                                              description: path is the relative path
                                                of the file to map the key to. May
                                                not be an absolute path. May not contain
                                                the path element '..'. May not start
                                                with the string '..'.
                                              type: string
                                          required:
                                          - key
                                          - path
                                          type: object
                                        type: array
                                      name:
                                        description: 'Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Add other useful fields. apiVersion,
                                          kind, uid?'
                                        type: string
                                      optional:
                                        description: optional specify whether the
                                          ConfigMap or its keys must be defined
                                        type: boolean
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  downwardAPI:
                                    description: downwardAPI information about the
                                      downwardAPI data to project
                                    properties:
                                      items:
                                        description: Items is a list of DownwardAPIVolume
                                          file
                                        items:
                                          description: DownwardAPIVolumeFile represents
                                            information to create the file containing
                                            the pod field
                                          properties:
                                            fieldRef:
                                              description: 'Required: Selects a field
                                                of the pod: only annotations, labels,
                                                name and namespace are supported.'
                                              properties:
                                                apiVersion:
                                                  description: Version of the schema
                                                    the FieldPath is written in terms
                                                    of, defaults to "v1".
                                                  type: string
                                                fieldPath:
                                                  description: Path of the field to
                                                    select in the specified API version.
                                                  type: string
                                              required:
                                              - fieldPath
                                              type: object
                                              x-kubernetes-map-type: atomic
                                            mode:
                                              description: 'Optional: mode bits used
                                                to set permissions on this file, must
                                                be an octal value between 0000 and
                                                0777 or a decimal value between 0
                                                and 511. YAML accepts both octal and
                                                decimal values, JSON requires decimal
                                                values for mode bits. If not specified,
                                                the volume defaultMode will be used.
                                                This might be in conflict with other
                                                options that affect the file mode,
                                                like fsGroup, and the result can be
                                                other mode bits set.'
                                              format: int32
                                              type: integer
                                            path:
                                              description: 'Required: Path is  the
                                                relative path name of the file to
                                                be created. Must not be absolute or
                                                contain the ''..'' path. Must be utf-8
                                                encoded. The first item of the relative
                                                path must not start with ''..'''
                                              type: string
                                            resourceFieldRef:
                                              description: 'Selects a resource of
                                                the container: only resources limits
                                                and requests (limits.cpu, limits.memory,
                                                requests.cpu and requests.memory)
                                                are currently supported.'
                                              properties:
                                                containerName:
                                                  description: 'Container name: required
                                                    for volumes, optional for env
                                                    vars'
                                                  type: string
                                                divisor:
                                                  anyOf:
                                                  - type: integer
                                                  - type: string
                                                  description: Specifies the output
                                                    format of the exposed resources,
                                                    defaults to "1"
                                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                  x-kubernetes-int-or-string: true
                                                resource:
                                                  description: 'Required: resource
                                                    to select'
                                                  type: string
                                              required:
                                              - resource
                                              type: object
                                              x-kubernetes-map-type: atomic
                                          required:
                                          - path
                                          type: object
                                        type: array
                                    type: object
                                  secret:
                                    description: secret information about the secret
                                      data to project
                                    properties:
                                      items:
                                        description: items if unspecified, each key-value
                                          pair in the Data field of the referenced
                                          Secret will be projected into the volume
                                          as a file whose name is the key and content
                                          is the value. If specified, the listed keys
                                          will be projected into the specified paths,
                                          and unlisted keys will not be present. If
                                          a key is specified which is not present
                                          in the Secret, the volume setup will error
                                          unless it is marked optional. Paths must
                                          be relative and may not contain the '..'
                                          path or start with '..'.
                                        items:
                                          description: Maps a string key to a path
                                            within a volume.
                                          properties:
                                            key:
                                              description: key is the key to project.
                                              type: string
                                            mode:
                                              description: 'mode is Optional: mode
                                                bits used to set permissions on this
                                                file. Must be an octal value between
                                                0000 and 0777 or a decimal value between
                                                0 and 511. YAML accepts both octal
                                                and decimal values, JSON requires
                                                decimal values for mode bits. If not
                                                specified, the volume defaultMode
                                                will be used. This might be in conflict
                                                with other options that affect the
                                                file mode, like fsGroup, and the result
                                                can be other mode bits set.'
                                              format: int32
                                              type: integer
                                            path:
                                              description: path is the relative path
                                                of the file to map the key to. May
                                                not be an absolute path. May not contain
                                                the path element '..'. May not start
                                                with the string '..'.
                                              type: string
                                          required:
                                          - key
                                          - path
                                          type: object
                                        type: array
                                      name:
                                        description: 'Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Add other useful fields. apiVersion,
                                          kind, uid?'
                                        type: string
                                      optional:
                                        description: optional field specify whether
                                          the Secret or its key must be defined
                                        type: boolean
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  serviceAccountToken:
                                    description: serviceAccountToken is information
                                      about the serviceAccountToken data to project
                                    properties:
                                      audience:
                                        description: audience is the intended audience
                                          of the token. A recipient of a token must
                                          identify itself with an identifier specified
                                          in the audience of the token, and otherwise
                                          should reject the token. The audience defaults
                                          to the identifier of the apiserver.
                                        type: string
                                      expirationSeconds:
                                        description: expirationSeconds is the requested
                                          duration of validity of the service account
                                          token. As the token approaches expiration,
                                          the kubelet volume plugin will proactively
                                          rotate the service account token. The kubelet
                                          will start trying to rotate the token if
                                          the token is older than 80 percent of its
                                          time to live or if the token is older than
                                          24 hours.Defaults to 1 hour and must be
                                          at least 10 minutes.
                                        format: int64
                                        type: integer
                                      path:
                                        description: path is the path relative to
                                          the mount point of the file to project the
                                          token into.
                                        type: string
                                    required:
                                    - path
                                    type: object
                                type: object
                              type: array
                          type: object
                        quobyte:
                          description: quobyte represents a Quobyte mount on the host
                            that shares a pod's lifetime
                          properties:
                            group:
                              description: group to map volume access to Default is
                                no group
                              type: string
                            readOnly:
                              description: readOnly here will force the Quobyte volume
                                to be mounted with read-only permissions. Defaults
                                to false.
                              type: boolean
                            registry:
                              description: registry represents a single or multiple
                                Quobyte Registry services specified as a string as
                                host:port pair (multiple entries are separated with
                                commas) which acts as the central registry for volumes
                              type: string
                            tenant:
                              description: tenant owning the given Quobyte volume
                                in the Backend Used with dynamically provisioned Quobyte
                                volumes, value is set by the plugin
                              type: string
                            user:
                              description: user to map volume access to Defaults to
                                serivceaccount user
                              type: string
                            volume:
                              description: volume is a string that references an already
                                created Quobyte volume by name.
                              type: string
                          required:
                          - registry
                          - volume
                          type: object
                        rbd:
                          description: 'rbd represents a Rados Block Device mount
                            on the host that shares a pod''s lifetime. More info:
                            https://examples.k8s.io/volumes/rbd/README.md'
                          properties:
                            fsType:
                              description: 'fsType is the filesystem type of the volume
                                that you want to mount. Tip: Ensure that the filesystem
                                type is supported by the host operating system. Examples:
                                "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4"
                                if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd
                                TODO: how do we prevent errors in the filesystem from
                                compromising the machine'
                              type: string
                            image:
                              description: 'image is the rados image name. More info:
                                https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                              type: string
                            keyring:
                              description: 'keyring is the path to key ring for RBDUser.
                                Default is /etc/ceph/keyring. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                              type: string
                            monitors:
                              description: 'monitors is a collection of Ceph monitors.
                                More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                              items:
                                type: string
                              type: array
                            pool:
                              description: 'pool is the rados pool name. Default is
                                rbd. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                              type: string
                            readOnly:
                              description: 'readOnly here will force the ReadOnly
                                setting in VolumeMounts. Defaults to false. More info:
                                https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                              type: boolean
                            secretRef:
                              description: 'secretRef is name of the authentication
                                secret for RBDUser. If provided overrides keyring.
                                Default is nil. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                              properties:
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                              type: object
                              x-kubernetes-map-type: atomic
                            user:
                              description: 'user is the rados user name. Default is
                                admin. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                              type: string
                          required:
                          - image
                          - monitors
                          type: object
                        scaleIO:
                          description: scaleIO represents a ScaleIO persistent volume
                            attached and mounted on Kubernetes nodes.
                          properties:
                            fsType:
                              description: fsType is the filesystem type to mount.
                                Must be a filesystem type supported by the host operating
                                system. Ex. "ext4", "xfs", "ntfs". Default is "xfs".
                              type: string
                            gateway:
                              description: gateway is the host address of the ScaleIO
                                API Gateway.
                              type: string
                            protectionDomain:
                              description: protectionDomain is the name of the ScaleIO
                                Protection Domain for the configured storage.
                              type: string
                            readOnly:
                              description: readOnly Defaults to false (read/write).
                                ReadOnly here will force the ReadOnly setting in VolumeMounts.
                              type: boolean
                            secretRef:
                              description: secretRef references to the secret for
                                ScaleIO user and other sensitive information. If this
                                is not provided, Login operation will fail.
                              properties:
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                              type: object
                              x-kubernetes-map-type: atomic
                            sslEnabled:
                              description: sslEnabled Flag enable/disable SSL communication
                                with Gateway, default false
                              type: boolean
                            storageMode:
                              description: storageMode indicates whether the storage
                                for a volume should be ThickProvisioned or ThinProvisioned.
                                Default is ThinProvisioned.
                              type: string
                            storagePool:
                              description: storagePool is the ScaleIO Storage Pool
                                associated with the protection domain.
                              type: string
                            system:
                              description: system is the name of the storage system
                                as configured in ScaleIO.
                              type: string
                            volumeName:
                              description: volumeName is the name of a volume already
                                created in the ScaleIO system that is associated with
                                this volume source.
                              type: string
                          required:
                          - gateway
                          - secretRef
                          - system
                          type: object
                        secret:
                          description: 'secret represents a secret that should populate
                            this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret'
                          properties:
                            defaultMode:
                              description: 'defaultMode is Optional: mode bits used
                                to set permissions on created files by default. Must
                                be an octal value between 0000 and 0777 or a decimal
                                value between 0 and 511. YAML accepts both octal and
                                decimal values, JSON requires decimal values for mode
                                bits. Defaults to 0644. Directories within the path
                                are not affected by this setting. This might be in
                                conflict with other options that affect the file mode,
                                like fsGroup, and the result can be other mode bits
                                set.'
                              format: int32
                              type: integer
                            items:
                              description: items If unspecified, each key-value pair
                                in the Data field of the referenced Secret will be
                                projected into the volume as a file whose name is
                                the key and content is the value. If specified, the
                                listed keys will be projected into the specified paths,
                                and unlisted keys will not be present. If a key is
                                specified which is not present in the Secret, the
                                volume setup will error unless it is marked optional.
                                Paths must be relative and may not contain the '..'
                                path or start with '..'.
                              items:
                                description: Maps a string key to a path within a
                                  volume.
                                properties:
                                  key:
                                    description: key is the key to project.
                                    type: string
                                  mode:
                                    description: 'mode is Optional: mode bits used
                                      to set permissions on this file. Must be an
                                      octal value between 0000 and 0777 or a decimal
                                      value between 0 and 511. YAML accepts both octal
                                      and decimal values, JSON requires decimal values
                                      for mode bits. If not specified, the volume
                                      defaultMode will be used. This might be in conflict
                                      with other options that affect the file mode,
                                      like fsGroup, and the result can be other mode
                                      bits set.'
                                    format: int32
                                    type: integer
                                  path:
                                    description: path is the relative path of the
                                      file to map the key to. May not be an absolute
                                      path. May not contain the path element '..'.
                                      May not start with the string '..'.
                                    type: string
                                required:
                                - key
                                - path
                                type: object
                              type: array
                            optional:
                              description: optional field specify whether the Secret
                                or its keys must be defined
                              type: boolean
                            secretName:
                              description: 'secretName is the name of the secret in
                                the pod''s namespace to use. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret'
                              type: string
                          type: object
                        storageos:
                          description: storageOS represents a StorageOS volume attached
                            and mounted on Kubernetes nodes.
                          properties:
                            fsType:
                              description: fsType is the filesystem type to mount.
                                Must be a filesystem type supported by the host operating
                                system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred
                                to be "ext4" if unspecified.
                              type: string
                            readOnly:
                              description: readOnly defaults to false (read/write).
                                ReadOnly here will force the ReadOnly setting in VolumeMounts.
                              type: boolean
                            secretRef:
                              description: secretRef specifies the secret to use for
                                obtaining the StorageOS API credentials.  If not specified,
                                default values will be attempted.
                              properties:
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                              type: object
                              x-kubernetes-map-type: atomic
                            volumeName:
                              description: volumeName is the human-readable name of
                                the StorageOS volume.  Volume names are only unique
                                within a namespace.
                              type: string
                            volumeNamespace:
                              description: volumeNamespace specifies the scope of
                                the volume within StorageOS.  If no namespace is specified
                                then the Pod's namespace will be used.  This allows
                                the Kubernetes name scoping to be mirrored within
                                StorageOS for tighter integration. Set VolumeName
                                to any name to override the default behaviour. Set
                                to "default" if you are not using namespaces within
                                StorageOS. Namespaces that do not pre-exist within
                                StorageOS will be created.
                              type: string
                          type: object
                        vsphereVolume:
                          description: vsphereVolume represents a vSphere volume attached
                            and mounted on kubelets host machine
                          properties:
                            fsType:
                              description: fsType is filesystem type to mount. Must
                                be a filesystem type supported by the host operating
                                system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred
                                to be "ext4" if unspecified.
                              type: string
                            storagePolicyID:
                              description: storagePolicyID is the storage Policy Based
                                Management (SPBM) profile ID associated with the StoragePolicyName.
                              type: string
                            storagePolicyName:
                              description: storagePolicyName is the storage Policy
                                Based Management (SPBM) profile name.
                              type: string
                            volumePath:
                              description: volumePath is the path that identifies
                                vSphere volume vmdk
                              type: string
                          required:
                          - volumePath
                          type: object
                      required:
                      - name
                      type: object
                    type: array
                  replicas:
                    description: Replicas sets the number of pod replicas for the
                      UI deployment.
                    format: int32
                    type: integer
                  resources:
                    description: Resources describes the requested and maximum allowed
                      CPU/memory usage.
                    properties:
                      claims:
                        description: "Claims lists the names of resources, defined
                          in spec.resourceClaims, that are used by this container.
                          \n This is an alpha field and requires enabling the DynamicResourceAllocation
                          feature gate. \n This field is immutable. It can only be
                          set for containers."
                        items:
                          description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                          properties:
                            name:
                              description: Name must match the name of one entry in
                                pod.spec.resourceClaims of the Pod where this field
                                is used. It makes that resource available inside a
                                container.
                              type: string
                          required:
                          - name
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Limits describes the maximum amount of compute
                          resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Requests describes the minimum amount of compute
                          resources required. If Requests is omitted for a container,
                          it defaults to Limits if that is explicitly specified, otherwise
                          to an implementation-defined value. Requests cannot exceed
                          Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                    type: object
                type: object
              userCluster:
                description: UserCluster configures various aspects of the user-created
                  clusters.
                properties:
                  addons:
                    description: Addons controls the optional additions installed
                      into each user cluster.
                    properties:
                      default:
                        description: Default is the list of addons to be installed
                          by default into each cluster. Mutually exclusive with "defaultManifests".
                        items:
                          type: string
                        type: array
                      defaultManifests:
                        description: DefaultManifests is a list of addon manifests
                          to install into all clusters. Mutually exclusive with "default".
                        type: string
                      dockerRepository:
                        description: DockerRepository is the repository containing
                          the Docker image containing the possible addon manifests.
                        type: string
                      dockerTagSuffix:
                        description: DockerTagSuffix is appended to the tag used for
                          referring to the addons image. If left empty, the tag will
                          be the KKP version (e.g. "v2.15.0"), with a suffix it becomes
                          "v2.15.0-SUFFIX".
                        type: string
                    type: object
                  apiserverReplicas:
                    description: APIServerReplicas configures the replica count for
                      the API-Server deployment inside user clusters.
                    format: int32
                    type: integer
                  disableApiserverEndpointReconciling:
                    description: DisableAPIServerEndpointReconciling can be used to
                      toggle the `--endpoint-reconciler-type` flag for the Kubernetes
                      API server.
                    type: boolean
                  dnatControllerDockerRepository:
                    description: DNATControllerDockerRepository is the repository
                      containing the dnat-controller image.
                    type: string
                  etcdLauncherDockerRepository:
                    description: EtcdLauncherDockerRepository is the repository containing
                      the Kubermatic etcd-launcher image.
                    type: string
                  etcdVolumeSize:
                    description: EtcdVolumeSize configures the volume size to use
                      for each etcd pod inside user clusters.
                    type: string
                  kubermaticDockerRepository:
                    description: KubermaticDockerRepository is the repository containing
                      the Kubermatic user-cluster-controller-manager image.
                    type: string
                  machineController:
                    description: MachineController configures the Machine Controller
                    properties:
                      imageRepository:
                        description: ImageRepository is used to override the Machine
                          Controller image repository. It is only for development,
                          tests and PoC purposes. This field must not be set in production
                          environments.
                        type: string
                      imageTag:
                        description: ImageTag is used to override the Machine Controller
                          image. It is only for development, tests and PoC purposes.
                          This field must not be set in production environments.
                        type: string
                    type: object
                  monitoring:
                    description: Monitoring can be used to fine-tune to in-cluster
                      Prometheus.
                    properties:
                      customRules:
                        description: CustomRules can be used to inject custom recording
                          and alerting rules. This field must be a YAML-formatted
                          string with a `group` element at its root, as documented
                          on https://prometheus.io/docs/prometheus/latest/configuration/alerting_rules/.
                          This value is treated as a Go template, which allows to
                          inject dynamic values like the internal cluster address
                          or the cluster ID. Refer to pkg/resources/prometheus and
                          the documentation for more information on the available
                          fields.
                        type: string
                      customScrapingConfigs:
                        description: CustomScrapingConfigs can be used to inject custom
                          scraping rules. This must be a YAML-formatted string containing
                          an array of scrape configurations as documented on https://prometheus.io/docs/prometheus/latest/configuration/configuration/#scrape_config.
                          This value is treated as a Go template, which allows to
                          inject dynamic values like the internal cluster address
                          or the cluster ID. Refer to pkg/resources/prometheus and
                          the documentation for more information on the available
                          fields.
                        type: string
                      disableDefaultRules:
                        description: DisableDefaultRules disables the recording and
                          alerting rules.
                        type: boolean
                      disableDefaultScrapingConfigs:
                        description: DisableDefaultScrapingConfigs disables the default
                          scraping targets.
                        type: boolean
                      scrapeAnnotationPrefix:
                        description: ScrapeAnnotationPrefix (if set) is used to make
                          the in-cluster Prometheus scrape pods inside the user clusters.
                        type: string
                    type: object
                  nodePortRange:
                    description: NodePortRange is the port range for user clusters
                      - this must match the NodePort range of the seed cluster.
                    type: string
                  operatingSystemManager:
                    description: OperatingSystemManager configures the image repo
                      and the tag version for osm deployment.
                    properties:
                      imageRepository:
                        description: ImageRepository is used to override the OperatingSystemManager
                          image repository. It is recommended to use this field only
                          for development, tests and PoC purposes. For production
                          environments. it is not recommended, to use this field due
                          to compatibility with the overall KKP stack.
                        type: string
                      imageTag:
                        description: ImageTag is used to override the OperatingSystemManager
                          image. It is recommended to use this field only for development,
                          tests and PoC purposes. For production environments. it
                          is not recommended, to use this field due to compatibility
                          with the overall KKP stack.
                        type: string
                    type: object
                  overwriteRegistry:
                    description: OverwriteRegistry specifies a custom Docker registry
                      which will be used for all images used for user clusters (user
                      cluster control plane + addons). This also applies to the KubermaticDockerRepository
                      and DNATControllerDockerRepository fields.
                    type: string
                  systemApplications:
                    description: SystemApplications contains configuration for system
                      Applications (such as CNI).
                    properties:
                      helmRegistryConfigFile:
                        description: HelmRegistryConfigFile optionally holds the ref
                          and key in the secret for the OCI registry credential file.
                          The value is dockercfg file that follows the same format
                          rules as ~/.docker/config.json The Secret must exist in
                          the namespace where KKP is installed (default is "kubermatic").
                          The Secret must be annotated with `apps.kubermatic.k8c.io/secret-type:`
                          set to "helm".
                        properties:
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                          optional:
                            description: Specify whether the Secret or its key must
                              be defined
                            type: boolean
                        required:
                        - key
                        type: object
                        x-kubernetes-map-type: atomic
                      helmRepository:
                        description: HelmRepository specifies OCI repository containing
                          Helm charts of system Applications.
                        type: string
                    type: object
                type: object
              versions:
                description: Versions configures the available and default Kubernetes
                  versions and updates.
                properties:
                  default:
                    description: Default is the default version to offer users.
                    type: string
                  externalClusters:
                    additionalProperties:
                      description: ExternalClusterProviderVersioningConfiguration
                        configures the available and default Kubernetes versions for
                        ExternalCluster Providers.
                      properties:
                        default:
                          description: Default is the default version to offer users.
                          type: string
                        updates:
                          description: Updates is a list of available upgrades.
                          items:
                            description: Semver is a type that encapsulates github.com/Masterminds/semver/v3.Version
                              struct so it can be used in our API.
                            type: string
                          type: array
                        versions:
                          description: Versions lists the available versions.
                          items:
                            description: Semver is a type that encapsulates github.com/Masterminds/semver/v3.Version
                              struct so it can be used in our API.
                            type: string
                          type: array
                      type: object
                    description: ExternalClusters contains the available and default
                      Kubernetes versions and updates for ExternalClusters.
                    type: object
                  providerIncompatibilities:
                    description: ProviderIncompatibilities lists all the Kubernetes
                      version incompatibilities
                    items:
                      description: Incompatibility represents a version incompatibility
                        for a user cluster.
                      properties:
                        condition:
                          description: Condition is the cluster or datacenter condition
                            that must be met to block a specific version
                          enum:
                          - always
                          - externalCloudProvider
                          - inTreeProvider
                          type: string
                        operation:
                          description: Operation is the operation triggering the compatibility
                            check (CREATE or UPDATE)
                          enum:
                          - CREATE
                          - UPGRADE
                          - SUPPORT
                          type: string
                        provider:
                          description: Provider to which to apply the compatibility
                            check. Empty string matches all providers
                          enum:
                          - ""
                          - digitalocean
                          - hetzner
                          - azure
                          - vsphere
                          - aws
                          - openstack
                          - packet
                          - gcp
                          - kubevirt
                          - nutanix
                          - alibaba
                          - anexia
                          - fake
                          - vmwareclouddirector
                          type: string
                        version:
                          description: Version is the Kubernetes version that must
                            be checked. Wildcards are allowed, e.g. "1.25.*".
                          type: string
                      type: object
                    type: array
                  updates:
                    description: 'Updates is a list of available and automatic upgrades.
                      All ''to'' versions must be configured in the version list for
                      this orchestrator. Each update may optionally be configured
                      to be ''automatic: true'', in which case the controlplane of
                      all clusters whose version matches the ''from'' directive will
                      get updated to the ''to'' version. If automatic is enabled,
                      the ''to'' version must be a version and not a version range.
                      Also, updates may set ''automaticNodeUpdate: true'', in which
                      case Nodes will get updates as well. ''automaticNodeUpdate:
                      true'' implies ''automatic: true'' as well, because Nodes may
                      not have a newer version than the controlplane.'
                    items:
                      description: Update represents an update option for a user cluster.
                      properties:
                        automatic:
                          description: Automatic controls whether this update is executed
                            automatically for the control plane of all matching user
                            clusters. ---
                          type: boolean
                        automaticNodeUpdate:
                          description: Automatic controls whether this update is executed
                            automatically for the worker nodes of all matching user
                            clusters. ---
                          type: boolean
                        from:
                          description: From is the version from which an update is
                            allowed. Wildcards are allowed, e.g. "1.18.*".
                          type: string
                        to:
                          description: To is the version to which an update is allowed.
                            Must be a valid version if `automatic` is set to true,
                            e.g. "1.20.13". Can be a wildcard otherwise, e.g. "1.20.*".
                          type: string
                      type: object
                    type: array
                  versions:
                    description: Versions lists the available versions.
                    items:
                      description: Semver is a type that encapsulates github.com/Masterminds/semver/v3.Version
                        struct so it can be used in our API.
                      type: string
                    type: array
                type: object
              verticalPodAutoscaler:
                description: VerticalPodAutoscaler configures the Kubernetes VPA integration.
                properties:
                  admissionController:
                    properties:
                      dockerRepository:
                        description: DockerRepository is the repository containing
                          the component's image.
                        type: string
                      resources:
                        description: Resources describes the requested and maximum
                          allowed CPU/memory usage.
                        properties:
                          claims:
                            description: "Claims lists the names of resources, defined
                              in spec.resourceClaims, that are used by this container.
                              \n This is an alpha field and requires enabling the
                              DynamicResourceAllocation feature gate. \n This field
                              is immutable. It can only be set for containers."
                            items:
                              description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                              properties:
                                name:
                                  description: Name must match the name of one entry
                                    in pod.spec.resourceClaims of the Pod where this
                                    field is used. It makes that resource available
                                    inside a container.
                                  type: string
                              required:
                              - name
                              type: object
                            type: array
                            x-kubernetes-list-map-keys:
                            - name
                            x-kubernetes-list-type: map
                          limits:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Limits describes the maximum amount of compute
                              resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                          requests:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Requests describes the minimum amount of
                              compute resources required. If Requests is omitted for
                              a container, it defaults to Limits if that is explicitly
                              specified, otherwise to an implementation-defined value.
                              Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                        type: object
                    type: object
                  recommender:
                    properties:
                      dockerRepository:
                        description: DockerRepository is the repository containing
                          the component's image.
                        type: string
                      resources:
                        description: Resources describes the requested and maximum
                          allowed CPU/memory usage.
                        properties:
                          claims:
                            description: "Claims lists the names of resources, defined
                              in spec.resourceClaims, that are used by this container.
                              \n This is an alpha field and requires enabling the
                              DynamicResourceAllocation feature gate. \n This field
                              is immutable. It can only be set for containers."
                            items:
                              description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                              properties:
                                name:
                                  description: Name must match the name of one entry
                                    in pod.spec.resourceClaims of the Pod where this
                                    field is used. It makes that resource available
                                    inside a container.
                                  type: string
                              required:
                              - name
                              type: object
                            type: array
                            x-kubernetes-list-map-keys:
                            - name
                            x-kubernetes-list-type: map
                          limits:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Limits describes the maximum amount of compute
                              resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                          requests:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Requests describes the minimum amount of
                              compute resources required. If Requests is omitted for
                              a container, it defaults to Limits if that is explicitly
                              specified, otherwise to an implementation-defined value.
                              Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                        type: object
                    type: object
                  updater:
                    properties:
                      dockerRepository:
                        description: DockerRepository is the repository containing
                          the component's image.
                        type: string
                      resources:
                        description: Resources describes the requested and maximum
                          allowed CPU/memory usage.
                        properties:
                          claims:
                            description: "Claims lists the names of resources, defined
                              in spec.resourceClaims, that are used by this container.
                              \n This is an alpha field and requires enabling the
                              DynamicResourceAllocation feature gate. \n This field
                              is immutable. It can only be set for containers."
                            items:
                              description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                              properties:
                                name:
                                  description: Name must match the name of one entry
                                    in pod.spec.resourceClaims of the Pod where this
                                    field is used. It makes that resource available
                                    inside a container.
                                  type: string
                              required:
                              - name
                              type: object
                            type: array
                            x-kubernetes-list-map-keys:
                            - name
                            x-kubernetes-list-type: map
                          limits:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Limits describes the maximum amount of compute
                              resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                          requests:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Requests describes the minimum amount of
                              compute resources required. If Requests is omitted for
                              a container, it defaults to Limits if that is explicitly
                              specified, otherwise to an implementation-defined value.
                              Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                        type: object
                    type: object
                type: object
              webhook:
                description: Webhook configures the webhook.
                properties:
                  debugLog:
                    description: DebugLog enables more verbose logging.
                    type: boolean
                  dockerRepository:
                    description: DockerRepository is the repository containing the
                      Kubermatic webhook image.
                    type: string
                  pprofEndpoint:
                    description: PProfEndpoint controls the port the webhook should
                      listen on to provide pprof data. This port is never exposed
                      from the container and only available via port-forwardings.
                    type: string
                  replicas:
                    description: Replicas sets the number of pod replicas for the
                      webhook.
                    format: int32
                    type: integer
                  resources:
                    description: Resources describes the requested and maximum allowed
                      CPU/memory usage.
                    properties:
                      claims:
                        description: "Claims lists the names of resources, defined
                          in spec.resourceClaims, that are used by this container.
                          \n This is an alpha field and requires enabling the DynamicResourceAllocation
                          feature gate. \n This field is immutable. It can only be
                          set for containers."
                        items:
                          description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                          properties:
                            name:
                              description: Name must match the name of one entry in
                                pod.spec.resourceClaims of the Pod where this field
                                is used. It makes that resource available inside a
                                container.
                              type: string
                          required:
                          - name
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Limits describes the maximum amount of compute
                          resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Requests describes the minimum amount of compute
                          resources required. If Requests is omitted for a container,
                          it defaults to Limits if that is explicitly specified, otherwise
                          to an implementation-defined value. Requests cannot exceed
                          Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                    type: object
                type: object
            type: object
          status:
            description: KubermaticConfigurationStatus stores status information about
              a KubermaticConfiguration.
            properties:
              kubermaticEdition:
                description: KubermaticEdition current Kubermatic Edition , i.e. Community
                  Edition or Enterprise Edition.
                type: string
              kubermaticVersion:
                description: KubermaticVersion current Kubermatic Version.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources: {}
---
# Source: kubermatic-operator/templates/crds.tpl
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    app.kubernetes.io/version: v2.24.5
    controller-gen.kubebuilder.io/version: v0.13.0
    helm.sh/resource-policy: keep
    kubermatic.k8c.io/location: master
  labels:
    app.kubernetes.io/component: operator
    app.kubernetes.io/instance: my-kubermatic-operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubermatic-operator
    app.kubernetes.io/version: v2.24.5
    helm.sh/chart: kubermatic-operator-v2.24.5
  name: kubermaticsettings.kubermatic.k8c.io
spec:
  group: kubermatic.k8c.io
  names:
    kind: KubermaticSetting
    listKind: KubermaticSettingList
    plural: kubermaticsettings
    singular: kubermaticsetting
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1
    schema:
      openAPIV3Schema:
        description: KubermaticSetting is the type representing a KubermaticSetting.
          These settings affect the KKP dashboard and are not relevant when using
          the Kube API on the master/seed clusters directly.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              allowedOperatingSystems:
                additionalProperties:
                  type: boolean
                description: AllowedOperatingSystems shows if the operating system
                  is allowed to be use in the machinedeployment.
                type: object
              cleanupOptions:
                description: CleanupOptions control what happens when a cluster is
                  deleted via the dashboard.
                properties:
                  enabled:
                    description: Enable checkboxes that allow the user to ask for
                      LoadBalancers and PVCs to be deleted in order to not leave potentially
                      expensive resources behind.
                    type: boolean
                  enforced:
                    description: If enforced is set to true, the cleanup of LoadBalancers
                      and PVCs is enforced.
                    type: boolean
                type: object
              customLinks:
                description: CustomLinks are additional links that can be shown the
                  dashboard's footer.
                items:
                  properties:
                    icon:
                      type: string
                    label:
                      type: string
                    location:
                      type: string
                    url:
                      type: string
                  required:
                  - icon
                  - label
                  - location
                  - url
                  type: object
                type: array
              defaultNodeCount:
                description: DefaultNodeCount is the default number of replicas for
                  the initial MachineDeployment.
                type: integer
              defaultQuota:
                description: DefaultProjectResourceQuota allows to configure a default
                  project resource quota which will be set for all projects that do
                  not have a custom quota already set. EE-version only.
                properties:
                  quota:
                    description: Quota specifies the default CPU, Memory and Storage
                      quantities for all the projects.
                    properties:
                      cpu:
                        anyOf:
                        - type: integer
                        - type: string
                        description: CPU holds the quantity of CPU. For the format,
                          please check k8s.io/apimachinery/pkg/api/resource.Quantity.
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                      memory:
                        anyOf:
                        - type: integer
                        - type: string
                        description: Memory represents the quantity of RAM size. For
                          the format, please check k8s.io/apimachinery/pkg/api/resource.Quantity.
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                      storage:
                        anyOf:
                        - type: integer
                        - type: string
                        description: Storage represents the disk size. For the format,
                          please check k8s.io/apimachinery/pkg/api/resource.Quantity.
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                    type: object
                type: object
              disableAdminKubeconfig:
                description: DisableAdminKubeconfig disables the admin kubeconfig
                  functionality on the dashboard.
                type: boolean
              disableChangelogPopup:
                description: DisableChangelogPopup disables the changelog popup in
                  KKP dashboard.
                type: boolean
              displayAPIDocs:
                description: DisplayDemoInfo controls whether a a link to the KKP
                  API documentation is shown in the footer.
                type: boolean
              displayDemoInfo:
                description: DisplayDemoInfo controls whether a "Demo System" hint
                  is shown in the footer.
                type: boolean
              displayTermsOfService:
                description: DisplayDemoInfo controls whether a a link to TOS is shown
                  in the footer.
                type: boolean
              enableDashboard:
                description: EnableDashboard enables the link to the Kubernetes dashboard
                  for a user cluster.
                type: boolean
              enableExternalClusterImport:
                type: boolean
              enableOIDCKubeconfig:
                type: boolean
              enableShareCluster:
                default: true
                description: EnableShareCluster enables the Share Cluster feature
                  for the user clusters.
                type: boolean
              enableWebTerminal:
                default: false
                description: EnableWebTerminal enables the Web Terminal feature for
                  the user clusters.
                type: boolean
              machineDeploymentOptions:
                properties:
                  autoUpdatesEnabled:
                    description: AutoUpdatesEnabled enables the auto updates option
                      for machine deployments on the dashboard. In case of flatcar
                      linux, this will enable automatic updates through update engine
                      and for other operating systems, this will enable package updates
                      on boot for the machines.
                    type: boolean
                  autoUpdatesEnforced:
                    description: AutoUpdatesEnforced enforces the auto updates option
                      for machine deployments on the dashboard. In case of flatcar
                      linux, this will enable automatic updates through update engine
                      and for other operating systems, this will enable package updates
                      on boot for the machines.
                    type: boolean
                type: object
              machineDeploymentVMResourceQuota:
                description: MachineDeploymentVMResourceQuota is used to filter out
                  allowed machine flavors based on the specified resource limits like
                  CPU, Memory, and GPU etc.
                properties:
                  enableGPU:
                    description: Include VMs with GPU
                    type: boolean
                  maxCPU:
                    default: 0
                    description: Maximum number of vCPU
                    minimum: 0
                    type: integer
                  maxRAM:
                    default: 0
                    description: Maximum RAM size in GB
                    minimum: 0
                    type: integer
                  minCPU:
                    default: 0
                    description: Minimum number of vCPU
                    minimum: 0
                    type: integer
                  minRAM:
                    default: 0
                    description: Minimum RAM size in GB
                    minimum: 0
                    type: integer
                required:
                - enableGPU
                - maxCPU
                - maxRAM
                - minCPU
                - minRAM
                type: object
              mlaAlertmanagerPrefix:
                type: string
              mlaGrafanaPrefix:
                type: string
              mlaOptions:
                properties:
                  loggingEnabled:
                    type: boolean
                  loggingEnforced:
                    type: boolean
                  monitoringEnabled:
                    type: boolean
                  monitoringEnforced:
                    type: boolean
                type: object
              notifications:
                description: Notifications are the configuration for notifications
                  on dashboard.
                properties:
                  hideErrorEvents:
                    description: HideErrorEvents will silence error events for the
                      dashboard.
                    type: boolean
                  hideErrors:
                    description: HideErrors will silence error notifications for the
                      dashboard.
                    type: boolean
                type: object
              opaOptions:
                properties:
                  enabled:
                    type: boolean
                  enforced:
                    type: boolean
                type: object
              providerConfiguration:
                description: ProviderConfiguration are the cloud provider specific
                  configurations on dashboard.
                properties:
                  openStack:
                    description: OpenStack are the configurations for openstack provider.
                    properties:
                      enforceCustomDisk:
                        description: EnforceCustomDisk will enforce the custom disk
                          option for machines for the dashboard.
                        type: boolean
                    type: object
                type: object
              restrictProjectCreation:
                type: boolean
              restrictProjectDeletion:
                type: boolean
              userProjectsLimit:
                description: UserProjectsLimit is the maximum number of projects a
                  user can create.
                format: int64
                type: integer
            required:
            - customLinks
            - defaultNodeCount
            - displayAPIDocs
            - displayDemoInfo
            - displayTermsOfService
            - enableDashboard
            - enableExternalClusterImport
            - enableOIDCKubeconfig
            - mlaAlertmanagerPrefix
            - mlaGrafanaPrefix
            - restrictProjectCreation
            - restrictProjectDeletion
            - userProjectsLimit
            type: object
        type: object
    served: true
    storage: true
    subresources: {}
---
# Source: kubermatic-operator/templates/crds.tpl
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    app.kubernetes.io/version: v2.24.5
    controller-gen.kubebuilder.io/version: v0.13.0
    helm.sh/resource-policy: keep
    kubermatic.k8c.io/location: master,seed
  labels:
    app.kubernetes.io/component: operator
    app.kubernetes.io/instance: my-kubermatic-operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubermatic-operator
    app.kubernetes.io/version: v2.24.5
    helm.sh/chart: kubermatic-operator-v2.24.5
  name: mlaadminsettings.kubermatic.k8c.io
spec:
  group: kubermatic.k8c.io
  names:
    kind: MLAAdminSetting
    listKind: MLAAdminSettingList
    plural: mlaadminsettings
    singular: mlaadminsetting
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1
    schema:
      openAPIV3Schema:
        description: MLAAdminSetting is the object representing cluster-specific administrator
          settings for KKP user cluster MLA (monitoring, logging & alerting) stack.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Spec describes the cluster-specific administrator settings
              for KKP user cluster MLA (monitoring, logging & alerting) stack.
            properties:
              clusterName:
                description: ClusterName is the name of the user cluster whose MLA
                  settings are defined in this object.
                type: string
              loggingRateLimits:
                description: LoggingRateLimits contains rate-limiting configuration
                  logging in the user cluster.
                properties:
                  ingestionBurstSize:
                    description: IngestionBurstSize represents ingestion burst size
                      in number of requests (nginx `burst`).
                    format: int32
                    type: integer
                  ingestionRate:
                    description: IngestionRate represents ingestion rate limit in
                      requests per second (nginx `rate` in `r/s`).
                    format: int32
                    type: integer
                  queryBurstSize:
                    description: QueryBurstSize represents query burst size in number
                      of requests (nginx `burst`).
                    format: int32
                    type: integer
                  queryRate:
                    description: QueryRate represents query request rate limit per
                      second (nginx `rate` in `r/s`).
                    format: int32
                    type: integer
                type: object
              monitoringRateLimits:
                description: MonitoringRateLimits contains rate-limiting configuration
                  for monitoring in the user cluster.
                properties:
                  ingestionBurstSize:
                    description: IngestionBurstSize represents ingestion burst size
                      in samples per second (Cortex `ingestion_burst_size`).
                    format: int32
                    type: integer
                  ingestionRate:
                    description: IngestionRate represents the ingestion rate limit
                      in samples per second (Cortex `ingestion_rate`).
                    format: int32
                    type: integer
                  maxSamplesPerQuery:
                    description: MaxSamplesPerQuery represents maximum number of samples
                      during a query (Cortex `max_samples_per_query`).
                    format: int32
                    type: integer
                  maxSeriesPerMetric:
                    description: MaxSeriesPerMetric represents maximum number of series
                      per metric (Cortex `max_series_per_metric`).
                    format: int32
                    type: integer
                  maxSeriesPerQuery:
                    description: MaxSeriesPerQuery represents maximum number of timeseries
                      during a query (Cortex `max_series_per_query`).
                    format: int32
                    type: integer
                  maxSeriesTotal:
                    description: MaxSeriesTotal represents maximum number of series
                      per this user cluster (Cortex `max_series_per_user`).
                    format: int32
                    type: integer
                  queryBurstSize:
                    description: QueryBurstSize represents query burst size in number
                      of requests (nginx `burst`).
                    format: int32
                    type: integer
                  queryRate:
                    description: QueryRate represents  query request rate limit per
                      second (nginx `rate` in `r/s`).
                    format: int32
                    type: integer
                type: object
            required:
            - clusterName
            type: object
        type: object
    served: true
    storage: true
    subresources: {}
---
# Source: kubermatic-operator/templates/crds.tpl
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    app.kubernetes.io/version: v2.24.5
    controller-gen.kubebuilder.io/version: v0.13.0
    helm.sh/resource-policy: keep
    kubermatic.k8c.io/location: master,seed
  labels:
    app.kubernetes.io/component: operator
    app.kubernetes.io/instance: my-kubermatic-operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubermatic-operator
    app.kubernetes.io/version: v2.24.5
    helm.sh/chart: kubermatic-operator-v2.24.5
  name: presets.kubermatic.k8c.io
spec:
  group: kubermatic.k8c.io
  names:
    kind: Preset
    listKind: PresetList
    plural: presets
    singular: preset
  scope: Cluster
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: Presets are preconfigured cloud provider credentials that can
          be applied to new clusters. This frees end users from having to know the
          actual credentials used for their clusters.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Presets specifies default presets for supported providers.
            properties:
              aks:
                description: Access data for Azure Kubernetes Service(AKS).
                properties:
                  clientID:
                    description: The service principal used to access Azure.
                    type: string
                  clientSecret:
                    description: The client secret corresponding to the given service
                      principal.
                    type: string
                  datacenter:
                    description: If datacenter is set, this preset is only applicable
                      to the configured datacenter.
                    type: string
                  enabled:
                    description: Only enabled presets will be available in the KKP
                      dashboard.
                    type: boolean
                  subscriptionID:
                    description: The Azure Subscription used for the user cluster.
                    type: string
                  tenantID:
                    description: The Azure Active Directory Tenant used for the user
                      cluster.
                    type: string
                required:
                - clientID
                - clientSecret
                - subscriptionID
                - tenantID
                type: object
              alibaba:
                description: Access data for Alibaba Cloud.
                properties:
                  accessKeyID:
                    description: The Access Key ID used to authenticate against Alibaba.
                    type: string
                  accessKeySecret:
                    description: The Access Key Secret used to authenticate against
                      Alibaba.
                    type: string
                  datacenter:
                    description: If datacenter is set, this preset is only applicable
                      to the configured datacenter.
                    type: string
                  enabled:
                    description: Only enabled presets will be available in the KKP
                      dashboard.
                    type: boolean
                required:
                - accessKeyID
                - accessKeySecret
                type: object
              anexia:
                description: Access data for Anexia.
                properties:
                  datacenter:
                    description: If datacenter is set, this preset is only applicable
                      to the configured datacenter.
                    type: string
                  enabled:
                    description: Only enabled presets will be available in the KKP
                      dashboard.
                    type: boolean
                  token:
                    description: Token is used to authenticate with the Anexia API.
                    type: string
                required:
                - token
                type: object
              aws:
                description: Access data for Amazon Web Services(AWS) Cloud.
                properties:
                  accessKeyID:
                    description: The Access key ID used to authenticate against AWS.
                    type: string
                  assumeRoleARN:
                    description: Defines the ARN for an IAM role that should be assumed
                      when handling resources on AWS. It will be used to acquire temporary
                      security credentials using an STS AssumeRole API operation whenever
                      creating an AWS session.
                    type: string
                  assumeRoleExternalID:
                    description: An arbitrary string that may be needed when calling
                      the STS AssumeRole API operation. Using an external ID can help
                      to prevent the "confused deputy problem".
                    type: string
                  datacenter:
                    description: If datacenter is set, this preset is only applicable
                      to the configured datacenter.
                    type: string
                  enabled:
                    description: Only enabled presets will be available in the KKP
                      dashboard.
                    type: boolean
                  instanceProfileName:
                    description: Instance profile to use. This can be configured,
                      but if left empty will be automatically filled in during reconciliation.
                    type: string
                  roleARN:
                    description: ARN to use. This can be configured, but if left empty
                      will be automatically filled in during reconciliation.
                    type: string
                  routeTableID:
                    description: Route table to use. This can be configured, but if
                      left empty will be automatically filled in during reconciliation.
                    type: string
                  secretAccessKey:
                    description: The Secret Access Key used to authenticate against
                      AWS.
                    type: string
                  securityGroupID:
                    description: Security group to use. This can be configured, but
                      if left empty will be automatically filled in during reconciliation.
                    type: string
                  vpcID:
                    description: AWS VPC to use. Must be configured.
                    type: string
                required:
                - accessKeyID
                - secretAccessKey
                type: object
              azure:
                description: Access data for Microsoft Azure Cloud.
                properties:
                  clientID:
                    description: The service principal used to access Azure.
                    type: string
                  clientSecret:
                    description: The client secret corresponding to the given service
                      principal.
                    type: string
                  datacenter:
                    description: If datacenter is set, this preset is only applicable
                      to the configured datacenter.
                    type: string
                  enabled:
                    description: Only enabled presets will be available in the KKP
                      dashboard.
                    type: boolean
                  loadBalancerSKU:
                    description: LoadBalancerSKU sets the LB type that will be used
                      for the Azure cluster, possible values are "basic" and "standard",
                      if empty, "basic" will be used
                    enum:
                    - standard
                    - basic
                    type: string
                  resourceGroup:
                    description: The resource group that will be used to look up and
                      create resources for the cluster in. If set to empty string
                      at cluster creation, a new resource group will be created and
                      this field will be updated to the generated resource group's
                      name.
                    type: string
                  routeTable:
                    description: The name of a route table associated with the subnet
                      referenced by `subnet`. If set to empty string at cluster creation,
                      a new route table will be created and this field will be updated
                      to the generated route table's name. If no subnet is defined
                      at cluster creation, this field should be empty as well.
                    type: string
                  securityGroup:
                    description: The name of a security group associated with the
                      subnet referenced by `subnet`. If set to empty string at cluster
                      creation, a new security group will be created and this field
                      will be updated to the generated security group's name. If no
                      subnet is defined at cluster creation, this field should be
                      empty as well.
                    type: string
                  subnet:
                    description: The name of a subnet in the VNet referenced by `vnet`.
                      If set to empty string at cluster creation, a new subnet will
                      be created and this field will be updated to the generated subnet's
                      name. If no VNet is defined at cluster creation, this field
                      should be empty as well.
                    type: string
                  subscriptionID:
                    description: The Azure Subscription used for the user cluster.
                    type: string
                  tenantID:
                    description: The Azure Active Directory Tenant used for the user
                      cluster.
                    type: string
                  vnet:
                    description: The name of the VNet resource used for setting up
                      networking in. If set to empty string at cluster creation, a
                      new VNet will be created and this field will be updated to the
                      generated VNet's name.
                    type: string
                  vnetResourceGroup:
                    description: 'Optional: Defines a second resource group that will
                      be used for VNet related resources instead. If left empty, NO
                      additional resource group will be created and all VNet related
                      resources use the resource group defined by `resourceGroup`.'
                    type: string
                required:
                - clientID
                - clientSecret
                - loadBalancerSKU
                - subscriptionID
                - tenantID
                type: object
              digitalocean:
                description: Access data for DigitalOcean.
                properties:
                  datacenter:
                    description: If datacenter is set, this preset is only applicable
                      to the configured datacenter.
                    type: string
                  enabled:
                    description: Only enabled presets will be available in the KKP
                      dashboard.
                    type: boolean
                  token:
                    description: Token is used to authenticate with the DigitalOcean
                      API.
                    type: string
                required:
                - token
                type: object
              eks:
                description: Access data for Amazon Elastic Kubernetes Service(EKS).
                properties:
                  accessKeyID:
                    description: The Access key ID used to authenticate against AWS.
                    type: string
                  assumeRoleARN:
                    description: 'Defines the ARN for an IAM role that should be assumed
                      when handling resources on AWS. It will be used to acquire temporary
                      security credentials using an STS AssumeRole API operation whenever
                      creating an AWS session. required: false'
                    type: string
                  assumeRoleExternalID:
                    description: 'An arbitrary string that may be needed when calling
                      the STS AssumeRole API operation. Using an external ID can help
                      to prevent the "confused deputy problem". required: false'
                    type: string
                  datacenter:
                    description: If datacenter is set, this preset is only applicable
                      to the configured datacenter.
                    type: string
                  enabled:
                    description: Only enabled presets will be available in the KKP
                      dashboard.
                    type: boolean
                  secretAccessKey:
                    description: The Secret Access Key used to authenticate against
                      AWS.
                    type: string
                required:
                - accessKeyID
                - secretAccessKey
                type: object
              enabled:
                description: Only enabled presets will be available in the KKP dashboard.
                type: boolean
              fake:
                properties:
                  datacenter:
                    description: If datacenter is set, this preset is only applicable
                      to the configured datacenter.
                    type: string
                  enabled:
                    description: Only enabled presets will be available in the KKP
                      dashboard.
                    type: boolean
                  token:
                    type: string
                required:
                - token
                type: object
              gcp:
                description: Access data for Google Cloud Platform(GCP).
                properties:
                  datacenter:
                    description: If datacenter is set, this preset is only applicable
                      to the configured datacenter.
                    type: string
                  enabled:
                    description: Only enabled presets will be available in the KKP
                      dashboard.
                    type: boolean
                  network:
                    type: string
                  serviceAccount:
                    description: ServiceAccount is the Google Service Account (JSON
                      format), encoded with base64.
                    type: string
                  subnetwork:
                    type: string
                required:
                - serviceAccount
                type: object
              gke:
                description: Access data for Google Kubernetes Engine(GKE).
                properties:
                  datacenter:
                    description: If datacenter is set, this preset is only applicable
                      to the configured datacenter.
                    type: string
                  enabled:
                    description: Only enabled presets will be available in the KKP
                      dashboard.
                    type: boolean
                  serviceAccount:
                    type: string
                required:
                - serviceAccount
                type: object
              hetzner:
                description: Access data for Hetzner.
                properties:
                  datacenter:
                    description: If datacenter is set, this preset is only applicable
                      to the configured datacenter.
                    type: string
                  enabled:
                    description: Only enabled presets will be available in the KKP
                      dashboard.
                    type: boolean
                  network:
                    description: Network is the pre-existing Hetzner network in which
                      the machines are running. While machines can be in multiple
                      networks, a single one must be chosen for the HCloud CCM to
                      work. If this is empty, the network configured on the datacenter
                      will be used.
                    type: string
                  token:
                    description: Token is used to authenticate with the Hetzner API.
                    type: string
                required:
                - token
                type: object
              kubevirt:
                description: Access data for KuberVirt.
                properties:
                  datacenter:
                    description: If datacenter is set, this preset is only applicable
                      to the configured datacenter.
                    type: string
                  enabled:
                    description: Only enabled presets will be available in the KKP
                      dashboard.
                    type: boolean
                  kubeconfig:
                    description: Kubeconfig is the cluster's kubeconfig file, encoded
                      with base64.
                    type: string
                required:
                - kubeconfig
                type: object
              nutanix:
                description: Access data for Nutanix.
                properties:
                  clusterName:
                    description: The name of the Nutanix cluster to which the resources
                      and nodes are deployed to.
                    type: string
                  csiEndpoint:
                    description: CSIEndpoint to access Nutanix Prism Element for CSI
                      driver.
                    type: string
                  csiPassword:
                    description: Prism Element Password for CSI driver.
                    type: string
                  csiPort:
                    description: CSIPort to use when connecting to the Nutanix Prism
                      Element endpoint (defaults to 9440).
                    format: int32
                    type: integer
                  csiUsername:
                    description: Prism Element Username for CSI driver.
                    type: string
                  datacenter:
                    description: If datacenter is set, this preset is only applicable
                      to the configured datacenter.
                    type: string
                  enabled:
                    description: Only enabled presets will be available in the KKP
                      dashboard.
                    type: boolean
                  password:
                    description: Password corresponding to the provided user.
                    type: string
                  projectName:
                    description: 'Optional: Nutanix project to use. If none is given,
                      no project will be used.'
                    type: string
                  proxyURL:
                    description: 'Optional: To configure a HTTP proxy to access Nutanix
                      Prism Central.'
                    type: string
                  username:
                    description: Username that is used to access the Nutanix Prism
                      Central API.
                    type: string
                required:
                - clusterName
                - password
                - username
                type: object
              openstack:
                description: Access data for OpenStack.
                properties:
                  applicationCredentialID:
                    type: string
                  applicationCredentialSecret:
                    type: string
                  datacenter:
                    description: If datacenter is set, this preset is only applicable
                      to the configured datacenter.
                    type: string
                  domain:
                    type: string
                  enabled:
                    description: Only enabled presets will be available in the KKP
                      dashboard.
                    type: boolean
                  floatingIPPool:
                    description: FloatingIPPool holds the name of the public network
                      The public network is reachable from the outside world and should
                      provide the pool of IP addresses to choose from.
                    type: string
                  network:
                    description: Network holds the name of the internal network When
                      specified, all worker nodes will be attached to this network.
                      If not specified, a network, subnet & router will be created.
                    type: string
                  password:
                    type: string
                  project:
                    description: Project, formally known as tenant.
                    type: string
                  projectID:
                    description: ProjectID, formally known as tenantID.
                    type: string
                  routerID:
                    type: string
                  securityGroups:
                    type: string
                  subnetID:
                    type: string
                  useToken:
                    type: boolean
                  username:
                    type: string
                required:
                - domain
                type: object
              packet:
                description: Access data for Packet Cloud.
                properties:
                  apiKey:
                    type: string
                  billingCycle:
                    type: string
                  datacenter:
                    description: If datacenter is set, this preset is only applicable
                      to the configured datacenter.
                    type: string
                  enabled:
                    description: Only enabled presets will be available in the KKP
                      dashboard.
                    type: boolean
                  projectID:
                    type: string
                required:
                - apiKey
                - projectID
                type: object
              projects:
                description: Projects is a list of project IDs that this preset is
                  limited to.
                items:
                  type: string
                type: array
              requiredEmails:
                description: RequiredEmails is a list of e-mail addresses that this
                  presets should be restricted to. Each item in the list can be either
                  a full e-mail address or just a domain name. This restriction is
                  only enforced in the KKP API.
                items:
                  type: string
                type: array
              vmwareclouddirector:
                description: Access data for VMware Cloud Director.
                properties:
                  apiToken:
                    description: The VMware Cloud Director API token.
                    type: string
                  datacenter:
                    description: If datacenter is set, this preset is only applicable
                      to the configured datacenter.
                    type: string
                  enabled:
                    description: Only enabled presets will be available in the KKP
                      dashboard.
                    type: boolean
                  organization:
                    description: The name of organization to use.
                    type: string
                  ovdcNetwork:
                    description: The name of organizational virtual data center network
                      that will be associated with the VMs and vApp.
                    type: string
                  password:
                    description: The VMware Cloud Director user password.
                    type: string
                  username:
                    description: The VMware Cloud Director user name.
                    type: string
                  vdc:
                    description: The organizational virtual data center.
                    type: string
                required:
                - organization
                - ovdcNetwork
                - vdc
                type: object
              vsphere:
                description: Access data for vSphere.
                properties:
                  basePath:
                    description: BasePath configures a vCenter folder path that KKP
                      will create an individual cluster folder in. If it's an absolute
                      path, the RootPath configured in the datacenter will be ignored.
                      If it is a relative path, the BasePath part will be appended
                      to the RootPath to construct the full path. For both cases,
                      the full folder structure needs to exist. KKP will only try
                      to create the cluster folder.
                    type: string
                  datacenter:
                    description: If datacenter is set, this preset is only applicable
                      to the configured datacenter.
                    type: string
                  datastore:
                    description: Datastore to be used for storing virtual machines
                      and as a default for dynamic volume provisioning, it is mutually
                      exclusive with DatastoreCluster.
                    type: string
                  datastoreCluster:
                    description: DatastoreCluster to be used for storing virtual machines,
                      it is mutually exclusive with Datastore.
                    type: string
                  enabled:
                    description: Only enabled presets will be available in the KKP
                      dashboard.
                    type: boolean
                  networks:
                    description: List of vSphere networks.
                    items:
                      type: string
                    type: array
                  password:
                    description: The vSphere user password.
                    type: string
                  resourcePool:
                    description: ResourcePool is used to manage resources such as
                      cpu and memory for vSphere virtual machines. The resource pool
                      should be defined on vSphere cluster level.
                    type: string
                  username:
                    description: The vSphere user name.
                    type: string
                  vmNetName:
                    description: 'Deprecated: Use networks instead.'
                    type: string
                required:
                - password
                - username
                type: object
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
---
# Source: kubermatic-operator/templates/crds.tpl
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    app.kubernetes.io/version: v2.24.5
    controller-gen.kubebuilder.io/version: v0.13.0
    helm.sh/resource-policy: keep
    kubermatic.k8c.io/location: master,seed
  labels:
    app.kubernetes.io/component: operator
    app.kubernetes.io/instance: my-kubermatic-operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubermatic-operator
    app.kubernetes.io/version: v2.24.5
    helm.sh/chart: kubermatic-operator-v2.24.5
  name: projects.kubermatic.k8c.io
spec:
  group: kubermatic.k8c.io
  names:
    kind: Project
    listKind: ProjectList
    plural: projects
    singular: project
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.name
      name: HumanReadableName
      type: string
    - jsonPath: .status.phase
      name: Status
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1
    schema:
      openAPIV3Schema:
        description: Project is the type describing a project. A project is a collection
          of SSH keys, clusters and members. Members are assigned by creating UserProjectBinding
          objects.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Spec describes the configuration of the project.
            properties:
              name:
                description: Name is the human-readable name given to the project.
                type: string
            required:
            - name
            type: object
          status:
            description: Status holds the current status of the project.
            properties:
              phase:
                description: Phase describes the project phase. New projects are in
                  the `Inactive` phase; after being reconciled they move to `Active`
                  and during deletion they are `Terminating`.
                enum:
                - Active
                - Inactive
                - Terminating
                type: string
            required:
            - phase
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: kubermatic-operator/templates/crds.tpl
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    app.kubernetes.io/version: v2.24.5
    controller-gen.kubebuilder.io/version: v0.13.0
    helm.sh/resource-policy: keep
    kubermatic.k8c.io/location: master,seed
  labels:
    app.kubernetes.io/component: operator
    app.kubernetes.io/instance: my-kubermatic-operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubermatic-operator
    app.kubernetes.io/version: v2.24.5
    helm.sh/chart: kubermatic-operator-v2.24.5
  name: resourcequotas.kubermatic.k8c.io
spec:
  group: kubermatic.k8c.io
  names:
    kind: ResourceQuota
    listKind: ResourceQuotaList
    plural: resourcequotas
    singular: resourcequota
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - jsonPath: .spec.subject.name
      name: Subject Name
      type: string
    - jsonPath: .spec.subject.kind
      name: Subject Kind
      type: string
    name: v1
    schema:
      openAPIV3Schema:
        description: ResourceQuota specifies the amount of cluster resources a project
          can use.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Spec describes the desired state of the resource quota.
            properties:
              quota:
                description: Quota specifies the current maximum allowed usage of
                  resources.
                properties:
                  cpu:
                    anyOf:
                    - type: integer
                    - type: string
                    description: CPU holds the quantity of CPU. For the format, please
                      check k8s.io/apimachinery/pkg/api/resource.Quantity.
                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                    x-kubernetes-int-or-string: true
                  memory:
                    anyOf:
                    - type: integer
                    - type: string
                    description: Memory represents the quantity of RAM size. For the
                      format, please check k8s.io/apimachinery/pkg/api/resource.Quantity.
                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                    x-kubernetes-int-or-string: true
                  storage:
                    anyOf:
                    - type: integer
                    - type: string
                    description: Storage represents the disk size. For the format,
                      please check k8s.io/apimachinery/pkg/api/resource.Quantity.
                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                    x-kubernetes-int-or-string: true
                type: object
              subject:
                description: Subject specifies to which entity the quota applies to.
                properties:
                  kind:
                    default: project
                    description: Kind of the quota subject. For now the only possible
                      kind is project.
                    enum:
                    - project
                    type: string
                  name:
                    description: Name of the quota subject.
                    type: string
                required:
                - kind
                - name
                type: object
            required:
            - quota
            - subject
            type: object
          status:
            description: Status holds the current state of the resource quota.
            properties:
              globalUsage:
                description: GlobalUsage is holds the current usage of resources for
                  all seeds.
                properties:
                  cpu:
                    anyOf:
                    - type: integer
                    - type: string
                    description: CPU holds the quantity of CPU. For the format, please
                      check k8s.io/apimachinery/pkg/api/resource.Quantity.
                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                    x-kubernetes-int-or-string: true
                  memory:
                    anyOf:
                    - type: integer
                    - type: string
                    description: Memory represents the quantity of RAM size. For the
                      format, please check k8s.io/apimachinery/pkg/api/resource.Quantity.
                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                    x-kubernetes-int-or-string: true
                  storage:
                    anyOf:
                    - type: integer
                    - type: string
                    description: Storage represents the disk size. For the format,
                      please check k8s.io/apimachinery/pkg/api/resource.Quantity.
                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                    x-kubernetes-int-or-string: true
                type: object
              localUsage:
                description: LocalUsage is holds the current usage of resources for
                  the local seed.
                properties:
                  cpu:
                    anyOf:
                    - type: integer
                    - type: string
                    description: CPU holds the quantity of CPU. For the format, please
                      check k8s.io/apimachinery/pkg/api/resource.Quantity.
                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                    x-kubernetes-int-or-string: true
                  memory:
                    anyOf:
                    - type: integer
                    - type: string
                    description: Memory represents the quantity of RAM size. For the
                      format, please check k8s.io/apimachinery/pkg/api/resource.Quantity.
                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                    x-kubernetes-int-or-string: true
                  storage:
                    anyOf:
                    - type: integer
                    - type: string
                    description: Storage represents the disk size. For the format,
                      please check k8s.io/apimachinery/pkg/api/resource.Quantity.
                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                    x-kubernetes-int-or-string: true
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: kubermatic-operator/templates/crds.tpl
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    app.kubernetes.io/version: v2.24.5
    controller-gen.kubebuilder.io/version: v0.13.0
    helm.sh/resource-policy: keep
    kubermatic.k8c.io/location: master,seed
  labels:
    app.kubernetes.io/component: operator
    app.kubernetes.io/instance: my-kubermatic-operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubermatic-operator
    app.kubernetes.io/version: v2.24.5
    helm.sh/chart: kubermatic-operator-v2.24.5
  name: rulegroups.kubermatic.k8c.io
spec:
  group: kubermatic.k8c.io
  names:
    kind: RuleGroup
    listKind: RuleGroupList
    plural: rulegroups
    singular: rulegroup
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              cluster:
                description: Cluster is the reference to the cluster the ruleGroup
                  should be created in. All fields except for the name are ignored.
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: 'If referring to a piece of an object instead of
                      an entire object, this string should contain a valid JSON/Go
                      field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within
                      a pod, this would take on a value like: "spec.containers{name}"
                      (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]"
                      (container with index 2 in this pod). This syntax is chosen
                      only to have some well-defined way of referencing a part of
                      an object. TODO: this design is not final and this field is
                      subject to change in the future.'
                    type: string
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                  resourceVersion:
                    description: 'Specific resourceVersion to which this reference
                      is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              data:
                description: 'Data contains the RuleGroup data. Ref: https://prometheus.io/docs/prometheus/latest/configuration/recording_rules/#rule_group'
                format: byte
                type: string
              isDefault:
                description: IsDefault indicates whether the ruleGroup is default
                type: boolean
              ruleGroupType:
                description: RuleGroupType is the type of this ruleGroup applies to.
                  It can be `Metrics` or `Logs`.
                enum:
                - Metrics
                - Logs
                type: string
            required:
            - cluster
            - data
            - ruleGroupType
            type: object
        type: object
    served: true
    storage: true
    subresources: {}
---
# Source: kubermatic-operator/templates/crds.tpl
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    app.kubernetes.io/version: v2.24.5
    controller-gen.kubebuilder.io/version: v0.13.0
    helm.sh/resource-policy: keep
    kubermatic.k8c.io/location: master,seed
  labels:
    app.kubernetes.io/component: operator
    app.kubernetes.io/instance: my-kubermatic-operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubermatic-operator
    app.kubernetes.io/version: v2.24.5
    helm.sh/chart: kubermatic-operator-v2.24.5
  name: seeds.kubermatic.k8c.io
spec:
  group: kubermatic.k8c.io
  names:
    kind: Seed
    listKind: SeedList
    plural: seeds
    singular: seed
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.clusters
      name: Clusters
      type: integer
    - jsonPath: .spec.location
      name: Location
      type: string
    - jsonPath: .status.versions.kubermatic
      name: KKP Version
      type: string
    - jsonPath: .status.versions.cluster
      name: Cluster Version
      type: string
    - jsonPath: .status.phase
      name: Phase
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1
    schema:
      openAPIV3Schema:
        description: Seed is the type representing a Seed cluster. Seed clusters host
          the the control planes for KKP user clusters.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Spec describes the configuration of the Seed cluster.
            properties:
              country:
                description: 'Optional: Country of the seed as ISO-3166 two-letter
                  code, e.g. DE or UK. For informational purposes in the Kubermatic
                  dashboard only.'
                type: string
              datacenters:
                additionalProperties:
                  properties:
                    country:
                      description: 'Optional: Country of the seed as ISO-3166 two-letter
                        code, e.g. DE or UK. For informational purposes in the Kubermatic
                        dashboard only.'
                      type: string
                    location:
                      description: 'Optional: Detailed location of the cluster, like
                        "Hamburg" or "Datacenter 7". For informational purposes in
                        the Kubermatic dashboard only.'
                      type: string
                    node:
                      description: Node holds node-specific settings, like e.g. HTTP
                        proxy, Docker registries and the like. Proxy settings are
                        inherited from the seed if not specified here.
                      properties:
                        containerdRegistryMirrors:
                          description: 'Optional: ContainerdRegistryMirrors configure
                            registry mirrors endpoints. Can be used multiple times
                            to specify multiple mirrors.'
                          properties:
                            registries:
                              additionalProperties:
                                description: ContainerdRegistry defines endpoints
                                  and security for given container registry.
                                properties:
                                  mirrors:
                                    description: List of registry mirrors to use
                                    items:
                                      type: string
                                    type: array
                                type: object
                              description: A map of registries to use to render configs
                                and mirrors for containerd registries
                              type: object
                          type: object
                        httpProxy:
                          description: 'Optional: If set, this proxy will be configured
                            for both HTTP and HTTPS.'
                          type: string
                        insecureRegistries:
                          description: 'Optional: These image registries will be configured
                            as insecure on the container runtime.'
                          items:
                            type: string
                          type: array
                        noProxy:
                          description: 'Optional: If set this will be set as NO_PROXY
                            environment variable on the node; The value must be a
                            comma-separated list of domains for which no proxy should
                            be used, e.g. "*.example.com,internal.dev". Note that
                            the in-cluster apiserver URL will be automatically prepended
                            to this value.'
                          type: string
                        pauseImage:
                          description: 'Optional: Translates to --pod-infra-container-image
                            on the kubelet. If not set, the kubelet will default it.'
                          type: string
                        registryMirrors:
                          description: 'Optional: These image registries will be configured
                            as registry mirrors on the container runtime.'
                          items:
                            type: string
                          type: array
                      type: object
                    spec:
                      description: Spec describes the cloud provider settings used
                        to manage resources in this datacenter. Exactly one cloud
                        provider must be defined.
                      properties:
                        alibaba:
                          description: Alibaba configures an Alibaba Cloud datacenter.
                          properties:
                            region:
                              description: Region to use, for a full list of regions
                                see https://www.alibabacloud.com/help/doc-detail/40654.htm
                              type: string
                          required:
                          - region
                          type: object
                        anexia:
                          description: Anexia configures an Anexia datacenter.
                          properties:
                            locationID:
                              description: LocationID the location of the region
                              type: string
                          required:
                          - locationID
                          type: object
                        aws:
                          description: AWS configures an Amazon Web Services (AWS)
                            datacenter.
                          properties:
                            images:
                              additionalProperties:
                                type: string
                              description: List of AMIs to use for a given operating
                                system. This gets defaulted by querying for the latest
                                AMI for the given distribution when machines are created,
                                so under normal circumstances it is not necessary
                                to define the AMIs statically.
                              type: object
                            region:
                              description: The AWS region to use, e.g. "us-east-1".
                                For a list of available regions, see https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html
                              type: string
                          required:
                          - region
                          type: object
                        azure:
                          description: Azure configures an Azure datacenter.
                          properties:
                            location:
                              description: Region to use, for example "westeurope".
                                A list of available regions can be found at https://azure.microsoft.com/en-us/global-infrastructure/locations/
                              type: string
                          required:
                          - location
                          type: object
                        bringyourown:
                          description: BringYourOwn contains settings for clusters
                            using manually created nodes via kubeadm.
                          type: object
                        digitalocean:
                          description: Digitalocean configures a Digitalocean datacenter.
                          properties:
                            region:
                              description: Datacenter location, e.g. "ams3". A list
                                of existing datacenters can be found at https://www.digitalocean.com/docs/platform/availability-matrix/
                              type: string
                          required:
                          - region
                          type: object
                        disableCsiDriver:
                          description: 'Optional: DisableCSIDriver disables the installation
                            of CSI driver on every clusters within the DC If true
                            it can''t be over-written in the cluster configuration'
                          type: boolean
                        enforceAuditLogging:
                          description: 'Optional: EnforceAuditLogging enforces audit
                            logging on every cluster within the DC, ignoring cluster-specific
                            settings.'
                          type: boolean
                        enforcePodSecurityPolicy:
                          description: 'Optional: EnforcePodSecurityPolicy enforces
                            pod security policy plugin on every clusters within the
                            DC, ignoring cluster-specific settings.'
                          type: boolean
                        fake:
                          description: DatacenterSpecFake describes a fake datacenter.
                          properties:
                            fakeProperty:
                              type: string
                          type: object
                        gcp:
                          description: GCP configures a Google Cloud Platform (GCP)
                            datacenter.
                          properties:
                            region:
                              description: Region to use, for example "europe-west3",
                                for a full list of regions see https://cloud.google.com/compute/docs/regions-zones/
                              type: string
                            regional:
                              description: 'Optional: Regional clusters spread their
                                resources across multiple availability zones. Refer
                                to the official documentation for more details on
                                this: https://cloud.google.com/kubernetes-engine/docs/concepts/regional-clusters'
                              type: boolean
                            zoneSuffixes:
                              description: List of enabled zones, for example [a,
                                c]. See the link above for the available zones in
                                your chosen region.
                              items:
                                type: string
                              type: array
                          required:
                          - region
                          - zoneSuffixes
                          type: object
                        hetzner:
                          description: Hetzner configures a Hetzner datacenter.
                          properties:
                            datacenter:
                              description: Datacenter location, e.g. "nbg1-dc3". A
                                list of existing datacenters can be found at https://docs.hetzner.com/general/others/data-centers-and-connection/
                              type: string
                            location:
                              description: 'Optional: Detailed location of the datacenter,
                                like "Hamburg" or "Datacenter 7". For informational
                                purposes only.'
                              type: string
                            network:
                              description: Network is the pre-existing Hetzner network
                                in which the machines are running. While machines
                                can be in multiple networks, a single one must be
                                chosen for the HCloud CCM to work.
                              type: string
                          required:
                          - datacenter
                          - network
                          type: object
                        kubelb:
                          description: 'Optional: KubeLB holds the configuration for
                            the kubeLB at the data center level. Only available in
                            Enterprise Edition.'
                          properties:
                            enabled:
                              description: Enabled is used to enable/disable kubeLB
                                for the datacenter. This is used to control whether
                                installing kubeLB is allowed or not for the datacenter.
                              type: boolean
                            enforced:
                              description: Enforced is used to enforce kubeLB installation
                                for all the user clusters belonging to this datacenter.
                                Setting enforced to false will not uninstall kubeLB
                                from the user clusters and it needs to be disabled
                                manually.
                              type: boolean
                            kubeconfig:
                              description: Kubeconfig is reference to the Kubeconfig
                                for the kubeLB management cluster.
                              properties:
                                apiVersion:
                                  description: API version of the referent.
                                  type: string
                                fieldPath:
                                  description: 'If referring to a piece of an object
                                    instead of an entire object, this string should
                                    contain a valid JSON/Go field access statement,
                                    such as desiredState.manifest.containers[2]. For
                                    example, if the object reference is to a container
                                    within a pod, this would take on a value like:
                                    "spec.containers{name}" (where "name" refers to
                                    the name of the container that triggered the event)
                                    or if no container name is specified "spec.containers[2]"
                                    (container with index 2 in this pod). This syntax
                                    is chosen only to have some well-defined way of
                                    referencing a part of an object. TODO: this design
                                    is not final and this field is subject to change
                                    in the future.'
                                  type: string
                                kind:
                                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                                namespace:
                                  description: 'Namespace of the referent. More info:
                                    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                  type: string
                                resourceVersion:
                                  description: 'Specific resourceVersion to which
                                    this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                                  type: string
                                uid:
                                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                                  type: string
                              type: object
                              x-kubernetes-map-type: atomic
                            nodeAddressType:
                              default: ExternalIP
                              description: 'NodeAddressType is used to configure the
                                address type from node, used for load balancing. Optional:
                                Defaults to ExternalIP.'
                              enum:
                              - InternalIP
                              - ExternalIP
                              type: string
                          type: object
                        kubevirt:
                          description: Kubevirt configures a KubeVirt datacenter.
                          properties:
                            customNetworkPolicies:
                              description: 'Optional: CustomNetworkPolicies allows
                                to add some extra custom NetworkPolicies, that are
                                deployed in the dedicated infra KubeVirt cluster.
                                They are added to the defaults.'
                              items:
                                description: CustomNetworkPolicy contains a name and
                                  the Spec of a NetworkPolicy.
                                properties:
                                  name:
                                    description: Name is the name of the Custom Network
                                      Policy.
                                    type: string
                                  spec:
                                    description: Spec is the Spec of the NetworkPolicy,
                                      using the standard type.
                                    properties:
                                      egress:
                                        description: egress is a list of egress rules
                                          to be applied to the selected pods. Outgoing
                                          traffic is allowed if there are no NetworkPolicies
                                          selecting the pod (and cluster policy otherwise
                                          allows the traffic), OR if the traffic matches
                                          at least one egress rule across all of the
                                          NetworkPolicy objects whose podSelector
                                          matches the pod. If this field is empty
                                          then this NetworkPolicy limits all outgoing
                                          traffic (and serves solely to ensure that
                                          the pods it selects are isolated by default).
                                          This field is beta-level in 1.8
                                        items:
                                          description: NetworkPolicyEgressRule describes
                                            a particular set of traffic that is allowed
                                            out of pods matched by a NetworkPolicySpec's
                                            podSelector. The traffic must match both
                                            ports and to. This type is beta-level
                                            in 1.8
                                          properties:
                                            ports:
                                              description: ports is a list of destination
                                                ports for outgoing traffic. Each item
                                                in this list is combined using a logical
                                                OR. If this field is empty or missing,
                                                this rule matches all ports (traffic
                                                not restricted by port). If this field
                                                is present and contains at least one
                                                item, then this rule allows traffic
                                                only if the traffic matches at least
                                                one port in the list.
                                              items:
                                                description: NetworkPolicyPort describes
                                                  a port to allow traffic on
                                                properties:
                                                  endPort:
                                                    description: endPort indicates
                                                      that the range of ports from
                                                      port to endPort if set, inclusive,
                                                      should be allowed by the policy.
                                                      This field cannot be defined
                                                      if the port field is not defined
                                                      or if the port field is defined
                                                      as a named (string) port. The
                                                      endPort must be equal or greater
                                                      than port.
                                                    format: int32
                                                    type: integer
                                                  port:
                                                    anyOf:
                                                    - type: integer
                                                    - type: string
                                                    description: port represents the
                                                      port on the given protocol.
                                                      This can either be a numerical
                                                      or named port on a pod. If this
                                                      field is not provided, this
                                                      matches all port names and numbers.
                                                      If present, only traffic on
                                                      the specified protocol AND port
                                                      will be matched.
                                                    x-kubernetes-int-or-string: true
                                                  protocol:
                                                    default: TCP
                                                    description: protocol represents
                                                      the protocol (TCP, UDP, or SCTP)
                                                      which traffic must match. If
                                                      not specified, this field defaults
                                                      to TCP.
                                                    type: string
                                                type: object
                                              type: array
                                            to:
                                              description: to is a list of destinations
                                                for outgoing traffic of pods selected
                                                for this rule. Items in this list
                                                are combined using a logical OR operation.
                                                If this field is empty or missing,
                                                this rule matches all destinations
                                                (traffic not restricted by destination).
                                                If this field is present and contains
                                                at least one item, this rule allows
                                                traffic only if the traffic matches
                                                at least one item in the to list.
                                              items:
                                                description: NetworkPolicyPeer describes
                                                  a peer to allow traffic to/from.
                                                  Only certain combinations of fields
                                                  are allowed
                                                properties:
                                                  ipBlock:
                                                    description: ipBlock defines policy
                                                      on a particular IPBlock. If
                                                      this field is set then neither
                                                      of the other fields can be.
                                                    properties:
                                                      cidr:
                                                        description: cidr is a string
                                                          representing the IPBlock
                                                          Valid examples are "192.168.1.0/24"
                                                          or "2001:db8::/64"
                                                        type: string
                                                      except:
                                                        description: except is a slice
                                                          of CIDRs that should not
                                                          be included within an IPBlock
                                                          Valid examples are "192.168.1.0/24"
                                                          or "2001:db8::/64" Except
                                                          values will be rejected
                                                          if they are outside the
                                                          cidr range
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                    - cidr
                                                    type: object
                                                  namespaceSelector:
                                                    description: "namespaceSelector
                                                      selects namespaces using cluster-scoped
                                                      labels. This field follows standard
                                                      label selector semantics; if
                                                      present but empty, it selects
                                                      all namespaces. \n If podSelector
                                                      is also set, then the NetworkPolicyPeer
                                                      as a whole selects the pods
                                                      matching podSelector in the
                                                      namespaces selected by namespaceSelector.
                                                      Otherwise it selects all pods
                                                      in the namespaces selected by
                                                      namespaceSelector."
                                                    properties:
                                                      matchExpressions:
                                                        description: matchExpressions
                                                          is a list of label selector
                                                          requirements. The requirements
                                                          are ANDed.
                                                        items:
                                                          description: A label selector
                                                            requirement is a selector
                                                            that contains values,
                                                            a key, and an operator
                                                            that relates the key and
                                                            values.
                                                          properties:
                                                            key:
                                                              description: key is
                                                                the label key that
                                                                the selector applies
                                                                to.
                                                              type: string
                                                            operator:
                                                              description: operator
                                                                represents a key's
                                                                relationship to a
                                                                set of values. Valid
                                                                operators are In,
                                                                NotIn, Exists and
                                                                DoesNotExist.
                                                              type: string
                                                            values:
                                                              description: values
                                                                is an array of string
                                                                values. If the operator
                                                                is In or NotIn, the
                                                                values array must
                                                                be non-empty. If the
                                                                operator is Exists
                                                                or DoesNotExist, the
                                                                values array must
                                                                be empty. This array
                                                                is replaced during
                                                                a strategic merge
                                                                patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                          required:
                                                          - key
                                                          - operator
                                                          type: object
                                                        type: array
                                                      matchLabels:
                                                        additionalProperties:
                                                          type: string
                                                        description: matchLabels is
                                                          a map of {key,value} pairs.
                                                          A single {key,value} in
                                                          the matchLabels map is equivalent
                                                          to an element of matchExpressions,
                                                          whose key field is "key",
                                                          the operator is "In", and
                                                          the values array contains
                                                          only "value". The requirements
                                                          are ANDed.
                                                        type: object
                                                    type: object
                                                    x-kubernetes-map-type: atomic
                                                  podSelector:
                                                    description: "podSelector is a
                                                      label selector which selects
                                                      pods. This field follows standard
                                                      label selector semantics; if
                                                      present but empty, it selects
                                                      all pods. \n If namespaceSelector
                                                      is also set, then the NetworkPolicyPeer
                                                      as a whole selects the pods
                                                      matching podSelector in the
                                                      Namespaces selected by NamespaceSelector.
                                                      Otherwise it selects the pods
                                                      matching podSelector in the
                                                      policy's own namespace."
                                                    properties:
                                                      matchExpressions:
                                                        description: matchExpressions
                                                          is a list of label selector
                                                          requirements. The requirements
                                                          are ANDed.
                                                        items:
                                                          description: A label selector
                                                            requirement is a selector
                                                            that contains values,
                                                            a key, and an operator
                                                            that relates the key and
                                                            values.
                                                          properties:
                                                            key:
                                                              description: key is
                                                                the label key that
                                                                the selector applies
                                                                to.
                                                              type: string
                                                            operator:
                                                              description: operator
                                                                represents a key's
                                                                relationship to a
                                                                set of values. Valid
                                                                operators are In,
                                                                NotIn, Exists and
                                                                DoesNotExist.
                                                              type: string
                                                            values:
                                                              description: values
                                                                is an array of string
                                                                values. If the operator
                                                                is In or NotIn, the
                                                                values array must
                                                                be non-empty. If the
                                                                operator is Exists
                                                                or DoesNotExist, the
                                                                values array must
                                                                be empty. This array
                                                                is replaced during
                                                                a strategic merge
                                                                patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                          required:
                                                          - key
                                                          - operator
                                                          type: object
                                                        type: array
                                                      matchLabels:
                                                        additionalProperties:
                                                          type: string
                                                        description: matchLabels is
                                                          a map of {key,value} pairs.
                                                          A single {key,value} in
                                                          the matchLabels map is equivalent
                                                          to an element of matchExpressions,
                                                          whose key field is "key",
                                                          the operator is "In", and
                                                          the values array contains
                                                          only "value". The requirements
                                                          are ANDed.
                                                        type: object
                                                    type: object
                                                    x-kubernetes-map-type: atomic
                                                type: object
                                              type: array
                                          type: object
                                        type: array
                                      ingress:
                                        description: ingress is a list of ingress
                                          rules to be applied to the selected pods.
                                          Traffic is allowed to a pod if there are
                                          no NetworkPolicies selecting the pod (and
                                          cluster policy otherwise allows the traffic),
                                          OR if the traffic source is the pod's local
                                          node, OR if the traffic matches at least
                                          one ingress rule across all of the NetworkPolicy
                                          objects whose podSelector matches the pod.
                                          If this field is empty then this NetworkPolicy
                                          does not allow any traffic (and serves solely
                                          to ensure that the pods it selects are isolated
                                          by default)
                                        items:
                                          description: NetworkPolicyIngressRule describes
                                            a particular set of traffic that is allowed
                                            to the pods matched by a NetworkPolicySpec's
                                            podSelector. The traffic must match both
                                            ports and from.
                                          properties:
                                            from:
                                              description: from is a list of sources
                                                which should be able to access the
                                                pods selected for this rule. Items
                                                in this list are combined using a
                                                logical OR operation. If this field
                                                is empty or missing, this rule matches
                                                all sources (traffic not restricted
                                                by source). If this field is present
                                                and contains at least one item, this
                                                rule allows traffic only if the traffic
                                                matches at least one item in the from
                                                list.
                                              items:
                                                description: NetworkPolicyPeer describes
                                                  a peer to allow traffic to/from.
                                                  Only certain combinations of fields
                                                  are allowed
                                                properties:
                                                  ipBlock:
                                                    description: ipBlock defines policy
                                                      on a particular IPBlock. If
                                                      this field is set then neither
                                                      of the other fields can be.
                                                    properties:
                                                      cidr:
                                                        description: cidr is a string
                                                          representing the IPBlock
                                                          Valid examples are "192.168.1.0/24"
                                                          or "2001:db8::/64"
                                                        type: string
                                                      except:
                                                        description: except is a slice
                                                          of CIDRs that should not
                                                          be included within an IPBlock
                                                          Valid examples are "192.168.1.0/24"
                                                          or "2001:db8::/64" Except
                                                          values will be rejected
                                                          if they are outside the
                                                          cidr range
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                    - cidr
                                                    type: object
                                                  namespaceSelector:
                                                    description: "namespaceSelector
                                                      selects namespaces using cluster-scoped
                                                      labels. This field follows standard
                                                      label selector semantics; if
                                                      present but empty, it selects
                                                      all namespaces. \n If podSelector
                                                      is also set, then the NetworkPolicyPeer
                                                      as a whole selects the pods
                                                      matching podSelector in the
                                                      namespaces selected by namespaceSelector.
                                                      Otherwise it selects all pods
                                                      in the namespaces selected by
                                                      namespaceSelector."
                                                    properties:
                                                      matchExpressions:
                                                        description: matchExpressions
                                                          is a list of label selector
                                                          requirements. The requirements
                                                          are ANDed.
                                                        items:
                                                          description: A label selector
                                                            requirement is a selector
                                                            that contains values,
                                                            a key, and an operator
                                                            that relates the key and
                                                            values.
                                                          properties:
                                                            key:
                                                              description: key is
                                                                the label key that
                                                                the selector applies
                                                                to.
                                                              type: string
                                                            operator:
                                                              description: operator
                                                                represents a key's
                                                                relationship to a
                                                                set of values. Valid
                                                                operators are In,
                                                                NotIn, Exists and
                                                                DoesNotExist.
                                                              type: string
                                                            values:
                                                              description: values
                                                                is an array of string
                                                                values. If the operator
                                                                is In or NotIn, the
                                                                values array must
                                                                be non-empty. If the
                                                                operator is Exists
                                                                or DoesNotExist, the
                                                                values array must
                                                                be empty. This array
                                                                is replaced during
                                                                a strategic merge
                                                                patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                          required:
                                                          - key
                                                          - operator
                                                          type: object
                                                        type: array
                                                      matchLabels:
                                                        additionalProperties:
                                                          type: string
                                                        description: matchLabels is
                                                          a map of {key,value} pairs.
                                                          A single {key,value} in
                                                          the matchLabels map is equivalent
                                                          to an element of matchExpressions,
                                                          whose key field is "key",
                                                          the operator is "In", and
                                                          the values array contains
                                                          only "value". The requirements
                                                          are ANDed.
                                                        type: object
                                                    type: object
                                                    x-kubernetes-map-type: atomic
                                                  podSelector:
                                                    description: "podSelector is a
                                                      label selector which selects
                                                      pods. This field follows standard
                                                      label selector semantics; if
                                                      present but empty, it selects
                                                      all pods. \n If namespaceSelector
                                                      is also set, then the NetworkPolicyPeer
                                                      as a whole selects the pods
                                                      matching podSelector in the
                                                      Namespaces selected by NamespaceSelector.
                                                      Otherwise it selects the pods
                                                      matching podSelector in the
                                                      policy's own namespace."
                                                    properties:
                                                      matchExpressions:
                                                        description: matchExpressions
                                                          is a list of label selector
                                                          requirements. The requirements
                                                          are ANDed.
                                                        items:
                                                          description: A label selector
                                                            requirement is a selector
                                                            that contains values,
                                                            a key, and an operator
                                                            that relates the key and
                                                            values.
                                                          properties:
                                                            key:
                                                              description: key is
                                                                the label key that
                                                                the selector applies
                                                                to.
                                                              type: string
                                                            operator:
                                                              description: operator
                                                                represents a key's
                                                                relationship to a
                                                                set of values. Valid
                                                                operators are In,
                                                                NotIn, Exists and
                                                                DoesNotExist.
                                                              type: string
                                                            values:
                                                              description: values
                                                                is an array of string
                                                                values. If the operator
                                                                is In or NotIn, the
                                                                values array must
                                                                be non-empty. If the
                                                                operator is Exists
                                                                or DoesNotExist, the
                                                                values array must
                                                                be empty. This array
                                                                is replaced during
                                                                a strategic merge
                                                                patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                          required:
                                                          - key
                                                          - operator
                                                          type: object
                                                        type: array
                                                      matchLabels:
                                                        additionalProperties:
                                                          type: string
                                                        description: matchLabels is
                                                          a map of {key,value} pairs.
                                                          A single {key,value} in
                                                          the matchLabels map is equivalent
                                                          to an element of matchExpressions,
                                                          whose key field is "key",
                                                          the operator is "In", and
                                                          the values array contains
                                                          only "value". The requirements
                                                          are ANDed.
                                                        type: object
                                                    type: object
                                                    x-kubernetes-map-type: atomic
                                                type: object
                                              type: array
                                            ports:
                                              description: ports is a list of ports
                                                which should be made accessible on
                                                the pods selected for this rule. Each
                                                item in this list is combined using
                                                a logical OR. If this field is empty
                                                or missing, this rule matches all
                                                ports (traffic not restricted by port).
                                                If this field is present and contains
                                                at least one item, then this rule
                                                allows traffic only if the traffic
                                                matches at least one port in the list.
                                              items:
                                                description: NetworkPolicyPort describes
                                                  a port to allow traffic on
                                                properties:
                                                  endPort:
                                                    description: endPort indicates
                                                      that the range of ports from
                                                      port to endPort if set, inclusive,
                                                      should be allowed by the policy.
                                                      This field cannot be defined
                                                      if the port field is not defined
                                                      or if the port field is defined
                                                      as a named (string) port. The
                                                      endPort must be equal or greater
                                                      than port.
                                                    format: int32
                                                    type: integer
                                                  port:
                                                    anyOf:
                                                    - type: integer
                                                    - type: string
                                                    description: port represents the
                                                      port on the given protocol.
                                                      This can either be a numerical
                                                      or named port on a pod. If this
                                                      field is not provided, this
                                                      matches all port names and numbers.
                                                      If present, only traffic on
                                                      the specified protocol AND port
                                                      will be matched.
                                                    x-kubernetes-int-or-string: true
                                                  protocol:
                                                    default: TCP
                                                    description: protocol represents
                                                      the protocol (TCP, UDP, or SCTP)
                                                      which traffic must match. If
                                                      not specified, this field defaults
                                                      to TCP.
                                                    type: string
                                                type: object
                                              type: array
                                          type: object
                                        type: array
                                      podSelector:
                                        description: podSelector selects the pods
                                          to which this NetworkPolicy object applies.
                                          The array of ingress rules is applied to
                                          any pods selected by this field. Multiple
                                          network policies can select the same set
                                          of pods. In this case, the ingress rules
                                          for each are combined additively. This field
                                          is NOT optional and follows standard label
                                          selector semantics. An empty podSelector
                                          matches all pods in this namespace.
                                        properties:
                                          matchExpressions:
                                            description: matchExpressions is a list
                                              of label selector requirements. The
                                              requirements are ANDed.
                                            items:
                                              description: A label selector requirement
                                                is a selector that contains values,
                                                a key, and an operator that relates
                                                the key and values.
                                              properties:
                                                key:
                                                  description: key is the label key
                                                    that the selector applies to.
                                                  type: string
                                                operator:
                                                  description: operator represents
                                                    a key's relationship to a set
                                                    of values. Valid operators are
                                                    In, NotIn, Exists and DoesNotExist.
                                                  type: string
                                                values:
                                                  description: values is an array
                                                    of string values. If the operator
                                                    is In or NotIn, the values array
                                                    must be non-empty. If the operator
                                                    is Exists or DoesNotExist, the
                                                    values array must be empty. This
                                                    array is replaced during a strategic
                                                    merge patch.
                                                  items:
                                                    type: string
                                                  type: array
                                              required:
                                              - key
                                              - operator
                                              type: object
                                            type: array
                                          matchLabels:
                                            additionalProperties:
                                              type: string
                                            description: matchLabels is a map of {key,value}
                                              pairs. A single {key,value} in the matchLabels
                                              map is equivalent to an element of matchExpressions,
                                              whose key field is "key", the operator
                                              is "In", and the values array contains
                                              only "value". The requirements are ANDed.
                                            type: object
                                        type: object
                                        x-kubernetes-map-type: atomic
                                      policyTypes:
                                        description: policyTypes is a list of rule
                                          types that the NetworkPolicy relates to.
                                          Valid options are ["Ingress"], ["Egress"],
                                          or ["Ingress", "Egress"]. If this field
                                          is not specified, it will default based
                                          on the existence of ingress or egress rules;
                                          policies that contain an egress section
                                          are assumed to affect egress, and all policies
                                          (whether or not they contain an ingress
                                          section) are assumed to affect ingress.
                                          If you want to write an egress-only policy,
                                          you must explicitly specify policyTypes
                                          [ "Egress" ]. Likewise, if you want to write
                                          a policy that specifies that no egress is
                                          allowed, you must specify a policyTypes
                                          value that include "Egress" (since such
                                          a policy would not include an egress section
                                          and would otherwise default to just [ "Ingress"
                                          ]). This field is beta-level in 1.8
                                        items:
                                          description: PolicyType string describes
                                            the NetworkPolicy type This type is beta-level
                                            in 1.8
                                          type: string
                                        type: array
                                    required:
                                    - podSelector
                                    type: object
                                required:
                                - name
                                - spec
                                type: object
                              type: array
                            dnsConfig:
                              description: DNSConfig represents the DNS parameters
                                of a pod. Parameters specified here will be merged
                                to the generated DNS configuration based on DNSPolicy.
                              properties:
                                nameservers:
                                  description: A list of DNS name server IP addresses.
                                    This will be appended to the base nameservers
                                    generated from DNSPolicy. Duplicated nameservers
                                    will be removed.
                                  items:
                                    type: string
                                  type: array
                                options:
                                  description: A list of DNS resolver options. This
                                    will be merged with the base options generated
                                    from DNSPolicy. Duplicated entries will be removed.
                                    Resolution options given in Options will override
                                    those that appear in the base DNSPolicy.
                                  items:
                                    description: PodDNSConfigOption defines DNS resolver
                                      options of a pod.
                                    properties:
                                      name:
                                        description: Required.
                                        type: string
                                      value:
                                        type: string
                                    type: object
                                  type: array
                                searches:
                                  description: A list of DNS search domains for host-name
                                    lookup. This will be appended to the base search
                                    paths generated from DNSPolicy. Duplicated search
                                    paths will be removed.
                                  items:
                                    type: string
                                  type: array
                              type: object
                            dnsPolicy:
                              default: ClusterFirst
                              description: DNSPolicy represents the dns policy for
                                the pod. Valid values are 'ClusterFirstWithHostNet',
                                'ClusterFirst', 'Default' or 'None'. Defaults to "ClusterFirst".
                                DNS parameters given in DNSConfig will be merged with
                                the policy selected with DNSPolicy.
                              enum:
                              - ClusterFirstWithHostNet
                              - ClusterFirst
                              - Default
                              - None
                              type: string
                            enableDefaultNetworkPolicies:
                              description: 'Optional: EnableDefaultNetworkPolicies
                                enables deployment of default network policies like
                                cluster isolation. Defaults to true.'
                              type: boolean
                            images:
                              description: Images represents standard VM Image sources.
                              properties:
                                http:
                                  description: HTTP represents a http source.
                                  properties:
                                    operatingSystems:
                                      additionalProperties:
                                        additionalProperties:
                                          type: string
                                        description: OSVersions defines a map of OS
                                          version and the source to download the image.
                                        type: object
                                      description: OperatingSystems represents list
                                        of supported operating-systems with their
                                        URLs.
                                      type: object
                                  required:
                                  - operatingSystems
                                  type: object
                              type: object
                            infraStorageClasses:
                              description: 'Optional: InfraStorageClasses contains
                                a list of KubeVirt infra cluster StorageClasses names
                                that will be used to initialise StorageClasses in
                                the tenant cluster. In the tenant cluster, the created
                                StorageClass name will have as name: kubevirt-<infra-storageClass-name>'
                              items:
                                properties:
                                  isDefaultClass:
                                    description: 'Optional: IsDefaultClass. If true,
                                      the created StorageClass in the tenant cluster
                                      will be annotated with: storageclass.kubernetes.io/is-default-class
                                      : true If missing or false, annotation will
                                      be: storageclass.kubernetes.io/is-default-class
                                      : false'
                                    type: boolean
                                  name:
                                    type: string
                                required:
                                - name
                                type: object
                              type: array
                          type: object
                        machineFlavorFilter:
                          description: 'Optional: MachineFlavorFilter is used to filter
                            out allowed machine flavors based on the specified resource
                            limits like CPU, Memory, and GPU etc.'
                          properties:
                            enableGPU:
                              description: Include VMs with GPU
                              type: boolean
                            maxCPU:
                              default: 0
                              description: Maximum number of vCPU
                              minimum: 0
                              type: integer
                            maxRAM:
                              default: 0
                              description: Maximum RAM size in GB
                              minimum: 0
                              type: integer
                            minCPU:
                              default: 0
                              description: Minimum number of vCPU
                              minimum: 0
                              type: integer
                            minRAM:
                              default: 0
                              description: Minimum RAM size in GB
                              minimum: 0
                              type: integer
                          required:
                          - enableGPU
                          - maxCPU
                          - maxRAM
                          - minCPU
                          - minRAM
                          type: object
                        nutanix:
                          description: Nutanix configures a Nutanix HCI datacenter.
                          properties:
                            allowInsecure:
                              description: 'Optional: AllowInsecure allows to disable
                                the TLS certificate check against the endpoint (defaults
                                to false)'
                              type: boolean
                            endpoint:
                              description: Endpoint to use for accessing Nutanix Prism
                                Central. No protocol or port should be passed, for
                                example "nutanix.example.com" or "10.0.0.1"
                              type: string
                            images:
                              additionalProperties:
                                type: string
                              description: Images to use for each supported operating
                                system
                              type: object
                            port:
                              description: 'Optional: Port to use when connecting
                                to the Nutanix Prism Central endpoint (defaults to
                                9440)'
                              format: int32
                              type: integer
                          required:
                          - endpoint
                          - images
                          type: object
                        openstack:
                          description: Openstack configures an Openstack datacenter.
                          properties:
                            authURL:
                              description: Authentication URL
                              type: string
                            availabilityZone:
                              description: Used to configure availability zone.
                              type: string
                            csiCinderTopologyEnabled:
                              description: 'Optional: configures enablement of topology
                                support for the Cinder CSI Plugin. This requires Nova
                                and Cinder to have matching availability zones configured.'
                              type: boolean
                            dnsServers:
                              description: Used for automatic network creation
                              items:
                                type: string
                              type: array
                            enabledFlavors:
                              description: 'Optional: List of enabled flavors for
                                the given datacenter'
                              items:
                                type: string
                              type: array
                            enforceFloatingIP:
                              description: Optional
                              type: boolean
                            ignoreVolumeAZ:
                              description: Optional
                              type: boolean
                            images:
                              additionalProperties:
                                type: string
                              description: Images to use for each supported operating
                                system.
                              type: object
                            ipv6Enabled:
                              description: 'Optional: defines if the IPv6 is enabled
                                for the datacenter'
                              type: boolean
                            manageSecurityGroups:
                              description: 'Optional: Gets mapped to the "manage-security-groups"
                                setting in the cloud config. This setting defaults
                                to true.'
                              type: boolean
                            nodeSizeRequirements:
                              description: 'Optional: Restrict the allowed VM configurations
                                that can be chosen in the KKP dashboard. This setting
                                does not affect the validation webhook for MachineDeployments.'
                              properties:
                                minimumMemory:
                                  description: MinimumMemory is the minimum required
                                    amount of memory, measured in MB
                                  type: integer
                                minimumVCPUs:
                                  description: VCPUs is the minimum required amount
                                    of (virtual) CPUs
                                  type: integer
                              type: object
                            region:
                              description: Authentication region name
                              type: string
                            trustDevicePath:
                              description: 'Optional: Gets mapped to the "trust-device-path"
                                setting in the cloud config. This setting defaults
                                to false.'
                              type: boolean
                            useOctavia:
                              description: 'Optional: Gets mapped to the "use-octavia"
                                setting in the cloud config. use-octavia is enabled
                                by default in CCM since v1.17.0, and disabled by default
                                with the in-tree cloud provider.'
                              type: boolean
                          required:
                          - authURL
                          - images
                          - region
                          type: object
                        operatingSystemProfiles:
                          additionalProperties:
                            type: string
                          description: 'Optional: DefaultOperatingSystemProfiles specifies
                            the OperatingSystemProfiles to use for each supported
                            operating system.'
                          type: object
                        packet:
                          description: Packet configures an Equinix Metal datacenter.
                          properties:
                            facilities:
                              description: The list of enabled facilities, for example
                                "ams1", for a full list of available facilities see
                                https://metal.equinix.com/developers/docs/locations/facilities/
                              items:
                                type: string
                              type: array
                            metro:
                              description: Metros are facilities that are grouped
                                together geographically and share capacity and networking
                                features, see https://metal.equinix.com/developers/docs/locations/metros/
                              type: string
                          type: object
                        providerReconciliationInterval:
                          description: 'Optional: ProviderReconciliationInterval is
                            the time that must have passed since a Cluster''s status.lastProviderReconciliation
                            to make the cliuster controller perform an in-depth provider
                            reconciliation, where for example missing security groups
                            will be reconciled. Setting this too low can cause rate
                            limits by the cloud provider, setting this too high means
                            that *if* a resource at a cloud provider is removed/changed
                            outside of KKP, it will take this long to fix it.'
                          type: string
                        requiredEmails:
                          description: 'Optional: When defined, only users with an
                            e-mail address on the given domains can make use of this
                            datacenter. You can define multiple domains, e.g. "example.com",
                            one of which must match the email domain exactly (i.e.
                            "example.com" will not match "user@test.example.com").'
                          items:
                            type: string
                          type: array
                        vmwareclouddirector:
                          description: VMwareCloudDirector configures a VMware Cloud
                            Director datacenter.
                          properties:
                            allowInsecure:
                              description: If set to true, disables the TLS certificate
                                check against the endpoint.
                              type: boolean
                            catalog:
                              description: The default catalog which contains the
                                VM templates.
                              type: string
                            storageProfile:
                              description: The name of the storage profile to use
                                for disks attached to the VMs.
                              type: string
                            templates:
                              additionalProperties:
                                type: string
                              description: A list of VM templates to use for a given
                                operating system. You must define at least one template.
                              type: object
                            url:
                              description: Endpoint URL to use, including protocol,
                                for example "https://vclouddirector.example.com".
                              type: string
                          required:
                          - templates
                          - url
                          type: object
                        vsphere:
                          description: VSphere configures a VMware vSphere datacenter.
                          properties:
                            allowInsecure:
                              description: If set to true, disables the TLS certificate
                                check against the endpoint.
                              type: boolean
                            cluster:
                              description: The name of the vSphere cluster to use.
                                Used for out-of-tree CSI Driver.
                              type: string
                            datacenter:
                              description: The name of the datacenter to use.
                              type: string
                            datastore:
                              description: The default Datastore to be used for provisioning
                                volumes using storage classes/dynamic provisioning
                                and for storing virtual machine files in case no `Datastore`
                                or `DatastoreCluster` is provided at Cluster level.
                              type: string
                            defaultTagCategoryID:
                              description: DefaultTagCategoryID is the tag category
                                id that will be used as default, if users don't specify
                                it on a cluster level, and they don't wish KKP to
                                create default generated tag category, upon cluster
                                creation.
                              type: string
                            endpoint:
                              description: Endpoint URL to use, including protocol,
                                for example "https://vcenter.example.com".
                              type: string
                            infraManagementUser:
                              description: 'Optional: Infra management user is the
                                user that will be used for everything except the cloud
                                provider functionality, which will still use the credentials
                                passed in via the Kubermatic dashboard/API.'
                              properties:
                                password:
                                  type: string
                                username:
                                  type: string
                              type: object
                            ipv6Enabled:
                              description: 'Optional: defines if the IPv6 is enabled
                                for the datacenter'
                              type: boolean
                            rootPath:
                              description: 'Optional: The root path for cluster specific
                                VM folders. Each cluster gets its own folder below
                                the root folder. Must be the FQDN (for example "/datacenter-1/vm/all-kubermatic-vms-in-here")
                                and defaults to the root VM folder: "/datacenter-1/vm"'
                              type: string
                            storagePolicy:
                              description: The name of the storage policy to use for
                                the storage class created in the user cluster.
                              type: string
                            templates:
                              additionalProperties:
                                type: string
                              description: 'A list of VM templates to use for a given
                                operating system. You must define at least one template.
                                See: https://github.com/kubermatic/machine-controller/blob/master/docs/vsphere.md#template-vms-preparation'
                              type: object
                          required:
                          - cluster
                          - datacenter
                          - datastore
                          - endpoint
                          - templates
                          type: object
                      type: object
                  required:
                  - spec
                  type: object
                description: Datacenters contains a map of the possible datacenters
                  (DCs) in this seed. Each DC must have a globally unique identifier
                  (i.e. names must be unique across all seeds).
                type: object
              defaultClusterTemplate:
                description: DefaultClusterTemplate is the name of a cluster template
                  of scope "seed" that is used to default all new created clusters
                type: string
              defaultComponentSettings:
                description: 'DefaultComponentSettings are default values to set for
                  newly created clusters. Deprecated: Use DefaultClusterTemplate instead.'
                properties:
                  apiserver:
                    description: Apiserver configures kube-apiserver settings.
                    properties:
                      endpointReconcilingDisabled:
                        type: boolean
                      nodePortRange:
                        type: string
                      replicas:
                        format: int32
                        type: integer
                      resources:
                        description: ResourceRequirements describes the compute resource
                          requirements.
                        properties:
                          claims:
                            description: "Claims lists the names of resources, defined
                              in spec.resourceClaims, that are used by this container.
                              \n This is an alpha field and requires enabling the
                              DynamicResourceAllocation feature gate. \n This field
                              is immutable. It can only be set for containers."
                            items:
                              description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                              properties:
                                name:
                                  description: Name must match the name of one entry
                                    in pod.spec.resourceClaims of the Pod where this
                                    field is used. It makes that resource available
                                    inside a container.
                                  type: string
                              required:
                              - name
                              type: object
                            type: array
                            x-kubernetes-list-map-keys:
                            - name
                            x-kubernetes-list-type: map
                          limits:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Limits describes the maximum amount of compute
                              resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                          requests:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Requests describes the minimum amount of
                              compute resources required. If Requests is omitted for
                              a container, it defaults to Limits if that is explicitly
                              specified, otherwise to an implementation-defined value.
                              Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                        type: object
                      tolerations:
                        items:
                          description: The pod this Toleration is attached to tolerates
                            any taint that matches the triple <key,value,effect> using
                            the matching operator <operator>.
                          properties:
                            effect:
                              description: Effect indicates the taint effect to match.
                                Empty means match all taint effects. When specified,
                                allowed values are NoSchedule, PreferNoSchedule and
                                NoExecute.
                              type: string
                            key:
                              description: Key is the taint key that the toleration
                                applies to. Empty means match all taint keys. If the
                                key is empty, operator must be Exists; this combination
                                means to match all values and all keys.
                              type: string
                            operator:
                              description: Operator represents a key's relationship
                                to the value. Valid operators are Exists and Equal.
                                Defaults to Equal. Exists is equivalent to wildcard
                                for value, so that a pod can tolerate all taints of
                                a particular category.
                              type: string
                            tolerationSeconds:
                              description: TolerationSeconds represents the period
                                of time the toleration (which must be of effect NoExecute,
                                otherwise this field is ignored) tolerates the taint.
                                By default, it is not set, which means tolerate the
                                taint forever (do not evict). Zero and negative values
                                will be treated as 0 (evict immediately) by the system.
                              format: int64
                              type: integer
                            value:
                              description: Value is the taint value the toleration
                                matches to. If the operator is Exists, the value should
                                be empty, otherwise just a regular string.
                              type: string
                          type: object
                        type: array
                    type: object
                  controllerManager:
                    description: ControllerManager configures kube-controller-manager
                      settings.
                    properties:
                      leaderElection:
                        properties:
                          leaseDurationSeconds:
                            description: LeaseDurationSeconds is the duration in seconds
                              that non-leader candidates will wait to force acquire
                              leadership. This is measured against time of last observed
                              ack.
                            format: int32
                            type: integer
                          renewDeadlineSeconds:
                            description: RenewDeadlineSeconds is the duration in seconds
                              that the acting controlplane will retry refreshing leadership
                              before giving up.
                            format: int32
                            type: integer
                          retryPeriodSeconds:
                            description: RetryPeriodSeconds is the duration in seconds
                              the LeaderElector clients should wait between tries
                              of actions.
                            format: int32
                            type: integer
                        type: object
                      replicas:
                        format: int32
                        type: integer
                      resources:
                        description: ResourceRequirements describes the compute resource
                          requirements.
                        properties:
                          claims:
                            description: "Claims lists the names of resources, defined
                              in spec.resourceClaims, that are used by this container.
                              \n This is an alpha field and requires enabling the
                              DynamicResourceAllocation feature gate. \n This field
                              is immutable. It can only be set for containers."
                            items:
                              description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                              properties:
                                name:
                                  description: Name must match the name of one entry
                                    in pod.spec.resourceClaims of the Pod where this
                                    field is used. It makes that resource available
                                    inside a container.
                                  type: string
                              required:
                              - name
                              type: object
                            type: array
                            x-kubernetes-list-map-keys:
                            - name
                            x-kubernetes-list-type: map
                          limits:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Limits describes the maximum amount of compute
                              resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                          requests:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Requests describes the minimum amount of
                              compute resources required. If Requests is omitted for
                              a container, it defaults to Limits if that is explicitly
                              specified, otherwise to an implementation-defined value.
                              Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                        type: object
                      tolerations:
                        items:
                          description: The pod this Toleration is attached to tolerates
                            any taint that matches the triple <key,value,effect> using
                            the matching operator <operator>.
                          properties:
                            effect:
                              description: Effect indicates the taint effect to match.
                                Empty means match all taint effects. When specified,
                                allowed values are NoSchedule, PreferNoSchedule and
                                NoExecute.
                              type: string
                            key:
                              description: Key is the taint key that the toleration
                                applies to. Empty means match all taint keys. If the
                                key is empty, operator must be Exists; this combination
                                means to match all values and all keys.
                              type: string
                            operator:
                              description: Operator represents a key's relationship
                                to the value. Valid operators are Exists and Equal.
                                Defaults to Equal. Exists is equivalent to wildcard
                                for value, so that a pod can tolerate all taints of
                                a particular category.
                              type: string
                            tolerationSeconds:
                              description: TolerationSeconds represents the period
                                of time the toleration (which must be of effect NoExecute,
                                otherwise this field is ignored) tolerates the taint.
                                By default, it is not set, which means tolerate the
                                taint forever (do not evict). Zero and negative values
                                will be treated as 0 (evict immediately) by the system.
                              format: int64
                              type: integer
                            value:
                              description: Value is the taint value the toleration
                                matches to. If the operator is Exists, the value should
                                be empty, otherwise just a regular string.
                              type: string
                          type: object
                        type: array
                    type: object
                  etcd:
                    description: Etcd configures the etcd ring used to store Kubernetes
                      data.
                    properties:
                      clusterSize:
                        description: ClusterSize is the number of replicas created
                          for etcd. This should be an odd number to guarantee consensus,
                          e.g. 3, 5 or 7.
                        format: int32
                        type: integer
                      diskSize:
                        anyOf:
                        - type: integer
                        - type: string
                        description: DiskSize is the volume size used when creating
                          persistent storage from the configured StorageClass. This
                          is inherited from KubermaticConfiguration if not set. Defaults
                          to 5Gi.
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                      hostAntiAffinity:
                        description: HostAntiAffinity allows to enforce a certain
                          type of host anti-affinity on etcd pods. Options are "preferred"
                          (default) and "required". Please note that enforcing anti-affinity
                          via "required" can mean that pods are never scheduled.
                        enum:
                        - ""
                        - preferred
                        - required
                        type: string
                      resources:
                        description: Resources allows to override the resource requirements
                          for etcd Pods.
                        properties:
                          claims:
                            description: "Claims lists the names of resources, defined
                              in spec.resourceClaims, that are used by this container.
                              \n This is an alpha field and requires enabling the
                              DynamicResourceAllocation feature gate. \n This field
                              is immutable. It can only be set for containers."
                            items:
                              description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                              properties:
                                name:
                                  description: Name must match the name of one entry
                                    in pod.spec.resourceClaims of the Pod where this
                                    field is used. It makes that resource available
                                    inside a container.
                                  type: string
                              required:
                              - name
                              type: object
                            type: array
                            x-kubernetes-list-map-keys:
                            - name
                            x-kubernetes-list-type: map
                          limits:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Limits describes the maximum amount of compute
                              resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                          requests:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Requests describes the minimum amount of
                              compute resources required. If Requests is omitted for
                              a container, it defaults to Limits if that is explicitly
                              specified, otherwise to an implementation-defined value.
                              Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                        type: object
                      storageClass:
                        description: StorageClass is the Kubernetes StorageClass used
                          for persistent storage which stores the etcd WAL and other
                          data persisted across restarts. Defaults to `kubermatic-fast`
                          (the global default).
                        type: string
                      tolerations:
                        description: Tolerations allows to override the scheduling
                          tolerations for etcd Pods.
                        items:
                          description: The pod this Toleration is attached to tolerates
                            any taint that matches the triple <key,value,effect> using
                            the matching operator <operator>.
                          properties:
                            effect:
                              description: Effect indicates the taint effect to match.
                                Empty means match all taint effects. When specified,
                                allowed values are NoSchedule, PreferNoSchedule and
                                NoExecute.
                              type: string
                            key:
                              description: Key is the taint key that the toleration
                                applies to. Empty means match all taint keys. If the
                                key is empty, operator must be Exists; this combination
                                means to match all values and all keys.
                              type: string
                            operator:
                              description: Operator represents a key's relationship
                                to the value. Valid operators are Exists and Equal.
                                Defaults to Equal. Exists is equivalent to wildcard
                                for value, so that a pod can tolerate all taints of
                                a particular category.
                              type: string
                            tolerationSeconds:
                              description: TolerationSeconds represents the period
                                of time the toleration (which must be of effect NoExecute,
                                otherwise this field is ignored) tolerates the taint.
                                By default, it is not set, which means tolerate the
                                taint forever (do not evict). Zero and negative values
                                will be treated as 0 (evict immediately) by the system.
                              format: int64
                              type: integer
                            value:
                              description: Value is the taint value the toleration
                                matches to. If the operator is Exists, the value should
                                be empty, otherwise just a regular string.
                              type: string
                          type: object
                        type: array
                      zoneAntiAffinity:
                        description: ZoneAntiAffinity allows to enforce a certain
                          type of availability zone anti-affinity on etcd pods. Options
                          are "preferred" (default) and "required". Please note that
                          enforcing anti-affinity via "required" can mean that pods
                          are never scheduled.
                        enum:
                        - ""
                        - preferred
                        - required
                        type: string
                    type: object
                  konnectivityProxy:
                    description: KonnectivityProxy configures konnectivity-server
                      and konnectivity-agent components.
                    properties:
                      keepaliveTime:
                        description: KeepaliveTime represents a duration of time to
                          check if the transport is still alive. The option is propagated
                          to agents and server. Defaults to 1m.
                        type: string
                      resources:
                        description: Resources configure limits/requests for Konnectivity
                          components.
                        properties:
                          claims:
                            description: "Claims lists the names of resources, defined
                              in spec.resourceClaims, that are used by this container.
                              \n This is an alpha field and requires enabling the
                              DynamicResourceAllocation feature gate. \n This field
                              is immutable. It can only be set for containers."
                            items:
                              description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                              properties:
                                name:
                                  description: Name must match the name of one entry
                                    in pod.spec.resourceClaims of the Pod where this
                                    field is used. It makes that resource available
                                    inside a container.
                                  type: string
                              required:
                              - name
                              type: object
                            type: array
                            x-kubernetes-list-map-keys:
                            - name
                            x-kubernetes-list-type: map
                          limits:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Limits describes the maximum amount of compute
                              resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                          requests:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Requests describes the minimum amount of
                              compute resources required. If Requests is omitted for
                              a container, it defaults to Limits if that is explicitly
                              specified, otherwise to an implementation-defined value.
                              Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                        type: object
                    type: object
                  nodePortProxyEnvoy:
                    description: NodePortProxyEnvoy configures the per-cluster nodeport-proxy-envoy
                      that is deployed if the `LoadBalancer` expose strategy is used.
                      This is not effective if a different expose strategy is configured.
                    properties:
                      dockerRepository:
                        description: DockerRepository is the repository containing
                          the component's image.
                        type: string
                      resources:
                        description: Resources describes the requested and maximum
                          allowed CPU/memory usage.
                        properties:
                          claims:
                            description: "Claims lists the names of resources, defined
                              in spec.resourceClaims, that are used by this container.
                              \n This is an alpha field and requires enabling the
                              DynamicResourceAllocation feature gate. \n This field
                              is immutable. It can only be set for containers."
                            items:
                              description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                              properties:
                                name:
                                  description: Name must match the name of one entry
                                    in pod.spec.resourceClaims of the Pod where this
                                    field is used. It makes that resource available
                                    inside a container.
                                  type: string
                              required:
                              - name
                              type: object
                            type: array
                            x-kubernetes-list-map-keys:
                            - name
                            x-kubernetes-list-type: map
                          limits:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Limits describes the maximum amount of compute
                              resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                          requests:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Requests describes the minimum amount of
                              compute resources required. If Requests is omitted for
                              a container, it defaults to Limits if that is explicitly
                              specified, otherwise to an implementation-defined value.
                              Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                        type: object
                    type: object
                  prometheus:
                    description: Prometheus configures the Prometheus instance deployed
                      into the cluster control plane.
                    properties:
                      resources:
                        description: ResourceRequirements describes the compute resource
                          requirements.
                        properties:
                          claims:
                            description: "Claims lists the names of resources, defined
                              in spec.resourceClaims, that are used by this container.
                              \n This is an alpha field and requires enabling the
                              DynamicResourceAllocation feature gate. \n This field
                              is immutable. It can only be set for containers."
                            items:
                              description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                              properties:
                                name:
                                  description: Name must match the name of one entry
                                    in pod.spec.resourceClaims of the Pod where this
                                    field is used. It makes that resource available
                                    inside a container.
                                  type: string
                              required:
                              - name
                              type: object
                            type: array
                            x-kubernetes-list-map-keys:
                            - name
                            x-kubernetes-list-type: map
                          limits:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Limits describes the maximum amount of compute
                              resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                          requests:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Requests describes the minimum amount of
                              compute resources required. If Requests is omitted for
                              a container, it defaults to Limits if that is explicitly
                              specified, otherwise to an implementation-defined value.
                              Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                        type: object
                    type: object
                  scheduler:
                    description: Scheduler configures kube-scheduler settings.
                    properties:
                      leaderElection:
                        properties:
                          leaseDurationSeconds:
                            description: LeaseDurationSeconds is the duration in seconds
                              that non-leader candidates will wait to force acquire
                              leadership. This is measured against time of last observed
                              ack.
                            format: int32
                            type: integer
                          renewDeadlineSeconds:
                            description: RenewDeadlineSeconds is the duration in seconds
                              that the acting controlplane will retry refreshing leadership
                              before giving up.
                            format: int32
                            type: integer
                          retryPeriodSeconds:
                            description: RetryPeriodSeconds is the duration in seconds
                              the LeaderElector clients should wait between tries
                              of actions.
                            format: int32
                            type: integer
                        type: object
                      replicas:
                        format: int32
                        type: integer
                      resources:
                        description: ResourceRequirements describes the compute resource
                          requirements.
                        properties:
                          claims:
                            description: "Claims lists the names of resources, defined
                              in spec.resourceClaims, that are used by this container.
                              \n This is an alpha field and requires enabling the
                              DynamicResourceAllocation feature gate. \n This field
                              is immutable. It can only be set for containers."
                            items:
                              description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                              properties:
                                name:
                                  description: Name must match the name of one entry
                                    in pod.spec.resourceClaims of the Pod where this
                                    field is used. It makes that resource available
                                    inside a container.
                                  type: string
                              required:
                              - name
                              type: object
                            type: array
                            x-kubernetes-list-map-keys:
                            - name
                            x-kubernetes-list-type: map
                          limits:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Limits describes the maximum amount of compute
                              resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                          requests:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Requests describes the minimum amount of
                              compute resources required. If Requests is omitted for
                              a container, it defaults to Limits if that is explicitly
                              specified, otherwise to an implementation-defined value.
                              Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                        type: object
                      tolerations:
                        items:
                          description: The pod this Toleration is attached to tolerates
                            any taint that matches the triple <key,value,effect> using
                            the matching operator <operator>.
                          properties:
                            effect:
                              description: Effect indicates the taint effect to match.
                                Empty means match all taint effects. When specified,
                                allowed values are NoSchedule, PreferNoSchedule and
                                NoExecute.
                              type: string
                            key:
                              description: Key is the taint key that the toleration
                                applies to. Empty means match all taint keys. If the
                                key is empty, operator must be Exists; this combination
                                means to match all values and all keys.
                              type: string
                            operator:
                              description: Operator represents a key's relationship
                                to the value. Valid operators are Exists and Equal.
                                Defaults to Equal. Exists is equivalent to wildcard
                                for value, so that a pod can tolerate all taints of
                                a particular category.
                              type: string
                            tolerationSeconds:
                              description: TolerationSeconds represents the period
                                of time the toleration (which must be of effect NoExecute,
                                otherwise this field is ignored) tolerates the taint.
                                By default, it is not set, which means tolerate the
                                taint forever (do not evict). Zero and negative values
                                will be treated as 0 (evict immediately) by the system.
                              format: int64
                              type: integer
                            value:
                              description: Value is the taint value the toleration
                                matches to. If the operator is Exists, the value should
                                be empty, otherwise just a regular string.
                              type: string
                          type: object
                        type: array
                    type: object
                  userClusterController:
                    description: UserClusterController configures the KKP usercluster-controller
                      deployed as part of the cluster control plane.
                    properties:
                      leaderElection:
                        properties:
                          leaseDurationSeconds:
                            description: LeaseDurationSeconds is the duration in seconds
                              that non-leader candidates will wait to force acquire
                              leadership. This is measured against time of last observed
                              ack.
                            format: int32
                            type: integer
                          renewDeadlineSeconds:
                            description: RenewDeadlineSeconds is the duration in seconds
                              that the acting controlplane will retry refreshing leadership
                              before giving up.
                            format: int32
                            type: integer
                          retryPeriodSeconds:
                            description: RetryPeriodSeconds is the duration in seconds
                              the LeaderElector clients should wait between tries
                              of actions.
                            format: int32
                            type: integer
                        type: object
                      replicas:
                        format: int32
                        type: integer
                      resources:
                        description: ResourceRequirements describes the compute resource
                          requirements.
                        properties:
                          claims:
                            description: "Claims lists the names of resources, defined
                              in spec.resourceClaims, that are used by this container.
                              \n This is an alpha field and requires enabling the
                              DynamicResourceAllocation feature gate. \n This field
                              is immutable. It can only be set for containers."
                            items:
                              description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                              properties:
                                name:
                                  description: Name must match the name of one entry
                                    in pod.spec.resourceClaims of the Pod where this
                                    field is used. It makes that resource available
                                    inside a container.
                                  type: string
                              required:
                              - name
                              type: object
                            type: array
                            x-kubernetes-list-map-keys:
                            - name
                            x-kubernetes-list-type: map
                          limits:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Limits describes the maximum amount of compute
                              resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                          requests:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Requests describes the minimum amount of
                              compute resources required. If Requests is omitted for
                              a container, it defaults to Limits if that is explicitly
                              specified, otherwise to an implementation-defined value.
                              Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                        type: object
                      tolerations:
                        items:
                          description: The pod this Toleration is attached to tolerates
                            any taint that matches the triple <key,value,effect> using
                            the matching operator <operator>.
                          properties:
                            effect:
                              description: Effect indicates the taint effect to match.
                                Empty means match all taint effects. When specified,
                                allowed values are NoSchedule, PreferNoSchedule and
                                NoExecute.
                              type: string
                            key:
                              description: Key is the taint key that the toleration
                                applies to. Empty means match all taint keys. If the
                                key is empty, operator must be Exists; this combination
                                means to match all values and all keys.
                              type: string
                            operator:
                              description: Operator represents a key's relationship
                                to the value. Valid operators are Exists and Equal.
                                Defaults to Equal. Exists is equivalent to wildcard
                                for value, so that a pod can tolerate all taints of
                                a particular category.
                              type: string
                            tolerationSeconds:
                              description: TolerationSeconds represents the period
                                of time the toleration (which must be of effect NoExecute,
                                otherwise this field is ignored) tolerates the taint.
                                By default, it is not set, which means tolerate the
                                taint forever (do not evict). Zero and negative values
                                will be treated as 0 (evict immediately) by the system.
                              format: int64
                              type: integer
                            value:
                              description: Value is the taint value the toleration
                                matches to. If the operator is Exists, the value should
                                be empty, otherwise just a regular string.
                              type: string
                          type: object
                        type: array
                    type: object
                required:
                - apiserver
                - controllerManager
                - etcd
                - nodePortProxyEnvoy
                - prometheus
                - scheduler
                type: object
              etcdBackupRestore:
                description: EtcdBackupRestore holds the configuration of the automatic
                  etcd backup restores for the Seed; if this is set, the new backup/restore
                  controllers are enabled for this Seed.
                properties:
                  defaultDestination:
                    description: DefaultDestination marks the default destination
                      that will be used for the default etcd backup config which is
                      created for every user cluster. Has to correspond to a destination
                      in Destinations. If removed, it removes the related default
                      etcd backup configs.
                    maxLength: 63
                    pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                    type: string
                  destinations:
                    additionalProperties:
                      description: BackupDestination defines the bucket name and endpoint
                        as a backup destination, and holds reference to the credentials
                        secret.
                      properties:
                        bucketName:
                          description: BucketName is the bucket name to use for backup
                            and restore.
                          type: string
                        credentials:
                          description: Credentials hold the ref to the secret with
                            backup credentials
                          properties:
                            name:
                              description: name is unique within a namespace to reference
                                a secret resource.
                              type: string
                            namespace:
                              description: namespace defines the space within which
                                the secret name must be unique.
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        endpoint:
                          description: Endpoint is the API endpoint to use for backup
                            and restore.
                          type: string
                      required:
                      - bucketName
                      - endpoint
                      type: object
                    description: Destinations stores all the possible destinations
                      where the backups for the Seed can be stored. If not empty,
                      it enables automatic backup and restore for the seed.
                    type: object
                type: object
              exposeStrategy:
                description: 'Optional: ExposeStrategy explicitly sets the expose
                  strategy for this seed cluster, if not set, the default provided
                  by the master is used.'
                enum:
                - NodePort
                - LoadBalancer
                - Tunneling
                type: string
              kubeconfig:
                description: A reference to the Kubeconfig of this cluster. The Kubeconfig
                  must have cluster-admin privileges. This field is mandatory for
                  every seed, even if there are no datacenters defined yet.
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: 'If referring to a piece of an object instead of
                      an entire object, this string should contain a valid JSON/Go
                      field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within
                      a pod, this would take on a value like: "spec.containers{name}"
                      (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]"
                      (container with index 2 in this pod). This syntax is chosen
                      only to have some well-defined way of referencing a part of
                      an object. TODO: this design is not final and this field is
                      subject to change in the future.'
                    type: string
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                  resourceVersion:
                    description: 'Specific resourceVersion to which this reference
                      is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              kubelb:
                description: KubeLB holds the configuration for the kubeLB at the
                  Seed level. This component is responsible for managing load balancers.
                  Only available in Enterprise Edition.
                properties:
                  kubeconfig:
                    description: Kubeconfig is reference to the Kubeconfig for the
                      kubeLB management cluster.
                    properties:
                      apiVersion:
                        description: API version of the referent.
                        type: string
                      fieldPath:
                        description: 'If referring to a piece of an object instead
                          of an entire object, this string should contain a valid
                          JSON/Go field access statement, such as desiredState.manifest.containers[2].
                          For example, if the object reference is to a container within
                          a pod, this would take on a value like: "spec.containers{name}"
                          (where "name" refers to the name of the container that triggered
                          the event) or if no container name is specified "spec.containers[2]"
                          (container with index 2 in this pod). This syntax is chosen
                          only to have some well-defined way of referencing a part
                          of an object. TODO: this design is not final and this field
                          is subject to change in the future.'
                        type: string
                      kind:
                        description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                        type: string
                      namespace:
                        description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                        type: string
                      resourceVersion:
                        description: 'Specific resourceVersion to which this reference
                          is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                        type: string
                      uid:
                        description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                type: object
              location:
                description: 'Optional: Detailed location of the cluster, like "Hamburg"
                  or "Datacenter 7". For informational purposes in the Kubermatic
                  dashboard only.'
                type: string
              metering:
                description: Metering configures the metering tool on user clusters
                  across the seed.
                properties:
                  enabled:
                    type: boolean
                  reports:
                    additionalProperties:
                      properties:
                        interval:
                          default: 7
                          description: Interval defines the number of days consulted
                            in the metering report. Ignored when `Monthly` is set
                            to true
                          format: int32
                          minimum: 1
                          type: integer
                        monthly:
                          description: Monthly creates a report for the previous month.
                          type: boolean
                        retention:
                          description: Retention defines a number of days after which
                            reports are queued for removal. If not set, reports are
                            kept forever. Please note that this functionality works
                            only for object storage that supports an object lifecycle
                            management mechanism.
                          format: int32
                          minimum: 1
                          type: integer
                        schedule:
                          default: 0 1 * * 6
                          description: Schedule in Cron format, see https://en.wikipedia.org/wiki/Cron.
                            Please take a note that Schedule is responsible only for
                            setting the time when a report generation mechanism kicks
                            off. The Interval MUST be set independently.
                          type: string
                        type:
                          default:
                          - cluster
                          - namespace
                          description: Types of reports to generate. Available report
                            types are cluster and namespace. By default, all types
                            of reports are generated.
                          items:
                            type: string
                          type: array
                      type: object
                    default:
                      weekly:
                        interval: 7
                        schedule: 0 1 * * 6
                    description: ReportConfigurations is a map of report configuration
                      definitions.
                    type: object
                  storageClassName:
                    description: StorageClassName is the name of the storage class
                      that the metering prometheus instance uses to store metric data
                      for reporting.
                    type: string
                  storageSize:
                    description: StorageSize is the size of the storage class. Default
                      value is 100Gi.
                    type: string
                required:
                - enabled
                - storageClassName
                - storageSize
                type: object
              mla:
                description: 'Optional: MLA allows configuring seed level MLA (Monitoring,
                  Logging & Alerting) stack settings.'
                properties:
                  userClusterMLAEnabled:
                    description: 'Optional: UserClusterMLAEnabled controls whether
                      the user cluster MLA (Monitoring, Logging & Alerting) stack
                      is enabled in the seed.'
                    type: boolean
                type: object
              nodeportProxy:
                description: NodeportProxy can be used to configure the NodePort proxy
                  service that is responsible for making user-cluster control planes
                  accessible from the outside.
                properties:
                  annotations:
                    additionalProperties:
                      type: string
                    description: 'Annotations are used to further tweak the LoadBalancer
                      integration with the cloud provider where the seed cluster is
                      running. Deprecated: Use .envoy.loadBalancerService.annotations
                      instead.'
                    type: object
                  disable:
                    description: Disable will prevent the Kubermatic Operator from
                      creating a nodeport-proxy setup on the seed cluster. This should
                      only be used if a suitable replacement is installed (like the
                      nodeport-proxy Helm chart).
                    type: boolean
                  envoy:
                    description: Envoy configures the Envoy application itself.
                    properties:
                      dockerRepository:
                        description: DockerRepository is the repository containing
                          the component's image.
                        type: string
                      loadBalancerService:
                        properties:
                          annotations:
                            additionalProperties:
                              type: string
                            description: Annotations are used to further tweak the
                              LoadBalancer integration with the cloud provider.
                            type: object
                          sourceRanges:
                            description: 'SourceRanges will restrict loadbalancer
                              service to IP ranges specified using CIDR notation like
                              172.25.0.0/16. This field will be ignored if the cloud-provider
                              does not support the feature. More info: https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/'
                            items:
                              pattern: ^((\d{1,3}\.){3}\d{1,3}\/([0-9]|[1-2][0-9]|3[0-2]))$
                              type: string
                            type: array
                        type: object
                      resources:
                        description: Resources describes the requested and maximum
                          allowed CPU/memory usage.
                        properties:
                          claims:
                            description: "Claims lists the names of resources, defined
                              in spec.resourceClaims, that are used by this container.
                              \n This is an alpha field and requires enabling the
                              DynamicResourceAllocation feature gate. \n This field
                              is immutable. It can only be set for containers."
                            items:
                              description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                              properties:
                                name:
                                  description: Name must match the name of one entry
                                    in pod.spec.resourceClaims of the Pod where this
                                    field is used. It makes that resource available
                                    inside a container.
                                  type: string
                              required:
                              - name
                              type: object
                            type: array
                            x-kubernetes-list-map-keys:
                            - name
                            x-kubernetes-list-type: map
                          limits:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Limits describes the maximum amount of compute
                              resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                          requests:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Requests describes the minimum amount of
                              compute resources required. If Requests is omitted for
                              a container, it defaults to Limits if that is explicitly
                              specified, otherwise to an implementation-defined value.
                              Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                        type: object
                    type: object
                  envoyManager:
                    description: EnvoyManager configures the Kubermatic-internal Envoy
                      manager.
                    properties:
                      dockerRepository:
                        description: DockerRepository is the repository containing
                          the component's image.
                        type: string
                      resources:
                        description: Resources describes the requested and maximum
                          allowed CPU/memory usage.
                        properties:
                          claims:
                            description: "Claims lists the names of resources, defined
                              in spec.resourceClaims, that are used by this container.
                              \n This is an alpha field and requires enabling the
                              DynamicResourceAllocation feature gate. \n This field
                              is immutable. It can only be set for containers."
                            items:
                              description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                              properties:
                                name:
                                  description: Name must match the name of one entry
                                    in pod.spec.resourceClaims of the Pod where this
                                    field is used. It makes that resource available
                                    inside a container.
                                  type: string
                              required:
                              - name
                              type: object
                            type: array
                            x-kubernetes-list-map-keys:
                            - name
                            x-kubernetes-list-type: map
                          limits:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Limits describes the maximum amount of compute
                              resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                          requests:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Requests describes the minimum amount of
                              compute resources required. If Requests is omitted for
                              a container, it defaults to Limits if that is explicitly
                              specified, otherwise to an implementation-defined value.
                              Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                        type: object
                    type: object
                  ipFamilies:
                    description: IPFamilies configures the IP families to use for
                      the LoadBalancer service.
                    items:
                      description: IPFamily represents the IP Family (IPv4 or IPv6).
                        This type is used to express the family of an IP expressed
                        by a type (e.g. service.spec.ipFamilies).
                      type: string
                    type: array
                  ipFamilyPolicy:
                    description: IPFamilyPolicy configures the IP family policy for
                      the LoadBalancer service.
                    type: string
                  updater:
                    description: Updater configures the component responsible for
                      updating the LoadBalancer service.
                    properties:
                      dockerRepository:
                        description: DockerRepository is the repository containing
                          the component's image.
                        type: string
                      resources:
                        description: Resources describes the requested and maximum
                          allowed CPU/memory usage.
                        properties:
                          claims:
                            description: "Claims lists the names of resources, defined
                              in spec.resourceClaims, that are used by this container.
                              \n This is an alpha field and requires enabling the
                              DynamicResourceAllocation feature gate. \n This field
                              is immutable. It can only be set for containers."
                            items:
                              description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                              properties:
                                name:
                                  description: Name must match the name of one entry
                                    in pod.spec.resourceClaims of the Pod where this
                                    field is used. It makes that resource available
                                    inside a container.
                                  type: string
                              required:
                              - name
                              type: object
                            type: array
                            x-kubernetes-list-map-keys:
                            - name
                            x-kubernetes-list-type: map
                          limits:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Limits describes the maximum amount of compute
                              resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                          requests:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Requests describes the minimum amount of
                              compute resources required. If Requests is omitted for
                              a container, it defaults to Limits if that is explicitly
                              specified, otherwise to an implementation-defined value.
                              Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                        type: object
                    type: object
                type: object
              oidcProviderConfiguration:
                description: OIDCProviderConfiguration allows to configure OIDC provider
                  at the Seed level.
                properties:
                  cookieHashKey:
                    description: 'Optional: CookieHashKey is required, used to authenticate
                      the cookie value using HMAC. It is recommended to use a key
                      with 32 or 64 bytes. If not set, configuration is inherited
                      from the default OIDC provider.'
                    type: string
                  cookieSecureMode:
                    description: 'Optional: CookieSecureMode if true then cookie received
                      only with HTTPS otherwise with HTTP. If not set, configuration
                      is inherited from the default OIDC provider.'
                    type: boolean
                  issuerClientID:
                    description: IssuerClientID is the application's ID.
                    type: string
                  issuerClientSecret:
                    description: IssuerClientSecret is the application's secret.
                    type: string
                  issuerURL:
                    description: URL of the provider which allows the API server to
                      discover public signing keys.
                    type: string
                  offlineAccessAsScope:
                    description: 'Optional:  OfflineAccessAsScope if true then "offline_access"
                      scope will be used otherwise ''access_type=offline" query param
                      will be passed. If not set, configuration is inherited from
                      the default OIDC provider.'
                    type: boolean
                  skipTLSVerify:
                    description: 'Optional: SkipTLSVerify skip TLS verification for
                      the token issuer. If not set, configuration is inherited from
                      the default OIDC provider.'
                    type: boolean
                required:
                - issuerClientID
                - issuerClientSecret
                - issuerURL
                type: object
              proxySettings:
                description: 'Optional: ProxySettings can be used to configure HTTP
                  proxy settings on the worker nodes in user clusters. However, proxy
                  settings on nodes take precedence.'
                properties:
                  httpProxy:
                    description: 'Optional: If set, this proxy will be configured
                      for both HTTP and HTTPS.'
                    type: string
                  noProxy:
                    description: 'Optional: If set this will be set as NO_PROXY environment
                      variable on the node; The value must be a comma-separated list
                      of domains for which no proxy should be used, e.g. "*.example.com,internal.dev".
                      Note that the in-cluster apiserver URL will be automatically
                      prepended to this value.'
                    type: string
                type: object
              seedDNSOverwrite:
                description: 'Optional: This can be used to override the DNS name
                  used for this seed. By default the seed name is used.'
                type: string
            required:
            - kubeconfig
            type: object
          status:
            description: Status holds the runtime information of the Seed cluster.
            properties:
              clusters:
                default: 0
                description: Clusters is the total number of user clusters that exist
                  on this seed.
                minimum: 0
                type: integer
              conditions:
                additionalProperties:
                  properties:
                    lastHeartbeatTime:
                      description: Last time we got an update on a given condition.
                      format: date-time
                      type: string
                    lastTransitionTime:
                      description: Last time the condition transit from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: Human readable message indicating details about
                        last transition.
                      type: string
                    reason:
                      description: (brief) reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                  required:
                  - lastHeartbeatTime
                  - status
                  type: object
                description: Conditions contains conditions the seed is in, its primary
                  use case is status signaling between controllers or between controllers
                  and the API.
                type: object
              phase:
                description: Phase contains a human readable text to indicate the
                  seed cluster status. No logic should be tied to this field, as its
                  content can change in between KKP releases.
                enum:
                - ""
                - Healthy
                - Unhealthy
                - Invalid
                - Terminating
                - Paused
                type: string
              versions:
                description: Versions contains information regarding versions of components
                  in the cluster and the cluster itself.
                properties:
                  cluster:
                    description: Cluster is the Kubernetes version of the cluster's
                      control plane.
                    type: string
                  kubermatic:
                    description: Kubermatic is the version of the currently deployed
                      KKP components. Note that a permanent version skew between master
                      and seed is not supported and KKP setups should never run for
                      longer times with a skew between the clusters.
                    type: string
                type: object
            required:
            - clusters
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: kubermatic-operator/templates/crds.tpl
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    app.kubernetes.io/version: v2.24.5
    controller-gen.kubebuilder.io/version: v0.13.0
    helm.sh/resource-policy: keep
    kubermatic.k8c.io/location: master,seed
  labels:
    app.kubernetes.io/component: operator
    app.kubernetes.io/instance: my-kubermatic-operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubermatic-operator
    app.kubernetes.io/version: v2.24.5
    helm.sh/chart: kubermatic-operator-v2.24.5
  name: userprojectbindings.kubermatic.k8c.io
spec:
  group: kubermatic.k8c.io
  names:
    kind: UserProjectBinding
    listKind: UserProjectBindingList
    plural: userprojectbindings
    singular: userprojectbinding
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.projectID
      name: ProjectID
      type: string
    - jsonPath: .spec.group
      name: Group
      type: string
    - jsonPath: .spec.userEmail
      name: UserEmail
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1
    schema:
      openAPIV3Schema:
        description: UserProjectBinding specifies a binding between a user and a project
          This resource is used by the user management to manipulate members of the
          given project.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Spec describes a KKP user and project binding.
            properties:
              group:
                description: Group is the user's group, determining their permissions
                  within the project. Must be one of `owners`, `editors`, `viewers`
                  or `projectmanagers`.
                type: string
              projectID:
                description: ProjectID is the name of the target project.
                type: string
              userEmail:
                description: UserEmail is the email of the user that is bound to the
                  given project.
                type: string
            required:
            - group
            - projectID
            - userEmail
            type: object
        type: object
    served: true
    storage: true
    subresources: {}
---
# Source: kubermatic-operator/templates/crds.tpl
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    app.kubernetes.io/version: v2.24.5
    controller-gen.kubebuilder.io/version: v0.13.0
    helm.sh/resource-policy: keep
    kubermatic.k8c.io/location: master,seed
  labels:
    app.kubernetes.io/component: operator
    app.kubernetes.io/instance: my-kubermatic-operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubermatic-operator
    app.kubernetes.io/version: v2.24.5
    helm.sh/chart: kubermatic-operator-v2.24.5
  name: users.kubermatic.k8c.io
spec:
  group: kubermatic.k8c.io
  names:
    kind: User
    listKind: UserList
    plural: users
    singular: user
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.email
      name: Email
      type: string
    - jsonPath: .spec.name
      name: HumanReadableName
      type: string
    - jsonPath: .spec.admin
      name: Admin
      type: boolean
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1
    schema:
      openAPIV3Schema:
        description: User specifies a KKP user. Users can be either humans or KKP
          service accounts.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Spec describes a KKP user.
            properties:
              admin:
                default: false
                description: IsAdmin defines whether this user is an administrator
                  with additional permissions. Admins can for example see all projects
                  and clusters in the KKP dashboard.
                type: boolean
              email:
                description: Email is the email address of this user. Emails must
                  be globally unique across all KKP users.
                type: string
              groups:
                description: Groups holds the information to which groups the user
                  belongs to. Set automatically when logging in to the KKP API, and
                  used by the KKP API.
                items:
                  type: string
                type: array
              id:
                description: 'ID is an unused legacy field. Deprecated: do not set
                  this field anymore.'
                type: string
              invalidTokensReference:
                description: InvalidTokensReference is a reference to a Secret that
                  contains invalidated login tokens. The tokens are used to provide
                  a safe logout mechanism.
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: 'If referring to a piece of an object instead of
                      an entire object, this string should contain a valid JSON/Go
                      field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within
                      a pod, this would take on a value like: "spec.containers{name}"
                      (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]"
                      (container with index 2 in this pod). This syntax is chosen
                      only to have some well-defined way of referencing a part of
                      an object. TODO: this design is not final and this field is
                      subject to change in the future.'
                    type: string
                  key:
                    type: string
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                  resourceVersion:
                    description: 'Specific resourceVersion to which this reference
                      is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              name:
                description: Name is the full name of this user.
                type: string
              project:
                description: Project is the name of the project that this service
                  account user is tied to. This field is only applicable to service
                  accounts and regular users must not set this field.
                type: string
              settings:
                description: Settings contains both user-configurable and system-owned
                  configuration for the KKP dashboard.
                properties:
                  collapseSidenav:
                    type: boolean
                  displayAllProjectsForAdmin:
                    type: boolean
                  itemsPerPage:
                    type: integer
                  lastSeenChangelogVersion:
                    type: string
                  selectProjectTableView:
                    type: boolean
                  selectedProjectID:
                    type: string
                  selectedTheme:
                    type: string
                  useClustersView:
                    type: boolean
                type: object
            required:
            - admin
            - email
            - name
            type: object
          status:
            description: Status holds the information about the KKP user.
            properties:
              lastSeen:
                format: date-time
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: kubermatic-operator/templates/crds.tpl
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    app.kubernetes.io/version: v2.24.5
    controller-gen.kubebuilder.io/version: v0.13.0
    helm.sh/resource-policy: keep
    kubermatic.k8c.io/location: master,seed
  labels:
    app.kubernetes.io/component: operator
    app.kubernetes.io/instance: my-kubermatic-operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubermatic-operator
    app.kubernetes.io/version: v2.24.5
    helm.sh/chart: kubermatic-operator-v2.24.5
  name: usersshkeys.kubermatic.k8c.io
spec:
  group: kubermatic.k8c.io
  names:
    kind: UserSSHKey
    listKind: UserSSHKeyList
    plural: usersshkeys
    singular: usersshkey
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.name
      name: HumanReadableName
      type: string
    - jsonPath: .spec.owner
      name: Owner
      type: string
    - jsonPath: .spec.project
      name: Project
      type: string
    - jsonPath: .spec.fingerprint
      name: Fingerprint
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1
    schema:
      openAPIV3Schema:
        description: UserSSHKey specifies a users UserSSHKey.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              clusters:
                description: Clusters is the list of cluster names that this SSH key
                  is assigned to.
                items:
                  type: string
                type: array
              fingerprint:
                description: Fingerprint is calculated server-side based on the supplied
                  public key and doesn't need to be set by clients.
                type: string
              name:
                description: Name is the human readable name for this SSH key.
                type: string
              owner:
                description: 'Owner is the name of the User object that owns this
                  SSH key. Deprecated: This field is not used anymore.'
                type: string
              project:
                description: Project is the name of the Project object that this SSH
                  key belongs to. This field is immutable.
                type: string
              publicKey:
                description: PublicKey is the SSH public key.
                type: string
            required:
            - clusters
            - name
            - project
            - publicKey
            type: object
        type: object
    served: true
    storage: true
    subresources: {}
---
# Source: kubermatic-operator/templates/crds.tpl
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    app.kubernetes.io/version: v2.24.5
    controller-gen.kubebuilder.io/version: v0.9.2
    helm.sh/resource-policy: keep
    kubermatic.k8c.io/location: master,seed
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: operator
    app.kubernetes.io/instance: my-kubermatic-operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubermatic-operator
    app.kubernetes.io/version: v2.24.5
    helm.sh/chart: kubermatic-operator-v2.24.5
  name: customoperatingsystemprofiles.operatingsystemmanager.k8c.io
spec:
  group: operatingsystemmanager.k8c.io
  names:
    kind: CustomOperatingSystemProfile
    listKind: CustomOperatingSystemProfileList
    plural: customoperatingsystemprofiles
    shortNames:
    - cosp
    singular: customoperatingsystemprofile
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: OperatingSystemProfile is the object that represents the OperatingSystemProfile
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: OperatingSystemProfileSpec represents the operating system
              configuration spec.
            properties:
              bootstrapConfig:
                description: BootstrapConfig is used for initial configuration of
                  machine and to fetch the kubernetes secret that contains the provisioning
                  config.
                properties:
                  files:
                    description: Files is a list of files that should exist in the
                      instance
                    items:
                      description: File is a file that should get written to the host's
                        file system. The content can either be inlined or referenced
                        from a secret in the same namespace.
                      properties:
                        content:
                          description: Content describe the file's content.
                          properties:
                            inline:
                              description: Inline is a struct that contains information
                                about the inlined data.
                              properties:
                                data:
                                  description: Data is the file's data.
                                  type: string
                                encoding:
                                  description: Encoding is the file's encoding (e.g.
                                    base64).
                                  type: string
                              required:
                              - data
                              type: object
                          type: object
                        path:
                          description: Path is the path of the file system where the
                            file should get written to.
                          type: string
                        permissions:
                          default: 644
                          description: Permissions describes with which permissions
                            the file should get written to the file system. Should
                            be in decimal base and without any leading zeroes.
                          format: int32
                          type: integer
                      required:
                      - content
                      - path
                      type: object
                    type: array
                  modules:
                    description: CloudInitModules field contains the optional cloud-init
                      modules which are supported by OSM
                    properties:
                      bootcmd:
                        description: BootCMD module runs arbitrary commands very early
                          in the boot process, only slightly after a boothook would
                          run.
                        items:
                          type: string
                        type: array
                      rh_subscription:
                        additionalProperties:
                          type: string
                        description: RHSubscription registers a Red Hat system either
                          by username and password or activation and org
                        type: object
                      runcmd:
                        description: RunCMD Run arbitrary commands at a rc.local like
                          level with output to the console.
                        items:
                          type: string
                        type: array
                      yum_repo_dir:
                        description: 'YumRepoDir the repo parts directory where individual
                          yum repo config files will be written. Default: /etc/yum.repos.d'
                        type: string
                      yum_repos:
                        additionalProperties:
                          additionalProperties:
                            type: string
                          type: object
                        description: YumRepos adds yum repository configuration to
                          the system.
                        type: object
                    type: object
                  supportedContainerRuntimes:
                    description: SupportedContainerRuntimes represents the container
                      runtimes supported by the given OS
                    items:
                      description: ContainerRuntimeSpec aggregates information about
                        a specific container runtime
                      properties:
                        files:
                          description: Files to add to the main files list when the
                            containerRuntime is selected
                          items:
                            description: File is a file that should get written to
                              the host's file system. The content can either be inlined
                              or referenced from a secret in the same namespace.
                            properties:
                              content:
                                description: Content describe the file's content.
                                properties:
                                  inline:
                                    description: Inline is a struct that contains
                                      information about the inlined data.
                                    properties:
                                      data:
                                        description: Data is the file's data.
                                        type: string
                                      encoding:
                                        description: Encoding is the file's encoding
                                          (e.g. base64).
                                        type: string
                                    required:
                                    - data
                                    type: object
                                type: object
                              path:
                                description: Path is the path of the file system where
                                  the file should get written to.
                                type: string
                              permissions:
                                default: 644
                                description: Permissions describes with which permissions
                                  the file should get written to the file system.
                                  Should be in decimal base and without any leading
                                  zeroes.
                                format: int32
                                type: integer
                            required:
                            - content
                            - path
                            type: object
                          type: array
                        name:
                          description: Name of the Container runtime
                          enum:
                          - docker
                          - containerd
                          type: string
                        templates:
                          additionalProperties:
                            type: string
                          description: Templates to add to the available templates
                            when the containerRuntime is selected
                          type: object
                      required:
                      - files
                      - name
                      type: object
                    type: array
                  templates:
                    additionalProperties:
                      type: string
                    description: Templates to be included in units and files
                    type: object
                  units:
                    description: Units a list of the systemd unit files which will
                      run on the instance
                    items:
                      description: Unit is a systemd unit used for the operating system
                        config.
                      properties:
                        content:
                          description: Content is the unit's content.
                          type: string
                        dropIns:
                          description: DropIns is a list of drop-ins for this unit.
                          items:
                            description: DropIn is a drop-in configuration for a systemd
                              unit.
                            properties:
                              content:
                                description: Content is the content of the drop-in.
                                type: string
                              name:
                                description: Name is the name of the drop-in.
                                type: string
                            required:
                            - content
                            - name
                            type: object
                          type: array
                        enable:
                          description: Enable describes whether the unit is enabled
                            or not.
                          type: boolean
                        mask:
                          description: Mask describes whether the unit is masked or
                            not.
                          type: boolean
                        name:
                          description: Name is the name of a unit.
                          type: string
                      required:
                      - name
                      type: object
                    type: array
                type: object
              osName:
                description: 'OSType represent the operating system name e.g: ubuntu'
                enum:
                - flatcar
                - rhel
                - centos
                - ubuntu
                - amzn2
                - rockylinux
                type: string
              osVersion:
                description: OSVersion the version of the operating system
                type: string
              provisioningConfig:
                description: ProvisioningConfig is used for provisioning the worker
                  node.
                properties:
                  files:
                    description: Files is a list of files that should exist in the
                      instance
                    items:
                      description: File is a file that should get written to the host's
                        file system. The content can either be inlined or referenced
                        from a secret in the same namespace.
                      properties:
                        content:
                          description: Content describe the file's content.
                          properties:
                            inline:
                              description: Inline is a struct that contains information
                                about the inlined data.
                              properties:
                                data:
                                  description: Data is the file's data.
                                  type: string
                                encoding:
                                  description: Encoding is the file's encoding (e.g.
                                    base64).
                                  type: string
                              required:
                              - data
                              type: object
                          type: object
                        path:
                          description: Path is the path of the file system where the
                            file should get written to.
                          type: string
                        permissions:
                          default: 644
                          description: Permissions describes with which permissions
                            the file should get written to the file system. Should
                            be in decimal base and without any leading zeroes.
                          format: int32
                          type: integer
                      required:
                      - content
                      - path
                      type: object
                    type: array
                  modules:
                    description: CloudInitModules field contains the optional cloud-init
                      modules which are supported by OSM
                    properties:
                      bootcmd:
                        description: BootCMD module runs arbitrary commands very early
                          in the boot process, only slightly after a boothook would
                          run.
                        items:
                          type: string
                        type: array
                      rh_subscription:
                        additionalProperties:
                          type: string
                        description: RHSubscription registers a Red Hat system either
                          by username and password or activation and org
                        type: object
                      runcmd:
                        description: RunCMD Run arbitrary commands at a rc.local like
                          level with output to the console.
                        items:
                          type: string
                        type: array
                      yum_repo_dir:
                        description: 'YumRepoDir the repo parts directory where individual
                          yum repo config files will be written. Default: /etc/yum.repos.d'
                        type: string
                      yum_repos:
                        additionalProperties:
                          additionalProperties:
                            type: string
                          type: object
                        description: YumRepos adds yum repository configuration to
                          the system.
                        type: object
                    type: object
                  supportedContainerRuntimes:
                    description: SupportedContainerRuntimes represents the container
                      runtimes supported by the given OS
                    items:
                      description: ContainerRuntimeSpec aggregates information about
                        a specific container runtime
                      properties:
                        files:
                          description: Files to add to the main files list when the
                            containerRuntime is selected
                          items:
                            description: File is a file that should get written to
                              the host's file system. The content can either be inlined
                              or referenced from a secret in the same namespace.
                            properties:
                              content:
                                description: Content describe the file's content.
                                properties:
                                  inline:
                                    description: Inline is a struct that contains
                                      information about the inlined data.
                                    properties:
                                      data:
                                        description: Data is the file's data.
                                        type: string
                                      encoding:
                                        description: Encoding is the file's encoding
                                          (e.g. base64).
                                        type: string
                                    required:
                                    - data
                                    type: object
                                type: object
                              path:
                                description: Path is the path of the file system where
                                  the file should get written to.
                                type: string
                              permissions:
                                default: 644
                                description: Permissions describes with which permissions
                                  the file should get written to the file system.
                                  Should be in decimal base and without any leading
                                  zeroes.
                                format: int32
                                type: integer
                            required:
                            - content
                            - path
                            type: object
                          type: array
                        name:
                          description: Name of the Container runtime
                          enum:
                          - docker
                          - containerd
                          type: string
                        templates:
                          additionalProperties:
                            type: string
                          description: Templates to add to the available templates
                            when the containerRuntime is selected
                          type: object
                      required:
                      - files
                      - name
                      type: object
                    type: array
                  templates:
                    additionalProperties:
                      type: string
                    description: Templates to be included in units and files
                    type: object
                  units:
                    description: Units a list of the systemd unit files which will
                      run on the instance
                    items:
                      description: Unit is a systemd unit used for the operating system
                        config.
                      properties:
                        content:
                          description: Content is the unit's content.
                          type: string
                        dropIns:
                          description: DropIns is a list of drop-ins for this unit.
                          items:
                            description: DropIn is a drop-in configuration for a systemd
                              unit.
                            properties:
                              content:
                                description: Content is the content of the drop-in.
                                type: string
                              name:
                                description: Name is the name of the drop-in.
                                type: string
                            required:
                            - content
                            - name
                            type: object
                          type: array
                        enable:
                          description: Enable describes whether the unit is enabled
                            or not.
                          type: boolean
                        mask:
                          description: Mask describes whether the unit is masked or
                            not.
                          type: boolean
                        name:
                          description: Name is the name of a unit.
                          type: string
                      required:
                      - name
                      type: object
                    type: array
                type: object
              provisioningUtility:
                default: cloud-init
                description: ProvisioningUtility used for configuring the worker node.
                  Defaults to cloud-init.
                enum:
                - cloud-init
                - ignition
                type: string
              supportedCloudProviders:
                description: SupportedCloudProviders represent the cloud providers
                  that support the given operating system version
                items:
                  description: CloudProviderSpec contains the os/image reference for
                    a specific supported cloud provider
                  properties:
                    name:
                      description: Name represents the name of the supported cloud
                        provider
                      enum:
                      - aws
                      - azure
                      - digitalocean
                      - gce
                      - hetzner
                      - kubevirt
                      - linode
                      - nutanix
                      - openstack
                      - equinixmetal
                      - vsphere
                      - fake
                      - alibaba
                      - anexia
                      - scaleway
                      - baremetal
                      - external
                      - vmware-cloud-director
                      - opennebula
                      type: string
                    spec:
                      description: Spec represents the os/image reference in the supported
                        cloud provider
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                  required:
                  - name
                  type: object
                type: array
              version:
                description: Version is the version of the operating System Profile
                pattern: v(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(?:-((?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?$
                type: string
            required:
            - bootstrapConfig
            - osName
            - osVersion
            - provisioningConfig
            - supportedCloudProviders
            - version
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
---
# Source: kubermatic-operator/templates/crds.tpl
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    api-approved.kubernetes.io: https://github.com/kubernetes/kubernetes/pull/63797
    controller-gen.kubebuilder.io/version: v0.4.0
    helm.sh/resource-policy: keep
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: operator
    app.kubernetes.io/instance: my-kubermatic-operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubermatic-operator
    app.kubernetes.io/version: v2.24.5
    helm.sh/chart: kubermatic-operator-v2.24.5
  name: verticalpodautoscalercheckpoints.autoscaling.k8s.io
spec:
  group: autoscaling.k8s.io
  names:
    kind: VerticalPodAutoscalerCheckpoint
    listKind: VerticalPodAutoscalerCheckpointList
    plural: verticalpodautoscalercheckpoints
    shortNames:
    - vpacheckpoint
    singular: verticalpodautoscalercheckpoint
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: VerticalPodAutoscalerCheckpoint is the checkpoint of the internal
          state of VPA that is used for recovery after recommender's restart.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: 'Specification of the checkpoint. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status.'
            properties:
              containerName:
                description: Name of the checkpointed container.
                type: string
              vpaObjectName:
                description: Name of the VPA object that stored VerticalPodAutoscalerCheckpoint
                  object.
                type: string
            type: object
          status:
            description: Data of the checkpoint.
            properties:
              cpuHistogram:
                description: Checkpoint of histogram for consumption of CPU.
                properties:
                  bucketWeights:
                    description: Map from bucket index to bucket weight.
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
                  referenceTimestamp:
                    description: Reference timestamp for samples collected within
                      this histogram.
                    format: date-time
                    nullable: true
                    type: string
                  totalWeight:
                    description: Sum of samples to be used as denominator for weights
                      from BucketWeights.
                    type: number
                type: object
              firstSampleStart:
                description: Timestamp of the fist sample from the histograms.
                format: date-time
                nullable: true
                type: string
              lastSampleStart:
                description: Timestamp of the last sample from the histograms.
                format: date-time
                nullable: true
                type: string
              lastUpdateTime:
                description: The time when the status was last refreshed.
                format: date-time
                nullable: true
                type: string
              memoryHistogram:
                description: Checkpoint of histogram for consumption of memory.
                properties:
                  bucketWeights:
                    description: Map from bucket index to bucket weight.
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
                  referenceTimestamp:
                    description: Reference timestamp for samples collected within
                      this histogram.
                    format: date-time
                    nullable: true
                    type: string
                  totalWeight:
                    description: Sum of samples to be used as denominator for weights
                      from BucketWeights.
                    type: number
                type: object
              totalSamplesCount:
                description: Total number of samples in the histograms.
                type: integer
              version:
                description: Version of the format of the stored data.
                type: string
            type: object
        type: object
    served: true
    storage: true
  - name: v1beta2
    schema:
      openAPIV3Schema:
        description: VerticalPodAutoscalerCheckpoint is the checkpoint of the internal
          state of VPA that is used for recovery after recommender's restart.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: 'Specification of the checkpoint. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status.'
            properties:
              containerName:
                description: Name of the checkpointed container.
                type: string
              vpaObjectName:
                description: Name of the VPA object that stored VerticalPodAutoscalerCheckpoint
                  object.
                type: string
            type: object
          status:
            description: Data of the checkpoint.
            properties:
              cpuHistogram:
                description: Checkpoint of histogram for consumption of CPU.
                properties:
                  bucketWeights:
                    description: Map from bucket index to bucket weight.
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
                  referenceTimestamp:
                    description: Reference timestamp for samples collected within
                      this histogram.
                    format: date-time
                    nullable: true
                    type: string
                  totalWeight:
                    description: Sum of samples to be used as denominator for weights
                      from BucketWeights.
                    type: number
                type: object
              firstSampleStart:
                description: Timestamp of the fist sample from the histograms.
                format: date-time
                nullable: true
                type: string
              lastSampleStart:
                description: Timestamp of the last sample from the histograms.
                format: date-time
                nullable: true
                type: string
              lastUpdateTime:
                description: The time when the status was last refreshed.
                format: date-time
                nullable: true
                type: string
              memoryHistogram:
                description: Checkpoint of histogram for consumption of memory.
                properties:
                  bucketWeights:
                    description: Map from bucket index to bucket weight.
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
                  referenceTimestamp:
                    description: Reference timestamp for samples collected within
                      this histogram.
                    format: date-time
                    nullable: true
                    type: string
                  totalWeight:
                    description: Sum of samples to be used as denominator for weights
                      from BucketWeights.
                    type: number
                type: object
              totalSamplesCount:
                description: Total number of samples in the histograms.
                type: integer
              version:
                description: Version of the format of the stored data.
                type: string
            type: object
        type: object
    served: true
    storage: false
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: kubermatic-operator/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-kubermatic-operator
  labels:
    helm.sh/chart: kubermatic-operator-v2.24.5
    app.kubernetes.io/name: kubermatic-operator
    app.kubernetes.io/instance: my-kubermatic-operator
    app.kubernetes.io/version: "v2.24.5"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: my-kubermatic-operator
  namespace: 'default'
---
# Source: kubermatic-operator/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-kubermatic-operator-metrics
  labels:
    helm.sh/chart: kubermatic-operator-v2.24.5
    app.kubernetes.io/name: kubermatic-operator
    app.kubernetes.io/instance: my-kubermatic-operator
    app.kubernetes.io/version: "v2.24.5"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: operator
spec:
  type: ClusterIP
  ports:
    - port: 8085
      targetPort: metrics
      protocol: TCP
      name: metrics
  selector:
    app.kubernetes.io/name: kubermatic-operator
    app.kubernetes.io/instance: my-kubermatic-operator
---
# Source: kubermatic-operator/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-kubermatic-operator
  labels:
    helm.sh/chart: kubermatic-operator-v2.24.5
    app.kubernetes.io/name: kubermatic-operator
    app.kubernetes.io/instance: my-kubermatic-operator
    app.kubernetes.io/version: "v2.24.5"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: operator
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: kubermatic-operator
      app.kubernetes.io/instance: my-kubermatic-operator
  template:
    metadata:
      annotations:
        fluentbit.io/parser: json_iso
        prometheus.io/port: "8085"
        prometheus.io/scrape: "true"
      labels:
        helm.sh/chart: kubermatic-operator-v2.24.5
        app.kubernetes.io/name: kubermatic-operator
        app.kubernetes.io/instance: my-kubermatic-operator
        app.kubernetes.io/version: "v2.24.5"
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: operator
    spec:
      serviceAccountName: my-kubermatic-operator
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      containers:
      - name: operator
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65534
        image: "quay.io/kubermatic/kubermatic:v2.24.5"
        imagePullPolicy: IfNotPresent
        command:
          - kubermatic-operator
        args:
        - -internal-address=0.0.0.0:8085
        - -namespace=$(POD_NAMESPACE)
        - -log-format=json
        - -enable-leader-election
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        ports:
        - name: metrics
          containerPort: 8085
          protocol: TCP
        resources:
          
          limits:
            cpu: 500m
            memory: 512Mi
          requests:
            cpu: 50m
            memory: 128Mi
