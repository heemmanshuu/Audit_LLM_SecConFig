---
# Source: mjpg-streamer/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-mjpg-streamer
  labels:
    app.kubernetes.io/name: mjpg-streamer
    helm.sh/chart: mjpg-streamer-0.1.1
    app.kubernetes.io/instance: my-mjpg-streamer
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: mjpg-streamer/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-mjpg-streamer
  labels:
    app.kubernetes.io/name: mjpg-streamer
    helm.sh/chart: mjpg-streamer-0.1.1
    app.kubernetes.io/instance: my-mjpg-streamer
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: mjpg-streamer
    app.kubernetes.io/instance: my-mjpg-streamer
---
# Source: mjpg-streamer/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-mjpg-streamer
  labels:
    app.kubernetes.io/name: mjpg-streamer
    helm.sh/chart: mjpg-streamer-0.1.1
    app.kubernetes.io/instance: my-mjpg-streamer
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  strategy:
    type: Recreate
    rollingUpdate: null
  selector:
    matchLabels:
      app.kubernetes.io/name: mjpg-streamer
      app.kubernetes.io/instance: my-mjpg-streamer
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mjpg-streamer
        app.kubernetes.io/instance: my-mjpg-streamer
    spec:
      serviceAccountName: my-mjpg-streamer
      securityContext:
        {}
      containers:
        - name: mjpg-streamer
          securityContext:
            {}
          image: "badsmoke/mjpg-streamer:1.0.0"
          imagePullPolicy: IfNotPresent
          #command: ["/bin/sh"]
          #args: ["-c", "sleep 99d"]
          command: ["./mjpg_streamer"]
          args:
            - -i
            - "input_uvc.so -n -r 1280x720 -f 30"
            - -o
            - "output_http.so -p 80 -w /usr/local/share/mjpg-streamer/www"
          env:
           - { name: "LD_LIBRARY_PATH", value: "/mjpg-streamer/mjpg-streamer-experimental" }
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          securityContext:
            # uses privileged to accses the raw device
            # not sure which caps are needed otherwise
            privileged: true
          volumeMounts:
            - mountPath: /dev/video0
              name: video0
          resources:
            {}
      volumes:
        - name: video0
          hostPath:
            path: "/dev/video0"
---
# Source: mjpg-streamer/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "my-mjpg-streamer-test-connection"
  labels:
    app.kubernetes.io/name: mjpg-streamer
    helm.sh/chart: mjpg-streamer-0.1.1
    app.kubernetes.io/instance: my-mjpg-streamer
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test-success
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args:  ['my-mjpg-streamer:80']
  restartPolicy: Never
