---
# Source: voyager-gateway/charts/gateway-converter/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-voyager-gateway-gateway-converter
  namespace: default
  labels:
    helm.sh/chart: gateway-converter-v2024.8.30
    app.kubernetes.io/name: gateway-converter
    app.kubernetes.io/instance: my-voyager-gateway
    app.kubernetes.io/version: "v0.0.1"
    app.kubernetes.io/managed-by: Helm
---
# Source: voyager-gateway/templates/envoy-gateway-deployment.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: envoy-gateway
  namespace: 'default'
  labels:
    helm.sh/chart: voyager-gateway-v2024.8.30
    app.kubernetes.io/name: voyager-gateway
    app.kubernetes.io/instance: my-voyager-gateway
    app.kubernetes.io/version: "v17.2.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: voyager-gateway/charts/gateway-converter/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-voyager-gateway-gateway-converter-webhook-cert
  namespace: default
  labels:
    helm.sh/chart: gateway-converter-v2024.8.30
    app.kubernetes.io/name: gateway-converter
    app.kubernetes.io/instance: my-voyager-gateway
    app.kubernetes.io/version: "v0.0.1"
    app.kubernetes.io/managed-by: Helm
type: kubernetes.io/tls
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCakNDQWU2Z0F3SUJBZ0lSQUpXMXdvWXhOeTdvMnpzSmhMOUVETXd3RFFZSktvWklodmNOQVFFTEJRQXcKRFRFTE1Ba0dBMVVFQXhNQ1kyRXdIaGNOTWpRd09URTJNRGt5TkRVMVdoY05NelF3T1RFME1Ea3lORFUxV2pBTgpNUXN3Q1FZRFZRUURFd0pqWVRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTnRtCkp1Q2RmZ2xHTXN2OXJkZm54ME9NZ1BnbytCNzNUNVpBTVFyOVpJNGtBU1NsVUg4WkFHc2Z3M2R5a1lDYmZKeW0KOHo1dFVnYkV3Q2RlcUUwUFFiYXpTM0Y3TkprbFFtRUpDSjhyU00yazVtYmxCbDFTcEJnVzNCMEx6SFVBUWwyWApVb0JMd3VHUTBRL2F5ZDFPK0dFc1pWbjl6UWhyTk9HOW55UDlJVEx0eWltVkZzLzRxUndMR0lLOGhSNVNyVVhGCmMyNVFtWTVIcXZiVGllTnVMVmNlMUlkek1iRGllK1NWNzJLWWx4azhTdTVxOGNUQURCdnRDY3VpS051ZWhjUE4KdzlVWWhoRGVEbWFaUU5JaDhGYXRRazJaZlBMOEEyaXBBZmU3YUJEelhOY2JodTg4d3VVY0VVVTdoK2ltMFdNWgpneWRJRFNGdVUyVE5jOU1hdW0wQ0F3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trTUIwR0ExVWRKUVFXCk1CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVcKQkJTeTkxZ2NURHBrMWVBb2I1bW52QXNENExFY3RqQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFTV2I2cHordQptbjQzSnRRaHQxcjhVajdmdERvRlZqSU1IN0ZZbFR6VVdJS2tSSzFJM2FXeEhCUk5Cdkc0bitkYUJkMzNMTDNNCm93MlVEYmM5RlM4cGRFSjhYZkpnWkVWdFdCdGpDd2ZhL0pMcUdTUXEvRjNtNzdic1FESlpOcUpqVHlVOVQwMTMKN2RObXJMeUVWYzRGV3Zrcy9TWHdTa3ZUQXBiMnNodzdoU3RPM21kcVA1VlpFa2IzV3NwalhRRlA3bVJFaEZ1QQpocDVRMml0TW10cmtmQWFjeUpjR3h5S3NLYnJJSmJQZXNaSk03S05zMFlWN1Vjbkx0bWQyOGNabWdWaDhxVmh2CjBFaEZtZXlMbDk1b28zbXhOT09kb3luL0ZBK2RpaU1uVU1sbDJtUjhwak5LZDdVbkgvSm5hazhBc0c2NGRBZ3kKSU1PSStORGNiVE1DcGc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURsRENDQW55Z0F3SUJBZ0lSQUx5cnU0bFVOMTV5L3NhWDhlaEllb293RFFZSktvWklodmNOQVFFTEJRQXcKRFRFTE1Ba0dBMVVFQXhNQ1kyRXdIaGNOTWpRd09URTJNRGt5TkRVMVdoY05NelF3T1RFME1Ea3lORFUxV2pBdgpNUzB3S3dZRFZRUURFeVJ0ZVMxMmIzbGhaMlZ5TFdkaGRHVjNZWGt0WjJGMFpYZGhlUzFqYjI1MlpYSjBaWEl3CmdnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUNtcEhwVmpQT1RyV2tCcVloUVg5V3YKaVIrRm5CVHZtU0h2Rk8yL00xbjZwOHJsblIyVlRSZzh3dnZLT1p1S0twbFM4QnZ6S2JIOTJkNGJIR2JnVTEvNApzRzFRMTBtYTJCdmdtcHJoRTZreUgzVGhMS3FCRy9UdlRqbmtCVmQxbXI1TVlYSERMV3pIT3g1VUw5d2JrVEJ6Cmx5Nk9ZMktSZnZMdTJnamNYYzJiOWhlTE9sa0cwb0NQSlYxeU5nd2RaaHlWbGNkclVyaG1RbDF6OEtUMmZnUFgKZS9hY1JET3I5a1pFQzJHMmRXRW1pQUo0U3lkV2grYWY4T2Q3Vm5abk9KczUrWEp3WW1zS3dEQUF5WTBCQVIyZQovcnlUeFZXY0YyTWFtalVadmYxQ3dFSGlQa0U2QkdiNWtSOWZ4eHp0dkhoa2F3VCtyNXpLcmhjaXR6UWF0anlqCkFnTUJBQUdqZ2N3d2dja3dEZ1lEVlIwUEFRSC9CQVFEQWdXZ01CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUIKQmdnckJnRUZCUWNEQWpBTUJnTlZIUk1CQWY4RUFqQUFNQjhHQTFVZEl3UVlNQmFBRkxMM1dCeE1PbVRWNENodgptYWU4Q3dQZ3NSeTJNR2tHQTFVZEVRUmlNR0NDTEcxNUxYWnZlV0ZuWlhJdFoyRjBaWGRoZVMxbllYUmxkMkY1CkxXTnZiblpsY25SbGNpNWtaV1poZFd4MGdqQnRlUzEyYjNsaFoyVnlMV2RoZEdWM1lYa3RaMkYwWlhkaGVTMWoKYjI1MlpYSjBaWEl1WkdWbVlYVnNkQzV6ZG1Nd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFIM3M2L0tQc2pSTgpTaHlGczUvRXJxbUUzdEhmSnVLOUpDSk9sTDM4UFovcjg1d2x1N2xKRGlzK1BKaFFUYXJjRWxRWml2UmliVXBVCndpaGFCQ2twVjhGODF5NTF1ZVBramhzejd6ZHdzalhuV3dIZjRZNDVRVjNqdk1uemcxZ1BWKzBqcFdUVE1NdG0KVlJJdUZ6UUJWTFJuVVptckVhb2o5cys2MHRKQ1c3cWZKYzJUWmo0U0tJRzhaRC9xNDd3WUR3STY1TFZ2YkdPUQpZclQxRyt5S0U0eVlNY1NLd1lYTjdKK0JSQ3hvdkVDMkpjeW9rSTQ1UWlxeWNXc2VpT1lsMTVCMFZNOVVtSUduCi9zZXhJOGJZQ2tmd3NsR3BBcFhyeEtZdDBxZThDbFgxV0RLYXI4WktJT3ZWYW41SWdNTmJkUGVDbldDckJEbVUKZjhzaGt0Z0xWNWs9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBcHFSNlZZenprNjFwQWFtSVVGL1ZyNGtmaFp3VTc1a2g3eFR0dnpOWitxZks1WjBkCmxVMFlQTUw3eWptYmlpcVpVdkFiOHlteC9kbmVHeHhtNEZOZitMQnRVTmRKbXRnYjRKcWE0Uk9wTWg5MDRTeXEKZ1J2MDcwNDU1QVZYZFpxK1RHRnh3eTFzeHpzZVZDL2NHNUV3YzVjdWptTmlrWDd5N3RvSTNGM05tL1lYaXpwWgpCdEtBanlWZGNqWU1IV1ljbFpYSGExSzRaa0pkYy9DazluNEQxM3YybkVRenEvWkdSQXRodG5WaEpvZ0NlRXNuClZvZm1uL0RuZTFaMlp6aWJPZmx5Y0dKckNzQXdBTW1OQVFFZG52NjhrOFZWbkJkakdwbzFHYjM5UXNCQjRqNUIKT2dSbStaRWZYOGNjN2J4NFpHc0UvcStjeXE0WElyYzBHclk4b3dJREFRQUJBb0lCQUViM0FsWE9XYWhKRDgreQpaNmQ2dUdBeGIrZ1JLT1ZEL0N4NWFDbWxiNnNMcTU4T3dwdGpJbkExeE01QXJCa3h2T3VSN3dVbGUzUVVSTDZjCjRMNmxJdGlnSVYxczRSNTg2NXBCbkxVL0R5MldNY3IybjRHdDZ5ZkIwMnRrVHZONU81TUJhRlhxMFVraXh1NnAKRnYzeVhZVE1HL3B0SG52QmFTa0lWditwUHJjc2JHUWdycU4wUGFIRjR6Q2hyZUh1WDY2bytJS1EwVXAzVUZpSgpJYWdISGU0OTV3c3N3T001bDZEaUthMjRIWVF1MzlTUmF2OG5vdVlHNklFdlVId3VZTFJjV3d6WjVjM0NBeHVaCit1N1BaeXZBeEhWTHNHYTIyVE9FU2RvOEZXVDBiRDl1L2x0R3NjMnAwSHcyaDVmenQ3MVJTS2ZVTGRjTDdPZ1IKdkdEVHJEa0NnWUVBd2Uwckw5V2E2SVM2SWVVT0Y4Si8zL0ZCRWFLWGMrSnk5SjY2WDZadzhleDNRUWNKMFM4bQpGWEF6bEkrYUdxUWdnellwUXoyb01YZG45Zi9NcEpkQ2dWTWJwMUJGeCs1QzF2OTJJMmxIeEJraTFLNEIwSUJtCmFseTNNb1lpVXhpRTBMT3MvZnd0M3pQdkU1ZWtycnNreUxTTlprVEdidCtTbHVDYWw0WTZMT2NDZ1lFQTIvdVgKblp4S2M3Nk1CbmJpMHhiaHRZbVJkK0hNSXpKNGVRRnlpSTVhbVFjMUlST2pjcWkrOU9YcVFHcW5WQlVMVFhBQQpxKzE3T0hmYVR5VFNWU0lGY3JiSVh4c3Z4a1gyQVpXQ2JUb2F6T0IrcFRpSEFybGlzV0FDV1lUL0lKb2o4dlZJCkt1ZHIvVFRXTmFuM0o5UmxRZjJmU0dhMUJIY01QUFZic0I4dkh1VUNnWUFDNzNRWDVVUFRBUzlRRkFlQ2xJOGEKOUt2bmVHNlNjbnNLK053WlZvdWZIZFV3UnNyL1A1ZHorNTdNUU9BMFJ3ZTI5THJyS2FQQ0creVc3S2hNVlgzTQpOMVhUMG9NNzQzOWZnYjVvQ3MvclIvWWZBZ05GQkt5SUw1OFdSTEdBVUg2eUtnWVVVaHpmcEFtYVlsRTcwOWxhCnNHRHppMWIxbHF6QlcrVDdKaXo3UVFLQmdRRE96Z0JrQ0drcDFNbTR6ZzFCV3pLSHdyT0IyMEZaR1hxT2I2RG4KNWNRZ050bG9waGl6a3hZcUR2Y2c1ZU0ydGEzeGQ4ajUySUZOdmNiN1BtZUo1emp0OWczNjh3ai93Z2VheDU1Ywo1eElJNTBmSU5aTWZLWDh4dDB1ZU10elNIbmFMVXJJc3UzRVhFcFFLMFNWc1NVMkVNMVdKOEJ4ZS9UZ0JHcnkrCm55SmlUUUtCZ0V4aHFBNUM3aVV2aElmcTVybnRsTTY4RUNzdzRwNDBMZEtHbjVMU0NyMHQ5QXMwM1paTTFHYUwKVFcrSGVSV3BqSnFLM3NDOVg0cEpXODU0VHpaVHpwdGszRENScjJuZUdXM05KZS82VGgybVljOWZFRHdTTXVGSwprQURYOUloSTZTNzg3cmN6bjIxb1lFYUdZMEVqQVVZUEFDUENBMjdNVWV0Q216RVIzUHcvCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: voyager-gateway/templates/envoy-gateway-config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: envoy-gateway-config
  namespace: 'default'
  labels:
    helm.sh/chart: voyager-gateway-v2024.8.30
    app.kubernetes.io/name: voyager-gateway
    app.kubernetes.io/instance: my-voyager-gateway
    app.kubernetes.io/version: "v17.2.0"
    app.kubernetes.io/managed-by: Helm
data:
  envoy-gateway.yaml: |
    apiVersion: gateway.envoyproxy.io/v1alpha1
    kind: EnvoyGateway
    gateway:
      controllerName: gateway.envoyproxy.io/gatewayclass-controller
    logging:
      level:
        default: info
    provider:
      kubernetes:
        rateLimitDeployment:
          container:
            image: docker.io/envoyproxy/ratelimit:master
          patch:
            type: StrategicMerge
            value:
              spec:
                template:
                  spec:
                    containers:
                    - imagePullPolicy: IfNotPresent
                      name: envoy-ratelimit
        shutdownManager:
          image: ghcr.io/voyagermesh/gateway:v1.1.1
      type: Kubernetes
---
# Source: voyager-gateway/charts/gateway-converter/templates/auth_proxy.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-voyager-gateway-gateway-converter-auth-proxy
rules:
  - apiGroups:
      - authentication.k8s.io
    resources:
      - tokenreviews
    verbs:
      - create
  - apiGroups:
      - authorization.k8s.io
    resources:
      - subjectaccessreviews
    verbs:
      - create
---
# Source: voyager-gateway/charts/gateway-converter/templates/cluster_role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-voyager-gateway-gateway-converter
  labels:
    helm.sh/chart: gateway-converter-v2024.8.30
    app.kubernetes.io/name: gateway-converter
    app.kubernetes.io/instance: my-voyager-gateway
    app.kubernetes.io/version: "v0.0.1"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - "apiextensions.k8s.io"
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
  - patch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods/status
  verbs: ["get", "update"]
- apiGroups:
  - "gateway.networking.k8s.io"
  resources:
  - backendtlspolicies
  verbs: ["*"]
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
# Source: voyager-gateway/charts/gateway-converter/templates/metrics_auth_role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-voyager-gateway-gateway-converter-metrics-auth
  labels:
    helm.sh/chart: gateway-converter-v2024.8.30
    app.kubernetes.io/name: gateway-converter
    app.kubernetes.io/instance: my-voyager-gateway
    app.kubernetes.io/version: "v0.0.1"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
# Source: voyager-gateway/templates/envoy-gateway-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: my-voyager-gateway-envoy-gateway-role
rules:
- apiGroups:
  - ""
  resources:
  - nodes
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - gatewayclasses
  verbs:
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - gatewayclasses/status
  - backendtlspolicies/status
  verbs:
  - update
- apiGroups:
  - multicluster.x-k8s.io
  resources:
  - serviceimports
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  - secrets
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - gateway.envoyproxy.io
  resources:
  - envoyproxies
  - envoypatchpolicies
  - clienttrafficpolicies
  - backendtrafficpolicies
  - securitypolicies
  - envoyextensionpolicies
  - backends
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - gateway.envoyproxy.io
  resources:
  - envoypatchpolicies/status
  - clienttrafficpolicies/status
  - backendtrafficpolicies/status
  - securitypolicies/status
  - envoyextensionpolicies/status
  - backends/status
  verbs:
  - update
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - gateways
  - grpcroutes
  - httproutes
  - referencegrants
  - tcproutes
  - tlsroutes
  - udproutes
  - backendtlspolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - gateways/status
  - grpcroutes/status
  - httproutes/status
  - tcproutes/status
  - tlsroutes/status
  - udproutes/status
  - backendtlspolicies/status
  verbs:
  - update
- apiGroups:
  - gateway.voyagermesh.com
  resources:
  - kafkaroutes
  - mongodbroutes
  - mysqlroutes
  - postgresroutes
  - redisroutes
  verbs:
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - gateway.voyagermesh.com
  resources:
  - kafkaroutes/status
  - mongodbroutes/status
  - mysqlroutes/status
  - postgresroutes/status
  - redisroutes/status
  verbs:
  - update
---
# Source: voyager-gateway/charts/gateway-converter/templates/auth_proxy.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-voyager-gateway-gateway-converter-auth-proxy
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-voyager-gateway-gateway-converter-auth-proxy
subjects:
  - kind: ServiceAccount
    name: my-voyager-gateway-gateway-converter
    namespace: default
---
# Source: voyager-gateway/charts/gateway-converter/templates/cluster_role_binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-voyager-gateway-gateway-converter
  labels:
    helm.sh/chart: gateway-converter-v2024.8.30
    app.kubernetes.io/name: gateway-converter
    app.kubernetes.io/instance: my-voyager-gateway
    app.kubernetes.io/version: "v0.0.1"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-voyager-gateway-gateway-converter
subjects:
- kind: ServiceAccount
  name: my-voyager-gateway-gateway-converter
  namespace: default
---
# Source: voyager-gateway/charts/gateway-converter/templates/metrics_auth_role_binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-voyager-gateway-gateway-converter-metrics-auth
  labels:
    helm.sh/chart: gateway-converter-v2024.8.30
    app.kubernetes.io/name: gateway-converter
    app.kubernetes.io/instance: my-voyager-gateway
    app.kubernetes.io/version: "v0.0.1"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-voyager-gateway-gateway-converter-metrics-auth
subjects:
- kind: ServiceAccount
  name: my-voyager-gateway-gateway-converter
  namespace: default
---
# Source: voyager-gateway/templates/envoy-gateway-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-voyager-gateway-envoy-gateway-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-voyager-gateway-envoy-gateway-role
subjects:
- kind: ServiceAccount
  name: 'envoy-gateway'
  namespace: 'default'
---
# Source: voyager-gateway/charts/gateway-converter/templates/leader_election_role.yaml
# permissions to do leader election.
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: my-voyager-gateway-gateway-converter-leader-election
  namespace: default
  labels:
    helm.sh/chart: gateway-converter-v2024.8.30
    app.kubernetes.io/name: gateway-converter
    app.kubernetes.io/instance: my-voyager-gateway
    app.kubernetes.io/version: "v0.0.1"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
# Source: voyager-gateway/templates/infra-manager-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: my-voyager-gateway-infra-manager
  namespace: 'default'
  labels:
    helm.sh/chart: voyager-gateway-v2024.8.30
    app.kubernetes.io/name: voyager-gateway
    app.kubernetes.io/instance: my-voyager-gateway
    app.kubernetes.io/version: "v17.2.0"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - ""
  resources:
  - serviceaccounts
  - services
  verbs:
  - create
  - get
  - delete
  - patch
- apiGroups:
  - apps
  resources:
  - deployments
  - daemonsets
  verbs:
  - create
  - get
  - delete
  - patch
- apiGroups:
  - autoscaling
  - policy
  resources:
  - horizontalpodautoscalers
  - poddisruptionbudgets
  verbs:
  - create
  - get
  - delete
  - patch
---
# Source: voyager-gateway/templates/leader-election-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: my-voyager-gateway-leader-election-role
  namespace: 'default'
  labels:
    helm.sh/chart: voyager-gateway-v2024.8.30
    app.kubernetes.io/name: voyager-gateway
    app.kubernetes.io/instance: my-voyager-gateway
    app.kubernetes.io/version: "v17.2.0"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
# Source: voyager-gateway/charts/gateway-converter/templates/leader_election_role_binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: my-voyager-gateway-gateway-converter-leader-election
  namespace: default
  labels:
    helm.sh/chart: gateway-converter-v2024.8.30
    app.kubernetes.io/name: gateway-converter
    app.kubernetes.io/instance: my-voyager-gateway
    app.kubernetes.io/version: "v0.0.1"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: my-voyager-gateway-gateway-converter-leader-election
subjects:
- kind: ServiceAccount
  name: my-voyager-gateway-gateway-converter
  namespace: default
---
# Source: voyager-gateway/templates/infra-manager-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: my-voyager-gateway-infra-manager
  namespace: 'default'
  labels:
    helm.sh/chart: voyager-gateway-v2024.8.30
    app.kubernetes.io/name: voyager-gateway
    app.kubernetes.io/instance: my-voyager-gateway
    app.kubernetes.io/version: "v17.2.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: 'my-voyager-gateway-infra-manager'
subjects:
- kind: ServiceAccount
  name: 'envoy-gateway'
  namespace: 'default'
---
# Source: voyager-gateway/templates/leader-election-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: my-voyager-gateway-leader-election-rolebinding
  namespace: 'default'
  labels:
    helm.sh/chart: voyager-gateway-v2024.8.30
    app.kubernetes.io/name: voyager-gateway
    app.kubernetes.io/instance: my-voyager-gateway
    app.kubernetes.io/version: "v17.2.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: 'my-voyager-gateway-leader-election-role'
subjects:
- kind: ServiceAccount
  name: 'envoy-gateway'
  namespace: 'default'
---
# Source: voyager-gateway/charts/gateway-converter/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-voyager-gateway-gateway-converter
  namespace: default
  labels:
    helm.sh/chart: gateway-converter-v2024.8.30
    app.kubernetes.io/name: gateway-converter
    app.kubernetes.io/instance: my-voyager-gateway
    app.kubernetes.io/version: "v0.0.1"
    app.kubernetes.io/managed-by: Helm
spec:
  publishNotReadyAddresses: true
  ports:
  - name: https
    port: 443
    protocol: TCP
    targetPort: https
  - name: metrics
    port: 8443
    protocol: TCP
    targetPort: metrics
  selector:
    app.kubernetes.io/name: gateway-converter
    app.kubernetes.io/instance: my-voyager-gateway
---
# Source: voyager-gateway/templates/envoy-gateway-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: envoy-gateway
  namespace: 'default'
  labels:
    control-plane: envoy-gateway
    helm.sh/chart: voyager-gateway-v2024.8.30
    app.kubernetes.io/name: voyager-gateway
    app.kubernetes.io/instance: my-voyager-gateway
    app.kubernetes.io/version: "v17.2.0"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    control-plane: envoy-gateway
    app.kubernetes.io/name: voyager-gateway
    app.kubernetes.io/instance: my-voyager-gateway
  ports:
  - name: grpc
    port: 18000
    targetPort: 18000
  - name: ratelimit
    port: 18001
    targetPort: 18001
  - name: wasm
    port: 18002
    targetPort: 18002
  - name: metrics
    port: 19001
    targetPort: 19001
---
# Source: voyager-gateway/charts/gateway-converter/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-voyager-gateway-gateway-converter
  namespace: default
  labels:
    helm.sh/chart: gateway-converter-v2024.8.30
    app.kubernetes.io/name: gateway-converter
    app.kubernetes.io/instance: my-voyager-gateway
    app.kubernetes.io/version: "v0.0.1"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: gateway-converter
      app.kubernetes.io/instance: my-voyager-gateway
  template:
    metadata:
      labels:
        app.kubernetes.io/name: gateway-converter
        app.kubernetes.io/instance: my-voyager-gateway
      annotations:
        checksum/apiregistration.yaml: cdd15620a292f8f931479dcc0dbd8aeb7cfd44e1a0bbd3d29bc7485a490ec8ee
    spec:
      readinessGates:
      - conditionType: "gateway/conversion"
      
      serviceAccountName: my-voyager-gateway-gateway-converter
      containers:
      - name: webhook-server
        image: "ghcr.io/voyagermesh/gateway-converter:v0.0.1"
        imagePullPolicy: IfNotPresent
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65534
          seccompProfile:
            type: RuntimeDefault
        args:
          - webhook
          - --leader-elect
        ports:
        - name: https
          containerPort: 9443
          protocol: TCP
        - name: metrics
          containerPort: 8443
          protocol: TCP
        - name: probe
          containerPort: 8081
          protocol: TCP
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        resources:
          requests:
            cpu: 100m
        volumeMounts:
        - name: serving-cert
          mountPath: /var/serving-cert
          readOnly: true
      volumes:
      - name: serving-cert
        secret:
          defaultMode: 420
          secretName: my-voyager-gateway-gateway-converter-webhook-cert
      securityContext:
        fsGroup: 65535
      nodeSelector:
        kubernetes.io/os: linux
---
# Source: voyager-gateway/templates/envoy-gateway-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: envoy-gateway
  namespace: 'default'
  labels:
    control-plane: envoy-gateway
    helm.sh/chart: voyager-gateway-v2024.8.30
    app.kubernetes.io/name: voyager-gateway
    app.kubernetes.io/instance: my-voyager-gateway
    app.kubernetes.io/version: "v17.2.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: envoy-gateway
      app.kubernetes.io/name: voyager-gateway
      app.kubernetes.io/instance: my-voyager-gateway
  template:
    metadata:
      annotations:
        prometheus.io/port: "19001"
        prometheus.io/scrape: "true"
      labels:
        control-plane: envoy-gateway
        app.kubernetes.io/name: voyager-gateway
        app.kubernetes.io/instance: my-voyager-gateway
    spec:
      containers:
      - args:
        - server
        - --config-path=/config/envoy-gateway.yaml
        env:
        - name: ENVOY_GATEWAY_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: cluster.local
        image: ghcr.io/voyagermesh/gateway:v1.1.1
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: envoy-gateway
        ports:
        - containerPort: 18000
          name: grpc
        - containerPort: 18001
          name: ratelimit
        - containerPort: 18002
          name: wasm
        - containerPort: 19001
          name: metrics
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 1024Mi
          requests:
            cpu: 100m
            memory: 256Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /config
          name: envoy-gateway-config
          readOnly: true
        - mountPath: /certs
          name: certs
          readOnly: true
      imagePullSecrets: []
      serviceAccountName: envoy-gateway
      terminationGracePeriodSeconds: 10
      volumes:
      - configMap:
          defaultMode: 420
          name: envoy-gateway-config
        name: envoy-gateway-config
      - name: certs
        secret:
          secretName: envoy-gateway
---
# Source: voyager-gateway/templates/certgen-rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-voyager-gateway-certgen
  namespace: 'default'
  labels:
    helm.sh/chart: voyager-gateway-v2024.8.30
    app.kubernetes.io/name: voyager-gateway
    app.kubernetes.io/instance: my-voyager-gateway
    app.kubernetes.io/version: "v17.2.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": pre-install
---
# Source: voyager-gateway/templates/certgen-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: my-voyager-gateway-certgen
  namespace: 'default'
  labels:
    helm.sh/chart: voyager-gateway-v2024.8.30
    app.kubernetes.io/name: voyager-gateway
    app.kubernetes.io/instance: my-voyager-gateway
    app.kubernetes.io/version: "v17.2.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": pre-install
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - create
  - update
---
# Source: voyager-gateway/templates/certgen-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: my-voyager-gateway-certgen
  namespace: 'default'
  labels:
    helm.sh/chart: voyager-gateway-v2024.8.30
    app.kubernetes.io/name: voyager-gateway
    app.kubernetes.io/instance: my-voyager-gateway
    app.kubernetes.io/version: "v17.2.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": pre-install
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: 'my-voyager-gateway-certgen'
subjects:
- kind: ServiceAccount
  name: 'my-voyager-gateway-certgen'
  namespace: 'default'
---
# Source: voyager-gateway/templates/certgen.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: my-voyager-gateway-certgen
  namespace: 'default'
  labels:
    helm.sh/chart: voyager-gateway-v2024.8.30
    app.kubernetes.io/name: voyager-gateway
    app.kubernetes.io/instance: my-voyager-gateway
    app.kubernetes.io/version: "v17.2.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": pre-install, pre-upgrade
spec:
  backoffLimit: 1
  completions: 1
  parallelism: 1
  template:
    metadata:
      labels:
        app: certgen
    spec:
      containers:
      - command:
        - envoy-gateway
        - certgen
        env:
        - name: ENVOY_GATEWAY_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: cluster.local
        image: ghcr.io/voyagermesh/gateway:v1.1.1
        imagePullPolicy: Always
        name: envoy-gateway-certgen
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsGroup: 65534
          runAsUser: 65534
          seccompProfile:
            type: RuntimeDefault
      imagePullSecrets: []
      restartPolicy: Never
      serviceAccountName: my-voyager-gateway-certgen
  ttlSecondsAfterFinished: 30
