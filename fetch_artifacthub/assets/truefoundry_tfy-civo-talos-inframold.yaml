---
# Source: tfy-civo-talos-inframold/templates/keda.yaml
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: keda
  finalizers:
    - resources-finalizer.argocd.argoproj.io
  labels:
    truefoundry.com/infra-component: "keda"
spec:
  ignoreDifferences:
  - group: apiregistration.k8s.io
    kind: APIService
    jsonPointers:
      - /spec/insecureSkipTLSVerify
  destination:
    namespace: keda
    server: https://kubernetes.default.svc
  project: tfy-apps
  source:
    chart: keda
    repoURL: "https://kedacore.github.io/charts"
    targetRevision: 2.13.2
    helm:
      values: |
        resources:
          operator:
            requests:
              cpu: 100m
              memory: 256Mi
              ephemeral-storage: 256Mi
          metricServer:
            requests:
              cpu: 100m
              memory: 256Mi
              ephemeral-storage: 256Mi
        prometheus:
          operator:
            enabled: true
      
      
  syncPolicy:
    automated: { }
    syncOptions:
      - RespectIgnoreDifferences=true
      - CreateNamespace=true
      - ServerSideApply=true
---
# Source: tfy-civo-talos-inframold/templates/tfy-apps.yaml
apiVersion: argoproj.io/v1alpha1
kind: AppProject
metadata:
  name: tfy-apps
  namespace: argocd
  annotations:
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-weight: "-20"
spec:
  clusterResourceWhitelist:
  - group: '*'
    kind: '*'
  destinations:
  - namespace: '*'
    server: '*'
  sourceRepos:
  - '*'
  sourceNamespaces:
  - "*"
---
# Source: tfy-civo-talos-inframold/templates/argo-rollouts.yaml
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: argo-rollout
  finalizers:
  - resources-finalizer.argocd.argoproj.io
  annotations:
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-weight: "-18"
  labels:
    truefoundry.com/infra-component: "argo-rollout"
spec:
  destination:
    namespace: argo-rollouts
    server: https://kubernetes.default.svc
  project: tfy-apps
  source:
    chart: argo-rollouts
    repoURL: https://argoproj.github.io/argo-helm
    targetRevision: 2.35.1
    helm:
      values: |
        controller:
          resources:
            requests:
              cpu: 100m
              memory: 256Mi
              ephemeral-storage: 256Mi
          
          
  syncPolicy:
    automated: {}
    syncOptions:
      - CreateNamespace=true
      - ServerSideApply=true
---
# Source: tfy-civo-talos-inframold/templates/argo-workflows.yaml
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: argo-workflows
  finalizers:
  - resources-finalizer.argocd.argoproj.io
  annotations:
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-weight: "-19"
  labels:
    truefoundry.com/infra-component: "argo-workflows"
spec:
  destination:
    namespace: argo-workflows
    server: https://kubernetes.default.svc
  project: tfy-apps
  source:
    chart: argo-workflows
    repoURL: "https://argoproj.github.io/argo-helm"
    targetRevision: 0.41.1
    helm:
      values: |
        controller:
          workflowDefaults:
            spec:
              activeDeadlineSeconds: 432000
              ttlStrategy:
                secondsAfterCompletion: 3600
          metricsConfig:
            enabled: true
          resources:
            requests:
              cpu: 100m
              memory: 256Mi
              ephemeral-storage: 256Mi
          
          
        executor:
          resources:
            requests:
              cpu: 100m
              memory: 256Mi
              ephemeral-storage: 256Mi
        server:
          resources:
            requests:
              cpu: 100m
              memory: 256Mi
              ephemeral-storage: 256Mi
          
          
  syncPolicy:
    automated: {}
    syncOptions:
      - CreateNamespace=true
      - ServerSideApply=true
---
# Source: tfy-civo-talos-inframold/templates/argocd.yaml
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: argocd
  finalizers:
  - resources-finalizer.argocd.argoproj.io
  annotations:
    argocd.argoproj.io/sync-wave: "-1"
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-weight: "-20"
  labels:
    truefoundry.com/infra-component: "argocd"
spec:
  destination:
    namespace: argocd
    server: https://kubernetes.default.svc
  project: default
  source:
    chart: argo-cd
    repoURL: https://argoproj.github.io/argo-helm
    targetRevision: 6.7.10
    helm:
      values: |
        applicationSet:
          enabled: false
        notifications:
          enabled: false
        dex:
          enabled: false
        configs:
          cm:
            resource.customizations.ignoreDifferences.storage.k8s.io_CSIDriver: |
              jqPathExpressions:
              - '.spec.seLinuxMount'
        server:
          extraArgs:
            - --insecure
            - '--application-namespaces="*"'
          resources:
            requests:
              cpu: 100m
              memory: 256Mi
              ephemeral-storage: 256Mi
          
          
        controller:
          extraArgs:
            - '--application-namespaces="*"'
          resources:
            requests:
              cpu: 100m
              memory: 256Mi
              ephemeral-storage: 256Mi
          
          
        redis:
          resources:
            requests:
              cpu: 100m
              memory: 256Mi
              ephemeral-storage: 256Mi
          
          
        repoServer:
          resources:
            requests:
              cpu: 100m
              memory: 256Mi
              ephemeral-storage: 256Mi
          
          
  syncPolicy:
    automated: { }
    syncOptions:
      - CreateNamespace=true
      - ServerSideApply=true
---
# Source: tfy-civo-talos-inframold/templates/istio/istio-base.yaml
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: istio-base
  finalizers:
  - resources-finalizer.argocd.argoproj.io
  annotations:
    argocd.argoproj.io/sync-wave: "-2"
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-weight: "-16"
  labels:
    truefoundry.com/infra-component: "istio-base"
spec:
  destination:
    namespace: istio-system
    server: https://kubernetes.default.svc
  project: tfy-apps
  source:
    chart: base
    repoURL: https://istio-release.storage.googleapis.com/charts
    targetRevision: 1.21.1
    helm:
      values: ""
  syncPolicy:
    automated: {}
    syncOptions:
      - RespectIgnoreDifferences=true
      - CreateNamespace=true
      - ServerSideApply=true
---
# Source: tfy-civo-talos-inframold/templates/istio/istio-discovery.yaml
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: istio-discovery
  finalizers:
  - resources-finalizer.argocd.argoproj.io
  annotations:
    argocd.argoproj.io/sync-wave: "-2"
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-weight: "-15"
  labels:
    truefoundry.com/infra-component: "istio-discovery"
spec:
  ignoreDifferences:
    - group: apps
      jqPathExpressions:
        - .spec.template.spec.containers[]?.env[]?.valueFrom.resourceFieldRef.divisor
      kind: Deployment
  destination:
    namespace: istio-system
    server: https://kubernetes.default.svc
  project: tfy-apps
  source:
    chart: istiod
    repoURL: https://istio-release.storage.googleapis.com/charts
    targetRevision: 1.21.1
    helm:
      values: |
        pilot:
          image: docker.io/istio/pilot:1.21.1-distroless
          autoscaleEnabled: true
          autoscaleMin: 2
          replicaCount: 2
          resources:
            requests:
              cpu: 200m
              memory: 512Mi
              ephemeral-storage: 512Mi
        global:
          tag: 1.21.1-distroless
          proxy:
            image: docker.io/istio/proxyv2:1.21.1-distroless
          proxy_init:
            image: docker.io/istio/proxyv2:1.21.1-distroless
          
          
  syncPolicy:
    automated: {}
    syncOptions:
      - RespectIgnoreDifferences=true
      - CreateNamespace=true
      - ServerSideApply=true
---
# Source: tfy-civo-talos-inframold/templates/istio/tfy-istio-ingress.yaml
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: tfy-istio-ingress
  finalizers:
  - resources-finalizer.argocd.argoproj.io
  annotations:
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-weight: "-15"
  labels:
    truefoundry.com/infra-component: "tfy-istio-ingress"
spec:
  destination:
    namespace: istio-system
    server: https://kubernetes.default.svc
  project: tfy-apps
  source:
    chart: tfy-istio-ingress
    repoURL: https://truefoundry.github.io/infra-charts/
    targetRevision: 0.1.3
    helm:
      values: |
        
        
        
        tfyGateway:
          name: 'tfy-wildcard'
          spec:
            selector:
              istio: 'tfy-istio-ingress'
            servers:
              - hosts:
                - "*"
                port:
                  name: http-tfy-wildcard
                  number: 80
                  protocol: HTTP
                tls:
                  
                  httpsRedirect: true
                  
              - hosts: 
                - "*"
                port:
                  name: https-tfy-wildcard
                  number: 443
                  protocol: HTTP
  syncPolicy:
    automated: {}
    syncOptions:
      - CreateNamespace=true
      - ServerSideApply=true
---
# Source: tfy-civo-talos-inframold/templates/metrics-server.yaml
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: metrics-server
  finalizers:
  - resources-finalizer.argocd.argoproj.io
  annotations:
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-weight: "-18"
  labels:
    truefoundry.com/infra-component: "metrics-server"
spec:
  destination:
    namespace: kube-system
    server: 'https://kubernetes.default.svc'
  source:
    repoURL: 'https://kubernetes-sigs.github.io/metrics-server/'
    targetRevision: 3.12.1
    chart: metrics-server
    helm:
      values: |-
        podAnnotations:
          "cluster-autoscaler.kubernetes.io/safe-to-evict": "true"
        replicas: 2
        resources:
          limits:
            cpu: 50m
            memory: 100Mi
          requests:
            cpu: 10m
            memory: 50Mi
        podDisruptionBudget:
          enabled: true
          minAvailable: 1
        containerPort: 4443
        args:
          - '--kubelet-insecure-tls'
        tolerations:
          - key: "dedicated"
            operator: "Equal"
            value: "reserved-supercluster"
            effect: "NoSchedule"
  project: tfy-apps
  syncPolicy:
    automated: {}
