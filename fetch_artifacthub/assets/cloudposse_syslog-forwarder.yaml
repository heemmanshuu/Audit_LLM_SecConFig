---
# Source: syslog-forwarder/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-syslog-forwarder-sysl
data:
  fluent.conf: |+
    # Do not directly collect fluentd's own logs to avoid infinite loops.
    <match fluent.**>
      type null
    </match>


    # Example:
    # {"log":"[info:2016-02-16T16:04:05.930-08:00] Some log text here\n","stream":"stdout","time":"2016-02-17T00:04:05.931087621Z"}
    <source>
      type tail
      format json
      time_key time
      path /var/log/containers/*-json.log
      pos_file /var/log/fluentd-containers.log.pos
      time_format %Y-%m-%dT%H:%M:%S.%NZ
      tag reform.*
      read_from_head true
    </source>

    <match reform.**>
      type record_reformer
      enable_ruby true
      tag kubernetes.${tag_suffix[4].split('-')[0..-2].join('-')}
    </match>



    # Example:
    # 2016/02/04 06:52:38 filePurge: successfully removed file /var/etcd/data/member/wal/00000000000006d0-00000000010a23d1.wal
    <source>
      type tail
      # Not parsing this, because it doesn't have anything particularly useful to
      # parse out of it (like severities).
      format none
      path /var/log/etcd.log
      pos_file /var/log/fluentd-etcd.log.pos
      tag etcd
    </source>





    # Example:
    # I1118 21:26:53.975789       6 proxier.go:1096] Port "nodePort for kube-system/default-http-backend:http" (:31429/tcp) was open before and is still needed
    <source>
      type tail
      format multiline
      multiline_flush_interval 5s
      format_firstline /^\w\d{4}/
      format1 /^(?<severity>\w)(?<time>\d{4} [^\s]*)\s+(?<pid>\d+)\s+(?<source>[^ \]]+)\] (?<message>.*)/
      time_format %m%d %H:%M:%S.%N
      path /var/log/kube-proxy.log
      pos_file /var/log/fluentd-kube-proxy.log.pos
      tag kube-proxy
    </source>





    # Example:
    # I0204 06:55:31.872680       5 servicecontroller.go:277] LB already exists and doesn't need update for service kube-system/kube-ui
    <source>
      type tail
      format multiline
      multiline_flush_interval 5s
      format_firstline /^\w\d{4}/
      format1 /^(?<severity>\w)(?<time>\d{4} [^\s]*)\s+(?<pid>\d+)\s+(?<source>[^ \]]+)\] (?<message>.*)/
      time_format %m%d %H:%M:%S.%N
      path /var/log/kube-controller-manager.log
      pos_file /var/log/fluentd-kube-controller-manager.log.pos
      tag kube-controller-manager
    </source>



    # Example:
    # W0204 06:49:18.239674       7 reflector.go:245] pkg/scheduler/factory/factory.go:193: watch of *api.Service ended with: 401: The event in requested index is outdated and cleared (the requested history has been cleared [2578313/2577886]) [2579312]
    <source>
      type tail
      format multiline
      multiline_flush_interval 5s
      format_firstline /^\w\d{4}/
      format1 /^(?<severity>\w)(?<time>\d{4} [^\s]*)\s+(?<pid>\d+)\s+(?<source>[^ \]]+)\] (?<message>.*)/
      time_format %m%d %H:%M:%S.%N
      path /var/log/kube-scheduler.log
      pos_file /var/log/fluentd-kube-scheduler.log.pos
      tag kube-scheduler
    </source>



    # We use 2 output stanzas - one to handle the container logs and one to handle
    # the node daemon logs, the latter of which explicitly sends its logs to a different
    # endpoint to keep them separate
    <match kubernetes.**>
      type remote_syslog
      host logs2.papertrailapp.com
      port 12345
      severity debug
      hostname "#{Socket.gethostname}"
      tag containers
    </match>



    <match **>
      type remote_syslog
      host logs2.papertrailapp.com
      port 45678
      severity debug
      hostname "#{Socket.gethostname}"
      tag kubernetes
    </match>
---
# Source: syslog-forwarder/templates/daemonset.yaml
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: my-syslog-forwarder-sysl
  labels:
    chart: "syslog-forwarder-0.1.0"
spec:
  template:
    metadata:
      labels:
        app: my-syslog-forwarder-sysl
        chart: "syslog-forwarder-0.1.0"
      name: my-syslog-forwarder-sysl
    spec:
      hostNetwork: true
      containers:
      - image: "cloudposse/fluentd-remote-syslog:latest"
        resources:
          limits:
            memory: 200Mi
        imagePullPolicy: Always
        name: "syslog-forwarder"
        volumeMounts:
          - name: config
            mountPath: /fluentd/etc
          - name: var-log
            mountPath: /var/log
          - name: var-log-containers
            mountPath: /var/log/containers
            readOnly: true
          - name: var-lib-docker-containers
            mountPath: /var/lib/docker/containers
            readOnly: true
      volumes:
        - name: config
          configMap:
            name: my-syslog-forwarder-sysl
            items:
              - key: fluent.conf
                path: fluent.conf
        - name: var-log
          hostPath:
            path: /var/log
        - name: var-log-containers
          hostPath:
            path: /var/log/containers
        - name: var-lib-docker-containers
          hostPath:
            path:  /var/lib/docker/containers
