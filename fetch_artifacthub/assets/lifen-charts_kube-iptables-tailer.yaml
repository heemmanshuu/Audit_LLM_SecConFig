---
# Source: kube-iptables-tailer/templates/podsecuritypolicy.yaml
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: my-kube-iptables-tailer
  labels:
    app.kubernetes.io/name: kube-iptables-tailer
    helm.sh/chart: kube-iptables-tailer-0.2.3
    app.kubernetes.io/instance: my-kube-iptables-tailer
    app.kubernetes.io/managed-by: Helm
spec:
  privileged: false
  allowPrivilegeEscalation: false
  requiredDropCapabilities:
  - ALL
  volumes:
  - "emptyDir"
  - "secret"
  - "hostPath"
  hostNetwork: false
  hostIPC: false
  hostPID: false
  runAsUser:
    rule: "RunAsAny"
  seLinux:
    rule: "RunAsAny"
  supplementalGroups:
    rule: "MustRunAs"
    ranges:
      - min: 0
        max: 65535
  fsGroup:
    rule: "MustRunAs"
    ranges:
      - min: 0
        max: 65535
---
# Source: kube-iptables-tailer/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-kube-iptables-tailer
  namespace: default
---
# Source: kube-iptables-tailer/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-kube-iptables-tailer
  labels:
    app.kubernetes.io/name: kube-iptables-tailer
    helm.sh/chart: kube-iptables-tailer-0.2.3
    app.kubernetes.io/instance: my-kube-iptables-tailer
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups: [""]
  resources: ["pods"]
  verbs:     ["list","get","watch"]
- apiGroups: [""]
  resources: ["events"]
  verbs:     ["patch","create"]
- apiGroups: ["policy"]
  resources: ["podsecuritypolicies"]
  verbs:     ["use"]
  resourceNames:
  - my-kube-iptables-tailer
---
# Source: kube-iptables-tailer/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-kube-iptables-tailer
  labels:
    app.kubernetes.io/name: kube-iptables-tailer
    helm.sh/chart: kube-iptables-tailer-0.2.3
    app.kubernetes.io/instance: my-kube-iptables-tailer
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-kube-iptables-tailer
subjects:
- kind: ServiceAccount
  name: my-kube-iptables-tailer
  namespace: default
---
# Source: kube-iptables-tailer/templates/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: my-kube-iptables-tailer
  labels:
    app.kubernetes.io/name: kube-iptables-tailer
    helm.sh/chart: kube-iptables-tailer-0.2.3
    app.kubernetes.io/instance: my-kube-iptables-tailer
    app.kubernetes.io/managed-by: Helm
spec:
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: kube-iptables-tailer
      app.kubernetes.io/instance: my-kube-iptables-tailer
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kube-iptables-tailer
        app.kubernetes.io/instance: my-kube-iptables-tailer
    spec:
      serviceAccountName: my-kube-iptables-tailer
      containers:
        - name: kube-iptables-tailer
          image: "honestica/kube-iptables-tailer:master-91"
          imagePullPolicy: IfNotPresent
          command:
            - "/kube-iptables-tailer"
          env:
            - name: "IPTABLES_LOG_PREFIX"
              # log prefix defined in your iptables chains
              value: "calico-packet:"
            - name: "KUBE_API_SERVER"
              value: "https://kubernetes.default:443"
          volumeMounts:
            - name: "iptables-logs"
              mountPath: "/var/log"
              readOnly: true
          resources:
            {}
      volumes:
        - name: "iptables-logs"
          hostPath:
            # absolute path of the directory containing iptables log file on your host
            path: "/var/log"
---
# Source: kube-iptables-tailer/templates/networkpolicy-loggin-calico.yml
apiVersion: projectcalico.org/v3
kind: GlobalNetworkPolicy
metadata:
  name: my-kube-iptables-tailer-logging
  labels:
    app.kubernetes.io/name: kube-iptables-tailer
    helm.sh/chart: kube-iptables-tailer-0.2.3
    app.kubernetes.io/instance: my-kube-iptables-tailer
    app.kubernetes.io/managed-by: Helm
spec:
  types:
  - Ingress
  - Egress
  ingress:
  - action: Log
    protocol: TCP
  - action: Allow
    protocol: TCP
  - action: Log
    protocol: UDP
  - action: Allow
    protocol: UDP
  egress:
  - action: Log
    protocol: TCP
  - action: Allow
    protocol: TCP
  - action: Log
    protocol: UDP
  - action: Allow
    protocol: UDP
