---
# Source: local-ai/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-local-ai
  labels:
    helm.sh/chart: local-ai-3.0.0
    app.kubernetes.io/name: local-ai
    app.kubernetes.io/instance: my-local-ai
    app.kubernetes.io/version: "1.25.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: local-ai/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-local-ai
  labels:
    helm.sh/chart: local-ai-3.0.0
    app.kubernetes.io/name: local-ai
    app.kubernetes.io/instance: my-local-ai
    app.kubernetes.io/version: "1.25.0"
    app.kubernetes.io/managed-by: Helm
data:
  preload-models.json: |
    []
---
# Source: local-ai/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-local-ai
  labels:
    helm.sh/chart: local-ai-3.0.0
    app.kubernetes.io/name: local-ai
    app.kubernetes.io/instance: my-local-ai
    app.kubernetes.io/version: "1.25.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: local-ai
    app.kubernetes.io/instance: my-local-ai
---
# Source: local-ai/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-local-ai
  labels:
    helm.sh/chart: local-ai-3.0.0
    app.kubernetes.io/name: local-ai
    app.kubernetes.io/instance: my-local-ai
    app.kubernetes.io/version: "1.25.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: local-ai
      app.kubernetes.io/instance: my-local-ai
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: local-ai
        app.kubernetes.io/instance: my-local-ai
      annotations:
        checksum/configmap: 7c02cc589690cc0ef2ad2b33d6093bbb4f04d5077602b83b7883566c52f1232c
    spec:
      
      serviceAccountName: my-local-ai
      securityContext:
        {}
      initContainers:
        - name: init
          securityContext:
            {}
          image: quay.io/go-skynet/local-ai:v1.25.0-ffmpeg
          imagePullPolicy: IfNotPresent
          command:
            - /bin/bash
            - -ec
            - |
              mkdir -p /data/generated-audio
              mkdir -p /data/generated-images
              mkdir -p /data/models
          resources:
            {}
          volumeMounts:
            - name: data
              mountPath: /data
      containers:
        - name: local-ai
          securityContext:
            {}
          image: quay.io/go-skynet/local-ai:v1.25.0-ffmpeg
          imagePullPolicy: IfNotPresent
          env:
            - name: ADDRESS
              value: ":8080"
            - name: AUDIO_PATH
              value: /data/generated-audio
            - name: IMAGE_PATH
              value: /data/generated-images
            - name: MODELS_PATH
              value: /data/models
            - name: GALLERIES
              value: "[]"
            - name: PRELOAD_MODELS_CONFIG
              value: /config/preload-models.json
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: http
            initialDelaySeconds: 0
            periodSeconds: 10
            timeoutSeconds: 1
            failureThreshold: 3
            successThreshold: 1
          readinessProbe:
            httpGet:
              path: /readyz
              port: http
            initialDelaySeconds: 0
            periodSeconds: 10
            timeoutSeconds: 1
            failureThreshold: 3
            successThreshold: 1
          resources:
            {}
          volumeMounts:
            - name: config
              mountPath: /config/preload-models.json
              subPath: preload-models.json
            - name: data
              mountPath: /data
      volumes:
        - name: config
          configMap:
            name: my-local-ai
        - name: data
          emptyDir: {}
---
# Source: local-ai/templates/tests/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-local-ai-tests
  labels:
    helm.sh/chart: local-ai-3.0.0
    app.kubernetes.io/name: local-ai
    app.kubernetes.io/instance: my-local-ai
    app.kubernetes.io/version: "1.25.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: tests
  annotations:
    helm.sh/hook: test
data:
  test_all.py: |
    import requests


    def test_service_connection():
        url = "http://my-local-ai:8080/v1/models"

        response = requests.get(url)

        assert response.status_code == 200
---
# Source: local-ai/templates/tests/pod.yaml
apiVersion: v1
kind: Pod
metadata:
  name: my-local-ai-tests
  labels:
    helm.sh/chart: local-ai-3.0.0
    app.kubernetes.io/name: local-ai
    app.kubernetes.io/instance: my-local-ai
    app.kubernetes.io/version: "1.25.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: tests
  annotations:
    helm.sh/hook: test
spec:
  
  containers:
    - name: tests
      image: ghcr.io/cowboysysop/pytest:1.0.35
      imagePullPolicy: IfNotPresent
      volumeMounts:
        - name: tests
          mountPath: /tests
          readOnly: true
      workingDir: /tests
  restartPolicy: Never
  volumes:
    - name: tests
      configMap:
        name: my-local-ai-tests
