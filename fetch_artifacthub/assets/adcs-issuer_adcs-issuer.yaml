---
# Source: adcs-issuer/templates/serviceaccount-rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: adcs-issuer
  namespace: default
  labels:
    helm.sh/chart: adcs-issuer-3.0.0
    app.kubernetes.io/name: adcs-issuer
    app.kubernetes.io/instance: my-adcs-issuer
    app.kubernetes.io/version: "2.1.2"
    app.kubernetes.io/managed-by: Helm
---
# Source: adcs-issuer/templates/adcsissuer-crd.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: adcsissuers.adcs.certmanager.csf.nokia.com
  annotations:
    cert-manager.io/inject-ca-from: default/my-adcs-issuer-
    controller-gen.kubebuilder.io/version: v0.7.0
  labels:
    helm.sh/chart: adcs-issuer-3.0.0
    app.kubernetes.io/name: adcs-issuer
    app.kubernetes.io/instance: my-adcs-issuer
    app.kubernetes.io/version: "2.1.2"
    app.kubernetes.io/managed-by: Helm
spec:
  group: adcs.certmanager.csf.nokia.com
  names:
    kind: AdcsIssuer
    listKind: AdcsIssuerList
    plural: adcsissuers
    singular: adcsissuer
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: AdcsIssuer is the Schema for the adcsissuers API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: AdcsIssuerSpec defines the desired state of AdcsIssuer
            properties:
              caBundle:
                description: CABundle is a PEM encoded TLS certifiate to use to verify
                  connections to the ADCS server.
                format: byte
                type: string
              credentialsRef:
                description: CredentialsRef is a reference to a Secret containing the
                  username and password for the ADCS server. The secret must contain
                  two keys, 'username' and 'password'.
                properties:
                  name:
                    description: Name of the referent.
                    type: string
                required:
                - name
                type: object
              retryInterval:
                description: How often to retry in case of communication errors (in
                  time.ParseDuration() format) Default 1 hour.
                type: string
              statusCheckInterval:
                description: How often to check for request status in the server (in
                  time.ParseDuration() format) Default 6 hours.
                type: string
              templateName:
                description: Which ADCS Template should this issuer use Defaults to
                  the what is specified in main.go or as an cli option.
                type: string
              url:
                description: URL is the base URL for the ADCS instance
                type: string
            required:
            - credentialsRef
            - url
            type: object
          status:
            description: AdcsIssuerStatus defines the observed state of AdcsIssuer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: adcs-issuer/templates/adcsrequest-crd.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: adcsrequests.adcs.certmanager.csf.nokia.com
  annotations:
    cert-manager.io/inject-ca-from: default/my-adcs-issuer-
    controller-gen.kubebuilder.io/version: v0.7.0
  labels:
    helm.sh/chart: adcs-issuer-3.0.0
    app.kubernetes.io/name: adcs-issuer
    app.kubernetes.io/instance: my-adcs-issuer
    app.kubernetes.io/version: "2.1.2"
    app.kubernetes.io/managed-by: Helm
spec:
  group: adcs.certmanager.csf.nokia.com
  names:
    kind: AdcsRequest
    listKind: AdcsRequestList
    plural: adcsrequests
    singular: adcsrequest
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.state
      name: State
      type: string
    name: v1
    schema:
      openAPIV3Schema:
        description: AdcsRequest is the Schema for the adcsrequests API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: AdcsRequestSpec defines the desired state of AdcsRequest
            properties:
              csr:
                description: Certificate signing request bytes in PEM encoding. This
                  will be used when finalizing the request. This field must be set on
                  the request.
                format: byte
                type: string
              issuerRef:
                description: IssuerRef references a properly configured AdcsIssuer which
                  should be used to serve this AdcsRequest. If the Issuer does not exist,
                  processing will be retried. If the Issuer is not an 'ADCS' Issuer,
                  an error will be returned and the ADCSRequest will be marked as failed.
                properties:
                  group:
                    description: Group of the resource being referred to.
                    type: string
                  kind:
                    description: Kind of the resource being referred to.
                    type: string
                  name:
                    description: Name of the resource being referred to.
                    type: string
                required:
                - name
                type: object
            required:
            - csr
            - issuerRef
            type: object
          status:
            description: AdcsRequestStatus defines the observed state of AdcsRequest
            properties:
              id:
                description: ID of the Request assigned by the ADCS. This will initially
                  be empty when the resource is first created. The ADCSRequest controller
                  will populate this field when the Request is accepted by ADCS. This
                  field will be immutable after it is initially set.
                type: string
              reason:
                description: Reason optionally provides more information about a why
                  the AdcsRequest is in the current state.
                type: string
              state:
                description: State contains the current state of this ADCSRequest resource.
                  States 'ready' and 'rejected' are 'final'
                enum:
                - pending
                - ready
                - errored
                - rejected
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: adcs-issuer/templates/clusteradcsissuer-crd.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: clusteradcsissuers.adcs.certmanager.csf.nokia.com
  annotations:
    cert-manager.io/inject-ca-from: default/my-adcs-issuer-
    controller-gen.kubebuilder.io/version: v0.7.0
  labels:
    helm.sh/chart: adcs-issuer-3.0.0
    app.kubernetes.io/name: adcs-issuer
    app.kubernetes.io/instance: my-adcs-issuer
    app.kubernetes.io/version: "2.1.2"
    app.kubernetes.io/managed-by: Helm
spec:
  group: adcs.certmanager.csf.nokia.com
  names:
    kind: ClusterAdcsIssuer
    listKind: ClusterAdcsIssuerList
    plural: clusteradcsissuers
    singular: clusteradcsissuer
  scope: Cluster
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: ClusterAdcsIssuer is the Schema for the clusteradcsissuers API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ClusterAdcsIssuerSpec defines the desired state of ClusterAdcsIssuer
            properties:
              caBundle:
                description: CABundle is a PEM encoded TLS certifiate to use to verify
                  connections to the ADCS server.
                format: byte
                type: string
              credentialsRef:
                description: CredentialsRef is a reference to a Secret containing the
                  username and password for the ADCS server. The secret must contain
                  two keys, 'username' and 'password'.
                properties:
                  name:
                    description: Name of the referent.
                    type: string
                required:
                - name
                type: object
              retryInterval:
                description: How often to retry in case of communication errors (in
                  time.ParseDuration() format) Default 1 hour.
                type: string
              statusCheckInterval:
                description: How often to check for request status in the server (in
                  time.ParseDuration() format) Default 6 hours.
                type: string
              templateName:
                description: Which ADCS Template should this issuer use Defaults to
                  the what is specified in main.go or as an cli option.
                type: string
              url:
                description: URL is the base URL for the ADCS instance
                type: string
            required:
            - credentialsRef
            - url
            type: object
          status:
            description: ClusterAdcsIssuerStatus defines the observed state of ClusterAdcsIssuer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: adcs-issuer/templates/cert-manager-controller-approve-dcs-certmanager-csf-nokia-com-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-adcs-issuer-cert-manager-controller-approve-adcs-certmanager-csf-nokia-com
  labels:
    helm.sh/chart: adcs-issuer-3.0.0
    app.kubernetes.io/name: adcs-issuer
    app.kubernetes.io/instance: my-adcs-issuer
    app.kubernetes.io/version: "2.1.2"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - cert-manager.io
    resourceNames:
      - adcsissuers.adcs.certmanager.csf.nokia.com/*
      - clusteradcsissuers.adcs.certmanager.csf.nokia.com/*
    resources:
      - signers
    verbs:
      - approve
---
# Source: adcs-issuer/templates/manager-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-adcs-issuer-manager-role
  labels:
    helm.sh/chart: adcs-issuer-3.0.0
    app.kubernetes.io/name: adcs-issuer
    app.kubernetes.io/instance: my-adcs-issuer
    app.kubernetes.io/version: "2.1.2"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - adcs.certmanager.csf.nokia.com
    resources:
      - adcsissuers
      - adcsissuers/status
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - adcs.certmanager.csf.nokia.com
    resources:
      - adcsrequests
      - adcsrequests/status
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - adcs.certmanager.csf.nokia.com
    resources:
      - clusteradcsissuers
      - clusteradcsissuers/status
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - cert-manager.io
    resources:
      - certificaterequests
      - certificaterequests/finalizers
      - certificaterequests/status
      - certificates/finalizers
    verbs:
      - get
      - list
      - patch
      - update
      - watch
---
# Source: adcs-issuer/templates/proxy-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-adcs-issuer-proxy-role
  labels:
    helm.sh/chart: adcs-issuer-3.0.0
    app.kubernetes.io/name: adcs-issuer
    app.kubernetes.io/instance: my-adcs-issuer
    app.kubernetes.io/version: "2.1.2"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - authentication.k8s.io
    resources:
      - tokenreviews
    verbs:
      - create
  - apiGroups:
      - authorization.k8s.io
    resources:
      - subjectaccessreviews
    verbs:
      - create
---
# Source: adcs-issuer/templates/cert-manager-controller-approve-dcs-certmanager-csf-nokia-com-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-adcs-issuer-cert-manager-controller-approve-adcs-certmanager-csf-nokia-com
  labels:
    helm.sh/chart: adcs-issuer-3.0.0
    app.kubernetes.io/name: adcs-issuer
    app.kubernetes.io/instance: my-adcs-issuer
    app.kubernetes.io/version: "2.1.2"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-adcs-issuer-cert-manager-controller-approve-adcs-certmanager-csf-nokia-com
subjects:
  - kind: ServiceAccount
    name: adcs-issuer
    namespace: default
  - kind: ServiceAccount
    name: cert-manager
    namespace: cert-manager
---
# Source: adcs-issuer/templates/manager-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-adcs-issuer-manager-rolebinding
  labels:
    helm.sh/chart: adcs-issuer-3.0.0
    app.kubernetes.io/name: adcs-issuer
    app.kubernetes.io/instance: my-adcs-issuer
    app.kubernetes.io/version: "2.1.2"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-adcs-issuer-manager-role
subjects:
  - kind: ServiceAccount
    name: adcs-issuer
    namespace: default
---
# Source: adcs-issuer/templates/proxy-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-adcs-issuer-proxy-rolebinding
  labels:
    helm.sh/chart: adcs-issuer-3.0.0
    app.kubernetes.io/name: adcs-issuer
    app.kubernetes.io/instance: my-adcs-issuer
    app.kubernetes.io/version: "2.1.2"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-adcs-issuer-proxy-role
subjects:
  - kind: ServiceAccount
    name: adcs-issuer
    namespace: default
---
# Source: adcs-issuer/templates/leader-election-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: my-adcs-issuer-leader-election-role
  namespace: default
  labels:
    helm.sh/chart: adcs-issuer-3.0.0
    app.kubernetes.io/name: adcs-issuer
    app.kubernetes.io/instance: my-adcs-issuer
    app.kubernetes.io/version: "2.1.2"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - ""
    resources:
      - configmaps/status
    verbs:
      - get
      - update
      - patch
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - get
      - update
      - create
---
# Source: adcs-issuer/templates/leader-election-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: my-adcs-issuer-leader-election-rolebinding
  namespace: default
  labels:
    helm.sh/chart: adcs-issuer-3.0.0
    app.kubernetes.io/name: adcs-issuer
    app.kubernetes.io/instance: my-adcs-issuer
    app.kubernetes.io/version: "2.1.2"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: my-adcs-issuer-leader-election-role
subjects:
  - kind: ServiceAccount
    name: adcs-issuer
    namespace: default
---
# Source: adcs-issuer/templates/metrics-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-adcs-issuer-controller-manager-metrics-service
  namespace: default
  labels:
    control-plane: controller-manager
    helm.sh/chart: adcs-issuer-3.0.0
    app.kubernetes.io/name: adcs-issuer
    app.kubernetes.io/instance: my-adcs-issuer
    app.kubernetes.io/version: "2.1.2"
    app.kubernetes.io/managed-by: Helm
  annotations:
    prometheus.io/port: "8443"
    prometheus.io/scheme: https
    prometheus.io/scrape: "true"
spec:
  type: ClusterIP
  selector:
    control-plane: controller-manager
    app.kubernetes.io/name: adcs-issuer
    app.kubernetes.io/instance: my-adcs-issuer
  ports:
    - name: https
      port: 8443
      targetPort: https
---
# Source: adcs-issuer/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-adcs-issuer-controller-manager
  namespace: default
  labels:
    control-plane: controller-manager
    helm.sh/chart: adcs-issuer-3.0.0
    app.kubernetes.io/name: adcs-issuer
    app.kubernetes.io/instance: my-adcs-issuer
    app.kubernetes.io/version: "2.1.2"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      control-plane: controller-manager
      app.kubernetes.io/name: adcs-issuer
      app.kubernetes.io/instance: my-adcs-issuer
  template:
    metadata:
      labels:
        control-plane: controller-manager
        app.kubernetes.io/name: adcs-issuer
        app.kubernetes.io/instance: my-adcs-issuer
    spec:
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: "topology.kubernetes.io/zone"
          whenUnsatisfiable: ScheduleAnyway

      containers:
        - name: manager
          image: djkormo/adcs-issuer:2.1.2
          imagePullPolicy: Always
          command:
            - /manager
          args:
            - --cluster-resource-namespace=adcs-issuer
            - --disable-approved-check=false
            - --enable-leader-election=true
            - --zap-log-level=5
          env:
            - name: KUBERNETES_CLUSTER_DOMAIN
              value: "cluster.local"
            - name: ENABLE_WEBHOOKS
              value: "false"
            - name: ENABLE_DEBUG
              value: "false"
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          ports:
            - containerPort: 9443
              name: webhook-server
              protocol: TCP
          resources:
            limits:
              cpu: 100m
              memory: 500Mi
            requests:
              cpu: 100m
              memory: 100Mi
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8081
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 20
            timeoutSeconds: 20
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8081
              scheme: HTTP
            periodSeconds: 10
            timeoutSeconds: 10
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - ALL
          volumeMounts:
      terminationGracePeriodSeconds: 30
      securityContext:
        runAsUser: 1000
      serviceAccountName: adcs-issuer
      volumes:
---
# Source: adcs-issuer/templates/simulator-example-certificate.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: adcs-sim-certificate
  namespace: default
  labels:
    helm.sh/chart: adcs-issuer-3.0.0
    app.kubernetes.io/name: adcs-issuer
    app.kubernetes.io/instance: my-adcs-issuer
    app.kubernetes.io/version: "2.1.2"
    app.kubernetes.io/managed-by: Helm
spec:
  commonName: example.com
  dnsNames:
    - adcs1.example.com
    - adcs2.example.com
  issuerRef:
    group: adcs.certmanager.csf.nokia.com
    kind: ClusterAdcsIssuer
    name: adcs-sim-adcsclusterissuer
  duration: 2160h # 90d
  renewBefore: 360h # 15d
  subject:
    organizations:
      - Your Organization
  secretName: adcs-sim-secret
