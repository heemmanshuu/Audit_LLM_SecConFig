---
# Source: openfunction/templates/namespaces.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: dapr-system
---
# Source: openfunction/templates/namespaces.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: keda
---
# Source: openfunction/templates/namespaces.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: knative-serving
---
# Source: openfunction/templates/namespaces.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: tekton-pipelines
---
# Source: openfunction/templates/namespaces.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: shipwright-build
---
# Source: openfunction/charts/knative-serving/templates/activator/pdb.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  namespace: knative-serving
  name: activator-pdb
  labels:
    app.kubernetes.io/component: activator
    serving.knative.dev/release: v1.3.2
    helm.sh/chart: knative-serving-1.3.2
    app.kubernetes.io/instance: my-openfunction
    app.kubernetes.io/version: "1.3.2"
    app.kubernetes.io/managed-by: Helm
spec:
  minAvailable: 80%
  selector:
    matchLabels:
      app: activator
---
# Source: openfunction/charts/knative-serving/templates/webhook/pdb.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  namespace: knative-serving
  name: webhook-pdb
  labels:
    app.kubernetes.io/component: webhook
    serving.knative.dev/release: v1.3.2
    helm.sh/chart: knative-serving-1.3.2
    app.kubernetes.io/instance: my-openfunction
    app.kubernetes.io/version: "1.3.2"
    app.kubernetes.io/managed-by: Helm
spec:
  minAvailable: 80%
  selector:
    matchLabels:
      app: webhook
---
# Source: openfunction/charts/contour/templates/contour/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: contour-contour
  namespace: "projectcontour"
  labels:
    app.kubernetes.io/name: contour
    helm.sh/chart: contour-10.2.2
    app.kubernetes.io/instance: my-openfunction
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: contour
automountServiceAccountToken: true
---
# Source: openfunction/charts/contour/templates/envoy/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: contour-envoy
  namespace: "projectcontour"
  labels:
    app.kubernetes.io/name: contour
    helm.sh/chart: contour-10.2.2
    app.kubernetes.io/instance: my-openfunction
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: envoy
automountServiceAccountToken: false
---
# Source: openfunction/charts/dapr/charts/dapr_rbac/templates/injector.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  namespace: dapr-system
  name: dapr-injector
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: my-openfunction
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.11.3
---
# Source: openfunction/charts/dapr/charts/dapr_rbac/templates/operator.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  namespace: dapr-system
  name: dapr-operator
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: my-openfunction
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.11.3
---
# Source: openfunction/charts/dapr/charts/dapr_rbac/templates/placement.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  namespace: dapr-system
  name: dapr-placement
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: my-openfunction
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.11.3
---
# Source: openfunction/charts/dapr/charts/dapr_rbac/templates/sentry.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  namespace: dapr-system
  name: dapr-sentry
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: my-openfunction
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.11.3
---
# Source: openfunction/charts/keda/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  namespace: keda
  labels:
    app.kubernetes.io/name: keda-operator
    
    helm.sh/chart: keda-2.11.2
    app.kubernetes.io/component: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-openfunction
    app.kubernetes.io/part-of: keda-operator
    app.kubernetes.io/version: 2.11.2
  name: keda-operator
  namespace: keda
automountServiceAccountToken: true
---
# Source: openfunction/charts/knative-serving/templates/controller/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  namespace: knative-serving
  name: controller
  labels:
    app.kubernetes.io/component: controller
    serving.knative.dev/release: v1.3.2
    helm.sh/chart: knative-serving-1.3.2
    app.kubernetes.io/instance: my-openfunction
    app.kubernetes.io/version: "1.3.2"
    app.kubernetes.io/managed-by: Helm
---
# Source: openfunction/charts/shipwright-build/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  namespace: shipwright-build
  name: shipwright-build-controller
  labels:
    helm.sh/chart: shipwright-build-0.10.0
    app.kubernetes.io/name: shipwright-build
    app.kubernetes.io/instance: my-openfunction
    app.kubernetes.io/part-of: shipwright-build
    app.kubernetes.io/version: "v0.10.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: openfunction/charts/tekton-pipelines/templates/controller/service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  namespace: tekton-pipelines
  name: tekton-pipelines-controller
  labels:
    app.kubernetes.io/component: controller
    helm.sh/chart: tekton-pipelines-0.37.2
    app.kubernetes.io/name: tekton-pipelines
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
    app.kubernetes.io/version: "v0.37.2"
    app.kubernetes.io/managed-by: Helm
---
# Source: openfunction/charts/tekton-pipelines/templates/webhook/service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  namespace: tekton-pipelines
  name: tekton-pipelines-webhook
  labels:
    app.kubernetes.io/component: webhook
    helm.sh/chart: tekton-pipelines-0.37.2
    app.kubernetes.io/name: tekton-pipelines
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
    app.kubernetes.io/version: "v0.37.2"
    app.kubernetes.io/managed-by: Helm
---
# Source: openfunction/templates/controller/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-openfunction-controller-manager
  labels:
    helm.sh/chart: openfunction-0.7.0
    app.kubernetes.io/name: openfunction
    app.kubernetes.io/instance: my-openfunction
    app.kubernetes.io/version: "v1.2.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: openfunction/charts/dapr/charts/dapr_operator/templates/dapr_operator_deployment.yaml
apiVersion: v1
kind: Secret
metadata:
  namespace: dapr-system
  name: dapr-webhook-cert
  labels:
    app: dapr-operator
    app.kubernetes.io/component: operator
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: my-openfunction
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.11.3
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUR0akNDQXA2Z0F3SUJBZ0lSQUtDM3dybG1LZ1R0REJlM2JuTmIyd0F3RFFZSktvWklodmNOQVFFTEJRQXcKR2pFWU1CWUdBMVVFQXhNUFpHRndjaTEzWldKb2IyOXJMV05oTUI0WERUSTBNRGt4TmpFd01qYzBNMW9YRFRNMApNRGt4TkRFd01qYzBNMW93RnpFVk1CTUdBMVVFQXhNTVpHRndjaTEzWldKb2IyOXJNSUlCSWpBTkJna3Foa2lHCjl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF2TUI2RHBmMndrL3FOcVduaStrelhvTVN4K1p2QUs1OVZibkgKZ1prYWlpTitpZXhrd0V5ZElEbGh1dTFLN2tMT2JzZDc1QnZSNDM2WkswRm8xNVFXdm5udWloa3ByemUzeE9kKwpISkcrUy93QlIvTE1sQnE5bmNjR0dnUWtIQ3diQU5jZEJpS3ZLSDJxR2ZLb05YWGZwUXVsM1ZVU0tkL1NSZW9pCm9TblJDWXlIaldDVUp6THVVeDRkOXVaUDYrYjJvaVF3NXVQRTMySTlPZVlwM1QwdTkxVlFvL05rZllwTVZPZnEKU09FRTJYSmQ3UHl2c3pGNG0rbm95WXE3WjFYWmZSMnZESHczWjV3M2dCQWdjWVVGclUraTBJUmxSd2ZkU0dmNgorY1ppZ2t3cmhtalhDZGpFRC8yVmlEdS8xWkFkZWtyVzJ1T2JWQWZsR2JPTWRuUThxUUlEQVFBQm80SDVNSUgyCk1BNEdBMVVkRHdFQi93UUVBd0lGb0RBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXcKREFZRFZSMFRBUUgvQkFJd0FEQWZCZ05WSFNNRUdEQVdnQlJadHFidUgwVXVhVE05bUtvM0Q4bVplYmY4Y1RDQgpsUVlEVlIwUkJJR05NSUdLZ2hoa1lYQnlMWGRsWW1odmIyc3VaR0Z3Y2kxemVYTjBaVzJDSEdSaGNISXRkMlZpCmFHOXZheTVrWVhCeUxYTjVjM1JsYlM1emRtT0NKR1JoY0hJdGQyVmlhRzl2YXk1a1lYQnlMWE41YzNSbGJTNXoKZG1NdVkyeDFjM1JsY29JcVpHRndjaTEzWldKb2IyOXJMbVJoY0hJdGMzbHpkR1Z0TG5OMll5NWpiSFZ6ZEdWeQpMbXh2WTJGc01BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQ1NYbWpvdGtHVWlBQUFVZVlVSHJjb0JjV3BzU2tKCkdhS1JEeDNZTnFmQU53NXFsb0E0VVhJSHlkMnR3bU9NaStvaDFCTU1pYWRCd01ta3ErUWJCcWpqZzh3cjF3WmIKdXV2aS9iMGFXUWlsdnlDY0V3ckFDZVV0U1M3c2M5Z011K081V0tQWXIrQ2dWc3NPWEw3ZjBxcVMxZkZaTkd4cwpMN3Vxc3hCQlFmNUl2UjQyYklIOEJaeUFoK01mQ2VFOTlaTEhIQkF5THBIdDZ1ajVmQTErN3Rib1U0L2h0Z1IvCm8xNFJ6ZGh5V1hqcFJkS2hYSTF1K3BycVozMW5nbjFJTjc5aEZvbzZEd0JrT1FBbkljMzcwdEdGOG0rTXN4VEoKYzFtWGdtV2ozeHp0WldBQVVxT3JtRUlDZ2hFVDdkdm1nT3JlZ2J4RjZBb3hiQWFKd1kwaFlzaDQKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  

  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdk1CNkRwZjJ3ay9xTnFXbmkra3pYb01TeCtadkFLNTlWYm5IZ1prYWlpTitpZXhrCndFeWRJRGxodXUxSzdrTE9ic2Q3NUJ2UjQzNlpLMEZvMTVRV3ZubnVpaGtwcnplM3hPZCtISkcrUy93QlIvTE0KbEJxOW5jY0dHZ1FrSEN3YkFOY2RCaUt2S0gycUdmS29OWFhmcFF1bDNWVVNLZC9TUmVvaW9TblJDWXlIaldDVQpKekx1VXg0ZDl1WlA2K2Iyb2lRdzV1UEUzMkk5T2VZcDNUMHU5MVZRby9Oa2ZZcE1WT2ZxU09FRTJYSmQ3UHl2CnN6RjRtK25veVlxN1oxWFpmUjJ2REh3M1o1dzNnQkFnY1lVRnJVK2kwSVJsUndmZFNHZjYrY1ppZ2t3cmhtalgKQ2RqRUQvMlZpRHUvMVpBZGVrclcydU9iVkFmbEdiT01kblE4cVFJREFRQUJBb0lCQUZ1QUN5dHI2NGxDNkUxWgpmS0ZNaVVSMTBmTHArRUdpVk12cjVaVWp2VVBkOVFlemV4dmxoLzRKRXlGa3l3QTVqbzBSVXpPL2NMNFJydnJUCkdKbjVCaFdNVW1ETDFmTkUxV2MwdVdQc0d3NEd1akJBdVgvS2ZzVXZwL3VRcWxpbDRPbEZYcUtNeWRDZEtvcXQKb1hGWkZQT1RjL0tadk5aajFERmtVU2xEZGp4aitHWFoyQ1EvbFNNZklKblF0SWdFTldhT0c5ditvRVRaQ3pSMApkZ0JxaVJaS2I2ajgvTExPNlF1VlJYaXJLU3ptTTFoZ2N4VUJQOGl6dUJwOUoxc0phejNselJ5QmMzN0RXendRCkdZdHZuS2dQb1IzL3N6ZWV6ckFndlV3cFllK01DMnl1THhOU1V6aDJwSkN6Wi92RzRVWDB5WHpkSnNoWi9rOWgKZGdFY3E0a0NnWUVBMlBxQ3JyZEl5cUFQZGpxd296M0Z6V0E2RW5pdExPQnErZlp4MDZJbndGa0k4bi8xaVdNSApWd2J6eWcyeWJWVWNDcnpuYU1xMmREdmZHVUVwb0llQjNwb1IybFV3dVpoRHZMREo0SUFKVUttbnBvbVY5aDNYCkNSbWtQN1lJZjJxMVUvUmVnU0xmd3psZ0tVNVlTSmc0OEFWOUtER1JMeGZ6ejhiOU9kcmxsZWNDZ1lFQTNySnYKalJzRXhJdS9wRHIvbm9aUlJZamNRWU9MOVFseVd1U3lMNHUwOTN2RUU1Zm9XQUMrMklpbEdmcU5heTZLb28yNwozdWFrQW1qUU1ON2xKS3ZWQm5yTTlIWXkwVzdxOE1BQWdPMFRCSlN1SmZqRFZLZmtxYlc5UWUvM1Z0Zzg4S3hQCjlUb3pITk0vY1d1ejZ5YTVHdUpUZnhzOVdKd08zMTlSRGtXYkp1OENnWUIwZHBvNGY0YWh4Q0lvZXI0ZkVPUWcKSlp0bUdNSVRTVzRDTjJiSGlzMDljRXplSlJLOUtKdGkrZ2RYRjkwQzFHRVYzbWx6bFFNMEJvTHNnazUrck4xbgpoMWszME93elltaFJXcTh4UW1nOWxLSzVRRFp2QVh0UGxpVFVVYmZqOUhuWjAxdjZncWFLbWp4a1Qzb1JsU3RTCm9nK1l5R28rVmVQM1RiN1VGQXVSVndLQmdRQ2diTFJWVnhCaE1qYjA3UmQxc0ZiZG01RG5sUWIrbHphTTZkQysKMVlxZytjU3ZSTEE0clJqT1RlbDV4SGVacmFacklXVWtWc3Z4ZkdYMXZxd2RkYmQ0K24rbzMza09URFB0Q0xPVQpMTFNWaVRIRzR1UjdtSkx0K3FFQzNnWTB4b05uOFFtTW84ZHNUWFdYbERuQS9WMDlVNnRJbG12ajZGQUNjOXlsClJsbFZld0tCZ0JHa01Db0Fqbjl1amF1Rk9TWEF2SWkxa0pjc2lZQ0JhYXVmUnJkdGxYSUo3REhuTG9NNExuVTQKeHBlSDVPTExucVNvZGdKcWQ4WUJsYWZBNDBWYWE1Lyt6bVpHUytzUEFOL0pRQzcvd0pOemFDUnh2M2NhTHVPdAppOWhveGxubzN2SnZVeFY5WEYyd2I0U3Q2UGJodGE4bVJpSjE5V3FjYmNpUWxTbUl3amp6Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: openfunction/charts/dapr/charts/dapr_operator/templates/dapr_operator_deployment.yaml
apiVersion: v1
kind: Secret
metadata:
  namespace: dapr-system
  name: dapr-webhook-ca
  labels:
    app: dapr-operator
    app.kubernetes.io/component: operator
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: my-openfunction
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.11.3
data:
  caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURIekNDQWdlZ0F3SUJBZ0lRRHNuUWVEdHNqdlpDVlZYbXJhWDF2REFOQmdrcWhraUc5dzBCQVFzRkFEQWEKTVJnd0ZnWURWUVFERXc5a1lYQnlMWGRsWW1odmIyc3RZMkV3SGhjTk1qUXdPVEUyTVRBeU56UXpXaGNOTXpRdwpPVEUwTVRBeU56UXpXakFhTVJnd0ZnWURWUVFERXc5a1lYQnlMWGRsWW1odmIyc3RZMkV3Z2dFaU1BMEdDU3FHClNJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUM2SXNrMUxSK2xtSUNDVUs2ZS8yVmdQS3I4UjR2VFVINS8KU1Bma29SbDNUQ2ZrbE1ndWdRNnZmVlhFeWVyZ01Ub2p6d0hySFoyZ01uaWVBRGJsclhoRURxODlmZlBnaTRYOApUT25yNHJzSi9ZaGJLeDRoQXp3d2gyQzR6WkpZaERSZys1Tjk2bDVNa1c3WFJBbTh1VStrYk5NQXdhQVBWaDROCjNldHduZ2FaOUhCZ2ZjOWhHODVWS3NLa0hVYlRaRUNCQ00rRkR6RVNVdVoxVEJhWExsUGtmbktaL2FRdzVrYlAKRE1HNUcwSkxwK0FxdVZmVzRrYTgrUmVOZDZQcG9OUk45ZGNBSnpaMjZ3WDRJczg4ajJGWUEyVVU2QmpRaWZsMgptaGhQaEc0NWUwelNpTEI5Z21DZmpEZjdIVi9XSHlUbjZJQ0JZdWhTVXFhWGtvdTlqajZYQWdNQkFBR2pZVEJmCk1BNEdBMVVkRHdFQi93UUVBd0lDcERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXcKRHdZRFZSMFRBUUgvQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVV2JhbTdoOUZMbWt6UFppcU53L0ptWG0zL0hFdwpEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBQ2tsS1VYRy9oVUNTOG5UYVhOREkyeWt0VURCck1xQmxaTnNYWjJxCnp2b3NrZkpaaTdrNXVGN1VnUngyak5lYmxITVZ1VERSZXhaMXBmaU0rUThjWm9iRFMzOGhqWkdwZzZEbXpZNTcKZ0hlUnE4VUhwNm9WYXVJQ2JGT2tyYXNHZzRWU0tEL2xZS1NQd1A1NWROMjhBNzdSampQRVpuazBhK1QrbFEybQpBMFk4Z28vWjIrOEh3bkFNWmF3d1FwamNML3d5REg5MnZFQlNXd2djdnVHRjBJcFM5YityaFBPT1hBVllhakNwCjJwL1BEakRBMmsrUW1hYmt2eDBTZWViaFJvamlFRVpUdFI4WWxzT0hMUWcvdG53WUFEekMwVHp4YjFxcFNlY2MKN2hvL0tEVXZTamdUNHhyeUFiM0lSV3plTUh6NVBmV28wSkFWd0w0MWl1Z0l5ZWM9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
---
# Source: openfunction/charts/dapr/charts/dapr_sentry/templates/dapr_sentry_deployment.yaml
apiVersion: v1
kind: Secret
metadata:
  namespace: dapr-system
  name: dapr-trust-bundle
  labels:
    app: dapr-sentry
    app.kubernetes.io/component: sentry
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: my-openfunction
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.11.3
data:
---
# Source: openfunction/charts/dapr/charts/dapr_sidecar_injector/templates/dapr_sidecar_injector_webhook_config.yaml
apiVersion: v1
kind: Secret
metadata:
  namespace: dapr-system
  name: dapr-sidecar-injector-cert
  labels:
    app: dapr-sidecar-injector
    app.kubernetes.io/component: sidecar-injector
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: my-openfunction
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.11.3
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUQ3akNDQXRhZ0F3SUJBZ0lSQUxBVmdiSlU4Mys4SUUxc1pTZFM5VjB3RFFZSktvWklodmNOQVFFTEJRQXcKSXpFaE1COEdBMVVFQXhNWVpHRndjaTF6YVdSbFkyRnlMV2x1YW1WamRHOXlMV05oTUI0WERUSTBNRGt4TmpFdwpNamMwTTFvWERUTTBNRGt4TkRFd01qYzBNMW93SURFZU1Cd0dBMVVFQXhNVlpHRndjaTF6YVdSbFkyRnlMV2x1CmFtVmpkRzl5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF5bEQ1MEc3bXpQaG0KVXFkVWNZdGpSYmR6TG9oTnUxQy85cStaVTFoUGNVS2tZcVF0bXd5MmZ5bDdjbi9NYWNxTTdJTW5rek9lVjNJYgp4SmxCRjAzK2VyallxRGI0eUZXSHhabWI4SndPYXBoVlE4RVJuN3M4VUhaaDE4SXJTRnRyNFdieHVUOVh1aGNLCkJLaGpsYmVRYlhNbzBBUjdkWlBJSVlPakpvRXMrT2pWNjN5TTRocEFOTFB2a0E5TXhSb3RwRlpJb0l3d2EyOXkKWlkrWFl6aldUSmpBT2l2VXpyM1B3blVxbld6ZGlOaWZPZm5nbW11NGp5M0lQOVBqc292azF2VVcwVUxsOVFYMgpldWFWTFRCd1VGcDZaWEdOWTIzVWlWOXlBR0xxMUNPQ1UzWDlneVp0TTNBMWt2ZFFKU1pHUUNodjNKd3hiU2dGCkZHY3JlMVlkU1FJREFRQUJvNElCSGpDQ0FSb3dEZ1lEVlIwUEFRSC9CQVFEQWdXZ01CMEdBMVVkSlFRV01CUUcKQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBTUJnTlZIUk1CQWY4RUFqQUFNQjhHQTFVZEl3UVlNQmFBRkxhawpYTkhkQmdXeW1iZ2UzeGdzd1RhVHFNL1FNSUc1QmdOVkhSRUVnYkV3Z2E2Q0lXUmhjSEl0YzJsa1pXTmhjaTFwCmJtcGxZM1J2Y2k1a1lYQnlMWE41YzNSbGJZSWxaR0Z3Y2kxemFXUmxZMkZ5TFdsdWFtVmpkRzl5TG1SaGNISXQKYzNsemRHVnRMbk4yWTRJdFpHRndjaTF6YVdSbFkyRnlMV2x1YW1WamRHOXlMbVJoY0hJdGMzbHpkR1Z0TG5OMgpZeTVqYkhWemRHVnlnak5rWVhCeUxYTnBaR1ZqWVhJdGFXNXFaV04wYjNJdVpHRndjaTF6ZVhOMFpXMHVjM1pqCkxtTnNkWE4wWlhJdWJHOWpZV3d3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUk1aitkOGpjS2NIYm8xVEJtRWwKeW1pRHArNkkxWm1peDJ4eVN0V2hVZmFKVStVbTVRVGI5UllKeVF5OENYbSt2Mm56UUJlSnMzOXlhVDJwZXZOcgpiWXE3bnMrZ0NQcFpoM0lGSFE3OE5idzk4VVphd0V1d3FXd0pKRGk0UWJNTlRwK2RGN0V4QTA1LzVxZUFxWHlHCnJ5cTBmOHYxWnJHVTU1N09ISHp5NXR1N2V4Q0JNSVVGMnVLdHp3Ky9SQXpTSVdOOHRNczF1Y0U2TElKdlFIalQKb1hPd0hUTng3aGNZdWlBUi81U0hoeldHRjhYZFZnU1p1anNxQkNzRG5mSHlwQkE0aTg5ajJoZnhmTGJSakkvaApySFFNVmJWcjRxcGNLOTNmUklGVDdWM1VhN05UcW9NS0cwKzZJOEp2NE9xcElsd2hmSFFtSFVBeVQ3aFJoMHNNCmNRND0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  

  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcGdJQkFBS0NBUUVBeWxENTBHN216UGhtVXFkVWNZdGpSYmR6TG9oTnUxQy85cStaVTFoUGNVS2tZcVF0Cm13eTJmeWw3Y24vTWFjcU03SU1ua3pPZVYzSWJ4SmxCRjAzK2VyallxRGI0eUZXSHhabWI4SndPYXBoVlE4RVIKbjdzOFVIWmgxOElyU0Z0cjRXYnh1VDlYdWhjS0JLaGpsYmVRYlhNbzBBUjdkWlBJSVlPakpvRXMrT2pWNjN5TQo0aHBBTkxQdmtBOU14Um90cEZaSW9Jd3dhMjl5WlkrWFl6aldUSmpBT2l2VXpyM1B3blVxbld6ZGlOaWZPZm5nCm1tdTRqeTNJUDlQanNvdmsxdlVXMFVMbDlRWDJldWFWTFRCd1VGcDZaWEdOWTIzVWlWOXlBR0xxMUNPQ1UzWDkKZ3ladE0zQTFrdmRRSlNaR1FDaHYzSnd4YlNnRkZHY3JlMVlkU1FJREFRQUJBb0lCQVFDWkVNQ2dLSGVuMWJzYwpoNHFFeVM5WFBKOEJNcENVeWxnaDIrTEZ3c2QvNmlxU2txSUtiNGpYRmx4V1dVZ2ZOZVordmcrLzk4cXhZQnlRCkZsNi9zZnQ1ZjhZekpqdjgzWEQyVit3NkV1ZDVVRDBhSU1VanN6WERybjBDRHQ1T1JSU09tU01DdzJDczR1ZHEKZExlN093RWpQWUJBT1ZQcXRkOHhNL1hJbU95Y2Q3bEM5RUY1ZWNmRnB3LzF6Uk5oRVVmZWlsNVVBOXFzMVdqawp3WUlDRGxIazFoU3hEY3BUbXp4ZlpJSVovY0FxNktVTnFuSUgySHpyOHQrQXdLQzNhcDhhSTdwSWhPRWpuQ0xxCmdINnNFZjl5Uy8xQk1QQ0kwZVhyeThGSmVVekV0YjJtbjQyZ1Fnb3BqSkxVclpGRFZnRHRxYkZxSWxPcnhVdzgKVWNLOGlqczlBb0dCQU1xRVVqcURUMkhSTVZVUy84TXdzVVpBcWFMc2poVVJ5aGJHSlE2ZHFBWldVT3JZZVRqQwoxVEp0V2hEdEQ0dzl5QjNoVno3SUtBd0pyLzFpMTNCVExZdGlrWlRMN0ltMUFNL0FJUG1JT3lmUUhVZ1lkNlFZClZyTEdIUFQzZUtvRklmM2d3bUFmWFQ2ZDQyajloblVGcStjQm9LTWJNTjU5dFh0WVJaay8zejVEQW9HQkFQKy8KR0QrenVUV3k4SVdZSlZzSFllOGVqM29HMjlpcnZrbGNNT2ZJM1BrUWVSSW1jRk1Bcm1hME93NmdoN25pRWNmZAo2c2J4TnRiNW5CSktlbjBtc1NCSHVBSnZhVnkzcHVidWQ2NVhrTWxuME1aSWk1bEpyR2NHMmR2TDQ4cjh6MW5wCnN1S3h5OWdNV25abjQranQ4b2ttUFg5eDNPd3dvRVJvUkgvQWpDdURBb0dCQUlwcVlDMWYvRXkyQjBySFhvb1IKYU1qRWYyMDgwMnV4S2ZmZzNBa2VWbTVtWm8zdEFRVjduTzRIY1l5cUNudG02clVKaEhFRHF1TjNaNUwvRUpMVQpOd2ZTaWdBeVZPeFdDMFR6WTFaSjkyeWh3TEc3RDJMWHc4SVN5RTNpS3RYQ0JsYVlYU0lIcmRxVFhaQXYzOHR4CjRlbFU0bTg0c1hFUWFJN3lhVGR5UVdvekFvR0JBTEpZQ29yeHcraUVubUlyVlhHRFZuSXY5NUg3RW5pb1c0eEEKOUFITyt2bmMyUEVsU1JNNDJHWGFyWXhudWY2UWZpSEl5WjV1Ty9YeUh6cEtJZDBBakdpY1d0K24zZXZBVG0yZwpRbW1idXVZWXRXaHcwcGpVM1pzREZnM0d3MVdjc3VSYXFscVg3alQ5ZUdBMTFxTnF1OFdVbXpJeXJ3TXViYlVHCm1TNFZraW9OQW9HQkFMYUt2TllDa2xRVW5EV0Z3QXBmZklLQnd0QVp3NHk0Zm9aTndXTjRTbVZaaUtIWWlsVTcKNlVhbmhOVGp1QU5XS2dwZnJselRXNWlxTVRQbE0wMHhlL3BmczRNUVhQcnhQQjJ5Nmo1R3ZxczBPbFVWL1lvbwozdngrS0xCV3hIMmRHL3d5TUZ4K2psZURMcGFramxKdjd6QVlkQUZyOENPdXUwZGl3QzlwTXdZVQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: openfunction/charts/knative-serving/templates/webhook/domainmapping-webhook-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  namespace: knative-serving
  name: domainmapping-webhook-certs
  labels:
    app.kubernetes.io/component: domain-mapping
    serving.knative.dev/release: v1.3.2
    helm.sh/chart: knative-serving-1.3.2
    app.kubernetes.io/instance: my-openfunction
    app.kubernetes.io/version: "1.3.2"
    app.kubernetes.io/managed-by: Helm
---
# Source: openfunction/charts/knative-serving/templates/webhook/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  namespace: knative-serving
  name: webhook-certs
  labels:
    app.kubernetes.io/component: webhook
    serving.knative.dev/release: v1.3.2
    helm.sh/chart: knative-serving-1.3.2
    app.kubernetes.io/instance: my-openfunction
    app.kubernetes.io/version: "1.3.2"
    app.kubernetes.io/managed-by: Helm
---
# Source: openfunction/charts/tekton-pipelines/templates/webhook/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  namespace: tekton-pipelines
  name: webhook-certs
  labels:
    app.kubernetes.io/component: webhook
    pipeline.tekton.dev/release: v0.37.2
    helm.sh/chart: tekton-pipelines-0.37.2
    app.kubernetes.io/name: tekton-pipelines
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
    app.kubernetes.io/version: "v0.37.2"
    app.kubernetes.io/managed-by: Helm
---
# Source: openfunction/templates/webhook/webhook-server-cert.yaml
apiVersion: v1
kind: Secret
metadata:
  name: webhook-server-cert
  labels:
    helm.sh/chart: openfunction-0.7.0
    app.kubernetes.io/name: openfunction
    app.kubernetes.io/instance: my-openfunction
    app.kubernetes.io/version: "v1.2.0"
    app.kubernetes.io/managed-by: Helm
data:
  tls.crt: |
    LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUQvVENDQXVXZ0F3SUJBZ0lVQnV6QmJ6WDloSHlNL0tCNFpveFBhRmxkNWlvd0RRWUpLb1pJaHZjTkFRRUwKQlFBd0tqRW9NQ1lHQTFVRUF3d2ZZMkV0YjNCbGJtWjFibU4wYVc5dUxYZGxZbWh2YjJzdGMyVnlkbWxqWlRBZQpGdzB5TWpBME1EY3dNelV3TURaYUZ3MHpNakEwTURRd016VXdNRFphTUNjeEpUQWpCZ05WQkFNTUhHOXdaVzVtCmRXNWpkR2x2YmkxM1pXSm9iMjlyTFhObGNuWnBZMlV3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXcKZ2dFS0FvSUJBUURIK3BWZ1VKajJqbnNuZE03ay9VVFJwaWUwZHdWSHNYV2VOV0hwZEtQN2NXZVZqVlRLZHB5OApQdjBaQ3FjTlppQXlTUTNMcWJ0ejNLc0VUR3pxT091cDRyWUhTSDRMamJzSUtObGVZN0lmQkVkdFZ1Nlc0NjBPClkySVEvYmNWNU00R2xOb0RNdXd0azNHWGlsK3hNQkx0NUNFeHg5VGNXTmxrZzFrOFFlYWh6UUpxakJwNTFkTU8KSXprQVF4SGdmaUV3WXZPdjg4SmxGdDJvQkh1RHpCYWVzRnFlRTA3ck5BT3NnQmgvNEJXMmxva1pkODY3YnZPSgp4MjUybk9CbWxtWEFieG9ldGtHRlEzZnM4b0VaeWVCS0haWXhVYmVxSG9xaUlxaGFrZEUyajFjTVc4S1FEK3ZSCmFFMnZKMWlEc2lHQjQ5cENtMGhDL0lHeFVwM2I3SFBOQWdNQkFBR2pnZ0VjTUlJQkdEQUpCZ05WSFJNRUFqQUEKTUFzR0ExVWREd1FFQXdJRjREQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBZ1lJS3dZQkJRVUhBd0V3Z2Q0RwpBMVVkRVFTQjFqQ0IwNEljYjNCbGJtWjFibU4wYVc5dUxYZGxZbWh2YjJzdGMyVnlkbWxqWllJcGIzQmxibVoxCmJtTjBhVzl1TFhkbFltaHZiMnN0YzJWeWRtbGpaUzV2Y0dWdVpuVnVZM1JwYjI2Q0xXOXdaVzVtZFc1amRHbHYKYmkxM1pXSm9iMjlyTFhObGNuWnBZMlV1YjNCbGJtWjFibU4wYVc5dUxuTjJZNEk3YjNCbGJtWjFibU4wYVc5dQpMWGRsWW1odmIyc3RjMlZ5ZG1salpTNXZjR1Z1Wm5WdVkzUnBiMjR1YzNaakxtTnNkWE4wWlhJdWJHOWpZV3lDCkhHOXdaVzVtZFc1amRHbHZiaTEzWldKb2IyOXJMWE5sY25acFkyVXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUIKQUkxQnVhSlM5WUxHOUlYSU0rSUVYU3p5bW80N3BpVzkrQS8wQUtrK0RnVUpPMEZURDJqZEtQNkZ5WTB2VDJxRQo5OTNxZE5XZXdSdHQ4N1ZxUmQvVHNRQWVnMHhZZWxURUVOb0RBZjYzSEIzWEY2b0JmUHRkaU1XMGgxSnYwendsCjdRN2cxZTZNVDBaN0Zxb21ZQ1VFOC8zTG1oMHhWcTNHL1cvS0Fnd1JCQkZlekl4WlM5NVg3UkJsVkdoSkI5WnoKTmY3cmtEVDhwOFpnZ3JjZUE4RHNYM3lPMEF4cGVuS0RVRUNQR1doQVVESG1pVmFURURoZU1Vd3pyZCtIWUdqYwpnenR2Y0RXMGJSWkVJWDJsQUZDWHFESUhPNGRiODNxT2FFdHh2SlhyY1NvdEgvUnVmV1p0RWc0bjhqN0E0L0c5CjVqWjhVSTE4bXFoM1RmNnpzd0lhQUk4PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: |
    LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBeC9xVllGQ1k5bzU3SjNUTzVQMUUwYVludEhjRlI3RjFualZoNlhTaiszRm5sWTFVCnluYWN2RDc5R1FxbkRXWWdNa2tOeTZtN2M5eXJCRXhzNmpqcnFlSzJCMGgrQzQyN0NDalpYbU95SHdSSGJWYnUKbHVPdERtTmlFUDIzRmVUT0JwVGFBekxzTFpOeGw0cGZzVEFTN2VRaE1jZlUzRmpaWklOWlBFSG1vYzBDYW93YQplZFhURGlNNUFFTVI0SDRoTUdMenIvUENaUmJkcUFSN2c4d1duckJhbmhOTzZ6UURySUFZZitBVnRwYUpHWGZPCnUyN3ppY2R1ZHB6Z1pwWmx3RzhhSHJaQmhVTjM3UEtCR2NuZ1NoMldNVkczcWg2S29pS29XcEhSTm85WERGdkMKa0EvcjBXaE5yeWRZZzdJaGdlUGFRcHRJUXZ5QnNWS2QyK3h6elFJREFRQUJBb0lCQVFDaEw4RW5HTSt5SzdYbwpYNlpEdkVDMEd4RDF6TmxjcUJUOXFGbDdLcURpRXM1REpOK3JNVit6KzdGVmRkaWdYQ2luWDJyWE5iLzU2MnVNCjAyMFdmVHEyZkIzc1VPb0h0ZjJDM2lvV2dwVVhtd05YaGpKWlBMcElWcUs4djBQTFNka21ST1JVbjc3dUhXSDUKbTNiMkFxRy9UWm5UM2hZY1pTRVVleXA1LzBRK05PcWF2RVVGMG40WW9ua3FsSnQ5RnlMbnJkaVk1VjVqYVZCWQovYmNTZGJIV2tpb3NISDdIU0NYYjVwNW8xY3d6cjNxUWlCRmU3QUs2VXFPUTdIb2Y2cUZjeW5xT1M2NVpHZG9uClVPTXJ0ZnRPL1VkakFZQzdvSWxLNU1KcE0wT3pQZlY1Z1hhS1BzZnhtcFlUTGszQ1lJSGcyVlJIc2RGaHdzT2IKTGRKYklBVUJBb0dCQVBKUG9RdysweEN6ZklxdlYvSnoyVlJCQW9OMEtGVGV0KzBEaDBicTYySzJ1TUc4MlNMTAp2UThUeHNzWFVMNlFZaUR6cG10WllaSHhOM0l1M3E0TGFzbCtNbWNYK0FDeUozZGdYUm9zMmhhay9NNkJ2elAvCkh3eWdrQWc3OXRLLzhmNzFFZkVzWVlDVHB5UXFDaldGQWJLdUMzWmFlQTNIUDJYRU5EcjlNYjVWQW9HQkFOTkcKdSttQlE4djBONkpac1BvS3FKbWI1cFVJV3pydENUTmt6SWR5eUVHMUFPL3RhRlZ2QnNTb0srVmo5dkxyd3BYNQpYOXdVYUh1OE5IOTJKcGNaUnRJbTlvZEFQMzJoeXVyeXpsZndIRGtmeTFhWGMvSDd0aWRnYy9pa1ZkZkhJZVZwClFQcGo3VXN0Smd0QVVHelpVclJmOGdnRUxYOVNiYVNRQmo2SnArZVpBb0dCQU1MaXRKN0tzS3RRRUt6aVZoUFUKaFVrMGVEY041NXBLL3hjTHJYT21ZZWNsR3ZnSFVZU2c1TkFKa2V1cU52RHQ0MTZwV0lJaWcwMEQreHBGQkNocgpXbG53dTgwYkJBWmJRMDdLSEZkL0YzRDdCYkY1dlRTdXptUXpoMlI0Qmc1Ky9yMldrZld0UWtaTmV6S2s5VTBTClNzbFJIanIwakhaWWVHNzdIUjhNb1VONUFvR0FFMGpia2g3SWIyOWxQSjV2TndPT0RDZGN6ckdxa2lCY3ZLSXcKd1JSTER5UlVaNUlGK2ZaZWFjam42TkpORWpOTzJaMmZrRmtVaUdiUGErcis3ci9SNVJERlkrY0xaSTVHRlZnQQpXYXFEQ1B2TDlhVnhZZDhWNjFZMGY3ZVFWbGZJMGtYZk5udTBoeTRoME5rWC9qZUFBeExXNXNCcTNycEpZOEg1CnIrK2tzZEVDZ1lBRkp2VkpWZDd0NjdVWTl6WXlaN0NvU00vYnZIMXFGVzZKbFQzcENyekYvUVh1TksyaUh3Y00KMWdNYUc4MnJ6OGIyS2ZEYTRZRTlEWnVXRVNQMENLdkRsTGZlempxUEFaaFZId09RTzR5RjBDS1ZucUFjWm9vMgo5Qi84dEhFTFFBdWMzZlI2WUVuV29hWCtIb1prYTBZaE5sVXBUdWxnUHJHVUl0TTFJVGVlVlE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
type: kubernetes.io/tls
---
# Source: openfunction/charts/contour/templates/contour/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: contour
  namespace: "projectcontour"
  labels:
    app.kubernetes.io/name: contour
    helm.sh/chart: contour-10.2.2
    app.kubernetes.io/instance: my-openfunction
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: contour
data:
  contour.yaml: |-
    accesslog-format: envoy
    disablePermitInsecure: false
    gateway:
      controllerName: projectcontour.io/projectcontour/contour
    tls:
      fallback-certificate: {}
---
# Source: openfunction/charts/knative-serving/templates/configmaps/autoscaler.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: knative-serving
  name: config-autoscaler
  labels:
    app.kubernetes.io/component: autoscaler
    serving.knative.dev/release: v1.3.2
    helm.sh/chart: knative-serving-1.3.2
    app.kubernetes.io/instance: my-openfunction
    app.kubernetes.io/version: "1.3.2"
    app.kubernetes.io/managed-by: Helm
  annotations:
    knative.dev/example-checksum: 16af78ce
data:
  _example: |
    ################################
    #                              #
    #    EXAMPLE CONFIGURATION     #
    #                              #
    ################################

    # This block is not actually functional configuration,
    # but serves to illustrate the available configuration
    # options and document them in a way that is accessible
    # to users that `kubectl edit` this config map.
    #
    # These sample configuration options may be copied out of
    # this example block and unindented to be in the data block
    # to actually change the configuration.

    # The Revision ContainerConcurrency field specifies the maximum number
    # of requests the Container can handle at once. Container concurrency
    # target percentage is how much of that maximum to use in a stable
    # state. E.g. if a Revision specifies ContainerConcurrency of 10, then
    # the Autoscaler will try to maintain 7 concurrent connections per pod
    # on average.
    # Note: this limit will be applied to container concurrency set at every
    # level (ConfigMap, Revision Spec or Annotation).
    # For legacy and backwards compatibility reasons, this value also accepts
    # fractional values in (0, 1] interval (i.e. 0.7 ⇒ 70%).
    # Thus minimal percentage value must be greater than 1.0, or it will be
    # treated as a fraction.
    # NOTE: that this value does not affect actual number of concurrent requests
    #       the user container may receive, but only the average number of requests
    #       that the revision pods will receive.
    container-concurrency-target-percentage: "70"

    # The container concurrency target default is what the Autoscaler will
    # try to maintain when concurrency is used as the scaling metric for the
    # Revision and the Revision specifies unlimited concurrency.
    # When revision explicitly specifies container concurrency, that value
    # will be used as a scaling target for autoscaler.
    # When specifying unlimited concurrency, the autoscaler will
    # horizontally scale the application based on this target concurrency.
    # This is what we call "soft limit" in the documentation, i.e. it only
    # affects number of pods and does not affect the number of requests
    # individual pod processes.
    # The value must be a positive number such that the value multiplied
    # by container-concurrency-target-percentage is greater than 0.01.
    # NOTE: that this value will be adjusted by application of
    #       container-concurrency-target-percentage, i.e. by default
    #       the system will target on average 70 concurrent requests
    #       per revision pod.
    # NOTE: Only one metric can be used for autoscaling a Revision.
    container-concurrency-target-default: "100"

    # The requests per second (RPS) target default is what the Autoscaler will
    # try to maintain when RPS is used as the scaling metric for a Revision and
    # the Revision specifies unlimited RPS. Even when specifying unlimited RPS,
    # the autoscaler will horizontally scale the application based on this
    # target RPS.
    # Must be greater than 1.0.
    # NOTE: Only one metric can be used for autoscaling a Revision.
    requests-per-second-target-default: "200"

    # The target burst capacity specifies the size of burst in concurrent
    # requests that the system operator expects the system will receive.
    # Autoscaler will try to protect the system from queueing by introducing
    # Activator in the request path if the current spare capacity of the
    # service is less than this setting.
    # If this setting is 0, then Activator will be in the request path only
    # when the revision is scaled to 0.
    # If this setting is > 0 and container-concurrency-target-percentage is
    # 100% or 1.0, then activator will always be in the request path.
    # -1 denotes unlimited target-burst-capacity and activator will always
    # be in the request path.
    # Other negative values are invalid.
    target-burst-capacity: "200"

    # When operating in a stable mode, the autoscaler operates on the
    # average concurrency over the stable window.
    # Stable window must be in whole seconds.
    stable-window: "60s"

    # When observed average concurrency during the panic window reaches
    # panic-threshold-percentage the target concurrency, the autoscaler
    # enters panic mode. When operating in panic mode, the autoscaler
    # scales on the average concurrency over the panic window which is
    # panic-window-percentage of the stable-window.
    # Must be in the [1, 100] range.
    # When computing the panic window it will be rounded to the closest
    # whole second, at least 1s.
    panic-window-percentage: "10.0"

    # The percentage of the container concurrency target at which to
    # enter panic mode when reached within the panic window.
    panic-threshold-percentage: "200.0"

    # Max scale up rate limits the rate at which the autoscaler will
    # increase pod count. It is the maximum ratio of desired pods versus
    # observed pods.
    # Cannot be less or equal to 1.
    # I.e with value of 2.0 the number of pods can at most go N to 2N
    # over single Autoscaler period (2s), but at least N to
    # N+1, if Autoscaler needs to scale up.
    max-scale-up-rate: "1000.0"

    # Max scale down rate limits the rate at which the autoscaler will
    # decrease pod count. It is the maximum ratio of observed pods versus
    # desired pods.
    # Cannot be less or equal to 1.
    # I.e. with value of 2.0 the number of pods can at most go N to N/2
    # over single Autoscaler evaluation period (2s), but at
    # least N to N-1, if Autoscaler needs to scale down.
    max-scale-down-rate: "2.0"

    # Scale to zero feature flag.
    enable-scale-to-zero: "true"

    # Scale to zero grace period is the time an inactive revision is left
    # running before it is scaled to zero (must be positive, but recommended
    # at least a few seconds if running with mesh networking).
    # This is the upper limit and is provided not to enforce timeout after
    # the revision stopped receiving requests for stable window, but to
    # ensure network reprogramming to put activator in the path has completed.
    # If the system determines that a shorter period is satisfactory,
    # then the system will only wait that amount of time before scaling to 0.
    # NOTE: this period might actually be 0, if activator has been
    # in the request path sufficiently long.
    # If there is necessity for the last pod to linger longer use
    # scale-to-zero-pod-retention-period flag.
    scale-to-zero-grace-period: "30s"

    # Scale to zero pod retention period defines the minimum amount
    # of time the last pod will remain after Autoscaler has decided to
    # scale to zero.
    # This flag is for the situations where the pod startup is very expensive
    # and the traffic is bursty (requiring smaller windows for fast action),
    # but patchy.
    # The larger of this flag and `scale-to-zero-grace-period` will effectively
    # determine how the last pod will hang around.
    scale-to-zero-pod-retention-period: "0s"

    # pod-autoscaler-class specifies the default pod autoscaler class
    # that should be used if none is specified. If omitted,
    # the Knative Pod Autoscaler (KPA) is used by default.
    pod-autoscaler-class: "kpa.autoscaling.knative.dev"

    # The capacity of a single activator task.
    # The `unit` is one concurrent request proxied by the activator.
    # activator-capacity must be at least 1.
    # This value is used for computation of the Activator subset size.
    # See the algorithm here: http://bit.ly/38XiCZ3.
    # TODO(vagababov): tune after actual benchmarking.
    activator-capacity: "100.0"

    # initial-scale is the cluster-wide default value for the initial target
    # scale of a revision after creation, unless overridden by the
    # "autoscaling.knative.dev/initialScale" annotation.
    # This value must be greater than 0 unless allow-zero-initial-scale is true.
    initial-scale: "1"

    # allow-zero-initial-scale controls whether either the cluster-wide initial-scale flag,
    # or the "autoscaling.knative.dev/initialScale" annotation, can be set to 0.
    allow-zero-initial-scale: "false"

    # min-scale is the cluster-wide default value for the min scale of a revision,
    # unless overridden by the "autoscaling.knative.dev/minScale" annotation.
    min-scale: "0"

    # max-scale is the cluster-wide default value for the max scale of a revision,
    # unless overridden by the "autoscaling.knative.dev/maxScale" annotation.
    # If set to 0, the revision has no maximum scale.
    max-scale: "0"

    # scale-down-delay is the amount of time that must pass at reduced
    # concurrency before a scale down decision is applied. This can be useful,
    # for example, to maintain replica count and avoid a cold start penalty if
    # more requests come in within the scale down delay period.
    # The default, 0s, imposes no delay at all.
    scale-down-delay: "0s"

    # max-scale-limit sets the maximum permitted value for the max scale of a revision.
    # When this is set to a positive value, a revision with a maxScale above that value
    # (including a maxScale of "0" = unlimited) is disallowed.
    # A value of zero (the default) allows any limit, including unlimited.
    max-scale-limit: "0"
---
# Source: openfunction/charts/knative-serving/templates/configmaps/config-contour.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: knative-serving
  name: config-contour
  labels:
    app.kubernetes.io/component: net-contour
    networking.knative.dev/ingress-provider: contour
    serving.knative.dev/release: v1.3.0
    helm.sh/chart: knative-serving-1.3.2
    app.kubernetes.io/instance: my-openfunction
    app.kubernetes.io/version: "1.3.2"
    app.kubernetes.io/managed-by: Helm
data:
  visibility: |
    ExternalIP:
      class: contour
      service: projectcontour/contour-envoy
    ClusterLocal:
      class: contour
      service: projectcontour/contour-envoy
  _example: |
    ################################
    #                              #
    #    EXAMPLE CONFIGURATION     #
    #                              #
    ################################

    # timeout-policy-idle sets TimeoutPolicy.Idle in contour HTTPProxy spec
    timeout-policy-idle: "infinity"

    # timeout-policy-response sets TimeoutPolicy.Response in contour HTTPProxy spec
    timeout-policy-response: "infinity"

    # If auto-TLS is disabled fallback to the following certificate
    #
    # An operator is required to setup a TLSCertificateDelegation
    # for this secret to be used
    default-tls-secret: "some-namespace/some-secret"

    # visibility contains the configuration for how to expose services
    # of assorted visibilities.  Each entry is keyed by the visibility
    # and contains two keys:
    #  1. the "class" value to pass to the Contour class annotations,
    #  2. the namespace/name of the Contour Envoy service.
    visibility: |
      ExternalIP:
        class: contour-external
        service: contour-external/envoy
      ClusterLocal:
        class: contour-internal
        service: contour-internal/envoy
---
# Source: openfunction/charts/knative-serving/templates/configmaps/defaults.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: knative-serving
  name: config-defaults
  labels:
    app.kubernetes.io/component: controller
    serving.knative.dev/release: v1.3.2
    helm.sh/chart: knative-serving-1.3.2
    app.kubernetes.io/instance: my-openfunction
    app.kubernetes.io/version: "1.3.2"
    app.kubernetes.io/managed-by: Helm
  annotations:
    knative.dev/example-checksum: a0feb4c6
data:
  _example: |
    ################################
    #                              #
    #    EXAMPLE CONFIGURATION     #
    #                              #
    ################################

    # This block is not actually functional configuration,
    # but serves to illustrate the available configuration
    # options and document them in a way that is accessible
    # to users that `kubectl edit` this config map.
    #
    # These sample configuration options may be copied out of
    # this example block and unindented to be in the data block
    # to actually change the configuration.

    # revision-timeout-seconds contains the default number of
    # seconds to use for the revision's per-request timeout, if
    # none is specified.
    revision-timeout-seconds: "300"  # 5 minutes

    # max-revision-timeout-seconds contains the maximum number of
    # seconds that can be used for revision-timeout-seconds.
    # This value must be greater than or equal to revision-timeout-seconds.
    # If omitted, the system default is used (600 seconds).
    #
    # If this value is increased, the activator's terminationGraceTimeSeconds
    # should also be increased to prevent in-flight requests being disrupted.
    max-revision-timeout-seconds: "600"  # 10 minutes

    # revision-cpu-request contains the cpu allocation to assign
    # to revisions by default.  If omitted, no value is specified
    # and the system default is used.
    # Below is an example of setting revision-cpu-request.
    # By default, it is not set by Knative.
    revision-cpu-request: "400m"  # 0.4 of a CPU (aka 400 milli-CPU)

    # revision-memory-request contains the memory allocation to assign
    # to revisions by default.  If omitted, no value is specified
    # and the system default is used.
    # Below is an example of setting revision-memory-request.
    # By default, it is not set by Knative.
    revision-memory-request: "100M"  # 100 megabytes of memory

    # revision-ephemeral-storage-request contains the ephemeral storage
    # allocation to assign to revisions by default.  If omitted, no value is
    # specified and the system default is used.
    revision-ephemeral-storage-request: "500M"  # 500 megabytes of storage

    # revision-cpu-limit contains the cpu allocation to limit
    # revisions to by default.  If omitted, no value is specified
    # and the system default is used.
    # Below is an example of setting revision-cpu-limit.
    # By default, it is not set by Knative.
    revision-cpu-limit: "1000m"  # 1 CPU (aka 1000 milli-CPU)

    # revision-memory-limit contains the memory allocation to limit
    # revisions to by default.  If omitted, no value is specified
    # and the system default is used.
    # Below is an example of setting revision-memory-limit.
    # By default, it is not set by Knative.
    revision-memory-limit: "200M"  # 200 megabytes of memory

    # revision-ephemeral-storage-limit contains the ephemeral storage
    # allocation to limit revisions to by default.  If omitted, no value is
    # specified and the system default is used.
    revision-ephemeral-storage-limit: "750M"  # 750 megabytes of storage

    # container-name-template contains a template for the default
    # container name, if none is specified.  This field supports
    # Go templating and is supplied with the ObjectMeta of the
    # enclosing Service or Configuration, so values such as
    #  are also valid.
    container-name-template: "user-container"

    # init-container-name-template contains a template for the default
    # init container name, if none is specified.  This field supports
    # Go templating and is supplied with the ObjectMeta of the
    # enclosing Service or Configuration, so values such as
    #  are also valid.
    init-container-name-template: "init-container"

    # container-concurrency specifies the maximum number
    # of requests the Container can handle at once, and requests
    # above this threshold are queued.  Setting a value of zero
    # disables this throttling and lets through as many requests as
    # the pod receives.
    container-concurrency: "0"

    # The container concurrency max limit is an operator setting ensuring that
    # the individual revisions cannot have arbitrary large concurrency
    # values, or autoscaling targets. `container-concurrency` default setting
    # must be at or below this value.
    #
    # Must be greater than 1.
    #
    # Note: even with this set, a user can choose a containerConcurrency
    # of 0 (i.e. unbounded) unless allow-container-concurrency-zero is
    # set to "false".
    container-concurrency-max-limit: "1000"

    # allow-container-concurrency-zero controls whether users can
    # specify 0 (i.e. unbounded) for containerConcurrency.
    allow-container-concurrency-zero: "true"

    # enable-service-links specifies the default value used for the
    # enableServiceLinks field of the PodSpec, when it is omitted by the user.
    # See: https://kubernetes.io/docs/concepts/services-networking/connect-applications-service/#accessing-the-service
    #
    # This is a tri-state flag with possible values of (true|false|default).
    #
    # In environments with large number of services it is suggested
    # to set this value to `false`.
    # See https://github.com/knative/serving/issues/8498.
    enable-service-links: "false"
---
# Source: openfunction/charts/knative-serving/templates/configmaps/deployment.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: knative-serving
  name: config-deployment
  labels:
    app.kubernetes.io/component: controller
    serving.knative.dev/release: v1.3.2
    helm.sh/chart: knative-serving-1.3.2
    app.kubernetes.io/instance: my-openfunction
    app.kubernetes.io/version: "1.3.2"
    app.kubernetes.io/managed-by: Helm
  annotations:
    knative.dev/example-checksum: dd7ee769
data:
  _example: |-
    ################################
    #                              #
    #    EXAMPLE CONFIGURATION     #
    #                              #
    ################################

    # This block is not actually functional configuration,
    # but serves to illustrate the available configuration
    # options and document them in a way that is accessible
    # to users that `kubectl edit` this config map.
    #
    # These sample configuration options may be copied out of
    # this example block and unindented to be in the data block
    # to actually change the configuration.

    # List of repositories for which tag to digest resolving should be skipped
    registries-skipping-tag-resolving: "kind.local,ko.local,dev.local"

    # Maximum time allowed for an image's digests to be resolved.
    digest-resolution-timeout: "10s"

    # Duration we wait for the deployment to be ready before considering it failed.
    progress-deadline: "600s"

    # Sets the queue proxy's CPU request.
    # If omitted, a default value (currently "25m"), is used.
    queue-sidecar-cpu-request: "25m"

    # Sets the queue proxy's CPU limit.
    # If omitted, no value is specified and the system default is used.
    queue-sidecar-cpu-limit: "1000m"

    # Sets the queue proxy's memory request.
    # If omitted, no value is specified and the system default is used.
    queue-sidecar-memory-request: "400Mi"

    # Sets the queue proxy's memory limit.
    # If omitted, no value is specified and the system default is used.
    queue-sidecar-memory-limit: "800Mi"

    # Sets the queue proxy's ephemeral storage request.
    # If omitted, no value is specified and the system default is used.
    queue-sidecar-ephemeral-storage-request: "512Mi"

    # Sets the queue proxy's ephemeral storage limit.
    # If omitted, no value is specified and the system default is used.
    queue-sidecar-ephemeral-storage-limit: "1024Mi"

    # The freezer service endpoint that queue-proxy calls when its traffic drops to zero or
    # scales up from zero.
    #
    # Freezer service is available at: https://github.com/knative-sandbox/container-freezer
    # or users may write their own service.
    #
    # The value will need to include both the host and the port that will be accessed.
    # For the host, $HOST_IP can be passed, and the appropriate host IP value will be swapped
    # in at runtime, which will enable the freezer daemonset to be reachable via the node IP.
    #
    # As an example:
    #     concurrency-state-endpoint: "http://$HOST_IP:9696"
    #
    # If not set, queue proxy takes no action (this is the default behavior).
    #
    # When enabled, a serviceAccountToken will be mounted to queue-proxy using
    # a projected volume. This requires the Service Account Token Volume Projection feature
    # to be enabled. For details, see this link:
    # https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#service-account-token-volume-projection
    #
    # NOTE THAT THIS IS AN EXPERIMENTAL / ALPHA FEATURE
    concurrency-state-endpoint: ""
  queueSidecarImage: openfunction/knative.dev-serving-cmd-queue:v1.3.2
---
# Source: openfunction/charts/knative-serving/templates/configmaps/domain.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: knative-serving
  name: config-domain
  labels:
    app.kubernetes.io/component: controller
    serving.knative.dev/release: v1.3.2
    helm.sh/chart: knative-serving-1.3.2
    app.kubernetes.io/instance: my-openfunction
    app.kubernetes.io/version: "1.3.2"
    app.kubernetes.io/managed-by: Helm
  annotations:
    knative.dev/example-checksum: 81552d0b
data:
  _example: |
    ################################
    #                              #
    #    EXAMPLE CONFIGURATION     #
    #                              #
    ################################

    # This block is not actually functional configuration,
    # but serves to illustrate the available configuration
    # options and document them in a way that is accessible
    # to users that `kubectl edit` this config map.
    #
    # These sample configuration options may be copied out of
    # this example block and unindented to be in the data block
    # to actually change the configuration.

    # Default value for domain.
    # Although it will match all routes, it is the least-specific rule so it
    # will only be used if no other domain matches.
    example.com: |

    # These are example settings of domain.
    # example.org will be used for routes having app=nonprofit.
    example.org: |
      selector:
        app: nonprofit

    # Routes having the cluster domain suffix (by default 'svc.cluster.local')
    # will not be exposed through Ingress. You can define your own label
    # selector to assign that domain suffix to your Route here, or you can set
    # the label
    #    "networking.knative.dev/visibility=cluster-local"
    # to achieve the same effect.  This shows how to make routes having
    # the label app=secret only exposed to the local cluster.
    svc.cluster.local: |
      selector:
        app: secret
---
# Source: openfunction/charts/knative-serving/templates/configmaps/features.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: knative-serving
  name: config-features
  labels:
    app.kubernetes.io/component: controller
    serving.knative.dev/release: v1.3.2
    helm.sh/chart: knative-serving-1.3.2
    app.kubernetes.io/instance: my-openfunction
    app.kubernetes.io/version: "1.3.2"
    app.kubernetes.io/managed-by: Helm
  annotations:
    knative.dev/example-checksum: d9e300ba
data:
  kubernetes.podspec-fieldref: "enabled"
  kubernetes.podspec-runtimeclassname: "enabled"
  kubernetes.podspec-persistent-volume-claim: "enabled"
  kubernetes.podspec-persistent-volume-write: "enabled"
  _example: |-
    ################################
    #                              #
    #    EXAMPLE CONFIGURATION     #
    #                              #
    ################################

    # This block is not actually functional configuration,
    # but serves to illustrate the available configuration
    # options and document them in a way that is accessible
    # to users that `kubectl edit` this config map.
    #
    # These sample configuration options may be copied out of
    # this example block and unindented to be in the data block
    # to actually change the configuration.

    # Indicates whether multi container support is enabled
    #
    # WARNING: Cannot safely be disabled once enabled.
    # See: https://knative.dev/docs/serving/feature-flags/#multi-containers
    multi-container: "enabled"

    # Indicates whether Kubernetes affinity support is enabled
    #
    # WARNING: Cannot safely be disabled once enabled.
    # See: https://knative.dev/docs/serving/feature-flags/#kubernetes-node-affinity
    kubernetes.podspec-affinity: "disabled"

    # Indicates whether Kubernetes hostAliases support is enabled
    #
    # WARNING: Cannot safely be disabled once enabled.
    # See: https://knative.dev/docs/serving/feature-flags/#kubernetes-host-aliases
    kubernetes.podspec-hostaliases: "disabled"

    # Indicates whether Kubernetes nodeSelector support is enabled
    #
    # WARNING: Cannot safely be disabled once enabled.
    # See: https://knative.dev/docs/serving/feature-flags/#kubernetes-node-selector
    kubernetes.podspec-nodeselector: "disabled"

    # Indicates whether Kubernetes tolerations support is enabled
    #
    # WARNING: Cannot safely be disabled once enabled
    # See: https://knative.dev/docs/serving/feature-flags/#kubernetes-toleration
    kubernetes.podspec-tolerations: "disabled"

    # Indicates whether Kubernetes FieldRef support is enabled
    #
    # WARNING: Cannot safely be disabled once enabled.
    # See: https://knative.dev/docs/serving/feature-flags/#kubernetes-fieldref
    kubernetes.podspec-fieldref: "disabled"

    # Indicates whether Kubernetes RuntimeClassName support is enabled
    #
    # WARNING: Cannot safely be disabled once enabled.
    # See: https://knative.dev/docs/serving/feature-flags/#kubernetes-runtime-class
    kubernetes.podspec-runtimeclassname: "disabled"

    # This feature allows end-users to set a subset of fields on the Pod's SecurityContext
    #
    # When set to "enabled" or "allowed" it allows the following
    # PodSecurityContext properties:
    # - FSGroup
    # - RunAsGroup
    # - RunAsNonRoot
    # - SupplementalGroups
    # - RunAsUser
    #
    # This feature flag should be used with caution as the PodSecurityContext
    # properties may have a side-effect on non-user sidecar containers that come
    # from Knative or your service mesh
    #
    # WARNING: Cannot safely be disabled once enabled.
    # See: https://knative.dev/docs/serving/feature-flags/#kubernetes-security-context
    kubernetes.podspec-securitycontext: "disabled"

    # Indicates whether Kubernetes PriorityClassName support is enabled
    #
    # WARNING: Cannot safely be disabled once enabled.
    # See: https://knative.dev/docs/serving/feature-flags/#kubernetes-priority-class-name
    kubernetes.podspec-priorityclassname: "disabled"

    # Indicates whether Kubernetes SchedulerName support is enabled
    #
    # WARNING: Cannot safely be disabled once enabled.
    # See: https://knative.dev/docs/serving/feature-flags/#kubernetes-scheduler-name
    kubernetes.podspec-schedulername: "disabled"

    # This feature flag allows end-users to add a subset of capabilities on the Pod's SecurityContext.
    #
    # When set to "enabled" or "allowed" it allows capabilities to be added to the container.
    # For a list of possible capabilities, see https://man7.org/linux/man-pages/man7/capabilities.7.html
    kubernetes.containerspec-addcapabilities: "disabled"

    # This feature validates PodSpecs from the validating webhook
    # against the K8s API Server.
    #
    # When "enabled", the server will always run the extra validation.
    # When "allowed", the server will not run the dry-run validation by default.
    #   However, clients may enable the behavior on an individual Service by
    #   attaching the following metadata annotation: "features.knative.dev/podspec-dryrun":"enabled".
    # See: https://knative.dev/docs/serving/feature-flags/#kubernetes-dry-run
    kubernetes.podspec-dryrun: "allowed"

    # Controls whether tag header based routing feature are enabled or not.
    # 1. Enabled: enabling tag header based routing
    # 2. Disabled: disabling tag header based routing
    # See: https://knative.dev/docs/serving/feature-flags/#tag-header-based-routing
    tag-header-based-routing: "disabled"

    # Controls whether http2 auto-detection should be enabled or not.
    # 1. Enabled: http2 connection will be attempted via upgrade.
    # 2. Disabled: http2 connection will only be attempted when port name is set to "h2c".
    autodetect-http2: "disabled"

    # Controls whether volume support for EmptyDir is enabled or not.
    # 1. Enabled: enabling EmptyDir volume support
    # 2. Disabled: disabling EmptyDir volume support
    kubernetes.podspec-volumes-emptydir: "disabled"

    # Controls whether init containers support is enabled or not.
    # 1. Enabled: enabling init containers support
    # 2. Disabled: disabling init containers support
    kubernetes.podspec-init-containers: "disabled"

    # Controls whether persistent volume claim support is enabled or not.
    # 1. Enabled: enabling persistent volume claim support
    # 2. Disabled: disabling persistent volume claim support
    kubernetes.podspec-persistent-volume-claim: "disabled"

    # Controls whether write access for persistent volumes is enabled or not.
    # 1. Enabled: enabling write access for persistent volumes
    # 2. Disabled: disabling write access for persistent volumes
    kubernetes.podspec-persistent-volume-write: "disabled"
---
# Source: openfunction/charts/knative-serving/templates/configmaps/gc.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: knative-serving
  name: config-gc
  labels:
    app.kubernetes.io/component: controller
    serving.knative.dev/release: v1.3.2
    helm.sh/chart: knative-serving-1.3.2
    app.kubernetes.io/instance: my-openfunction
    app.kubernetes.io/version: "1.3.2"
    app.kubernetes.io/managed-by: Helm
  annotations:
    knative.dev/example-checksum: "45463e45"
data:
  _example: |
    ################################
    #                              #
    #    EXAMPLE CONFIGURATION     #
    #                              #
    ################################

    # This block is not actually functional configuration,
    # but serves to illustrate the available configuration
    # options and document them in a way that is accessible
    # to users that `kubectl edit` this config map.
    #
    # These sample configuration options may be copied out of
    # this example block and unindented to be in the data block
    # to actually change the configuration.


    # ---------------------------------------
    # Garbage Collector Settings
    # ---------------------------------------
    #
    # Active
    #   * Revisions which are referenced by a Route are considered active.
    #   * Individual revisions may be marked with the annotation
    #      "serving.knative.dev/no-gc":"true" to be permanently considered active.
    #   * Active revisions are not considered for GC.
    # Retention
    #   * Revisions are retained if they are any of the following:
    #       1. Active
    #       2. Were created within "retain-since-create-time"
    #       3. Were last referenced by a route within
    #           "retain-since-last-active-time"
    #       4. There are fewer than "min-non-active-revisions"
    #     If none of these conditions are met, or if the count of revisions exceed
    #      "max-non-active-revisions", they will be deleted by GC.
    #     The special value "disabled" may be used to turn off these limits.
    #
    # Example config to immediately collect any inactive revision:
    #    min-non-active-revisions: "0"
    #    max-non-active-revisions: "0"
    #    retain-since-create-time: "disabled"
    #    retain-since-last-active-time: "disabled"
    #
    # Example config to always keep around the last ten non-active revisions:
    #     retain-since-create-time: "disabled"
    #     retain-since-last-active-time: "disabled"
    #     max-non-active-revisions: "10"
    #
    # Example config to disable all GC:
    #     retain-since-create-time: "disabled"
    #     retain-since-last-active-time: "disabled"
    #     max-non-active-revisions: "disabled"
    #
    # Example config to keep recently deployed or active revisions,
    # always maintain the last two in case of rollback, and prevent
    # burst activity from exploding the count of old revisions:
    #      retain-since-create-time: "48h"
    #      retain-since-last-active-time: "15h"
    #      min-non-active-revisions: "2"
    #      max-non-active-revisions: "1000"

    # Duration since creation before considering a revision for GC or "disabled".
    retain-since-create-time: "48h"

    # Duration since active before considering a revision for GC or "disabled".
    retain-since-last-active-time: "15h"

    # Minimum number of non-active revisions to retain.
    min-non-active-revisions: "20"

    # Maximum number of non-active revisions to retain
    # or "disabled" to disable any maximum limit.
    max-non-active-revisions: "1000"
---
# Source: openfunction/charts/knative-serving/templates/configmaps/leader-election.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: knative-serving
  name: config-leader-election
  labels:
    app.kubernetes.io/component: controller
    serving.knative.dev/release: v1.3.2
    helm.sh/chart: knative-serving-1.3.2
    app.kubernetes.io/instance: my-openfunction
    app.kubernetes.io/version: "1.3.2"
    app.kubernetes.io/managed-by: Helm
  annotations:
    knative.dev/example-checksum: f4b71f57
data:
  _example: |
    ################################
    #                              #
    #    EXAMPLE CONFIGURATION     #
    #                              #
    ################################

    # This block is not actually functional configuration,
    # but serves to illustrate the available configuration
    # options and document them in a way that is accessible
    # to users that `kubectl edit` this config map.
    #
    # These sample configuration options may be copied out of
    # this example block and unindented to be in the data block
    # to actually change the configuration.

    # lease-duration is how long non-leaders will wait to try to acquire the
    # lock; 15 seconds is the value used by core kubernetes controllers.
    lease-duration: "60s"

    # renew-deadline is how long a leader will try to renew the lease before
    # giving up; 10 seconds is the value used by core kubernetes controllers.
    renew-deadline: "40s"

    # retry-period is how long the leader election client waits between tries of
    # actions; 2 seconds is the value used by core kubernetes controllers.
    retry-period: "10s"

    # buckets is the number of buckets used to partition key space of each
    # Reconciler. If this number is M and the replica number of the controller
    # is N, the N replicas will compete for the M buckets. The owner of a
    # bucket will take care of the reconciling for the keys partitioned into
    # that bucket.
    buckets: "1"
---
# Source: openfunction/charts/knative-serving/templates/configmaps/logging.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: knative-serving
  name: config-logging
  labels:
    app.kubernetes.io/component: logging
    serving.knative.dev/release: v1.3.2
    helm.sh/chart: knative-serving-1.3.2
    app.kubernetes.io/instance: my-openfunction
    app.kubernetes.io/version: "1.3.2"
    app.kubernetes.io/managed-by: Helm
  annotations:
    knative.dev/example-checksum: b0f3c6f2
data:
  _example: |
    ################################
    #                              #
    #    EXAMPLE CONFIGURATION     #
    #                              #
    ################################

    # This block is not actually functional configuration,
    # but serves to illustrate the available configuration
    # options and document them in a way that is accessible
    # to users that `kubectl edit` this config map.
    #
    # These sample configuration options may be copied out of
    # this example block and unindented to be in the data block
    # to actually change the configuration.

    # Common configuration for all Knative codebase
    zap-logger-config: |
      {
        "level": "info",
        "development": false,
        "outputPaths": ["stdout"],
        "errorOutputPaths": ["stderr"],
        "encoding": "json",
        "encoderConfig": {
          "timeKey": "timestamp",
          "levelKey": "severity",
          "nameKey": "logger",
          "callerKey": "caller",
          "messageKey": "message",
          "stacktraceKey": "stacktrace",
          "lineEnding": "",
          "levelEncoder": "",
          "timeEncoder": "iso8601",
          "durationEncoder": "",
          "callerEncoder": ""
        }
      }

    # Log level overrides
    # For all components except the queue proxy,
    # changes are picked up immediately.
    # For queue proxy, changes require recreation of the pods.
    loglevel.controller: "info"
    loglevel.autoscaler: "info"
    loglevel.queueproxy: "info"
    loglevel.webhook: "info"
    loglevel.activator: "info"
    loglevel.hpaautoscaler: "info"
    loglevel.net-certmanager-controller: "info"
    loglevel.net-istio-controller: "info"
    loglevel.net-contour-controller: "info"
---
# Source: openfunction/charts/knative-serving/templates/configmaps/network.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: knative-serving
  name: config-network
  labels:
    app.kubernetes.io/component: networking
    serving.knative.dev/release: v1.3.2
    helm.sh/chart: knative-serving-1.3.2
    app.kubernetes.io/instance: my-openfunction
    app.kubernetes.io/version: "1.3.2"
    app.kubernetes.io/managed-by: Helm
  annotations:
    knative.dev/example-checksum: ddc3250f
data:
  ingress-class: "contour.ingress.networking.knative.dev"
  _example: |
    ################################
    #                              #
    #    EXAMPLE CONFIGURATION     #
    #                              #
    ################################
    
    # This block is not actually functional configuration,
    # but serves to illustrate the available configuration
    # options and document them in a way that is accessible
    # to users that `kubectl edit` this config map.
    #
    # These sample configuration options may be copied out of
    # this example block and unindented to be in the data block
    # to actually change the configuration.
    
    # ingress-class specifies the default ingress class
    # to use when not dictated by Route annotation.
    #
    # If not specified, will use the Istio ingress.
    #
    # Note that changing the Ingress class of an existing Route
    # will result in undefined behavior.  Therefore it is best to only
    # update this value during the setup of Knative, to avoid getting
    # undefined behavior.
    ingress-class: "istio.ingress.networking.knative.dev"
    
    # certificate-class specifies the default Certificate class
    # to use when not dictated by Route annotation.
    #
    # If not specified, will use the Cert-Manager Certificate.
    #
    # Note that changing the Certificate class of an existing Route
    # will result in undefined behavior.  Therefore it is best to only
    # update this value during the setup of Knative, to avoid getting
    # undefined behavior.
    certificate-class: "cert-manager.certificate.networking.knative.dev"
    
    # namespace-wildcard-cert-selector specifies a LabelSelector which
    # determines which namespaces should have a wildcard certificate
    # provisioned.
    #
    # Use an empty value to disable the feature (this is the default):
    #   namespace-wildcard-cert-selector: ""
    #
    # Use an empty object to enable for all namespaces
    #   namespace-wildcard-cert-selector: {}
    #
    # Useful labels include the "kubernetes.io/metadata.name" label to
    # avoid provisioning a certifcate for the "kube-system" namespaces.
    # Use the following selector to match pre-1.0 behavior of using
    # "networking.knative.dev/disableWildcardCert" to exclude namespaces:
    #
    # matchExpressions:
    # - key: "networking.knative.dev/disableWildcardCert"
    #   operator: "NotIn"
    #   values: ["true"]
    namespace-wildcard-cert-selector: ""
    
    # domain-template specifies the golang text template string to use
    # when constructing the Knative service's DNS name. The default
    # value is "{{.Name}}.{{.Namespace}}.{{.Domain}}".
    #
    # Valid variables defined in the template include Name, Namespace, Domain,
    # Labels, and Annotations. Name will be the result of the tagTemplate
    # below, if a tag is specified for the route.
    #
    # Changing this value might be necessary when the extra levels in
    # the domain name generated is problematic for wildcard certificates
    # that only support a single level of domain name added to the
    # certificate's domain. In those cases you might consider using a value
    # of "{{.Name}}-{{.Namespace}}.{{.Domain}}", or removing the Namespace
    # entirely from the template. When choosing a new value be thoughtful
    # of the potential for conflicts - for example, when users choose to use
    # characters such as `-` in their service, or namespace, names.
    # {{.Annotations}} or {{.Labels}} can be used for any customization in the
    # go template if needed.
    # We strongly recommend keeping namespace part of the template to avoid
    # domain name clashes:
    # eg. '{{.Name}}-{{.Namespace}}.{{ index .Annotations "sub"}}.{{.Domain}}'
    # and you have an annotation {"sub":"foo"}, then the generated template
    # would be {Name}-{Namespace}.foo.{Domain}
    domain-template: "{{.Name}}.{{.Namespace}}.{{.Domain}}"
    
    # tagTemplate specifies the golang text template string to use
    # when constructing the DNS name for "tags" within the traffic blocks
    # of Routes and Configuration.  This is used in conjunction with the
    # domainTemplate above to determine the full URL for the tag.
    tag-template: "{{.Tag}}-{{.Name}}"
    
    # Controls whether TLS certificates are automatically provisioned and
    # installed in the Knative ingress to terminate external TLS connection.
    # 1. Enabled: enabling auto-TLS feature.
    # 2. Disabled: disabling auto-TLS feature.
    auto-tls: "Disabled"
    
    # Controls the behavior of the HTTP endpoint for the Knative ingress.
    # It requires autoTLS to be enabled.
    # 1. Enabled: The Knative ingress will be able to serve HTTP connection.
    # 2. Redirected: The Knative ingress will send a 301 redirect for all
    # http connections, asking the clients to use HTTPS.
    #
    # "Disabled" option is deprecated.
    http-protocol: "Enabled"
    
    # rollout-duration contains the minimal duration in seconds over which the
    # Configuration traffic targets are rolled out to the newest revision.
    rollout-duration: "0"
    
    # autocreate-cluster-domain-claims controls whether ClusterDomainClaims should
    # be automatically created (and deleted) as needed when DomainMappings are
    # reconciled.
    #
    # If this is "false" (the default), the cluster administrator is
    # responsible for creating ClusterDomainClaims and delegating them to
    # namespaces via their spec.Namespace field. This setting should be used in
    # multitenant environments which need to control which namespace can use a
    # particular domain name in a domain mapping.
    #
    # If this is "true", users are able to associate arbitrary names with their
    # services via the DomainMapping feature.
    autocreate-cluster-domain-claims: "false"
    
    # If true, networking plugins can add additional information to deployed
    # applications to make their pods directly accessible via their IPs even if mesh is
    # enabled and thus direct-addressability is usually not possible.
    # Consumers like Knative Serving can use this setting to adjust their behavior
    # accordingly, i.e. to drop fallback solutions for non-pod-addressable systems.
    #
    # NOTE: This flag is in an alpha state and is mostly here to enable internal testing
    #       for now. Use with caution.
    enable-mesh-pod-addressability: "false"
    
    # mesh-compatibility-mode indicates whether consumers of network plugins
    # should directly contact Pod IPs (most efficient), or should use the
    # Cluster IP (less efficient, needed when mesh is enabled unless
    # `enable-mesh-pod-addressability`, above, is set).
    # Permitted values are:
    #  - "auto" (default): automatically determine which mesh mode to use by trying Pod IP and falling back to Cluster IP as needed.
    #  - "enabled": always use Cluster IP and do not attempt to use Pod IPs.
    #  - "disabled": always use Pod IPs and do not fall back to Cluster IP on failure.
    mesh-compatibility-mode: "auto"
    
    # Defines the scheme used for external URLs if autoTLS is not enabled.
    # This can be used for making Knative report all URLs as "HTTPS" for example, if you're
    # fronting Knative with an external loadbalancer that deals with TLS termination and
    # Knative doesn't know about that otherwise.
    default-external-scheme: "http"
    
    # The CA public certificate used to sign the activator TLS certificate.
    # It is specified by the secret name, which has the "ca.crt" data field.
    # Use an empty value to disable the feature (default).
    #
    # NOTE: This flag is in an alpha state and is mostly here to enable internal testing
    #       for now. Use with caution.
    activator-ca: ""
    
    # The SAN (Subject Alt Name) used to validate the activator TLS certificate.
    # It is available only when "activator-ca" is specified.
    # Use an empty value to disable the feature (default).
    #
    # NOTE: This flag is in an alpha state and is mostly here to enable internal testing
    #       for now. Use with caution.
    activator-san: ""
---
# Source: openfunction/charts/knative-serving/templates/configmaps/observability.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: knative-serving
  name: config-observability
  labels:
    app.kubernetes.io/component: observability
    serving.knative.dev/release: v1.3.2
    helm.sh/chart: knative-serving-1.3.2
    app.kubernetes.io/instance: my-openfunction
    app.kubernetes.io/version: "1.3.2"
    app.kubernetes.io/managed-by: Helm
  annotations:
    knative.dev/example-checksum: fed4756e
data:
  _example: |
    ################################
    #                              #
    #    EXAMPLE CONFIGURATION     #
    #                              #
    ################################
    
    # This block is not actually functional configuration,
    # but serves to illustrate the available configuration
    # options and document them in a way that is accessible
    # to users that `kubectl edit` this config map.
    #
    # These sample configuration options may be copied out of
    # this example block and unindented to be in the data block
    # to actually change the configuration.
    
    # ingress-class specifies the default ingress class
    # to use when not dictated by Route annotation.
    #
    # If not specified, will use the Istio ingress.
    #
    # Note that changing the Ingress class of an existing Route
    # will result in undefined behavior.  Therefore it is best to only
    # update this value during the setup of Knative, to avoid getting
    # undefined behavior.
    ingress-class: "istio.ingress.networking.knative.dev"
    
    # certificate-class specifies the default Certificate class
    # to use when not dictated by Route annotation.
    #
    # If not specified, will use the Cert-Manager Certificate.
    #
    # Note that changing the Certificate class of an existing Route
    # will result in undefined behavior.  Therefore it is best to only
    # update this value during the setup of Knative, to avoid getting
    # undefined behavior.
    certificate-class: "cert-manager.certificate.networking.knative.dev"
    
    # namespace-wildcard-cert-selector specifies a LabelSelector which
    # determines which namespaces should have a wildcard certificate
    # provisioned.
    #
    # Use an empty value to disable the feature (this is the default):
    #   namespace-wildcard-cert-selector: ""
    #
    # Use an empty object to enable for all namespaces
    #   namespace-wildcard-cert-selector: {}
    #
    # Useful labels include the "kubernetes.io/metadata.name" label to
    # avoid provisioning a certifcate for the "kube-system" namespaces.
    # Use the following selector to match pre-1.0 behavior of using
    # "networking.knative.dev/disableWildcardCert" to exclude namespaces:
    #
    # matchExpressions:
    # - key: "networking.knative.dev/disableWildcardCert"
    #   operator: "NotIn"
    #   values: ["true"]
    namespace-wildcard-cert-selector: ""
    
    # domain-template specifies the golang text template string to use
    # when constructing the Knative service's DNS name. The default
    # value is "{{.Name}}.{{.Namespace}}.{{.Domain}}".
    #
    # Valid variables defined in the template include Name, Namespace, Domain,
    # Labels, and Annotations. Name will be the result of the tagTemplate
    # below, if a tag is specified for the route.
    #
    # Changing this value might be necessary when the extra levels in
    # the domain name generated is problematic for wildcard certificates
    # that only support a single level of domain name added to the
    # certificate's domain. In those cases you might consider using a value
    # of "{{.Name}}-{{.Namespace}}.{{.Domain}}", or removing the Namespace
    # entirely from the template. When choosing a new value be thoughtful
    # of the potential for conflicts - for example, when users choose to use
    # characters such as `-` in their service, or namespace, names.
    # {{.Annotations}} or {{.Labels}} can be used for any customization in the
    # go template if needed.
    # We strongly recommend keeping namespace part of the template to avoid
    # domain name clashes:
    # eg. '{{.Name}}-{{.Namespace}}.{{ index .Annotations "sub"}}.{{.Domain}}'
    # and you have an annotation {"sub":"foo"}, then the generated template
    # would be {Name}-{Namespace}.foo.{Domain}
    domain-template: "{{.Name}}.{{.Namespace}}.{{.Domain}}"
    
    # tagTemplate specifies the golang text template string to use
    # when constructing the DNS name for "tags" within the traffic blocks
    # of Routes and Configuration.  This is used in conjunction with the
    # domainTemplate above to determine the full URL for the tag.
    tag-template: "{{.Tag}}-{{.Name}}"
    
    # Controls whether TLS certificates are automatically provisioned and
    # installed in the Knative ingress to terminate external TLS connection.
    # 1. Enabled: enabling auto-TLS feature.
    # 2. Disabled: disabling auto-TLS feature.
    auto-tls: "Disabled"
    
    # Controls the behavior of the HTTP endpoint for the Knative ingress.
    # It requires autoTLS to be enabled.
    # 1. Enabled: The Knative ingress will be able to serve HTTP connection.
    # 2. Redirected: The Knative ingress will send a 301 redirect for all
    # http connections, asking the clients to use HTTPS.
    #
    # "Disabled" option is deprecated.
    http-protocol: "Enabled"
    
    # rollout-duration contains the minimal duration in seconds over which the
    # Configuration traffic targets are rolled out to the newest revision.
    rollout-duration: "0"
    
    # autocreate-cluster-domain-claims controls whether ClusterDomainClaims should
    # be automatically created (and deleted) as needed when DomainMappings are
    # reconciled.
    #
    # If this is "false" (the default), the cluster administrator is
    # responsible for creating ClusterDomainClaims and delegating them to
    # namespaces via their spec.Namespace field. This setting should be used in
    # multitenant environments which need to control which namespace can use a
    # particular domain name in a domain mapping.
    #
    # If this is "true", users are able to associate arbitrary names with their
    # services via the DomainMapping feature.
    autocreate-cluster-domain-claims: "false"
    
    # If true, networking plugins can add additional information to deployed
    # applications to make their pods directly accessible via their IPs even if mesh is
    # enabled and thus direct-addressability is usually not possible.
    # Consumers like Knative Serving can use this setting to adjust their behavior
    # accordingly, i.e. to drop fallback solutions for non-pod-addressable systems.
    #
    # NOTE: This flag is in an alpha state and is mostly here to enable internal testing
    #       for now. Use with caution.
    enable-mesh-pod-addressability: "false"
    
    # mesh-compatibility-mode indicates whether consumers of network plugins
    # should directly contact Pod IPs (most efficient), or should use the
    # Cluster IP (less efficient, needed when mesh is enabled unless
    # `enable-mesh-pod-addressability`, above, is set).
    # Permitted values are:
    #  - "auto" (default): automatically determine which mesh mode to use by trying Pod IP and falling back to Cluster IP as needed.
    #  - "enabled": always use Cluster IP and do not attempt to use Pod IPs.
    #  - "disabled": always use Pod IPs and do not fall back to Cluster IP on failure.
    mesh-compatibility-mode: "auto"
    
    # Defines the scheme used for external URLs if autoTLS is not enabled.
    # This can be used for making Knative report all URLs as "HTTPS" for example, if you're
    # fronting Knative with an external loadbalancer that deals with TLS termination and
    # Knative doesn't know about that otherwise.
    default-external-scheme: "http"
    
    # The CA public certificate used to sign the activator TLS certificate.
    # It is specified by the secret name, which has the "ca.crt" data field.
    # Use an empty value to disable the feature (default).
    #
    # NOTE: This flag is in an alpha state and is mostly here to enable internal testing
    #       for now. Use with caution.
    activator-ca: ""
    
    # The SAN (Subject Alt Name) used to validate the activator TLS certificate.
    # It is available only when "activator-ca" is specified.
    # Use an empty value to disable the feature (default).
    #
    # NOTE: This flag is in an alpha state and is mostly here to enable internal testing
    #       for now. Use with caution.
    activator-san: ""
---
# Source: openfunction/charts/knative-serving/templates/configmaps/tracing.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: knative-serving
  name: config-tracing
  labels:
    app.kubernetes.io/component: tracing
    serving.knative.dev/release: v1.3.2
    helm.sh/chart: knative-serving-1.3.2
    app.kubernetes.io/instance: my-openfunction
    app.kubernetes.io/version: "1.3.2"
    app.kubernetes.io/managed-by: Helm
  annotations:
    knative.dev/example-checksum: "26614636"
data:
  _example: |
    ################################
    #                              #
    #    EXAMPLE CONFIGURATION     #
    #                              #
    ################################

    # This block is not actually functional configuration,
    # but serves to illustrate the available configuration
    # options and document them in a way that is accessible
    # to users that `kubectl edit` this config map.
    #
    # These sample configuration options may be copied out of
    # this example block and unindented to be in the data block
    # to actually change the configuration.
    #
    # This may be "zipkin" or "none" (default)
    backend: "none"

    # URL to zipkin collector where traces are sent.
    # This must be specified when backend is "zipkin"
    zipkin-endpoint: "http://zipkin.istio-system.svc.cluster.local:9411/api/v2/spans"

    # Enable zipkin debug mode. This allows all spans to be sent to the server
    # bypassing sampling.
    debug: "false"

    # Percentage (0-1) of requests to trace
    sample-rate: "0.1"
---
# Source: openfunction/charts/tekton-pipelines/templates/configmaps/artifact-bucket.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: tekton-pipelines
  name: config-artifact-bucket
  labels:
    helm.sh/chart: tekton-pipelines-0.37.2
    app.kubernetes.io/name: tekton-pipelines
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
    app.kubernetes.io/version: "v0.37.2"
    app.kubernetes.io/managed-by: Helm
---
# Source: openfunction/charts/tekton-pipelines/templates/configmaps/artifact-pvc.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: tekton-pipelines
  name: config-artifact-pvc
  labels:
    helm.sh/chart: tekton-pipelines-0.37.2
    app.kubernetes.io/name: tekton-pipelines
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
    app.kubernetes.io/version: "v0.37.2"
    app.kubernetes.io/managed-by: Helm
---
# Source: openfunction/charts/tekton-pipelines/templates/configmaps/defaults.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: tekton-pipelines
  name: config-defaults
  labels:
    helm.sh/chart: tekton-pipelines-0.37.2
    app.kubernetes.io/name: tekton-pipelines
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
    app.kubernetes.io/version: "v0.37.2"
    app.kubernetes.io/managed-by: Helm
data:
  _example: |
    ################################
    #                              #
    #    EXAMPLE CONFIGURATION     #
    #                              #
    ################################

    # This block is not actually functional configuration,
    # but serves to illustrate the available configuration
    # options and document them in a way that is accessible
    # to users that `kubectl edit` this config map.
    #
    # These sample configuration options may be copied out of
    # this example block and unindented to be in the data block
    # to actually change the configuration.

    # default-timeout-minutes contains the default number of
    # minutes to use for TaskRun and PipelineRun, if none is specified.
    default-timeout-minutes: "60"  # 60 minutes

    # default-service-account contains the default service account name
    # to use for TaskRun and PipelineRun, if none is specified.
    default-service-account: "default"

    # default-managed-by-label-value contains the default value given to the
    # "app.kubernetes.io/managed-by" label applied to all Pods created for
    # TaskRuns. If a user's requested TaskRun specifies another value for this
    # label, the user's request supercedes.
    default-managed-by-label-value: "tekton-pipelines"

    # default-pod-template contains the default pod template to use for
    # TaskRun and PipelineRun. If a pod template is specified on the
    # PipelineRun, the default-pod-template is merged with that one.
    # default-pod-template:

    # default-affinity-assistant-pod-template contains the default pod template
    # to use for affinity assistant pods. If a pod template is specified on the
    # PipelineRun, the default-affinity-assistant-pod-template is merged with
    # that one.
    # default-affinity-assistant-pod-template:

    # default-cloud-events-sink contains the default CloudEvents sink to be
    # used for TaskRun and PipelineRun, when no sink is specified.
    # Note that right now it is still not possible to set a PipelineRun or
    # TaskRun specific sink, so the default is the only option available.
    # If no sink is specified, no CloudEvent is generated
    # default-cloud-events-sink:

    # default-task-run-workspace-binding contains the default workspace
    # configuration provided for any Workspaces that a Task declares
    # but that a TaskRun does not explicitly provide.
    # default-task-run-workspace-binding: |
    #   emptyDir: {}

    # default-max-matrix-combinations-count contains the default maximum number
    # of combinations from a Matrix, if none is specified.
    default-max-matrix-combinations-count: "256"
---
# Source: openfunction/charts/tekton-pipelines/templates/configmaps/feature-flags.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: tekton-pipelines
  name: feature-flags
  labels:
    helm.sh/chart: tekton-pipelines-0.37.2
    app.kubernetes.io/name: tekton-pipelines
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
    app.kubernetes.io/version: "v0.37.2"
    app.kubernetes.io/managed-by: Helm
data:
  disable-affinity-assistant: "false"
  disable-creds-init: "false"
  enable-api-fields: "stable"
  enable-custom-tasks: "false"
  enable-tekton-oci-bundles: "false"
  require-git-ssh-secret-known-hosts: "false"
  running-in-environment-with-injected-sidecars: "true"
  send-cloudevents-for-runs: "false"
---
# Source: openfunction/charts/tekton-pipelines/templates/configmaps/leader-election.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: tekton-pipelines
  name: config-leader-election
  labels:
    helm.sh/chart: tekton-pipelines-0.37.2
    app.kubernetes.io/name: tekton-pipelines
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
    app.kubernetes.io/version: "v0.37.2"
    app.kubernetes.io/managed-by: Helm
data:
  lease-duration: "60s"
  renew-deadline: "40s"
  retry-period: "10s"
---
# Source: openfunction/charts/tekton-pipelines/templates/configmaps/logging.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: tekton-pipelines
  name: config-logging
  labels:
    helm.sh/chart: tekton-pipelines-0.37.2
    app.kubernetes.io/name: tekton-pipelines
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
    app.kubernetes.io/version: "v0.37.2"
    app.kubernetes.io/managed-by: Helm
data:
  loglevel.controller: "info"
  loglevel.webhook: "info"
  zap-logger-config: "{\n  \"level\": \"info\",\n  \"development\": false,\n  \"sampling\": {\n    \"initial\": 100,\n    \"thereafter\": 100\n  },\n  \"outputPaths\": [\"stdout\"],\n  \"errorOutputPaths\": [\"stderr\"],\n  \"encoding\": \"json\",\n  \"encoderConfig\": {\n    \"timeKey\": \"ts\",\n    \"levelKey\": \"level\",\n    \"nameKey\": \"logger\",\n    \"callerKey\": \"caller\",\n    \"messageKey\": \"msg\",\n    \"stacktraceKey\": \"stacktrace\",\n    \"lineEnding\": \"\",\n    \"levelEncoder\": \"\",\n    \"timeEncoder\": \"iso8601\",\n    \"durationEncoder\": \"\",\n    \"callerEncoder\": \"\"\n  }\n}\n"
---
# Source: openfunction/charts/tekton-pipelines/templates/configmaps/observability.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: tekton-pipelines
  name: config-observability
  labels:
    helm.sh/chart: tekton-pipelines-0.37.2
    app.kubernetes.io/name: tekton-pipelines
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
    app.kubernetes.io/version: "v0.37.2"
    app.kubernetes.io/managed-by: Helm
data:
  _example: |
    ################################
    #                              #
    #    EXAMPLE CONFIGURATION     #
    #                              #
    ################################

    # This block is not actually functional configuration,
    # but serves to illustrate the available configuration
    # options and document them in a way that is accessible
    # to users that `kubectl edit` this config map.
    #
    # These sample configuration options may be copied out of
    # this example block and unindented to be in the data block
    # to actually change the configuration.

    # metrics.backend-destination field specifies the system metrics destination.
    # It supports either prometheus (the default) or stackdriver.
    # Note: Using Stackdriver will incur additional charges.
    metrics.backend-destination: prometheus

    # metrics.stackdriver-project-id field specifies the Stackdriver project ID. This
    # field is optional. When running on GCE, application default credentials will be
    # used and metrics will be sent to the cluster's project if this field is
    # not provided.
    metrics.stackdriver-project-id: "<your stackdriver project id>"

    # metrics.allow-stackdriver-custom-metrics indicates whether it is allowed
    # to send metrics to Stackdriver using "global" resource type and custom
    # metric type. Setting this flag to "true" could cause extra Stackdriver
    # charge.  If metrics.backend-destination is not Stackdriver, this is
    # ignored.
    metrics.allow-stackdriver-custom-metrics: "false"
    metrics.taskrun.level: "task"
    metrics.taskrun.duration-type: "histogram"
    metrics.pipelinerun.level: "pipeline"
    metrics.pipelinerun.duration-type: "histogram"
---
# Source: openfunction/charts/tekton-pipelines/templates/configmaps/pipelines-info.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: tekton-pipelines
  name: pipelines-info
  labels:
    helm.sh/chart: tekton-pipelines-0.37.2
    app.kubernetes.io/name: tekton-pipelines
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
    app.kubernetes.io/version: "v0.37.2"
    app.kubernetes.io/managed-by: Helm
data:
  version: "v0.37.2"
---
# Source: openfunction/charts/tekton-pipelines/templates/configmaps/registry-cert.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: tekton-pipelines
  name: config-registry-cert
  labels:
    helm.sh/chart: tekton-pipelines-0.37.2
    app.kubernetes.io/name: tekton-pipelines
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
    app.kubernetes.io/version: "v0.37.2"
    app.kubernetes.io/managed-by: Helm
---
# Source: openfunction/templates/configmaps/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-openfunction-config
  labels:
    helm.sh/chart: openfunction-0.7.0
    app.kubernetes.io/name: openfunction
    app.kubernetes.io/instance: my-openfunction
    app.kubernetes.io/version: "v1.2.0"
    app.kubernetes.io/managed-by: Helm
data:
  _example: |
    knative-serving.namespace: "knative-serving"
    knative-serving.config-features.name: "config-features"
    # Configuration of the order of the plugins
    hooks: |
      pre:
      - plugin1
      - plugin2
      post:
      - plugin2
      - plugin1
    tracing: |
      # Switch for tracing, default to false
      enabled: false
      # Provider name can be set to "skywalking", "opentelemetry"
      # A valid provider must be set if tracing is enabled.
      provider:
        name: "skywalking"
        oapServer: "localhost:xxx"
      # Custom tags to add to tracing
      tags:
        func: function-with-tracing
        layer: faas
        tag1: value1
        tag2: value2
      baggage:
      # baggage key is `sw8-correlation` for skywalking and `baggage` for opentelemetry
      # Correlation context for skywalking: https://skywalking.apache.org/docs/main/latest/en/protocols/skywalking-cross-process-correlation-headers-protocol-v1/
      # baggage for opentelemetry: https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/baggage/api.md
      # W3C Baggage Specification/: https://w3c.github.io/baggage/
        key: sw8-correlation # key should be baggage for opentelemetry
        value: "base64(string key):base64(string value),base64(string key2):base64(string value2)"
  knative-serving.config-features.name: "config-features"
  knative-serving.namespace: "knative-serving"
  tracing: "enabled: false\nprovider:\n  name: \"skywalking\"\n  oapServer: \"localhost:xxx\"\ntags:\n  func: function-with-tracing\n  layer: faas\n  tag1: value1\n  tag2: value2\nbaggage:\n  key: sw8-correlation\n  value: \"base64(string key):base64(string value),base64(string key2):base64(string value2)\"\n"
  openfunction.eventsource-handler.image: "openfunction/eventsource-handler:v4"
  openfunction.trigger-handler.image: "openfunction/trigger-handler:v4"
  openfunction.dapr-proxy.image: "openfunction/dapr-proxy:v0.1.1"
---
# Source: openfunction/templates/configmaps/manager-config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-openfunction-manager-config
  labels:
    helm.sh/chart: openfunction-0.7.0
    app.kubernetes.io/name: openfunction
    app.kubernetes.io/instance: my-openfunction
    app.kubernetes.io/version: "v1.2.0"
    app.kubernetes.io/managed-by: Helm
data:
  controller_manager_config.yaml: |
    apiVersion: controller-runtime.sigs.k8s.io/v1alpha1
    health:
      healthProbeBindAddress: ":8081"
    kind: ControllerManagerConfig
    leaderElection:
      leaderElect: true
      resourceName: "79f0111e.openfunction.io"
    metrics:
      bindAddress: "127.0.0.1:8080"
    webhook:
      port: 9443
---
# Source: openfunction/charts/contour/templates/00-crds.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.7.0
  creationTimestamp: null
  name: contourconfigurations.projectcontour.io
spec:
  preserveUnknownFields: false
  group: projectcontour.io
  names:
    kind: ContourConfiguration
    listKind: ContourConfigurationList
    plural: contourconfigurations
    shortNames:
      - contourconfig
    singular: contourconfiguration
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: ContourConfiguration is the schema for a Contour instance.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: ContourConfigurationSpec represents a configuration of a Contour controller. It contains most of all the options that can be customized, the other remaining options being command line flags.
              properties:
                debug:
                  description: Debug contains parameters to enable debug logging and debug interfaces inside Contour.
                  properties:
                    address:
                      description: "Defines the Contour debug address interface. \n Contour's default is \"127.0.0.1\"."
                      type: string
                    port:
                      description: "Defines the Contour debug address port. \n Contour's default is 6060."
                      type: integer
                  type: object
                enableExternalNameService:
                  description: "EnableExternalNameService allows processing of ExternalNameServices \n Contour's default is false for security reasons."
                  type: boolean
                envoy:
                  description: Envoy contains parameters for Envoy as well as how to optionally configure a managed Envoy fleet.
                  properties:
                    clientCertificate:
                      description: ClientCertificate defines the namespace/name of the Kubernetes secret containing the client certificate and private key to be used when establishing TLS connection to upstream cluster.
                      properties:
                        name:
                          type: string
                        namespace:
                          type: string
                      required:
                        - name
                        - namespace
                      type: object
                    cluster:
                      description: Cluster holds various configurable Envoy cluster values that can be set in the config file.
                      properties:
                        dnsLookupFamily:
                          description: "DNSLookupFamily defines how external names are looked up When configured as V4, the DNS resolver will only perform a lookup for addresses in the IPv4 family. If V6 is configured, the DNS resolver will only perform a lookup for addresses in the IPv6 family. If AUTO is configured, the DNS resolver will first perform a lookup for addresses in the IPv6 family and fallback to a lookup for addresses in the IPv4 family. Note: This only applies to externalName clusters. \n See https://www.envoyproxy.io/docs/envoy/latest/api-v3/config/cluster/v3/cluster.proto.html#envoy-v3-api-enum-config-cluster-v3-cluster-dnslookupfamily for more information. \n Values: `auto` (default), `v4`, `v6`. \n Other values will produce an error."
                          type: string
                      type: object
                    defaultHTTPVersions:
                      description: "DefaultHTTPVersions defines the default set of HTTPS versions the proxy should accept. HTTP versions are strings of the form \"HTTP/xx\". Supported versions are \"HTTP/1.1\" and \"HTTP/2\". \n Values: `HTTP/1.1`, `HTTP/2` (default: both). \n Other values will produce an error."
                      items:
                        description: HTTPVersionType is the name of a supported HTTP version.
                        type: string
                      type: array
                    health:
                      description: "Health defines the endpoint Envoy uses to serve health checks. \n Contour's default is { address: \"0.0.0.0\", port: 8002 }."
                      properties:
                        address:
                          description: Defines the health address interface.
                          minLength: 1
                          type: string
                        port:
                          description: Defines the health port.
                          type: integer
                      type: object
                    http:
                      description: "Defines the HTTP Listener for Envoy. \n Contour's default is { address: \"0.0.0.0\", port: 8080, accessLog: \"/dev/stdout\" }."
                      properties:
                        accessLog:
                          description: AccessLog defines where Envoy logs are outputted for this listener.
                          type: string
                        address:
                          description: Defines an Envoy Listener Address.
                          minLength: 1
                          type: string
                        port:
                          description: Defines an Envoy listener Port.
                          type: integer
                      type: object
                    https:
                      description: "Defines the HTTPS Listener for Envoy. \n Contour's default is { address: \"0.0.0.0\", port: 8443, accessLog: \"/dev/stdout\" }."
                      properties:
                        accessLog:
                          description: AccessLog defines where Envoy logs are outputted for this listener.
                          type: string
                        address:
                          description: Defines an Envoy Listener Address.
                          minLength: 1
                          type: string
                        port:
                          description: Defines an Envoy listener Port.
                          type: integer
                      type: object
                    listener:
                      description: Listener hold various configurable Envoy listener values.
                      properties:
                        connectionBalancer:
                          description: "ConnectionBalancer. If the value is exact, the listener will use the exact connection balancer See https://www.envoyproxy.io/docs/envoy/latest/api-v2/api/v2/listener.proto#envoy-api-msg-listener-connectionbalanceconfig for more information. \n Values: (empty string): use the default ConnectionBalancer, `exact`: use the Exact ConnectionBalancer. \n Other values will produce an error."
                          type: string
                        disableAllowChunkedLength:
                          description: "DisableAllowChunkedLength disables the RFC-compliant Envoy behavior to strip the \"Content-Length\" header if \"Transfer-Encoding: chunked\" is also set. This is an emergency off-switch to revert back to Envoy's default behavior in case of failures. Please file an issue if failures are encountered. See: https://github.com/projectcontour/contour/issues/3221 \n Contour's default is false."
                          type: boolean
                        disableMergeSlashes:
                          description: "DisableMergeSlashes disables Envoy's non-standard merge_slashes path transformation option which strips duplicate slashes from request URL paths. \n Contour's default is false."
                          type: boolean
                        tls:
                          description: TLS holds various configurable Envoy TLS listener values.
                          properties:
                            cipherSuites:
                              description: "CipherSuites defines the TLS ciphers to be supported by Envoy TLS listeners when negotiating TLS 1.2. Ciphers are validated against the set that Envoy supports by default. This parameter should only be used by advanced users. Note that these will be ignored when TLS 1.3 is in use. \n This field is optional; when it is undefined, a Contour-managed ciphersuite list will be used, which may be updated to keep it secure. \n Contour's default list is:   - \"[ECDHE-ECDSA-AES128-GCM-SHA256|ECDHE-ECDSA-CHACHA20-POLY1305]\"   - \"[ECDHE-RSA-AES128-GCM-SHA256|ECDHE-RSA-CHACHA20-POLY1305]\"   - \"ECDHE-ECDSA-AES256-GCM-SHA384\"   - \"ECDHE-RSA-AES256-GCM-SHA384\" \n Ciphers provided are validated against the following list:   - \"[ECDHE-ECDSA-AES128-GCM-SHA256|ECDHE-ECDSA-CHACHA20-POLY1305]\"   - \"[ECDHE-RSA-AES128-GCM-SHA256|ECDHE-RSA-CHACHA20-POLY1305]\"   - \"ECDHE-ECDSA-AES128-GCM-SHA256\"   - \"ECDHE-RSA-AES128-GCM-SHA256\"   - \"ECDHE-ECDSA-AES128-SHA\"   - \"ECDHE-RSA-AES128-SHA\"   - \"AES128-GCM-SHA256\"   - \"AES128-SHA\"   - \"ECDHE-ECDSA-AES256-GCM-SHA384\"   - \"ECDHE-RSA-AES256-GCM-SHA384\"   - \"ECDHE-ECDSA-AES256-SHA\"   - \"ECDHE-RSA-AES256-SHA\"   - \"AES256-GCM-SHA384\"   - \"AES256-SHA\" \n Contour recommends leaving this undefined unless you are sure you must. \n See: https://www.envoyproxy.io/docs/envoy/latest/api-v3/extensions/transport_sockets/tls/v3/common.proto#extensions-transport-sockets-tls-v3-tlsparameters Note: This list is a superset of what is valid for stock Envoy builds and those using BoringSSL FIPS."
                              items:
                                type: string
                              type: array
                            minimumProtocolVersion:
                              description: "MinimumProtocolVersion is the minimum TLS version this vhost should negotiate. \n Values: `1.2` (default), `1.3`. \n Other values will produce an error."
                              type: string
                          type: object
                        useProxyProtocol:
                          description: "Use PROXY protocol for all listeners. \n Contour's default is false."
                          type: boolean
                      type: object
                    logging:
                      description: Logging defines how Envoy's logs can be configured.
                      properties:
                        accessLogFormat:
                          description: "AccessLogFormat sets the global access log format. \n Values: `envoy` (default), `json`. \n Other values will produce an error."
                          type: string
                        accessLogFormatString:
                          description: AccessLogFormatString sets the access log format when format is set to `envoy`. When empty, Envoy's default format is used.
                          type: string
                        accessLogJSONFields:
                          description: AccessLogJSONFields sets the fields that JSON logging will output when AccessLogFormat is json.
                          items:
                            type: string
                          type: array
                        accessLogLevel:
                          description: "AccessLogLevel sets the verbosity level of the access log. \n Values: `info` (default, meaning all requests are logged), `error` and `disabled`. \n Other values will produce an error."
                          type: string
                      type: object
                    metrics:
                      description: "Metrics defines the endpoint Envoy uses to serve metrics. \n Contour's default is { address: \"0.0.0.0\", port: 8002 }."
                      properties:
                        address:
                          description: Defines the metrics address interface.
                          maxLength: 253
                          minLength: 1
                          type: string
                        port:
                          description: Defines the metrics port.
                          type: integer
                        tls:
                          description: TLS holds TLS file config details. Metrics and health endpoints cannot have same port number when metrics is served over HTTPS.
                          properties:
                            caFile:
                              description: CA filename.
                              type: string
                            certFile:
                              description: Client certificate filename.
                              type: string
                            keyFile:
                              description: Client key filename.
                              type: string
                          type: object
                      type: object
                    network:
                      description: Network holds various configurable Envoy network values.
                      properties:
                        adminPort:
                          description: "Configure the port used to access the Envoy Admin interface. If configured to port \"0\" then the admin interface is disabled. \n Contour's default is 9001."
                          type: integer
                        numTrustedHops:
                          description: "XffNumTrustedHops defines the number of additional ingress proxy hops from the right side of the x-forwarded-for HTTP header to trust when determining the origin client’s IP address. \n See https://www.envoyproxy.io/docs/envoy/v1.17.0/api-v3/extensions/filters/network/http_connection_manager/v3/http_connection_manager.proto?highlight=xff_num_trusted_hops for more information. \n Contour's default is 0."
                          format: int32
                          type: integer
                      type: object
                    service:
                      description: "Service holds Envoy service parameters for setting Ingress status. \n Contour's default is { namespace: \"projectcontour\", name: \"envoy\" }."
                      properties:
                        name:
                          type: string
                        namespace:
                          type: string
                      required:
                        - name
                        - namespace
                      type: object
                    timeouts:
                      description: Timeouts holds various configurable timeouts that can be set in the config file.
                      properties:
                        connectTimeout:
                          description: "ConnectTimeout defines how long the proxy should wait when establishing connection to upstream service. If not set, a default value of 2 seconds will be used. \n See https://www.envoyproxy.io/docs/envoy/latest/api-v3/config/cluster/v3/cluster.proto#envoy-v3-api-field-config-cluster-v3-cluster-connect-timeout for more information."
                          type: string
                        connectionIdleTimeout:
                          description: "ConnectionIdleTimeout defines how long the proxy should wait while there are no active requests (for HTTP/1.1) or streams (for HTTP/2) before terminating an HTTP connection. Set to \"infinity\" to disable the timeout entirely. \n See https://www.envoyproxy.io/docs/envoy/latest/api-v3/config/core/v3/protocol.proto#envoy-v3-api-field-config-core-v3-httpprotocoloptions-idle-timeout for more information."
                          type: string
                        connectionShutdownGracePeriod:
                          description: "ConnectionShutdownGracePeriod defines how long the proxy will wait between sending an initial GOAWAY frame and a second, final GOAWAY frame when terminating an HTTP/2 connection. During this grace period, the proxy will continue to respond to new streams. After the final GOAWAY frame has been sent, the proxy will refuse new streams. \n See https://www.envoyproxy.io/docs/envoy/latest/api-v3/extensions/filters/network/http_connection_manager/v3/http_connection_manager.proto#envoy-v3-api-field-extensions-filters-network-http-connection-manager-v3-httpconnectionmanager-drain-timeout for more information."
                          type: string
                        delayedCloseTimeout:
                          description: "DelayedCloseTimeout defines how long envoy will wait, once connection close processing has been initiated, for the downstream peer to close the connection before Envoy closes the socket associated with the connection. \n Setting this timeout to 'infinity' will disable it, equivalent to setting it to '0' in Envoy. Leaving it unset will result in the Envoy default value being used. \n See https://www.envoyproxy.io/docs/envoy/latest/api-v3/extensions/filters/network/http_connection_manager/v3/http_connection_manager.proto#envoy-v3-api-field-extensions-filters-network-http-connection-manager-v3-httpconnectionmanager-delayed-close-timeout for more information."
                          type: string
                        maxConnectionDuration:
                          description: "MaxConnectionDuration defines the maximum period of time after an HTTP connection has been established from the client to the proxy before it is closed by the proxy, regardless of whether there has been activity or not. Omit or set to \"infinity\" for no max duration. \n See https://www.envoyproxy.io/docs/envoy/latest/api-v3/config/core/v3/protocol.proto#envoy-v3-api-field-config-core-v3-httpprotocoloptions-max-connection-duration for more information."
                          type: string
                        requestTimeout:
                          description: "RequestTimeout sets the client request timeout globally for Contour. Note that this is a timeout for the entire request, not an idle timeout. Omit or set to \"infinity\" to disable the timeout entirely. \n See https://www.envoyproxy.io/docs/envoy/latest/api-v3/extensions/filters/network/http_connection_manager/v3/http_connection_manager.proto#envoy-v3-api-field-extensions-filters-network-http-connection-manager-v3-httpconnectionmanager-request-timeout for more information."
                          type: string
                        streamIdleTimeout:
                          description: "StreamIdleTimeout defines how long the proxy should wait while there is no request activity (for HTTP/1.1) or stream activity (for HTTP/2) before terminating the HTTP request or stream. Set to \"infinity\" to disable the timeout entirely. \n See https://www.envoyproxy.io/docs/envoy/latest/api-v3/extensions/filters/network/http_connection_manager/v3/http_connection_manager.proto#envoy-v3-api-field-extensions-filters-network-http-connection-manager-v3-httpconnectionmanager-stream-idle-timeout for more information."
                          type: string
                      type: object
                  type: object
                gateway:
                  description: Gateway contains parameters for the gateway-api Gateway that Contour is configured to serve traffic.
                  properties:
                    controllerName:
                      description: ControllerName is used to determine whether Contour should reconcile a GatewayClass. The string takes the form of "projectcontour.io/<namespace>/contour". If unset, the gatewayclass controller will not be started. Exactly one of ControllerName or GatewayRef must be set.
                      type: string
                    gatewayRef:
                      description: GatewayRef defines a specific Gateway that this Contour instance corresponds to. If set, Contour will reconcile only this gateway, and will not reconcile any gateway classes. Exactly one of ControllerName or GatewayRef must be set.
                      properties:
                        name:
                          type: string
                        namespace:
                          type: string
                      required:
                        - name
                        - namespace
                      type: object
                  type: object
                health:
                  description: "Health defines the endpoints Contour uses to serve health checks. \n Contour's default is { address: \"0.0.0.0\", port: 8000 }."
                  properties:
                    address:
                      description: Defines the health address interface.
                      minLength: 1
                      type: string
                    port:
                      description: Defines the health port.
                      type: integer
                  type: object
                httpproxy:
                  description: HTTPProxy defines parameters on HTTPProxy.
                  properties:
                    disablePermitInsecure:
                      description: "DisablePermitInsecure disables the use of the permitInsecure field in HTTPProxy. \n Contour's default is false."
                      type: boolean
                    fallbackCertificate:
                      description: FallbackCertificate defines the namespace/name of the Kubernetes secret to use as fallback when a non-SNI request is received.
                      properties:
                        name:
                          type: string
                        namespace:
                          type: string
                      required:
                        - name
                        - namespace
                      type: object
                    rootNamespaces:
                      description: Restrict Contour to searching these namespaces for root ingress routes.
                      items:
                        type: string
                      type: array
                  type: object
                ingress:
                  description: Ingress contains parameters for ingress options.
                  properties:
                    classNames:
                      description: Ingress Class Names Contour should use.
                      items:
                        type: string
                      type: array
                    statusAddress:
                      description: Address to set in Ingress object status.
                      type: string
                  type: object
                metrics:
                  description: "Metrics defines the endpoint Contour uses to serve metrics. \n Contour's default is { address: \"0.0.0.0\", port: 8000 }."
                  properties:
                    address:
                      description: Defines the metrics address interface.
                      maxLength: 253
                      minLength: 1
                      type: string
                    port:
                      description: Defines the metrics port.
                      type: integer
                    tls:
                      description: TLS holds TLS file config details. Metrics and health endpoints cannot have same port number when metrics is served over HTTPS.
                      properties:
                        caFile:
                          description: CA filename.
                          type: string
                        certFile:
                          description: Client certificate filename.
                          type: string
                        keyFile:
                          description: Client key filename.
                          type: string
                      type: object
                  type: object
                policy:
                  description: Policy specifies default policy applied if not overridden by the user
                  properties:
                    applyToIngress:
                      description: "ApplyToIngress determines if the Policies will apply to ingress objects \n Contour's default is false."
                      type: boolean
                    requestHeaders:
                      description: RequestHeadersPolicy defines the request headers set/removed on all routes
                      properties:
                        remove:
                          items:
                            type: string
                          type: array
                        set:
                          additionalProperties:
                            type: string
                          type: object
                      type: object
                    responseHeaders:
                      description: ResponseHeadersPolicy defines the response headers set/removed on all routes
                      properties:
                        remove:
                          items:
                            type: string
                          type: array
                        set:
                          additionalProperties:
                            type: string
                          type: object
                      type: object
                  type: object
                rateLimitService:
                  description: RateLimitService optionally holds properties of the Rate Limit Service to be used for global rate limiting.
                  properties:
                    domain:
                      description: Domain is passed to the Rate Limit Service.
                      type: string
                    enableXRateLimitHeaders:
                      description: "EnableXRateLimitHeaders defines whether to include the X-RateLimit headers X-RateLimit-Limit, X-RateLimit-Remaining, and X-RateLimit-Reset (as defined by the IETF Internet-Draft linked below), on responses to clients when the Rate Limit Service is consulted for a request. \n ref. https://tools.ietf.org/id/draft-polli-ratelimit-headers-03.html"
                      type: boolean
                    extensionService:
                      description: ExtensionService identifies the extension service defining the RLS.
                      properties:
                        name:
                          type: string
                        namespace:
                          type: string
                      required:
                        - name
                        - namespace
                      type: object
                    failOpen:
                      description: FailOpen defines whether to allow requests to proceed when the Rate Limit Service fails to respond with a valid rate limit decision within the timeout defined on the extension service.
                      type: boolean
                  required:
                    - extensionService
                  type: object
                xdsServer:
                  description: XDSServer contains parameters for the xDS server.
                  properties:
                    address:
                      description: "Defines the xDS gRPC API address which Contour will serve. \n Contour's default is \"0.0.0.0\"."
                      minLength: 1
                      type: string
                    port:
                      description: "Defines the xDS gRPC API port which Contour will serve. \n Contour's default is 8001."
                      type: integer
                    tls:
                      description: "TLS holds TLS file config details. \n Contour's default is { caFile: \"/certs/ca.crt\", certFile: \"/certs/tls.cert\", keyFile: \"/certs/tls.key\", insecure: false }."
                      properties:
                        caFile:
                          description: CA filename.
                          type: string
                        certFile:
                          description: Client certificate filename.
                          type: string
                        insecure:
                          description: Allow serving the xDS gRPC API without TLS.
                          type: boolean
                        keyFile:
                          description: Client key filename.
                          type: string
                      type: object
                    type:
                      description: "Defines the XDSServer to use for `contour serve`. \n Values: `contour` (default), `envoy`. \n Other values will produce an error."
                      type: string
                  type: object
              type: object
            status:
              description: ContourConfigurationStatus defines the observed state of a ContourConfiguration resource.
              properties:
                conditions:
                  description: "Conditions contains the current status of the Contour resource. \n Contour will update a single condition, `Valid`, that is in normal-true polarity. \n Contour will not modify any other Conditions set in this block, in case some other controller wants to add a Condition."
                  items:
                    description: "DetailedCondition is an extension of the normal Kubernetes conditions, with two extra fields to hold sub-conditions, which provide more detailed reasons for the state (True or False) of the condition. \n `errors` holds information about sub-conditions which are fatal to that condition and render its state False. \n `warnings` holds information about sub-conditions which are not fatal to that condition and do not force the state to be False. \n Remember that Conditions have a type, a status, and a reason. \n The type is the type of the condition, the most important one in this CRD set is `Valid`. `Valid` is a positive-polarity condition: when it is `status: true` there are no problems. \n In more detail, `status: true` means that the object is has been ingested into Contour with no errors. `warnings` may still be present, and will be indicated in the Reason field. There must be zero entries in the `errors` slice in this case. \n `Valid`, `status: false` means that the object has had one or more fatal errors during processing into Contour. The details of the errors will be present under the `errors` field. There must be at least one error in the `errors` slice if `status` is `false`. \n For DetailedConditions of types other than `Valid`, the Condition must be in the negative polarity. When they have `status` `true`, there is an error. There must be at least one entry in the `errors` Subcondition slice. When they have `status` `false`, there are no serious errors, and there must be zero entries in the `errors` slice. In either case, there may be entries in the `warnings` slice. \n Regardless of the polarity, the `reason` and `message` fields must be updated with either the detail of the reason (if there is one and only one entry in total across both the `errors` and `warnings` slices), or `MultipleReasons` if there is more than one entry."
                    properties:
                      errors:
                        description: "Errors contains a slice of relevant error subconditions for this object. \n Subconditions are expected to appear when relevant (when there is a error), and disappear when not relevant. An empty slice here indicates no errors."
                        items:
                          description: "SubCondition is a Condition-like type intended for use as a subcondition inside a DetailedCondition. \n It contains a subset of the Condition fields. \n It is intended for warnings and errors, so `type` names should use abnormal-true polarity, that is, they should be of the form \"ErrorPresent: true\". \n The expected lifecycle for these errors is that they should only be present when the error or warning is, and should be removed when they are not relevant."
                          properties:
                            message:
                              description: "Message is a human readable message indicating details about the transition. \n This may be an empty string."
                              maxLength: 32768
                              type: string
                            reason:
                              description: "Reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. \n The value should be a CamelCase string. \n This field may not be empty."
                              maxLength: 1024
                              minLength: 1
                              pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                              type: string
                            status:
                              description: Status of the condition, one of True, False, Unknown.
                              enum:
                                - "True"
                                - "False"
                                - Unknown
                              type: string
                            type:
                              description: "Type of condition in `CamelCase` or in `foo.example.com/CamelCase`. \n This must be in abnormal-true polarity, that is, `ErrorFound` or `controller.io/ErrorFound`. \n The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)"
                              maxLength: 316
                              pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                              type: string
                          required:
                            - message
                            - reason
                            - status
                            - type
                          type: object
                        type: array
                      lastTransitionTime:
                        description: lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: message is a human readable message indicating details about the transition. This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                      warnings:
                        description: "Warnings contains a slice of relevant warning subconditions for this object. \n Subconditions are expected to appear when relevant (when there is a warning), and disappear when not relevant. An empty slice here indicates no warnings."
                        items:
                          description: "SubCondition is a Condition-like type intended for use as a subcondition inside a DetailedCondition. \n It contains a subset of the Condition fields. \n It is intended for warnings and errors, so `type` names should use abnormal-true polarity, that is, they should be of the form \"ErrorPresent: true\". \n The expected lifecycle for these errors is that they should only be present when the error or warning is, and should be removed when they are not relevant."
                          properties:
                            message:
                              description: "Message is a human readable message indicating details about the transition. \n This may be an empty string."
                              maxLength: 32768
                              type: string
                            reason:
                              description: "Reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. \n The value should be a CamelCase string. \n This field may not be empty."
                              maxLength: 1024
                              minLength: 1
                              pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                              type: string
                            status:
                              description: Status of the condition, one of True, False, Unknown.
                              enum:
                                - "True"
                                - "False"
                                - Unknown
                              type: string
                            type:
                              description: "Type of condition in `CamelCase` or in `foo.example.com/CamelCase`. \n This must be in abnormal-true polarity, that is, `ErrorFound` or `controller.io/ErrorFound`. \n The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)"
                              maxLength: 316
                              pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                              type: string
                          required:
                            - message
                            - reason
                            - status
                            - type
                          type: object
                        type: array
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                  x-kubernetes-list-map-keys:
                    - type
                  x-kubernetes-list-type: map
              type: object
          required:
            - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: openfunction/charts/contour/templates/00-crds.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.7.0
  creationTimestamp: null
  name: contourdeployments.projectcontour.io
spec:
  preserveUnknownFields: false
  group: projectcontour.io
  names:
    kind: ContourDeployment
    listKind: ContourDeploymentList
    plural: contourdeployments
    shortNames:
      - contourdeploy
    singular: contourdeployment
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: ContourDeployment is the schema for a Contour Deployment.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: ContourDeploymentSpec specifies options for how a Contour instance should be provisioned.
              properties:
                contour:
                  description: Contour specifies deployment-time settings for the Contour part of the installation, i.e. the xDS server/control plane and associated resources, including things like replica count for the Deployment, and node placement constraints for the pods.
                  properties:
                    kubernetesLogLevel:
                      description: KubernetesLogLevel Enable Kubernetes client debug logging with log level. If unset, defaults to 0.
                      maximum: 9
                      minimum: 0
                      type: integer
                    logLevel:
                      description: LogLevel sets the log level for Contour Allowed values are "info", "debug".
                      type: string
                    nodePlacement:
                      description: NodePlacement describes node scheduling configuration of Contour pods.
                      properties:
                        nodeSelector:
                          additionalProperties:
                            type: string
                          description: "NodeSelector is the simplest recommended form of node selection constraint and specifies a map of key-value pairs. For the pod to be eligible to run on a node, the node must have each of the indicated key-value pairs as labels (it can have additional labels as well). \n If unset, the pod(s) will be scheduled to any available node."
                          type: object
                        tolerations:
                          description: "Tolerations work with taints to ensure that pods are not scheduled onto inappropriate nodes. One or more taints are applied to a node; this marks that the node should not accept any pods that do not tolerate the taints. \n The default is an empty list. \n See https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/ for additional details."
                          items:
                            description: The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operator <operator>.
                            properties:
                              effect:
                                description: Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
                                type: string
                              key:
                                description: Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.
                                type: string
                              operator:
                                description: Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.
                                type: string
                              tolerationSeconds:
                                description: TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.
                                format: int64
                                type: integer
                              value:
                                description: Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.
                                type: string
                            type: object
                          type: array
                      type: object
                    replicas:
                      description: Replicas is the desired number of Contour replicas. If unset, defaults to 2.
                      format: int32
                      minimum: 0
                      type: integer
                    resources:
                      description: 'Compute Resources required by contour container. Cannot be updated. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                      properties:
                        limits:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: 'Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                          type: object
                        requests:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: 'Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                          type: object
                      type: object
                  type: object
                envoy:
                  description: Envoy specifies deployment-time settings for the Envoy part of the installation, i.e. the xDS client/data plane and associated resources, including things like the workload type to use (DaemonSet or Deployment), node placement constraints for the pods, and various options for the Envoy service.
                  properties:
                    extraVolumeMounts:
                      description: ExtraVolumeMounts holds the extra volume mounts to add (normally used with extraVolumes).
                      items:
                        description: VolumeMount describes a mounting of a Volume within a container.
                        properties:
                          mountPath:
                            description: Path within the container at which the volume should be mounted.  Must not contain ':'.
                            type: string
                          mountPropagation:
                            description: mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10.
                            type: string
                          name:
                            description: This must match the Name of a Volume.
                            type: string
                          readOnly:
                            description: Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.
                            type: boolean
                          subPath:
                            description: Path within the volume from which the container's volume should be mounted. Defaults to "" (volume's root).
                            type: string
                          subPathExpr:
                            description: Expanded path within the volume from which the container's volume should be mounted. Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to "" (volume's root). SubPathExpr and SubPath are mutually exclusive.
                            type: string
                        required:
                          - mountPath
                          - name
                        type: object
                      type: array
                    extraVolumes:
                      description: ExtraVolumes holds the extra volumes to add.
                      items:
                        description: Volume represents a named volume in a pod that may be accessed by any container in the pod.
                        properties:
                          awsElasticBlockStore:
                            description: 'awsElasticBlockStore represents an AWS Disk resource that is attached to a kubelet''s host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
                            properties:
                              fsType:
                                description: 'fsType is the filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore TODO: how do we prevent errors in the filesystem from compromising the machine'
                                type: string
                              partition:
                                description: 'partition is the partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as "1". Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty).'
                                format: int32
                                type: integer
                              readOnly:
                                description: 'readOnly value true will force the readOnly setting in VolumeMounts. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
                                type: boolean
                              volumeID:
                                description: 'volumeID is unique ID of the persistent disk resource in AWS (Amazon EBS volume). More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
                                type: string
                            required:
                              - volumeID
                            type: object
                          azureDisk:
                            description: azureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.
                            properties:
                              cachingMode:
                                description: 'cachingMode is the Host Caching mode: None, Read Only, Read Write.'
                                type: string
                              diskName:
                                description: diskName is the Name of the data disk in the blob storage
                                type: string
                              diskURI:
                                description: diskURI is the URI of data disk in the blob storage
                                type: string
                              fsType:
                                description: fsType is Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                                type: string
                              kind:
                                description: 'kind expected values are Shared: multiple blob disks per storage account  Dedicated: single blob disk per storage account  Managed: azure managed data disk (only in managed availability set). defaults to shared'
                                type: string
                              readOnly:
                                description: readOnly Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
                                type: boolean
                            required:
                              - diskName
                              - diskURI
                            type: object
                          azureFile:
                            description: azureFile represents an Azure File Service mount on the host and bind mount to the pod.
                            properties:
                              readOnly:
                                description: readOnly defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
                                type: boolean
                              secretName:
                                description: secretName is the  name of secret that contains Azure Storage Account Name and Key
                                type: string
                              shareName:
                                description: shareName is the azure share Name
                                type: string
                            required:
                              - secretName
                              - shareName
                            type: object
                          cephfs:
                            description: cephFS represents a Ceph FS mount on the host that shares a pod's lifetime
                            properties:
                              monitors:
                                description: 'monitors is Required: Monitors is a collection of Ceph monitors More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                                items:
                                  type: string
                                type: array
                              path:
                                description: 'path is Optional: Used as the mounted root, rather than the full Ceph tree, default is /'
                                type: string
                              readOnly:
                                description: 'readOnly is Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                                type: boolean
                              secretFile:
                                description: 'secretFile is Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                                type: string
                              secretRef:
                                description: 'secretRef is Optional: SecretRef is reference to the authentication secret for User, default is empty. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                                properties:
                                  name:
                                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                    type: string
                                type: object
                              user:
                                description: 'user is optional: User is the rados user name, default is admin More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                                type: string
                            required:
                              - monitors
                            type: object
                          cinder:
                            description: 'cinder represents a cinder volume attached and mounted on kubelets host machine. More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                            properties:
                              fsType:
                                description: 'fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                                type: string
                              readOnly:
                                description: 'readOnly defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                                type: boolean
                              secretRef:
                                description: 'secretRef is optional: points to a secret object containing parameters used to connect to OpenStack.'
                                properties:
                                  name:
                                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                    type: string
                                type: object
                              volumeID:
                                description: 'volumeID used to identify the volume in cinder. More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                                type: string
                            required:
                              - volumeID
                            type: object
                          configMap:
                            description: configMap represents a configMap that should populate this volume
                            properties:
                              defaultMode:
                                description: 'defaultMode is optional: mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.'
                                format: int32
                                type: integer
                              items:
                                description: items if unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
                                items:
                                  description: Maps a string key to a path within a volume.
                                  properties:
                                    key:
                                      description: key is the key to project.
                                      type: string
                                    mode:
                                      description: 'mode is Optional: mode bits used to set permissions on this file. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.'
                                      format: int32
                                      type: integer
                                    path:
                                      description: path is the relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
                                      type: string
                                  required:
                                    - key
                                    - path
                                  type: object
                                type: array
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                type: string
                              optional:
                                description: optional specify whether the ConfigMap or its keys must be defined
                                type: boolean
                            type: object
                          csi:
                            description: csi (Container Storage Interface) represents ephemeral storage that is handled by certain external CSI drivers (Beta feature).
                            properties:
                              driver:
                                description: driver is the name of the CSI driver that handles this volume. Consult with your admin for the correct name as registered in the cluster.
                                type: string
                              fsType:
                                description: fsType to mount. Ex. "ext4", "xfs", "ntfs". If not provided, the empty value is passed to the associated CSI driver which will determine the default filesystem to apply.
                                type: string
                              nodePublishSecretRef:
                                description: nodePublishSecretRef is a reference to the secret object containing sensitive information to pass to the CSI driver to complete the CSI NodePublishVolume and NodeUnpublishVolume calls. This field is optional, and  may be empty if no secret is required. If the secret object contains more than one secret, all secret references are passed.
                                properties:
                                  name:
                                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                    type: string
                                type: object
                              readOnly:
                                description: readOnly specifies a read-only configuration for the volume. Defaults to false (read/write).
                                type: boolean
                              volumeAttributes:
                                additionalProperties:
                                  type: string
                                description: volumeAttributes stores driver-specific properties that are passed to the CSI driver. Consult your driver's documentation for supported values.
                                type: object
                            required:
                              - driver
                            type: object
                          downwardAPI:
                            description: downwardAPI represents downward API about the pod that should populate this volume
                            properties:
                              defaultMode:
                                description: 'Optional: mode bits to use on created files by default. Must be a Optional: mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.'
                                format: int32
                                type: integer
                              items:
                                description: Items is a list of downward API volume file
                                items:
                                  description: DownwardAPIVolumeFile represents information to create the file containing the pod field
                                  properties:
                                    fieldRef:
                                      description: 'Required: Selects a field of the pod: only annotations, labels, name and namespace are supported.'
                                      properties:
                                        apiVersion:
                                          description: Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                          type: string
                                        fieldPath:
                                          description: Path of the field to select in the specified API version.
                                          type: string
                                      required:
                                        - fieldPath
                                      type: object
                                    mode:
                                      description: 'Optional: mode bits used to set permissions on this file, must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.'
                                      format: int32
                                      type: integer
                                    path:
                                      description: 'Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the ''..'' path. Must be utf-8 encoded. The first item of the relative path must not start with ''..'''
                                      type: string
                                    resourceFieldRef:
                                      description: 'Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.'
                                      properties:
                                        containerName:
                                          description: 'Container name: required for volumes, optional for env vars'
                                          type: string
                                        divisor:
                                          anyOf:
                                            - type: integer
                                            - type: string
                                          description: Specifies the output format of the exposed resources, defaults to "1"
                                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                          x-kubernetes-int-or-string: true
                                        resource:
                                          description: 'Required: resource to select'
                                          type: string
                                      required:
                                        - resource
                                      type: object
                                  required:
                                    - path
                                  type: object
                                type: array
                            type: object
                          emptyDir:
                            description: 'emptyDir represents a temporary directory that shares a pod''s lifetime. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
                            properties:
                              medium:
                                description: 'medium represents what type of storage medium should back this directory. The default is "" which means to use the node''s default medium. Must be an empty string (default) or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
                                type: string
                              sizeLimit:
                                anyOf:
                                  - type: integer
                                  - type: string
                                description: 'sizeLimit is the total amount of local storage required for this EmptyDir volume. The size limit is also applicable for memory medium. The maximum usage on memory medium EmptyDir would be the minimum value between the SizeLimit specified here and the sum of memory limits of all containers in a pod. The default is nil which means that the limit is undefined. More info: http://kubernetes.io/docs/user-guide/volumes#emptydir'
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                            type: object
                          ephemeral:
                            description: "ephemeral represents a volume that is handled by a cluster storage driver. The volume's lifecycle is tied to the pod that defines it - it will be created before the pod starts, and deleted when the pod is removed. \n Use this if: a) the volume is only needed while the pod runs, b) features of normal volumes like restoring from snapshot or capacity    tracking are needed, c) the storage driver is specified through a storage class, and d) the storage driver supports dynamic volume provisioning through    a PersistentVolumeClaim (see EphemeralVolumeSource for more    information on the connection between this volume type    and PersistentVolumeClaim). \n Use PersistentVolumeClaim or one of the vendor-specific APIs for volumes that persist for longer than the lifecycle of an individual pod. \n Use CSI for light-weight local ephemeral volumes if the CSI driver is meant to be used that way - see the documentation of the driver for more information. \n A pod can use both types of ephemeral volumes and persistent volumes at the same time."
                            properties:
                              volumeClaimTemplate:
                                description: "Will be used to create a stand-alone PVC to provision the volume. The pod in which this EphemeralVolumeSource is embedded will be the owner of the PVC, i.e. the PVC will be deleted together with the pod.  The name of the PVC will be `<pod name>-<volume name>` where `<volume name>` is the name from the `PodSpec.Volumes` array entry. Pod validation will reject the pod if the concatenated name is not valid for a PVC (for example, too long). \n An existing PVC with that name that is not owned by the pod will *not* be used for the pod to avoid using an unrelated volume by mistake. Starting the pod is then blocked until the unrelated PVC is removed. If such a pre-created PVC is meant to be used by the pod, the PVC has to updated with an owner reference to the pod once the pod exists. Normally this should not be necessary, but it may be useful when manually reconstructing a broken cluster. \n This field is read-only and no changes will be made by Kubernetes to the PVC after it has been created. \n Required, must not be nil."
                                properties:
                                  metadata:
                                    description: May contain labels and annotations that will be copied into the PVC when creating it. No other fields are allowed and will be rejected during validation.
                                    type: object
                                  spec:
                                    description: The specification for the PersistentVolumeClaim. The entire content is copied unchanged into the PVC that gets created from this template. The same fields as in a PersistentVolumeClaim are also valid here.
                                    properties:
                                      accessModes:
                                        description: 'accessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                                        items:
                                          type: string
                                        type: array
                                      dataSource:
                                        description: 'dataSource field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot) * An existing PVC (PersistentVolumeClaim) If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source. If the AnyVolumeDataSource feature gate is enabled, this field will always have the same contents as the DataSourceRef field.'
                                        properties:
                                          apiGroup:
                                            description: APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.
                                            type: string
                                          kind:
                                            description: Kind is the type of resource being referenced
                                            type: string
                                          name:
                                            description: Name is the name of resource being referenced
                                            type: string
                                        required:
                                          - kind
                                          - name
                                        type: object
                                      dataSourceRef:
                                        description: 'dataSourceRef specifies the object from which to populate the volume with data, if a non-empty volume is desired. This may be any local object from a non-empty API group (non core object) or a PersistentVolumeClaim object. When this field is specified, volume binding will only succeed if the type of the specified object matches some installed volume populator or dynamic provisioner. This field will replace the functionality of the DataSource field and as such if both fields are non-empty, they must have the same value. For backwards compatibility, both fields (DataSource and DataSourceRef) will be set to the same value automatically if one of them is empty and the other is non-empty. There are two important differences between DataSource and DataSourceRef: * While DataSource only allows two specific types of objects, DataSourceRef   allows any non-core object, as well as PersistentVolumeClaim objects. * While DataSource ignores disallowed values (dropping them), DataSourceRef   preserves all values, and generates an error if a disallowed value is   specified. (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.'
                                        properties:
                                          apiGroup:
                                            description: APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.
                                            type: string
                                          kind:
                                            description: Kind is the type of resource being referenced
                                            type: string
                                          name:
                                            description: Name is the name of resource being referenced
                                            type: string
                                        required:
                                          - kind
                                          - name
                                        type: object
                                      resources:
                                        description: 'resources represents the minimum resources the volume should have. If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements that are lower than previous value but must still be higher than capacity recorded in the status field of the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources'
                                        properties:
                                          limits:
                                            additionalProperties:
                                              anyOf:
                                                - type: integer
                                                - type: string
                                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                              x-kubernetes-int-or-string: true
                                            description: 'Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                            type: object
                                          requests:
                                            additionalProperties:
                                              anyOf:
                                                - type: integer
                                                - type: string
                                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                              x-kubernetes-int-or-string: true
                                            description: 'Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                            type: object
                                        type: object
                                      selector:
                                        description: selector is a label query over volumes to consider for binding.
                                        properties:
                                          matchExpressions:
                                            description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                            items:
                                              description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                              properties:
                                                key:
                                                  description: key is the label key that the selector applies to.
                                                  type: string
                                                operator:
                                                  description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                  type: string
                                                values:
                                                  description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                  items:
                                                    type: string
                                                  type: array
                                              required:
                                                - key
                                                - operator
                                              type: object
                                            type: array
                                          matchLabels:
                                            additionalProperties:
                                              type: string
                                            description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                            type: object
                                        type: object
                                      storageClassName:
                                        description: 'storageClassName is the name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
                                        type: string
                                      volumeMode:
                                        description: volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec.
                                        type: string
                                      volumeName:
                                        description: volumeName is the binding reference to the PersistentVolume backing this claim.
                                        type: string
                                    type: object
                                required:
                                  - spec
                                type: object
                            type: object
                          fc:
                            description: fc represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod.
                            properties:
                              fsType:
                                description: 'fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. TODO: how do we prevent errors in the filesystem from compromising the machine'
                                type: string
                              lun:
                                description: 'lun is Optional: FC target lun number'
                                format: int32
                                type: integer
                              readOnly:
                                description: 'readOnly is Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.'
                                type: boolean
                              targetWWNs:
                                description: 'targetWWNs is Optional: FC target worldwide names (WWNs)'
                                items:
                                  type: string
                                type: array
                              wwids:
                                description: 'wwids Optional: FC volume world wide identifiers (wwids) Either wwids or combination of targetWWNs and lun must be set, but not both simultaneously.'
                                items:
                                  type: string
                                type: array
                            type: object
                          flexVolume:
                            description: flexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin.
                            properties:
                              driver:
                                description: driver is the name of the driver to use for this volume.
                                type: string
                              fsType:
                                description: fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". The default filesystem depends on FlexVolume script.
                                type: string
                              options:
                                additionalProperties:
                                  type: string
                                description: 'options is Optional: this field holds extra command options if any.'
                                type: object
                              readOnly:
                                description: 'readOnly is Optional: defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.'
                                type: boolean
                              secretRef:
                                description: 'secretRef is Optional: secretRef is reference to the secret object containing sensitive information to pass to the plugin scripts. This may be empty if no secret object is specified. If the secret object contains more than one secret, all secrets are passed to the plugin scripts.'
                                properties:
                                  name:
                                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                    type: string
                                type: object
                            required:
                              - driver
                            type: object
                          flocker:
                            description: flocker represents a Flocker volume attached to a kubelet's host machine. This depends on the Flocker control service being running
                            properties:
                              datasetName:
                                description: datasetName is Name of the dataset stored as metadata -> name on the dataset for Flocker should be considered as deprecated
                                type: string
                              datasetUUID:
                                description: datasetUUID is the UUID of the dataset. This is unique identifier of a Flocker dataset
                                type: string
                            type: object
                          gcePersistentDisk:
                            description: 'gcePersistentDisk represents a GCE Disk resource that is attached to a kubelet''s host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                            properties:
                              fsType:
                                description: 'fsType is filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk TODO: how do we prevent errors in the filesystem from compromising the machine'
                                type: string
                              partition:
                                description: 'partition is the partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as "1". Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty). More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                                format: int32
                                type: integer
                              pdName:
                                description: 'pdName is unique name of the PD resource in GCE. Used to identify the disk in GCE. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                                type: string
                              readOnly:
                                description: 'readOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                                type: boolean
                            required:
                              - pdName
                            type: object
                          gitRepo:
                            description: 'gitRepo represents a git repository at a particular revision. DEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir into the Pod''s container.'
                            properties:
                              directory:
                                description: directory is the target directory name. Must not contain or start with '..'.  If '.' is supplied, the volume directory will be the git repository.  Otherwise, if specified, the volume will contain the git repository in the subdirectory with the given name.
                                type: string
                              repository:
                                description: repository is the URL
                                type: string
                              revision:
                                description: revision is the commit hash for the specified revision.
                                type: string
                            required:
                              - repository
                            type: object
                          glusterfs:
                            description: 'glusterfs represents a Glusterfs mount on the host that shares a pod''s lifetime. More info: https://examples.k8s.io/volumes/glusterfs/README.md'
                            properties:
                              endpoints:
                                description: 'endpoints is the endpoint name that details Glusterfs topology. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
                                type: string
                              path:
                                description: 'path is the Glusterfs volume path. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
                                type: string
                              readOnly:
                                description: 'readOnly here will force the Glusterfs volume to be mounted with read-only permissions. Defaults to false. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
                                type: boolean
                            required:
                              - endpoints
                              - path
                            type: object
                          hostPath:
                            description: 'hostPath represents a pre-existing file or directory on the host machine that is directly exposed to the container. This is generally used for system agents or other privileged things that are allowed to see the host machine. Most containers will NOT need this. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath --- TODO(jonesdl) We need to restrict who can use host directory mounts and who can/can not mount host directories as read/write.'
                            properties:
                              path:
                                description: 'path of the directory on the host. If the path is a symlink, it will follow the link to the real path. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath'
                                type: string
                              type:
                                description: 'type for HostPath Volume Defaults to "" More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath'
                                type: string
                            required:
                              - path
                            type: object
                          iscsi:
                            description: 'iscsi represents an ISCSI Disk resource that is attached to a kubelet''s host machine and then exposed to the pod. More info: https://examples.k8s.io/volumes/iscsi/README.md'
                            properties:
                              chapAuthDiscovery:
                                description: chapAuthDiscovery defines whether support iSCSI Discovery CHAP authentication
                                type: boolean
                              chapAuthSession:
                                description: chapAuthSession defines whether support iSCSI Session CHAP authentication
                                type: boolean
                              fsType:
                                description: 'fsType is the filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi TODO: how do we prevent errors in the filesystem from compromising the machine'
                                type: string
                              initiatorName:
                                description: initiatorName is the custom iSCSI Initiator Name. If initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface <target portal>:<volume name> will be created for the connection.
                                type: string
                              iqn:
                                description: iqn is the target iSCSI Qualified Name.
                                type: string
                              iscsiInterface:
                                description: iscsiInterface is the interface Name that uses an iSCSI transport. Defaults to 'default' (tcp).
                                type: string
                              lun:
                                description: lun represents iSCSI Target Lun number.
                                format: int32
                                type: integer
                              portals:
                                description: portals is the iSCSI Target Portal List. The portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).
                                items:
                                  type: string
                                type: array
                              readOnly:
                                description: readOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false.
                                type: boolean
                              secretRef:
                                description: secretRef is the CHAP Secret for iSCSI target and initiator authentication
                                properties:
                                  name:
                                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                    type: string
                                type: object
                              targetPortal:
                                description: targetPortal is iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).
                                type: string
                            required:
                              - iqn
                              - lun
                              - targetPortal
                            type: object
                          name:
                            description: 'name of the volume. Must be a DNS_LABEL and unique within the pod. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          nfs:
                            description: 'nfs represents an NFS mount on the host that shares a pod''s lifetime More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                            properties:
                              path:
                                description: 'path that is exported by the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                                type: string
                              readOnly:
                                description: 'readOnly here will force the NFS export to be mounted with read-only permissions. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                                type: boolean
                              server:
                                description: 'server is the hostname or IP address of the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                                type: string
                            required:
                              - path
                              - server
                            type: object
                          persistentVolumeClaim:
                            description: 'persistentVolumeClaimVolumeSource represents a reference to a PersistentVolumeClaim in the same namespace. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                            properties:
                              claimName:
                                description: 'claimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                                type: string
                              readOnly:
                                description: readOnly Will force the ReadOnly setting in VolumeMounts. Default false.
                                type: boolean
                            required:
                              - claimName
                            type: object
                          photonPersistentDisk:
                            description: photonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine
                            properties:
                              fsType:
                                description: fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                                type: string
                              pdID:
                                description: pdID is the ID that identifies Photon Controller persistent disk
                                type: string
                            required:
                              - pdID
                            type: object
                          portworxVolume:
                            description: portworxVolume represents a portworx volume attached and mounted on kubelets host machine
                            properties:
                              fsType:
                                description: fSType represents the filesystem type to mount Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs". Implicitly inferred to be "ext4" if unspecified.
                                type: string
                              readOnly:
                                description: readOnly defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
                                type: boolean
                              volumeID:
                                description: volumeID uniquely identifies a Portworx volume
                                type: string
                            required:
                              - volumeID
                            type: object
                          projected:
                            description: projected items for all in one resources secrets, configmaps, and downward API
                            properties:
                              defaultMode:
                                description: defaultMode are the mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
                                format: int32
                                type: integer
                              sources:
                                description: sources is the list of volume projections
                                items:
                                  description: Projection that may be projected along with other supported volume types
                                  properties:
                                    configMap:
                                      description: configMap information about the configMap data to project
                                      properties:
                                        items:
                                          description: items if unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
                                          items:
                                            description: Maps a string key to a path within a volume.
                                            properties:
                                              key:
                                                description: key is the key to project.
                                                type: string
                                              mode:
                                                description: 'mode is Optional: mode bits used to set permissions on this file. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.'
                                                format: int32
                                                type: integer
                                              path:
                                                description: path is the relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
                                                type: string
                                            required:
                                              - key
                                              - path
                                            type: object
                                          type: array
                                        name:
                                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                          type: string
                                        optional:
                                          description: optional specify whether the ConfigMap or its keys must be defined
                                          type: boolean
                                      type: object
                                    downwardAPI:
                                      description: downwardAPI information about the downwardAPI data to project
                                      properties:
                                        items:
                                          description: Items is a list of DownwardAPIVolume file
                                          items:
                                            description: DownwardAPIVolumeFile represents information to create the file containing the pod field
                                            properties:
                                              fieldRef:
                                                description: 'Required: Selects a field of the pod: only annotations, labels, name and namespace are supported.'
                                                properties:
                                                  apiVersion:
                                                    description: Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                                    type: string
                                                  fieldPath:
                                                    description: Path of the field to select in the specified API version.
                                                    type: string
                                                required:
                                                  - fieldPath
                                                type: object
                                              mode:
                                                description: 'Optional: mode bits used to set permissions on this file, must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.'
                                                format: int32
                                                type: integer
                                              path:
                                                description: 'Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the ''..'' path. Must be utf-8 encoded. The first item of the relative path must not start with ''..'''
                                                type: string
                                              resourceFieldRef:
                                                description: 'Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.'
                                                properties:
                                                  containerName:
                                                    description: 'Container name: required for volumes, optional for env vars'
                                                    type: string
                                                  divisor:
                                                    anyOf:
                                                      - type: integer
                                                      - type: string
                                                    description: Specifies the output format of the exposed resources, defaults to "1"
                                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                    x-kubernetes-int-or-string: true
                                                  resource:
                                                    description: 'Required: resource to select'
                                                    type: string
                                                required:
                                                  - resource
                                                type: object
                                            required:
                                              - path
                                            type: object
                                          type: array
                                      type: object
                                    secret:
                                      description: secret information about the secret data to project
                                      properties:
                                        items:
                                          description: items if unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
                                          items:
                                            description: Maps a string key to a path within a volume.
                                            properties:
                                              key:
                                                description: key is the key to project.
                                                type: string
                                              mode:
                                                description: 'mode is Optional: mode bits used to set permissions on this file. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.'
                                                format: int32
                                                type: integer
                                              path:
                                                description: path is the relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
                                                type: string
                                            required:
                                              - key
                                              - path
                                            type: object
                                          type: array
                                        name:
                                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                          type: string
                                        optional:
                                          description: optional field specify whether the Secret or its key must be defined
                                          type: boolean
                                      type: object
                                    serviceAccountToken:
                                      description: serviceAccountToken is information about the serviceAccountToken data to project
                                      properties:
                                        audience:
                                          description: audience is the intended audience of the token. A recipient of a token must identify itself with an identifier specified in the audience of the token, and otherwise should reject the token. The audience defaults to the identifier of the apiserver.
                                          type: string
                                        expirationSeconds:
                                          description: expirationSeconds is the requested duration of validity of the service account token. As the token approaches expiration, the kubelet volume plugin will proactively rotate the service account token. The kubelet will start trying to rotate the token if the token is older than 80 percent of its time to live or if the token is older than 24 hours.Defaults to 1 hour and must be at least 10 minutes.
                                          format: int64
                                          type: integer
                                        path:
                                          description: path is the path relative to the mount point of the file to project the token into.
                                          type: string
                                      required:
                                        - path
                                      type: object
                                  type: object
                                type: array
                            type: object
                          quobyte:
                            description: quobyte represents a Quobyte mount on the host that shares a pod's lifetime
                            properties:
                              group:
                                description: group to map volume access to Default is no group
                                type: string
                              readOnly:
                                description: readOnly here will force the Quobyte volume to be mounted with read-only permissions. Defaults to false.
                                type: boolean
                              registry:
                                description: registry represents a single or multiple Quobyte Registry services specified as a string as host:port pair (multiple entries are separated with commas) which acts as the central registry for volumes
                                type: string
                              tenant:
                                description: tenant owning the given Quobyte volume in the Backend Used with dynamically provisioned Quobyte volumes, value is set by the plugin
                                type: string
                              user:
                                description: user to map volume access to Defaults to serivceaccount user
                                type: string
                              volume:
                                description: volume is a string that references an already created Quobyte volume by name.
                                type: string
                            required:
                              - registry
                              - volume
                            type: object
                          rbd:
                            description: 'rbd represents a Rados Block Device mount on the host that shares a pod''s lifetime. More info: https://examples.k8s.io/volumes/rbd/README.md'
                            properties:
                              fsType:
                                description: 'fsType is the filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd TODO: how do we prevent errors in the filesystem from compromising the machine'
                                type: string
                              image:
                                description: 'image is the rados image name. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                type: string
                              keyring:
                                description: 'keyring is the path to key ring for RBDUser. Default is /etc/ceph/keyring. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                type: string
                              monitors:
                                description: 'monitors is a collection of Ceph monitors. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                items:
                                  type: string
                                type: array
                              pool:
                                description: 'pool is the rados pool name. Default is rbd. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                type: string
                              readOnly:
                                description: 'readOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                type: boolean
                              secretRef:
                                description: 'secretRef is name of the authentication secret for RBDUser. If provided overrides keyring. Default is nil. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                properties:
                                  name:
                                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                    type: string
                                type: object
                              user:
                                description: 'user is the rados user name. Default is admin. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                type: string
                            required:
                              - image
                              - monitors
                            type: object
                          scaleIO:
                            description: scaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes.
                            properties:
                              fsType:
                                description: fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Default is "xfs".
                                type: string
                              gateway:
                                description: gateway is the host address of the ScaleIO API Gateway.
                                type: string
                              protectionDomain:
                                description: protectionDomain is the name of the ScaleIO Protection Domain for the configured storage.
                                type: string
                              readOnly:
                                description: readOnly Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
                                type: boolean
                              secretRef:
                                description: secretRef references to the secret for ScaleIO user and other sensitive information. If this is not provided, Login operation will fail.
                                properties:
                                  name:
                                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                    type: string
                                type: object
                              sslEnabled:
                                description: sslEnabled Flag enable/disable SSL communication with Gateway, default false
                                type: boolean
                              storageMode:
                                description: storageMode indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned. Default is ThinProvisioned.
                                type: string
                              storagePool:
                                description: storagePool is the ScaleIO Storage Pool associated with the protection domain.
                                type: string
                              system:
                                description: system is the name of the storage system as configured in ScaleIO.
                                type: string
                              volumeName:
                                description: volumeName is the name of a volume already created in the ScaleIO system that is associated with this volume source.
                                type: string
                            required:
                              - gateway
                              - secretRef
                              - system
                            type: object
                          secret:
                            description: 'secret represents a secret that should populate this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret'
                            properties:
                              defaultMode:
                                description: 'defaultMode is Optional: mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.'
                                format: int32
                                type: integer
                              items:
                                description: items If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
                                items:
                                  description: Maps a string key to a path within a volume.
                                  properties:
                                    key:
                                      description: key is the key to project.
                                      type: string
                                    mode:
                                      description: 'mode is Optional: mode bits used to set permissions on this file. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.'
                                      format: int32
                                      type: integer
                                    path:
                                      description: path is the relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
                                      type: string
                                  required:
                                    - key
                                    - path
                                  type: object
                                type: array
                              optional:
                                description: optional field specify whether the Secret or its keys must be defined
                                type: boolean
                              secretName:
                                description: 'secretName is the name of the secret in the pod''s namespace to use. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret'
                                type: string
                            type: object
                          storageos:
                            description: storageOS represents a StorageOS volume attached and mounted on Kubernetes nodes.
                            properties:
                              fsType:
                                description: fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                                type: string
                              readOnly:
                                description: readOnly defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
                                type: boolean
                              secretRef:
                                description: secretRef specifies the secret to use for obtaining the StorageOS API credentials.  If not specified, default values will be attempted.
                                properties:
                                  name:
                                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                    type: string
                                type: object
                              volumeName:
                                description: volumeName is the human-readable name of the StorageOS volume.  Volume names are only unique within a namespace.
                                type: string
                              volumeNamespace:
                                description: volumeNamespace specifies the scope of the volume within StorageOS.  If no namespace is specified then the Pod's namespace will be used.  This allows the Kubernetes name scoping to be mirrored within StorageOS for tighter integration. Set VolumeName to any name to override the default behaviour. Set to "default" if you are not using namespaces within StorageOS. Namespaces that do not pre-exist within StorageOS will be created.
                                type: string
                            type: object
                          vsphereVolume:
                            description: vsphereVolume represents a vSphere volume attached and mounted on kubelets host machine
                            properties:
                              fsType:
                                description: fsType is filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                                type: string
                              storagePolicyID:
                                description: storagePolicyID is the storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName.
                                type: string
                              storagePolicyName:
                                description: storagePolicyName is the storage Policy Based Management (SPBM) profile name.
                                type: string
                              volumePath:
                                description: volumePath is the path that identifies vSphere volume vmdk
                                type: string
                            required:
                              - volumePath
                            type: object
                        required:
                          - name
                        type: object
                      type: array
                    networkPublishing:
                      description: NetworkPublishing defines how to expose Envoy to a network.
                      properties:
                        serviceAnnotations:
                          additionalProperties:
                            type: string
                          description: ServiceAnnotations is the annotations to add to the provisioned Envoy service.
                          type: object
                        type:
                          description: "NetworkPublishingType is the type of publishing strategy to use. Valid values are: \n * LoadBalancerService \n In this configuration, network endpoints for Envoy use container networking. A Kubernetes LoadBalancer Service is created to publish Envoy network endpoints. \n See: https://kubernetes.io/docs/concepts/services-networking/service/#loadbalancer \n * NodePortService \n Publishes Envoy network endpoints using a Kubernetes NodePort Service. \n In this configuration, Envoy network endpoints use container networking. A Kubernetes NodePort Service is created to publish the network endpoints. \n See: https://kubernetes.io/docs/concepts/services-networking/service/#nodeport \n * ClusterIPService \n Publishes Envoy network endpoints using a Kubernetes ClusterIP Service. \n In this configuration, Envoy network endpoints use container networking. A Kubernetes ClusterIP Service is created to publish the network endpoints. \n See: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types \n If unset, defaults to LoadBalancerService."
                          type: string
                      type: object
                    nodePlacement:
                      description: NodePlacement describes node scheduling configuration of Envoy pods.
                      properties:
                        nodeSelector:
                          additionalProperties:
                            type: string
                          description: "NodeSelector is the simplest recommended form of node selection constraint and specifies a map of key-value pairs. For the pod to be eligible to run on a node, the node must have each of the indicated key-value pairs as labels (it can have additional labels as well). \n If unset, the pod(s) will be scheduled to any available node."
                          type: object
                        tolerations:
                          description: "Tolerations work with taints to ensure that pods are not scheduled onto inappropriate nodes. One or more taints are applied to a node; this marks that the node should not accept any pods that do not tolerate the taints. \n The default is an empty list. \n See https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/ for additional details."
                          items:
                            description: The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operator <operator>.
                            properties:
                              effect:
                                description: Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
                                type: string
                              key:
                                description: Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.
                                type: string
                              operator:
                                description: Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.
                                type: string
                              tolerationSeconds:
                                description: TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.
                                format: int64
                                type: integer
                              value:
                                description: Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.
                                type: string
                            type: object
                          type: array
                      type: object
                    podAnnotations:
                      additionalProperties:
                        type: string
                      description: PodAnnotations defines annotations to add to the Envoy pods.
                      type: object
                    replicas:
                      description: Replicas is the desired number of Envoy replicas. If WorkloadType is not "Deployment", this field is ignored. Otherwise, if unset, defaults to 2.
                      format: int32
                      minimum: 0
                      type: integer
                    resources:
                      description: 'Compute Resources required by envoy container. Cannot be updated. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                      properties:
                        limits:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: 'Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                          type: object
                        requests:
                          additionalProperties:
                            anyOf:
                              - type: integer
                              - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: 'Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                          type: object
                      type: object
                    workloadType:
                      description: WorkloadType is the type of workload to install Envoy as. Choices are DaemonSet and Deployment. If unset, defaults to DaemonSet.
                      type: string
                  type: object
                resourceLabels:
                  additionalProperties:
                    type: string
                  description: ResourceLabels is a set of labels to add to the provisioned Contour resources.
                  type: object
                runtimeSettings:
                  description: RuntimeSettings is a ContourConfiguration spec to be used when provisioning a Contour instance that will influence aspects of the Contour instance's runtime behavior.
                  properties:
                    debug:
                      description: Debug contains parameters to enable debug logging and debug interfaces inside Contour.
                      properties:
                        address:
                          description: "Defines the Contour debug address interface. \n Contour's default is \"127.0.0.1\"."
                          type: string
                        port:
                          description: "Defines the Contour debug address port. \n Contour's default is 6060."
                          type: integer
                      type: object
                    enableExternalNameService:
                      description: "EnableExternalNameService allows processing of ExternalNameServices \n Contour's default is false for security reasons."
                      type: boolean
                    envoy:
                      description: Envoy contains parameters for Envoy as well as how to optionally configure a managed Envoy fleet.
                      properties:
                        clientCertificate:
                          description: ClientCertificate defines the namespace/name of the Kubernetes secret containing the client certificate and private key to be used when establishing TLS connection to upstream cluster.
                          properties:
                            name:
                              type: string
                            namespace:
                              type: string
                          required:
                            - name
                            - namespace
                          type: object
                        cluster:
                          description: Cluster holds various configurable Envoy cluster values that can be set in the config file.
                          properties:
                            dnsLookupFamily:
                              description: "DNSLookupFamily defines how external names are looked up When configured as V4, the DNS resolver will only perform a lookup for addresses in the IPv4 family. If V6 is configured, the DNS resolver will only perform a lookup for addresses in the IPv6 family. If AUTO is configured, the DNS resolver will first perform a lookup for addresses in the IPv6 family and fallback to a lookup for addresses in the IPv4 family. Note: This only applies to externalName clusters. \n See https://www.envoyproxy.io/docs/envoy/latest/api-v3/config/cluster/v3/cluster.proto.html#envoy-v3-api-enum-config-cluster-v3-cluster-dnslookupfamily for more information. \n Values: `auto` (default), `v4`, `v6`. \n Other values will produce an error."
                              type: string
                          type: object
                        defaultHTTPVersions:
                          description: "DefaultHTTPVersions defines the default set of HTTPS versions the proxy should accept. HTTP versions are strings of the form \"HTTP/xx\". Supported versions are \"HTTP/1.1\" and \"HTTP/2\". \n Values: `HTTP/1.1`, `HTTP/2` (default: both). \n Other values will produce an error."
                          items:
                            description: HTTPVersionType is the name of a supported HTTP version.
                            type: string
                          type: array
                        health:
                          description: "Health defines the endpoint Envoy uses to serve health checks. \n Contour's default is { address: \"0.0.0.0\", port: 8002 }."
                          properties:
                            address:
                              description: Defines the health address interface.
                              minLength: 1
                              type: string
                            port:
                              description: Defines the health port.
                              type: integer
                          type: object
                        http:
                          description: "Defines the HTTP Listener for Envoy. \n Contour's default is { address: \"0.0.0.0\", port: 8080, accessLog: \"/dev/stdout\" }."
                          properties:
                            accessLog:
                              description: AccessLog defines where Envoy logs are outputted for this listener.
                              type: string
                            address:
                              description: Defines an Envoy Listener Address.
                              minLength: 1
                              type: string
                            port:
                              description: Defines an Envoy listener Port.
                              type: integer
                          type: object
                        https:
                          description: "Defines the HTTPS Listener for Envoy. \n Contour's default is { address: \"0.0.0.0\", port: 8443, accessLog: \"/dev/stdout\" }."
                          properties:
                            accessLog:
                              description: AccessLog defines where Envoy logs are outputted for this listener.
                              type: string
                            address:
                              description: Defines an Envoy Listener Address.
                              minLength: 1
                              type: string
                            port:
                              description: Defines an Envoy listener Port.
                              type: integer
                          type: object
                        listener:
                          description: Listener hold various configurable Envoy listener values.
                          properties:
                            connectionBalancer:
                              description: "ConnectionBalancer. If the value is exact, the listener will use the exact connection balancer See https://www.envoyproxy.io/docs/envoy/latest/api-v2/api/v2/listener.proto#envoy-api-msg-listener-connectionbalanceconfig for more information. \n Values: (empty string): use the default ConnectionBalancer, `exact`: use the Exact ConnectionBalancer. \n Other values will produce an error."
                              type: string
                            disableAllowChunkedLength:
                              description: "DisableAllowChunkedLength disables the RFC-compliant Envoy behavior to strip the \"Content-Length\" header if \"Transfer-Encoding: chunked\" is also set. This is an emergency off-switch to revert back to Envoy's default behavior in case of failures. Please file an issue if failures are encountered. See: https://github.com/projectcontour/contour/issues/3221 \n Contour's default is false."
                              type: boolean
                            disableMergeSlashes:
                              description: "DisableMergeSlashes disables Envoy's non-standard merge_slashes path transformation option which strips duplicate slashes from request URL paths. \n Contour's default is false."
                              type: boolean
                            tls:
                              description: TLS holds various configurable Envoy TLS listener values.
                              properties:
                                cipherSuites:
                                  description: "CipherSuites defines the TLS ciphers to be supported by Envoy TLS listeners when negotiating TLS 1.2. Ciphers are validated against the set that Envoy supports by default. This parameter should only be used by advanced users. Note that these will be ignored when TLS 1.3 is in use. \n This field is optional; when it is undefined, a Contour-managed ciphersuite list will be used, which may be updated to keep it secure. \n Contour's default list is:   - \"[ECDHE-ECDSA-AES128-GCM-SHA256|ECDHE-ECDSA-CHACHA20-POLY1305]\"   - \"[ECDHE-RSA-AES128-GCM-SHA256|ECDHE-RSA-CHACHA20-POLY1305]\"   - \"ECDHE-ECDSA-AES256-GCM-SHA384\"   - \"ECDHE-RSA-AES256-GCM-SHA384\" \n Ciphers provided are validated against the following list:   - \"[ECDHE-ECDSA-AES128-GCM-SHA256|ECDHE-ECDSA-CHACHA20-POLY1305]\"   - \"[ECDHE-RSA-AES128-GCM-SHA256|ECDHE-RSA-CHACHA20-POLY1305]\"   - \"ECDHE-ECDSA-AES128-GCM-SHA256\"   - \"ECDHE-RSA-AES128-GCM-SHA256\"   - \"ECDHE-ECDSA-AES128-SHA\"   - \"ECDHE-RSA-AES128-SHA\"   - \"AES128-GCM-SHA256\"   - \"AES128-SHA\"   - \"ECDHE-ECDSA-AES256-GCM-SHA384\"   - \"ECDHE-RSA-AES256-GCM-SHA384\"   - \"ECDHE-ECDSA-AES256-SHA\"   - \"ECDHE-RSA-AES256-SHA\"   - \"AES256-GCM-SHA384\"   - \"AES256-SHA\" \n Contour recommends leaving this undefined unless you are sure you must. \n See: https://www.envoyproxy.io/docs/envoy/latest/api-v3/extensions/transport_sockets/tls/v3/common.proto#extensions-transport-sockets-tls-v3-tlsparameters Note: This list is a superset of what is valid for stock Envoy builds and those using BoringSSL FIPS."
                                  items:
                                    type: string
                                  type: array
                                minimumProtocolVersion:
                                  description: "MinimumProtocolVersion is the minimum TLS version this vhost should negotiate. \n Values: `1.2` (default), `1.3`. \n Other values will produce an error."
                                  type: string
                              type: object
                            useProxyProtocol:
                              description: "Use PROXY protocol for all listeners. \n Contour's default is false."
                              type: boolean
                          type: object
                        logging:
                          description: Logging defines how Envoy's logs can be configured.
                          properties:
                            accessLogFormat:
                              description: "AccessLogFormat sets the global access log format. \n Values: `envoy` (default), `json`. \n Other values will produce an error."
                              type: string
                            accessLogFormatString:
                              description: AccessLogFormatString sets the access log format when format is set to `envoy`. When empty, Envoy's default format is used.
                              type: string
                            accessLogJSONFields:
                              description: AccessLogJSONFields sets the fields that JSON logging will output when AccessLogFormat is json.
                              items:
                                type: string
                              type: array
                            accessLogLevel:
                              description: "AccessLogLevel sets the verbosity level of the access log. \n Values: `info` (default, meaning all requests are logged), `error` and `disabled`. \n Other values will produce an error."
                              type: string
                          type: object
                        metrics:
                          description: "Metrics defines the endpoint Envoy uses to serve metrics. \n Contour's default is { address: \"0.0.0.0\", port: 8002 }."
                          properties:
                            address:
                              description: Defines the metrics address interface.
                              maxLength: 253
                              minLength: 1
                              type: string
                            port:
                              description: Defines the metrics port.
                              type: integer
                            tls:
                              description: TLS holds TLS file config details. Metrics and health endpoints cannot have same port number when metrics is served over HTTPS.
                              properties:
                                caFile:
                                  description: CA filename.
                                  type: string
                                certFile:
                                  description: Client certificate filename.
                                  type: string
                                keyFile:
                                  description: Client key filename.
                                  type: string
                              type: object
                          type: object
                        network:
                          description: Network holds various configurable Envoy network values.
                          properties:
                            adminPort:
                              description: "Configure the port used to access the Envoy Admin interface. If configured to port \"0\" then the admin interface is disabled. \n Contour's default is 9001."
                              type: integer
                            numTrustedHops:
                              description: "XffNumTrustedHops defines the number of additional ingress proxy hops from the right side of the x-forwarded-for HTTP header to trust when determining the origin client’s IP address. \n See https://www.envoyproxy.io/docs/envoy/v1.17.0/api-v3/extensions/filters/network/http_connection_manager/v3/http_connection_manager.proto?highlight=xff_num_trusted_hops for more information. \n Contour's default is 0."
                              format: int32
                              type: integer
                          type: object
                        service:
                          description: "Service holds Envoy service parameters for setting Ingress status. \n Contour's default is { namespace: \"projectcontour\", name: \"envoy\" }."
                          properties:
                            name:
                              type: string
                            namespace:
                              type: string
                          required:
                            - name
                            - namespace
                          type: object
                        timeouts:
                          description: Timeouts holds various configurable timeouts that can be set in the config file.
                          properties:
                            connectTimeout:
                              description: "ConnectTimeout defines how long the proxy should wait when establishing connection to upstream service. If not set, a default value of 2 seconds will be used. \n See https://www.envoyproxy.io/docs/envoy/latest/api-v3/config/cluster/v3/cluster.proto#envoy-v3-api-field-config-cluster-v3-cluster-connect-timeout for more information."
                              type: string
                            connectionIdleTimeout:
                              description: "ConnectionIdleTimeout defines how long the proxy should wait while there are no active requests (for HTTP/1.1) or streams (for HTTP/2) before terminating an HTTP connection. Set to \"infinity\" to disable the timeout entirely. \n See https://www.envoyproxy.io/docs/envoy/latest/api-v3/config/core/v3/protocol.proto#envoy-v3-api-field-config-core-v3-httpprotocoloptions-idle-timeout for more information."
                              type: string
                            connectionShutdownGracePeriod:
                              description: "ConnectionShutdownGracePeriod defines how long the proxy will wait between sending an initial GOAWAY frame and a second, final GOAWAY frame when terminating an HTTP/2 connection. During this grace period, the proxy will continue to respond to new streams. After the final GOAWAY frame has been sent, the proxy will refuse new streams. \n See https://www.envoyproxy.io/docs/envoy/latest/api-v3/extensions/filters/network/http_connection_manager/v3/http_connection_manager.proto#envoy-v3-api-field-extensions-filters-network-http-connection-manager-v3-httpconnectionmanager-drain-timeout for more information."
                              type: string
                            delayedCloseTimeout:
                              description: "DelayedCloseTimeout defines how long envoy will wait, once connection close processing has been initiated, for the downstream peer to close the connection before Envoy closes the socket associated with the connection. \n Setting this timeout to 'infinity' will disable it, equivalent to setting it to '0' in Envoy. Leaving it unset will result in the Envoy default value being used. \n See https://www.envoyproxy.io/docs/envoy/latest/api-v3/extensions/filters/network/http_connection_manager/v3/http_connection_manager.proto#envoy-v3-api-field-extensions-filters-network-http-connection-manager-v3-httpconnectionmanager-delayed-close-timeout for more information."
                              type: string
                            maxConnectionDuration:
                              description: "MaxConnectionDuration defines the maximum period of time after an HTTP connection has been established from the client to the proxy before it is closed by the proxy, regardless of whether there has been activity or not. Omit or set to \"infinity\" for no max duration. \n See https://www.envoyproxy.io/docs/envoy/latest/api-v3/config/core/v3/protocol.proto#envoy-v3-api-field-config-core-v3-httpprotocoloptions-max-connection-duration for more information."
                              type: string
                            requestTimeout:
                              description: "RequestTimeout sets the client request timeout globally for Contour. Note that this is a timeout for the entire request, not an idle timeout. Omit or set to \"infinity\" to disable the timeout entirely. \n See https://www.envoyproxy.io/docs/envoy/latest/api-v3/extensions/filters/network/http_connection_manager/v3/http_connection_manager.proto#envoy-v3-api-field-extensions-filters-network-http-connection-manager-v3-httpconnectionmanager-request-timeout for more information."
                              type: string
                            streamIdleTimeout:
                              description: "StreamIdleTimeout defines how long the proxy should wait while there is no request activity (for HTTP/1.1) or stream activity (for HTTP/2) before terminating the HTTP request or stream. Set to \"infinity\" to disable the timeout entirely. \n See https://www.envoyproxy.io/docs/envoy/latest/api-v3/extensions/filters/network/http_connection_manager/v3/http_connection_manager.proto#envoy-v3-api-field-extensions-filters-network-http-connection-manager-v3-httpconnectionmanager-stream-idle-timeout for more information."
                              type: string
                          type: object
                      type: object
                    gateway:
                      description: Gateway contains parameters for the gateway-api Gateway that Contour is configured to serve traffic.
                      properties:
                        controllerName:
                          description: ControllerName is used to determine whether Contour should reconcile a GatewayClass. The string takes the form of "projectcontour.io/<namespace>/contour". If unset, the gatewayclass controller will not be started. Exactly one of ControllerName or GatewayRef must be set.
                          type: string
                        gatewayRef:
                          description: GatewayRef defines a specific Gateway that this Contour instance corresponds to. If set, Contour will reconcile only this gateway, and will not reconcile any gateway classes. Exactly one of ControllerName or GatewayRef must be set.
                          properties:
                            name:
                              type: string
                            namespace:
                              type: string
                          required:
                            - name
                            - namespace
                          type: object
                      type: object
                    health:
                      description: "Health defines the endpoints Contour uses to serve health checks. \n Contour's default is { address: \"0.0.0.0\", port: 8000 }."
                      properties:
                        address:
                          description: Defines the health address interface.
                          minLength: 1
                          type: string
                        port:
                          description: Defines the health port.
                          type: integer
                      type: object
                    httpproxy:
                      description: HTTPProxy defines parameters on HTTPProxy.
                      properties:
                        disablePermitInsecure:
                          description: "DisablePermitInsecure disables the use of the permitInsecure field in HTTPProxy. \n Contour's default is false."
                          type: boolean
                        fallbackCertificate:
                          description: FallbackCertificate defines the namespace/name of the Kubernetes secret to use as fallback when a non-SNI request is received.
                          properties:
                            name:
                              type: string
                            namespace:
                              type: string
                          required:
                            - name
                            - namespace
                          type: object
                        rootNamespaces:
                          description: Restrict Contour to searching these namespaces for root ingress routes.
                          items:
                            type: string
                          type: array
                      type: object
                    ingress:
                      description: Ingress contains parameters for ingress options.
                      properties:
                        classNames:
                          description: Ingress Class Names Contour should use.
                          items:
                            type: string
                          type: array
                        statusAddress:
                          description: Address to set in Ingress object status.
                          type: string
                      type: object
                    metrics:
                      description: "Metrics defines the endpoint Contour uses to serve metrics. \n Contour's default is { address: \"0.0.0.0\", port: 8000 }."
                      properties:
                        address:
                          description: Defines the metrics address interface.
                          maxLength: 253
                          minLength: 1
                          type: string
                        port:
                          description: Defines the metrics port.
                          type: integer
                        tls:
                          description: TLS holds TLS file config details. Metrics and health endpoints cannot have same port number when metrics is served over HTTPS.
                          properties:
                            caFile:
                              description: CA filename.
                              type: string
                            certFile:
                              description: Client certificate filename.
                              type: string
                            keyFile:
                              description: Client key filename.
                              type: string
                          type: object
                      type: object
                    policy:
                      description: Policy specifies default policy applied if not overridden by the user
                      properties:
                        applyToIngress:
                          description: "ApplyToIngress determines if the Policies will apply to ingress objects \n Contour's default is false."
                          type: boolean
                        requestHeaders:
                          description: RequestHeadersPolicy defines the request headers set/removed on all routes
                          properties:
                            remove:
                              items:
                                type: string
                              type: array
                            set:
                              additionalProperties:
                                type: string
                              type: object
                          type: object
                        responseHeaders:
                          description: ResponseHeadersPolicy defines the response headers set/removed on all routes
                          properties:
                            remove:
                              items:
                                type: string
                              type: array
                            set:
                              additionalProperties:
                                type: string
                              type: object
                          type: object
                      type: object
                    rateLimitService:
                      description: RateLimitService optionally holds properties of the Rate Limit Service to be used for global rate limiting.
                      properties:
                        domain:
                          description: Domain is passed to the Rate Limit Service.
                          type: string
                        enableXRateLimitHeaders:
                          description: "EnableXRateLimitHeaders defines whether to include the X-RateLimit headers X-RateLimit-Limit, X-RateLimit-Remaining, and X-RateLimit-Reset (as defined by the IETF Internet-Draft linked below), on responses to clients when the Rate Limit Service is consulted for a request. \n ref. https://tools.ietf.org/id/draft-polli-ratelimit-headers-03.html"
                          type: boolean
                        extensionService:
                          description: ExtensionService identifies the extension service defining the RLS.
                          properties:
                            name:
                              type: string
                            namespace:
                              type: string
                          required:
                            - name
                            - namespace
                          type: object
                        failOpen:
                          description: FailOpen defines whether to allow requests to proceed when the Rate Limit Service fails to respond with a valid rate limit decision within the timeout defined on the extension service.
                          type: boolean
                      required:
                        - extensionService
                      type: object
                    xdsServer:
                      description: XDSServer contains parameters for the xDS server.
                      properties:
                        address:
                          description: "Defines the xDS gRPC API address which Contour will serve. \n Contour's default is \"0.0.0.0\"."
                          minLength: 1
                          type: string
                        port:
                          description: "Defines the xDS gRPC API port which Contour will serve. \n Contour's default is 8001."
                          type: integer
                        tls:
                          description: "TLS holds TLS file config details. \n Contour's default is { caFile: \"/certs/ca.crt\", certFile: \"/certs/tls.cert\", keyFile: \"/certs/tls.key\", insecure: false }."
                          properties:
                            caFile:
                              description: CA filename.
                              type: string
                            certFile:
                              description: Client certificate filename.
                              type: string
                            insecure:
                              description: Allow serving the xDS gRPC API without TLS.
                              type: boolean
                            keyFile:
                              description: Client key filename.
                              type: string
                          type: object
                        type:
                          description: "Defines the XDSServer to use for `contour serve`. \n Values: `contour` (default), `envoy`. \n Other values will produce an error."
                          type: string
                      type: object
                  type: object
              type: object
            status:
              description: ContourDeploymentStatus defines the observed state of a ContourDeployment resource.
              properties:
                conditions:
                  description: Conditions describe the current conditions of the ContourDeployment resource.
                  items:
                    description: "Condition contains details for one aspect of the current state of this API Resource. --- This struct is intended for direct use as an array at the field path .status.conditions.  For example, \n \ttype FooStatus struct{ \t    // Represents the observations of a foo's current state. \t    // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\" \t    // +patchMergeKey=type \t    // +patchStrategy=merge \t    // +listType=map \t    // +listMapKey=type \t    Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"` \n \t    // other fields \t}"
                    properties:
                      lastTransitionTime:
                        description: lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: message is a human readable message indicating details about the transition. This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                  x-kubernetes-list-map-keys:
                    - type
                  x-kubernetes-list-type: map
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: openfunction/charts/contour/templates/00-crds.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.7.0
  creationTimestamp: null
  name: extensionservices.projectcontour.io
spec:
  preserveUnknownFields: false
  group: projectcontour.io
  names:
    kind: ExtensionService
    listKind: ExtensionServiceList
    plural: extensionservices
    shortNames:
      - extensionservice
      - extensionservices
    singular: extensionservice
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: ExtensionService is the schema for the Contour extension services API. An ExtensionService resource binds a network service to the Contour API so that Contour API features can be implemented by collaborating components.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: ExtensionServiceSpec defines the desired state of an ExtensionService resource.
              properties:
                loadBalancerPolicy:
                  description: The policy for load balancing GRPC service requests. Note that the `Cookie` and `RequestHash` load balancing strategies cannot be used here.
                  properties:
                    requestHashPolicies:
                      description: RequestHashPolicies contains a list of hash policies to apply when the `RequestHash` load balancing strategy is chosen. If an element of the supplied list of hash policies is invalid, it will be ignored. If the list of hash policies is empty after validation, the load balancing strategy will fall back the the default `RoundRobin`.
                      items:
                        description: RequestHashPolicy contains configuration for an individual hash policy on a request attribute.
                        properties:
                          hashSourceIP:
                            description: HashSourceIP should be set to true when request source IP hash based load balancing is desired. It must be the only hash option field set, otherwise this request hash policy object will be ignored.
                            type: boolean
                          headerHashOptions:
                            description: HeaderHashOptions should be set when request header hash based load balancing is desired. It must be the only hash option field set, otherwise this request hash policy object will be ignored.
                            properties:
                              headerName:
                                description: HeaderName is the name of the HTTP request header that will be used to calculate the hash key. If the header specified is not present on a request, no hash will be produced.
                                minLength: 1
                                type: string
                            type: object
                          queryParameterHashOptions:
                            description: QueryParameterHashOptions should be set when request query parameter hash based load balancing is desired. It must be the only hash option field set, otherwise this request hash policy object will be ignored.
                            properties:
                              parameterName:
                                description: ParameterName is the name of the HTTP request query parameter that will be used to calculate the hash key. If the query parameter specified is not present on a request, no hash will be produced.
                                minLength: 1
                                type: string
                            type: object
                          terminal:
                            description: Terminal is a flag that allows for short-circuiting computing of a hash for a given request. If set to true, and the request attribute specified in the attribute hash options is present, no further hash policies will be used to calculate a hash for the request.
                            type: boolean
                        type: object
                      type: array
                    strategy:
                      description: Strategy specifies the policy used to balance requests across the pool of backend pods. Valid policy names are `Random`, `RoundRobin`, `WeightedLeastRequest`, `Cookie`, and `RequestHash`. If an unknown strategy name is specified or no policy is supplied, the default `RoundRobin` policy is used.
                      type: string
                  type: object
                protocol:
                  description: Protocol may be used to specify (or override) the protocol used to reach this Service. Values may be h2 or h2c. If omitted, protocol-selection falls back on Service annotations.
                  enum:
                    - h2
                    - h2c
                  type: string
                protocolVersion:
                  description: This field sets the version of the GRPC protocol that Envoy uses to send requests to the extension service. Since Contour always uses the v3 Envoy API, this is currently fixed at "v3". However, other protocol options will be available in future.
                  enum:
                    - v3
                  type: string
                services:
                  description: Services specifies the set of Kubernetes Service resources that receive GRPC extension API requests. If no weights are specified for any of the entries in this array, traffic will be spread evenly across all the services. Otherwise, traffic is balanced proportionally to the Weight field in each entry.
                  items:
                    description: ExtensionServiceTarget defines an Kubernetes Service to target with extension service traffic.
                    properties:
                      name:
                        description: Name is the name of Kubernetes service that will accept service traffic.
                        type: string
                      port:
                        description: Port (defined as Integer) to proxy traffic to since a service can have multiple defined.
                        exclusiveMaximum: true
                        maximum: 65536
                        minimum: 1
                        type: integer
                      weight:
                        description: Weight defines proportion of traffic to balance to the Kubernetes Service.
                        format: int32
                        type: integer
                    required:
                      - name
                      - port
                    type: object
                  minItems: 1
                  type: array
                timeoutPolicy:
                  description: The timeout policy for requests to the services.
                  properties:
                    idle:
                      description: Timeout for how long the proxy should wait while there is no activity during single request/response (for HTTP/1.1) or stream (for HTTP/2). Timeout will not trigger while HTTP/1.1 connection is idle between two consecutive requests. If not specified, there is no per-route idle timeout, though a connection manager-wide stream_idle_timeout default of 5m still applies.
                      pattern: ^(((\d*(\.\d*)?h)|(\d*(\.\d*)?m)|(\d*(\.\d*)?s)|(\d*(\.\d*)?ms)|(\d*(\.\d*)?us)|(\d*(\.\d*)?µs)|(\d*(\.\d*)?ns))+|infinity|infinite)$
                      type: string
                    idleConnection:
                      description: Timeout for how long connection from the proxy to the upstream service is kept when there are no active requests. If not supplied, Envoy's default value of 1h applies.
                      pattern: ^(((\d*(\.\d*)?h)|(\d*(\.\d*)?m)|(\d*(\.\d*)?s)|(\d*(\.\d*)?ms)|(\d*(\.\d*)?us)|(\d*(\.\d*)?µs)|(\d*(\.\d*)?ns))+|infinity|infinite)$
                      type: string
                    response:
                      description: Timeout for receiving a response from the server after processing a request from client. If not supplied, Envoy's default value of 15s applies.
                      pattern: ^(((\d*(\.\d*)?h)|(\d*(\.\d*)?m)|(\d*(\.\d*)?s)|(\d*(\.\d*)?ms)|(\d*(\.\d*)?us)|(\d*(\.\d*)?µs)|(\d*(\.\d*)?ns))+|infinity|infinite)$
                      type: string
                  type: object
                validation:
                  description: UpstreamValidation defines how to verify the backend service's certificate
                  properties:
                    caSecret:
                      description: Name or namespaced name of the Kubernetes secret used to validate the certificate presented by the backend. The secret must contain key named ca.crt.
                      type: string
                    subjectName:
                      description: Key which is expected to be present in the 'subjectAltName' of the presented certificate.
                      type: string
                  required:
                    - caSecret
                    - subjectName
                  type: object
              required:
                - services
              type: object
            status:
              description: ExtensionServiceStatus defines the observed state of an ExtensionService resource.
              properties:
                conditions:
                  description: "Conditions contains the current status of the ExtensionService resource. \n Contour will update a single condition, `Valid`, that is in normal-true polarity. \n Contour will not modify any other Conditions set in this block, in case some other controller wants to add a Condition."
                  items:
                    description: "DetailedCondition is an extension of the normal Kubernetes conditions, with two extra fields to hold sub-conditions, which provide more detailed reasons for the state (True or False) of the condition. \n `errors` holds information about sub-conditions which are fatal to that condition and render its state False. \n `warnings` holds information about sub-conditions which are not fatal to that condition and do not force the state to be False. \n Remember that Conditions have a type, a status, and a reason. \n The type is the type of the condition, the most important one in this CRD set is `Valid`. `Valid` is a positive-polarity condition: when it is `status: true` there are no problems. \n In more detail, `status: true` means that the object is has been ingested into Contour with no errors. `warnings` may still be present, and will be indicated in the Reason field. There must be zero entries in the `errors` slice in this case. \n `Valid`, `status: false` means that the object has had one or more fatal errors during processing into Contour. The details of the errors will be present under the `errors` field. There must be at least one error in the `errors` slice if `status` is `false`. \n For DetailedConditions of types other than `Valid`, the Condition must be in the negative polarity. When they have `status` `true`, there is an error. There must be at least one entry in the `errors` Subcondition slice. When they have `status` `false`, there are no serious errors, and there must be zero entries in the `errors` slice. In either case, there may be entries in the `warnings` slice. \n Regardless of the polarity, the `reason` and `message` fields must be updated with either the detail of the reason (if there is one and only one entry in total across both the `errors` and `warnings` slices), or `MultipleReasons` if there is more than one entry."
                    properties:
                      errors:
                        description: "Errors contains a slice of relevant error subconditions for this object. \n Subconditions are expected to appear when relevant (when there is a error), and disappear when not relevant. An empty slice here indicates no errors."
                        items:
                          description: "SubCondition is a Condition-like type intended for use as a subcondition inside a DetailedCondition. \n It contains a subset of the Condition fields. \n It is intended for warnings and errors, so `type` names should use abnormal-true polarity, that is, they should be of the form \"ErrorPresent: true\". \n The expected lifecycle for these errors is that they should only be present when the error or warning is, and should be removed when they are not relevant."
                          properties:
                            message:
                              description: "Message is a human readable message indicating details about the transition. \n This may be an empty string."
                              maxLength: 32768
                              type: string
                            reason:
                              description: "Reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. \n The value should be a CamelCase string. \n This field may not be empty."
                              maxLength: 1024
                              minLength: 1
                              pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                              type: string
                            status:
                              description: Status of the condition, one of True, False, Unknown.
                              enum:
                                - "True"
                                - "False"
                                - Unknown
                              type: string
                            type:
                              description: "Type of condition in `CamelCase` or in `foo.example.com/CamelCase`. \n This must be in abnormal-true polarity, that is, `ErrorFound` or `controller.io/ErrorFound`. \n The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)"
                              maxLength: 316
                              pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                              type: string
                          required:
                            - message
                            - reason
                            - status
                            - type
                          type: object
                        type: array
                      lastTransitionTime:
                        description: lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: message is a human readable message indicating details about the transition. This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                      warnings:
                        description: "Warnings contains a slice of relevant warning subconditions for this object. \n Subconditions are expected to appear when relevant (when there is a warning), and disappear when not relevant. An empty slice here indicates no warnings."
                        items:
                          description: "SubCondition is a Condition-like type intended for use as a subcondition inside a DetailedCondition. \n It contains a subset of the Condition fields. \n It is intended for warnings and errors, so `type` names should use abnormal-true polarity, that is, they should be of the form \"ErrorPresent: true\". \n The expected lifecycle for these errors is that they should only be present when the error or warning is, and should be removed when they are not relevant."
                          properties:
                            message:
                              description: "Message is a human readable message indicating details about the transition. \n This may be an empty string."
                              maxLength: 32768
                              type: string
                            reason:
                              description: "Reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. \n The value should be a CamelCase string. \n This field may not be empty."
                              maxLength: 1024
                              minLength: 1
                              pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                              type: string
                            status:
                              description: Status of the condition, one of True, False, Unknown.
                              enum:
                                - "True"
                                - "False"
                                - Unknown
                              type: string
                            type:
                              description: "Type of condition in `CamelCase` or in `foo.example.com/CamelCase`. \n This must be in abnormal-true polarity, that is, `ErrorFound` or `controller.io/ErrorFound`. \n The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)"
                              maxLength: 316
                              pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                              type: string
                          required:
                            - message
                            - reason
                            - status
                            - type
                          type: object
                        type: array
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                  x-kubernetes-list-map-keys:
                    - type
                  x-kubernetes-list-type: map
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: openfunction/charts/contour/templates/00-crds.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.7.0
  creationTimestamp: null
  name: httpproxies.projectcontour.io
spec:
  preserveUnknownFields: false
  group: projectcontour.io
  names:
    kind: HTTPProxy
    listKind: HTTPProxyList
    plural: httpproxies
    shortNames:
      - proxy
      - proxies
    singular: httpproxy
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - description: Fully qualified domain name
          jsonPath: .spec.virtualhost.fqdn
          name: FQDN
          type: string
        - description: Secret with TLS credentials
          jsonPath: .spec.virtualhost.tls.secretName
          name: TLS Secret
          type: string
        - description: The current status of the HTTPProxy
          jsonPath: .status.currentStatus
          name: Status
          type: string
        - description: Description of the current status
          jsonPath: .status.description
          name: Status Description
          type: string
      name: v1
      schema:
        openAPIV3Schema:
          description: HTTPProxy is an Ingress CRD specification.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: HTTPProxySpec defines the spec of the CRD.
              properties:
                includes:
                  description: Includes allow for specific routing configuration to be included from another HTTPProxy, possibly in another namespace.
                  items:
                    description: Include describes a set of policies that can be applied to an HTTPProxy in a namespace.
                    properties:
                      conditions:
                        description: 'Conditions are a set of rules that are applied to included HTTPProxies. In effect, they are added onto the Conditions of included HTTPProxy Route structs. When applied, they are merged using AND, with one exception: There can be only one Prefix MatchCondition per Conditions slice. More than one Prefix, or contradictory Conditions, will make the include invalid.'
                        items:
                          description: MatchCondition are a general holder for matching rules for HTTPProxies. One of Prefix or Header must be provided.
                          properties:
                            header:
                              description: Header specifies the header condition to match.
                              properties:
                                contains:
                                  description: Contains specifies a substring that must be present in the header value.
                                  type: string
                                exact:
                                  description: Exact specifies a string that the header value must be equal to.
                                  type: string
                                name:
                                  description: Name is the name of the header to match against. Name is required. Header names are case insensitive.
                                  type: string
                                notcontains:
                                  description: NotContains specifies a substring that must not be present in the header value.
                                  type: string
                                notexact:
                                  description: NoExact specifies a string that the header value must not be equal to. The condition is true if the header has any other value.
                                  type: string
                                notpresent:
                                  description: NotPresent specifies that condition is true when the named header is not present. Note that setting NotPresent to false does not make the condition true if the named header is present.
                                  type: boolean
                                present:
                                  description: Present specifies that condition is true when the named header is present, regardless of its value. Note that setting Present to false does not make the condition true if the named header is absent.
                                  type: boolean
                              required:
                                - name
                              type: object
                            prefix:
                              description: Prefix defines a prefix match for a request.
                              type: string
                          type: object
                        type: array
                      name:
                        description: Name of the HTTPProxy
                        type: string
                      namespace:
                        description: Namespace of the HTTPProxy to include. Defaults to the current namespace if not supplied.
                        type: string
                    required:
                      - name
                    type: object
                  type: array
                ingressClassName:
                  description: IngressClassName optionally specifies the ingress class to use for this HTTPProxy. This replaces the deprecated `kubernetes.io/ingress.class` annotation. For backwards compatibility, when that annotation is set, it is given precedence over this field.
                  type: string
                routes:
                  description: Routes are the ingress routes. If TCPProxy is present, Routes is ignored.
                  items:
                    description: Route contains the set of routes for a virtual host.
                    properties:
                      authPolicy:
                        description: AuthPolicy updates the authorization policy that was set on the root HTTPProxy object for client requests that match this route.
                        properties:
                          context:
                            additionalProperties:
                              type: string
                            description: Context is a set of key/value pairs that are sent to the authentication server in the check request. If a context is provided at an enclosing scope, the entries are merged such that the inner scope overrides matching keys from the outer scope.
                            type: object
                          disabled:
                            description: When true, this field disables client request authentication for the scope of the policy.
                            type: boolean
                        type: object
                      conditions:
                        description: 'Conditions are a set of rules that are applied to a Route. When applied, they are merged using AND, with one exception: There can be only one Prefix MatchCondition per Conditions slice. More than one Prefix, or contradictory Conditions, will make the route invalid.'
                        items:
                          description: MatchCondition are a general holder for matching rules for HTTPProxies. One of Prefix or Header must be provided.
                          properties:
                            header:
                              description: Header specifies the header condition to match.
                              properties:
                                contains:
                                  description: Contains specifies a substring that must be present in the header value.
                                  type: string
                                exact:
                                  description: Exact specifies a string that the header value must be equal to.
                                  type: string
                                name:
                                  description: Name is the name of the header to match against. Name is required. Header names are case insensitive.
                                  type: string
                                notcontains:
                                  description: NotContains specifies a substring that must not be present in the header value.
                                  type: string
                                notexact:
                                  description: NoExact specifies a string that the header value must not be equal to. The condition is true if the header has any other value.
                                  type: string
                                notpresent:
                                  description: NotPresent specifies that condition is true when the named header is not present. Note that setting NotPresent to false does not make the condition true if the named header is present.
                                  type: boolean
                                present:
                                  description: Present specifies that condition is true when the named header is present, regardless of its value. Note that setting Present to false does not make the condition true if the named header is absent.
                                  type: boolean
                              required:
                                - name
                              type: object
                            prefix:
                              description: Prefix defines a prefix match for a request.
                              type: string
                          type: object
                        type: array
                      cookieRewritePolicies:
                        description: The policies for rewriting Set-Cookie header attributes. Note that rewritten cookie names must be unique in this list. Order rewrite policies are specified in does not matter.
                        items:
                          properties:
                            domainRewrite:
                              description: DomainRewrite enables rewriting the Set-Cookie Domain element. If not set, Domain will not be rewritten.
                              properties:
                                value:
                                  description: Value is the value to rewrite the Domain attribute to. For now this is required.
                                  maxLength: 4096
                                  minLength: 1
                                  pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                  type: string
                              required:
                                - value
                              type: object
                            name:
                              description: Name is the name of the cookie for which attributes will be rewritten.
                              maxLength: 4096
                              minLength: 1
                              pattern: ^[^()<>@,;:\\"\/[\]?={} \t\x7f\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f]+$
                              type: string
                            pathRewrite:
                              description: PathRewrite enables rewriting the Set-Cookie Path element. If not set, Path will not be rewritten.
                              properties:
                                value:
                                  description: Value is the value to rewrite the Path attribute to. For now this is required.
                                  maxLength: 4096
                                  minLength: 1
                                  pattern: ^[^;\x7f\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f]+$
                                  type: string
                              required:
                                - value
                              type: object
                            sameSite:
                              description: SameSite enables rewriting the Set-Cookie SameSite element. If not set, SameSite attribute will not be rewritten.
                              enum:
                                - Strict
                                - Lax
                                - None
                              type: string
                            secure:
                              description: Secure enables rewriting the Set-Cookie Secure element. If not set, Secure attribute will not be rewritten.
                              type: boolean
                          required:
                            - name
                          type: object
                        type: array
                      directResponsePolicy:
                        description: DirectResponsePolicy returns an arbitrary HTTP response directly.
                        properties:
                          body:
                            description: "Body is the content of the response body. If this setting is omitted, no body is included in the generated response. \n Note: Body is not recommended to set too long otherwise it can have significant resource usage impacts."
                            type: string
                          statusCode:
                            description: StatusCode is the HTTP response status to be returned.
                            maximum: 599
                            minimum: 200
                            type: integer
                        required:
                          - statusCode
                        type: object
                      enableWebsockets:
                        description: Enables websocket support for the route.
                        type: boolean
                      healthCheckPolicy:
                        description: The health check policy for this route.
                        properties:
                          healthyThresholdCount:
                            description: The number of healthy health checks required before a host is marked healthy
                            format: int64
                            minimum: 0
                            type: integer
                          host:
                            description: The value of the host header in the HTTP health check request. If left empty (default value), the name "contour-envoy-healthcheck" will be used.
                            type: string
                          intervalSeconds:
                            description: The interval (seconds) between health checks
                            format: int64
                            type: integer
                          path:
                            description: HTTP endpoint used to perform health checks on upstream service
                            type: string
                          timeoutSeconds:
                            description: The time to wait (seconds) for a health check response
                            format: int64
                            type: integer
                          unhealthyThresholdCount:
                            description: The number of unhealthy health checks required before a host is marked unhealthy
                            format: int64
                            minimum: 0
                            type: integer
                        required:
                          - path
                        type: object
                      jwtVerificationPolicy:
                        description: The policy for verifying JWTs for requests to this route.
                        properties:
                          disabled:
                            description: Disabled defines whether to disable all JWT verification for this route. This can be used to opt specific routes out of the default JWT provider for the HTTPProxy. At most one of this field or the "require" field can be specified.
                            type: boolean
                          require:
                            description: Require names a specific JWT provider (defined in the virtual host) to require for the route. If specified, this field overrides the default provider if one exists. If this field is not specified, the default provider will be required if one exists. At most one of this field or the "disabled" field can be specified.
                            type: string
                        type: object
                      loadBalancerPolicy:
                        description: The load balancing policy for this route.
                        properties:
                          requestHashPolicies:
                            description: RequestHashPolicies contains a list of hash policies to apply when the `RequestHash` load balancing strategy is chosen. If an element of the supplied list of hash policies is invalid, it will be ignored. If the list of hash policies is empty after validation, the load balancing strategy will fall back the the default `RoundRobin`.
                            items:
                              description: RequestHashPolicy contains configuration for an individual hash policy on a request attribute.
                              properties:
                                hashSourceIP:
                                  description: HashSourceIP should be set to true when request source IP hash based load balancing is desired. It must be the only hash option field set, otherwise this request hash policy object will be ignored.
                                  type: boolean
                                headerHashOptions:
                                  description: HeaderHashOptions should be set when request header hash based load balancing is desired. It must be the only hash option field set, otherwise this request hash policy object will be ignored.
                                  properties:
                                    headerName:
                                      description: HeaderName is the name of the HTTP request header that will be used to calculate the hash key. If the header specified is not present on a request, no hash will be produced.
                                      minLength: 1
                                      type: string
                                  type: object
                                queryParameterHashOptions:
                                  description: QueryParameterHashOptions should be set when request query parameter hash based load balancing is desired. It must be the only hash option field set, otherwise this request hash policy object will be ignored.
                                  properties:
                                    parameterName:
                                      description: ParameterName is the name of the HTTP request query parameter that will be used to calculate the hash key. If the query parameter specified is not present on a request, no hash will be produced.
                                      minLength: 1
                                      type: string
                                  type: object
                                terminal:
                                  description: Terminal is a flag that allows for short-circuiting computing of a hash for a given request. If set to true, and the request attribute specified in the attribute hash options is present, no further hash policies will be used to calculate a hash for the request.
                                  type: boolean
                              type: object
                            type: array
                          strategy:
                            description: Strategy specifies the policy used to balance requests across the pool of backend pods. Valid policy names are `Random`, `RoundRobin`, `WeightedLeastRequest`, `Cookie`, and `RequestHash`. If an unknown strategy name is specified or no policy is supplied, the default `RoundRobin` policy is used.
                            type: string
                        type: object
                      pathRewritePolicy:
                        description: The policy for rewriting the path of the request URL after the request has been routed to a Service.
                        properties:
                          replacePrefix:
                            description: ReplacePrefix describes how the path prefix should be replaced.
                            items:
                              description: ReplacePrefix describes a path prefix replacement.
                              properties:
                                prefix:
                                  description: "Prefix specifies the URL path prefix to be replaced. \n If Prefix is specified, it must exactly match the MatchCondition prefix that is rendered by the chain of including HTTPProxies and only that path prefix will be replaced by Replacement. This allows HTTPProxies that are included through multiple roots to only replace specific path prefixes, leaving others unmodified. \n If Prefix is not specified, all routing prefixes rendered by the include chain will be replaced."
                                  minLength: 1
                                  type: string
                                replacement:
                                  description: Replacement is the string that the routing path prefix will be replaced with. This must not be empty.
                                  minLength: 1
                                  type: string
                              required:
                                - replacement
                              type: object
                            type: array
                        type: object
                      permitInsecure:
                        description: Allow this path to respond to insecure requests over HTTP which are normally not permitted when a `virtualhost.tls` block is present.
                        type: boolean
                      rateLimitPolicy:
                        description: The policy for rate limiting on the route.
                        properties:
                          global:
                            description: Global defines global rate limiting parameters, i.e. parameters defining descriptors that are sent to an external rate limit service (RLS) for a rate limit decision on each request.
                            properties:
                              descriptors:
                                description: Descriptors defines the list of descriptors that will be generated and sent to the rate limit service. Each descriptor contains 1+ key-value pair entries.
                                items:
                                  description: RateLimitDescriptor defines a list of key-value pair generators.
                                  properties:
                                    entries:
                                      description: Entries is the list of key-value pair generators.
                                      items:
                                        description: RateLimitDescriptorEntry is a key-value pair generator. Exactly one field on this struct must be non-nil.
                                        properties:
                                          genericKey:
                                            description: GenericKey defines a descriptor entry with a static key and value.
                                            properties:
                                              key:
                                                description: Key defines the key of the descriptor entry. If not set, the key is set to "generic_key".
                                                type: string
                                              value:
                                                description: Value defines the value of the descriptor entry.
                                                minLength: 1
                                                type: string
                                            type: object
                                          remoteAddress:
                                            description: RemoteAddress defines a descriptor entry with a key of "remote_address" and a value equal to the client's IP address (from x-forwarded-for).
                                            type: object
                                          requestHeader:
                                            description: RequestHeader defines a descriptor entry that's populated only if a given header is present on the request. The descriptor key is static, and the descriptor value is equal to the value of the header.
                                            properties:
                                              descriptorKey:
                                                description: DescriptorKey defines the key to use on the descriptor entry.
                                                minLength: 1
                                                type: string
                                              headerName:
                                                description: HeaderName defines the name of the header to look for on the request.
                                                minLength: 1
                                                type: string
                                            type: object
                                          requestHeaderValueMatch:
                                            description: RequestHeaderValueMatch defines a descriptor entry that's populated if the request's headers match a set of 1+ match criteria. The descriptor key is "header_match", and the descriptor value is static.
                                            properties:
                                              expectMatch:
                                                default: true
                                                description: ExpectMatch defines whether the request must positively match the match criteria in order to generate a descriptor entry (i.e. true), or not match the match criteria in order to generate a descriptor entry (i.e. false). The default is true.
                                                type: boolean
                                              headers:
                                                description: Headers is a list of 1+ match criteria to apply against the request to determine whether to populate the descriptor entry or not.
                                                items:
                                                  description: HeaderMatchCondition specifies how to conditionally match against HTTP headers. The Name field is required, but only one of the remaining fields should be be provided.
                                                  properties:
                                                    contains:
                                                      description: Contains specifies a substring that must be present in the header value.
                                                      type: string
                                                    exact:
                                                      description: Exact specifies a string that the header value must be equal to.
                                                      type: string
                                                    name:
                                                      description: Name is the name of the header to match against. Name is required. Header names are case insensitive.
                                                      type: string
                                                    notcontains:
                                                      description: NotContains specifies a substring that must not be present in the header value.
                                                      type: string
                                                    notexact:
                                                      description: NoExact specifies a string that the header value must not be equal to. The condition is true if the header has any other value.
                                                      type: string
                                                    notpresent:
                                                      description: NotPresent specifies that condition is true when the named header is not present. Note that setting NotPresent to false does not make the condition true if the named header is present.
                                                      type: boolean
                                                    present:
                                                      description: Present specifies that condition is true when the named header is present, regardless of its value. Note that setting Present to false does not make the condition true if the named header is absent.
                                                      type: boolean
                                                  required:
                                                    - name
                                                  type: object
                                                minItems: 1
                                                type: array
                                              value:
                                                description: Value defines the value of the descriptor entry.
                                                minLength: 1
                                                type: string
                                            type: object
                                        type: object
                                      minItems: 1
                                      type: array
                                  type: object
                                minItems: 1
                                type: array
                            type: object
                          local:
                            description: Local defines local rate limiting parameters, i.e. parameters for rate limiting that occurs within each Envoy pod as requests are handled.
                            properties:
                              burst:
                                description: Burst defines the number of requests above the requests per unit that should be allowed within a short period of time.
                                format: int32
                                type: integer
                              requests:
                                description: Requests defines how many requests per unit of time should be allowed before rate limiting occurs.
                                format: int32
                                minimum: 1
                                type: integer
                              responseHeadersToAdd:
                                description: ResponseHeadersToAdd is an optional list of response headers to set when a request is rate-limited.
                                items:
                                  description: HeaderValue represents a header name/value pair
                                  properties:
                                    name:
                                      description: Name represents a key of a header
                                      minLength: 1
                                      type: string
                                    value:
                                      description: Value represents the value of a header specified by a key
                                      minLength: 1
                                      type: string
                                  required:
                                    - name
                                    - value
                                  type: object
                                type: array
                              responseStatusCode:
                                description: ResponseStatusCode is the HTTP status code to use for responses to rate-limited requests. Codes must be in the 400-599 range (inclusive). If not specified, the Envoy default of 429 (Too Many Requests) is used.
                                format: int32
                                maximum: 599
                                minimum: 400
                                type: integer
                              unit:
                                description: Unit defines the period of time within which requests over the limit will be rate limited. Valid values are "second", "minute" and "hour".
                                enum:
                                  - second
                                  - minute
                                  - hour
                                type: string
                            required:
                              - requests
                              - unit
                            type: object
                        type: object
                      requestHeadersPolicy:
                        description: The policy for managing request headers during proxying.
                        properties:
                          remove:
                            description: Remove specifies a list of HTTP header names to remove.
                            items:
                              type: string
                            type: array
                          set:
                            description: Set specifies a list of HTTP header values that will be set in the HTTP header. If the header does not exist it will be added, otherwise it will be overwritten with the new value.
                            items:
                              description: HeaderValue represents a header name/value pair
                              properties:
                                name:
                                  description: Name represents a key of a header
                                  minLength: 1
                                  type: string
                                value:
                                  description: Value represents the value of a header specified by a key
                                  minLength: 1
                                  type: string
                              required:
                                - name
                                - value
                              type: object
                            type: array
                        type: object
                      requestRedirectPolicy:
                        description: RequestRedirectPolicy defines an HTTP redirection.
                        properties:
                          hostname:
                            description: Hostname is the precise hostname to be used in the value of the `Location` header in the response. When empty, the hostname of the request is used. No wildcards are allowed.
                            maxLength: 253
                            minLength: 1
                            pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                            type: string
                          path:
                            description: "Path allows for redirection to a different path from the original on the request. The path must start with a leading slash. \n Note: Only one of Path or Prefix can be defined."
                            pattern: ^\/.*$
                            type: string
                          port:
                            description: Port is the port to be used in the value of the `Location` header in the response. When empty, port (if specified) of the request is used.
                            format: int32
                            maximum: 65535
                            minimum: 1
                            type: integer
                          prefix:
                            description: "Prefix defines the value to swap the matched prefix or path with. The prefix must start with a leading slash. \n Note: Only one of Path or Prefix can be defined."
                            pattern: ^\/.*$
                            type: string
                          scheme:
                            description: Scheme is the scheme to be used in the value of the `Location` header in the response. When empty, the scheme of the request is used.
                            enum:
                              - http
                              - https
                            type: string
                          statusCode:
                            default: 302
                            description: StatusCode is the HTTP status code to be used in response.
                            enum:
                              - 301
                              - 302
                            type: integer
                        type: object
                      responseHeadersPolicy:
                        description: The policy for managing response headers during proxying. Rewriting the 'Host' header is not supported.
                        properties:
                          remove:
                            description: Remove specifies a list of HTTP header names to remove.
                            items:
                              type: string
                            type: array
                          set:
                            description: Set specifies a list of HTTP header values that will be set in the HTTP header. If the header does not exist it will be added, otherwise it will be overwritten with the new value.
                            items:
                              description: HeaderValue represents a header name/value pair
                              properties:
                                name:
                                  description: Name represents a key of a header
                                  minLength: 1
                                  type: string
                                value:
                                  description: Value represents the value of a header specified by a key
                                  minLength: 1
                                  type: string
                              required:
                                - name
                                - value
                              type: object
                            type: array
                        type: object
                      retryPolicy:
                        description: The retry policy for this route.
                        properties:
                          count:
                            default: 1
                            description: NumRetries is maximum allowed number of retries. If set to -1, then retries are disabled. If set to 0 or not supplied, the value is set to the Envoy default of 1.
                            format: int64
                            minimum: -1
                            type: integer
                          perTryTimeout:
                            description: PerTryTimeout specifies the timeout per retry attempt. Ignored if NumRetries is not supplied.
                            pattern: ^(((\d*(\.\d*)?h)|(\d*(\.\d*)?m)|(\d*(\.\d*)?s)|(\d*(\.\d*)?ms)|(\d*(\.\d*)?us)|(\d*(\.\d*)?µs)|(\d*(\.\d*)?ns))+|infinity|infinite)$
                            type: string
                          retriableStatusCodes:
                            description: "RetriableStatusCodes specifies the HTTP status codes that should be retried. \n This field is only respected when you include `retriable-status-codes` in the `RetryOn` field."
                            items:
                              format: int32
                              type: integer
                            type: array
                          retryOn:
                            description: "RetryOn specifies the conditions on which to retry a request. \n Supported [HTTP conditions](https://www.envoyproxy.io/docs/envoy/latest/configuration/http/http_filters/router_filter#x-envoy-retry-on): \n - `5xx` - `gateway-error` - `reset` - `connect-failure` - `retriable-4xx` - `refused-stream` - `retriable-status-codes` - `retriable-headers` \n Supported [gRPC conditions](https://www.envoyproxy.io/docs/envoy/latest/configuration/http/http_filters/router_filter#x-envoy-retry-grpc-on): \n - `cancelled` - `deadline-exceeded` - `internal` - `resource-exhausted` - `unavailable`"
                            items:
                              description: RetryOn is a string type alias with validation to ensure that the value is valid.
                              enum:
                                - 5xx
                                - gateway-error
                                - reset
                                - connect-failure
                                - retriable-4xx
                                - refused-stream
                                - retriable-status-codes
                                - retriable-headers
                                - cancelled
                                - deadline-exceeded
                                - internal
                                - resource-exhausted
                                - unavailable
                              type: string
                            type: array
                        type: object
                      services:
                        description: Services are the services to proxy traffic.
                        items:
                          description: Service defines an Kubernetes Service to proxy traffic.
                          properties:
                            cookieRewritePolicies:
                              description: The policies for rewriting Set-Cookie header attributes.
                              items:
                                properties:
                                  domainRewrite:
                                    description: DomainRewrite enables rewriting the Set-Cookie Domain element. If not set, Domain will not be rewritten.
                                    properties:
                                      value:
                                        description: Value is the value to rewrite the Domain attribute to. For now this is required.
                                        maxLength: 4096
                                        minLength: 1
                                        pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                        type: string
                                    required:
                                      - value
                                    type: object
                                  name:
                                    description: Name is the name of the cookie for which attributes will be rewritten.
                                    maxLength: 4096
                                    minLength: 1
                                    pattern: ^[^()<>@,;:\\"\/[\]?={} \t\x7f\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f]+$
                                    type: string
                                  pathRewrite:
                                    description: PathRewrite enables rewriting the Set-Cookie Path element. If not set, Path will not be rewritten.
                                    properties:
                                      value:
                                        description: Value is the value to rewrite the Path attribute to. For now this is required.
                                        maxLength: 4096
                                        minLength: 1
                                        pattern: ^[^;\x7f\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f]+$
                                        type: string
                                    required:
                                      - value
                                    type: object
                                  sameSite:
                                    description: SameSite enables rewriting the Set-Cookie SameSite element. If not set, SameSite attribute will not be rewritten.
                                    enum:
                                      - Strict
                                      - Lax
                                      - None
                                    type: string
                                  secure:
                                    description: Secure enables rewriting the Set-Cookie Secure element. If not set, Secure attribute will not be rewritten.
                                    type: boolean
                                required:
                                  - name
                                type: object
                              type: array
                            mirror:
                              description: If Mirror is true the Service will receive a read only mirror of the traffic for this route.
                              type: boolean
                            name:
                              description: Name is the name of Kubernetes service to proxy traffic. Names defined here will be used to look up corresponding endpoints which contain the ips to route.
                              type: string
                            port:
                              description: Port (defined as Integer) to proxy traffic to since a service can have multiple defined.
                              exclusiveMaximum: true
                              maximum: 65536
                              minimum: 1
                              type: integer
                            protocol:
                              description: Protocol may be used to specify (or override) the protocol used to reach this Service. Values may be tls, h2, h2c. If omitted, protocol-selection falls back on Service annotations.
                              enum:
                                - h2
                                - h2c
                                - tls
                              type: string
                            requestHeadersPolicy:
                              description: The policy for managing request headers during proxying. Rewriting the 'Host' header is not supported.
                              properties:
                                remove:
                                  description: Remove specifies a list of HTTP header names to remove.
                                  items:
                                    type: string
                                  type: array
                                set:
                                  description: Set specifies a list of HTTP header values that will be set in the HTTP header. If the header does not exist it will be added, otherwise it will be overwritten with the new value.
                                  items:
                                    description: HeaderValue represents a header name/value pair
                                    properties:
                                      name:
                                        description: Name represents a key of a header
                                        minLength: 1
                                        type: string
                                      value:
                                        description: Value represents the value of a header specified by a key
                                        minLength: 1
                                        type: string
                                    required:
                                      - name
                                      - value
                                    type: object
                                  type: array
                              type: object
                            responseHeadersPolicy:
                              description: The policy for managing response headers during proxying. Rewriting the 'Host' header is not supported.
                              properties:
                                remove:
                                  description: Remove specifies a list of HTTP header names to remove.
                                  items:
                                    type: string
                                  type: array
                                set:
                                  description: Set specifies a list of HTTP header values that will be set in the HTTP header. If the header does not exist it will be added, otherwise it will be overwritten with the new value.
                                  items:
                                    description: HeaderValue represents a header name/value pair
                                    properties:
                                      name:
                                        description: Name represents a key of a header
                                        minLength: 1
                                        type: string
                                      value:
                                        description: Value represents the value of a header specified by a key
                                        minLength: 1
                                        type: string
                                    required:
                                      - name
                                      - value
                                    type: object
                                  type: array
                              type: object
                            slowStartPolicy:
                              description: Slow start will gradually increase amount of traffic to a newly added endpoint.
                              properties:
                                aggression:
                                  default: "1.0"
                                  description: "The speed of traffic increase over the slow start window. Defaults to 1.0, so that endpoint would get linearly increasing amount of traffic. When increasing the value for this parameter, the speed of traffic ramp-up increases non-linearly. The value of aggression parameter should be greater than 0.0. \n More info: https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/upstream/load_balancing/slow_start"
                                  pattern: ^([0-9]+([.][0-9]+)?|[.][0-9]+)$
                                  type: string
                                minWeightPercent:
                                  default: 10
                                  description: The minimum or starting percentage of traffic to send to new endpoints. A non-zero value helps avoid a too small initial weight, which may cause endpoints in slow start mode to receive no traffic in the beginning of the slow start window. If not specified, the default is 10%.
                                  format: int32
                                  maximum: 100
                                  minimum: 0
                                  type: integer
                                window:
                                  description: The duration of slow start window. Duration is expressed in the Go [Duration format](https://godoc.org/time#ParseDuration). Valid time units are "ns", "us" (or "µs"), "ms", "s", "m", "h".
                                  pattern: ^(((\d*(\.\d*)?h)|(\d*(\.\d*)?m)|(\d*(\.\d*)?s)|(\d*(\.\d*)?ms)|(\d*(\.\d*)?us)|(\d*(\.\d*)?µs)|(\d*(\.\d*)?ns))+)$
                                  type: string
                              required:
                                - window
                              type: object
                            validation:
                              description: UpstreamValidation defines how to verify the backend service's certificate
                              properties:
                                caSecret:
                                  description: Name or namespaced name of the Kubernetes secret used to validate the certificate presented by the backend. The secret must contain key named ca.crt.
                                  type: string
                                subjectName:
                                  description: Key which is expected to be present in the 'subjectAltName' of the presented certificate.
                                  type: string
                              required:
                                - caSecret
                                - subjectName
                              type: object
                            weight:
                              description: Weight defines percentage of traffic to balance traffic
                              format: int64
                              minimum: 0
                              type: integer
                          required:
                            - name
                            - port
                          type: object
                        type: array
                      timeoutPolicy:
                        description: The timeout policy for this route.
                        properties:
                          idle:
                            description: Timeout for how long the proxy should wait while there is no activity during single request/response (for HTTP/1.1) or stream (for HTTP/2). Timeout will not trigger while HTTP/1.1 connection is idle between two consecutive requests. If not specified, there is no per-route idle timeout, though a connection manager-wide stream_idle_timeout default of 5m still applies.
                            pattern: ^(((\d*(\.\d*)?h)|(\d*(\.\d*)?m)|(\d*(\.\d*)?s)|(\d*(\.\d*)?ms)|(\d*(\.\d*)?us)|(\d*(\.\d*)?µs)|(\d*(\.\d*)?ns))+|infinity|infinite)$
                            type: string
                          idleConnection:
                            description: Timeout for how long connection from the proxy to the upstream service is kept when there are no active requests. If not supplied, Envoy's default value of 1h applies.
                            pattern: ^(((\d*(\.\d*)?h)|(\d*(\.\d*)?m)|(\d*(\.\d*)?s)|(\d*(\.\d*)?ms)|(\d*(\.\d*)?us)|(\d*(\.\d*)?µs)|(\d*(\.\d*)?ns))+|infinity|infinite)$
                            type: string
                          response:
                            description: Timeout for receiving a response from the server after processing a request from client. If not supplied, Envoy's default value of 15s applies.
                            pattern: ^(((\d*(\.\d*)?h)|(\d*(\.\d*)?m)|(\d*(\.\d*)?s)|(\d*(\.\d*)?ms)|(\d*(\.\d*)?us)|(\d*(\.\d*)?µs)|(\d*(\.\d*)?ns))+|infinity|infinite)$
                            type: string
                        type: object
                    type: object
                  type: array
                tcpproxy:
                  description: TCPProxy holds TCP proxy information.
                  properties:
                    healthCheckPolicy:
                      description: The health check policy for this tcp proxy
                      properties:
                        healthyThresholdCount:
                          description: The number of healthy health checks required before a host is marked healthy
                          format: int32
                          type: integer
                        intervalSeconds:
                          description: The interval (seconds) between health checks
                          format: int64
                          type: integer
                        timeoutSeconds:
                          description: The time to wait (seconds) for a health check response
                          format: int64
                          type: integer
                        unhealthyThresholdCount:
                          description: The number of unhealthy health checks required before a host is marked unhealthy
                          format: int32
                          type: integer
                      type: object
                    include:
                      description: Include specifies that this tcpproxy should be delegated to another HTTPProxy.
                      properties:
                        name:
                          description: Name of the child HTTPProxy
                          type: string
                        namespace:
                          description: Namespace of the HTTPProxy to include. Defaults to the current namespace if not supplied.
                          type: string
                      required:
                        - name
                      type: object
                    includes:
                      description: "IncludesDeprecated allow for specific routing configuration to be appended to another HTTPProxy in another namespace. \n Exists due to a mistake when developing HTTPProxy and the field was marked plural when it should have been singular. This field should stay to not break backwards compatibility to v1 users."
                      properties:
                        name:
                          description: Name of the child HTTPProxy
                          type: string
                        namespace:
                          description: Namespace of the HTTPProxy to include. Defaults to the current namespace if not supplied.
                          type: string
                      required:
                        - name
                      type: object
                    loadBalancerPolicy:
                      description: The load balancing policy for the backend services. Note that the `Cookie` and `RequestHash` load balancing strategies cannot be used here.
                      properties:
                        requestHashPolicies:
                          description: RequestHashPolicies contains a list of hash policies to apply when the `RequestHash` load balancing strategy is chosen. If an element of the supplied list of hash policies is invalid, it will be ignored. If the list of hash policies is empty after validation, the load balancing strategy will fall back the the default `RoundRobin`.
                          items:
                            description: RequestHashPolicy contains configuration for an individual hash policy on a request attribute.
                            properties:
                              hashSourceIP:
                                description: HashSourceIP should be set to true when request source IP hash based load balancing is desired. It must be the only hash option field set, otherwise this request hash policy object will be ignored.
                                type: boolean
                              headerHashOptions:
                                description: HeaderHashOptions should be set when request header hash based load balancing is desired. It must be the only hash option field set, otherwise this request hash policy object will be ignored.
                                properties:
                                  headerName:
                                    description: HeaderName is the name of the HTTP request header that will be used to calculate the hash key. If the header specified is not present on a request, no hash will be produced.
                                    minLength: 1
                                    type: string
                                type: object
                              queryParameterHashOptions:
                                description: QueryParameterHashOptions should be set when request query parameter hash based load balancing is desired. It must be the only hash option field set, otherwise this request hash policy object will be ignored.
                                properties:
                                  parameterName:
                                    description: ParameterName is the name of the HTTP request query parameter that will be used to calculate the hash key. If the query parameter specified is not present on a request, no hash will be produced.
                                    minLength: 1
                                    type: string
                                type: object
                              terminal:
                                description: Terminal is a flag that allows for short-circuiting computing of a hash for a given request. If set to true, and the request attribute specified in the attribute hash options is present, no further hash policies will be used to calculate a hash for the request.
                                type: boolean
                            type: object
                          type: array
                        strategy:
                          description: Strategy specifies the policy used to balance requests across the pool of backend pods. Valid policy names are `Random`, `RoundRobin`, `WeightedLeastRequest`, `Cookie`, and `RequestHash`. If an unknown strategy name is specified or no policy is supplied, the default `RoundRobin` policy is used.
                          type: string
                      type: object
                    services:
                      description: Services are the services to proxy traffic
                      items:
                        description: Service defines an Kubernetes Service to proxy traffic.
                        properties:
                          cookieRewritePolicies:
                            description: The policies for rewriting Set-Cookie header attributes.
                            items:
                              properties:
                                domainRewrite:
                                  description: DomainRewrite enables rewriting the Set-Cookie Domain element. If not set, Domain will not be rewritten.
                                  properties:
                                    value:
                                      description: Value is the value to rewrite the Domain attribute to. For now this is required.
                                      maxLength: 4096
                                      minLength: 1
                                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                      type: string
                                  required:
                                    - value
                                  type: object
                                name:
                                  description: Name is the name of the cookie for which attributes will be rewritten.
                                  maxLength: 4096
                                  minLength: 1
                                  pattern: ^[^()<>@,;:\\"\/[\]?={} \t\x7f\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f]+$
                                  type: string
                                pathRewrite:
                                  description: PathRewrite enables rewriting the Set-Cookie Path element. If not set, Path will not be rewritten.
                                  properties:
                                    value:
                                      description: Value is the value to rewrite the Path attribute to. For now this is required.
                                      maxLength: 4096
                                      minLength: 1
                                      pattern: ^[^;\x7f\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f]+$
                                      type: string
                                  required:
                                    - value
                                  type: object
                                sameSite:
                                  description: SameSite enables rewriting the Set-Cookie SameSite element. If not set, SameSite attribute will not be rewritten.
                                  enum:
                                    - Strict
                                    - Lax
                                    - None
                                  type: string
                                secure:
                                  description: Secure enables rewriting the Set-Cookie Secure element. If not set, Secure attribute will not be rewritten.
                                  type: boolean
                              required:
                                - name
                              type: object
                            type: array
                          mirror:
                            description: If Mirror is true the Service will receive a read only mirror of the traffic for this route.
                            type: boolean
                          name:
                            description: Name is the name of Kubernetes service to proxy traffic. Names defined here will be used to look up corresponding endpoints which contain the ips to route.
                            type: string
                          port:
                            description: Port (defined as Integer) to proxy traffic to since a service can have multiple defined.
                            exclusiveMaximum: true
                            maximum: 65536
                            minimum: 1
                            type: integer
                          protocol:
                            description: Protocol may be used to specify (or override) the protocol used to reach this Service. Values may be tls, h2, h2c. If omitted, protocol-selection falls back on Service annotations.
                            enum:
                              - h2
                              - h2c
                              - tls
                            type: string
                          requestHeadersPolicy:
                            description: The policy for managing request headers during proxying. Rewriting the 'Host' header is not supported.
                            properties:
                              remove:
                                description: Remove specifies a list of HTTP header names to remove.
                                items:
                                  type: string
                                type: array
                              set:
                                description: Set specifies a list of HTTP header values that will be set in the HTTP header. If the header does not exist it will be added, otherwise it will be overwritten with the new value.
                                items:
                                  description: HeaderValue represents a header name/value pair
                                  properties:
                                    name:
                                      description: Name represents a key of a header
                                      minLength: 1
                                      type: string
                                    value:
                                      description: Value represents the value of a header specified by a key
                                      minLength: 1
                                      type: string
                                  required:
                                    - name
                                    - value
                                  type: object
                                type: array
                            type: object
                          responseHeadersPolicy:
                            description: The policy for managing response headers during proxying. Rewriting the 'Host' header is not supported.
                            properties:
                              remove:
                                description: Remove specifies a list of HTTP header names to remove.
                                items:
                                  type: string
                                type: array
                              set:
                                description: Set specifies a list of HTTP header values that will be set in the HTTP header. If the header does not exist it will be added, otherwise it will be overwritten with the new value.
                                items:
                                  description: HeaderValue represents a header name/value pair
                                  properties:
                                    name:
                                      description: Name represents a key of a header
                                      minLength: 1
                                      type: string
                                    value:
                                      description: Value represents the value of a header specified by a key
                                      minLength: 1
                                      type: string
                                  required:
                                    - name
                                    - value
                                  type: object
                                type: array
                            type: object
                          slowStartPolicy:
                            description: Slow start will gradually increase amount of traffic to a newly added endpoint.
                            properties:
                              aggression:
                                default: "1.0"
                                description: "The speed of traffic increase over the slow start window. Defaults to 1.0, so that endpoint would get linearly increasing amount of traffic. When increasing the value for this parameter, the speed of traffic ramp-up increases non-linearly. The value of aggression parameter should be greater than 0.0. \n More info: https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/upstream/load_balancing/slow_start"
                                pattern: ^([0-9]+([.][0-9]+)?|[.][0-9]+)$
                                type: string
                              minWeightPercent:
                                default: 10
                                description: The minimum or starting percentage of traffic to send to new endpoints. A non-zero value helps avoid a too small initial weight, which may cause endpoints in slow start mode to receive no traffic in the beginning of the slow start window. If not specified, the default is 10%.
                                format: int32
                                maximum: 100
                                minimum: 0
                                type: integer
                              window:
                                description: The duration of slow start window. Duration is expressed in the Go [Duration format](https://godoc.org/time#ParseDuration). Valid time units are "ns", "us" (or "µs"), "ms", "s", "m", "h".
                                pattern: ^(((\d*(\.\d*)?h)|(\d*(\.\d*)?m)|(\d*(\.\d*)?s)|(\d*(\.\d*)?ms)|(\d*(\.\d*)?us)|(\d*(\.\d*)?µs)|(\d*(\.\d*)?ns))+)$
                                type: string
                            required:
                              - window
                            type: object
                          validation:
                            description: UpstreamValidation defines how to verify the backend service's certificate
                            properties:
                              caSecret:
                                description: Name or namespaced name of the Kubernetes secret used to validate the certificate presented by the backend. The secret must contain key named ca.crt.
                                type: string
                              subjectName:
                                description: Key which is expected to be present in the 'subjectAltName' of the presented certificate.
                                type: string
                            required:
                              - caSecret
                              - subjectName
                            type: object
                          weight:
                            description: Weight defines percentage of traffic to balance traffic
                            format: int64
                            minimum: 0
                            type: integer
                        required:
                          - name
                          - port
                        type: object
                      type: array
                  type: object
                virtualhost:
                  description: Virtualhost appears at most once. If it is present, the object is considered to be a "root" HTTPProxy.
                  properties:
                    authorization:
                      description: This field configures an extension service to perform authorization for this virtual host. Authorization can only be configured on virtual hosts that have TLS enabled. If the TLS configuration requires client certificate validation, the client certificate is always included in the authentication check request.
                      properties:
                        authPolicy:
                          description: AuthPolicy sets a default authorization policy for client requests. This policy will be used unless overridden by individual routes.
                          properties:
                            context:
                              additionalProperties:
                                type: string
                              description: Context is a set of key/value pairs that are sent to the authentication server in the check request. If a context is provided at an enclosing scope, the entries are merged such that the inner scope overrides matching keys from the outer scope.
                              type: object
                            disabled:
                              description: When true, this field disables client request authentication for the scope of the policy.
                              type: boolean
                          type: object
                        extensionRef:
                          description: ExtensionServiceRef specifies the extension resource that will authorize client requests.
                          properties:
                            apiVersion:
                              description: API version of the referent. If this field is not specified, the default "projectcontour.io/v1alpha1" will be used
                              minLength: 1
                              type: string
                            name:
                              description: "Name of the referent. \n More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
                              minLength: 1
                              type: string
                            namespace:
                              description: "Namespace of the referent. If this field is not specifies, the namespace of the resource that targets the referent will be used. \n More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/"
                              minLength: 1
                              type: string
                          type: object
                        failOpen:
                          description: If FailOpen is true, the client request is forwarded to the upstream service even if the authorization server fails to respond. This field should not be set in most cases. It is intended for use only while migrating applications from internal authorization to Contour external authorization.
                          type: boolean
                        responseTimeout:
                          description: ResponseTimeout configures maximum time to wait for a check response from the authorization server. Timeout durations are expressed in the Go [Duration format](https://godoc.org/time#ParseDuration). Valid time units are "ns", "us" (or "µs"), "ms", "s", "m", "h". The string "infinity" is also a valid input and specifies no timeout.
                          pattern: ^(((\d*(\.\d*)?h)|(\d*(\.\d*)?m)|(\d*(\.\d*)?s)|(\d*(\.\d*)?ms)|(\d*(\.\d*)?us)|(\d*(\.\d*)?µs)|(\d*(\.\d*)?ns))+|infinity|infinite)$
                          type: string
                        withRequestBody:
                          description: WithRequestBody specifies configuration for sending the client request's body to authorization server.
                          properties:
                            allowPartialMessage:
                              description: If AllowPartialMessage is true, then Envoy will buffer the body until MaxRequestBytes are reached.
                              type: boolean
                            maxRequestBytes:
                              default: 1024
                              description: MaxRequestBytes sets the maximum size of message body ExtAuthz filter will hold in-memory.
                              format: int32
                              minimum: 1
                              type: integer
                            packAsBytes:
                              description: If PackAsBytes is true, the body sent to Authorization Server is in raw bytes.
                              type: boolean
                          type: object
                      required:
                        - extensionRef
                      type: object
                    corsPolicy:
                      description: Specifies the cross-origin policy to apply to the VirtualHost.
                      properties:
                        allowCredentials:
                          description: Specifies whether the resource allows credentials.
                          type: boolean
                        allowHeaders:
                          description: AllowHeaders specifies the content for the *access-control-allow-headers* header.
                          items:
                            description: CORSHeaderValue specifies the value of the string headers returned by a cross-domain request.
                            pattern: ^[a-zA-Z0-9!#$%&'*+.^_`|~-]+$
                            type: string
                          minItems: 1
                          type: array
                        allowMethods:
                          description: AllowMethods specifies the content for the *access-control-allow-methods* header.
                          items:
                            description: CORSHeaderValue specifies the value of the string headers returned by a cross-domain request.
                            pattern: ^[a-zA-Z0-9!#$%&'*+.^_`|~-]+$
                            type: string
                          minItems: 1
                          type: array
                        allowOrigin:
                          description: AllowOrigin specifies the origins that will be allowed to do CORS requests. Allowed values include "*" which signifies any origin is allowed, an exact origin of the form "scheme://host[:port]" (where port is optional), or a valid regex pattern. Note that regex patterns are validated and a simple "glob" pattern (e.g. *.foo.com) will be rejected or produce unexpected matches when applied as a regex.
                          items:
                            type: string
                          minItems: 1
                          type: array
                        exposeHeaders:
                          description: ExposeHeaders Specifies the content for the *access-control-expose-headers* header.
                          items:
                            description: CORSHeaderValue specifies the value of the string headers returned by a cross-domain request.
                            pattern: ^[a-zA-Z0-9!#$%&'*+.^_`|~-]+$
                            type: string
                          minItems: 1
                          type: array
                        maxAge:
                          description: MaxAge indicates for how long the results of a preflight request can be cached. MaxAge durations are expressed in the Go [Duration format](https://godoc.org/time#ParseDuration). Valid time units are "ns", "us" (or "µs"), "ms", "s", "m", "h". Only positive values are allowed while 0 disables the cache requiring a preflight OPTIONS check for all cross-origin requests.
                          pattern: ^(((\d*(\.\d*)?h)|(\d*(\.\d*)?m)|(\d*(\.\d*)?s)|(\d*(\.\d*)?ms)|(\d*(\.\d*)?us)|(\d*(\.\d*)?µs)|(\d*(\.\d*)?ns))+|0)$
                          type: string
                      required:
                        - allowMethods
                        - allowOrigin
                      type: object
                    fqdn:
                      description: The fully qualified domain name of the root of the ingress tree all leaves of the DAG rooted at this object relate to the fqdn.
                      pattern: ^(\*\.)?[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      type: string
                    jwtProviders:
                      description: Providers to use for verifying JSON Web Tokens (JWTs) on the virtual host.
                      items:
                        description: JWTProvider defines how to verify JWTs on requests.
                        properties:
                          audiences:
                            description: Audiences that JWTs are allowed to have in the "aud" field. If not provided, JWT audiences are not checked.
                            items:
                              type: string
                            type: array
                          default:
                            description: Whether the provider should apply to all routes in the HTTPProxy/its includes by default. At most one provider can be marked as the default. If no provider is marked as the default, individual routes must explicitly identify the provider they require.
                            type: boolean
                          forwardJWT:
                            description: Whether the JWT should be forwarded to the backend service after successful verification. By default, the JWT is not forwarded.
                            type: boolean
                          issuer:
                            description: Issuer that JWTs are required to have in the "iss" field. If not provided, JWT issuers are not checked.
                            type: string
                          name:
                            description: Unique name for the provider.
                            minLength: 1
                            type: string
                          remoteJWKS:
                            description: Remote JWKS to use for verifying JWT signatures.
                            properties:
                              cacheDuration:
                                description: How long to cache the JWKS locally. If not specified, Envoy's default of 5m applies.
                                pattern: ^(((\d*(\.\d*)?h)|(\d*(\.\d*)?m)|(\d*(\.\d*)?s)|(\d*(\.\d*)?ms)|(\d*(\.\d*)?us)|(\d*(\.\d*)?µs)|(\d*(\.\d*)?ns))+)$
                                type: string
                              dnsLookupFamily:
                                description: "The DNS IP address resolution policy for the JWKS URI. When configured as \"v4\", the DNS resolver will only perform a lookup for addresses in the IPv4 family. If \"v6\" is configured, the DNS resolver will only perform a lookup for addresses in the IPv6 family. If \"auto\" is configured, the DNS resolver will first perform a lookup for addresses in the IPv6 family and fallback to a lookup for addresses in the IPv4 family. If not specified, the Contour-wide setting defined in the config file or ContourConfiguration applies (defaults to \"auto\"). \n See https://www.envoyproxy.io/docs/envoy/latest/api-v3/config/cluster/v3/cluster.proto.html#envoy-v3-api-enum-config-cluster-v3-cluster-dnslookupfamily for more information."
                                enum:
                                  - auto
                                  - v4
                                  - v6
                                type: string
                              timeout:
                                description: How long to wait for a response from the URI. If not specified, a default of 1s applies.
                                pattern: ^(((\d*(\.\d*)?h)|(\d*(\.\d*)?m)|(\d*(\.\d*)?s)|(\d*(\.\d*)?ms)|(\d*(\.\d*)?us)|(\d*(\.\d*)?µs)|(\d*(\.\d*)?ns))+)$
                                type: string
                              uri:
                                description: The URI for the JWKS.
                                minLength: 1
                                type: string
                              validation:
                                description: UpstreamValidation defines how to verify the JWKS's TLS certificate.
                                properties:
                                  caSecret:
                                    description: Name or namespaced name of the Kubernetes secret used to validate the certificate presented by the backend. The secret must contain key named ca.crt.
                                    type: string
                                  subjectName:
                                    description: Key which is expected to be present in the 'subjectAltName' of the presented certificate.
                                    type: string
                                required:
                                  - caSecret
                                  - subjectName
                                type: object
                            required:
                              - uri
                            type: object
                        required:
                          - name
                          - remoteJWKS
                        type: object
                      type: array
                    rateLimitPolicy:
                      description: The policy for rate limiting on the virtual host.
                      properties:
                        global:
                          description: Global defines global rate limiting parameters, i.e. parameters defining descriptors that are sent to an external rate limit service (RLS) for a rate limit decision on each request.
                          properties:
                            descriptors:
                              description: Descriptors defines the list of descriptors that will be generated and sent to the rate limit service. Each descriptor contains 1+ key-value pair entries.
                              items:
                                description: RateLimitDescriptor defines a list of key-value pair generators.
                                properties:
                                  entries:
                                    description: Entries is the list of key-value pair generators.
                                    items:
                                      description: RateLimitDescriptorEntry is a key-value pair generator. Exactly one field on this struct must be non-nil.
                                      properties:
                                        genericKey:
                                          description: GenericKey defines a descriptor entry with a static key and value.
                                          properties:
                                            key:
                                              description: Key defines the key of the descriptor entry. If not set, the key is set to "generic_key".
                                              type: string
                                            value:
                                              description: Value defines the value of the descriptor entry.
                                              minLength: 1
                                              type: string
                                          type: object
                                        remoteAddress:
                                          description: RemoteAddress defines a descriptor entry with a key of "remote_address" and a value equal to the client's IP address (from x-forwarded-for).
                                          type: object
                                        requestHeader:
                                          description: RequestHeader defines a descriptor entry that's populated only if a given header is present on the request. The descriptor key is static, and the descriptor value is equal to the value of the header.
                                          properties:
                                            descriptorKey:
                                              description: DescriptorKey defines the key to use on the descriptor entry.
                                              minLength: 1
                                              type: string
                                            headerName:
                                              description: HeaderName defines the name of the header to look for on the request.
                                              minLength: 1
                                              type: string
                                          type: object
                                        requestHeaderValueMatch:
                                          description: RequestHeaderValueMatch defines a descriptor entry that's populated if the request's headers match a set of 1+ match criteria. The descriptor key is "header_match", and the descriptor value is static.
                                          properties:
                                            expectMatch:
                                              default: true
                                              description: ExpectMatch defines whether the request must positively match the match criteria in order to generate a descriptor entry (i.e. true), or not match the match criteria in order to generate a descriptor entry (i.e. false). The default is true.
                                              type: boolean
                                            headers:
                                              description: Headers is a list of 1+ match criteria to apply against the request to determine whether to populate the descriptor entry or not.
                                              items:
                                                description: HeaderMatchCondition specifies how to conditionally match against HTTP headers. The Name field is required, but only one of the remaining fields should be be provided.
                                                properties:
                                                  contains:
                                                    description: Contains specifies a substring that must be present in the header value.
                                                    type: string
                                                  exact:
                                                    description: Exact specifies a string that the header value must be equal to.
                                                    type: string
                                                  name:
                                                    description: Name is the name of the header to match against. Name is required. Header names are case insensitive.
                                                    type: string
                                                  notcontains:
                                                    description: NotContains specifies a substring that must not be present in the header value.
                                                    type: string
                                                  notexact:
                                                    description: NoExact specifies a string that the header value must not be equal to. The condition is true if the header has any other value.
                                                    type: string
                                                  notpresent:
                                                    description: NotPresent specifies that condition is true when the named header is not present. Note that setting NotPresent to false does not make the condition true if the named header is present.
                                                    type: boolean
                                                  present:
                                                    description: Present specifies that condition is true when the named header is present, regardless of its value. Note that setting Present to false does not make the condition true if the named header is absent.
                                                    type: boolean
                                                required:
                                                  - name
                                                type: object
                                              minItems: 1
                                              type: array
                                            value:
                                              description: Value defines the value of the descriptor entry.
                                              minLength: 1
                                              type: string
                                          type: object
                                      type: object
                                    minItems: 1
                                    type: array
                                type: object
                              minItems: 1
                              type: array
                          type: object
                        local:
                          description: Local defines local rate limiting parameters, i.e. parameters for rate limiting that occurs within each Envoy pod as requests are handled.
                          properties:
                            burst:
                              description: Burst defines the number of requests above the requests per unit that should be allowed within a short period of time.
                              format: int32
                              type: integer
                            requests:
                              description: Requests defines how many requests per unit of time should be allowed before rate limiting occurs.
                              format: int32
                              minimum: 1
                              type: integer
                            responseHeadersToAdd:
                              description: ResponseHeadersToAdd is an optional list of response headers to set when a request is rate-limited.
                              items:
                                description: HeaderValue represents a header name/value pair
                                properties:
                                  name:
                                    description: Name represents a key of a header
                                    minLength: 1
                                    type: string
                                  value:
                                    description: Value represents the value of a header specified by a key
                                    minLength: 1
                                    type: string
                                required:
                                  - name
                                  - value
                                type: object
                              type: array
                            responseStatusCode:
                              description: ResponseStatusCode is the HTTP status code to use for responses to rate-limited requests. Codes must be in the 400-599 range (inclusive). If not specified, the Envoy default of 429 (Too Many Requests) is used.
                              format: int32
                              maximum: 599
                              minimum: 400
                              type: integer
                            unit:
                              description: Unit defines the period of time within which requests over the limit will be rate limited. Valid values are "second", "minute" and "hour".
                              enum:
                                - second
                                - minute
                                - hour
                              type: string
                          required:
                            - requests
                            - unit
                          type: object
                      type: object
                    tls:
                      description: If present the fields describes TLS properties of the virtual host. The SNI names that will be matched on are described in fqdn, the tls.secretName secret must contain a certificate that itself contains a name that matches the FQDN.
                      properties:
                        clientValidation:
                          description: "ClientValidation defines how to verify the client certificate when an external client establishes a TLS connection to Envoy. \n This setting: \n 1. Enables TLS client certificate validation. 2. Specifies how the client certificate will be validated (i.e.    validation required or skipped). \n Note: Setting client certificate validation to be skipped should be only used in conjunction with an external authorization server that performs client validation as Contour will ensure client certificates are passed along."
                          properties:
                            caSecret:
                              description: Name of a Kubernetes secret that contains a CA certificate bundle. The secret must contain key named ca.crt. The client certificate must validate against the certificates in the bundle. If specified and SkipClientCertValidation is true, client certificates will be required on requests.
                              minLength: 1
                              type: string
                            crlOnlyVerifyLeafCert:
                              description: If this option is set to true, only the certificate at the end of the certificate chain will be subject to validation by CRL.
                              type: boolean
                            crlSecret:
                              description: Name of a Kubernetes opaque secret that contains a concatenated list of PEM encoded CRLs. The secret must contain key named crl.pem. This field will be used to verify that a client certificate has not been revoked. CRLs must be available from all CAs, unless crlOnlyVerifyLeafCert is true. Large CRL lists are not supported since individual secrets are limited to 1MiB in size.
                              minLength: 1
                              type: string
                            skipClientCertValidation:
                              description: SkipClientCertValidation disables downstream client certificate validation. Defaults to false. This field is intended to be used in conjunction with external authorization in order to enable the external authorization server to validate client certificates. When this field is set to true, client certificates are requested but not verified by Envoy. If CACertificate is specified, client certificates are required on requests, but not verified. If external authorization is in use, they are presented to the external authorization server.
                              type: boolean
                          type: object
                        enableFallbackCertificate:
                          description: EnableFallbackCertificate defines if the vhost should allow a default certificate to be applied which handles all requests which don't match the SNI defined in this vhost.
                          type: boolean
                        minimumProtocolVersion:
                          description: MinimumProtocolVersion is the minimum TLS version this vhost should negotiate. Valid options are `1.2` (default) and `1.3`. Any other value defaults to TLS 1.2.
                          type: string
                        passthrough:
                          description: Passthrough defines whether the encrypted TLS handshake will be passed through to the backing cluster. Either Passthrough or SecretName must be specified, but not both.
                          type: boolean
                        secretName:
                          description: SecretName is the name of a TLS secret in the current namespace. Either SecretName or Passthrough must be specified, but not both. If specified, the named secret must contain a matching certificate for the virtual host's FQDN.
                          type: string
                      type: object
                  required:
                    - fqdn
                  type: object
              type: object
            status:
              default:
                currentStatus: NotReconciled
                description: Waiting for controller
              description: Status is a container for computed information about the HTTPProxy.
              properties:
                conditions:
                  description: "Conditions contains information about the current status of the HTTPProxy, in an upstream-friendly container. \n Contour will update a single condition, `Valid`, that is in normal-true polarity. That is, when `currentStatus` is `valid`, the `Valid` condition will be `status: true`, and vice versa. \n Contour will leave untouched any other Conditions set in this block, in case some other controller wants to add a Condition. \n If you are another controller owner and wish to add a condition, you *should* namespace your condition with a label, like `controller.domain.com/ConditionName`."
                  items:
                    description: "DetailedCondition is an extension of the normal Kubernetes conditions, with two extra fields to hold sub-conditions, which provide more detailed reasons for the state (True or False) of the condition. \n `errors` holds information about sub-conditions which are fatal to that condition and render its state False. \n `warnings` holds information about sub-conditions which are not fatal to that condition and do not force the state to be False. \n Remember that Conditions have a type, a status, and a reason. \n The type is the type of the condition, the most important one in this CRD set is `Valid`. `Valid` is a positive-polarity condition: when it is `status: true` there are no problems. \n In more detail, `status: true` means that the object is has been ingested into Contour with no errors. `warnings` may still be present, and will be indicated in the Reason field. There must be zero entries in the `errors` slice in this case. \n `Valid`, `status: false` means that the object has had one or more fatal errors during processing into Contour. The details of the errors will be present under the `errors` field. There must be at least one error in the `errors` slice if `status` is `false`. \n For DetailedConditions of types other than `Valid`, the Condition must be in the negative polarity. When they have `status` `true`, there is an error. There must be at least one entry in the `errors` Subcondition slice. When they have `status` `false`, there are no serious errors, and there must be zero entries in the `errors` slice. In either case, there may be entries in the `warnings` slice. \n Regardless of the polarity, the `reason` and `message` fields must be updated with either the detail of the reason (if there is one and only one entry in total across both the `errors` and `warnings` slices), or `MultipleReasons` if there is more than one entry."
                    properties:
                      errors:
                        description: "Errors contains a slice of relevant error subconditions for this object. \n Subconditions are expected to appear when relevant (when there is a error), and disappear when not relevant. An empty slice here indicates no errors."
                        items:
                          description: "SubCondition is a Condition-like type intended for use as a subcondition inside a DetailedCondition. \n It contains a subset of the Condition fields. \n It is intended for warnings and errors, so `type` names should use abnormal-true polarity, that is, they should be of the form \"ErrorPresent: true\". \n The expected lifecycle for these errors is that they should only be present when the error or warning is, and should be removed when they are not relevant."
                          properties:
                            message:
                              description: "Message is a human readable message indicating details about the transition. \n This may be an empty string."
                              maxLength: 32768
                              type: string
                            reason:
                              description: "Reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. \n The value should be a CamelCase string. \n This field may not be empty."
                              maxLength: 1024
                              minLength: 1
                              pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                              type: string
                            status:
                              description: Status of the condition, one of True, False, Unknown.
                              enum:
                                - "True"
                                - "False"
                                - Unknown
                              type: string
                            type:
                              description: "Type of condition in `CamelCase` or in `foo.example.com/CamelCase`. \n This must be in abnormal-true polarity, that is, `ErrorFound` or `controller.io/ErrorFound`. \n The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)"
                              maxLength: 316
                              pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                              type: string
                          required:
                            - message
                            - reason
                            - status
                            - type
                          type: object
                        type: array
                      lastTransitionTime:
                        description: lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: message is a human readable message indicating details about the transition. This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                      warnings:
                        description: "Warnings contains a slice of relevant warning subconditions for this object. \n Subconditions are expected to appear when relevant (when there is a warning), and disappear when not relevant. An empty slice here indicates no warnings."
                        items:
                          description: "SubCondition is a Condition-like type intended for use as a subcondition inside a DetailedCondition. \n It contains a subset of the Condition fields. \n It is intended for warnings and errors, so `type` names should use abnormal-true polarity, that is, they should be of the form \"ErrorPresent: true\". \n The expected lifecycle for these errors is that they should only be present when the error or warning is, and should be removed when they are not relevant."
                          properties:
                            message:
                              description: "Message is a human readable message indicating details about the transition. \n This may be an empty string."
                              maxLength: 32768
                              type: string
                            reason:
                              description: "Reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. \n The value should be a CamelCase string. \n This field may not be empty."
                              maxLength: 1024
                              minLength: 1
                              pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                              type: string
                            status:
                              description: Status of the condition, one of True, False, Unknown.
                              enum:
                                - "True"
                                - "False"
                                - Unknown
                              type: string
                            type:
                              description: "Type of condition in `CamelCase` or in `foo.example.com/CamelCase`. \n This must be in abnormal-true polarity, that is, `ErrorFound` or `controller.io/ErrorFound`. \n The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)"
                              maxLength: 316
                              pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                              type: string
                          required:
                            - message
                            - reason
                            - status
                            - type
                          type: object
                        type: array
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                  x-kubernetes-list-map-keys:
                    - type
                  x-kubernetes-list-type: map
                currentStatus:
                  type: string
                description:
                  type: string
                loadBalancer:
                  description: LoadBalancer contains the current status of the load balancer.
                  properties:
                    ingress:
                      description: Ingress is a list containing ingress points for the load-balancer. Traffic intended for the service should be sent to these ingress points.
                      items:
                        description: 'LoadBalancerIngress represents the status of a load-balancer ingress point: traffic intended for the service should be sent to an ingress point.'
                        properties:
                          hostname:
                            description: Hostname is set for load-balancer ingress points that are DNS based (typically AWS load-balancers)
                            type: string
                          ip:
                            description: IP is set for load-balancer ingress points that are IP based (typically GCE or OpenStack load-balancers)
                            type: string
                          ports:
                            description: Ports is a list of records of service ports If used, every port defined in the service should have an entry in it
                            items:
                              properties:
                                error:
                                  description: 'Error is to record the problem with the service port The format of the error shall comply with the following rules: - built-in error values shall be specified in this file and those shall use   CamelCase names - cloud provider specific error values must have names that comply with the   format foo.example.com/CamelCase. --- The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)'
                                  maxLength: 316
                                  pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                                  type: string
                                port:
                                  description: Port is the port number of the service port of which status is recorded here
                                  format: int32
                                  type: integer
                                protocol:
                                  default: TCP
                                  description: 'Protocol is the protocol of the service port of which status is recorded here The supported values are: "TCP", "UDP", "SCTP"'
                                  type: string
                              required:
                                - port
                                - protocol
                              type: object
                            type: array
                            x-kubernetes-list-type: atomic
                        type: object
                      type: array
                  type: object
              type: object
          required:
            - metadata
            - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: openfunction/charts/contour/templates/00-crds.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.7.0
  creationTimestamp: null
  name: tlscertificatedelegations.projectcontour.io
spec:
  preserveUnknownFields: false
  group: projectcontour.io
  names:
    kind: TLSCertificateDelegation
    listKind: TLSCertificateDelegationList
    plural: tlscertificatedelegations
    shortNames:
      - tlscerts
    singular: tlscertificatedelegation
  scope: Namespaced
  versions:
    - name: v1
      schema:
        openAPIV3Schema:
          description: TLSCertificateDelegation is an TLS Certificate Delegation CRD specification. See design/tls-certificate-delegation.md for details.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: TLSCertificateDelegationSpec defines the spec of the CRD
              properties:
                delegations:
                  items:
                    description: CertificateDelegation maps the authority to reference a secret in the current namespace to a set of namespaces.
                    properties:
                      secretName:
                        description: required, the name of a secret in the current namespace.
                        type: string
                      targetNamespaces:
                        description: required, the namespaces the authority to reference the the secret will be delegated to. If TargetNamespaces is nil or empty, the CertificateDelegation' is ignored. If the TargetNamespace list contains the character, "*" the secret will be delegated to all namespaces.
                        items:
                          type: string
                        type: array
                    required:
                      - secretName
                      - targetNamespaces
                    type: object
                  type: array
              required:
                - delegations
              type: object
            status:
              description: TLSCertificateDelegationStatus allows for the status of the delegation to be presented to the user.
              properties:
                conditions:
                  description: "Conditions contains information about the current status of the HTTPProxy, in an upstream-friendly container. \n Contour will update a single condition, `Valid`, that is in normal-true polarity. That is, when `currentStatus` is `valid`, the `Valid` condition will be `status: true`, and vice versa. \n Contour will leave untouched any other Conditions set in this block, in case some other controller wants to add a Condition. \n If you are another controller owner and wish to add a condition, you *should* namespace your condition with a label, like `controller.domain.com\\ConditionName`."
                  items:
                    description: "DetailedCondition is an extension of the normal Kubernetes conditions, with two extra fields to hold sub-conditions, which provide more detailed reasons for the state (True or False) of the condition. \n `errors` holds information about sub-conditions which are fatal to that condition and render its state False. \n `warnings` holds information about sub-conditions which are not fatal to that condition and do not force the state to be False. \n Remember that Conditions have a type, a status, and a reason. \n The type is the type of the condition, the most important one in this CRD set is `Valid`. `Valid` is a positive-polarity condition: when it is `status: true` there are no problems. \n In more detail, `status: true` means that the object is has been ingested into Contour with no errors. `warnings` may still be present, and will be indicated in the Reason field. There must be zero entries in the `errors` slice in this case. \n `Valid`, `status: false` means that the object has had one or more fatal errors during processing into Contour. The details of the errors will be present under the `errors` field. There must be at least one error in the `errors` slice if `status` is `false`. \n For DetailedConditions of types other than `Valid`, the Condition must be in the negative polarity. When they have `status` `true`, there is an error. There must be at least one entry in the `errors` Subcondition slice. When they have `status` `false`, there are no serious errors, and there must be zero entries in the `errors` slice. In either case, there may be entries in the `warnings` slice. \n Regardless of the polarity, the `reason` and `message` fields must be updated with either the detail of the reason (if there is one and only one entry in total across both the `errors` and `warnings` slices), or `MultipleReasons` if there is more than one entry."
                    properties:
                      errors:
                        description: "Errors contains a slice of relevant error subconditions for this object. \n Subconditions are expected to appear when relevant (when there is a error), and disappear when not relevant. An empty slice here indicates no errors."
                        items:
                          description: "SubCondition is a Condition-like type intended for use as a subcondition inside a DetailedCondition. \n It contains a subset of the Condition fields. \n It is intended for warnings and errors, so `type` names should use abnormal-true polarity, that is, they should be of the form \"ErrorPresent: true\". \n The expected lifecycle for these errors is that they should only be present when the error or warning is, and should be removed when they are not relevant."
                          properties:
                            message:
                              description: "Message is a human readable message indicating details about the transition. \n This may be an empty string."
                              maxLength: 32768
                              type: string
                            reason:
                              description: "Reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. \n The value should be a CamelCase string. \n This field may not be empty."
                              maxLength: 1024
                              minLength: 1
                              pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                              type: string
                            status:
                              description: Status of the condition, one of True, False, Unknown.
                              enum:
                                - "True"
                                - "False"
                                - Unknown
                              type: string
                            type:
                              description: "Type of condition in `CamelCase` or in `foo.example.com/CamelCase`. \n This must be in abnormal-true polarity, that is, `ErrorFound` or `controller.io/ErrorFound`. \n The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)"
                              maxLength: 316
                              pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                              type: string
                          required:
                            - message
                            - reason
                            - status
                            - type
                          type: object
                        type: array
                      lastTransitionTime:
                        description: lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: message is a human readable message indicating details about the transition. This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                      warnings:
                        description: "Warnings contains a slice of relevant warning subconditions for this object. \n Subconditions are expected to appear when relevant (when there is a warning), and disappear when not relevant. An empty slice here indicates no warnings."
                        items:
                          description: "SubCondition is a Condition-like type intended for use as a subcondition inside a DetailedCondition. \n It contains a subset of the Condition fields. \n It is intended for warnings and errors, so `type` names should use abnormal-true polarity, that is, they should be of the form \"ErrorPresent: true\". \n The expected lifecycle for these errors is that they should only be present when the error or warning is, and should be removed when they are not relevant."
                          properties:
                            message:
                              description: "Message is a human readable message indicating details about the transition. \n This may be an empty string."
                              maxLength: 32768
                              type: string
                            reason:
                              description: "Reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. \n The value should be a CamelCase string. \n This field may not be empty."
                              maxLength: 1024
                              minLength: 1
                              pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                              type: string
                            status:
                              description: Status of the condition, one of True, False, Unknown.
                              enum:
                                - "True"
                                - "False"
                                - Unknown
                              type: string
                            type:
                              description: "Type of condition in `CamelCase` or in `foo.example.com/CamelCase`. \n This must be in abnormal-true polarity, that is, `ErrorFound` or `controller.io/ErrorFound`. \n The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)"
                              maxLength: 316
                              pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                              type: string
                          required:
                            - message
                            - reason
                            - status
                            - type
                          type: object
                        type: array
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                  x-kubernetes-list-map-keys:
                    - type
                  x-kubernetes-list-type: map
              type: object
          required:
            - metadata
            - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: openfunction/charts/keda/templates/crds/crd-clustertriggerauthentications.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  namespace: keda
  annotations:
    controller-gen.kubebuilder.io/version: v0.12.0
  labels:
    app.kubernetes.io/name: keda-operator    
    helm.sh/chart: keda-2.11.2
    app.kubernetes.io/component: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-openfunction
    app.kubernetes.io/part-of: keda-operator
    app.kubernetes.io/version: 2.11.2
  name: clustertriggerauthentications.keda.sh
spec:
  group: keda.sh
  names:
    kind: ClusterTriggerAuthentication
    listKind: ClusterTriggerAuthenticationList
    plural: clustertriggerauthentications
    shortNames:
    - cta
    - clustertriggerauth
    singular: clustertriggerauthentication
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.podIdentity.provider
      name: PodIdentity
      type: string
    - jsonPath: .spec.secretTargetRef[*].name
      name: Secret
      type: string
    - jsonPath: .spec.env[*].name
      name: Env
      type: string
    - jsonPath: .spec.hashiCorpVault.address
      name: VaultAddress
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ClusterTriggerAuthentication defines how a trigger can authenticate
          globally
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: TriggerAuthenticationSpec defines the various ways to authenticate
            properties:
              azureKeyVault:
                description: AzureKeyVault is used to authenticate using Azure Key
                  Vault
                properties:
                  cloud:
                    properties:
                      activeDirectoryEndpoint:
                        type: string
                      keyVaultResourceURL:
                        type: string
                      type:
                        type: string
                    required:
                    - type
                    type: object
                  credentials:
                    properties:
                      clientId:
                        type: string
                      clientSecret:
                        properties:
                          valueFrom:
                            properties:
                              secretKeyRef:
                                properties:
                                  key:
                                    type: string
                                  name:
                                    type: string
                                required:
                                - key
                                - name
                                type: object
                            required:
                            - secretKeyRef
                            type: object
                        required:
                        - valueFrom
                        type: object
                      tenantId:
                        type: string
                    required:
                    - clientId
                    - clientSecret
                    - tenantId
                    type: object
                  podIdentity:
                    description: AuthPodIdentity allows users to select the platform
                      native identity mechanism
                    properties:
                      identityId:
                        type: string
                      provider:
                        description: PodIdentityProvider contains the list of providers
                        type: string
                    required:
                    - provider
                    type: object
                  secrets:
                    items:
                      properties:
                        name:
                          type: string
                        parameter:
                          type: string
                        version:
                          type: string
                      required:
                      - name
                      - parameter
                      type: object
                    type: array
                  vaultUri:
                    type: string
                required:
                - secrets
                - vaultUri
                type: object
              env:
                items:
                  description: AuthEnvironment is used to authenticate using environment
                    variables in the destination ScaleTarget spec
                  properties:
                    containerName:
                      type: string
                    name:
                      type: string
                    parameter:
                      type: string
                  required:
                  - name
                  - parameter
                  type: object
                type: array
              hashiCorpVault:
                description: HashiCorpVault is used to authenticate using Hashicorp
                  Vault
                properties:
                  address:
                    type: string
                  authentication:
                    description: VaultAuthentication contains the list of Hashicorp
                      Vault authentication methods
                    type: string
                  credential:
                    description: Credential defines the Hashicorp Vault credentials
                      depending on the authentication method
                    properties:
                      serviceAccount:
                        type: string
                      token:
                        type: string
                    type: object
                  mount:
                    type: string
                  namespace:
                    type: string
                  role:
                    type: string
                  secrets:
                    items:
                      description: VaultSecret defines the mapping between the path
                        of the secret in Vault to the parameter
                      properties:
                        key:
                          type: string
                        parameter:
                          type: string
                        path:
                          type: string
                      required:
                      - key
                      - parameter
                      - path
                      type: object
                    type: array
                required:
                - address
                - authentication
                - secrets
                type: object
              podIdentity:
                description: AuthPodIdentity allows users to select the platform native
                  identity mechanism
                properties:
                  identityId:
                    type: string
                  provider:
                    description: PodIdentityProvider contains the list of providers
                    type: string
                required:
                - provider
                type: object
              secretTargetRef:
                items:
                  description: AuthSecretTargetRef is used to authenticate using a
                    reference to a secret
                  properties:
                    key:
                      type: string
                    name:
                      type: string
                    parameter:
                      type: string
                  required:
                  - key
                  - name
                  - parameter
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources: {}
---
# Source: openfunction/charts/keda/templates/crds/crd-scaledjobs.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  namespace: keda
  annotations:
    controller-gen.kubebuilder.io/version: v0.12.0
  labels:
    app.kubernetes.io/name: keda-operator    
    helm.sh/chart: keda-2.11.2
    app.kubernetes.io/component: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-openfunction
    app.kubernetes.io/part-of: keda-operator
    app.kubernetes.io/version: 2.11.2
  name: scaledjobs.keda.sh
spec:
  group: keda.sh
  names:
    kind: ScaledJob
    listKind: ScaledJobList
    plural: scaledjobs
    shortNames:
    - sj
    singular: scaledjob
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.minReplicaCount
      name: Min
      type: integer
    - jsonPath: .spec.maxReplicaCount
      name: Max
      type: integer
    - jsonPath: .spec.triggers[*].type
      name: Triggers
      type: string
    - jsonPath: .spec.triggers[*].authenticationRef.name
      name: Authentication
      type: string
    - jsonPath: .status.conditions[?(@.type=="Ready")].status
      name: Ready
      type: string
    - jsonPath: .status.conditions[?(@.type=="Active")].status
      name: Active
      type: string
    - jsonPath: .status.conditions[?(@.type=="Paused")].status
      name: Paused
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ScaledJob is the Schema for the scaledjobs API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ScaledJobSpec defines the desired state of ScaledJob
            properties:
              envSourceContainerName:
                type: string
              failedJobsHistoryLimit:
                format: int32
                type: integer
              jobTargetRef:
                description: JobSpec describes how the job execution will look like.
                properties:
                  activeDeadlineSeconds:
                    description: Specifies the duration in seconds relative to the
                      startTime that the job may be continuously active before the
                      system tries to terminate it; value must be positive integer.
                      If a Job is suspended (at creation or through an update), this
                      timer will effectively be stopped and reset when the Job is
                      resumed again.
                    format: int64
                    type: integer
                  backoffLimit:
                    description: Specifies the number of retries before marking this
                      job failed. Defaults to 6
                    format: int32
                    type: integer
                  completionMode:
                    description: "completionMode specifies how Pod completions are
                      tracked. It can be `NonIndexed` (default) or `Indexed`. \n `NonIndexed`
                      means that the Job is considered complete when there have been
                      .spec.completions successfully completed Pods. Each Pod completion
                      is homologous to each other. \n `Indexed` means that the Pods
                      of a Job get an associated completion index from 0 to (.spec.completions
                      - 1), available in the annotation batch.kubernetes.io/job-completion-index.
                      The Job is considered complete when there is one successfully
                      completed Pod for each index. When value is `Indexed`, .spec.completions
                      must be specified and `.spec.parallelism` must be less than
                      or equal to 10^5. In addition, The Pod name takes the form `$(job-name)-$(index)-$(random-string)`,
                      the Pod hostname takes the form `$(job-name)-$(index)`. \n More
                      completion modes can be added in the future. If the Job controller
                      observes a mode that it doesn't recognize, which is possible
                      during upgrades due to version skew, the controller skips updates
                      for the Job."
                    type: string
                  completions:
                    description: 'Specifies the desired number of successfully finished
                      pods the job should be run with.  Setting to null means that
                      the success of any pod signals the success of all pods, and
                      allows parallelism to have any positive value.  Setting to 1
                      means that parallelism is limited to 1 and the success of that
                      pod signals the success of the job. More info: https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/'
                    format: int32
                    type: integer
                  manualSelector:
                    description: 'manualSelector controls generation of pod labels
                      and pod selectors. Leave `manualSelector` unset unless you are
                      certain what you are doing. When false or unset, the system
                      pick labels unique to this job and appends those labels to the
                      pod template.  When true, the user is responsible for picking
                      unique labels and specifying the selector.  Failure to pick
                      a unique label may cause this and other jobs to not function
                      correctly.  However, You may see `manualSelector=true` in jobs
                      that were created with the old `extensions/v1beta1` API. More
                      info: https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/#specifying-your-own-pod-selector'
                    type: boolean
                  parallelism:
                    description: 'Specifies the maximum desired number of pods the
                      job should run at any given time. The actual number of pods
                      running in steady state will be less than this number when ((.spec.completions
                      - .status.successful) < .spec.parallelism), i.e. when the work
                      left to do is less than max parallelism. More info: https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/'
                    format: int32
                    type: integer
                  podFailurePolicy:
                    description: "Specifies the policy of handling failed pods. In
                      particular, it allows to specify the set of actions and conditions
                      which need to be satisfied to take the associated action. If
                      empty, the default behaviour applies - the counter of failed
                      pods, represented by the jobs's .status.failed field, is incremented
                      and it is checked against the backoffLimit. This field cannot
                      be used in combination with restartPolicy=OnFailure. \n This
                      field is beta-level. It can be used when the `JobPodFailurePolicy`
                      feature gate is enabled (enabled by default)."
                    properties:
                      rules:
                        description: A list of pod failure policy rules. The rules
                          are evaluated in order. Once a rule matches a Pod failure,
                          the remaining of the rules are ignored. When no rule matches
                          the Pod failure, the default handling applies - the counter
                          of pod failures is incremented and it is checked against
                          the backoffLimit. At most 20 elements are allowed.
                        items:
                          description: PodFailurePolicyRule describes how a pod failure
                            is handled when the requirements are met. One of onExitCodes
                            and onPodConditions, but not both, can be used in each
                            rule.
                          properties:
                            action:
                              description: "Specifies the action taken on a pod failure
                                when the requirements are satisfied. Possible values
                                are: \n - FailJob: indicates that the pod's job is
                                marked as Failed and all running pods are terminated.
                                - Ignore: indicates that the counter towards the .backoffLimit
                                is not incremented and a replacement pod is created.
                                - Count: indicates that the pod is handled in the
                                default way - the counter towards the .backoffLimit
                                is incremented. Additional values are considered to
                                be added in the future. Clients should react to an
                                unknown action by skipping the rule."
                              type: string
                            onExitCodes:
                              description: Represents the requirement on the container
                                exit codes.
                              properties:
                                containerName:
                                  description: Restricts the check for exit codes
                                    to the container with the specified name. When
                                    null, the rule applies to all containers. When
                                    specified, it should match one the container or
                                    initContainer names in the pod template.
                                  type: string
                                operator:
                                  description: "Represents the relationship between
                                    the container exit code(s) and the specified values.
                                    Containers completed with success (exit code 0)
                                    are excluded from the requirement check. Possible
                                    values are: \n - In: the requirement is satisfied
                                    if at least one container exit code (might be
                                    multiple if there are multiple containers not
                                    restricted by the 'containerName' field) is in
                                    the set of specified values. - NotIn: the requirement
                                    is satisfied if at least one container exit code
                                    (might be multiple if there are multiple containers
                                    not restricted by the 'containerName' field) is
                                    not in the set of specified values. Additional
                                    values are considered to be added in the future.
                                    Clients should react to an unknown operator by
                                    assuming the requirement is not satisfied."
                                  type: string
                                values:
                                  description: Specifies the set of values. Each returned
                                    container exit code (might be multiple in case
                                    of multiple containers) is checked against this
                                    set of values with respect to the operator. The
                                    list of values must be ordered and must not contain
                                    duplicates. Value '0' cannot be used for the In
                                    operator. At least one element is required. At
                                    most 255 elements are allowed.
                                  items:
                                    format: int32
                                    type: integer
                                  type: array
                                  x-kubernetes-list-type: set
                              required:
                              - operator
                              - values
                              type: object
                            onPodConditions:
                              description: Represents the requirement on the pod conditions.
                                The requirement is represented as a list of pod condition
                                patterns. The requirement is satisfied if at least
                                one pattern matches an actual pod condition. At most
                                20 elements are allowed.
                              items:
                                description: PodFailurePolicyOnPodConditionsPattern
                                  describes a pattern for matching an actual pod condition
                                  type.
                                properties:
                                  status:
                                    description: Specifies the required Pod condition
                                      status. To match a pod condition it is required
                                      that the specified status equals the pod condition
                                      status. Defaults to True.
                                    type: string
                                  type:
                                    description: Specifies the required Pod condition
                                      type. To match a pod condition it is required
                                      that specified type equals the pod condition
                                      type.
                                    type: string
                                required:
                                - status
                                - type
                                type: object
                              type: array
                              x-kubernetes-list-type: atomic
                          required:
                          - action
                          - onPodConditions
                          type: object
                        type: array
                        x-kubernetes-list-type: atomic
                    required:
                    - rules
                    type: object
                  selector:
                    description: 'A label query over pods that should match the pod
                      count. Normally, the system sets this field for you. More info:
                      https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors'
                    properties:
                      matchExpressions:
                        description: matchExpressions is a list of label selector
                          requirements. The requirements are ANDed.
                        items:
                          description: A label selector requirement is a selector
                            that contains values, a key, and an operator that relates
                            the key and values.
                          properties:
                            key:
                              description: key is the label key that the selector
                                applies to.
                              type: string
                            operator:
                              description: operator represents a key's relationship
                                to a set of values. Valid operators are In, NotIn,
                                Exists and DoesNotExist.
                              type: string
                            values:
                              description: values is an array of string values. If
                                the operator is In or NotIn, the values array must
                                be non-empty. If the operator is Exists or DoesNotExist,
                                the values array must be empty. This array is replaced
                                during a strategic merge patch.
                              items:
                                type: string
                              type: array
                          required:
                          - key
                          - operator
                          type: object
                        type: array
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: matchLabels is a map of {key,value} pairs. A
                          single {key,value} in the matchLabels map is equivalent
                          to an element of matchExpressions, whose key field is "key",
                          the operator is "In", and the values array contains only
                          "value". The requirements are ANDed.
                        type: object
                    type: object
                    x-kubernetes-map-type: atomic
                  suspend:
                    description: suspend specifies whether the Job controller should
                      create Pods or not. If a Job is created with suspend set to
                      true, no Pods are created by the Job controller. If a Job is
                      suspended after creation (i.e. the flag goes from false to true),
                      the Job controller will delete all active Pods associated with
                      this Job. Users must design their workload to gracefully handle
                      this. Suspending a Job will reset the StartTime field of the
                      Job, effectively resetting the ActiveDeadlineSeconds timer too.
                      Defaults to false.
                    type: boolean
                  template:
                    description: 'Describes the pod that will be created when executing
                      a job. The only allowed template.spec.restartPolicy values are
                      "Never" or "OnFailure". More info: https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/'
                    properties:
                      metadata:
                        description: 'Standard object''s metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata'
                        type: object
                        x-kubernetes-preserve-unknown-fields: true
                      spec:
                        description: 'Specification of the desired behavior of the
                          pod. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'
                        properties:
                          activeDeadlineSeconds:
                            description: Optional duration in seconds the pod may
                              be active on the node relative to StartTime before the
                              system will actively try to mark it failed and kill
                              associated containers. Value must be a positive integer.
                            format: int64
                            type: integer
                          affinity:
                            description: If specified, the pod's scheduling constraints
                            properties:
                              nodeAffinity:
                                description: Describes node affinity scheduling rules
                                  for the pod.
                                properties:
                                  preferredDuringSchedulingIgnoredDuringExecution:
                                    description: The scheduler will prefer to schedule
                                      pods to nodes that satisfy the affinity expressions
                                      specified by this field, but it may choose a
                                      node that violates one or more of the expressions.
                                      The node that is most preferred is the one with
                                      the greatest sum of weights, i.e. for each node
                                      that meets all of the scheduling requirements
                                      (resource request, requiredDuringScheduling
                                      affinity expressions, etc.), compute a sum by
                                      iterating through the elements of this field
                                      and adding "weight" to the sum if the node matches
                                      the corresponding matchExpressions; the node(s)
                                      with the highest sum are the most preferred.
                                    items:
                                      description: An empty preferred scheduling term
                                        matches all objects with implicit weight 0
                                        (i.e. it's a no-op). A null preferred scheduling
                                        term matches no objects (i.e. is also a no-op).
                                      properties:
                                        preference:
                                          description: A node selector term, associated
                                            with the corresponding weight.
                                          properties:
                                            matchExpressions:
                                              description: A list of node selector
                                                requirements by node's labels.
                                              items:
                                                description: A node selector requirement
                                                  is a selector that contains values,
                                                  a key, and an operator that relates
                                                  the key and values.
                                                properties:
                                                  key:
                                                    description: The label key that
                                                      the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: Represents a key's
                                                      relationship to a set of values.
                                                      Valid operators are In, NotIn,
                                                      Exists, DoesNotExist. Gt, and
                                                      Lt.
                                                    type: string
                                                  values:
                                                    description: An array of string
                                                      values. If the operator is In
                                                      or NotIn, the values array must
                                                      be non-empty. If the operator
                                                      is Exists or DoesNotExist, the
                                                      values array must be empty.
                                                      If the operator is Gt or Lt,
                                                      the values array must have a
                                                      single element, which will be
                                                      interpreted as an integer. This
                                                      array is replaced during a strategic
                                                      merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                - key
                                                - operator
                                                type: object
                                              type: array
                                            matchFields:
                                              description: A list of node selector
                                                requirements by node's fields.
                                              items:
                                                description: A node selector requirement
                                                  is a selector that contains values,
                                                  a key, and an operator that relates
                                                  the key and values.
                                                properties:
                                                  key:
                                                    description: The label key that
                                                      the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: Represents a key's
                                                      relationship to a set of values.
                                                      Valid operators are In, NotIn,
                                                      Exists, DoesNotExist. Gt, and
                                                      Lt.
                                                    type: string
                                                  values:
                                                    description: An array of string
                                                      values. If the operator is In
                                                      or NotIn, the values array must
                                                      be non-empty. If the operator
                                                      is Exists or DoesNotExist, the
                                                      values array must be empty.
                                                      If the operator is Gt or Lt,
                                                      the values array must have a
                                                      single element, which will be
                                                      interpreted as an integer. This
                                                      array is replaced during a strategic
                                                      merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                - key
                                                - operator
                                                type: object
                                              type: array
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        weight:
                                          description: Weight associated with matching
                                            the corresponding nodeSelectorTerm, in
                                            the range 1-100.
                                          format: int32
                                          type: integer
                                      required:
                                      - preference
                                      - weight
                                      type: object
                                    type: array
                                  requiredDuringSchedulingIgnoredDuringExecution:
                                    description: If the affinity requirements specified
                                      by this field are not met at scheduling time,
                                      the pod will not be scheduled onto the node.
                                      If the affinity requirements specified by this
                                      field cease to be met at some point during pod
                                      execution (e.g. due to an update), the system
                                      may or may not try to eventually evict the pod
                                      from its node.
                                    properties:
                                      nodeSelectorTerms:
                                        description: Required. A list of node selector
                                          terms. The terms are ORed.
                                        items:
                                          description: A null or empty node selector
                                            term matches no objects. The requirements
                                            of them are ANDed. The TopologySelectorTerm
                                            type implements a subset of the NodeSelectorTerm.
                                          properties:
                                            matchExpressions:
                                              description: A list of node selector
                                                requirements by node's labels.
                                              items:
                                                description: A node selector requirement
                                                  is a selector that contains values,
                                                  a key, and an operator that relates
                                                  the key and values.
                                                properties:
                                                  key:
                                                    description: The label key that
                                                      the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: Represents a key's
                                                      relationship to a set of values.
                                                      Valid operators are In, NotIn,
                                                      Exists, DoesNotExist. Gt, and
                                                      Lt.
                                                    type: string
                                                  values:
                                                    description: An array of string
                                                      values. If the operator is In
                                                      or NotIn, the values array must
                                                      be non-empty. If the operator
                                                      is Exists or DoesNotExist, the
                                                      values array must be empty.
                                                      If the operator is Gt or Lt,
                                                      the values array must have a
                                                      single element, which will be
                                                      interpreted as an integer. This
                                                      array is replaced during a strategic
                                                      merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                - key
                                                - operator
                                                type: object
                                              type: array
                                            matchFields:
                                              description: A list of node selector
                                                requirements by node's fields.
                                              items:
                                                description: A node selector requirement
                                                  is a selector that contains values,
                                                  a key, and an operator that relates
                                                  the key and values.
                                                properties:
                                                  key:
                                                    description: The label key that
                                                      the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: Represents a key's
                                                      relationship to a set of values.
                                                      Valid operators are In, NotIn,
                                                      Exists, DoesNotExist. Gt, and
                                                      Lt.
                                                    type: string
                                                  values:
                                                    description: An array of string
                                                      values. If the operator is In
                                                      or NotIn, the values array must
                                                      be non-empty. If the operator
                                                      is Exists or DoesNotExist, the
                                                      values array must be empty.
                                                      If the operator is Gt or Lt,
                                                      the values array must have a
                                                      single element, which will be
                                                      interpreted as an integer. This
                                                      array is replaced during a strategic
                                                      merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                - key
                                                - operator
                                                type: object
                                              type: array
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        type: array
                                    required:
                                    - nodeSelectorTerms
                                    type: object
                                    x-kubernetes-map-type: atomic
                                type: object
                              podAffinity:
                                description: Describes pod affinity scheduling rules
                                  (e.g. co-locate this pod in the same node, zone,
                                  etc. as some other pod(s)).
                                properties:
                                  preferredDuringSchedulingIgnoredDuringExecution:
                                    description: The scheduler will prefer to schedule
                                      pods to nodes that satisfy the affinity expressions
                                      specified by this field, but it may choose a
                                      node that violates one or more of the expressions.
                                      The node that is most preferred is the one with
                                      the greatest sum of weights, i.e. for each node
                                      that meets all of the scheduling requirements
                                      (resource request, requiredDuringScheduling
                                      affinity expressions, etc.), compute a sum by
                                      iterating through the elements of this field
                                      and adding "weight" to the sum if the node has
                                      pods which matches the corresponding podAffinityTerm;
                                      the node(s) with the highest sum are the most
                                      preferred.
                                    items:
                                      description: The weights of all of the matched
                                        WeightedPodAffinityTerm fields are added per-node
                                        to find the most preferred node(s)
                                      properties:
                                        podAffinityTerm:
                                          description: Required. A pod affinity term,
                                            associated with the corresponding weight.
                                          properties:
                                            labelSelector:
                                              description: A label query over a set
                                                of resources, in this case pods.
                                              properties:
                                                matchExpressions:
                                                  description: matchExpressions is
                                                    a list of label selector requirements.
                                                    The requirements are ANDed.
                                                  items:
                                                    description: A label selector
                                                      requirement is a selector that
                                                      contains values, a key, and
                                                      an operator that relates the
                                                      key and values.
                                                    properties:
                                                      key:
                                                        description: key is the label
                                                          key that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: operator represents
                                                          a key's relationship to
                                                          a set of values. Valid operators
                                                          are In, NotIn, Exists and
                                                          DoesNotExist.
                                                        type: string
                                                      values:
                                                        description: values is an
                                                          array of string values.
                                                          If the operator is In or
                                                          NotIn, the values array
                                                          must be non-empty. If the
                                                          operator is Exists or DoesNotExist,
                                                          the values array must be
                                                          empty. This array is replaced
                                                          during a strategic merge
                                                          patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  description: matchLabels is a map
                                                    of {key,value} pairs. A single
                                                    {key,value} in the matchLabels
                                                    map is equivalent to an element
                                                    of matchExpressions, whose key
                                                    field is "key", the operator is
                                                    "In", and the values array contains
                                                    only "value". The requirements
                                                    are ANDed.
                                                  type: object
                                              type: object
                                              x-kubernetes-map-type: atomic
                                            namespaceSelector:
                                              description: A label query over the
                                                set of namespaces that the term applies
                                                to. The term is applied to the union
                                                of the namespaces selected by this
                                                field and the ones listed in the namespaces
                                                field. null selector and null or empty
                                                namespaces list means "this pod's
                                                namespace". An empty selector ({})
                                                matches all namespaces.
                                              properties:
                                                matchExpressions:
                                                  description: matchExpressions is
                                                    a list of label selector requirements.
                                                    The requirements are ANDed.
                                                  items:
                                                    description: A label selector
                                                      requirement is a selector that
                                                      contains values, a key, and
                                                      an operator that relates the
                                                      key and values.
                                                    properties:
                                                      key:
                                                        description: key is the label
                                                          key that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: operator represents
                                                          a key's relationship to
                                                          a set of values. Valid operators
                                                          are In, NotIn, Exists and
                                                          DoesNotExist.
                                                        type: string
                                                      values:
                                                        description: values is an
                                                          array of string values.
                                                          If the operator is In or
                                                          NotIn, the values array
                                                          must be non-empty. If the
                                                          operator is Exists or DoesNotExist,
                                                          the values array must be
                                                          empty. This array is replaced
                                                          during a strategic merge
                                                          patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  description: matchLabels is a map
                                                    of {key,value} pairs. A single
                                                    {key,value} in the matchLabels
                                                    map is equivalent to an element
                                                    of matchExpressions, whose key
                                                    field is "key", the operator is
                                                    "In", and the values array contains
                                                    only "value". The requirements
                                                    are ANDed.
                                                  type: object
                                              type: object
                                              x-kubernetes-map-type: atomic
                                            namespaces:
                                              description: namespaces specifies a
                                                static list of namespace names that
                                                the term applies to. The term is applied
                                                to the union of the namespaces listed
                                                in this field and the ones selected
                                                by namespaceSelector. null or empty
                                                namespaces list and null namespaceSelector
                                                means "this pod's namespace".
                                              items:
                                                type: string
                                              type: array
                                            topologyKey:
                                              description: This pod should be co-located
                                                (affinity) or not co-located (anti-affinity)
                                                with the pods matching the labelSelector
                                                in the specified namespaces, where
                                                co-located is defined as running on
                                                a node whose value of the label with
                                                key topologyKey matches that of any
                                                node on which any of the selected
                                                pods is running. Empty topologyKey
                                                is not allowed.
                                              type: string
                                          required:
                                          - topologyKey
                                          type: object
                                        weight:
                                          description: weight associated with matching
                                            the corresponding podAffinityTerm, in
                                            the range 1-100.
                                          format: int32
                                          type: integer
                                      required:
                                      - podAffinityTerm
                                      - weight
                                      type: object
                                    type: array
                                  requiredDuringSchedulingIgnoredDuringExecution:
                                    description: If the affinity requirements specified
                                      by this field are not met at scheduling time,
                                      the pod will not be scheduled onto the node.
                                      If the affinity requirements specified by this
                                      field cease to be met at some point during pod
                                      execution (e.g. due to a pod label update),
                                      the system may or may not try to eventually
                                      evict the pod from its node. When there are
                                      multiple elements, the lists of nodes corresponding
                                      to each podAffinityTerm are intersected, i.e.
                                      all terms must be satisfied.
                                    items:
                                      description: Defines a set of pods (namely those
                                        matching the labelSelector relative to the
                                        given namespace(s)) that this pod should be
                                        co-located (affinity) or not co-located (anti-affinity)
                                        with, where co-located is defined as running
                                        on a node whose value of the label with key
                                        <topologyKey> matches that of any node on
                                        which a pod of the set of pods is running
                                      properties:
                                        labelSelector:
                                          description: A label query over a set of
                                            resources, in this case pods.
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list
                                                of label selector requirements. The
                                                requirements are ANDed.
                                              items:
                                                description: A label selector requirement
                                                  is a selector that contains values,
                                                  a key, and an operator that relates
                                                  the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label
                                                      key that the selector applies
                                                      to.
                                                    type: string
                                                  operator:
                                                    description: operator represents
                                                      a key's relationship to a set
                                                      of values. Valid operators are
                                                      In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: values is an array
                                                      of string values. If the operator
                                                      is In or NotIn, the values array
                                                      must be non-empty. If the operator
                                                      is Exists or DoesNotExist, the
                                                      values array must be empty.
                                                      This array is replaced during
                                                      a strategic merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                - key
                                                - operator
                                                type: object
                                              type: array
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: matchLabels is a map of
                                                {key,value} pairs. A single {key,value}
                                                in the matchLabels map is equivalent
                                                to an element of matchExpressions,
                                                whose key field is "key", the operator
                                                is "In", and the values array contains
                                                only "value". The requirements are
                                                ANDed.
                                              type: object
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        namespaceSelector:
                                          description: A label query over the set
                                            of namespaces that the term applies to.
                                            The term is applied to the union of the
                                            namespaces selected by this field and
                                            the ones listed in the namespaces field.
                                            null selector and null or empty namespaces
                                            list means "this pod's namespace". An
                                            empty selector ({}) matches all namespaces.
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list
                                                of label selector requirements. The
                                                requirements are ANDed.
                                              items:
                                                description: A label selector requirement
                                                  is a selector that contains values,
                                                  a key, and an operator that relates
                                                  the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label
                                                      key that the selector applies
                                                      to.
                                                    type: string
                                                  operator:
                                                    description: operator represents
                                                      a key's relationship to a set
                                                      of values. Valid operators are
                                                      In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: values is an array
                                                      of string values. If the operator
                                                      is In or NotIn, the values array
                                                      must be non-empty. If the operator
                                                      is Exists or DoesNotExist, the
                                                      values array must be empty.
                                                      This array is replaced during
                                                      a strategic merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                - key
                                                - operator
                                                type: object
                                              type: array
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: matchLabels is a map of
                                                {key,value} pairs. A single {key,value}
                                                in the matchLabels map is equivalent
                                                to an element of matchExpressions,
                                                whose key field is "key", the operator
                                                is "In", and the values array contains
                                                only "value". The requirements are
                                                ANDed.
                                              type: object
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        namespaces:
                                          description: namespaces specifies a static
                                            list of namespace names that the term
                                            applies to. The term is applied to the
                                            union of the namespaces listed in this
                                            field and the ones selected by namespaceSelector.
                                            null or empty namespaces list and null
                                            namespaceSelector means "this pod's namespace".
                                          items:
                                            type: string
                                          type: array
                                        topologyKey:
                                          description: This pod should be co-located
                                            (affinity) or not co-located (anti-affinity)
                                            with the pods matching the labelSelector
                                            in the specified namespaces, where co-located
                                            is defined as running on a node whose
                                            value of the label with key topologyKey
                                            matches that of any node on which any
                                            of the selected pods is running. Empty
                                            topologyKey is not allowed.
                                          type: string
                                      required:
                                      - topologyKey
                                      type: object
                                    type: array
                                type: object
                              podAntiAffinity:
                                description: Describes pod anti-affinity scheduling
                                  rules (e.g. avoid putting this pod in the same node,
                                  zone, etc. as some other pod(s)).
                                properties:
                                  preferredDuringSchedulingIgnoredDuringExecution:
                                    description: The scheduler will prefer to schedule
                                      pods to nodes that satisfy the anti-affinity
                                      expressions specified by this field, but it
                                      may choose a node that violates one or more
                                      of the expressions. The node that is most preferred
                                      is the one with the greatest sum of weights,
                                      i.e. for each node that meets all of the scheduling
                                      requirements (resource request, requiredDuringScheduling
                                      anti-affinity expressions, etc.), compute a
                                      sum by iterating through the elements of this
                                      field and adding "weight" to the sum if the
                                      node has pods which matches the corresponding
                                      podAffinityTerm; the node(s) with the highest
                                      sum are the most preferred.
                                    items:
                                      description: The weights of all of the matched
                                        WeightedPodAffinityTerm fields are added per-node
                                        to find the most preferred node(s)
                                      properties:
                                        podAffinityTerm:
                                          description: Required. A pod affinity term,
                                            associated with the corresponding weight.
                                          properties:
                                            labelSelector:
                                              description: A label query over a set
                                                of resources, in this case pods.
                                              properties:
                                                matchExpressions:
                                                  description: matchExpressions is
                                                    a list of label selector requirements.
                                                    The requirements are ANDed.
                                                  items:
                                                    description: A label selector
                                                      requirement is a selector that
                                                      contains values, a key, and
                                                      an operator that relates the
                                                      key and values.
                                                    properties:
                                                      key:
                                                        description: key is the label
                                                          key that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: operator represents
                                                          a key's relationship to
                                                          a set of values. Valid operators
                                                          are In, NotIn, Exists and
                                                          DoesNotExist.
                                                        type: string
                                                      values:
                                                        description: values is an
                                                          array of string values.
                                                          If the operator is In or
                                                          NotIn, the values array
                                                          must be non-empty. If the
                                                          operator is Exists or DoesNotExist,
                                                          the values array must be
                                                          empty. This array is replaced
                                                          during a strategic merge
                                                          patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  description: matchLabels is a map
                                                    of {key,value} pairs. A single
                                                    {key,value} in the matchLabels
                                                    map is equivalent to an element
                                                    of matchExpressions, whose key
                                                    field is "key", the operator is
                                                    "In", and the values array contains
                                                    only "value". The requirements
                                                    are ANDed.
                                                  type: object
                                              type: object
                                              x-kubernetes-map-type: atomic
                                            namespaceSelector:
                                              description: A label query over the
                                                set of namespaces that the term applies
                                                to. The term is applied to the union
                                                of the namespaces selected by this
                                                field and the ones listed in the namespaces
                                                field. null selector and null or empty
                                                namespaces list means "this pod's
                                                namespace". An empty selector ({})
                                                matches all namespaces.
                                              properties:
                                                matchExpressions:
                                                  description: matchExpressions is
                                                    a list of label selector requirements.
                                                    The requirements are ANDed.
                                                  items:
                                                    description: A label selector
                                                      requirement is a selector that
                                                      contains values, a key, and
                                                      an operator that relates the
                                                      key and values.
                                                    properties:
                                                      key:
                                                        description: key is the label
                                                          key that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: operator represents
                                                          a key's relationship to
                                                          a set of values. Valid operators
                                                          are In, NotIn, Exists and
                                                          DoesNotExist.
                                                        type: string
                                                      values:
                                                        description: values is an
                                                          array of string values.
                                                          If the operator is In or
                                                          NotIn, the values array
                                                          must be non-empty. If the
                                                          operator is Exists or DoesNotExist,
                                                          the values array must be
                                                          empty. This array is replaced
                                                          during a strategic merge
                                                          patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  description: matchLabels is a map
                                                    of {key,value} pairs. A single
                                                    {key,value} in the matchLabels
                                                    map is equivalent to an element
                                                    of matchExpressions, whose key
                                                    field is "key", the operator is
                                                    "In", and the values array contains
                                                    only "value". The requirements
                                                    are ANDed.
                                                  type: object
                                              type: object
                                              x-kubernetes-map-type: atomic
                                            namespaces:
                                              description: namespaces specifies a
                                                static list of namespace names that
                                                the term applies to. The term is applied
                                                to the union of the namespaces listed
                                                in this field and the ones selected
                                                by namespaceSelector. null or empty
                                                namespaces list and null namespaceSelector
                                                means "this pod's namespace".
                                              items:
                                                type: string
                                              type: array
                                            topologyKey:
                                              description: This pod should be co-located
                                                (affinity) or not co-located (anti-affinity)
                                                with the pods matching the labelSelector
                                                in the specified namespaces, where
                                                co-located is defined as running on
                                                a node whose value of the label with
                                                key topologyKey matches that of any
                                                node on which any of the selected
                                                pods is running. Empty topologyKey
                                                is not allowed.
                                              type: string
                                          required:
                                          - topologyKey
                                          type: object
                                        weight:
                                          description: weight associated with matching
                                            the corresponding podAffinityTerm, in
                                            the range 1-100.
                                          format: int32
                                          type: integer
                                      required:
                                      - podAffinityTerm
                                      - weight
                                      type: object
                                    type: array
                                  requiredDuringSchedulingIgnoredDuringExecution:
                                    description: If the anti-affinity requirements
                                      specified by this field are not met at scheduling
                                      time, the pod will not be scheduled onto the
                                      node. If the anti-affinity requirements specified
                                      by this field cease to be met at some point
                                      during pod execution (e.g. due to a pod label
                                      update), the system may or may not try to eventually
                                      evict the pod from its node. When there are
                                      multiple elements, the lists of nodes corresponding
                                      to each podAffinityTerm are intersected, i.e.
                                      all terms must be satisfied.
                                    items:
                                      description: Defines a set of pods (namely those
                                        matching the labelSelector relative to the
                                        given namespace(s)) that this pod should be
                                        co-located (affinity) or not co-located (anti-affinity)
                                        with, where co-located is defined as running
                                        on a node whose value of the label with key
                                        <topologyKey> matches that of any node on
                                        which a pod of the set of pods is running
                                      properties:
                                        labelSelector:
                                          description: A label query over a set of
                                            resources, in this case pods.
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list
                                                of label selector requirements. The
                                                requirements are ANDed.
                                              items:
                                                description: A label selector requirement
                                                  is a selector that contains values,
                                                  a key, and an operator that relates
                                                  the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label
                                                      key that the selector applies
                                                      to.
                                                    type: string
                                                  operator:
                                                    description: operator represents
                                                      a key's relationship to a set
                                                      of values. Valid operators are
                                                      In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: values is an array
                                                      of string values. If the operator
                                                      is In or NotIn, the values array
                                                      must be non-empty. If the operator
                                                      is Exists or DoesNotExist, the
                                                      values array must be empty.
                                                      This array is replaced during
                                                      a strategic merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                - key
                                                - operator
                                                type: object
                                              type: array
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: matchLabels is a map of
                                                {key,value} pairs. A single {key,value}
                                                in the matchLabels map is equivalent
                                                to an element of matchExpressions,
                                                whose key field is "key", the operator
                                                is "In", and the values array contains
                                                only "value". The requirements are
                                                ANDed.
                                              type: object
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        namespaceSelector:
                                          description: A label query over the set
                                            of namespaces that the term applies to.
                                            The term is applied to the union of the
                                            namespaces selected by this field and
                                            the ones listed in the namespaces field.
                                            null selector and null or empty namespaces
                                            list means "this pod's namespace". An
                                            empty selector ({}) matches all namespaces.
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list
                                                of label selector requirements. The
                                                requirements are ANDed.
                                              items:
                                                description: A label selector requirement
                                                  is a selector that contains values,
                                                  a key, and an operator that relates
                                                  the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label
                                                      key that the selector applies
                                                      to.
                                                    type: string
                                                  operator:
                                                    description: operator represents
                                                      a key's relationship to a set
                                                      of values. Valid operators are
                                                      In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: values is an array
                                                      of string values. If the operator
                                                      is In or NotIn, the values array
                                                      must be non-empty. If the operator
                                                      is Exists or DoesNotExist, the
                                                      values array must be empty.
                                                      This array is replaced during
                                                      a strategic merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                - key
                                                - operator
                                                type: object
                                              type: array
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: matchLabels is a map of
                                                {key,value} pairs. A single {key,value}
                                                in the matchLabels map is equivalent
                                                to an element of matchExpressions,
                                                whose key field is "key", the operator
                                                is "In", and the values array contains
                                                only "value". The requirements are
                                                ANDed.
                                              type: object
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        namespaces:
                                          description: namespaces specifies a static
                                            list of namespace names that the term
                                            applies to. The term is applied to the
                                            union of the namespaces listed in this
                                            field and the ones selected by namespaceSelector.
                                            null or empty namespaces list and null
                                            namespaceSelector means "this pod's namespace".
                                          items:
                                            type: string
                                          type: array
                                        topologyKey:
                                          description: This pod should be co-located
                                            (affinity) or not co-located (anti-affinity)
                                            with the pods matching the labelSelector
                                            in the specified namespaces, where co-located
                                            is defined as running on a node whose
                                            value of the label with key topologyKey
                                            matches that of any node on which any
                                            of the selected pods is running. Empty
                                            topologyKey is not allowed.
                                          type: string
                                      required:
                                      - topologyKey
                                      type: object
                                    type: array
                                type: object
                            type: object
                          automountServiceAccountToken:
                            description: AutomountServiceAccountToken indicates whether
                              a service account token should be automatically mounted.
                            type: boolean
                          containers:
                            description: List of containers belonging to the pod.
                              Containers cannot currently be added or removed. There
                              must be at least one container in a Pod. Cannot be updated.
                            items:
                              description: A single application container that you
                                want to run within a pod.
                              properties:
                                args:
                                  description: 'Arguments to the entrypoint. The container
                                    image''s CMD is used if this is not provided.
                                    Variable references $(VAR_NAME) are expanded using
                                    the container''s environment. If a variable cannot
                                    be resolved, the reference in the input string
                                    will be unchanged. Double $$ are reduced to a
                                    single $, which allows for escaping the $(VAR_NAME)
                                    syntax: i.e. "$$(VAR_NAME)" will produce the string
                                    literal "$(VAR_NAME)". Escaped references will
                                    never be expanded, regardless of whether the variable
                                    exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                                  items:
                                    type: string
                                  type: array
                                command:
                                  description: 'Entrypoint array. Not executed within
                                    a shell. The container image''s ENTRYPOINT is
                                    used if this is not provided. Variable references
                                    $(VAR_NAME) are expanded using the container''s
                                    environment. If a variable cannot be resolved,
                                    the reference in the input string will be unchanged.
                                    Double $$ are reduced to a single $, which allows
                                    for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)"
                                    will produce the string literal "$(VAR_NAME)".
                                    Escaped references will never be expanded, regardless
                                    of whether the variable exists or not. Cannot
                                    be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                                  items:
                                    type: string
                                  type: array
                                env:
                                  description: List of environment variables to set
                                    in the container. Cannot be updated.
                                  items:
                                    description: EnvVar represents an environment
                                      variable present in a Container.
                                    properties:
                                      name:
                                        description: Name of the environment variable.
                                          Must be a C_IDENTIFIER.
                                        type: string
                                      value:
                                        description: 'Variable references $(VAR_NAME)
                                          are expanded using the previously defined
                                          environment variables in the container and
                                          any service environment variables. If a
                                          variable cannot be resolved, the reference
                                          in the input string will be unchanged. Double
                                          $$ are reduced to a single $, which allows
                                          for escaping the $(VAR_NAME) syntax: i.e.
                                          "$$(VAR_NAME)" will produce the string literal
                                          "$(VAR_NAME)". Escaped references will never
                                          be expanded, regardless of whether the variable
                                          exists or not. Defaults to "".'
                                        type: string
                                      valueFrom:
                                        description: Source for the environment variable's
                                          value. Cannot be used if value is not empty.
                                        properties:
                                          configMapKeyRef:
                                            description: Selects a key of a ConfigMap.
                                            properties:
                                              key:
                                                description: The key to select.
                                                type: string
                                              name:
                                                description: 'Name of the referent.
                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                  TODO: Add other useful fields. apiVersion,
                                                  kind, uid?'
                                                type: string
                                              optional:
                                                description: Specify whether the ConfigMap
                                                  or its key must be defined
                                                type: boolean
                                            required:
                                            - key
                                            type: object
                                            x-kubernetes-map-type: atomic
                                          fieldRef:
                                            description: 'Selects a field of the pod:
                                              supports metadata.name, metadata.namespace,
                                              `metadata.labels[''<KEY>'']`, `metadata.annotations[''<KEY>'']`,
                                              spec.nodeName, spec.serviceAccountName,
                                              status.hostIP, status.podIP, status.podIPs.'
                                            properties:
                                              apiVersion:
                                                description: Version of the schema
                                                  the FieldPath is written in terms
                                                  of, defaults to "v1".
                                                type: string
                                              fieldPath:
                                                description: Path of the field to
                                                  select in the specified API version.
                                                type: string
                                            required:
                                            - fieldPath
                                            type: object
                                            x-kubernetes-map-type: atomic
                                          resourceFieldRef:
                                            description: 'Selects a resource of the
                                              container: only resources limits and
                                              requests (limits.cpu, limits.memory,
                                              limits.ephemeral-storage, requests.cpu,
                                              requests.memory and requests.ephemeral-storage)
                                              are currently supported.'
                                            properties:
                                              containerName:
                                                description: 'Container name: required
                                                  for volumes, optional for env vars'
                                                type: string
                                              divisor:
                                                anyOf:
                                                - type: integer
                                                - type: string
                                                description: Specifies the output
                                                  format of the exposed resources,
                                                  defaults to "1"
                                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                x-kubernetes-int-or-string: true
                                              resource:
                                                description: 'Required: resource to
                                                  select'
                                                type: string
                                            required:
                                            - resource
                                            type: object
                                            x-kubernetes-map-type: atomic
                                          secretKeyRef:
                                            description: Selects a key of a secret
                                              in the pod's namespace
                                            properties:
                                              key:
                                                description: The key of the secret
                                                  to select from.  Must be a valid
                                                  secret key.
                                                type: string
                                              name:
                                                description: 'Name of the referent.
                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                  TODO: Add other useful fields. apiVersion,
                                                  kind, uid?'
                                                type: string
                                              optional:
                                                description: Specify whether the Secret
                                                  or its key must be defined
                                                type: boolean
                                            required:
                                            - key
                                            type: object
                                            x-kubernetes-map-type: atomic
                                        type: object
                                    required:
                                    - name
                                    type: object
                                  type: array
                                envFrom:
                                  description: List of sources to populate environment
                                    variables in the container. The keys defined within
                                    a source must be a C_IDENTIFIER. All invalid keys
                                    will be reported as an event when the container
                                    is starting. When a key exists in multiple sources,
                                    the value associated with the last source will
                                    take precedence. Values defined by an Env with
                                    a duplicate key will take precedence. Cannot be
                                    updated.
                                  items:
                                    description: EnvFromSource represents the source
                                      of a set of ConfigMaps
                                    properties:
                                      configMapRef:
                                        description: The ConfigMap to select from
                                        properties:
                                          name:
                                            description: 'Name of the referent. More
                                              info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                              TODO: Add other useful fields. apiVersion,
                                              kind, uid?'
                                            type: string
                                          optional:
                                            description: Specify whether the ConfigMap
                                              must be defined
                                            type: boolean
                                        type: object
                                        x-kubernetes-map-type: atomic
                                      prefix:
                                        description: An optional identifier to prepend
                                          to each key in the ConfigMap. Must be a
                                          C_IDENTIFIER.
                                        type: string
                                      secretRef:
                                        description: The Secret to select from
                                        properties:
                                          name:
                                            description: 'Name of the referent. More
                                              info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                              TODO: Add other useful fields. apiVersion,
                                              kind, uid?'
                                            type: string
                                          optional:
                                            description: Specify whether the Secret
                                              must be defined
                                            type: boolean
                                        type: object
                                        x-kubernetes-map-type: atomic
                                    type: object
                                  type: array
                                image:
                                  description: 'Container image name. More info: https://kubernetes.io/docs/concepts/containers/images
                                    This field is optional to allow higher level config
                                    management to default or override container images
                                    in workload controllers like Deployments and StatefulSets.'
                                  type: string
                                imagePullPolicy:
                                  description: 'Image pull policy. One of Always,
                                    Never, IfNotPresent. Defaults to Always if :latest
                                    tag is specified, or IfNotPresent otherwise. Cannot
                                    be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images'
                                  type: string
                                lifecycle:
                                  description: Actions that the management system
                                    should take in response to container lifecycle
                                    events. Cannot be updated.
                                  properties:
                                    postStart:
                                      description: 'PostStart is called immediately
                                        after a container is created. If the handler
                                        fails, the container is terminated and restarted
                                        according to its restart policy. Other management
                                        of the container blocks until the hook completes.
                                        More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'
                                      properties:
                                        exec:
                                          description: Exec specifies the action to
                                            take.
                                          properties:
                                            command:
                                              description: Command is the command
                                                line to execute inside the container,
                                                the working directory for the command  is
                                                root ('/') in the container's filesystem.
                                                The command is simply exec'd, it is
                                                not run inside a shell, so traditional
                                                shell instructions ('|', etc) won't
                                                work. To use a shell, you need to
                                                explicitly call out to that shell.
                                                Exit status of 0 is treated as live/healthy
                                                and non-zero is unhealthy.
                                              items:
                                                type: string
                                              type: array
                                          type: object
                                        httpGet:
                                          description: HTTPGet specifies the http
                                            request to perform.
                                          properties:
                                            host:
                                              description: Host name to connect to,
                                                defaults to the pod IP. You probably
                                                want to set "Host" in httpHeaders
                                                instead.
                                              type: string
                                            httpHeaders:
                                              description: Custom headers to set in
                                                the request. HTTP allows repeated
                                                headers.
                                              items:
                                                description: HTTPHeader describes
                                                  a custom header to be used in HTTP
                                                  probes
                                                properties:
                                                  name:
                                                    description: The header field
                                                      name. This will be canonicalized
                                                      upon output, so case-variant
                                                      names will be understood as
                                                      the same header.
                                                    type: string
                                                  value:
                                                    description: The header field
                                                      value
                                                    type: string
                                                required:
                                                - name
                                                - value
                                                type: object
                                              type: array
                                            path:
                                              description: Path to access on the HTTP
                                                server.
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: Name or number of the port
                                                to access on the container. Number
                                                must be in the range 1 to 65535. Name
                                                must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                            scheme:
                                              description: Scheme to use for connecting
                                                to the host. Defaults to HTTP.
                                              type: string
                                          required:
                                          - port
                                          type: object
                                        tcpSocket:
                                          description: Deprecated. TCPSocket is NOT
                                            supported as a LifecycleHandler and kept
                                            for the backward compatibility. There
                                            are no validation of this field and lifecycle
                                            hooks will fail in runtime when tcp handler
                                            is specified.
                                          properties:
                                            host:
                                              description: 'Optional: Host name to
                                                connect to, defaults to the pod IP.'
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: Number or name of the port
                                                to access on the container. Number
                                                must be in the range 1 to 65535. Name
                                                must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                          required:
                                          - port
                                          type: object
                                      type: object
                                    preStop:
                                      description: 'PreStop is called immediately
                                        before a container is terminated due to an
                                        API request or management event such as liveness/startup
                                        probe failure, preemption, resource contention,
                                        etc. The handler is not called if the container
                                        crashes or exits. The Pod''s termination grace
                                        period countdown begins before the PreStop
                                        hook is executed. Regardless of the outcome
                                        of the handler, the container will eventually
                                        terminate within the Pod''s termination grace
                                        period (unless delayed by finalizers). Other
                                        management of the container blocks until the
                                        hook completes or until the termination grace
                                        period is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'
                                      properties:
                                        exec:
                                          description: Exec specifies the action to
                                            take.
                                          properties:
                                            command:
                                              description: Command is the command
                                                line to execute inside the container,
                                                the working directory for the command  is
                                                root ('/') in the container's filesystem.
                                                The command is simply exec'd, it is
                                                not run inside a shell, so traditional
                                                shell instructions ('|', etc) won't
                                                work. To use a shell, you need to
                                                explicitly call out to that shell.
                                                Exit status of 0 is treated as live/healthy
                                                and non-zero is unhealthy.
                                              items:
                                                type: string
                                              type: array
                                          type: object
                                        httpGet:
                                          description: HTTPGet specifies the http
                                            request to perform.
                                          properties:
                                            host:
                                              description: Host name to connect to,
                                                defaults to the pod IP. You probably
                                                want to set "Host" in httpHeaders
                                                instead.
                                              type: string
                                            httpHeaders:
                                              description: Custom headers to set in
                                                the request. HTTP allows repeated
                                                headers.
                                              items:
                                                description: HTTPHeader describes
                                                  a custom header to be used in HTTP
                                                  probes
                                                properties:
                                                  name:
                                                    description: The header field
                                                      name. This will be canonicalized
                                                      upon output, so case-variant
                                                      names will be understood as
                                                      the same header.
                                                    type: string
                                                  value:
                                                    description: The header field
                                                      value
                                                    type: string
                                                required:
                                                - name
                                                - value
                                                type: object
                                              type: array
                                            path:
                                              description: Path to access on the HTTP
                                                server.
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: Name or number of the port
                                                to access on the container. Number
                                                must be in the range 1 to 65535. Name
                                                must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                            scheme:
                                              description: Scheme to use for connecting
                                                to the host. Defaults to HTTP.
                                              type: string
                                          required:
                                          - port
                                          type: object
                                        tcpSocket:
                                          description: Deprecated. TCPSocket is NOT
                                            supported as a LifecycleHandler and kept
                                            for the backward compatibility. There
                                            are no validation of this field and lifecycle
                                            hooks will fail in runtime when tcp handler
                                            is specified.
                                          properties:
                                            host:
                                              description: 'Optional: Host name to
                                                connect to, defaults to the pod IP.'
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: Number or name of the port
                                                to access on the container. Number
                                                must be in the range 1 to 65535. Name
                                                must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                          required:
                                          - port
                                          type: object
                                      type: object
                                  type: object
                                livenessProbe:
                                  description: 'Periodic probe of container liveness.
                                    Container will be restarted if the probe fails.
                                    Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                  properties:
                                    exec:
                                      description: Exec specifies the action to take.
                                      properties:
                                        command:
                                          description: Command is the command line
                                            to execute inside the container, the working
                                            directory for the command  is root ('/')
                                            in the container's filesystem. The command
                                            is simply exec'd, it is not run inside
                                            a shell, so traditional shell instructions
                                            ('|', etc) won't work. To use a shell,
                                            you need to explicitly call out to that
                                            shell. Exit status of 0 is treated as
                                            live/healthy and non-zero is unhealthy.
                                          items:
                                            type: string
                                          type: array
                                      type: object
                                    failureThreshold:
                                      description: Minimum consecutive failures for
                                        the probe to be considered failed after having
                                        succeeded. Defaults to 3. Minimum value is
                                        1.
                                      format: int32
                                      type: integer
                                    grpc:
                                      description: GRPC specifies an action involving
                                        a GRPC port.
                                      properties:
                                        port:
                                          description: Port number of the gRPC service.
                                            Number must be in the range 1 to 65535.
                                          format: int32
                                          type: integer
                                        service:
                                          description: "Service is the name of the
                                            service to place in the gRPC HealthCheckRequest
                                            (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).
                                            \n If this is not specified, the default
                                            behavior is defined by gRPC."
                                          type: string
                                      required:
                                      - port
                                      type: object
                                    httpGet:
                                      description: HTTPGet specifies the http request
                                        to perform.
                                      properties:
                                        host:
                                          description: Host name to connect to, defaults
                                            to the pod IP. You probably want to set
                                            "Host" in httpHeaders instead.
                                          type: string
                                        httpHeaders:
                                          description: Custom headers to set in the
                                            request. HTTP allows repeated headers.
                                          items:
                                            description: HTTPHeader describes a custom
                                              header to be used in HTTP probes
                                            properties:
                                              name:
                                                description: The header field name.
                                                  This will be canonicalized upon
                                                  output, so case-variant names will
                                                  be understood as the same header.
                                                type: string
                                              value:
                                                description: The header field value
                                                type: string
                                            required:
                                            - name
                                            - value
                                            type: object
                                          type: array
                                        path:
                                          description: Path to access on the HTTP
                                            server.
                                          type: string
                                        port:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: Name or number of the port
                                            to access on the container. Number must
                                            be in the range 1 to 65535. Name must
                                            be an IANA_SVC_NAME.
                                          x-kubernetes-int-or-string: true
                                        scheme:
                                          description: Scheme to use for connecting
                                            to the host. Defaults to HTTP.
                                          type: string
                                      required:
                                      - port
                                      type: object
                                    initialDelaySeconds:
                                      description: 'Number of seconds after the container
                                        has started before liveness probes are initiated.
                                        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                      format: int32
                                      type: integer
                                    periodSeconds:
                                      description: How often (in seconds) to perform
                                        the probe. Default to 10 seconds. Minimum
                                        value is 1.
                                      format: int32
                                      type: integer
                                    successThreshold:
                                      description: Minimum consecutive successes for
                                        the probe to be considered successful after
                                        having failed. Defaults to 1. Must be 1 for
                                        liveness and startup. Minimum value is 1.
                                      format: int32
                                      type: integer
                                    tcpSocket:
                                      description: TCPSocket specifies an action involving
                                        a TCP port.
                                      properties:
                                        host:
                                          description: 'Optional: Host name to connect
                                            to, defaults to the pod IP.'
                                          type: string
                                        port:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: Number or name of the port
                                            to access on the container. Number must
                                            be in the range 1 to 65535. Name must
                                            be an IANA_SVC_NAME.
                                          x-kubernetes-int-or-string: true
                                      required:
                                      - port
                                      type: object
                                    terminationGracePeriodSeconds:
                                      description: Optional duration in seconds the
                                        pod needs to terminate gracefully upon probe
                                        failure. The grace period is the duration
                                        in seconds after the processes running in
                                        the pod are sent a termination signal and
                                        the time when the processes are forcibly halted
                                        with a kill signal. Set this value longer
                                        than the expected cleanup time for your process.
                                        If this value is nil, the pod's terminationGracePeriodSeconds
                                        will be used. Otherwise, this value overrides
                                        the value provided by the pod spec. Value
                                        must be non-negative integer. The value zero
                                        indicates stop immediately via the kill signal
                                        (no opportunity to shut down). This is a beta
                                        field and requires enabling ProbeTerminationGracePeriod
                                        feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds
                                        is used if unset.
                                      format: int64
                                      type: integer
                                    timeoutSeconds:
                                      description: 'Number of seconds after which
                                        the probe times out. Defaults to 1 second.
                                        Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                      format: int32
                                      type: integer
                                  type: object
                                name:
                                  description: Name of the container specified as
                                    a DNS_LABEL. Each container in a pod must have
                                    a unique name (DNS_LABEL). Cannot be updated.
                                  type: string
                                ports:
                                  description: List of ports to expose from the container.
                                    Not specifying a port here DOES NOT prevent that
                                    port from being exposed. Any port which is listening
                                    on the default "0.0.0.0" address inside a container
                                    will be accessible from the network. Modifying
                                    this array with strategic merge patch may corrupt
                                    the data. For more information See https://github.com/kubernetes/kubernetes/issues/108255.
                                    Cannot be updated.
                                  items:
                                    description: ContainerPort represents a network
                                      port in a single container.
                                    properties:
                                      containerPort:
                                        description: Number of port to expose on the
                                          pod's IP address. This must be a valid port
                                          number, 0 < x < 65536.
                                        format: int32
                                        type: integer
                                      hostIP:
                                        description: What host IP to bind the external
                                          port to.
                                        type: string
                                      hostPort:
                                        description: Number of port to expose on the
                                          host. If specified, this must be a valid
                                          port number, 0 < x < 65536. If HostNetwork
                                          is specified, this must match ContainerPort.
                                          Most containers do not need this.
                                        format: int32
                                        type: integer
                                      name:
                                        description: If specified, this must be an
                                          IANA_SVC_NAME and unique within the pod.
                                          Each named port in a pod must have a unique
                                          name. Name for the port that can be referred
                                          to by services.
                                        type: string
                                      protocol:
                                        default: TCP
                                        description: Protocol for port. Must be UDP,
                                          TCP, or SCTP. Defaults to "TCP".
                                        type: string
                                    required:
                                    - containerPort
                                    - protocol
                                    type: object
                                  type: array
                                  x-kubernetes-list-map-keys:
                                  - containerPort
                                  - protocol
                                  x-kubernetes-list-type: map
                                readinessProbe:
                                  description: 'Periodic probe of container service
                                    readiness. Container will be removed from service
                                    endpoints if the probe fails. Cannot be updated.
                                    More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                  properties:
                                    exec:
                                      description: Exec specifies the action to take.
                                      properties:
                                        command:
                                          description: Command is the command line
                                            to execute inside the container, the working
                                            directory for the command  is root ('/')
                                            in the container's filesystem. The command
                                            is simply exec'd, it is not run inside
                                            a shell, so traditional shell instructions
                                            ('|', etc) won't work. To use a shell,
                                            you need to explicitly call out to that
                                            shell. Exit status of 0 is treated as
                                            live/healthy and non-zero is unhealthy.
                                          items:
                                            type: string
                                          type: array
                                      type: object
                                    failureThreshold:
                                      description: Minimum consecutive failures for
                                        the probe to be considered failed after having
                                        succeeded. Defaults to 3. Minimum value is
                                        1.
                                      format: int32
                                      type: integer
                                    grpc:
                                      description: GRPC specifies an action involving
                                        a GRPC port.
                                      properties:
                                        port:
                                          description: Port number of the gRPC service.
                                            Number must be in the range 1 to 65535.
                                          format: int32
                                          type: integer
                                        service:
                                          description: "Service is the name of the
                                            service to place in the gRPC HealthCheckRequest
                                            (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).
                                            \n If this is not specified, the default
                                            behavior is defined by gRPC."
                                          type: string
                                      required:
                                      - port
                                      type: object
                                    httpGet:
                                      description: HTTPGet specifies the http request
                                        to perform.
                                      properties:
                                        host:
                                          description: Host name to connect to, defaults
                                            to the pod IP. You probably want to set
                                            "Host" in httpHeaders instead.
                                          type: string
                                        httpHeaders:
                                          description: Custom headers to set in the
                                            request. HTTP allows repeated headers.
                                          items:
                                            description: HTTPHeader describes a custom
                                              header to be used in HTTP probes
                                            properties:
                                              name:
                                                description: The header field name.
                                                  This will be canonicalized upon
                                                  output, so case-variant names will
                                                  be understood as the same header.
                                                type: string
                                              value:
                                                description: The header field value
                                                type: string
                                            required:
                                            - name
                                            - value
                                            type: object
                                          type: array
                                        path:
                                          description: Path to access on the HTTP
                                            server.
                                          type: string
                                        port:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: Name or number of the port
                                            to access on the container. Number must
                                            be in the range 1 to 65535. Name must
                                            be an IANA_SVC_NAME.
                                          x-kubernetes-int-or-string: true
                                        scheme:
                                          description: Scheme to use for connecting
                                            to the host. Defaults to HTTP.
                                          type: string
                                      required:
                                      - port
                                      type: object
                                    initialDelaySeconds:
                                      description: 'Number of seconds after the container
                                        has started before liveness probes are initiated.
                                        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                      format: int32
                                      type: integer
                                    periodSeconds:
                                      description: How often (in seconds) to perform
                                        the probe. Default to 10 seconds. Minimum
                                        value is 1.
                                      format: int32
                                      type: integer
                                    successThreshold:
                                      description: Minimum consecutive successes for
                                        the probe to be considered successful after
                                        having failed. Defaults to 1. Must be 1 for
                                        liveness and startup. Minimum value is 1.
                                      format: int32
                                      type: integer
                                    tcpSocket:
                                      description: TCPSocket specifies an action involving
                                        a TCP port.
                                      properties:
                                        host:
                                          description: 'Optional: Host name to connect
                                            to, defaults to the pod IP.'
                                          type: string
                                        port:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: Number or name of the port
                                            to access on the container. Number must
                                            be in the range 1 to 65535. Name must
                                            be an IANA_SVC_NAME.
                                          x-kubernetes-int-or-string: true
                                      required:
                                      - port
                                      type: object
                                    terminationGracePeriodSeconds:
                                      description: Optional duration in seconds the
                                        pod needs to terminate gracefully upon probe
                                        failure. The grace period is the duration
                                        in seconds after the processes running in
                                        the pod are sent a termination signal and
                                        the time when the processes are forcibly halted
                                        with a kill signal. Set this value longer
                                        than the expected cleanup time for your process.
                                        If this value is nil, the pod's terminationGracePeriodSeconds
                                        will be used. Otherwise, this value overrides
                                        the value provided by the pod spec. Value
                                        must be non-negative integer. The value zero
                                        indicates stop immediately via the kill signal
                                        (no opportunity to shut down). This is a beta
                                        field and requires enabling ProbeTerminationGracePeriod
                                        feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds
                                        is used if unset.
                                      format: int64
                                      type: integer
                                    timeoutSeconds:
                                      description: 'Number of seconds after which
                                        the probe times out. Defaults to 1 second.
                                        Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                      format: int32
                                      type: integer
                                  type: object
                                resizePolicy:
                                  description: Resources resize policy for the container.
                                  items:
                                    description: ContainerResizePolicy represents
                                      resource resize policy for the container.
                                    properties:
                                      resourceName:
                                        description: 'Name of the resource to which
                                          this resource resize policy applies. Supported
                                          values: cpu, memory.'
                                        type: string
                                      restartPolicy:
                                        description: Restart policy to apply when
                                          specified resource is resized. If not specified,
                                          it defaults to NotRequired.
                                        type: string
                                    required:
                                    - resourceName
                                    - restartPolicy
                                    type: object
                                  type: array
                                  x-kubernetes-list-type: atomic
                                resources:
                                  description: 'Compute Resources required by this
                                    container. Cannot be updated. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                  properties:
                                    claims:
                                      description: "Claims lists the names of resources,
                                        defined in spec.resourceClaims, that are used
                                        by this container. \n This is an alpha field
                                        and requires enabling the DynamicResourceAllocation
                                        feature gate. \n This field is immutable.
                                        It can only be set for containers."
                                      items:
                                        description: ResourceClaim references one
                                          entry in PodSpec.ResourceClaims.
                                        properties:
                                          name:
                                            description: Name must match the name
                                              of one entry in pod.spec.resourceClaims
                                              of the Pod where this field is used.
                                              It makes that resource available inside
                                              a container.
                                            type: string
                                        required:
                                        - name
                                        type: object
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - name
                                      x-kubernetes-list-type: map
                                    limits:
                                      additionalProperties:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                      description: 'Limits describes the maximum amount
                                        of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                      type: object
                                    requests:
                                      additionalProperties:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                      description: 'Requests describes the minimum
                                        amount of compute resources required. If Requests
                                        is omitted for a container, it defaults to
                                        Limits if that is explicitly specified, otherwise
                                        to an implementation-defined value. Requests
                                        cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                      type: object
                                  type: object
                                securityContext:
                                  description: 'SecurityContext defines the security
                                    options the container should be run with. If set,
                                    the fields of SecurityContext override the equivalent
                                    fields of PodSecurityContext. More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/'
                                  properties:
                                    allowPrivilegeEscalation:
                                      description: 'AllowPrivilegeEscalation controls
                                        whether a process can gain more privileges
                                        than its parent process. This bool directly
                                        controls if the no_new_privs flag will be
                                        set on the container process. AllowPrivilegeEscalation
                                        is true always when the container is: 1) run
                                        as Privileged 2) has CAP_SYS_ADMIN Note that
                                        this field cannot be set when spec.os.name
                                        is windows.'
                                      type: boolean
                                    capabilities:
                                      description: The capabilities to add/drop when
                                        running containers. Defaults to the default
                                        set of capabilities granted by the container
                                        runtime. Note that this field cannot be set
                                        when spec.os.name is windows.
                                      properties:
                                        add:
                                          description: Added capabilities
                                          items:
                                            description: Capability represent POSIX
                                              capabilities type
                                            type: string
                                          type: array
                                        drop:
                                          description: Removed capabilities
                                          items:
                                            description: Capability represent POSIX
                                              capabilities type
                                            type: string
                                          type: array
                                      type: object
                                    privileged:
                                      description: Run container in privileged mode.
                                        Processes in privileged containers are essentially
                                        equivalent to root on the host. Defaults to
                                        false. Note that this field cannot be set
                                        when spec.os.name is windows.
                                      type: boolean
                                    procMount:
                                      description: procMount denotes the type of proc
                                        mount to use for the containers. The default
                                        is DefaultProcMount which uses the container
                                        runtime defaults for readonly paths and masked
                                        paths. This requires the ProcMountType feature
                                        flag to be enabled. Note that this field cannot
                                        be set when spec.os.name is windows.
                                      type: string
                                    readOnlyRootFilesystem:
                                      description: Whether this container has a read-only
                                        root filesystem. Default is false. Note that
                                        this field cannot be set when spec.os.name
                                        is windows.
                                      type: boolean
                                    runAsGroup:
                                      description: The GID to run the entrypoint of
                                        the container process. Uses runtime default
                                        if unset. May also be set in PodSecurityContext.  If
                                        set in both SecurityContext and PodSecurityContext,
                                        the value specified in SecurityContext takes
                                        precedence. Note that this field cannot be
                                        set when spec.os.name is windows.
                                      format: int64
                                      type: integer
                                    runAsNonRoot:
                                      description: Indicates that the container must
                                        run as a non-root user. If true, the Kubelet
                                        will validate the image at runtime to ensure
                                        that it does not run as UID 0 (root) and fail
                                        to start the container if it does. If unset
                                        or false, no such validation will be performed.
                                        May also be set in PodSecurityContext.  If
                                        set in both SecurityContext and PodSecurityContext,
                                        the value specified in SecurityContext takes
                                        precedence.
                                      type: boolean
                                    runAsUser:
                                      description: The UID to run the entrypoint of
                                        the container process. Defaults to user specified
                                        in image metadata if unspecified. May also
                                        be set in PodSecurityContext.  If set in both
                                        SecurityContext and PodSecurityContext, the
                                        value specified in SecurityContext takes precedence.
                                        Note that this field cannot be set when spec.os.name
                                        is windows.
                                      format: int64
                                      type: integer
                                    seLinuxOptions:
                                      description: The SELinux context to be applied
                                        to the container. If unspecified, the container
                                        runtime will allocate a random SELinux context
                                        for each container.  May also be set in PodSecurityContext.  If
                                        set in both SecurityContext and PodSecurityContext,
                                        the value specified in SecurityContext takes
                                        precedence. Note that this field cannot be
                                        set when spec.os.name is windows.
                                      properties:
                                        level:
                                          description: Level is SELinux level label
                                            that applies to the container.
                                          type: string
                                        role:
                                          description: Role is a SELinux role label
                                            that applies to the container.
                                          type: string
                                        type:
                                          description: Type is a SELinux type label
                                            that applies to the container.
                                          type: string
                                        user:
                                          description: User is a SELinux user label
                                            that applies to the container.
                                          type: string
                                      type: object
                                    seccompProfile:
                                      description: The seccomp options to use by this
                                        container. If seccomp options are provided
                                        at both the pod & container level, the container
                                        options override the pod options. Note that
                                        this field cannot be set when spec.os.name
                                        is windows.
                                      properties:
                                        localhostProfile:
                                          description: localhostProfile indicates
                                            a profile defined in a file on the node
                                            should be used. The profile must be preconfigured
                                            on the node to work. Must be a descending
                                            path, relative to the kubelet's configured
                                            seccomp profile location. Must only be
                                            set if type is "Localhost".
                                          type: string
                                        type:
                                          description: "type indicates which kind
                                            of seccomp profile will be applied. Valid
                                            options are: \n Localhost - a profile
                                            defined in a file on the node should be
                                            used. RuntimeDefault - the container runtime
                                            default profile should be used. Unconfined
                                            - no profile should be applied."
                                          type: string
                                      required:
                                      - type
                                      type: object
                                    windowsOptions:
                                      description: The Windows specific settings applied
                                        to all containers. If unspecified, the options
                                        from the PodSecurityContext will be used.
                                        If set in both SecurityContext and PodSecurityContext,
                                        the value specified in SecurityContext takes
                                        precedence. Note that this field cannot be
                                        set when spec.os.name is linux.
                                      properties:
                                        gmsaCredentialSpec:
                                          description: GMSACredentialSpec is where
                                            the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                                            inlines the contents of the GMSA credential
                                            spec named by the GMSACredentialSpecName
                                            field.
                                          type: string
                                        gmsaCredentialSpecName:
                                          description: GMSACredentialSpecName is the
                                            name of the GMSA credential spec to use.
                                          type: string
                                        hostProcess:
                                          description: HostProcess determines if a
                                            container should be run as a 'Host Process'
                                            container. This field is alpha-level and
                                            will only be honored by components that
                                            enable the WindowsHostProcessContainers
                                            feature flag. Setting this field without
                                            the feature flag will result in errors
                                            when validating the Pod. All of a Pod's
                                            containers must have the same effective
                                            HostProcess value (it is not allowed to
                                            have a mix of HostProcess containers and
                                            non-HostProcess containers).  In addition,
                                            if HostProcess is true then HostNetwork
                                            must also be set to true.
                                          type: boolean
                                        runAsUserName:
                                          description: The UserName in Windows to
                                            run the entrypoint of the container process.
                                            Defaults to the user specified in image
                                            metadata if unspecified. May also be set
                                            in PodSecurityContext. If set in both
                                            SecurityContext and PodSecurityContext,
                                            the value specified in SecurityContext
                                            takes precedence.
                                          type: string
                                      type: object
                                  type: object
                                startupProbe:
                                  description: 'StartupProbe indicates that the Pod
                                    has successfully initialized. If specified, no
                                    other probes are executed until this completes
                                    successfully. If this probe fails, the Pod will
                                    be restarted, just as if the livenessProbe failed.
                                    This can be used to provide different probe parameters
                                    at the beginning of a Pod''s lifecycle, when it
                                    might take a long time to load data or warm a
                                    cache, than during steady-state operation. This
                                    cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                  properties:
                                    exec:
                                      description: Exec specifies the action to take.
                                      properties:
                                        command:
                                          description: Command is the command line
                                            to execute inside the container, the working
                                            directory for the command  is root ('/')
                                            in the container's filesystem. The command
                                            is simply exec'd, it is not run inside
                                            a shell, so traditional shell instructions
                                            ('|', etc) won't work. To use a shell,
                                            you need to explicitly call out to that
                                            shell. Exit status of 0 is treated as
                                            live/healthy and non-zero is unhealthy.
                                          items:
                                            type: string
                                          type: array
                                      type: object
                                    failureThreshold:
                                      description: Minimum consecutive failures for
                                        the probe to be considered failed after having
                                        succeeded. Defaults to 3. Minimum value is
                                        1.
                                      format: int32
                                      type: integer
                                    grpc:
                                      description: GRPC specifies an action involving
                                        a GRPC port.
                                      properties:
                                        port:
                                          description: Port number of the gRPC service.
                                            Number must be in the range 1 to 65535.
                                          format: int32
                                          type: integer
                                        service:
                                          description: "Service is the name of the
                                            service to place in the gRPC HealthCheckRequest
                                            (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).
                                            \n If this is not specified, the default
                                            behavior is defined by gRPC."
                                          type: string
                                      required:
                                      - port
                                      type: object
                                    httpGet:
                                      description: HTTPGet specifies the http request
                                        to perform.
                                      properties:
                                        host:
                                          description: Host name to connect to, defaults
                                            to the pod IP. You probably want to set
                                            "Host" in httpHeaders instead.
                                          type: string
                                        httpHeaders:
                                          description: Custom headers to set in the
                                            request. HTTP allows repeated headers.
                                          items:
                                            description: HTTPHeader describes a custom
                                              header to be used in HTTP probes
                                            properties:
                                              name:
                                                description: The header field name.
                                                  This will be canonicalized upon
                                                  output, so case-variant names will
                                                  be understood as the same header.
                                                type: string
                                              value:
                                                description: The header field value
                                                type: string
                                            required:
                                            - name
                                            - value
                                            type: object
                                          type: array
                                        path:
                                          description: Path to access on the HTTP
                                            server.
                                          type: string
                                        port:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: Name or number of the port
                                            to access on the container. Number must
                                            be in the range 1 to 65535. Name must
                                            be an IANA_SVC_NAME.
                                          x-kubernetes-int-or-string: true
                                        scheme:
                                          description: Scheme to use for connecting
                                            to the host. Defaults to HTTP.
                                          type: string
                                      required:
                                      - port
                                      type: object
                                    initialDelaySeconds:
                                      description: 'Number of seconds after the container
                                        has started before liveness probes are initiated.
                                        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                      format: int32
                                      type: integer
                                    periodSeconds:
                                      description: How often (in seconds) to perform
                                        the probe. Default to 10 seconds. Minimum
                                        value is 1.
                                      format: int32
                                      type: integer
                                    successThreshold:
                                      description: Minimum consecutive successes for
                                        the probe to be considered successful after
                                        having failed. Defaults to 1. Must be 1 for
                                        liveness and startup. Minimum value is 1.
                                      format: int32
                                      type: integer
                                    tcpSocket:
                                      description: TCPSocket specifies an action involving
                                        a TCP port.
                                      properties:
                                        host:
                                          description: 'Optional: Host name to connect
                                            to, defaults to the pod IP.'
                                          type: string
                                        port:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: Number or name of the port
                                            to access on the container. Number must
                                            be in the range 1 to 65535. Name must
                                            be an IANA_SVC_NAME.
                                          x-kubernetes-int-or-string: true
                                      required:
                                      - port
                                      type: object
                                    terminationGracePeriodSeconds:
                                      description: Optional duration in seconds the
                                        pod needs to terminate gracefully upon probe
                                        failure. The grace period is the duration
                                        in seconds after the processes running in
                                        the pod are sent a termination signal and
                                        the time when the processes are forcibly halted
                                        with a kill signal. Set this value longer
                                        than the expected cleanup time for your process.
                                        If this value is nil, the pod's terminationGracePeriodSeconds
                                        will be used. Otherwise, this value overrides
                                        the value provided by the pod spec. Value
                                        must be non-negative integer. The value zero
                                        indicates stop immediately via the kill signal
                                        (no opportunity to shut down). This is a beta
                                        field and requires enabling ProbeTerminationGracePeriod
                                        feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds
                                        is used if unset.
                                      format: int64
                                      type: integer
                                    timeoutSeconds:
                                      description: 'Number of seconds after which
                                        the probe times out. Defaults to 1 second.
                                        Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                      format: int32
                                      type: integer
                                  type: object
                                stdin:
                                  description: Whether this container should allocate
                                    a buffer for stdin in the container runtime. If
                                    this is not set, reads from stdin in the container
                                    will always result in EOF. Default is false.
                                  type: boolean
                                stdinOnce:
                                  description: Whether the container runtime should
                                    close the stdin channel after it has been opened
                                    by a single attach. When stdin is true the stdin
                                    stream will remain open across multiple attach
                                    sessions. If stdinOnce is set to true, stdin is
                                    opened on container start, is empty until the
                                    first client attaches to stdin, and then remains
                                    open and accepts data until the client disconnects,
                                    at which time stdin is closed and remains closed
                                    until the container is restarted. If this flag
                                    is false, a container processes that reads from
                                    stdin will never receive an EOF. Default is false
                                  type: boolean
                                terminationMessagePath:
                                  description: 'Optional: Path at which the file to
                                    which the container''s termination message will
                                    be written is mounted into the container''s filesystem.
                                    Message written is intended to be brief final
                                    status, such as an assertion failure message.
                                    Will be truncated by the node if greater than
                                    4096 bytes. The total message length across all
                                    containers will be limited to 12kb. Defaults to
                                    /dev/termination-log. Cannot be updated.'
                                  type: string
                                terminationMessagePolicy:
                                  description: Indicate how the termination message
                                    should be populated. File will use the contents
                                    of terminationMessagePath to populate the container
                                    status message on both success and failure. FallbackToLogsOnError
                                    will use the last chunk of container log output
                                    if the termination message file is empty and the
                                    container exited with an error. The log output
                                    is limited to 2048 bytes or 80 lines, whichever
                                    is smaller. Defaults to File. Cannot be updated.
                                  type: string
                                tty:
                                  description: Whether this container should allocate
                                    a TTY for itself, also requires 'stdin' to be
                                    true. Default is false.
                                  type: boolean
                                volumeDevices:
                                  description: volumeDevices is the list of block
                                    devices to be used by the container.
                                  items:
                                    description: volumeDevice describes a mapping
                                      of a raw block device within a container.
                                    properties:
                                      devicePath:
                                        description: devicePath is the path inside
                                          of the container that the device will be
                                          mapped to.
                                        type: string
                                      name:
                                        description: name must match the name of a
                                          persistentVolumeClaim in the pod
                                        type: string
                                    required:
                                    - devicePath
                                    - name
                                    type: object
                                  type: array
                                volumeMounts:
                                  description: Pod volumes to mount into the container's
                                    filesystem. Cannot be updated.
                                  items:
                                    description: VolumeMount describes a mounting
                                      of a Volume within a container.
                                    properties:
                                      mountPath:
                                        description: Path within the container at
                                          which the volume should be mounted.  Must
                                          not contain ':'.
                                        type: string
                                      mountPropagation:
                                        description: mountPropagation determines how
                                          mounts are propagated from the host to container
                                          and the other way around. When not set,
                                          MountPropagationNone is used. This field
                                          is beta in 1.10.
                                        type: string
                                      name:
                                        description: This must match the Name of a
                                          Volume.
                                        type: string
                                      readOnly:
                                        description: Mounted read-only if true, read-write
                                          otherwise (false or unspecified). Defaults
                                          to false.
                                        type: boolean
                                      subPath:
                                        description: Path within the volume from which
                                          the container's volume should be mounted.
                                          Defaults to "" (volume's root).
                                        type: string
                                      subPathExpr:
                                        description: Expanded path within the volume
                                          from which the container's volume should
                                          be mounted. Behaves similarly to SubPath
                                          but environment variable references $(VAR_NAME)
                                          are expanded using the container's environment.
                                          Defaults to "" (volume's root). SubPathExpr
                                          and SubPath are mutually exclusive.
                                        type: string
                                    required:
                                    - mountPath
                                    - name
                                    type: object
                                  type: array
                                workingDir:
                                  description: Container's working directory. If not
                                    specified, the container runtime's default will
                                    be used, which might be configured in the container
                                    image. Cannot be updated.
                                  type: string
                              required:
                              - name
                              type: object
                            type: array
                          dnsConfig:
                            description: Specifies the DNS parameters of a pod. Parameters
                              specified here will be merged to the generated DNS configuration
                              based on DNSPolicy.
                            properties:
                              nameservers:
                                description: A list of DNS name server IP addresses.
                                  This will be appended to the base nameservers generated
                                  from DNSPolicy. Duplicated nameservers will be removed.
                                items:
                                  type: string
                                type: array
                              options:
                                description: A list of DNS resolver options. This
                                  will be merged with the base options generated from
                                  DNSPolicy. Duplicated entries will be removed. Resolution
                                  options given in Options will override those that
                                  appear in the base DNSPolicy.
                                items:
                                  description: PodDNSConfigOption defines DNS resolver
                                    options of a pod.
                                  properties:
                                    name:
                                      description: Required.
                                      type: string
                                    value:
                                      type: string
                                  type: object
                                type: array
                              searches:
                                description: A list of DNS search domains for host-name
                                  lookup. This will be appended to the base search
                                  paths generated from DNSPolicy. Duplicated search
                                  paths will be removed.
                                items:
                                  type: string
                                type: array
                            type: object
                          dnsPolicy:
                            description: Set DNS policy for the pod. Defaults to "ClusterFirst".
                              Valid values are 'ClusterFirstWithHostNet', 'ClusterFirst',
                              'Default' or 'None'. DNS parameters given in DNSConfig
                              will be merged with the policy selected with DNSPolicy.
                              To have DNS options set along with hostNetwork, you
                              have to specify DNS policy explicitly to 'ClusterFirstWithHostNet'.
                            type: string
                          enableServiceLinks:
                            description: 'EnableServiceLinks indicates whether information
                              about services should be injected into pod''s environment
                              variables, matching the syntax of Docker links. Optional:
                              Defaults to true.'
                            type: boolean
                          ephemeralContainers:
                            description: List of ephemeral containers run in this
                              pod. Ephemeral containers may be run in an existing
                              pod to perform user-initiated actions such as debugging.
                              This list cannot be specified when creating a pod, and
                              it cannot be modified by updating the pod spec. In order
                              to add an ephemeral container to an existing pod, use
                              the pod's ephemeralcontainers subresource.
                            items:
                              description: "An EphemeralContainer is a temporary container
                                that you may add to an existing Pod for user-initiated
                                activities such as debugging. Ephemeral containers
                                have no resource or scheduling guarantees, and they
                                will not be restarted when they exit or when a Pod
                                is removed or restarted. The kubelet may evict a Pod
                                if an ephemeral container causes the Pod to exceed
                                its resource allocation. \n To add an ephemeral container,
                                use the ephemeralcontainers subresource of an existing
                                Pod. Ephemeral containers may not be removed or restarted."
                              properties:
                                args:
                                  description: 'Arguments to the entrypoint. The image''s
                                    CMD is used if this is not provided. Variable
                                    references $(VAR_NAME) are expanded using the
                                    container''s environment. If a variable cannot
                                    be resolved, the reference in the input string
                                    will be unchanged. Double $$ are reduced to a
                                    single $, which allows for escaping the $(VAR_NAME)
                                    syntax: i.e. "$$(VAR_NAME)" will produce the string
                                    literal "$(VAR_NAME)". Escaped references will
                                    never be expanded, regardless of whether the variable
                                    exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                                  items:
                                    type: string
                                  type: array
                                command:
                                  description: 'Entrypoint array. Not executed within
                                    a shell. The image''s ENTRYPOINT is used if this
                                    is not provided. Variable references $(VAR_NAME)
                                    are expanded using the container''s environment.
                                    If a variable cannot be resolved, the reference
                                    in the input string will be unchanged. Double
                                    $$ are reduced to a single $, which allows for
                                    escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)"
                                    will produce the string literal "$(VAR_NAME)".
                                    Escaped references will never be expanded, regardless
                                    of whether the variable exists or not. Cannot
                                    be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                                  items:
                                    type: string
                                  type: array
                                env:
                                  description: List of environment variables to set
                                    in the container. Cannot be updated.
                                  items:
                                    description: EnvVar represents an environment
                                      variable present in a Container.
                                    properties:
                                      name:
                                        description: Name of the environment variable.
                                          Must be a C_IDENTIFIER.
                                        type: string
                                      value:
                                        description: 'Variable references $(VAR_NAME)
                                          are expanded using the previously defined
                                          environment variables in the container and
                                          any service environment variables. If a
                                          variable cannot be resolved, the reference
                                          in the input string will be unchanged. Double
                                          $$ are reduced to a single $, which allows
                                          for escaping the $(VAR_NAME) syntax: i.e.
                                          "$$(VAR_NAME)" will produce the string literal
                                          "$(VAR_NAME)". Escaped references will never
                                          be expanded, regardless of whether the variable
                                          exists or not. Defaults to "".'
                                        type: string
                                      valueFrom:
                                        description: Source for the environment variable's
                                          value. Cannot be used if value is not empty.
                                        properties:
                                          configMapKeyRef:
                                            description: Selects a key of a ConfigMap.
                                            properties:
                                              key:
                                                description: The key to select.
                                                type: string
                                              name:
                                                description: 'Name of the referent.
                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                  TODO: Add other useful fields. apiVersion,
                                                  kind, uid?'
                                                type: string
                                              optional:
                                                description: Specify whether the ConfigMap
                                                  or its key must be defined
                                                type: boolean
                                            required:
                                            - key
                                            type: object
                                            x-kubernetes-map-type: atomic
                                          fieldRef:
                                            description: 'Selects a field of the pod:
                                              supports metadata.name, metadata.namespace,
                                              `metadata.labels[''<KEY>'']`, `metadata.annotations[''<KEY>'']`,
                                              spec.nodeName, spec.serviceAccountName,
                                              status.hostIP, status.podIP, status.podIPs.'
                                            properties:
                                              apiVersion:
                                                description: Version of the schema
                                                  the FieldPath is written in terms
                                                  of, defaults to "v1".
                                                type: string
                                              fieldPath:
                                                description: Path of the field to
                                                  select in the specified API version.
                                                type: string
                                            required:
                                            - fieldPath
                                            type: object
                                            x-kubernetes-map-type: atomic
                                          resourceFieldRef:
                                            description: 'Selects a resource of the
                                              container: only resources limits and
                                              requests (limits.cpu, limits.memory,
                                              limits.ephemeral-storage, requests.cpu,
                                              requests.memory and requests.ephemeral-storage)
                                              are currently supported.'
                                            properties:
                                              containerName:
                                                description: 'Container name: required
                                                  for volumes, optional for env vars'
                                                type: string
                                              divisor:
                                                anyOf:
                                                - type: integer
                                                - type: string
                                                description: Specifies the output
                                                  format of the exposed resources,
                                                  defaults to "1"
                                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                x-kubernetes-int-or-string: true
                                              resource:
                                                description: 'Required: resource to
                                                  select'
                                                type: string
                                            required:
                                            - resource
                                            type: object
                                            x-kubernetes-map-type: atomic
                                          secretKeyRef:
                                            description: Selects a key of a secret
                                              in the pod's namespace
                                            properties:
                                              key:
                                                description: The key of the secret
                                                  to select from.  Must be a valid
                                                  secret key.
                                                type: string
                                              name:
                                                description: 'Name of the referent.
                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                  TODO: Add other useful fields. apiVersion,
                                                  kind, uid?'
                                                type: string
                                              optional:
                                                description: Specify whether the Secret
                                                  or its key must be defined
                                                type: boolean
                                            required:
                                            - key
                                            type: object
                                            x-kubernetes-map-type: atomic
                                        type: object
                                    required:
                                    - name
                                    type: object
                                  type: array
                                envFrom:
                                  description: List of sources to populate environment
                                    variables in the container. The keys defined within
                                    a source must be a C_IDENTIFIER. All invalid keys
                                    will be reported as an event when the container
                                    is starting. When a key exists in multiple sources,
                                    the value associated with the last source will
                                    take precedence. Values defined by an Env with
                                    a duplicate key will take precedence. Cannot be
                                    updated.
                                  items:
                                    description: EnvFromSource represents the source
                                      of a set of ConfigMaps
                                    properties:
                                      configMapRef:
                                        description: The ConfigMap to select from
                                        properties:
                                          name:
                                            description: 'Name of the referent. More
                                              info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                              TODO: Add other useful fields. apiVersion,
                                              kind, uid?'
                                            type: string
                                          optional:
                                            description: Specify whether the ConfigMap
                                              must be defined
                                            type: boolean
                                        type: object
                                        x-kubernetes-map-type: atomic
                                      prefix:
                                        description: An optional identifier to prepend
                                          to each key in the ConfigMap. Must be a
                                          C_IDENTIFIER.
                                        type: string
                                      secretRef:
                                        description: The Secret to select from
                                        properties:
                                          name:
                                            description: 'Name of the referent. More
                                              info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                              TODO: Add other useful fields. apiVersion,
                                              kind, uid?'
                                            type: string
                                          optional:
                                            description: Specify whether the Secret
                                              must be defined
                                            type: boolean
                                        type: object
                                        x-kubernetes-map-type: atomic
                                    type: object
                                  type: array
                                image:
                                  description: 'Container image name. More info: https://kubernetes.io/docs/concepts/containers/images'
                                  type: string
                                imagePullPolicy:
                                  description: 'Image pull policy. One of Always,
                                    Never, IfNotPresent. Defaults to Always if :latest
                                    tag is specified, or IfNotPresent otherwise. Cannot
                                    be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images'
                                  type: string
                                lifecycle:
                                  description: Lifecycle is not allowed for ephemeral
                                    containers.
                                  properties:
                                    postStart:
                                      description: 'PostStart is called immediately
                                        after a container is created. If the handler
                                        fails, the container is terminated and restarted
                                        according to its restart policy. Other management
                                        of the container blocks until the hook completes.
                                        More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'
                                      properties:
                                        exec:
                                          description: Exec specifies the action to
                                            take.
                                          properties:
                                            command:
                                              description: Command is the command
                                                line to execute inside the container,
                                                the working directory for the command  is
                                                root ('/') in the container's filesystem.
                                                The command is simply exec'd, it is
                                                not run inside a shell, so traditional
                                                shell instructions ('|', etc) won't
                                                work. To use a shell, you need to
                                                explicitly call out to that shell.
                                                Exit status of 0 is treated as live/healthy
                                                and non-zero is unhealthy.
                                              items:
                                                type: string
                                              type: array
                                          type: object
                                        httpGet:
                                          description: HTTPGet specifies the http
                                            request to perform.
                                          properties:
                                            host:
                                              description: Host name to connect to,
                                                defaults to the pod IP. You probably
                                                want to set "Host" in httpHeaders
                                                instead.
                                              type: string
                                            httpHeaders:
                                              description: Custom headers to set in
                                                the request. HTTP allows repeated
                                                headers.
                                              items:
                                                description: HTTPHeader describes
                                                  a custom header to be used in HTTP
                                                  probes
                                                properties:
                                                  name:
                                                    description: The header field
                                                      name. This will be canonicalized
                                                      upon output, so case-variant
                                                      names will be understood as
                                                      the same header.
                                                    type: string
                                                  value:
                                                    description: The header field
                                                      value
                                                    type: string
                                                required:
                                                - name
                                                - value
                                                type: object
                                              type: array
                                            path:
                                              description: Path to access on the HTTP
                                                server.
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: Name or number of the port
                                                to access on the container. Number
                                                must be in the range 1 to 65535. Name
                                                must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                            scheme:
                                              description: Scheme to use for connecting
                                                to the host. Defaults to HTTP.
                                              type: string
                                          required:
                                          - port
                                          type: object
                                        tcpSocket:
                                          description: Deprecated. TCPSocket is NOT
                                            supported as a LifecycleHandler and kept
                                            for the backward compatibility. There
                                            are no validation of this field and lifecycle
                                            hooks will fail in runtime when tcp handler
                                            is specified.
                                          properties:
                                            host:
                                              description: 'Optional: Host name to
                                                connect to, defaults to the pod IP.'
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: Number or name of the port
                                                to access on the container. Number
                                                must be in the range 1 to 65535. Name
                                                must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                          required:
                                          - port
                                          type: object
                                      type: object
                                    preStop:
                                      description: 'PreStop is called immediately
                                        before a container is terminated due to an
                                        API request or management event such as liveness/startup
                                        probe failure, preemption, resource contention,
                                        etc. The handler is not called if the container
                                        crashes or exits. The Pod''s termination grace
                                        period countdown begins before the PreStop
                                        hook is executed. Regardless of the outcome
                                        of the handler, the container will eventually
                                        terminate within the Pod''s termination grace
                                        period (unless delayed by finalizers). Other
                                        management of the container blocks until the
                                        hook completes or until the termination grace
                                        period is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'
                                      properties:
                                        exec:
                                          description: Exec specifies the action to
                                            take.
                                          properties:
                                            command:
                                              description: Command is the command
                                                line to execute inside the container,
                                                the working directory for the command  is
                                                root ('/') in the container's filesystem.
                                                The command is simply exec'd, it is
                                                not run inside a shell, so traditional
                                                shell instructions ('|', etc) won't
                                                work. To use a shell, you need to
                                                explicitly call out to that shell.
                                                Exit status of 0 is treated as live/healthy
                                                and non-zero is unhealthy.
                                              items:
                                                type: string
                                              type: array
                                          type: object
                                        httpGet:
                                          description: HTTPGet specifies the http
                                            request to perform.
                                          properties:
                                            host:
                                              description: Host name to connect to,
                                                defaults to the pod IP. You probably
                                                want to set "Host" in httpHeaders
                                                instead.
                                              type: string
                                            httpHeaders:
                                              description: Custom headers to set in
                                                the request. HTTP allows repeated
                                                headers.
                                              items:
                                                description: HTTPHeader describes
                                                  a custom header to be used in HTTP
                                                  probes
                                                properties:
                                                  name:
                                                    description: The header field
                                                      name. This will be canonicalized
                                                      upon output, so case-variant
                                                      names will be understood as
                                                      the same header.
                                                    type: string
                                                  value:
                                                    description: The header field
                                                      value
                                                    type: string
                                                required:
                                                - name
                                                - value
                                                type: object
                                              type: array
                                            path:
                                              description: Path to access on the HTTP
                                                server.
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: Name or number of the port
                                                to access on the container. Number
                                                must be in the range 1 to 65535. Name
                                                must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                            scheme:
                                              description: Scheme to use for connecting
                                                to the host. Defaults to HTTP.
                                              type: string
                                          required:
                                          - port
                                          type: object
                                        tcpSocket:
                                          description: Deprecated. TCPSocket is NOT
                                            supported as a LifecycleHandler and kept
                                            for the backward compatibility. There
                                            are no validation of this field and lifecycle
                                            hooks will fail in runtime when tcp handler
                                            is specified.
                                          properties:
                                            host:
                                              description: 'Optional: Host name to
                                                connect to, defaults to the pod IP.'
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: Number or name of the port
                                                to access on the container. Number
                                                must be in the range 1 to 65535. Name
                                                must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                          required:
                                          - port
                                          type: object
                                      type: object
                                  type: object
                                livenessProbe:
                                  description: Probes are not allowed for ephemeral
                                    containers.
                                  properties:
                                    exec:
                                      description: Exec specifies the action to take.
                                      properties:
                                        command:
                                          description: Command is the command line
                                            to execute inside the container, the working
                                            directory for the command  is root ('/')
                                            in the container's filesystem. The command
                                            is simply exec'd, it is not run inside
                                            a shell, so traditional shell instructions
                                            ('|', etc) won't work. To use a shell,
                                            you need to explicitly call out to that
                                            shell. Exit status of 0 is treated as
                                            live/healthy and non-zero is unhealthy.
                                          items:
                                            type: string
                                          type: array
                                      type: object
                                    failureThreshold:
                                      description: Minimum consecutive failures for
                                        the probe to be considered failed after having
                                        succeeded. Defaults to 3. Minimum value is
                                        1.
                                      format: int32
                                      type: integer
                                    grpc:
                                      description: GRPC specifies an action involving
                                        a GRPC port.
                                      properties:
                                        port:
                                          description: Port number of the gRPC service.
                                            Number must be in the range 1 to 65535.
                                          format: int32
                                          type: integer
                                        service:
                                          description: "Service is the name of the
                                            service to place in the gRPC HealthCheckRequest
                                            (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).
                                            \n If this is not specified, the default
                                            behavior is defined by gRPC."
                                          type: string
                                      required:
                                      - port
                                      type: object
                                    httpGet:
                                      description: HTTPGet specifies the http request
                                        to perform.
                                      properties:
                                        host:
                                          description: Host name to connect to, defaults
                                            to the pod IP. You probably want to set
                                            "Host" in httpHeaders instead.
                                          type: string
                                        httpHeaders:
                                          description: Custom headers to set in the
                                            request. HTTP allows repeated headers.
                                          items:
                                            description: HTTPHeader describes a custom
                                              header to be used in HTTP probes
                                            properties:
                                              name:
                                                description: The header field name.
                                                  This will be canonicalized upon
                                                  output, so case-variant names will
                                                  be understood as the same header.
                                                type: string
                                              value:
                                                description: The header field value
                                                type: string
                                            required:
                                            - name
                                            - value
                                            type: object
                                          type: array
                                        path:
                                          description: Path to access on the HTTP
                                            server.
                                          type: string
                                        port:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: Name or number of the port
                                            to access on the container. Number must
                                            be in the range 1 to 65535. Name must
                                            be an IANA_SVC_NAME.
                                          x-kubernetes-int-or-string: true
                                        scheme:
                                          description: Scheme to use for connecting
                                            to the host. Defaults to HTTP.
                                          type: string
                                      required:
                                      - port
                                      type: object
                                    initialDelaySeconds:
                                      description: 'Number of seconds after the container
                                        has started before liveness probes are initiated.
                                        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                      format: int32
                                      type: integer
                                    periodSeconds:
                                      description: How often (in seconds) to perform
                                        the probe. Default to 10 seconds. Minimum
                                        value is 1.
                                      format: int32
                                      type: integer
                                    successThreshold:
                                      description: Minimum consecutive successes for
                                        the probe to be considered successful after
                                        having failed. Defaults to 1. Must be 1 for
                                        liveness and startup. Minimum value is 1.
                                      format: int32
                                      type: integer
                                    tcpSocket:
                                      description: TCPSocket specifies an action involving
                                        a TCP port.
                                      properties:
                                        host:
                                          description: 'Optional: Host name to connect
                                            to, defaults to the pod IP.'
                                          type: string
                                        port:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: Number or name of the port
                                            to access on the container. Number must
                                            be in the range 1 to 65535. Name must
                                            be an IANA_SVC_NAME.
                                          x-kubernetes-int-or-string: true
                                      required:
                                      - port
                                      type: object
                                    terminationGracePeriodSeconds:
                                      description: Optional duration in seconds the
                                        pod needs to terminate gracefully upon probe
                                        failure. The grace period is the duration
                                        in seconds after the processes running in
                                        the pod are sent a termination signal and
                                        the time when the processes are forcibly halted
                                        with a kill signal. Set this value longer
                                        than the expected cleanup time for your process.
                                        If this value is nil, the pod's terminationGracePeriodSeconds
                                        will be used. Otherwise, this value overrides
                                        the value provided by the pod spec. Value
                                        must be non-negative integer. The value zero
                                        indicates stop immediately via the kill signal
                                        (no opportunity to shut down). This is a beta
                                        field and requires enabling ProbeTerminationGracePeriod
                                        feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds
                                        is used if unset.
                                      format: int64
                                      type: integer
                                    timeoutSeconds:
                                      description: 'Number of seconds after which
                                        the probe times out. Defaults to 1 second.
                                        Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                      format: int32
                                      type: integer
                                  type: object
                                name:
                                  description: Name of the ephemeral container specified
                                    as a DNS_LABEL. This name must be unique among
                                    all containers, init containers and ephemeral
                                    containers.
                                  type: string
                                ports:
                                  description: Ports are not allowed for ephemeral
                                    containers.
                                  items:
                                    description: ContainerPort represents a network
                                      port in a single container.
                                    properties:
                                      containerPort:
                                        description: Number of port to expose on the
                                          pod's IP address. This must be a valid port
                                          number, 0 < x < 65536.
                                        format: int32
                                        type: integer
                                      hostIP:
                                        description: What host IP to bind the external
                                          port to.
                                        type: string
                                      hostPort:
                                        description: Number of port to expose on the
                                          host. If specified, this must be a valid
                                          port number, 0 < x < 65536. If HostNetwork
                                          is specified, this must match ContainerPort.
                                          Most containers do not need this.
                                        format: int32
                                        type: integer
                                      name:
                                        description: If specified, this must be an
                                          IANA_SVC_NAME and unique within the pod.
                                          Each named port in a pod must have a unique
                                          name. Name for the port that can be referred
                                          to by services.
                                        type: string
                                      protocol:
                                        default: TCP
                                        description: Protocol for port. Must be UDP,
                                          TCP, or SCTP. Defaults to "TCP".
                                        type: string
                                    required:
                                    - containerPort
                                    - protocol
                                    type: object
                                  type: array
                                  x-kubernetes-list-map-keys:
                                  - containerPort
                                  - protocol
                                  x-kubernetes-list-type: map
                                readinessProbe:
                                  description: Probes are not allowed for ephemeral
                                    containers.
                                  properties:
                                    exec:
                                      description: Exec specifies the action to take.
                                      properties:
                                        command:
                                          description: Command is the command line
                                            to execute inside the container, the working
                                            directory for the command  is root ('/')
                                            in the container's filesystem. The command
                                            is simply exec'd, it is not run inside
                                            a shell, so traditional shell instructions
                                            ('|', etc) won't work. To use a shell,
                                            you need to explicitly call out to that
                                            shell. Exit status of 0 is treated as
                                            live/healthy and non-zero is unhealthy.
                                          items:
                                            type: string
                                          type: array
                                      type: object
                                    failureThreshold:
                                      description: Minimum consecutive failures for
                                        the probe to be considered failed after having
                                        succeeded. Defaults to 3. Minimum value is
                                        1.
                                      format: int32
                                      type: integer
                                    grpc:
                                      description: GRPC specifies an action involving
                                        a GRPC port.
                                      properties:
                                        port:
                                          description: Port number of the gRPC service.
                                            Number must be in the range 1 to 65535.
                                          format: int32
                                          type: integer
                                        service:
                                          description: "Service is the name of the
                                            service to place in the gRPC HealthCheckRequest
                                            (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).
                                            \n If this is not specified, the default
                                            behavior is defined by gRPC."
                                          type: string
                                      required:
                                      - port
                                      type: object
                                    httpGet:
                                      description: HTTPGet specifies the http request
                                        to perform.
                                      properties:
                                        host:
                                          description: Host name to connect to, defaults
                                            to the pod IP. You probably want to set
                                            "Host" in httpHeaders instead.
                                          type: string
                                        httpHeaders:
                                          description: Custom headers to set in the
                                            request. HTTP allows repeated headers.
                                          items:
                                            description: HTTPHeader describes a custom
                                              header to be used in HTTP probes
                                            properties:
                                              name:
                                                description: The header field name.
                                                  This will be canonicalized upon
                                                  output, so case-variant names will
                                                  be understood as the same header.
                                                type: string
                                              value:
                                                description: The header field value
                                                type: string
                                            required:
                                            - name
                                            - value
                                            type: object
                                          type: array
                                        path:
                                          description: Path to access on the HTTP
                                            server.
                                          type: string
                                        port:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: Name or number of the port
                                            to access on the container. Number must
                                            be in the range 1 to 65535. Name must
                                            be an IANA_SVC_NAME.
                                          x-kubernetes-int-or-string: true
                                        scheme:
                                          description: Scheme to use for connecting
                                            to the host. Defaults to HTTP.
                                          type: string
                                      required:
                                      - port
                                      type: object
                                    initialDelaySeconds:
                                      description: 'Number of seconds after the container
                                        has started before liveness probes are initiated.
                                        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                      format: int32
                                      type: integer
                                    periodSeconds:
                                      description: How often (in seconds) to perform
                                        the probe. Default to 10 seconds. Minimum
                                        value is 1.
                                      format: int32
                                      type: integer
                                    successThreshold:
                                      description: Minimum consecutive successes for
                                        the probe to be considered successful after
                                        having failed. Defaults to 1. Must be 1 for
                                        liveness and startup. Minimum value is 1.
                                      format: int32
                                      type: integer
                                    tcpSocket:
                                      description: TCPSocket specifies an action involving
                                        a TCP port.
                                      properties:
                                        host:
                                          description: 'Optional: Host name to connect
                                            to, defaults to the pod IP.'
                                          type: string
                                        port:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: Number or name of the port
                                            to access on the container. Number must
                                            be in the range 1 to 65535. Name must
                                            be an IANA_SVC_NAME.
                                          x-kubernetes-int-or-string: true
                                      required:
                                      - port
                                      type: object
                                    terminationGracePeriodSeconds:
                                      description: Optional duration in seconds the
                                        pod needs to terminate gracefully upon probe
                                        failure. The grace period is the duration
                                        in seconds after the processes running in
                                        the pod are sent a termination signal and
                                        the time when the processes are forcibly halted
                                        with a kill signal. Set this value longer
                                        than the expected cleanup time for your process.
                                        If this value is nil, the pod's terminationGracePeriodSeconds
                                        will be used. Otherwise, this value overrides
                                        the value provided by the pod spec. Value
                                        must be non-negative integer. The value zero
                                        indicates stop immediately via the kill signal
                                        (no opportunity to shut down). This is a beta
                                        field and requires enabling ProbeTerminationGracePeriod
                                        feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds
                                        is used if unset.
                                      format: int64
                                      type: integer
                                    timeoutSeconds:
                                      description: 'Number of seconds after which
                                        the probe times out. Defaults to 1 second.
                                        Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                      format: int32
                                      type: integer
                                  type: object
                                resizePolicy:
                                  description: Resources resize policy for the container.
                                  items:
                                    description: ContainerResizePolicy represents
                                      resource resize policy for the container.
                                    properties:
                                      resourceName:
                                        description: 'Name of the resource to which
                                          this resource resize policy applies. Supported
                                          values: cpu, memory.'
                                        type: string
                                      restartPolicy:
                                        description: Restart policy to apply when
                                          specified resource is resized. If not specified,
                                          it defaults to NotRequired.
                                        type: string
                                    required:
                                    - resourceName
                                    - restartPolicy
                                    type: object
                                  type: array
                                  x-kubernetes-list-type: atomic
                                resources:
                                  description: Resources are not allowed for ephemeral
                                    containers. Ephemeral containers use spare resources
                                    already allocated to the pod.
                                  properties:
                                    claims:
                                      description: "Claims lists the names of resources,
                                        defined in spec.resourceClaims, that are used
                                        by this container. \n This is an alpha field
                                        and requires enabling the DynamicResourceAllocation
                                        feature gate. \n This field is immutable.
                                        It can only be set for containers."
                                      items:
                                        description: ResourceClaim references one
                                          entry in PodSpec.ResourceClaims.
                                        properties:
                                          name:
                                            description: Name must match the name
                                              of one entry in pod.spec.resourceClaims
                                              of the Pod where this field is used.
                                              It makes that resource available inside
                                              a container.
                                            type: string
                                        required:
                                        - name
                                        type: object
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - name
                                      x-kubernetes-list-type: map
                                    limits:
                                      additionalProperties:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                      description: 'Limits describes the maximum amount
                                        of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                      type: object
                                    requests:
                                      additionalProperties:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                      description: 'Requests describes the minimum
                                        amount of compute resources required. If Requests
                                        is omitted for a container, it defaults to
                                        Limits if that is explicitly specified, otherwise
                                        to an implementation-defined value. Requests
                                        cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                      type: object
                                  type: object
                                securityContext:
                                  description: 'Optional: SecurityContext defines
                                    the security options the ephemeral container should
                                    be run with. If set, the fields of SecurityContext
                                    override the equivalent fields of PodSecurityContext.'
                                  properties:
                                    allowPrivilegeEscalation:
                                      description: 'AllowPrivilegeEscalation controls
                                        whether a process can gain more privileges
                                        than its parent process. This bool directly
                                        controls if the no_new_privs flag will be
                                        set on the container process. AllowPrivilegeEscalation
                                        is true always when the container is: 1) run
                                        as Privileged 2) has CAP_SYS_ADMIN Note that
                                        this field cannot be set when spec.os.name
                                        is windows.'
                                      type: boolean
                                    capabilities:
                                      description: The capabilities to add/drop when
                                        running containers. Defaults to the default
                                        set of capabilities granted by the container
                                        runtime. Note that this field cannot be set
                                        when spec.os.name is windows.
                                      properties:
                                        add:
                                          description: Added capabilities
                                          items:
                                            description: Capability represent POSIX
                                              capabilities type
                                            type: string
                                          type: array
                                        drop:
                                          description: Removed capabilities
                                          items:
                                            description: Capability represent POSIX
                                              capabilities type
                                            type: string
                                          type: array
                                      type: object
                                    privileged:
                                      description: Run container in privileged mode.
                                        Processes in privileged containers are essentially
                                        equivalent to root on the host. Defaults to
                                        false. Note that this field cannot be set
                                        when spec.os.name is windows.
                                      type: boolean
                                    procMount:
                                      description: procMount denotes the type of proc
                                        mount to use for the containers. The default
                                        is DefaultProcMount which uses the container
                                        runtime defaults for readonly paths and masked
                                        paths. This requires the ProcMountType feature
                                        flag to be enabled. Note that this field cannot
                                        be set when spec.os.name is windows.
                                      type: string
                                    readOnlyRootFilesystem:
                                      description: Whether this container has a read-only
                                        root filesystem. Default is false. Note that
                                        this field cannot be set when spec.os.name
                                        is windows.
                                      type: boolean
                                    runAsGroup:
                                      description: The GID to run the entrypoint of
                                        the container process. Uses runtime default
                                        if unset. May also be set in PodSecurityContext.  If
                                        set in both SecurityContext and PodSecurityContext,
                                        the value specified in SecurityContext takes
                                        precedence. Note that this field cannot be
                                        set when spec.os.name is windows.
                                      format: int64
                                      type: integer
                                    runAsNonRoot:
                                      description: Indicates that the container must
                                        run as a non-root user. If true, the Kubelet
                                        will validate the image at runtime to ensure
                                        that it does not run as UID 0 (root) and fail
                                        to start the container if it does. If unset
                                        or false, no such validation will be performed.
                                        May also be set in PodSecurityContext.  If
                                        set in both SecurityContext and PodSecurityContext,
                                        the value specified in SecurityContext takes
                                        precedence.
                                      type: boolean
                                    runAsUser:
                                      description: The UID to run the entrypoint of
                                        the container process. Defaults to user specified
                                        in image metadata if unspecified. May also
                                        be set in PodSecurityContext.  If set in both
                                        SecurityContext and PodSecurityContext, the
                                        value specified in SecurityContext takes precedence.
                                        Note that this field cannot be set when spec.os.name
                                        is windows.
                                      format: int64
                                      type: integer
                                    seLinuxOptions:
                                      description: The SELinux context to be applied
                                        to the container. If unspecified, the container
                                        runtime will allocate a random SELinux context
                                        for each container.  May also be set in PodSecurityContext.  If
                                        set in both SecurityContext and PodSecurityContext,
                                        the value specified in SecurityContext takes
                                        precedence. Note that this field cannot be
                                        set when spec.os.name is windows.
                                      properties:
                                        level:
                                          description: Level is SELinux level label
                                            that applies to the container.
                                          type: string
                                        role:
                                          description: Role is a SELinux role label
                                            that applies to the container.
                                          type: string
                                        type:
                                          description: Type is a SELinux type label
                                            that applies to the container.
                                          type: string
                                        user:
                                          description: User is a SELinux user label
                                            that applies to the container.
                                          type: string
                                      type: object
                                    seccompProfile:
                                      description: The seccomp options to use by this
                                        container. If seccomp options are provided
                                        at both the pod & container level, the container
                                        options override the pod options. Note that
                                        this field cannot be set when spec.os.name
                                        is windows.
                                      properties:
                                        localhostProfile:
                                          description: localhostProfile indicates
                                            a profile defined in a file on the node
                                            should be used. The profile must be preconfigured
                                            on the node to work. Must be a descending
                                            path, relative to the kubelet's configured
                                            seccomp profile location. Must only be
                                            set if type is "Localhost".
                                          type: string
                                        type:
                                          description: "type indicates which kind
                                            of seccomp profile will be applied. Valid
                                            options are: \n Localhost - a profile
                                            defined in a file on the node should be
                                            used. RuntimeDefault - the container runtime
                                            default profile should be used. Unconfined
                                            - no profile should be applied."
                                          type: string
                                      required:
                                      - type
                                      type: object
                                    windowsOptions:
                                      description: The Windows specific settings applied
                                        to all containers. If unspecified, the options
                                        from the PodSecurityContext will be used.
                                        If set in both SecurityContext and PodSecurityContext,
                                        the value specified in SecurityContext takes
                                        precedence. Note that this field cannot be
                                        set when spec.os.name is linux.
                                      properties:
                                        gmsaCredentialSpec:
                                          description: GMSACredentialSpec is where
                                            the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                                            inlines the contents of the GMSA credential
                                            spec named by the GMSACredentialSpecName
                                            field.
                                          type: string
                                        gmsaCredentialSpecName:
                                          description: GMSACredentialSpecName is the
                                            name of the GMSA credential spec to use.
                                          type: string
                                        hostProcess:
                                          description: HostProcess determines if a
                                            container should be run as a 'Host Process'
                                            container. This field is alpha-level and
                                            will only be honored by components that
                                            enable the WindowsHostProcessContainers
                                            feature flag. Setting this field without
                                            the feature flag will result in errors
                                            when validating the Pod. All of a Pod's
                                            containers must have the same effective
                                            HostProcess value (it is not allowed to
                                            have a mix of HostProcess containers and
                                            non-HostProcess containers).  In addition,
                                            if HostProcess is true then HostNetwork
                                            must also be set to true.
                                          type: boolean
                                        runAsUserName:
                                          description: The UserName in Windows to
                                            run the entrypoint of the container process.
                                            Defaults to the user specified in image
                                            metadata if unspecified. May also be set
                                            in PodSecurityContext. If set in both
                                            SecurityContext and PodSecurityContext,
                                            the value specified in SecurityContext
                                            takes precedence.
                                          type: string
                                      type: object
                                  type: object
                                startupProbe:
                                  description: Probes are not allowed for ephemeral
                                    containers.
                                  properties:
                                    exec:
                                      description: Exec specifies the action to take.
                                      properties:
                                        command:
                                          description: Command is the command line
                                            to execute inside the container, the working
                                            directory for the command  is root ('/')
                                            in the container's filesystem. The command
                                            is simply exec'd, it is not run inside
                                            a shell, so traditional shell instructions
                                            ('|', etc) won't work. To use a shell,
                                            you need to explicitly call out to that
                                            shell. Exit status of 0 is treated as
                                            live/healthy and non-zero is unhealthy.
                                          items:
                                            type: string
                                          type: array
                                      type: object
                                    failureThreshold:
                                      description: Minimum consecutive failures for
                                        the probe to be considered failed after having
                                        succeeded. Defaults to 3. Minimum value is
                                        1.
                                      format: int32
                                      type: integer
                                    grpc:
                                      description: GRPC specifies an action involving
                                        a GRPC port.
                                      properties:
                                        port:
                                          description: Port number of the gRPC service.
                                            Number must be in the range 1 to 65535.
                                          format: int32
                                          type: integer
                                        service:
                                          description: "Service is the name of the
                                            service to place in the gRPC HealthCheckRequest
                                            (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).
                                            \n If this is not specified, the default
                                            behavior is defined by gRPC."
                                          type: string
                                      required:
                                      - port
                                      type: object
                                    httpGet:
                                      description: HTTPGet specifies the http request
                                        to perform.
                                      properties:
                                        host:
                                          description: Host name to connect to, defaults
                                            to the pod IP. You probably want to set
                                            "Host" in httpHeaders instead.
                                          type: string
                                        httpHeaders:
                                          description: Custom headers to set in the
                                            request. HTTP allows repeated headers.
                                          items:
                                            description: HTTPHeader describes a custom
                                              header to be used in HTTP probes
                                            properties:
                                              name:
                                                description: The header field name.
                                                  This will be canonicalized upon
                                                  output, so case-variant names will
                                                  be understood as the same header.
                                                type: string
                                              value:
                                                description: The header field value
                                                type: string
                                            required:
                                            - name
                                            - value
                                            type: object
                                          type: array
                                        path:
                                          description: Path to access on the HTTP
                                            server.
                                          type: string
                                        port:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: Name or number of the port
                                            to access on the container. Number must
                                            be in the range 1 to 65535. Name must
                                            be an IANA_SVC_NAME.
                                          x-kubernetes-int-or-string: true
                                        scheme:
                                          description: Scheme to use for connecting
                                            to the host. Defaults to HTTP.
                                          type: string
                                      required:
                                      - port
                                      type: object
                                    initialDelaySeconds:
                                      description: 'Number of seconds after the container
                                        has started before liveness probes are initiated.
                                        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                      format: int32
                                      type: integer
                                    periodSeconds:
                                      description: How often (in seconds) to perform
                                        the probe. Default to 10 seconds. Minimum
                                        value is 1.
                                      format: int32
                                      type: integer
                                    successThreshold:
                                      description: Minimum consecutive successes for
                                        the probe to be considered successful after
                                        having failed. Defaults to 1. Must be 1 for
                                        liveness and startup. Minimum value is 1.
                                      format: int32
                                      type: integer
                                    tcpSocket:
                                      description: TCPSocket specifies an action involving
                                        a TCP port.
                                      properties:
                                        host:
                                          description: 'Optional: Host name to connect
                                            to, defaults to the pod IP.'
                                          type: string
                                        port:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: Number or name of the port
                                            to access on the container. Number must
                                            be in the range 1 to 65535. Name must
                                            be an IANA_SVC_NAME.
                                          x-kubernetes-int-or-string: true
                                      required:
                                      - port
                                      type: object
                                    terminationGracePeriodSeconds:
                                      description: Optional duration in seconds the
                                        pod needs to terminate gracefully upon probe
                                        failure. The grace period is the duration
                                        in seconds after the processes running in
                                        the pod are sent a termination signal and
                                        the time when the processes are forcibly halted
                                        with a kill signal. Set this value longer
                                        than the expected cleanup time for your process.
                                        If this value is nil, the pod's terminationGracePeriodSeconds
                                        will be used. Otherwise, this value overrides
                                        the value provided by the pod spec. Value
                                        must be non-negative integer. The value zero
                                        indicates stop immediately via the kill signal
                                        (no opportunity to shut down). This is a beta
                                        field and requires enabling ProbeTerminationGracePeriod
                                        feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds
                                        is used if unset.
                                      format: int64
                                      type: integer
                                    timeoutSeconds:
                                      description: 'Number of seconds after which
                                        the probe times out. Defaults to 1 second.
                                        Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                      format: int32
                                      type: integer
                                  type: object
                                stdin:
                                  description: Whether this container should allocate
                                    a buffer for stdin in the container runtime. If
                                    this is not set, reads from stdin in the container
                                    will always result in EOF. Default is false.
                                  type: boolean
                                stdinOnce:
                                  description: Whether the container runtime should
                                    close the stdin channel after it has been opened
                                    by a single attach. When stdin is true the stdin
                                    stream will remain open across multiple attach
                                    sessions. If stdinOnce is set to true, stdin is
                                    opened on container start, is empty until the
                                    first client attaches to stdin, and then remains
                                    open and accepts data until the client disconnects,
                                    at which time stdin is closed and remains closed
                                    until the container is restarted. If this flag
                                    is false, a container processes that reads from
                                    stdin will never receive an EOF. Default is false
                                  type: boolean
                                targetContainerName:
                                  description: "If set, the name of the container
                                    from PodSpec that this ephemeral container targets.
                                    The ephemeral container will be run in the namespaces
                                    (IPC, PID, etc) of this container. If not set
                                    then the ephemeral container uses the namespaces
                                    configured in the Pod spec. \n The container runtime
                                    must implement support for this feature. If the
                                    runtime does not support namespace targeting then
                                    the result of setting this field is undefined."
                                  type: string
                                terminationMessagePath:
                                  description: 'Optional: Path at which the file to
                                    which the container''s termination message will
                                    be written is mounted into the container''s filesystem.
                                    Message written is intended to be brief final
                                    status, such as an assertion failure message.
                                    Will be truncated by the node if greater than
                                    4096 bytes. The total message length across all
                                    containers will be limited to 12kb. Defaults to
                                    /dev/termination-log. Cannot be updated.'
                                  type: string
                                terminationMessagePolicy:
                                  description: Indicate how the termination message
                                    should be populated. File will use the contents
                                    of terminationMessagePath to populate the container
                                    status message on both success and failure. FallbackToLogsOnError
                                    will use the last chunk of container log output
                                    if the termination message file is empty and the
                                    container exited with an error. The log output
                                    is limited to 2048 bytes or 80 lines, whichever
                                    is smaller. Defaults to File. Cannot be updated.
                                  type: string
                                tty:
                                  description: Whether this container should allocate
                                    a TTY for itself, also requires 'stdin' to be
                                    true. Default is false.
                                  type: boolean
                                volumeDevices:
                                  description: volumeDevices is the list of block
                                    devices to be used by the container.
                                  items:
                                    description: volumeDevice describes a mapping
                                      of a raw block device within a container.
                                    properties:
                                      devicePath:
                                        description: devicePath is the path inside
                                          of the container that the device will be
                                          mapped to.
                                        type: string
                                      name:
                                        description: name must match the name of a
                                          persistentVolumeClaim in the pod
                                        type: string
                                    required:
                                    - devicePath
                                    - name
                                    type: object
                                  type: array
                                volumeMounts:
                                  description: Pod volumes to mount into the container's
                                    filesystem. Subpath mounts are not allowed for
                                    ephemeral containers. Cannot be updated.
                                  items:
                                    description: VolumeMount describes a mounting
                                      of a Volume within a container.
                                    properties:
                                      mountPath:
                                        description: Path within the container at
                                          which the volume should be mounted.  Must
                                          not contain ':'.
                                        type: string
                                      mountPropagation:
                                        description: mountPropagation determines how
                                          mounts are propagated from the host to container
                                          and the other way around. When not set,
                                          MountPropagationNone is used. This field
                                          is beta in 1.10.
                                        type: string
                                      name:
                                        description: This must match the Name of a
                                          Volume.
                                        type: string
                                      readOnly:
                                        description: Mounted read-only if true, read-write
                                          otherwise (false or unspecified). Defaults
                                          to false.
                                        type: boolean
                                      subPath:
                                        description: Path within the volume from which
                                          the container's volume should be mounted.
                                          Defaults to "" (volume's root).
                                        type: string
                                      subPathExpr:
                                        description: Expanded path within the volume
                                          from which the container's volume should
                                          be mounted. Behaves similarly to SubPath
                                          but environment variable references $(VAR_NAME)
                                          are expanded using the container's environment.
                                          Defaults to "" (volume's root). SubPathExpr
                                          and SubPath are mutually exclusive.
                                        type: string
                                    required:
                                    - mountPath
                                    - name
                                    type: object
                                  type: array
                                workingDir:
                                  description: Container's working directory. If not
                                    specified, the container runtime's default will
                                    be used, which might be configured in the container
                                    image. Cannot be updated.
                                  type: string
                              required:
                              - name
                              type: object
                            type: array
                          hostAliases:
                            description: HostAliases is an optional list of hosts
                              and IPs that will be injected into the pod's hosts file
                              if specified. This is only valid for non-hostNetwork
                              pods.
                            items:
                              description: HostAlias holds the mapping between IP
                                and hostnames that will be injected as an entry in
                                the pod's hosts file.
                              properties:
                                hostnames:
                                  description: Hostnames for the above IP address.
                                  items:
                                    type: string
                                  type: array
                                ip:
                                  description: IP address of the host file entry.
                                  type: string
                              type: object
                            type: array
                          hostIPC:
                            description: 'Use the host''s ipc namespace. Optional:
                              Default to false.'
                            type: boolean
                          hostNetwork:
                            description: Host networking requested for this pod. Use
                              the host's network namespace. If this option is set,
                              the ports that will be used must be specified. Default
                              to false.
                            type: boolean
                          hostPID:
                            description: 'Use the host''s pid namespace. Optional:
                              Default to false.'
                            type: boolean
                          hostUsers:
                            description: 'Use the host''s user namespace. Optional:
                              Default to true. If set to true or not present, the
                              pod will be run in the host user namespace, useful for
                              when the pod needs a feature only available to the host
                              user namespace, such as loading a kernel module with
                              CAP_SYS_MODULE. When set to false, a new userns is created
                              for the pod. Setting false is useful for mitigating
                              container breakout vulnerabilities even allowing users
                              to run their containers as root without actually having
                              root privileges on the host. This field is alpha-level
                              and is only honored by servers that enable the UserNamespacesSupport
                              feature.'
                            type: boolean
                          hostname:
                            description: Specifies the hostname of the Pod If not
                              specified, the pod's hostname will be set to a system-defined
                              value.
                            type: string
                          imagePullSecrets:
                            description: 'ImagePullSecrets is an optional list of
                              references to secrets in the same namespace to use for
                              pulling any of the images used by this PodSpec. If specified,
                              these secrets will be passed to individual puller implementations
                              for them to use. More info: https://kubernetes.io/docs/concepts/containers/images#specifying-imagepullsecrets-on-a-pod'
                            items:
                              description: LocalObjectReference contains enough information
                                to let you locate the referenced object inside the
                                same namespace.
                              properties:
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                              type: object
                              x-kubernetes-map-type: atomic
                            type: array
                          initContainers:
                            description: 'List of initialization containers belonging
                              to the pod. Init containers are executed in order prior
                              to containers being started. If any init container fails,
                              the pod is considered to have failed and is handled
                              according to its restartPolicy. The name for an init
                              container or normal container must be unique among all
                              containers. Init containers may not have Lifecycle actions,
                              Readiness probes, Liveness probes, or Startup probes.
                              The resourceRequirements of an init container are taken
                              into account during scheduling by finding the highest
                              request/limit for each resource type, and then using
                              the max of of that value or the sum of the normal containers.
                              Limits are applied to init containers in a similar fashion.
                              Init containers cannot currently be added or removed.
                              Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/'
                            items:
                              description: A single application container that you
                                want to run within a pod.
                              properties:
                                args:
                                  description: 'Arguments to the entrypoint. The container
                                    image''s CMD is used if this is not provided.
                                    Variable references $(VAR_NAME) are expanded using
                                    the container''s environment. If a variable cannot
                                    be resolved, the reference in the input string
                                    will be unchanged. Double $$ are reduced to a
                                    single $, which allows for escaping the $(VAR_NAME)
                                    syntax: i.e. "$$(VAR_NAME)" will produce the string
                                    literal "$(VAR_NAME)". Escaped references will
                                    never be expanded, regardless of whether the variable
                                    exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                                  items:
                                    type: string
                                  type: array
                                command:
                                  description: 'Entrypoint array. Not executed within
                                    a shell. The container image''s ENTRYPOINT is
                                    used if this is not provided. Variable references
                                    $(VAR_NAME) are expanded using the container''s
                                    environment. If a variable cannot be resolved,
                                    the reference in the input string will be unchanged.
                                    Double $$ are reduced to a single $, which allows
                                    for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)"
                                    will produce the string literal "$(VAR_NAME)".
                                    Escaped references will never be expanded, regardless
                                    of whether the variable exists or not. Cannot
                                    be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                                  items:
                                    type: string
                                  type: array
                                env:
                                  description: List of environment variables to set
                                    in the container. Cannot be updated.
                                  items:
                                    description: EnvVar represents an environment
                                      variable present in a Container.
                                    properties:
                                      name:
                                        description: Name of the environment variable.
                                          Must be a C_IDENTIFIER.
                                        type: string
                                      value:
                                        description: 'Variable references $(VAR_NAME)
                                          are expanded using the previously defined
                                          environment variables in the container and
                                          any service environment variables. If a
                                          variable cannot be resolved, the reference
                                          in the input string will be unchanged. Double
                                          $$ are reduced to a single $, which allows
                                          for escaping the $(VAR_NAME) syntax: i.e.
                                          "$$(VAR_NAME)" will produce the string literal
                                          "$(VAR_NAME)". Escaped references will never
                                          be expanded, regardless of whether the variable
                                          exists or not. Defaults to "".'
                                        type: string
                                      valueFrom:
                                        description: Source for the environment variable's
                                          value. Cannot be used if value is not empty.
                                        properties:
                                          configMapKeyRef:
                                            description: Selects a key of a ConfigMap.
                                            properties:
                                              key:
                                                description: The key to select.
                                                type: string
                                              name:
                                                description: 'Name of the referent.
                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                  TODO: Add other useful fields. apiVersion,
                                                  kind, uid?'
                                                type: string
                                              optional:
                                                description: Specify whether the ConfigMap
                                                  or its key must be defined
                                                type: boolean
                                            required:
                                            - key
                                            type: object
                                            x-kubernetes-map-type: atomic
                                          fieldRef:
                                            description: 'Selects a field of the pod:
                                              supports metadata.name, metadata.namespace,
                                              `metadata.labels[''<KEY>'']`, `metadata.annotations[''<KEY>'']`,
                                              spec.nodeName, spec.serviceAccountName,
                                              status.hostIP, status.podIP, status.podIPs.'
                                            properties:
                                              apiVersion:
                                                description: Version of the schema
                                                  the FieldPath is written in terms
                                                  of, defaults to "v1".
                                                type: string
                                              fieldPath:
                                                description: Path of the field to
                                                  select in the specified API version.
                                                type: string
                                            required:
                                            - fieldPath
                                            type: object
                                            x-kubernetes-map-type: atomic
                                          resourceFieldRef:
                                            description: 'Selects a resource of the
                                              container: only resources limits and
                                              requests (limits.cpu, limits.memory,
                                              limits.ephemeral-storage, requests.cpu,
                                              requests.memory and requests.ephemeral-storage)
                                              are currently supported.'
                                            properties:
                                              containerName:
                                                description: 'Container name: required
                                                  for volumes, optional for env vars'
                                                type: string
                                              divisor:
                                                anyOf:
                                                - type: integer
                                                - type: string
                                                description: Specifies the output
                                                  format of the exposed resources,
                                                  defaults to "1"
                                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                x-kubernetes-int-or-string: true
                                              resource:
                                                description: 'Required: resource to
                                                  select'
                                                type: string
                                            required:
                                            - resource
                                            type: object
                                            x-kubernetes-map-type: atomic
                                          secretKeyRef:
                                            description: Selects a key of a secret
                                              in the pod's namespace
                                            properties:
                                              key:
                                                description: The key of the secret
                                                  to select from.  Must be a valid
                                                  secret key.
                                                type: string
                                              name:
                                                description: 'Name of the referent.
                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                  TODO: Add other useful fields. apiVersion,
                                                  kind, uid?'
                                                type: string
                                              optional:
                                                description: Specify whether the Secret
                                                  or its key must be defined
                                                type: boolean
                                            required:
                                            - key
                                            type: object
                                            x-kubernetes-map-type: atomic
                                        type: object
                                    required:
                                    - name
                                    type: object
                                  type: array
                                envFrom:
                                  description: List of sources to populate environment
                                    variables in the container. The keys defined within
                                    a source must be a C_IDENTIFIER. All invalid keys
                                    will be reported as an event when the container
                                    is starting. When a key exists in multiple sources,
                                    the value associated with the last source will
                                    take precedence. Values defined by an Env with
                                    a duplicate key will take precedence. Cannot be
                                    updated.
                                  items:
                                    description: EnvFromSource represents the source
                                      of a set of ConfigMaps
                                    properties:
                                      configMapRef:
                                        description: The ConfigMap to select from
                                        properties:
                                          name:
                                            description: 'Name of the referent. More
                                              info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                              TODO: Add other useful fields. apiVersion,
                                              kind, uid?'
                                            type: string
                                          optional:
                                            description: Specify whether the ConfigMap
                                              must be defined
                                            type: boolean
                                        type: object
                                        x-kubernetes-map-type: atomic
                                      prefix:
                                        description: An optional identifier to prepend
                                          to each key in the ConfigMap. Must be a
                                          C_IDENTIFIER.
                                        type: string
                                      secretRef:
                                        description: The Secret to select from
                                        properties:
                                          name:
                                            description: 'Name of the referent. More
                                              info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                              TODO: Add other useful fields. apiVersion,
                                              kind, uid?'
                                            type: string
                                          optional:
                                            description: Specify whether the Secret
                                              must be defined
                                            type: boolean
                                        type: object
                                        x-kubernetes-map-type: atomic
                                    type: object
                                  type: array
                                image:
                                  description: 'Container image name. More info: https://kubernetes.io/docs/concepts/containers/images
                                    This field is optional to allow higher level config
                                    management to default or override container images
                                    in workload controllers like Deployments and StatefulSets.'
                                  type: string
                                imagePullPolicy:
                                  description: 'Image pull policy. One of Always,
                                    Never, IfNotPresent. Defaults to Always if :latest
                                    tag is specified, or IfNotPresent otherwise. Cannot
                                    be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images'
                                  type: string
                                lifecycle:
                                  description: Actions that the management system
                                    should take in response to container lifecycle
                                    events. Cannot be updated.
                                  properties:
                                    postStart:
                                      description: 'PostStart is called immediately
                                        after a container is created. If the handler
                                        fails, the container is terminated and restarted
                                        according to its restart policy. Other management
                                        of the container blocks until the hook completes.
                                        More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'
                                      properties:
                                        exec:
                                          description: Exec specifies the action to
                                            take.
                                          properties:
                                            command:
                                              description: Command is the command
                                                line to execute inside the container,
                                                the working directory for the command  is
                                                root ('/') in the container's filesystem.
                                                The command is simply exec'd, it is
                                                not run inside a shell, so traditional
                                                shell instructions ('|', etc) won't
                                                work. To use a shell, you need to
                                                explicitly call out to that shell.
                                                Exit status of 0 is treated as live/healthy
                                                and non-zero is unhealthy.
                                              items:
                                                type: string
                                              type: array
                                          type: object
                                        httpGet:
                                          description: HTTPGet specifies the http
                                            request to perform.
                                          properties:
                                            host:
                                              description: Host name to connect to,
                                                defaults to the pod IP. You probably
                                                want to set "Host" in httpHeaders
                                                instead.
                                              type: string
                                            httpHeaders:
                                              description: Custom headers to set in
                                                the request. HTTP allows repeated
                                                headers.
                                              items:
                                                description: HTTPHeader describes
                                                  a custom header to be used in HTTP
                                                  probes
                                                properties:
                                                  name:
                                                    description: The header field
                                                      name. This will be canonicalized
                                                      upon output, so case-variant
                                                      names will be understood as
                                                      the same header.
                                                    type: string
                                                  value:
                                                    description: The header field
                                                      value
                                                    type: string
                                                required:
                                                - name
                                                - value
                                                type: object
                                              type: array
                                            path:
                                              description: Path to access on the HTTP
                                                server.
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: Name or number of the port
                                                to access on the container. Number
                                                must be in the range 1 to 65535. Name
                                                must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                            scheme:
                                              description: Scheme to use for connecting
                                                to the host. Defaults to HTTP.
                                              type: string
                                          required:
                                          - port
                                          type: object
                                        tcpSocket:
                                          description: Deprecated. TCPSocket is NOT
                                            supported as a LifecycleHandler and kept
                                            for the backward compatibility. There
                                            are no validation of this field and lifecycle
                                            hooks will fail in runtime when tcp handler
                                            is specified.
                                          properties:
                                            host:
                                              description: 'Optional: Host name to
                                                connect to, defaults to the pod IP.'
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: Number or name of the port
                                                to access on the container. Number
                                                must be in the range 1 to 65535. Name
                                                must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                          required:
                                          - port
                                          type: object
                                      type: object
                                    preStop:
                                      description: 'PreStop is called immediately
                                        before a container is terminated due to an
                                        API request or management event such as liveness/startup
                                        probe failure, preemption, resource contention,
                                        etc. The handler is not called if the container
                                        crashes or exits. The Pod''s termination grace
                                        period countdown begins before the PreStop
                                        hook is executed. Regardless of the outcome
                                        of the handler, the container will eventually
                                        terminate within the Pod''s termination grace
                                        period (unless delayed by finalizers). Other
                                        management of the container blocks until the
                                        hook completes or until the termination grace
                                        period is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'
                                      properties:
                                        exec:
                                          description: Exec specifies the action to
                                            take.
                                          properties:
                                            command:
                                              description: Command is the command
                                                line to execute inside the container,
                                                the working directory for the command  is
                                                root ('/') in the container's filesystem.
                                                The command is simply exec'd, it is
                                                not run inside a shell, so traditional
                                                shell instructions ('|', etc) won't
                                                work. To use a shell, you need to
                                                explicitly call out to that shell.
                                                Exit status of 0 is treated as live/healthy
                                                and non-zero is unhealthy.
                                              items:
                                                type: string
                                              type: array
                                          type: object
                                        httpGet:
                                          description: HTTPGet specifies the http
                                            request to perform.
                                          properties:
                                            host:
                                              description: Host name to connect to,
                                                defaults to the pod IP. You probably
                                                want to set "Host" in httpHeaders
                                                instead.
                                              type: string
                                            httpHeaders:
                                              description: Custom headers to set in
                                                the request. HTTP allows repeated
                                                headers.
                                              items:
                                                description: HTTPHeader describes
                                                  a custom header to be used in HTTP
                                                  probes
                                                properties:
                                                  name:
                                                    description: The header field
                                                      name. This will be canonicalized
                                                      upon output, so case-variant
                                                      names will be understood as
                                                      the same header.
                                                    type: string
                                                  value:
                                                    description: The header field
                                                      value
                                                    type: string
                                                required:
                                                - name
                                                - value
                                                type: object
                                              type: array
                                            path:
                                              description: Path to access on the HTTP
                                                server.
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: Name or number of the port
                                                to access on the container. Number
                                                must be in the range 1 to 65535. Name
                                                must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                            scheme:
                                              description: Scheme to use for connecting
                                                to the host. Defaults to HTTP.
                                              type: string
                                          required:
                                          - port
                                          type: object
                                        tcpSocket:
                                          description: Deprecated. TCPSocket is NOT
                                            supported as a LifecycleHandler and kept
                                            for the backward compatibility. There
                                            are no validation of this field and lifecycle
                                            hooks will fail in runtime when tcp handler
                                            is specified.
                                          properties:
                                            host:
                                              description: 'Optional: Host name to
                                                connect to, defaults to the pod IP.'
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: Number or name of the port
                                                to access on the container. Number
                                                must be in the range 1 to 65535. Name
                                                must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                          required:
                                          - port
                                          type: object
                                      type: object
                                  type: object
                                livenessProbe:
                                  description: 'Periodic probe of container liveness.
                                    Container will be restarted if the probe fails.
                                    Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                  properties:
                                    exec:
                                      description: Exec specifies the action to take.
                                      properties:
                                        command:
                                          description: Command is the command line
                                            to execute inside the container, the working
                                            directory for the command  is root ('/')
                                            in the container's filesystem. The command
                                            is simply exec'd, it is not run inside
                                            a shell, so traditional shell instructions
                                            ('|', etc) won't work. To use a shell,
                                            you need to explicitly call out to that
                                            shell. Exit status of 0 is treated as
                                            live/healthy and non-zero is unhealthy.
                                          items:
                                            type: string
                                          type: array
                                      type: object
                                    failureThreshold:
                                      description: Minimum consecutive failures for
                                        the probe to be considered failed after having
                                        succeeded. Defaults to 3. Minimum value is
                                        1.
                                      format: int32
                                      type: integer
                                    grpc:
                                      description: GRPC specifies an action involving
                                        a GRPC port.
                                      properties:
                                        port:
                                          description: Port number of the gRPC service.
                                            Number must be in the range 1 to 65535.
                                          format: int32
                                          type: integer
                                        service:
                                          description: "Service is the name of the
                                            service to place in the gRPC HealthCheckRequest
                                            (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).
                                            \n If this is not specified, the default
                                            behavior is defined by gRPC."
                                          type: string
                                      required:
                                      - port
                                      type: object
                                    httpGet:
                                      description: HTTPGet specifies the http request
                                        to perform.
                                      properties:
                                        host:
                                          description: Host name to connect to, defaults
                                            to the pod IP. You probably want to set
                                            "Host" in httpHeaders instead.
                                          type: string
                                        httpHeaders:
                                          description: Custom headers to set in the
                                            request. HTTP allows repeated headers.
                                          items:
                                            description: HTTPHeader describes a custom
                                              header to be used in HTTP probes
                                            properties:
                                              name:
                                                description: The header field name.
                                                  This will be canonicalized upon
                                                  output, so case-variant names will
                                                  be understood as the same header.
                                                type: string
                                              value:
                                                description: The header field value
                                                type: string
                                            required:
                                            - name
                                            - value
                                            type: object
                                          type: array
                                        path:
                                          description: Path to access on the HTTP
                                            server.
                                          type: string
                                        port:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: Name or number of the port
                                            to access on the container. Number must
                                            be in the range 1 to 65535. Name must
                                            be an IANA_SVC_NAME.
                                          x-kubernetes-int-or-string: true
                                        scheme:
                                          description: Scheme to use for connecting
                                            to the host. Defaults to HTTP.
                                          type: string
                                      required:
                                      - port
                                      type: object
                                    initialDelaySeconds:
                                      description: 'Number of seconds after the container
                                        has started before liveness probes are initiated.
                                        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                      format: int32
                                      type: integer
                                    periodSeconds:
                                      description: How often (in seconds) to perform
                                        the probe. Default to 10 seconds. Minimum
                                        value is 1.
                                      format: int32
                                      type: integer
                                    successThreshold:
                                      description: Minimum consecutive successes for
                                        the probe to be considered successful after
                                        having failed. Defaults to 1. Must be 1 for
                                        liveness and startup. Minimum value is 1.
                                      format: int32
                                      type: integer
                                    tcpSocket:
                                      description: TCPSocket specifies an action involving
                                        a TCP port.
                                      properties:
                                        host:
                                          description: 'Optional: Host name to connect
                                            to, defaults to the pod IP.'
                                          type: string
                                        port:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: Number or name of the port
                                            to access on the container. Number must
                                            be in the range 1 to 65535. Name must
                                            be an IANA_SVC_NAME.
                                          x-kubernetes-int-or-string: true
                                      required:
                                      - port
                                      type: object
                                    terminationGracePeriodSeconds:
                                      description: Optional duration in seconds the
                                        pod needs to terminate gracefully upon probe
                                        failure. The grace period is the duration
                                        in seconds after the processes running in
                                        the pod are sent a termination signal and
                                        the time when the processes are forcibly halted
                                        with a kill signal. Set this value longer
                                        than the expected cleanup time for your process.
                                        If this value is nil, the pod's terminationGracePeriodSeconds
                                        will be used. Otherwise, this value overrides
                                        the value provided by the pod spec. Value
                                        must be non-negative integer. The value zero
                                        indicates stop immediately via the kill signal
                                        (no opportunity to shut down). This is a beta
                                        field and requires enabling ProbeTerminationGracePeriod
                                        feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds
                                        is used if unset.
                                      format: int64
                                      type: integer
                                    timeoutSeconds:
                                      description: 'Number of seconds after which
                                        the probe times out. Defaults to 1 second.
                                        Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                      format: int32
                                      type: integer
                                  type: object
                                name:
                                  description: Name of the container specified as
                                    a DNS_LABEL. Each container in a pod must have
                                    a unique name (DNS_LABEL). Cannot be updated.
                                  type: string
                                ports:
                                  description: List of ports to expose from the container.
                                    Not specifying a port here DOES NOT prevent that
                                    port from being exposed. Any port which is listening
                                    on the default "0.0.0.0" address inside a container
                                    will be accessible from the network. Modifying
                                    this array with strategic merge patch may corrupt
                                    the data. For more information See https://github.com/kubernetes/kubernetes/issues/108255.
                                    Cannot be updated.
                                  items:
                                    description: ContainerPort represents a network
                                      port in a single container.
                                    properties:
                                      containerPort:
                                        description: Number of port to expose on the
                                          pod's IP address. This must be a valid port
                                          number, 0 < x < 65536.
                                        format: int32
                                        type: integer
                                      hostIP:
                                        description: What host IP to bind the external
                                          port to.
                                        type: string
                                      hostPort:
                                        description: Number of port to expose on the
                                          host. If specified, this must be a valid
                                          port number, 0 < x < 65536. If HostNetwork
                                          is specified, this must match ContainerPort.
                                          Most containers do not need this.
                                        format: int32
                                        type: integer
                                      name:
                                        description: If specified, this must be an
                                          IANA_SVC_NAME and unique within the pod.
                                          Each named port in a pod must have a unique
                                          name. Name for the port that can be referred
                                          to by services.
                                        type: string
                                      protocol:
                                        default: TCP
                                        description: Protocol for port. Must be UDP,
                                          TCP, or SCTP. Defaults to "TCP".
                                        type: string
                                    required:
                                    - containerPort
                                    - protocol
                                    type: object
                                  type: array
                                  x-kubernetes-list-map-keys:
                                  - containerPort
                                  - protocol
                                  x-kubernetes-list-type: map
                                readinessProbe:
                                  description: 'Periodic probe of container service
                                    readiness. Container will be removed from service
                                    endpoints if the probe fails. Cannot be updated.
                                    More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                  properties:
                                    exec:
                                      description: Exec specifies the action to take.
                                      properties:
                                        command:
                                          description: Command is the command line
                                            to execute inside the container, the working
                                            directory for the command  is root ('/')
                                            in the container's filesystem. The command
                                            is simply exec'd, it is not run inside
                                            a shell, so traditional shell instructions
                                            ('|', etc) won't work. To use a shell,
                                            you need to explicitly call out to that
                                            shell. Exit status of 0 is treated as
                                            live/healthy and non-zero is unhealthy.
                                          items:
                                            type: string
                                          type: array
                                      type: object
                                    failureThreshold:
                                      description: Minimum consecutive failures for
                                        the probe to be considered failed after having
                                        succeeded. Defaults to 3. Minimum value is
                                        1.
                                      format: int32
                                      type: integer
                                    grpc:
                                      description: GRPC specifies an action involving
                                        a GRPC port.
                                      properties:
                                        port:
                                          description: Port number of the gRPC service.
                                            Number must be in the range 1 to 65535.
                                          format: int32
                                          type: integer
                                        service:
                                          description: "Service is the name of the
                                            service to place in the gRPC HealthCheckRequest
                                            (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).
                                            \n If this is not specified, the default
                                            behavior is defined by gRPC."
                                          type: string
                                      required:
                                      - port
                                      type: object
                                    httpGet:
                                      description: HTTPGet specifies the http request
                                        to perform.
                                      properties:
                                        host:
                                          description: Host name to connect to, defaults
                                            to the pod IP. You probably want to set
                                            "Host" in httpHeaders instead.
                                          type: string
                                        httpHeaders:
                                          description: Custom headers to set in the
                                            request. HTTP allows repeated headers.
                                          items:
                                            description: HTTPHeader describes a custom
                                              header to be used in HTTP probes
                                            properties:
                                              name:
                                                description: The header field name.
                                                  This will be canonicalized upon
                                                  output, so case-variant names will
                                                  be understood as the same header.
                                                type: string
                                              value:
                                                description: The header field value
                                                type: string
                                            required:
                                            - name
                                            - value
                                            type: object
                                          type: array
                                        path:
                                          description: Path to access on the HTTP
                                            server.
                                          type: string
                                        port:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: Name or number of the port
                                            to access on the container. Number must
                                            be in the range 1 to 65535. Name must
                                            be an IANA_SVC_NAME.
                                          x-kubernetes-int-or-string: true
                                        scheme:
                                          description: Scheme to use for connecting
                                            to the host. Defaults to HTTP.
                                          type: string
                                      required:
                                      - port
                                      type: object
                                    initialDelaySeconds:
                                      description: 'Number of seconds after the container
                                        has started before liveness probes are initiated.
                                        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                      format: int32
                                      type: integer
                                    periodSeconds:
                                      description: How often (in seconds) to perform
                                        the probe. Default to 10 seconds. Minimum
                                        value is 1.
                                      format: int32
                                      type: integer
                                    successThreshold:
                                      description: Minimum consecutive successes for
                                        the probe to be considered successful after
                                        having failed. Defaults to 1. Must be 1 for
                                        liveness and startup. Minimum value is 1.
                                      format: int32
                                      type: integer
                                    tcpSocket:
                                      description: TCPSocket specifies an action involving
                                        a TCP port.
                                      properties:
                                        host:
                                          description: 'Optional: Host name to connect
                                            to, defaults to the pod IP.'
                                          type: string
                                        port:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: Number or name of the port
                                            to access on the container. Number must
                                            be in the range 1 to 65535. Name must
                                            be an IANA_SVC_NAME.
                                          x-kubernetes-int-or-string: true
                                      required:
                                      - port
                                      type: object
                                    terminationGracePeriodSeconds:
                                      description: Optional duration in seconds the
                                        pod needs to terminate gracefully upon probe
                                        failure. The grace period is the duration
                                        in seconds after the processes running in
                                        the pod are sent a termination signal and
                                        the time when the processes are forcibly halted
                                        with a kill signal. Set this value longer
                                        than the expected cleanup time for your process.
                                        If this value is nil, the pod's terminationGracePeriodSeconds
                                        will be used. Otherwise, this value overrides
                                        the value provided by the pod spec. Value
                                        must be non-negative integer. The value zero
                                        indicates stop immediately via the kill signal
                                        (no opportunity to shut down). This is a beta
                                        field and requires enabling ProbeTerminationGracePeriod
                                        feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds
                                        is used if unset.
                                      format: int64
                                      type: integer
                                    timeoutSeconds:
                                      description: 'Number of seconds after which
                                        the probe times out. Defaults to 1 second.
                                        Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                      format: int32
                                      type: integer
                                  type: object
                                resizePolicy:
                                  description: Resources resize policy for the container.
                                  items:
                                    description: ContainerResizePolicy represents
                                      resource resize policy for the container.
                                    properties:
                                      resourceName:
                                        description: 'Name of the resource to which
                                          this resource resize policy applies. Supported
                                          values: cpu, memory.'
                                        type: string
                                      restartPolicy:
                                        description: Restart policy to apply when
                                          specified resource is resized. If not specified,
                                          it defaults to NotRequired.
                                        type: string
                                    required:
                                    - resourceName
                                    - restartPolicy
                                    type: object
                                  type: array
                                  x-kubernetes-list-type: atomic
                                resources:
                                  description: 'Compute Resources required by this
                                    container. Cannot be updated. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                  properties:
                                    claims:
                                      description: "Claims lists the names of resources,
                                        defined in spec.resourceClaims, that are used
                                        by this container. \n This is an alpha field
                                        and requires enabling the DynamicResourceAllocation
                                        feature gate. \n This field is immutable.
                                        It can only be set for containers."
                                      items:
                                        description: ResourceClaim references one
                                          entry in PodSpec.ResourceClaims.
                                        properties:
                                          name:
                                            description: Name must match the name
                                              of one entry in pod.spec.resourceClaims
                                              of the Pod where this field is used.
                                              It makes that resource available inside
                                              a container.
                                            type: string
                                        required:
                                        - name
                                        type: object
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - name
                                      x-kubernetes-list-type: map
                                    limits:
                                      additionalProperties:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                      description: 'Limits describes the maximum amount
                                        of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                      type: object
                                    requests:
                                      additionalProperties:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                      description: 'Requests describes the minimum
                                        amount of compute resources required. If Requests
                                        is omitted for a container, it defaults to
                                        Limits if that is explicitly specified, otherwise
                                        to an implementation-defined value. Requests
                                        cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                      type: object
                                  type: object
                                securityContext:
                                  description: 'SecurityContext defines the security
                                    options the container should be run with. If set,
                                    the fields of SecurityContext override the equivalent
                                    fields of PodSecurityContext. More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/'
                                  properties:
                                    allowPrivilegeEscalation:
                                      description: 'AllowPrivilegeEscalation controls
                                        whether a process can gain more privileges
                                        than its parent process. This bool directly
                                        controls if the no_new_privs flag will be
                                        set on the container process. AllowPrivilegeEscalation
                                        is true always when the container is: 1) run
                                        as Privileged 2) has CAP_SYS_ADMIN Note that
                                        this field cannot be set when spec.os.name
                                        is windows.'
                                      type: boolean
                                    capabilities:
                                      description: The capabilities to add/drop when
                                        running containers. Defaults to the default
                                        set of capabilities granted by the container
                                        runtime. Note that this field cannot be set
                                        when spec.os.name is windows.
                                      properties:
                                        add:
                                          description: Added capabilities
                                          items:
                                            description: Capability represent POSIX
                                              capabilities type
                                            type: string
                                          type: array
                                        drop:
                                          description: Removed capabilities
                                          items:
                                            description: Capability represent POSIX
                                              capabilities type
                                            type: string
                                          type: array
                                      type: object
                                    privileged:
                                      description: Run container in privileged mode.
                                        Processes in privileged containers are essentially
                                        equivalent to root on the host. Defaults to
                                        false. Note that this field cannot be set
                                        when spec.os.name is windows.
                                      type: boolean
                                    procMount:
                                      description: procMount denotes the type of proc
                                        mount to use for the containers. The default
                                        is DefaultProcMount which uses the container
                                        runtime defaults for readonly paths and masked
                                        paths. This requires the ProcMountType feature
                                        flag to be enabled. Note that this field cannot
                                        be set when spec.os.name is windows.
                                      type: string
                                    readOnlyRootFilesystem:
                                      description: Whether this container has a read-only
                                        root filesystem. Default is false. Note that
                                        this field cannot be set when spec.os.name
                                        is windows.
                                      type: boolean
                                    runAsGroup:
                                      description: The GID to run the entrypoint of
                                        the container process. Uses runtime default
                                        if unset. May also be set in PodSecurityContext.  If
                                        set in both SecurityContext and PodSecurityContext,
                                        the value specified in SecurityContext takes
                                        precedence. Note that this field cannot be
                                        set when spec.os.name is windows.
                                      format: int64
                                      type: integer
                                    runAsNonRoot:
                                      description: Indicates that the container must
                                        run as a non-root user. If true, the Kubelet
                                        will validate the image at runtime to ensure
                                        that it does not run as UID 0 (root) and fail
                                        to start the container if it does. If unset
                                        or false, no such validation will be performed.
                                        May also be set in PodSecurityContext.  If
                                        set in both SecurityContext and PodSecurityContext,
                                        the value specified in SecurityContext takes
                                        precedence.
                                      type: boolean
                                    runAsUser:
                                      description: The UID to run the entrypoint of
                                        the container process. Defaults to user specified
                                        in image metadata if unspecified. May also
                                        be set in PodSecurityContext.  If set in both
                                        SecurityContext and PodSecurityContext, the
                                        value specified in SecurityContext takes precedence.
                                        Note that this field cannot be set when spec.os.name
                                        is windows.
                                      format: int64
                                      type: integer
                                    seLinuxOptions:
                                      description: The SELinux context to be applied
                                        to the container. If unspecified, the container
                                        runtime will allocate a random SELinux context
                                        for each container.  May also be set in PodSecurityContext.  If
                                        set in both SecurityContext and PodSecurityContext,
                                        the value specified in SecurityContext takes
                                        precedence. Note that this field cannot be
                                        set when spec.os.name is windows.
                                      properties:
                                        level:
                                          description: Level is SELinux level label
                                            that applies to the container.
                                          type: string
                                        role:
                                          description: Role is a SELinux role label
                                            that applies to the container.
                                          type: string
                                        type:
                                          description: Type is a SELinux type label
                                            that applies to the container.
                                          type: string
                                        user:
                                          description: User is a SELinux user label
                                            that applies to the container.
                                          type: string
                                      type: object
                                    seccompProfile:
                                      description: The seccomp options to use by this
                                        container. If seccomp options are provided
                                        at both the pod & container level, the container
                                        options override the pod options. Note that
                                        this field cannot be set when spec.os.name
                                        is windows.
                                      properties:
                                        localhostProfile:
                                          description: localhostProfile indicates
                                            a profile defined in a file on the node
                                            should be used. The profile must be preconfigured
                                            on the node to work. Must be a descending
                                            path, relative to the kubelet's configured
                                            seccomp profile location. Must only be
                                            set if type is "Localhost".
                                          type: string
                                        type:
                                          description: "type indicates which kind
                                            of seccomp profile will be applied. Valid
                                            options are: \n Localhost - a profile
                                            defined in a file on the node should be
                                            used. RuntimeDefault - the container runtime
                                            default profile should be used. Unconfined
                                            - no profile should be applied."
                                          type: string
                                      required:
                                      - type
                                      type: object
                                    windowsOptions:
                                      description: The Windows specific settings applied
                                        to all containers. If unspecified, the options
                                        from the PodSecurityContext will be used.
                                        If set in both SecurityContext and PodSecurityContext,
                                        the value specified in SecurityContext takes
                                        precedence. Note that this field cannot be
                                        set when spec.os.name is linux.
                                      properties:
                                        gmsaCredentialSpec:
                                          description: GMSACredentialSpec is where
                                            the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                                            inlines the contents of the GMSA credential
                                            spec named by the GMSACredentialSpecName
                                            field.
                                          type: string
                                        gmsaCredentialSpecName:
                                          description: GMSACredentialSpecName is the
                                            name of the GMSA credential spec to use.
                                          type: string
                                        hostProcess:
                                          description: HostProcess determines if a
                                            container should be run as a 'Host Process'
                                            container. This field is alpha-level and
                                            will only be honored by components that
                                            enable the WindowsHostProcessContainers
                                            feature flag. Setting this field without
                                            the feature flag will result in errors
                                            when validating the Pod. All of a Pod's
                                            containers must have the same effective
                                            HostProcess value (it is not allowed to
                                            have a mix of HostProcess containers and
                                            non-HostProcess containers).  In addition,
                                            if HostProcess is true then HostNetwork
                                            must also be set to true.
                                          type: boolean
                                        runAsUserName:
                                          description: The UserName in Windows to
                                            run the entrypoint of the container process.
                                            Defaults to the user specified in image
                                            metadata if unspecified. May also be set
                                            in PodSecurityContext. If set in both
                                            SecurityContext and PodSecurityContext,
                                            the value specified in SecurityContext
                                            takes precedence.
                                          type: string
                                      type: object
                                  type: object
                                startupProbe:
                                  description: 'StartupProbe indicates that the Pod
                                    has successfully initialized. If specified, no
                                    other probes are executed until this completes
                                    successfully. If this probe fails, the Pod will
                                    be restarted, just as if the livenessProbe failed.
                                    This can be used to provide different probe parameters
                                    at the beginning of a Pod''s lifecycle, when it
                                    might take a long time to load data or warm a
                                    cache, than during steady-state operation. This
                                    cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                  properties:
                                    exec:
                                      description: Exec specifies the action to take.
                                      properties:
                                        command:
                                          description: Command is the command line
                                            to execute inside the container, the working
                                            directory for the command  is root ('/')
                                            in the container's filesystem. The command
                                            is simply exec'd, it is not run inside
                                            a shell, so traditional shell instructions
                                            ('|', etc) won't work. To use a shell,
                                            you need to explicitly call out to that
                                            shell. Exit status of 0 is treated as
                                            live/healthy and non-zero is unhealthy.
                                          items:
                                            type: string
                                          type: array
                                      type: object
                                    failureThreshold:
                                      description: Minimum consecutive failures for
                                        the probe to be considered failed after having
                                        succeeded. Defaults to 3. Minimum value is
                                        1.
                                      format: int32
                                      type: integer
                                    grpc:
                                      description: GRPC specifies an action involving
                                        a GRPC port.
                                      properties:
                                        port:
                                          description: Port number of the gRPC service.
                                            Number must be in the range 1 to 65535.
                                          format: int32
                                          type: integer
                                        service:
                                          description: "Service is the name of the
                                            service to place in the gRPC HealthCheckRequest
                                            (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).
                                            \n If this is not specified, the default
                                            behavior is defined by gRPC."
                                          type: string
                                      required:
                                      - port
                                      type: object
                                    httpGet:
                                      description: HTTPGet specifies the http request
                                        to perform.
                                      properties:
                                        host:
                                          description: Host name to connect to, defaults
                                            to the pod IP. You probably want to set
                                            "Host" in httpHeaders instead.
                                          type: string
                                        httpHeaders:
                                          description: Custom headers to set in the
                                            request. HTTP allows repeated headers.
                                          items:
                                            description: HTTPHeader describes a custom
                                              header to be used in HTTP probes
                                            properties:
                                              name:
                                                description: The header field name.
                                                  This will be canonicalized upon
                                                  output, so case-variant names will
                                                  be understood as the same header.
                                                type: string
                                              value:
                                                description: The header field value
                                                type: string
                                            required:
                                            - name
                                            - value
                                            type: object
                                          type: array
                                        path:
                                          description: Path to access on the HTTP
                                            server.
                                          type: string
                                        port:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: Name or number of the port
                                            to access on the container. Number must
                                            be in the range 1 to 65535. Name must
                                            be an IANA_SVC_NAME.
                                          x-kubernetes-int-or-string: true
                                        scheme:
                                          description: Scheme to use for connecting
                                            to the host. Defaults to HTTP.
                                          type: string
                                      required:
                                      - port
                                      type: object
                                    initialDelaySeconds:
                                      description: 'Number of seconds after the container
                                        has started before liveness probes are initiated.
                                        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                      format: int32
                                      type: integer
                                    periodSeconds:
                                      description: How often (in seconds) to perform
                                        the probe. Default to 10 seconds. Minimum
                                        value is 1.
                                      format: int32
                                      type: integer
                                    successThreshold:
                                      description: Minimum consecutive successes for
                                        the probe to be considered successful after
                                        having failed. Defaults to 1. Must be 1 for
                                        liveness and startup. Minimum value is 1.
                                      format: int32
                                      type: integer
                                    tcpSocket:
                                      description: TCPSocket specifies an action involving
                                        a TCP port.
                                      properties:
                                        host:
                                          description: 'Optional: Host name to connect
                                            to, defaults to the pod IP.'
                                          type: string
                                        port:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: Number or name of the port
                                            to access on the container. Number must
                                            be in the range 1 to 65535. Name must
                                            be an IANA_SVC_NAME.
                                          x-kubernetes-int-or-string: true
                                      required:
                                      - port
                                      type: object
                                    terminationGracePeriodSeconds:
                                      description: Optional duration in seconds the
                                        pod needs to terminate gracefully upon probe
                                        failure. The grace period is the duration
                                        in seconds after the processes running in
                                        the pod are sent a termination signal and
                                        the time when the processes are forcibly halted
                                        with a kill signal. Set this value longer
                                        than the expected cleanup time for your process.
                                        If this value is nil, the pod's terminationGracePeriodSeconds
                                        will be used. Otherwise, this value overrides
                                        the value provided by the pod spec. Value
                                        must be non-negative integer. The value zero
                                        indicates stop immediately via the kill signal
                                        (no opportunity to shut down). This is a beta
                                        field and requires enabling ProbeTerminationGracePeriod
                                        feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds
                                        is used if unset.
                                      format: int64
                                      type: integer
                                    timeoutSeconds:
                                      description: 'Number of seconds after which
                                        the probe times out. Defaults to 1 second.
                                        Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                      format: int32
                                      type: integer
                                  type: object
                                stdin:
                                  description: Whether this container should allocate
                                    a buffer for stdin in the container runtime. If
                                    this is not set, reads from stdin in the container
                                    will always result in EOF. Default is false.
                                  type: boolean
                                stdinOnce:
                                  description: Whether the container runtime should
                                    close the stdin channel after it has been opened
                                    by a single attach. When stdin is true the stdin
                                    stream will remain open across multiple attach
                                    sessions. If stdinOnce is set to true, stdin is
                                    opened on container start, is empty until the
                                    first client attaches to stdin, and then remains
                                    open and accepts data until the client disconnects,
                                    at which time stdin is closed and remains closed
                                    until the container is restarted. If this flag
                                    is false, a container processes that reads from
                                    stdin will never receive an EOF. Default is false
                                  type: boolean
                                terminationMessagePath:
                                  description: 'Optional: Path at which the file to
                                    which the container''s termination message will
                                    be written is mounted into the container''s filesystem.
                                    Message written is intended to be brief final
                                    status, such as an assertion failure message.
                                    Will be truncated by the node if greater than
                                    4096 bytes. The total message length across all
                                    containers will be limited to 12kb. Defaults to
                                    /dev/termination-log. Cannot be updated.'
                                  type: string
                                terminationMessagePolicy:
                                  description: Indicate how the termination message
                                    should be populated. File will use the contents
                                    of terminationMessagePath to populate the container
                                    status message on both success and failure. FallbackToLogsOnError
                                    will use the last chunk of container log output
                                    if the termination message file is empty and the
                                    container exited with an error. The log output
                                    is limited to 2048 bytes or 80 lines, whichever
                                    is smaller. Defaults to File. Cannot be updated.
                                  type: string
                                tty:
                                  description: Whether this container should allocate
                                    a TTY for itself, also requires 'stdin' to be
                                    true. Default is false.
                                  type: boolean
                                volumeDevices:
                                  description: volumeDevices is the list of block
                                    devices to be used by the container.
                                  items:
                                    description: volumeDevice describes a mapping
                                      of a raw block device within a container.
                                    properties:
                                      devicePath:
                                        description: devicePath is the path inside
                                          of the container that the device will be
                                          mapped to.
                                        type: string
                                      name:
                                        description: name must match the name of a
                                          persistentVolumeClaim in the pod
                                        type: string
                                    required:
                                    - devicePath
                                    - name
                                    type: object
                                  type: array
                                volumeMounts:
                                  description: Pod volumes to mount into the container's
                                    filesystem. Cannot be updated.
                                  items:
                                    description: VolumeMount describes a mounting
                                      of a Volume within a container.
                                    properties:
                                      mountPath:
                                        description: Path within the container at
                                          which the volume should be mounted.  Must
                                          not contain ':'.
                                        type: string
                                      mountPropagation:
                                        description: mountPropagation determines how
                                          mounts are propagated from the host to container
                                          and the other way around. When not set,
                                          MountPropagationNone is used. This field
                                          is beta in 1.10.
                                        type: string
                                      name:
                                        description: This must match the Name of a
                                          Volume.
                                        type: string
                                      readOnly:
                                        description: Mounted read-only if true, read-write
                                          otherwise (false or unspecified). Defaults
                                          to false.
                                        type: boolean
                                      subPath:
                                        description: Path within the volume from which
                                          the container's volume should be mounted.
                                          Defaults to "" (volume's root).
                                        type: string
                                      subPathExpr:
                                        description: Expanded path within the volume
                                          from which the container's volume should
                                          be mounted. Behaves similarly to SubPath
                                          but environment variable references $(VAR_NAME)
                                          are expanded using the container's environment.
                                          Defaults to "" (volume's root). SubPathExpr
                                          and SubPath are mutually exclusive.
                                        type: string
                                    required:
                                    - mountPath
                                    - name
                                    type: object
                                  type: array
                                workingDir:
                                  description: Container's working directory. If not
                                    specified, the container runtime's default will
                                    be used, which might be configured in the container
                                    image. Cannot be updated.
                                  type: string
                              required:
                              - name
                              type: object
                            type: array
                          nodeName:
                            description: NodeName is a request to schedule this pod
                              onto a specific node. If it is non-empty, the scheduler
                              simply schedules this pod onto that node, assuming that
                              it fits resource requirements.
                            type: string
                          nodeSelector:
                            additionalProperties:
                              type: string
                            description: 'NodeSelector is a selector which must be
                              true for the pod to fit on a node. Selector which must
                              match a node''s labels for the pod to be scheduled on
                              that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/'
                            type: object
                            x-kubernetes-map-type: atomic
                          os:
                            description: "Specifies the OS of the containers in the
                              pod. Some pod and container fields are restricted if
                              this is set. \n If the OS field is set to linux, the
                              following fields must be unset: -securityContext.windowsOptions
                              \n If the OS field is set to windows, following fields
                              must be unset: - spec.hostPID - spec.hostIPC - spec.hostUsers
                              - spec.securityContext.seLinuxOptions - spec.securityContext.seccompProfile
                              - spec.securityContext.fsGroup - spec.securityContext.fsGroupChangePolicy
                              - spec.securityContext.sysctls - spec.shareProcessNamespace
                              - spec.securityContext.runAsUser - spec.securityContext.runAsGroup
                              - spec.securityContext.supplementalGroups - spec.containers[*].securityContext.seLinuxOptions
                              - spec.containers[*].securityContext.seccompProfile
                              - spec.containers[*].securityContext.capabilities -
                              spec.containers[*].securityContext.readOnlyRootFilesystem
                              - spec.containers[*].securityContext.privileged - spec.containers[*].securityContext.allowPrivilegeEscalation
                              - spec.containers[*].securityContext.procMount - spec.containers[*].securityContext.runAsUser
                              - spec.containers[*].securityContext.runAsGroup"
                            properties:
                              name:
                                description: 'Name is the name of the operating system.
                                  The currently supported values are linux and windows.
                                  Additional value may be defined in future and can
                                  be one of: https://github.com/opencontainers/runtime-spec/blob/master/config.md#platform-specific-configuration
                                  Clients should expect to handle additional values
                                  and treat unrecognized values in this field as os:
                                  null'
                                type: string
                            required:
                            - name
                            type: object
                          overhead:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Overhead represents the resource overhead
                              associated with running a pod for a given RuntimeClass.
                              This field will be autopopulated at admission time by
                              the RuntimeClass admission controller. If the RuntimeClass
                              admission controller is enabled, overhead must not be
                              set in Pod create requests. The RuntimeClass admission
                              controller will reject Pod create requests which have
                              the overhead already set. If RuntimeClass is configured
                              and selected in the PodSpec, Overhead will be set to
                              the value defined in the corresponding RuntimeClass,
                              otherwise it will remain unset and treated as zero.
                              More info: https://git.k8s.io/enhancements/keps/sig-node/688-pod-overhead/README.md'
                            type: object
                          preemptionPolicy:
                            description: PreemptionPolicy is the Policy for preempting
                              pods with lower priority. One of Never, PreemptLowerPriority.
                              Defaults to PreemptLowerPriority if unset.
                            type: string
                          priority:
                            description: The priority value. Various system components
                              use this field to find the priority of the pod. When
                              Priority Admission Controller is enabled, it prevents
                              users from setting this field. The admission controller
                              populates this field from PriorityClassName. The higher
                              the value, the higher the priority.
                            format: int32
                            type: integer
                          priorityClassName:
                            description: If specified, indicates the pod's priority.
                              "system-node-critical" and "system-cluster-critical"
                              are two special keywords which indicate the highest
                              priorities with the former being the highest priority.
                              Any other name must be defined by creating a PriorityClass
                              object with that name. If not specified, the pod priority
                              will be default or zero if there is no default.
                            type: string
                          readinessGates:
                            description: 'If specified, all readiness gates will be
                              evaluated for pod readiness. A pod is ready when all
                              its containers are ready AND all conditions specified
                              in the readiness gates have status equal to "True" More
                              info: https://git.k8s.io/enhancements/keps/sig-network/580-pod-readiness-gates'
                            items:
                              description: PodReadinessGate contains the reference
                                to a pod condition
                              properties:
                                conditionType:
                                  description: ConditionType refers to a condition
                                    in the pod's condition list with matching type.
                                  type: string
                              required:
                              - conditionType
                              type: object
                            type: array
                          resourceClaims:
                            description: "ResourceClaims defines which ResourceClaims
                              must be allocated and reserved before the Pod is allowed
                              to start. The resources will be made available to those
                              containers which consume them by name. \n This is an
                              alpha field and requires enabling the DynamicResourceAllocation
                              feature gate. \n This field is immutable."
                            items:
                              description: PodResourceClaim references exactly one
                                ResourceClaim through a ClaimSource. It adds a name
                                to it that uniquely identifies the ResourceClaim inside
                                the Pod. Containers that need access to the ResourceClaim
                                reference it with this name.
                              properties:
                                name:
                                  description: Name uniquely identifies this resource
                                    claim inside the pod. This must be a DNS_LABEL.
                                  type: string
                                source:
                                  description: Source describes where to find the
                                    ResourceClaim.
                                  properties:
                                    resourceClaimName:
                                      description: ResourceClaimName is the name of
                                        a ResourceClaim object in the same namespace
                                        as this pod.
                                      type: string
                                    resourceClaimTemplateName:
                                      description: "ResourceClaimTemplateName is the
                                        name of a ResourceClaimTemplate object in
                                        the same namespace as this pod. \n The template
                                        will be used to create a new ResourceClaim,
                                        which will be bound to this pod. When this
                                        pod is deleted, the ResourceClaim will also
                                        be deleted. The name of the ResourceClaim
                                        will be <pod name>-<resource name>, where
                                        <resource name> is the PodResourceClaim.Name.
                                        Pod validation will reject the pod if the
                                        concatenated name is not valid for a ResourceClaim
                                        (e.g. too long). \n An existing ResourceClaim
                                        with that name that is not owned by the pod
                                        will not be used for the pod to avoid using
                                        an unrelated resource by mistake. Scheduling
                                        and pod startup are then blocked until the
                                        unrelated ResourceClaim is removed. \n This
                                        field is immutable and no changes will be
                                        made to the corresponding ResourceClaim by
                                        the control plane after creating the ResourceClaim."
                                      type: string
                                  type: object
                              required:
                              - name
                              type: object
                            type: array
                            x-kubernetes-list-map-keys:
                            - name
                            x-kubernetes-list-type: map
                          restartPolicy:
                            description: 'Restart policy for all containers within
                              the pod. One of Always, OnFailure, Never. In some contexts,
                              only a subset of those values may be permitted. Default
                              to Always. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#restart-policy'
                            type: string
                          runtimeClassName:
                            description: 'RuntimeClassName refers to a RuntimeClass
                              object in the node.k8s.io group, which should be used
                              to run this pod.  If no RuntimeClass resource matches
                              the named class, the pod will not be run. If unset or
                              empty, the "legacy" RuntimeClass will be used, which
                              is an implicit class with an empty definition that uses
                              the default runtime handler. More info: https://git.k8s.io/enhancements/keps/sig-node/585-runtime-class'
                            type: string
                          schedulerName:
                            description: If specified, the pod will be dispatched
                              by specified scheduler. If not specified, the pod will
                              be dispatched by default scheduler.
                            type: string
                          schedulingGates:
                            description: "SchedulingGates is an opaque list of values
                              that if specified will block scheduling the pod. If
                              schedulingGates is not empty, the pod will stay in the
                              SchedulingGated state and the scheduler will not attempt
                              to schedule the pod. \n SchedulingGates can only be
                              set at pod creation time, and be removed only afterwards.
                              \n This is a beta feature enabled by the PodSchedulingReadiness
                              feature gate."
                            items:
                              description: PodSchedulingGate is associated to a Pod
                                to guard its scheduling.
                              properties:
                                name:
                                  description: Name of the scheduling gate. Each scheduling
                                    gate must have a unique name field.
                                  type: string
                              required:
                              - name
                              type: object
                            type: array
                            x-kubernetes-list-map-keys:
                            - name
                            x-kubernetes-list-type: map
                          securityContext:
                            description: 'SecurityContext holds pod-level security
                              attributes and common container settings. Optional:
                              Defaults to empty.  See type description for default
                              values of each field.'
                            properties:
                              fsGroup:
                                description: "A special supplemental group that applies
                                  to all containers in a pod. Some volume types allow
                                  the Kubelet to change the ownership of that volume
                                  to be owned by the pod: \n 1. The owning GID will
                                  be the FSGroup 2. The setgid bit is set (new files
                                  created in the volume will be owned by FSGroup)
                                  3. The permission bits are OR'd with rw-rw---- \n
                                  If unset, the Kubelet will not modify the ownership
                                  and permissions of any volume. Note that this field
                                  cannot be set when spec.os.name is windows."
                                format: int64
                                type: integer
                              fsGroupChangePolicy:
                                description: 'fsGroupChangePolicy defines behavior
                                  of changing ownership and permission of the volume
                                  before being exposed inside Pod. This field will
                                  only apply to volume types which support fsGroup
                                  based ownership(and permissions). It will have no
                                  effect on ephemeral volume types such as: secret,
                                  configmaps and emptydir. Valid values are "OnRootMismatch"
                                  and "Always". If not specified, "Always" is used.
                                  Note that this field cannot be set when spec.os.name
                                  is windows.'
                                type: string
                              runAsGroup:
                                description: The GID to run the entrypoint of the
                                  container process. Uses runtime default if unset.
                                  May also be set in SecurityContext.  If set in both
                                  SecurityContext and PodSecurityContext, the value
                                  specified in SecurityContext takes precedence for
                                  that container. Note that this field cannot be set
                                  when spec.os.name is windows.
                                format: int64
                                type: integer
                              runAsNonRoot:
                                description: Indicates that the container must run
                                  as a non-root user. If true, the Kubelet will validate
                                  the image at runtime to ensure that it does not
                                  run as UID 0 (root) and fail to start the container
                                  if it does. If unset or false, no such validation
                                  will be performed. May also be set in SecurityContext.  If
                                  set in both SecurityContext and PodSecurityContext,
                                  the value specified in SecurityContext takes precedence.
                                type: boolean
                              runAsUser:
                                description: The UID to run the entrypoint of the
                                  container process. Defaults to user specified in
                                  image metadata if unspecified. May also be set in
                                  SecurityContext.  If set in both SecurityContext
                                  and PodSecurityContext, the value specified in SecurityContext
                                  takes precedence for that container. Note that this
                                  field cannot be set when spec.os.name is windows.
                                format: int64
                                type: integer
                              seLinuxOptions:
                                description: The SELinux context to be applied to
                                  all containers. If unspecified, the container runtime
                                  will allocate a random SELinux context for each
                                  container.  May also be set in SecurityContext.  If
                                  set in both SecurityContext and PodSecurityContext,
                                  the value specified in SecurityContext takes precedence
                                  for that container. Note that this field cannot
                                  be set when spec.os.name is windows.
                                properties:
                                  level:
                                    description: Level is SELinux level label that
                                      applies to the container.
                                    type: string
                                  role:
                                    description: Role is a SELinux role label that
                                      applies to the container.
                                    type: string
                                  type:
                                    description: Type is a SELinux type label that
                                      applies to the container.
                                    type: string
                                  user:
                                    description: User is a SELinux user label that
                                      applies to the container.
                                    type: string
                                type: object
                              seccompProfile:
                                description: The seccomp options to use by the containers
                                  in this pod. Note that this field cannot be set
                                  when spec.os.name is windows.
                                properties:
                                  localhostProfile:
                                    description: localhostProfile indicates a profile
                                      defined in a file on the node should be used.
                                      The profile must be preconfigured on the node
                                      to work. Must be a descending path, relative
                                      to the kubelet's configured seccomp profile
                                      location. Must only be set if type is "Localhost".
                                    type: string
                                  type:
                                    description: "type indicates which kind of seccomp
                                      profile will be applied. Valid options are:
                                      \n Localhost - a profile defined in a file on
                                      the node should be used. RuntimeDefault - the
                                      container runtime default profile should be
                                      used. Unconfined - no profile should be applied."
                                    type: string
                                required:
                                - type
                                type: object
                              supplementalGroups:
                                description: A list of groups applied to the first
                                  process run in each container, in addition to the
                                  container's primary GID, the fsGroup (if specified),
                                  and group memberships defined in the container image
                                  for the uid of the container process. If unspecified,
                                  no additional groups are added to any container.
                                  Note that group memberships defined in the container
                                  image for the uid of the container process are still
                                  effective, even if they are not included in this
                                  list. Note that this field cannot be set when spec.os.name
                                  is windows.
                                items:
                                  format: int64
                                  type: integer
                                type: array
                              sysctls:
                                description: Sysctls hold a list of namespaced sysctls
                                  used for the pod. Pods with unsupported sysctls
                                  (by the container runtime) might fail to launch.
                                  Note that this field cannot be set when spec.os.name
                                  is windows.
                                items:
                                  description: Sysctl defines a kernel parameter to
                                    be set
                                  properties:
                                    name:
                                      description: Name of a property to set
                                      type: string
                                    value:
                                      description: Value of a property to set
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                type: array
                              windowsOptions:
                                description: The Windows specific settings applied
                                  to all containers. If unspecified, the options within
                                  a container's SecurityContext will be used. If set
                                  in both SecurityContext and PodSecurityContext,
                                  the value specified in SecurityContext takes precedence.
                                  Note that this field cannot be set when spec.os.name
                                  is linux.
                                properties:
                                  gmsaCredentialSpec:
                                    description: GMSACredentialSpec is where the GMSA
                                      admission webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                                      inlines the contents of the GMSA credential
                                      spec named by the GMSACredentialSpecName field.
                                    type: string
                                  gmsaCredentialSpecName:
                                    description: GMSACredentialSpecName is the name
                                      of the GMSA credential spec to use.
                                    type: string
                                  hostProcess:
                                    description: HostProcess determines if a container
                                      should be run as a 'Host Process' container.
                                      This field is alpha-level and will only be honored
                                      by components that enable the WindowsHostProcessContainers
                                      feature flag. Setting this field without the
                                      feature flag will result in errors when validating
                                      the Pod. All of a Pod's containers must have
                                      the same effective HostProcess value (it is
                                      not allowed to have a mix of HostProcess containers
                                      and non-HostProcess containers).  In addition,
                                      if HostProcess is true then HostNetwork must
                                      also be set to true.
                                    type: boolean
                                  runAsUserName:
                                    description: The UserName in Windows to run the
                                      entrypoint of the container process. Defaults
                                      to the user specified in image metadata if unspecified.
                                      May also be set in PodSecurityContext. If set
                                      in both SecurityContext and PodSecurityContext,
                                      the value specified in SecurityContext takes
                                      precedence.
                                    type: string
                                type: object
                            type: object
                          serviceAccount:
                            description: 'DeprecatedServiceAccount is a depreciated
                              alias for ServiceAccountName. Deprecated: Use serviceAccountName
                              instead.'
                            type: string
                          serviceAccountName:
                            description: 'ServiceAccountName is the name of the ServiceAccount
                              to use to run this pod. More info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/'
                            type: string
                          setHostnameAsFQDN:
                            description: If true the pod's hostname will be configured
                              as the pod's FQDN, rather than the leaf name (the default).
                              In Linux containers, this means setting the FQDN in
                              the hostname field of the kernel (the nodename field
                              of struct utsname). In Windows containers, this means
                              setting the registry value of hostname for the registry
                              key HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters
                              to FQDN. If a pod does not have FQDN, this has no effect.
                              Default to false.
                            type: boolean
                          shareProcessNamespace:
                            description: 'Share a single process namespace between
                              all of the containers in a pod. When this is set containers
                              will be able to view and signal processes from other
                              containers in the same pod, and the first process in
                              each container will not be assigned PID 1. HostPID and
                              ShareProcessNamespace cannot both be set. Optional:
                              Default to false.'
                            type: boolean
                          subdomain:
                            description: If specified, the fully qualified Pod hostname
                              will be "<hostname>.<subdomain>.<pod namespace>.svc.<cluster
                              domain>". If not specified, the pod will not have a
                              domainname at all.
                            type: string
                          terminationGracePeriodSeconds:
                            description: Optional duration in seconds the pod needs
                              to terminate gracefully. May be decreased in delete
                              request. Value must be non-negative integer. The value
                              zero indicates stop immediately via the kill signal
                              (no opportunity to shut down). If this value is nil,
                              the default grace period will be used instead. The grace
                              period is the duration in seconds after the processes
                              running in the pod are sent a termination signal and
                              the time when the processes are forcibly halted with
                              a kill signal. Set this value longer than the expected
                              cleanup time for your process. Defaults to 30 seconds.
                            format: int64
                            type: integer
                          tolerations:
                            description: If specified, the pod's tolerations.
                            items:
                              description: The pod this Toleration is attached to
                                tolerates any taint that matches the triple <key,value,effect>
                                using the matching operator <operator>.
                              properties:
                                effect:
                                  description: Effect indicates the taint effect to
                                    match. Empty means match all taint effects. When
                                    specified, allowed values are NoSchedule, PreferNoSchedule
                                    and NoExecute.
                                  type: string
                                key:
                                  description: Key is the taint key that the toleration
                                    applies to. Empty means match all taint keys.
                                    If the key is empty, operator must be Exists;
                                    this combination means to match all values and
                                    all keys.
                                  type: string
                                operator:
                                  description: Operator represents a key's relationship
                                    to the value. Valid operators are Exists and Equal.
                                    Defaults to Equal. Exists is equivalent to wildcard
                                    for value, so that a pod can tolerate all taints
                                    of a particular category.
                                  type: string
                                tolerationSeconds:
                                  description: TolerationSeconds represents the period
                                    of time the toleration (which must be of effect
                                    NoExecute, otherwise this field is ignored) tolerates
                                    the taint. By default, it is not set, which means
                                    tolerate the taint forever (do not evict). Zero
                                    and negative values will be treated as 0 (evict
                                    immediately) by the system.
                                  format: int64
                                  type: integer
                                value:
                                  description: Value is the taint value the toleration
                                    matches to. If the operator is Exists, the value
                                    should be empty, otherwise just a regular string.
                                  type: string
                              type: object
                            type: array
                          topologySpreadConstraints:
                            description: TopologySpreadConstraints describes how a
                              group of pods ought to spread across topology domains.
                              Scheduler will schedule pods in a way which abides by
                              the constraints. All topologySpreadConstraints are ANDed.
                            items:
                              description: TopologySpreadConstraint specifies how
                                to spread matching pods among the given topology.
                              properties:
                                labelSelector:
                                  description: LabelSelector is used to find matching
                                    pods. Pods that match this label selector are
                                    counted to determine the number of pods in their
                                    corresponding topology domain.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: A label selector requirement
                                          is a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: operator represents a key's
                                              relationship to a set of values. Valid
                                              operators are In, NotIn, Exists and
                                              DoesNotExist.
                                            type: string
                                          values:
                                            description: values is an array of string
                                              values. If the operator is In or NotIn,
                                              the values array must be non-empty.
                                              If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This
                                              array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: matchLabels is a map of {key,value}
                                        pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions,
                                        whose key field is "key", the operator is
                                        "In", and the values array contains only "value".
                                        The requirements are ANDed.
                                      type: object
                                  type: object
                                  x-kubernetes-map-type: atomic
                                matchLabelKeys:
                                  description: "MatchLabelKeys is a set of pod label
                                    keys to select the pods over which spreading will
                                    be calculated. The keys are used to lookup values
                                    from the incoming pod labels, those key-value
                                    labels are ANDed with labelSelector to select
                                    the group of existing pods over which spreading
                                    will be calculated for the incoming pod. The same
                                    key is forbidden to exist in both MatchLabelKeys
                                    and LabelSelector. MatchLabelKeys cannot be set
                                    when LabelSelector isn't set. Keys that don't
                                    exist in the incoming pod labels will be ignored.
                                    A null or empty list means only match against
                                    labelSelector. \n This is a beta field and requires
                                    the MatchLabelKeysInPodTopologySpread feature
                                    gate to be enabled (enabled by default)."
                                  items:
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: atomic
                                maxSkew:
                                  description: 'MaxSkew describes the degree to which
                                    pods may be unevenly distributed. When `whenUnsatisfiable=DoNotSchedule`,
                                    it is the maximum permitted difference between
                                    the number of matching pods in the target topology
                                    and the global minimum. The global minimum is
                                    the minimum number of matching pods in an eligible
                                    domain or zero if the number of eligible domains
                                    is less than MinDomains. For example, in a 3-zone
                                    cluster, MaxSkew is set to 1, and pods with the
                                    same labelSelector spread as 2/2/1: In this case,
                                    the global minimum is 1. | zone1 | zone2 | zone3
                                    | |  P P  |  P P  |   P   | - if MaxSkew is 1,
                                    incoming pod can only be scheduled to zone3 to
                                    become 2/2/2; scheduling it onto zone1(zone2)
                                    would make the ActualSkew(3-1) on zone1(zone2)
                                    violate MaxSkew(1). - if MaxSkew is 2, incoming
                                    pod can be scheduled onto any zone. When `whenUnsatisfiable=ScheduleAnyway`,
                                    it is used to give higher precedence to topologies
                                    that satisfy it. It''s a required field. Default
                                    value is 1 and 0 is not allowed.'
                                  format: int32
                                  type: integer
                                minDomains:
                                  description: "MinDomains indicates a minimum number
                                    of eligible domains. When the number of eligible
                                    domains with matching topology keys is less than
                                    minDomains, Pod Topology Spread treats \"global
                                    minimum\" as 0, and then the calculation of Skew
                                    is performed. And when the number of eligible
                                    domains with matching topology keys equals or
                                    greater than minDomains, this value has no effect
                                    on scheduling. As a result, when the number of
                                    eligible domains is less than minDomains, scheduler
                                    won't schedule more than maxSkew Pods to those
                                    domains. If value is nil, the constraint behaves
                                    as if MinDomains is equal to 1. Valid values are
                                    integers greater than 0. When value is not nil,
                                    WhenUnsatisfiable must be DoNotSchedule. \n For
                                    example, in a 3-zone cluster, MaxSkew is set to
                                    2, MinDomains is set to 5 and pods with the same
                                    labelSelector spread as 2/2/2: | zone1 | zone2
                                    | zone3 | |  P P  |  P P  |  P P  | The number
                                    of domains is less than 5(MinDomains), so \"global
                                    minimum\" is treated as 0. In this situation,
                                    new pod with the same labelSelector cannot be
                                    scheduled, because computed skew will be 3(3 -
                                    0) if new Pod is scheduled to any of the three
                                    zones, it will violate MaxSkew. \n This is a beta
                                    field and requires the MinDomainsInPodTopologySpread
                                    feature gate to be enabled (enabled by default)."
                                  format: int32
                                  type: integer
                                nodeAffinityPolicy:
                                  description: "NodeAffinityPolicy indicates how we
                                    will treat Pod's nodeAffinity/nodeSelector when
                                    calculating pod topology spread skew. Options
                                    are: - Honor: only nodes matching nodeAffinity/nodeSelector
                                    are included in the calculations. - Ignore: nodeAffinity/nodeSelector
                                    are ignored. All nodes are included in the calculations.
                                    \n If this value is nil, the behavior is equivalent
                                    to the Honor policy. This is a beta-level feature
                                    default enabled by the NodeInclusionPolicyInPodTopologySpread
                                    feature flag."
                                  type: string
                                nodeTaintsPolicy:
                                  description: "NodeTaintsPolicy indicates how we
                                    will treat node taints when calculating pod topology
                                    spread skew. Options are: - Honor: nodes without
                                    taints, along with tainted nodes for which the
                                    incoming pod has a toleration, are included. -
                                    Ignore: node taints are ignored. All nodes are
                                    included. \n If this value is nil, the behavior
                                    is equivalent to the Ignore policy. This is a
                                    beta-level feature default enabled by the NodeInclusionPolicyInPodTopologySpread
                                    feature flag."
                                  type: string
                                topologyKey:
                                  description: TopologyKey is the key of node labels.
                                    Nodes that have a label with this key and identical
                                    values are considered to be in the same topology.
                                    We consider each <key, value> as a "bucket", and
                                    try to put balanced number of pods into each bucket.
                                    We define a domain as a particular instance of
                                    a topology. Also, we define an eligible domain
                                    as a domain whose nodes meet the requirements
                                    of nodeAffinityPolicy and nodeTaintsPolicy. e.g.
                                    If TopologyKey is "kubernetes.io/hostname", each
                                    Node is a domain of that topology. And, if TopologyKey
                                    is "topology.kubernetes.io/zone", each zone is
                                    a domain of that topology. It's a required field.
                                  type: string
                                whenUnsatisfiable:
                                  description: 'WhenUnsatisfiable indicates how to
                                    deal with a pod if it doesn''t satisfy the spread
                                    constraint. - DoNotSchedule (default) tells the
                                    scheduler not to schedule it. - ScheduleAnyway
                                    tells the scheduler to schedule the pod in any
                                    location, but giving higher precedence to topologies
                                    that would help reduce the skew. A constraint
                                    is considered "Unsatisfiable" for an incoming
                                    pod if and only if every possible node assignment
                                    for that pod would violate "MaxSkew" on some topology.
                                    For example, in a 3-zone cluster, MaxSkew is set
                                    to 1, and pods with the same labelSelector spread
                                    as 3/1/1: | zone1 | zone2 | zone3 | | P P P |   P   |   P   |
                                    If WhenUnsatisfiable is set to DoNotSchedule,
                                    incoming pod can only be scheduled to zone2(zone3)
                                    to become 3/2/1(3/1/2) as ActualSkew(2-1) on zone2(zone3)
                                    satisfies MaxSkew(1). In other words, the cluster
                                    can still be imbalanced, but scheduler won''t
                                    make it *more* imbalanced. It''s a required field.'
                                  type: string
                              required:
                              - maxSkew
                              - topologyKey
                              - whenUnsatisfiable
                              type: object
                            type: array
                            x-kubernetes-list-map-keys:
                            - topologyKey
                            - whenUnsatisfiable
                            x-kubernetes-list-type: map
                          volumes:
                            description: 'List of volumes that can be mounted by containers
                              belonging to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes'
                            items:
                              description: Volume represents a named volume in a pod
                                that may be accessed by any container in the pod.
                              properties:
                                awsElasticBlockStore:
                                  description: 'awsElasticBlockStore represents an
                                    AWS Disk resource that is attached to a kubelet''s
                                    host machine and then exposed to the pod. More
                                    info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
                                  properties:
                                    fsType:
                                      description: 'fsType is the filesystem type
                                        of the volume that you want to mount. Tip:
                                        Ensure that the filesystem type is supported
                                        by the host operating system. Examples: "ext4",
                                        "xfs", "ntfs". Implicitly inferred to be "ext4"
                                        if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
                                        TODO: how do we prevent errors in the filesystem
                                        from compromising the machine'
                                      type: string
                                    partition:
                                      description: 'partition is the partition in
                                        the volume that you want to mount. If omitted,
                                        the default is to mount by volume name. Examples:
                                        For volume /dev/sda1, you specify the partition
                                        as "1". Similarly, the volume partition for
                                        /dev/sda is "0" (or you can leave the property
                                        empty).'
                                      format: int32
                                      type: integer
                                    readOnly:
                                      description: 'readOnly value true will force
                                        the readOnly setting in VolumeMounts. More
                                        info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
                                      type: boolean
                                    volumeID:
                                      description: 'volumeID is unique ID of the persistent
                                        disk resource in AWS (Amazon EBS volume).
                                        More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
                                      type: string
                                  required:
                                  - volumeID
                                  type: object
                                azureDisk:
                                  description: azureDisk represents an Azure Data
                                    Disk mount on the host and bind mount to the pod.
                                  properties:
                                    cachingMode:
                                      description: 'cachingMode is the Host Caching
                                        mode: None, Read Only, Read Write.'
                                      type: string
                                    diskName:
                                      description: diskName is the Name of the data
                                        disk in the blob storage
                                      type: string
                                    diskURI:
                                      description: diskURI is the URI of data disk
                                        in the blob storage
                                      type: string
                                    fsType:
                                      description: fsType is Filesystem type to mount.
                                        Must be a filesystem type supported by the
                                        host operating system. Ex. "ext4", "xfs",
                                        "ntfs". Implicitly inferred to be "ext4" if
                                        unspecified.
                                      type: string
                                    kind:
                                      description: 'kind expected values are Shared:
                                        multiple blob disks per storage account  Dedicated:
                                        single blob disk per storage account  Managed:
                                        azure managed data disk (only in managed availability
                                        set). defaults to shared'
                                      type: string
                                    readOnly:
                                      description: readOnly Defaults to false (read/write).
                                        ReadOnly here will force the ReadOnly setting
                                        in VolumeMounts.
                                      type: boolean
                                  required:
                                  - diskName
                                  - diskURI
                                  type: object
                                azureFile:
                                  description: azureFile represents an Azure File
                                    Service mount on the host and bind mount to the
                                    pod.
                                  properties:
                                    readOnly:
                                      description: readOnly defaults to false (read/write).
                                        ReadOnly here will force the ReadOnly setting
                                        in VolumeMounts.
                                      type: boolean
                                    secretName:
                                      description: secretName is the  name of secret
                                        that contains Azure Storage Account Name and
                                        Key
                                      type: string
                                    shareName:
                                      description: shareName is the azure share Name
                                      type: string
                                  required:
                                  - secretName
                                  - shareName
                                  type: object
                                cephfs:
                                  description: cephFS represents a Ceph FS mount on
                                    the host that shares a pod's lifetime
                                  properties:
                                    monitors:
                                      description: 'monitors is Required: Monitors
                                        is a collection of Ceph monitors More info:
                                        https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                                      items:
                                        type: string
                                      type: array
                                    path:
                                      description: 'path is Optional: Used as the
                                        mounted root, rather than the full Ceph tree,
                                        default is /'
                                      type: string
                                    readOnly:
                                      description: 'readOnly is Optional: Defaults
                                        to false (read/write). ReadOnly here will
                                        force the ReadOnly setting in VolumeMounts.
                                        More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                                      type: boolean
                                    secretFile:
                                      description: 'secretFile is Optional: SecretFile
                                        is the path to key ring for User, default
                                        is /etc/ceph/user.secret More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                                      type: string
                                    secretRef:
                                      description: 'secretRef is Optional: SecretRef
                                        is reference to the authentication secret
                                        for User, default is empty. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                                      properties:
                                        name:
                                          description: 'Name of the referent. More
                                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion,
                                            kind, uid?'
                                          type: string
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    user:
                                      description: 'user is optional: User is the
                                        rados user name, default is admin More info:
                                        https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                                      type: string
                                  required:
                                  - monitors
                                  type: object
                                cinder:
                                  description: 'cinder represents a cinder volume
                                    attached and mounted on kubelets host machine.
                                    More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                                  properties:
                                    fsType:
                                      description: 'fsType is the filesystem type
                                        to mount. Must be a filesystem type supported
                                        by the host operating system. Examples: "ext4",
                                        "xfs", "ntfs". Implicitly inferred to be "ext4"
                                        if unspecified. More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                                      type: string
                                    readOnly:
                                      description: 'readOnly defaults to false (read/write).
                                        ReadOnly here will force the ReadOnly setting
                                        in VolumeMounts. More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                                      type: boolean
                                    secretRef:
                                      description: 'secretRef is optional: points
                                        to a secret object containing parameters used
                                        to connect to OpenStack.'
                                      properties:
                                        name:
                                          description: 'Name of the referent. More
                                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion,
                                            kind, uid?'
                                          type: string
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    volumeID:
                                      description: 'volumeID used to identify the
                                        volume in cinder. More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                                      type: string
                                  required:
                                  - volumeID
                                  type: object
                                configMap:
                                  description: configMap represents a configMap that
                                    should populate this volume
                                  properties:
                                    defaultMode:
                                      description: 'defaultMode is optional: mode
                                        bits used to set permissions on created files
                                        by default. Must be an octal value between
                                        0000 and 0777 or a decimal value between 0
                                        and 511. YAML accepts both octal and decimal
                                        values, JSON requires decimal values for mode
                                        bits. Defaults to 0644. Directories within
                                        the path are not affected by this setting.
                                        This might be in conflict with other options
                                        that affect the file mode, like fsGroup, and
                                        the result can be other mode bits set.'
                                      format: int32
                                      type: integer
                                    items:
                                      description: items if unspecified, each key-value
                                        pair in the Data field of the referenced ConfigMap
                                        will be projected into the volume as a file
                                        whose name is the key and content is the value.
                                        If specified, the listed keys will be projected
                                        into the specified paths, and unlisted keys
                                        will not be present. If a key is specified
                                        which is not present in the ConfigMap, the
                                        volume setup will error unless it is marked
                                        optional. Paths must be relative and may not
                                        contain the '..' path or start with '..'.
                                      items:
                                        description: Maps a string key to a path within
                                          a volume.
                                        properties:
                                          key:
                                            description: key is the key to project.
                                            type: string
                                          mode:
                                            description: 'mode is Optional: mode bits
                                              used to set permissions on this file.
                                              Must be an octal value between 0000
                                              and 0777 or a decimal value between
                                              0 and 511. YAML accepts both octal and
                                              decimal values, JSON requires decimal
                                              values for mode bits. If not specified,
                                              the volume defaultMode will be used.
                                              This might be in conflict with other
                                              options that affect the file mode, like
                                              fsGroup, and the result can be other
                                              mode bits set.'
                                            format: int32
                                            type: integer
                                          path:
                                            description: path is the relative path
                                              of the file to map the key to. May not
                                              be an absolute path. May not contain
                                              the path element '..'. May not start
                                              with the string '..'.
                                            type: string
                                        required:
                                        - key
                                        - path
                                        type: object
                                      type: array
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                    optional:
                                      description: optional specify whether the ConfigMap
                                        or its keys must be defined
                                      type: boolean
                                  type: object
                                  x-kubernetes-map-type: atomic
                                csi:
                                  description: csi (Container Storage Interface) represents
                                    ephemeral storage that is handled by certain external
                                    CSI drivers (Beta feature).
                                  properties:
                                    driver:
                                      description: driver is the name of the CSI driver
                                        that handles this volume. Consult with your
                                        admin for the correct name as registered in
                                        the cluster.
                                      type: string
                                    fsType:
                                      description: fsType to mount. Ex. "ext4", "xfs",
                                        "ntfs". If not provided, the empty value is
                                        passed to the associated CSI driver which
                                        will determine the default filesystem to apply.
                                      type: string
                                    nodePublishSecretRef:
                                      description: nodePublishSecretRef is a reference
                                        to the secret object containing sensitive
                                        information to pass to the CSI driver to complete
                                        the CSI NodePublishVolume and NodeUnpublishVolume
                                        calls. This field is optional, and  may be
                                        empty if no secret is required. If the secret
                                        object contains more than one secret, all
                                        secret references are passed.
                                      properties:
                                        name:
                                          description: 'Name of the referent. More
                                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion,
                                            kind, uid?'
                                          type: string
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    readOnly:
                                      description: readOnly specifies a read-only
                                        configuration for the volume. Defaults to
                                        false (read/write).
                                      type: boolean
                                    volumeAttributes:
                                      additionalProperties:
                                        type: string
                                      description: volumeAttributes stores driver-specific
                                        properties that are passed to the CSI driver.
                                        Consult your driver's documentation for supported
                                        values.
                                      type: object
                                  required:
                                  - driver
                                  type: object
                                downwardAPI:
                                  description: downwardAPI represents downward API
                                    about the pod that should populate this volume
                                  properties:
                                    defaultMode:
                                      description: 'Optional: mode bits to use on
                                        created files by default. Must be a Optional:
                                        mode bits used to set permissions on created
                                        files by default. Must be an octal value between
                                        0000 and 0777 or a decimal value between 0
                                        and 511. YAML accepts both octal and decimal
                                        values, JSON requires decimal values for mode
                                        bits. Defaults to 0644. Directories within
                                        the path are not affected by this setting.
                                        This might be in conflict with other options
                                        that affect the file mode, like fsGroup, and
                                        the result can be other mode bits set.'
                                      format: int32
                                      type: integer
                                    items:
                                      description: Items is a list of downward API
                                        volume file
                                      items:
                                        description: DownwardAPIVolumeFile represents
                                          information to create the file containing
                                          the pod field
                                        properties:
                                          fieldRef:
                                            description: 'Required: Selects a field
                                              of the pod: only annotations, labels,
                                              name and namespace are supported.'
                                            properties:
                                              apiVersion:
                                                description: Version of the schema
                                                  the FieldPath is written in terms
                                                  of, defaults to "v1".
                                                type: string
                                              fieldPath:
                                                description: Path of the field to
                                                  select in the specified API version.
                                                type: string
                                            required:
                                            - fieldPath
                                            type: object
                                            x-kubernetes-map-type: atomic
                                          mode:
                                            description: 'Optional: mode bits used
                                              to set permissions on this file, must
                                              be an octal value between 0000 and 0777
                                              or a decimal value between 0 and 511.
                                              YAML accepts both octal and decimal
                                              values, JSON requires decimal values
                                              for mode bits. If not specified, the
                                              volume defaultMode will be used. This
                                              might be in conflict with other options
                                              that affect the file mode, like fsGroup,
                                              and the result can be other mode bits
                                              set.'
                                            format: int32
                                            type: integer
                                          path:
                                            description: 'Required: Path is  the relative
                                              path name of the file to be created.
                                              Must not be absolute or contain the
                                              ''..'' path. Must be utf-8 encoded.
                                              The first item of the relative path
                                              must not start with ''..'''
                                            type: string
                                          resourceFieldRef:
                                            description: 'Selects a resource of the
                                              container: only resources limits and
                                              requests (limits.cpu, limits.memory,
                                              requests.cpu and requests.memory) are
                                              currently supported.'
                                            properties:
                                              containerName:
                                                description: 'Container name: required
                                                  for volumes, optional for env vars'
                                                type: string
                                              divisor:
                                                anyOf:
                                                - type: integer
                                                - type: string
                                                description: Specifies the output
                                                  format of the exposed resources,
                                                  defaults to "1"
                                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                x-kubernetes-int-or-string: true
                                              resource:
                                                description: 'Required: resource to
                                                  select'
                                                type: string
                                            required:
                                            - resource
                                            type: object
                                            x-kubernetes-map-type: atomic
                                        required:
                                        - path
                                        type: object
                                      type: array
                                  type: object
                                emptyDir:
                                  description: 'emptyDir represents a temporary directory
                                    that shares a pod''s lifetime. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
                                  properties:
                                    medium:
                                      description: 'medium represents what type of
                                        storage medium should back this directory.
                                        The default is "" which means to use the node''s
                                        default medium. Must be an empty string (default)
                                        or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
                                      type: string
                                    sizeLimit:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: 'sizeLimit is the total amount
                                        of local storage required for this EmptyDir
                                        volume. The size limit is also applicable
                                        for memory medium. The maximum usage on memory
                                        medium EmptyDir would be the minimum value
                                        between the SizeLimit specified here and the
                                        sum of memory limits of all containers in
                                        a pod. The default is nil which means that
                                        the limit is undefined. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                  type: object
                                ephemeral:
                                  description: "ephemeral represents a volume that
                                    is handled by a cluster storage driver. The volume's
                                    lifecycle is tied to the pod that defines it -
                                    it will be created before the pod starts, and
                                    deleted when the pod is removed. \n Use this if:
                                    a) the volume is only needed while the pod runs,
                                    b) features of normal volumes like restoring from
                                    snapshot or capacity tracking are needed, c) the
                                    storage driver is specified through a storage
                                    class, and d) the storage driver supports dynamic
                                    volume provisioning through a PersistentVolumeClaim
                                    (see EphemeralVolumeSource for more information
                                    on the connection between this volume type and
                                    PersistentVolumeClaim). \n Use PersistentVolumeClaim
                                    or one of the vendor-specific APIs for volumes
                                    that persist for longer than the lifecycle of
                                    an individual pod. \n Use CSI for light-weight
                                    local ephemeral volumes if the CSI driver is meant
                                    to be used that way - see the documentation of
                                    the driver for more information. \n A pod can
                                    use both types of ephemeral volumes and persistent
                                    volumes at the same time."
                                  properties:
                                    volumeClaimTemplate:
                                      description: "Will be used to create a stand-alone
                                        PVC to provision the volume. The pod in which
                                        this EphemeralVolumeSource is embedded will
                                        be the owner of the PVC, i.e. the PVC will
                                        be deleted together with the pod.  The name
                                        of the PVC will be `<pod name>-<volume name>`
                                        where `<volume name>` is the name from the
                                        `PodSpec.Volumes` array entry. Pod validation
                                        will reject the pod if the concatenated name
                                        is not valid for a PVC (for example, too long).
                                        \n An existing PVC with that name that is
                                        not owned by the pod will *not* be used for
                                        the pod to avoid using an unrelated volume
                                        by mistake. Starting the pod is then blocked
                                        until the unrelated PVC is removed. If such
                                        a pre-created PVC is meant to be used by the
                                        pod, the PVC has to updated with an owner
                                        reference to the pod once the pod exists.
                                        Normally this should not be necessary, but
                                        it may be useful when manually reconstructing
                                        a broken cluster. \n This field is read-only
                                        and no changes will be made by Kubernetes
                                        to the PVC after it has been created. \n Required,
                                        must not be nil."
                                      properties:
                                        metadata:
                                          description: May contain labels and annotations
                                            that will be copied into the PVC when
                                            creating it. No other fields are allowed
                                            and will be rejected during validation.
                                          type: object
                                        spec:
                                          description: The specification for the PersistentVolumeClaim.
                                            The entire content is copied unchanged
                                            into the PVC that gets created from this
                                            template. The same fields as in a PersistentVolumeClaim
                                            are also valid here.
                                          properties:
                                            accessModes:
                                              description: 'accessModes contains the
                                                desired access modes the volume should
                                                have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                                              items:
                                                type: string
                                              type: array
                                            dataSource:
                                              description: 'dataSource field can be
                                                used to specify either: * An existing
                                                VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)
                                                * An existing PVC (PersistentVolumeClaim)
                                                If the provisioner or an external
                                                controller can support the specified
                                                data source, it will create a new
                                                volume based on the contents of the
                                                specified data source. When the AnyVolumeDataSource
                                                feature gate is enabled, dataSource
                                                contents will be copied to dataSourceRef,
                                                and dataSourceRef contents will be
                                                copied to dataSource when dataSourceRef.namespace
                                                is not specified. If the namespace
                                                is specified, then dataSourceRef will
                                                not be copied to dataSource.'
                                              properties:
                                                apiGroup:
                                                  description: APIGroup is the group
                                                    for the resource being referenced.
                                                    If APIGroup is not specified,
                                                    the specified Kind must be in
                                                    the core API group. For any other
                                                    third-party types, APIGroup is
                                                    required.
                                                  type: string
                                                kind:
                                                  description: Kind is the type of
                                                    resource being referenced
                                                  type: string
                                                name:
                                                  description: Name is the name of
                                                    resource being referenced
                                                  type: string
                                              required:
                                              - kind
                                              - name
                                              type: object
                                              x-kubernetes-map-type: atomic
                                            dataSourceRef:
                                              description: 'dataSourceRef specifies
                                                the object from which to populate
                                                the volume with data, if a non-empty
                                                volume is desired. This may be any
                                                object from a non-empty API group
                                                (non core object) or a PersistentVolumeClaim
                                                object. When this field is specified,
                                                volume binding will only succeed if
                                                the type of the specified object matches
                                                some installed volume populator or
                                                dynamic provisioner. This field will
                                                replace the functionality of the dataSource
                                                field and as such if both fields are
                                                non-empty, they must have the same
                                                value. For backwards compatibility,
                                                when namespace isn''t specified in
                                                dataSourceRef, both fields (dataSource
                                                and dataSourceRef) will be set to
                                                the same value automatically if one
                                                of them is empty and the other is
                                                non-empty. When namespace is specified
                                                in dataSourceRef, dataSource isn''t
                                                set to the same value and must be
                                                empty. There are three important differences
                                                between dataSource and dataSourceRef:
                                                * While dataSource only allows two
                                                specific types of objects, dataSourceRef
                                                allows any non-core object, as well
                                                as PersistentVolumeClaim objects.
                                                * While dataSource ignores disallowed
                                                values (dropping them), dataSourceRef
                                                preserves all values, and generates
                                                an error if a disallowed value is
                                                specified. * While dataSource only
                                                allows local objects, dataSourceRef
                                                allows objects in any namespaces.
                                                (Beta) Using this field requires the
                                                AnyVolumeDataSource feature gate to
                                                be enabled. (Alpha) Using the namespace
                                                field of dataSourceRef requires the
                                                CrossNamespaceVolumeDataSource feature
                                                gate to be enabled.'
                                              properties:
                                                apiGroup:
                                                  description: APIGroup is the group
                                                    for the resource being referenced.
                                                    If APIGroup is not specified,
                                                    the specified Kind must be in
                                                    the core API group. For any other
                                                    third-party types, APIGroup is
                                                    required.
                                                  type: string
                                                kind:
                                                  description: Kind is the type of
                                                    resource being referenced
                                                  type: string
                                                name:
                                                  description: Name is the name of
                                                    resource being referenced
                                                  type: string
                                                namespace:
                                                  description: Namespace is the namespace
                                                    of resource being referenced Note
                                                    that when a namespace is specified,
                                                    a gateway.networking.k8s.io/ReferenceGrant
                                                    object is required in the referent
                                                    namespace to allow that namespace's
                                                    owner to accept the reference.
                                                    See the ReferenceGrant documentation
                                                    for details. (Alpha) This field
                                                    requires the CrossNamespaceVolumeDataSource
                                                    feature gate to be enabled.
                                                  type: string
                                              required:
                                              - kind
                                              - name
                                              type: object
                                            resources:
                                              description: 'resources represents the
                                                minimum resources the volume should
                                                have. If RecoverVolumeExpansionFailure
                                                feature is enabled users are allowed
                                                to specify resource requirements that
                                                are lower than previous value but
                                                must still be higher than capacity
                                                recorded in the status field of the
                                                claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources'
                                              properties:
                                                claims:
                                                  description: "Claims lists the names
                                                    of resources, defined in spec.resourceClaims,
                                                    that are used by this container.
                                                    \n This is an alpha field and
                                                    requires enabling the DynamicResourceAllocation
                                                    feature gate. \n This field is
                                                    immutable. It can only be set
                                                    for containers."
                                                  items:
                                                    description: ResourceClaim references
                                                      one entry in PodSpec.ResourceClaims.
                                                    properties:
                                                      name:
                                                        description: Name must match
                                                          the name of one entry in
                                                          pod.spec.resourceClaims
                                                          of the Pod where this field
                                                          is used. It makes that resource
                                                          available inside a container.
                                                        type: string
                                                    required:
                                                    - name
                                                    type: object
                                                  type: array
                                                  x-kubernetes-list-map-keys:
                                                  - name
                                                  x-kubernetes-list-type: map
                                                limits:
                                                  additionalProperties:
                                                    anyOf:
                                                    - type: integer
                                                    - type: string
                                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                    x-kubernetes-int-or-string: true
                                                  description: 'Limits describes the
                                                    maximum amount of compute resources
                                                    allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                                  type: object
                                                requests:
                                                  additionalProperties:
                                                    anyOf:
                                                    - type: integer
                                                    - type: string
                                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                    x-kubernetes-int-or-string: true
                                                  description: 'Requests describes
                                                    the minimum amount of compute
                                                    resources required. If Requests
                                                    is omitted for a container, it
                                                    defaults to Limits if that is
                                                    explicitly specified, otherwise
                                                    to an implementation-defined value.
                                                    Requests cannot exceed Limits.
                                                    More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                                  type: object
                                              type: object
                                            selector:
                                              description: selector is a label query
                                                over volumes to consider for binding.
                                              properties:
                                                matchExpressions:
                                                  description: matchExpressions is
                                                    a list of label selector requirements.
                                                    The requirements are ANDed.
                                                  items:
                                                    description: A label selector
                                                      requirement is a selector that
                                                      contains values, a key, and
                                                      an operator that relates the
                                                      key and values.
                                                    properties:
                                                      key:
                                                        description: key is the label
                                                          key that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: operator represents
                                                          a key's relationship to
                                                          a set of values. Valid operators
                                                          are In, NotIn, Exists and
                                                          DoesNotExist.
                                                        type: string
                                                      values:
                                                        description: values is an
                                                          array of string values.
                                                          If the operator is In or
                                                          NotIn, the values array
                                                          must be non-empty. If the
                                                          operator is Exists or DoesNotExist,
                                                          the values array must be
                                                          empty. This array is replaced
                                                          during a strategic merge
                                                          patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  description: matchLabels is a map
                                                    of {key,value} pairs. A single
                                                    {key,value} in the matchLabels
                                                    map is equivalent to an element
                                                    of matchExpressions, whose key
                                                    field is "key", the operator is
                                                    "In", and the values array contains
                                                    only "value". The requirements
                                                    are ANDed.
                                                  type: object
                                              type: object
                                              x-kubernetes-map-type: atomic
                                            storageClassName:
                                              description: 'storageClassName is the
                                                name of the StorageClass required
                                                by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
                                              type: string
                                            volumeMode:
                                              description: volumeMode defines what
                                                type of volume is required by the
                                                claim. Value of Filesystem is implied
                                                when not included in claim spec.
                                              type: string
                                            volumeName:
                                              description: volumeName is the binding
                                                reference to the PersistentVolume
                                                backing this claim.
                                              type: string
                                          type: object
                                      required:
                                      - spec
                                      type: object
                                  type: object
                                fc:
                                  description: fc represents a Fibre Channel resource
                                    that is attached to a kubelet's host machine and
                                    then exposed to the pod.
                                  properties:
                                    fsType:
                                      description: 'fsType is the filesystem type
                                        to mount. Must be a filesystem type supported
                                        by the host operating system. Ex. "ext4",
                                        "xfs", "ntfs". Implicitly inferred to be "ext4"
                                        if unspecified. TODO: how do we prevent errors
                                        in the filesystem from compromising the machine'
                                      type: string
                                    lun:
                                      description: 'lun is Optional: FC target lun
                                        number'
                                      format: int32
                                      type: integer
                                    readOnly:
                                      description: 'readOnly is Optional: Defaults
                                        to false (read/write). ReadOnly here will
                                        force the ReadOnly setting in VolumeMounts.'
                                      type: boolean
                                    targetWWNs:
                                      description: 'targetWWNs is Optional: FC target
                                        worldwide names (WWNs)'
                                      items:
                                        type: string
                                      type: array
                                    wwids:
                                      description: 'wwids Optional: FC volume world
                                        wide identifiers (wwids) Either wwids or combination
                                        of targetWWNs and lun must be set, but not
                                        both simultaneously.'
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                flexVolume:
                                  description: flexVolume represents a generic volume
                                    resource that is provisioned/attached using an
                                    exec based plugin.
                                  properties:
                                    driver:
                                      description: driver is the name of the driver
                                        to use for this volume.
                                      type: string
                                    fsType:
                                      description: fsType is the filesystem type to
                                        mount. Must be a filesystem type supported
                                        by the host operating system. Ex. "ext4",
                                        "xfs", "ntfs". The default filesystem depends
                                        on FlexVolume script.
                                      type: string
                                    options:
                                      additionalProperties:
                                        type: string
                                      description: 'options is Optional: this field
                                        holds extra command options if any.'
                                      type: object
                                    readOnly:
                                      description: 'readOnly is Optional: defaults
                                        to false (read/write). ReadOnly here will
                                        force the ReadOnly setting in VolumeMounts.'
                                      type: boolean
                                    secretRef:
                                      description: 'secretRef is Optional: secretRef
                                        is reference to the secret object containing
                                        sensitive information to pass to the plugin
                                        scripts. This may be empty if no secret object
                                        is specified. If the secret object contains
                                        more than one secret, all secrets are passed
                                        to the plugin scripts.'
                                      properties:
                                        name:
                                          description: 'Name of the referent. More
                                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion,
                                            kind, uid?'
                                          type: string
                                      type: object
                                      x-kubernetes-map-type: atomic
                                  required:
                                  - driver
                                  type: object
                                flocker:
                                  description: flocker represents a Flocker volume
                                    attached to a kubelet's host machine. This depends
                                    on the Flocker control service being running
                                  properties:
                                    datasetName:
                                      description: datasetName is Name of the dataset
                                        stored as metadata -> name on the dataset
                                        for Flocker should be considered as deprecated
                                      type: string
                                    datasetUUID:
                                      description: datasetUUID is the UUID of the
                                        dataset. This is unique identifier of a Flocker
                                        dataset
                                      type: string
                                  type: object
                                gcePersistentDisk:
                                  description: 'gcePersistentDisk represents a GCE
                                    Disk resource that is attached to a kubelet''s
                                    host machine and then exposed to the pod. More
                                    info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                                  properties:
                                    fsType:
                                      description: 'fsType is filesystem type of the
                                        volume that you want to mount. Tip: Ensure
                                        that the filesystem type is supported by the
                                        host operating system. Examples: "ext4", "xfs",
                                        "ntfs". Implicitly inferred to be "ext4" if
                                        unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                                        TODO: how do we prevent errors in the filesystem
                                        from compromising the machine'
                                      type: string
                                    partition:
                                      description: 'partition is the partition in
                                        the volume that you want to mount. If omitted,
                                        the default is to mount by volume name. Examples:
                                        For volume /dev/sda1, you specify the partition
                                        as "1". Similarly, the volume partition for
                                        /dev/sda is "0" (or you can leave the property
                                        empty). More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                                      format: int32
                                      type: integer
                                    pdName:
                                      description: 'pdName is unique name of the PD
                                        resource in GCE. Used to identify the disk
                                        in GCE. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                                      type: string
                                    readOnly:
                                      description: 'readOnly here will force the ReadOnly
                                        setting in VolumeMounts. Defaults to false.
                                        More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                                      type: boolean
                                  required:
                                  - pdName
                                  type: object
                                gitRepo:
                                  description: 'gitRepo represents a git repository
                                    at a particular revision. DEPRECATED: GitRepo
                                    is deprecated. To provision a container with a
                                    git repo, mount an EmptyDir into an InitContainer
                                    that clones the repo using git, then mount the
                                    EmptyDir into the Pod''s container.'
                                  properties:
                                    directory:
                                      description: directory is the target directory
                                        name. Must not contain or start with '..'.  If
                                        '.' is supplied, the volume directory will
                                        be the git repository.  Otherwise, if specified,
                                        the volume will contain the git repository
                                        in the subdirectory with the given name.
                                      type: string
                                    repository:
                                      description: repository is the URL
                                      type: string
                                    revision:
                                      description: revision is the commit hash for
                                        the specified revision.
                                      type: string
                                  required:
                                  - repository
                                  type: object
                                glusterfs:
                                  description: 'glusterfs represents a Glusterfs mount
                                    on the host that shares a pod''s lifetime. More
                                    info: https://examples.k8s.io/volumes/glusterfs/README.md'
                                  properties:
                                    endpoints:
                                      description: 'endpoints is the endpoint name
                                        that details Glusterfs topology. More info:
                                        https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
                                      type: string
                                    path:
                                      description: 'path is the Glusterfs volume path.
                                        More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
                                      type: string
                                    readOnly:
                                      description: 'readOnly here will force the Glusterfs
                                        volume to be mounted with read-only permissions.
                                        Defaults to false. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
                                      type: boolean
                                  required:
                                  - endpoints
                                  - path
                                  type: object
                                hostPath:
                                  description: 'hostPath represents a pre-existing
                                    file or directory on the host machine that is
                                    directly exposed to the container. This is generally
                                    used for system agents or other privileged things
                                    that are allowed to see the host machine. Most
                                    containers will NOT need this. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
                                    --- TODO(jonesdl) We need to restrict who can
                                    use host directory mounts and who can/can not
                                    mount host directories as read/write.'
                                  properties:
                                    path:
                                      description: 'path of the directory on the host.
                                        If the path is a symlink, it will follow the
                                        link to the real path. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath'
                                      type: string
                                    type:
                                      description: 'type for HostPath Volume Defaults
                                        to "" More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath'
                                      type: string
                                  required:
                                  - path
                                  type: object
                                iscsi:
                                  description: 'iscsi represents an ISCSI Disk resource
                                    that is attached to a kubelet''s host machine
                                    and then exposed to the pod. More info: https://examples.k8s.io/volumes/iscsi/README.md'
                                  properties:
                                    chapAuthDiscovery:
                                      description: chapAuthDiscovery defines whether
                                        support iSCSI Discovery CHAP authentication
                                      type: boolean
                                    chapAuthSession:
                                      description: chapAuthSession defines whether
                                        support iSCSI Session CHAP authentication
                                      type: boolean
                                    fsType:
                                      description: 'fsType is the filesystem type
                                        of the volume that you want to mount. Tip:
                                        Ensure that the filesystem type is supported
                                        by the host operating system. Examples: "ext4",
                                        "xfs", "ntfs". Implicitly inferred to be "ext4"
                                        if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi
                                        TODO: how do we prevent errors in the filesystem
                                        from compromising the machine'
                                      type: string
                                    initiatorName:
                                      description: initiatorName is the custom iSCSI
                                        Initiator Name. If initiatorName is specified
                                        with iscsiInterface simultaneously, new iSCSI
                                        interface <target portal>:<volume name> will
                                        be created for the connection.
                                      type: string
                                    iqn:
                                      description: iqn is the target iSCSI Qualified
                                        Name.
                                      type: string
                                    iscsiInterface:
                                      description: iscsiInterface is the interface
                                        Name that uses an iSCSI transport. Defaults
                                        to 'default' (tcp).
                                      type: string
                                    lun:
                                      description: lun represents iSCSI Target Lun
                                        number.
                                      format: int32
                                      type: integer
                                    portals:
                                      description: portals is the iSCSI Target Portal
                                        List. The portal is either an IP or ip_addr:port
                                        if the port is other than default (typically
                                        TCP ports 860 and 3260).
                                      items:
                                        type: string
                                      type: array
                                    readOnly:
                                      description: readOnly here will force the ReadOnly
                                        setting in VolumeMounts. Defaults to false.
                                      type: boolean
                                    secretRef:
                                      description: secretRef is the CHAP Secret for
                                        iSCSI target and initiator authentication
                                      properties:
                                        name:
                                          description: 'Name of the referent. More
                                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion,
                                            kind, uid?'
                                          type: string
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    targetPortal:
                                      description: targetPortal is iSCSI Target Portal.
                                        The Portal is either an IP or ip_addr:port
                                        if the port is other than default (typically
                                        TCP ports 860 and 3260).
                                      type: string
                                  required:
                                  - iqn
                                  - lun
                                  - targetPortal
                                  type: object
                                name:
                                  description: 'name of the volume. Must be a DNS_LABEL
                                    and unique within the pod. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                                nfs:
                                  description: 'nfs represents an NFS mount on the
                                    host that shares a pod''s lifetime More info:
                                    https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                                  properties:
                                    path:
                                      description: 'path that is exported by the NFS
                                        server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                                      type: string
                                    readOnly:
                                      description: 'readOnly here will force the NFS
                                        export to be mounted with read-only permissions.
                                        Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                                      type: boolean
                                    server:
                                      description: 'server is the hostname or IP address
                                        of the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                                      type: string
                                  required:
                                  - path
                                  - server
                                  type: object
                                persistentVolumeClaim:
                                  description: 'persistentVolumeClaimVolumeSource
                                    represents a reference to a PersistentVolumeClaim
                                    in the same namespace. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                                  properties:
                                    claimName:
                                      description: 'claimName is the name of a PersistentVolumeClaim
                                        in the same namespace as the pod using this
                                        volume. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                                      type: string
                                    readOnly:
                                      description: readOnly Will force the ReadOnly
                                        setting in VolumeMounts. Default false.
                                      type: boolean
                                  required:
                                  - claimName
                                  type: object
                                photonPersistentDisk:
                                  description: photonPersistentDisk represents a PhotonController
                                    persistent disk attached and mounted on kubelets
                                    host machine
                                  properties:
                                    fsType:
                                      description: fsType is the filesystem type to
                                        mount. Must be a filesystem type supported
                                        by the host operating system. Ex. "ext4",
                                        "xfs", "ntfs". Implicitly inferred to be "ext4"
                                        if unspecified.
                                      type: string
                                    pdID:
                                      description: pdID is the ID that identifies
                                        Photon Controller persistent disk
                                      type: string
                                  required:
                                  - pdID
                                  type: object
                                portworxVolume:
                                  description: portworxVolume represents a portworx
                                    volume attached and mounted on kubelets host machine
                                  properties:
                                    fsType:
                                      description: fSType represents the filesystem
                                        type to mount Must be a filesystem type supported
                                        by the host operating system. Ex. "ext4",
                                        "xfs". Implicitly inferred to be "ext4" if
                                        unspecified.
                                      type: string
                                    readOnly:
                                      description: readOnly defaults to false (read/write).
                                        ReadOnly here will force the ReadOnly setting
                                        in VolumeMounts.
                                      type: boolean
                                    volumeID:
                                      description: volumeID uniquely identifies a
                                        Portworx volume
                                      type: string
                                  required:
                                  - volumeID
                                  type: object
                                projected:
                                  description: projected items for all in one resources
                                    secrets, configmaps, and downward API
                                  properties:
                                    defaultMode:
                                      description: defaultMode are the mode bits used
                                        to set permissions on created files by default.
                                        Must be an octal value between 0000 and 0777
                                        or a decimal value between 0 and 511. YAML
                                        accepts both octal and decimal values, JSON
                                        requires decimal values for mode bits. Directories
                                        within the path are not affected by this setting.
                                        This might be in conflict with other options
                                        that affect the file mode, like fsGroup, and
                                        the result can be other mode bits set.
                                      format: int32
                                      type: integer
                                    sources:
                                      description: sources is the list of volume projections
                                      items:
                                        description: Projection that may be projected
                                          along with other supported volume types
                                        properties:
                                          configMap:
                                            description: configMap information about
                                              the configMap data to project
                                            properties:
                                              items:
                                                description: items if unspecified,
                                                  each key-value pair in the Data
                                                  field of the referenced ConfigMap
                                                  will be projected into the volume
                                                  as a file whose name is the key
                                                  and content is the value. If specified,
                                                  the listed keys will be projected
                                                  into the specified paths, and unlisted
                                                  keys will not be present. If a key
                                                  is specified which is not present
                                                  in the ConfigMap, the volume setup
                                                  will error unless it is marked optional.
                                                  Paths must be relative and may not
                                                  contain the '..' path or start with
                                                  '..'.
                                                items:
                                                  description: Maps a string key to
                                                    a path within a volume.
                                                  properties:
                                                    key:
                                                      description: key is the key
                                                        to project.
                                                      type: string
                                                    mode:
                                                      description: 'mode is Optional:
                                                        mode bits used to set permissions
                                                        on this file. Must be an octal
                                                        value between 0000 and 0777
                                                        or a decimal value between
                                                        0 and 511. YAML accepts both
                                                        octal and decimal values,
                                                        JSON requires decimal values
                                                        for mode bits. If not specified,
                                                        the volume defaultMode will
                                                        be used. This might be in
                                                        conflict with other options
                                                        that affect the file mode,
                                                        like fsGroup, and the result
                                                        can be other mode bits set.'
                                                      format: int32
                                                      type: integer
                                                    path:
                                                      description: path is the relative
                                                        path of the file to map the
                                                        key to. May not be an absolute
                                                        path. May not contain the
                                                        path element '..'. May not
                                                        start with the string '..'.
                                                      type: string
                                                  required:
                                                  - key
                                                  - path
                                                  type: object
                                                type: array
                                              name:
                                                description: 'Name of the referent.
                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                  TODO: Add other useful fields. apiVersion,
                                                  kind, uid?'
                                                type: string
                                              optional:
                                                description: optional specify whether
                                                  the ConfigMap or its keys must be
                                                  defined
                                                type: boolean
                                            type: object
                                            x-kubernetes-map-type: atomic
                                          downwardAPI:
                                            description: downwardAPI information about
                                              the downwardAPI data to project
                                            properties:
                                              items:
                                                description: Items is a list of DownwardAPIVolume
                                                  file
                                                items:
                                                  description: DownwardAPIVolumeFile
                                                    represents information to create
                                                    the file containing the pod field
                                                  properties:
                                                    fieldRef:
                                                      description: 'Required: Selects
                                                        a field of the pod: only annotations,
                                                        labels, name and namespace
                                                        are supported.'
                                                      properties:
                                                        apiVersion:
                                                          description: Version of
                                                            the schema the FieldPath
                                                            is written in terms of,
                                                            defaults to "v1".
                                                          type: string
                                                        fieldPath:
                                                          description: Path of the
                                                            field to select in the
                                                            specified API version.
                                                          type: string
                                                      required:
                                                      - fieldPath
                                                      type: object
                                                      x-kubernetes-map-type: atomic
                                                    mode:
                                                      description: 'Optional: mode
                                                        bits used to set permissions
                                                        on this file, must be an octal
                                                        value between 0000 and 0777
                                                        or a decimal value between
                                                        0 and 511. YAML accepts both
                                                        octal and decimal values,
                                                        JSON requires decimal values
                                                        for mode bits. If not specified,
                                                        the volume defaultMode will
                                                        be used. This might be in
                                                        conflict with other options
                                                        that affect the file mode,
                                                        like fsGroup, and the result
                                                        can be other mode bits set.'
                                                      format: int32
                                                      type: integer
                                                    path:
                                                      description: 'Required: Path
                                                        is  the relative path name
                                                        of the file to be created.
                                                        Must not be absolute or contain
                                                        the ''..'' path. Must be utf-8
                                                        encoded. The first item of
                                                        the relative path must not
                                                        start with ''..'''
                                                      type: string
                                                    resourceFieldRef:
                                                      description: 'Selects a resource
                                                        of the container: only resources
                                                        limits and requests (limits.cpu,
                                                        limits.memory, requests.cpu
                                                        and requests.memory) are currently
                                                        supported.'
                                                      properties:
                                                        containerName:
                                                          description: 'Container
                                                            name: required for volumes,
                                                            optional for env vars'
                                                          type: string
                                                        divisor:
                                                          anyOf:
                                                          - type: integer
                                                          - type: string
                                                          description: Specifies the
                                                            output format of the exposed
                                                            resources, defaults to
                                                            "1"
                                                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                          x-kubernetes-int-or-string: true
                                                        resource:
                                                          description: 'Required:
                                                            resource to select'
                                                          type: string
                                                      required:
                                                      - resource
                                                      type: object
                                                      x-kubernetes-map-type: atomic
                                                  required:
                                                  - path
                                                  type: object
                                                type: array
                                            type: object
                                          secret:
                                            description: secret information about
                                              the secret data to project
                                            properties:
                                              items:
                                                description: items if unspecified,
                                                  each key-value pair in the Data
                                                  field of the referenced Secret will
                                                  be projected into the volume as
                                                  a file whose name is the key and
                                                  content is the value. If specified,
                                                  the listed keys will be projected
                                                  into the specified paths, and unlisted
                                                  keys will not be present. If a key
                                                  is specified which is not present
                                                  in the Secret, the volume setup
                                                  will error unless it is marked optional.
                                                  Paths must be relative and may not
                                                  contain the '..' path or start with
                                                  '..'.
                                                items:
                                                  description: Maps a string key to
                                                    a path within a volume.
                                                  properties:
                                                    key:
                                                      description: key is the key
                                                        to project.
                                                      type: string
                                                    mode:
                                                      description: 'mode is Optional:
                                                        mode bits used to set permissions
                                                        on this file. Must be an octal
                                                        value between 0000 and 0777
                                                        or a decimal value between
                                                        0 and 511. YAML accepts both
                                                        octal and decimal values,
                                                        JSON requires decimal values
                                                        for mode bits. If not specified,
                                                        the volume defaultMode will
                                                        be used. This might be in
                                                        conflict with other options
                                                        that affect the file mode,
                                                        like fsGroup, and the result
                                                        can be other mode bits set.'
                                                      format: int32
                                                      type: integer
                                                    path:
                                                      description: path is the relative
                                                        path of the file to map the
                                                        key to. May not be an absolute
                                                        path. May not contain the
                                                        path element '..'. May not
                                                        start with the string '..'.
                                                      type: string
                                                  required:
                                                  - key
                                                  - path
                                                  type: object
                                                type: array
                                              name:
                                                description: 'Name of the referent.
                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                  TODO: Add other useful fields. apiVersion,
                                                  kind, uid?'
                                                type: string
                                              optional:
                                                description: optional field specify
                                                  whether the Secret or its key must
                                                  be defined
                                                type: boolean
                                            type: object
                                            x-kubernetes-map-type: atomic
                                          serviceAccountToken:
                                            description: serviceAccountToken is information
                                              about the serviceAccountToken data to
                                              project
                                            properties:
                                              audience:
                                                description: audience is the intended
                                                  audience of the token. A recipient
                                                  of a token must identify itself
                                                  with an identifier specified in
                                                  the audience of the token, and otherwise
                                                  should reject the token. The audience
                                                  defaults to the identifier of the
                                                  apiserver.
                                                type: string
                                              expirationSeconds:
                                                description: expirationSeconds is
                                                  the requested duration of validity
                                                  of the service account token. As
                                                  the token approaches expiration,
                                                  the kubelet volume plugin will proactively
                                                  rotate the service account token.
                                                  The kubelet will start trying to
                                                  rotate the token if the token is
                                                  older than 80 percent of its time
                                                  to live or if the token is older
                                                  than 24 hours.Defaults to 1 hour
                                                  and must be at least 10 minutes.
                                                format: int64
                                                type: integer
                                              path:
                                                description: path is the path relative
                                                  to the mount point of the file to
                                                  project the token into.
                                                type: string
                                            required:
                                            - path
                                            type: object
                                        type: object
                                      type: array
                                  type: object
                                quobyte:
                                  description: quobyte represents a Quobyte mount
                                    on the host that shares a pod's lifetime
                                  properties:
                                    group:
                                      description: group to map volume access to Default
                                        is no group
                                      type: string
                                    readOnly:
                                      description: readOnly here will force the Quobyte
                                        volume to be mounted with read-only permissions.
                                        Defaults to false.
                                      type: boolean
                                    registry:
                                      description: registry represents a single or
                                        multiple Quobyte Registry services specified
                                        as a string as host:port pair (multiple entries
                                        are separated with commas) which acts as the
                                        central registry for volumes
                                      type: string
                                    tenant:
                                      description: tenant owning the given Quobyte
                                        volume in the Backend Used with dynamically
                                        provisioned Quobyte volumes, value is set
                                        by the plugin
                                      type: string
                                    user:
                                      description: user to map volume access to Defaults
                                        to serivceaccount user
                                      type: string
                                    volume:
                                      description: volume is a string that references
                                        an already created Quobyte volume by name.
                                      type: string
                                  required:
                                  - registry
                                  - volume
                                  type: object
                                rbd:
                                  description: 'rbd represents a Rados Block Device
                                    mount on the host that shares a pod''s lifetime.
                                    More info: https://examples.k8s.io/volumes/rbd/README.md'
                                  properties:
                                    fsType:
                                      description: 'fsType is the filesystem type
                                        of the volume that you want to mount. Tip:
                                        Ensure that the filesystem type is supported
                                        by the host operating system. Examples: "ext4",
                                        "xfs", "ntfs". Implicitly inferred to be "ext4"
                                        if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd
                                        TODO: how do we prevent errors in the filesystem
                                        from compromising the machine'
                                      type: string
                                    image:
                                      description: 'image is the rados image name.
                                        More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                      type: string
                                    keyring:
                                      description: 'keyring is the path to key ring
                                        for RBDUser. Default is /etc/ceph/keyring.
                                        More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                      type: string
                                    monitors:
                                      description: 'monitors is a collection of Ceph
                                        monitors. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                      items:
                                        type: string
                                      type: array
                                    pool:
                                      description: 'pool is the rados pool name. Default
                                        is rbd. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                      type: string
                                    readOnly:
                                      description: 'readOnly here will force the ReadOnly
                                        setting in VolumeMounts. Defaults to false.
                                        More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                      type: boolean
                                    secretRef:
                                      description: 'secretRef is name of the authentication
                                        secret for RBDUser. If provided overrides
                                        keyring. Default is nil. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                      properties:
                                        name:
                                          description: 'Name of the referent. More
                                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion,
                                            kind, uid?'
                                          type: string
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    user:
                                      description: 'user is the rados user name. Default
                                        is admin. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                      type: string
                                  required:
                                  - image
                                  - monitors
                                  type: object
                                scaleIO:
                                  description: scaleIO represents a ScaleIO persistent
                                    volume attached and mounted on Kubernetes nodes.
                                  properties:
                                    fsType:
                                      description: fsType is the filesystem type to
                                        mount. Must be a filesystem type supported
                                        by the host operating system. Ex. "ext4",
                                        "xfs", "ntfs". Default is "xfs".
                                      type: string
                                    gateway:
                                      description: gateway is the host address of
                                        the ScaleIO API Gateway.
                                      type: string
                                    protectionDomain:
                                      description: protectionDomain is the name of
                                        the ScaleIO Protection Domain for the configured
                                        storage.
                                      type: string
                                    readOnly:
                                      description: readOnly Defaults to false (read/write).
                                        ReadOnly here will force the ReadOnly setting
                                        in VolumeMounts.
                                      type: boolean
                                    secretRef:
                                      description: secretRef references to the secret
                                        for ScaleIO user and other sensitive information.
                                        If this is not provided, Login operation will
                                        fail.
                                      properties:
                                        name:
                                          description: 'Name of the referent. More
                                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion,
                                            kind, uid?'
                                          type: string
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    sslEnabled:
                                      description: sslEnabled Flag enable/disable
                                        SSL communication with Gateway, default false
                                      type: boolean
                                    storageMode:
                                      description: storageMode indicates whether the
                                        storage for a volume should be ThickProvisioned
                                        or ThinProvisioned. Default is ThinProvisioned.
                                      type: string
                                    storagePool:
                                      description: storagePool is the ScaleIO Storage
                                        Pool associated with the protection domain.
                                      type: string
                                    system:
                                      description: system is the name of the storage
                                        system as configured in ScaleIO.
                                      type: string
                                    volumeName:
                                      description: volumeName is the name of a volume
                                        already created in the ScaleIO system that
                                        is associated with this volume source.
                                      type: string
                                  required:
                                  - gateway
                                  - secretRef
                                  - system
                                  type: object
                                secret:
                                  description: 'secret represents a secret that should
                                    populate this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret'
                                  properties:
                                    defaultMode:
                                      description: 'defaultMode is Optional: mode
                                        bits used to set permissions on created files
                                        by default. Must be an octal value between
                                        0000 and 0777 or a decimal value between 0
                                        and 511. YAML accepts both octal and decimal
                                        values, JSON requires decimal values for mode
                                        bits. Defaults to 0644. Directories within
                                        the path are not affected by this setting.
                                        This might be in conflict with other options
                                        that affect the file mode, like fsGroup, and
                                        the result can be other mode bits set.'
                                      format: int32
                                      type: integer
                                    items:
                                      description: items If unspecified, each key-value
                                        pair in the Data field of the referenced Secret
                                        will be projected into the volume as a file
                                        whose name is the key and content is the value.
                                        If specified, the listed keys will be projected
                                        into the specified paths, and unlisted keys
                                        will not be present. If a key is specified
                                        which is not present in the Secret, the volume
                                        setup will error unless it is marked optional.
                                        Paths must be relative and may not contain
                                        the '..' path or start with '..'.
                                      items:
                                        description: Maps a string key to a path within
                                          a volume.
                                        properties:
                                          key:
                                            description: key is the key to project.
                                            type: string
                                          mode:
                                            description: 'mode is Optional: mode bits
                                              used to set permissions on this file.
                                              Must be an octal value between 0000
                                              and 0777 or a decimal value between
                                              0 and 511. YAML accepts both octal and
                                              decimal values, JSON requires decimal
                                              values for mode bits. If not specified,
                                              the volume defaultMode will be used.
                                              This might be in conflict with other
                                              options that affect the file mode, like
                                              fsGroup, and the result can be other
                                              mode bits set.'
                                            format: int32
                                            type: integer
                                          path:
                                            description: path is the relative path
                                              of the file to map the key to. May not
                                              be an absolute path. May not contain
                                              the path element '..'. May not start
                                              with the string '..'.
                                            type: string
                                        required:
                                        - key
                                        - path
                                        type: object
                                      type: array
                                    optional:
                                      description: optional field specify whether
                                        the Secret or its keys must be defined
                                      type: boolean
                                    secretName:
                                      description: 'secretName is the name of the
                                        secret in the pod''s namespace to use. More
                                        info: https://kubernetes.io/docs/concepts/storage/volumes#secret'
                                      type: string
                                  type: object
                                storageos:
                                  description: storageOS represents a StorageOS volume
                                    attached and mounted on Kubernetes nodes.
                                  properties:
                                    fsType:
                                      description: fsType is the filesystem type to
                                        mount. Must be a filesystem type supported
                                        by the host operating system. Ex. "ext4",
                                        "xfs", "ntfs". Implicitly inferred to be "ext4"
                                        if unspecified.
                                      type: string
                                    readOnly:
                                      description: readOnly defaults to false (read/write).
                                        ReadOnly here will force the ReadOnly setting
                                        in VolumeMounts.
                                      type: boolean
                                    secretRef:
                                      description: secretRef specifies the secret
                                        to use for obtaining the StorageOS API credentials.  If
                                        not specified, default values will be attempted.
                                      properties:
                                        name:
                                          description: 'Name of the referent. More
                                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion,
                                            kind, uid?'
                                          type: string
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    volumeName:
                                      description: volumeName is the human-readable
                                        name of the StorageOS volume.  Volume names
                                        are only unique within a namespace.
                                      type: string
                                    volumeNamespace:
                                      description: volumeNamespace specifies the scope
                                        of the volume within StorageOS.  If no namespace
                                        is specified then the Pod's namespace will
                                        be used.  This allows the Kubernetes name
                                        scoping to be mirrored within StorageOS for
                                        tighter integration. Set VolumeName to any
                                        name to override the default behaviour. Set
                                        to "default" if you are not using namespaces
                                        within StorageOS. Namespaces that do not pre-exist
                                        within StorageOS will be created.
                                      type: string
                                  type: object
                                vsphereVolume:
                                  description: vsphereVolume represents a vSphere
                                    volume attached and mounted on kubelets host machine
                                  properties:
                                    fsType:
                                      description: fsType is filesystem type to mount.
                                        Must be a filesystem type supported by the
                                        host operating system. Ex. "ext4", "xfs",
                                        "ntfs". Implicitly inferred to be "ext4" if
                                        unspecified.
                                      type: string
                                    storagePolicyID:
                                      description: storagePolicyID is the storage
                                        Policy Based Management (SPBM) profile ID
                                        associated with the StoragePolicyName.
                                      type: string
                                    storagePolicyName:
                                      description: storagePolicyName is the storage
                                        Policy Based Management (SPBM) profile name.
                                      type: string
                                    volumePath:
                                      description: volumePath is the path that identifies
                                        vSphere volume vmdk
                                      type: string
                                  required:
                                  - volumePath
                                  type: object
                              required:
                              - name
                              type: object
                            type: array
                        required:
                        - containers
                        type: object
                    type: object
                  ttlSecondsAfterFinished:
                    description: ttlSecondsAfterFinished limits the lifetime of a
                      Job that has finished execution (either Complete or Failed).
                      If this field is set, ttlSecondsAfterFinished after the Job
                      finishes, it is eligible to be automatically deleted. When the
                      Job is being deleted, its lifecycle guarantees (e.g. finalizers)
                      will be honored. If this field is unset, the Job won't be automatically
                      deleted. If this field is set to zero, the Job becomes eligible
                      to be deleted immediately after it finishes.
                    format: int32
                    type: integer
                required:
                - template
                type: object
              maxReplicaCount:
                format: int32
                type: integer
              minReplicaCount:
                format: int32
                type: integer
              pollingInterval:
                format: int32
                type: integer
              rollout:
                description: Rollout defines the strategy for job rollouts
                properties:
                  propagationPolicy:
                    type: string
                  strategy:
                    type: string
                type: object
              rolloutStrategy:
                type: string
              scalingStrategy:
                description: ScalingStrategy defines the strategy of Scaling
                properties:
                  customScalingQueueLengthDeduction:
                    format: int32
                    type: integer
                  customScalingRunningJobPercentage:
                    type: string
                  multipleScalersCalculation:
                    type: string
                  pendingPodConditions:
                    items:
                      type: string
                    type: array
                  strategy:
                    type: string
                type: object
              successfulJobsHistoryLimit:
                format: int32
                type: integer
              triggers:
                items:
                  description: ScaleTriggers reference the scaler that will be used
                  properties:
                    authenticationRef:
                      description: AuthenticationRef points to the TriggerAuthentication
                        or ClusterTriggerAuthentication object that is used to authenticate
                        the scaler with the environment
                      properties:
                        kind:
                          description: Kind of the resource being referred to. Defaults
                            to TriggerAuthentication.
                          type: string
                        name:
                          type: string
                      required:
                      - name
                      type: object
                    metadata:
                      additionalProperties:
                        type: string
                      type: object
                    name:
                      type: string
                    type:
                      type: string
                    useCachedMetrics:
                      type: boolean
                  required:
                  - metadata
                  - type
                  type: object
                type: array
            required:
            - jobTargetRef
            - triggers
            type: object
          status:
            description: ScaledJobStatus defines the observed state of ScaledJob
            properties:
              Paused:
                type: string
              conditions:
                description: Conditions an array representation to store multiple
                  Conditions
                items:
                  description: Condition to store the condition state
                  properties:
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              lastActiveTime:
                format: date-time
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: openfunction/charts/keda/templates/crds/crd-scaledobjects.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  namespace: keda
  annotations:
    controller-gen.kubebuilder.io/version: v0.12.0
  labels:
    app.kubernetes.io/name: keda-operator    
    helm.sh/chart: keda-2.11.2
    app.kubernetes.io/component: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-openfunction
    app.kubernetes.io/part-of: keda-operator
    app.kubernetes.io/version: 2.11.2
  name: scaledobjects.keda.sh
spec:
  group: keda.sh
  names:
    kind: ScaledObject
    listKind: ScaledObjectList
    plural: scaledobjects
    shortNames:
    - so
    singular: scaledobject
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.scaleTargetKind
      name: ScaleTargetKind
      type: string
    - jsonPath: .spec.scaleTargetRef.name
      name: ScaleTargetName
      type: string
    - jsonPath: .spec.minReplicaCount
      name: Min
      type: integer
    - jsonPath: .spec.maxReplicaCount
      name: Max
      type: integer
    - jsonPath: .spec.triggers[*].type
      name: Triggers
      type: string
    - jsonPath: .spec.triggers[*].authenticationRef.name
      name: Authentication
      type: string
    - jsonPath: .status.conditions[?(@.type=="Ready")].status
      name: Ready
      type: string
    - jsonPath: .status.conditions[?(@.type=="Active")].status
      name: Active
      type: string
    - jsonPath: .status.conditions[?(@.type=="Fallback")].status
      name: Fallback
      type: string
    - jsonPath: .status.conditions[?(@.type=="Paused")].status
      name: Paused
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ScaledObject is a specification for a ScaledObject resource
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ScaledObjectSpec is the spec for a ScaledObject resource
            properties:
              advanced:
                description: AdvancedConfig specifies advance scaling options
                properties:
                  horizontalPodAutoscalerConfig:
                    description: HorizontalPodAutoscalerConfig specifies horizontal
                      scale config
                    properties:
                      behavior:
                        description: HorizontalPodAutoscalerBehavior configures the
                          scaling behavior of the target in both Up and Down directions
                          (scaleUp and scaleDown fields respectively).
                        properties:
                          scaleDown:
                            description: scaleDown is scaling policy for scaling Down.
                              If not set, the default value is to allow to scale down
                              to minReplicas pods, with a 300 second stabilization
                              window (i.e., the highest recommendation for the last
                              300sec is used).
                            properties:
                              policies:
                                description: policies is a list of potential scaling
                                  polices which can be used during scaling. At least
                                  one policy must be specified, otherwise the HPAScalingRules
                                  will be discarded as invalid
                                items:
                                  description: HPAScalingPolicy is a single policy
                                    which must hold true for a specified past interval.
                                  properties:
                                    periodSeconds:
                                      description: periodSeconds specifies the window
                                        of time for which the policy should hold true.
                                        PeriodSeconds must be greater than zero and
                                        less than or equal to 1800 (30 min).
                                      format: int32
                                      type: integer
                                    type:
                                      description: type is used to specify the scaling
                                        policy.
                                      type: string
                                    value:
                                      description: value contains the amount of change
                                        which is permitted by the policy. It must
                                        be greater than zero
                                      format: int32
                                      type: integer
                                  required:
                                  - periodSeconds
                                  - type
                                  - value
                                  type: object
                                type: array
                                x-kubernetes-list-type: atomic
                              selectPolicy:
                                description: selectPolicy is used to specify which
                                  policy should be used. If not set, the default value
                                  Max is used.
                                type: string
                              stabilizationWindowSeconds:
                                description: 'stabilizationWindowSeconds is the number
                                  of seconds for which past recommendations should
                                  be considered while scaling up or scaling down.
                                  StabilizationWindowSeconds must be greater than
                                  or equal to zero and less than or equal to 3600
                                  (one hour). If not set, use the default values:
                                  - For scale up: 0 (i.e. no stabilization is done).
                                  - For scale down: 300 (i.e. the stabilization window
                                  is 300 seconds long).'
                                format: int32
                                type: integer
                            type: object
                          scaleUp:
                            description: 'scaleUp is scaling policy for scaling Up.
                              If not set, the default value is the higher of: * increase
                              no more than 4 pods per 60 seconds * double the number
                              of pods per 60 seconds No stabilization is used.'
                            properties:
                              policies:
                                description: policies is a list of potential scaling
                                  polices which can be used during scaling. At least
                                  one policy must be specified, otherwise the HPAScalingRules
                                  will be discarded as invalid
                                items:
                                  description: HPAScalingPolicy is a single policy
                                    which must hold true for a specified past interval.
                                  properties:
                                    periodSeconds:
                                      description: periodSeconds specifies the window
                                        of time for which the policy should hold true.
                                        PeriodSeconds must be greater than zero and
                                        less than or equal to 1800 (30 min).
                                      format: int32
                                      type: integer
                                    type:
                                      description: type is used to specify the scaling
                                        policy.
                                      type: string
                                    value:
                                      description: value contains the amount of change
                                        which is permitted by the policy. It must
                                        be greater than zero
                                      format: int32
                                      type: integer
                                  required:
                                  - periodSeconds
                                  - type
                                  - value
                                  type: object
                                type: array
                                x-kubernetes-list-type: atomic
                              selectPolicy:
                                description: selectPolicy is used to specify which
                                  policy should be used. If not set, the default value
                                  Max is used.
                                type: string
                              stabilizationWindowSeconds:
                                description: 'stabilizationWindowSeconds is the number
                                  of seconds for which past recommendations should
                                  be considered while scaling up or scaling down.
                                  StabilizationWindowSeconds must be greater than
                                  or equal to zero and less than or equal to 3600
                                  (one hour). If not set, use the default values:
                                  - For scale up: 0 (i.e. no stabilization is done).
                                  - For scale down: 300 (i.e. the stabilization window
                                  is 300 seconds long).'
                                format: int32
                                type: integer
                            type: object
                        type: object
                      name:
                        type: string
                    type: object
                  restoreToOriginalReplicaCount:
                    type: boolean
                type: object
              cooldownPeriod:
                format: int32
                type: integer
              fallback:
                description: Fallback is the spec for fallback options
                properties:
                  failureThreshold:
                    format: int32
                    type: integer
                  replicas:
                    format: int32
                    type: integer
                required:
                - failureThreshold
                - replicas
                type: object
              idleReplicaCount:
                format: int32
                type: integer
              maxReplicaCount:
                format: int32
                type: integer
              minReplicaCount:
                format: int32
                type: integer
              pollingInterval:
                format: int32
                type: integer
              scaleTargetRef:
                description: ScaleTarget holds the a reference to the scale target
                  Object
                properties:
                  apiVersion:
                    type: string
                  envSourceContainerName:
                    type: string
                  kind:
                    type: string
                  name:
                    type: string
                required:
                - name
                type: object
              triggers:
                items:
                  description: ScaleTriggers reference the scaler that will be used
                  properties:
                    authenticationRef:
                      description: AuthenticationRef points to the TriggerAuthentication
                        or ClusterTriggerAuthentication object that is used to authenticate
                        the scaler with the environment
                      properties:
                        kind:
                          description: Kind of the resource being referred to. Defaults
                            to TriggerAuthentication.
                          type: string
                        name:
                          type: string
                      required:
                      - name
                      type: object
                    metadata:
                      additionalProperties:
                        type: string
                      type: object
                    metricType:
                      description: MetricTargetType specifies the type of metric being
                        targeted, and should be either "Value", "AverageValue", or
                        "Utilization"
                      type: string
                    name:
                      type: string
                    type:
                      type: string
                    useCachedMetrics:
                      type: boolean
                  required:
                  - metadata
                  - type
                  type: object
                type: array
            required:
            - scaleTargetRef
            - triggers
            type: object
          status:
            description: ScaledObjectStatus is the status for a ScaledObject resource
            properties:
              conditions:
                description: Conditions an array representation to store multiple
                  Conditions
                items:
                  description: Condition to store the condition state
                  properties:
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              externalMetricNames:
                items:
                  type: string
                type: array
              health:
                additionalProperties:
                  description: HealthStatus is the status for a ScaledObject's health
                  properties:
                    numberOfFailures:
                      format: int32
                      type: integer
                    status:
                      description: HealthStatusType is an indication of whether the
                        health status is happy or failing
                      type: string
                  type: object
                type: object
              hpaName:
                type: string
              lastActiveTime:
                format: date-time
                type: string
              originalReplicaCount:
                format: int32
                type: integer
              pausedReplicaCount:
                format: int32
                type: integer
              resourceMetricNames:
                items:
                  type: string
                type: array
              scaleTargetGVKR:
                description: GroupVersionKindResource provides unified structure for
                  schema.GroupVersionKind and Resource
                properties:
                  group:
                    type: string
                  kind:
                    type: string
                  resource:
                    type: string
                  version:
                    type: string
                required:
                - group
                - kind
                - resource
                - version
                type: object
              scaleTargetKind:
                type: string
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: openfunction/charts/keda/templates/crds/crd-triggerauthentications.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  namespace: keda
  annotations:
    controller-gen.kubebuilder.io/version: v0.12.0
  labels:
    app.kubernetes.io/name: keda-operator    
    helm.sh/chart: keda-2.11.2
    app.kubernetes.io/component: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-openfunction
    app.kubernetes.io/part-of: keda-operator
    app.kubernetes.io/version: 2.11.2
  name: triggerauthentications.keda.sh
spec:
  group: keda.sh
  names:
    kind: TriggerAuthentication
    listKind: TriggerAuthenticationList
    plural: triggerauthentications
    shortNames:
    - ta
    - triggerauth
    singular: triggerauthentication
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.podIdentity.provider
      name: PodIdentity
      type: string
    - jsonPath: .spec.secretTargetRef[*].name
      name: Secret
      type: string
    - jsonPath: .spec.env[*].name
      name: Env
      type: string
    - jsonPath: .spec.hashiCorpVault.address
      name: VaultAddress
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: TriggerAuthentication defines how a trigger can authenticate
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: TriggerAuthenticationSpec defines the various ways to authenticate
            properties:
              azureKeyVault:
                description: AzureKeyVault is used to authenticate using Azure Key
                  Vault
                properties:
                  cloud:
                    properties:
                      activeDirectoryEndpoint:
                        type: string
                      keyVaultResourceURL:
                        type: string
                      type:
                        type: string
                    required:
                    - type
                    type: object
                  credentials:
                    properties:
                      clientId:
                        type: string
                      clientSecret:
                        properties:
                          valueFrom:
                            properties:
                              secretKeyRef:
                                properties:
                                  key:
                                    type: string
                                  name:
                                    type: string
                                required:
                                - key
                                - name
                                type: object
                            required:
                            - secretKeyRef
                            type: object
                        required:
                        - valueFrom
                        type: object
                      tenantId:
                        type: string
                    required:
                    - clientId
                    - clientSecret
                    - tenantId
                    type: object
                  podIdentity:
                    description: AuthPodIdentity allows users to select the platform
                      native identity mechanism
                    properties:
                      identityId:
                        type: string
                      provider:
                        description: PodIdentityProvider contains the list of providers
                        type: string
                    required:
                    - provider
                    type: object
                  secrets:
                    items:
                      properties:
                        name:
                          type: string
                        parameter:
                          type: string
                        version:
                          type: string
                      required:
                      - name
                      - parameter
                      type: object
                    type: array
                  vaultUri:
                    type: string
                required:
                - secrets
                - vaultUri
                type: object
              env:
                items:
                  description: AuthEnvironment is used to authenticate using environment
                    variables in the destination ScaleTarget spec
                  properties:
                    containerName:
                      type: string
                    name:
                      type: string
                    parameter:
                      type: string
                  required:
                  - name
                  - parameter
                  type: object
                type: array
              hashiCorpVault:
                description: HashiCorpVault is used to authenticate using Hashicorp
                  Vault
                properties:
                  address:
                    type: string
                  authentication:
                    description: VaultAuthentication contains the list of Hashicorp
                      Vault authentication methods
                    type: string
                  credential:
                    description: Credential defines the Hashicorp Vault credentials
                      depending on the authentication method
                    properties:
                      serviceAccount:
                        type: string
                      token:
                        type: string
                    type: object
                  mount:
                    type: string
                  namespace:
                    type: string
                  role:
                    type: string
                  secrets:
                    items:
                      description: VaultSecret defines the mapping between the path
                        of the secret in Vault to the parameter
                      properties:
                        key:
                          type: string
                        parameter:
                          type: string
                        path:
                          type: string
                      required:
                      - key
                      - parameter
                      - path
                      type: object
                    type: array
                required:
                - address
                - authentication
                - secrets
                type: object
              podIdentity:
                description: AuthPodIdentity allows users to select the platform native
                  identity mechanism
                properties:
                  identityId:
                    type: string
                  provider:
                    description: PodIdentityProvider contains the list of providers
                    type: string
                required:
                - provider
                type: object
              secretTargetRef:
                items:
                  description: AuthSecretTargetRef is used to authenticate using a
                    reference to a secret
                  properties:
                    key:
                      type: string
                    name:
                      type: string
                    parameter:
                      type: string
                  required:
                  - key
                  - name
                  - parameter
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources: {}
---
# Source: openfunction/charts/contour/templates/contour/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: contour-contour
  labels:
    app.kubernetes.io/name: contour
    helm.sh/chart: contour-10.2.2
    app.kubernetes.io/instance: my-openfunction
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - create
      - get
      - update
  - apiGroups:
      - ""
    resources:
      - endpoints
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - namespaces
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - services
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - networking.k8s.io
    resources:
      - ingressclasses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - networking.k8s.io
    resources:
      - ingresses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - networking.k8s.io
    resources:
      - ingresses/status
    verbs:
      - create
      - get
      - update
  - apiGroups:
      - networking.x-k8s.io
      - gateway.networking.k8s.io
    resources:
      - gatewayclasses
      - gateways
      - httproutes
      - tcproutes
      - tlsroutes
      - udproutes
      - referencepolicies
      - referencegrants
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - networking.x-k8s.io
      - gateway.networking.k8s.io
    resources:
      - gatewayclasses/status
      - gateways/status
      - httproutes/status
      - tcproutes/status
      - tlsroutes/status
      - udproutes/status
    verbs:
      - update
  - apiGroups:
      - projectcontour.io
    resources:
      - contourconfigurations
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - projectcontour.io
    resources:
      - contourconfigurations/status
    verbs:
      - create
      - get
      - update
  - apiGroups:
      - projectcontour.io
    resources:
      - extensionservices
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - projectcontour.io
    resources:
      - extensionservices/status
    verbs:
      - create
      - get
      - update
  - apiGroups:
      - projectcontour.io
    resources:
      - httpproxies
      - tlscertificatedelegations
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - projectcontour.io
    resources:
      - httpproxies/status
    verbs:
      - create
      - get
      - update
---
# Source: openfunction/charts/dapr/charts/dapr_rbac/templates/injector.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: dapr-system
  name: dapr-injector
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: my-openfunction
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.11.3
rules:
  - apiGroups: [""]
    resources: ["serviceaccounts"]
    verbs: ["get", "list"]
  - apiGroups: ["dapr.io"]
    resources: ["configurations", "components"]
    verbs: [ "get", "list"]
---
# Source: openfunction/charts/dapr/charts/dapr_rbac/templates/operator.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: dapr-system
  name: dapr-operator-admin
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: my-openfunction
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.11.3
rules:
  - apiGroups: ["apiextensions.k8s.io"]
    resources: ["customresourcedefinitions"]
    verbs: ["get", "patch"]
  - apiGroups: ["apps"]
    resources: ["deployments", "deployments/finalizers"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["apps"]
    resources: ["deployments/finalizers"]
    verbs: ["update"]
  - apiGroups: ["apps"]
    resources: ["statefulsets", "statefulsets/finalizers"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["apps"]
    resources: ["statefulsets/finalizers"]
    verbs: ["update"]
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get", "list", "delete", "watch"]
  - apiGroups: [""]
    resources: ["services","services/finalizers"]
    verbs: ["get", "list", "watch", "update", "create"]
  - apiGroups: [""]
    resources: ["services"]
    verbs: ["delete"]
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["dapr.io"]
    resources: ["components", "configurations", "subscriptions", "resiliencies", "httpendpoints"]
    verbs: [ "get", "list", "watch"]
---
# Source: openfunction/charts/dapr/charts/dapr_rbac/templates/placement.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: dapr-system
  name: dapr-placement
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: my-openfunction
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.11.3
rules: []
---
# Source: openfunction/charts/dapr/charts/dapr_rbac/templates/sentry.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: dapr-system
  name: dapr-sentry
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: my-openfunction
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.11.3
rules:
  - apiGroups: ["authentication.k8s.io"]
    resources: ["tokenreviews"]
    verbs: ["create"]
  - apiGroups: ["dapr.io"]
    resources: ["configurations"]
    verbs: ["list"]
---
# Source: openfunction/charts/keda/templates/manager/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  namespace: keda
  labels:
    app.kubernetes.io/name: keda-operator    
    helm.sh/chart: keda-2.11.2
    app.kubernetes.io/component: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-openfunction
    app.kubernetes.io/part-of: keda-operator
    app.kubernetes.io/version: 2.11.2
  name: keda-operator
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - configmaps/status
  - events
  verbs:
  - '*'
- apiGroups:
  - ""
  resources:
  - external
  - pods
  - secrets
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - serviceaccounts
  verbs:
  - list
  - watch
- apiGroups:
  - '*'
  resources:
  - '*'
  verbs:
  - get
- apiGroups:
  - '*'
  resources:
  - '*/scale'
  verbs:
  - '*'
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - validatingwebhookconfigurations
  verbs:
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - apiregistration.k8s.io
  resources:
  - apiservices
  verbs:
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - apps
  resources:
  - deployments
  - statefulsets
  verbs:
  - list
  - watch
- apiGroups:
  - autoscaling
  resources:
  - horizontalpodautoscalers
  verbs:
  - '*'
- apiGroups:
  - batch
  resources:
  - jobs
  verbs:
  - '*'
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - '*'
- apiGroups:
  - keda.sh
  resources:
  - clustertriggerauthentications
  - clustertriggerauthentications/status
  verbs:
  - '*'
- apiGroups:
  - keda.sh
  resources:
  - scaledjobs
  - scaledjobs/finalizers
  - scaledjobs/status
  verbs:
  - '*'
- apiGroups:
  - keda.sh
  resources:
  - scaledobjects
  - scaledobjects/finalizers
  - scaledobjects/status
  verbs:
  - '*'
- apiGroups:
  - keda.sh
  resources:
  - triggerauthentications
  - triggerauthentications/status
  verbs:
  - '*'
---
# Source: openfunction/charts/keda/templates/metrics-server/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  namespace: keda
  labels:
    app.kubernetes.io/name: keda-operator-external-metrics-reader    
    helm.sh/chart: keda-2.11.2
    app.kubernetes.io/component: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-openfunction
    app.kubernetes.io/part-of: keda-operator
    app.kubernetes.io/version: 2.11.2
  name: keda-operator-external-metrics-reader
rules:
- apiGroups:
  - external.metrics.k8s.io
  resources:
  - '*'
  verbs:
  - '*'
---
# Source: openfunction/charts/knative-serving/templates/contour/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  namespace: knative-serving
  name: knative-serving-contour
  labels:
    app.kubernetes.io/component: net-contour
    networking.knative.dev/ingress-provider: contour
    serving.knative.dev/controller: "true"
    helm.sh/chart: knative-serving-1.3.2
    app.kubernetes.io/instance: my-openfunction
    app.kubernetes.io/version: "1.3.2"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - projectcontour.io
  resources:
  - httpproxies
  verbs:
  - get
  - list
  - create
  - update
  - delete
  - deletecollection
  - patch
  - watch
---
# Source: openfunction/charts/knative-serving/templates/rbac/knative-serving-addressable-resolver-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  namespace: knative-serving
  name: knative-serving-addressable-resolver
  labels:
    duck.knative.dev/addressable: "true"
    serving.knative.dev/release: v1.3.2
    helm.sh/chart: knative-serving-1.3.2
    app.kubernetes.io/instance: my-openfunction
    app.kubernetes.io/version: "1.3.2"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - serving.knative.dev
  resources:
  - routes
  - routes/status
  - services
  - services/status
  verbs:
  - get
  - list
  - watch
---
# Source: openfunction/charts/knative-serving/templates/rbac/knative-serving-admin-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  namespace: knative-serving
  name: knative-serving-admin
  labels:
    serving.knative.dev/release: v1.3.2
    helm.sh/chart: knative-serving-1.3.2
    app.kubernetes.io/instance: my-openfunction
    app.kubernetes.io/version: "1.3.2"
    app.kubernetes.io/managed-by: Helm
aggregationRule:
  clusterRoleSelectors:
    - matchLabels:
        serving.knative.dev/controller: "true"
---
# Source: openfunction/charts/knative-serving/templates/rbac/knative-serving-aggregated-addressable-resolver-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  namespace: knative-serving
  name: knative-serving-aggregated-addressable-resolver
  labels:
    serving.knative.dev/release: v1.3.2
    helm.sh/chart: knative-serving-1.3.2
    app.kubernetes.io/instance: my-openfunction
    app.kubernetes.io/version: "1.3.2"
    app.kubernetes.io/managed-by: Helm
aggregationRule:
  clusterRoleSelectors:
    - matchLabels:
        duck.knative.dev/addressable: "true"
---
# Source: openfunction/charts/knative-serving/templates/rbac/knative-serving-core-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  namespace: knative-serving
  name: knative-serving-core
  labels:
    serving.knative.dev/controller: "true"
    serving.knative.dev/release: v1.3.2
    helm.sh/chart: knative-serving-1.3.2
    app.kubernetes.io/instance: my-openfunction
    app.kubernetes.io/version: "1.3.2"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - namespaces
  - secrets
  - configmaps
  - endpoints
  - services
  - events
  - serviceaccounts
  verbs:
  - get
  - list
  - create
  - update
  - delete
  - patch
  - watch
- apiGroups:
  - ""
  resources:
  - endpoints/restricted
  verbs:
  - create
- apiGroups:
  - ""
  resources:
  - namespaces/finalizers
  verbs:
  - update
- apiGroups:
  - apps
  resources:
  - deployments
  - deployments/finalizers
  verbs:
  - get
  - list
  - create
  - update
  - delete
  - patch
  - watch
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - mutatingwebhookconfigurations
  - validatingwebhookconfigurations
  verbs:
  - get
  - list
  - create
  - update
  - delete
  - patch
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  - customresourcedefinitions/status
  verbs:
  - get
  - list
  - create
  - update
  - delete
  - patch
  - watch
- apiGroups:
  - autoscaling
  resources:
  - horizontalpodautoscalers
  verbs:
  - get
  - list
  - create
  - update
  - delete
  - patch
  - watch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - create
  - update
  - delete
  - patch
  - watch
- apiGroups:
  - serving.knative.dev
  - autoscaling.internal.knative.dev
  - networking.internal.knative.dev
  resources:
  - '*'
  - '*/status'
  - '*/finalizers'
  verbs:
  - get
  - list
  - create
  - update
  - delete
  - deletecollection
  - patch
  - watch
- apiGroups:
  - caching.internal.knative.dev
  resources:
  - images
  verbs:
  - get
  - list
  - create
  - update
  - delete
  - patch
  - watch
---
# Source: openfunction/charts/knative-serving/templates/rbac/knative-serving-namespaced-admin-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: knative-serving-namespaced-admin
  labels:
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
    serving.knative.dev/release: v1.3.2
    helm.sh/chart: knative-serving-1.3.2
    app.kubernetes.io/instance: my-openfunction
    app.kubernetes.io/version: "1.3.2"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - serving.knative.dev
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - networking.internal.knative.dev
  - autoscaling.internal.knative.dev
  - caching.internal.knative.dev
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
# Source: openfunction/charts/knative-serving/templates/rbac/knative-serving-namespaced-edit-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: knative-serving-namespaced-edit
  labels:
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
    serving.knative.dev/release: v1.3.2
    helm.sh/chart: knative-serving-1.3.2
    app.kubernetes.io/instance: my-openfunction
    app.kubernetes.io/version: "1.3.2"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - serving.knative.dev
  resources:
  - '*'
  verbs:
  - create
  - update
  - patch
  - delete
- apiGroups:
  - networking.internal.knative.dev
  - autoscaling.internal.knative.dev
  - caching.internal.knative.dev
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
# Source: openfunction/charts/knative-serving/templates/rbac/knative-serving-namespaced-view-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: knative-serving-namespaced-view
  labels:
    rbac.authorization.k8s.io/aggregate-to-view: "true"
    serving.knative.dev/release: v1.3.2
    helm.sh/chart: knative-serving-1.3.2
    app.kubernetes.io/instance: my-openfunction
    app.kubernetes.io/version: "1.3.2"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - serving.knative.dev
  - networking.internal.knative.dev
  - autoscaling.internal.knative.dev
  - caching.internal.knative.dev
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
# Source: openfunction/charts/knative-serving/templates/rbac/knative-serving-podspecable-binding-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  namespace: knative-serving
  name: knative-serving-podspecable-binding
  labels:
    duck.knative.dev/podspecable: "true"
    serving.knative.dev/release: v1.3.2
    helm.sh/chart: knative-serving-1.3.2
    app.kubernetes.io/instance: my-openfunction
    app.kubernetes.io/version: "1.3.2"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - serving.knative.dev
  resources:
  - configurations
  - services
  verbs:
  - list
  - watch
  - patch
---
# Source: openfunction/charts/shipwright-build/templates/aggregate-edit-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  namespace: shipwright-build
  name: shipwright-build-aggregate-edit
  labels:
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
    helm.sh/chart: shipwright-build-0.10.0
    app.kubernetes.io/name: shipwright-build
    app.kubernetes.io/instance: my-openfunction
    app.kubernetes.io/part-of: shipwright-build
    app.kubernetes.io/version: "v0.10.0"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - shipwright.io
  resources:
  - clusterbuildstrategies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - shipwright.io
  resources:
  - buildstrategies
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - shipwright.io
  resources:
  - builds
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - shipwright.io
  resources:
  - buildruns
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
---
# Source: openfunction/charts/shipwright-build/templates/aggregate-view-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  namespace: shipwright-build
  name: shipwright-build-aggregate-view
  labels:
    rbac.authorization.k8s.io/aggregate-to-view: "true"
    helm.sh/chart: shipwright-build-0.10.0
    app.kubernetes.io/name: shipwright-build
    app.kubernetes.io/instance: my-openfunction
    app.kubernetes.io/part-of: shipwright-build
    app.kubernetes.io/version: "v0.10.0"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - shipwright.io
  resources:
  - clusterbuildstrategies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - shipwright.io
  resources:
  - buildstrategies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - shipwright.io
  resources:
  - builds
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - shipwright.io
  resources:
  - buildruns
  verbs:
  - get
  - list
  - watch
---
# Source: openfunction/charts/shipwright-build/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  namespace: shipwright-build
  name: shipwright-build-controller
  labels:
    helm.sh/chart: shipwright-build-0.10.0
    app.kubernetes.io/name: shipwright-build
    app.kubernetes.io/instance: my-openfunction
    app.kubernetes.io/part-of: shipwright-build
    app.kubernetes.io/version: "v0.10.0"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - shipwright.io
  resources:
  - buildruns
  verbs:
  - get
  - list
  - watch
  - update
  - delete
- apiGroups:
  - shipwright.io
  resources:
  - buildruns/finalizers
  verbs:
  - update
- apiGroups:
  - shipwright.io
  resources:
  - buildruns/status
  verbs:
  - update
- apiGroups:
  - shipwright.io
  resources:
  - builds
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - shipwright.io
  resources:
  - builds/finalizers
  verbs:
  - update
- apiGroups:
  - shipwright.io
  resources:
  - builds/status
  verbs:
  - update
- apiGroups:
  - shipwright.io
  resources:
  - buildstrategies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - shipwright.io
  resources:
  - clusterbuildstrategies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - tekton.dev
  resources:
  - taskruns
  verbs:
  - get
  - list
  - watch
  - create
  - delete
  - patch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - list
- apiGroups:
  - ""
  resources:
  - serviceaccounts
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - delete
---
# Source: openfunction/charts/tekton-pipelines/templates/aggregate-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  namespace: tekton-pipelines
  name: tekton-aggregate-edit
  labels:
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
    helm.sh/chart: tekton-pipelines-0.37.2
    app.kubernetes.io/name: tekton-pipelines
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
    app.kubernetes.io/version: "v0.37.2"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - tekton.dev
  resources:
  - tasks
  - taskruns
  - pipelines
  - pipelineruns
  - pipelineresources
  - conditions
  verbs:
  - create
  - delete
  - deletecollection
  - get
  - list
  - patch
  - update
  - watch
---
# Source: openfunction/charts/tekton-pipelines/templates/aggregate-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  namespace: tekton-pipelines
  name: tekton-aggregate-view
  labels:
    rbac.authorization.k8s.io/aggregate-to-view: "true"
    helm.sh/chart: tekton-pipelines-0.37.2
    app.kubernetes.io/name: tekton-pipelines
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
    app.kubernetes.io/version: "v0.37.2"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - tekton.dev
  resources:
  - tasks
  - taskruns
  - pipelines
  - pipelineruns
  - pipelineresources
  - conditions
  verbs:
  - get
  - list
  - watch
---
# Source: openfunction/charts/tekton-pipelines/templates/controller/cluster-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  namespace: tekton-pipelines
  name: tekton-pipelines-controller-cluster-access
  labels:
    app.kubernetes.io/component: controller
    helm.sh/chart: tekton-pipelines-0.37.2
    app.kubernetes.io/name: tekton-pipelines
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
    app.kubernetes.io/version: "v0.37.2"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - list
  - watch
- apiGroups:
  - tekton.dev
  resources:
  - tasks
  - clustertasks
  - taskruns
  - pipelines
  - pipelineruns
  - pipelineresources
  - conditions
  - runs
  verbs:
  - get
  - list
  - create
  - update
  - delete
  - patch
  - watch
- apiGroups:
  - tekton.dev
  resources:
  - taskruns/finalizers
  - pipelineruns/finalizers
  - runs/finalizers
  verbs:
  - get
  - list
  - create
  - update
  - delete
  - patch
  - watch
- apiGroups:
  - tekton.dev
  resources:
  - tasks/status
  - clustertasks/status
  - taskruns/status
  - pipelines/status
  - pipelineruns/status
  - pipelineresources/status
  - runs/status
  verbs:
  - get
  - list
  - create
  - update
  - delete
  - patch
  - watch
---
# Source: openfunction/charts/tekton-pipelines/templates/controller/cluster-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  namespace: tekton-pipelines
  name: tekton-pipelines-controller-tenant-access
  labels:
    app.kubernetes.io/component: controller
    helm.sh/chart: tekton-pipelines-0.37.2
    app.kubernetes.io/name: tekton-pipelines
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
    app.kubernetes.io/version: "v0.37.2"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - persistentvolumeclaims
  verbs:
  - get
  - list
  - create
  - update
  - delete
  - patch
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - configmaps
  - limitranges
  - secrets
  - serviceaccounts
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apps
  resources:
  - statefulsets
  verbs:
  - get
  - list
  - create
  - update
  - delete
  - patch
  - watch
- apiGroups:
  - resolution.tekton.dev
  resources:
  - resolutionrequests
  verbs:
  - get
  - list
  - watch
  - create
  - delete
---
# Source: openfunction/charts/tekton-pipelines/templates/webhook/cluster-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  namespace: tekton-pipelines
  name: tekton-pipelines-webhook-cluster-access
  labels:
    app.kubernetes.io/component: webhook
    helm.sh/chart: tekton-pipelines-0.37.2
    app.kubernetes.io/name: tekton-pipelines
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
    app.kubernetes.io/version: "v0.37.2"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - pipelines.tekton.dev
  - pipelineruns.tekton.dev
  - runs.tekton.dev
  - tasks.tekton.dev
  - clustertasks.tekton.dev
  - taskruns.tekton.dev
  - pipelineresources.tekton.dev
  - conditions.tekton.dev
  resources:
  - customresourcedefinitions
  - customresourcedefinitions/status
  verbs:
  - get
  - update
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - mutatingwebhookconfigurations
  - validatingwebhookconfigurations
  verbs:
  - list
  - watch
- apiGroups:
  - admissionregistration.k8s.io
  resourceNames:
  - webhook.pipeline.tekton.dev
  resources:
  - mutatingwebhookconfigurations
  verbs:
  - get
  - update
  - delete
- apiGroups:
  - admissionregistration.k8s.io
  resourceNames:
  - validation.webhook.pipeline.tekton.dev
  - config.webhook.pipeline.tekton.dev
  resources:
  - validatingwebhookconfigurations
  verbs:
  - get
  - update
  - delete
- apiGroups:
  - policy
  resourceNames:
  - tekton-pipelines
  resources:
  - podsecuritypolicies
  verbs:
  - use
- apiGroups:
  - ""
  resourceNames:
  - tekton-pipelines
  resources:
  - namespaces
  verbs:
  - get
- apiGroups:
  - ""
  resourceNames:
  - tekton-pipelines
  resources:
  - namespaces/finalizers
  verbs:
  - update
---
# Source: openfunction/templates/manager-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-openfunction-manager-role
  labels:
    helm.sh/chart: openfunction-0.7.0
    app.kubernetes.io/name: openfunction
    app.kubernetes.io/instance: my-openfunction
    app.kubernetes.io/version: "v1.2.0"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - apps
    resources:
      - deployments
      - statefulsets
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - batch
    resources:
      - jobs
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - ""
    resources:
      - services
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - core.openfunction.io
    resources:
      - builders
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - core.openfunction.io
    resources:
      - builders/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - core.openfunction.io
    resources:
      - functions
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - core.openfunction.io
    resources:
      - functions/finalizers
    verbs:
      - update
  - apiGroups:
      - core.openfunction.io
    resources:
      - functions/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - core.openfunction.io
    resources:
      - servings
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - core.openfunction.io
    resources:
      - servings/finalizers
    verbs:
      - update
  - apiGroups:
      - core.openfunction.io
    resources:
      - servings/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - dapr.io
    resources:
      - components
      - subscriptions
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - events.k8s.io
    resources:
      - events
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - events.openfunction.io
    resources:
      - clustereventbus
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - events.openfunction.io
    resources:
      - clustereventbus/finalizers
    verbs:
      - update
  - apiGroups:
      - events.openfunction.io
    resources:
      - clustereventbus/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - events.openfunction.io
    resources:
      - clustereventbuses
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - events.openfunction.io
    resources:
      - clustereventbuses/finalizers
    verbs:
      - update
  - apiGroups:
      - events.openfunction.io
    resources:
      - clustereventbuses/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - events.openfunction.io
    resources:
      - eventbus
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - events.openfunction.io
    resources:
      - eventbus/finalizers
    verbs:
      - update
  - apiGroups:
      - events.openfunction.io
    resources:
      - eventbus/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - events.openfunction.io
    resources:
      - eventbuses
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - events.openfunction.io
    resources:
      - eventbuses/finalizers
    verbs:
      - update
  - apiGroups:
      - events.openfunction.io
    resources:
      - eventbuses/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - events.openfunction.io
    resources:
      - eventsources
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - events.openfunction.io
    resources:
      - eventsources/finalizers
    verbs:
      - update
  - apiGroups:
      - events.openfunction.io
    resources:
      - eventsources/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - events.openfunction.io
    resources:
      - triggers
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - events.openfunction.io
    resources:
      - triggers/finalizers
    verbs:
      - update
  - apiGroups:
      - events.openfunction.io
    resources:
      - triggers/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - gateway.networking.k8s.io
    resources:
      - gateways
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - gateway.networking.k8s.io
    resources:
      - gateways/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - gateway.networking.k8s.io
    resources:
      - httproutes
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - http.keda.sh
    resources:
      - httpscaledobjects
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - keda.sh
    resources:
      - scaledjobs
      - scaledobjects
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - networking.openfunction.io
    resources:
      - gateways
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - networking.openfunction.io
    resources:
      - gateways/finalizers
    verbs:
      - update
  - apiGroups:
      - networking.openfunction.io
    resources:
      - gateways/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - serving.knative.dev
    resources:
      - services
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - shipwright.io
    resources:
      - buildruns
      - builds
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
---
# Source: openfunction/templates/metrics-reader-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-openfunction-metrics-reader
  labels:
    helm.sh/chart: openfunction-0.7.0
    app.kubernetes.io/name: openfunction
    app.kubernetes.io/instance: my-openfunction
    app.kubernetes.io/version: "v1.2.0"
    app.kubernetes.io/managed-by: Helm
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
# Source: openfunction/templates/proxy-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-openfunction-proxy-role
  labels:
    helm.sh/chart: openfunction-0.7.0
    app.kubernetes.io/name: openfunction
    app.kubernetes.io/instance: my-openfunction
    app.kubernetes.io/version: "v1.2.0"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
# Source: openfunction/charts/contour/templates/contour/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: contour-contour
  labels:
    app.kubernetes.io/name: contour
    helm.sh/chart: contour-10.2.2
    app.kubernetes.io/instance: my-openfunction
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: contour-contour
subjects:
  - kind: ServiceAccount
    name: contour-contour
    namespace: "projectcontour"
---
# Source: openfunction/charts/dapr/charts/dapr_rbac/templates/injector.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: dapr-system
  name: dapr-injector
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: my-openfunction
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.11.3
subjects:
- kind: ServiceAccount
  name: dapr-injector
  namespace: dapr-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: dapr-injector
---
# Source: openfunction/charts/dapr/charts/dapr_rbac/templates/operator.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: dapr-system
  name: dapr-operator-admin
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: my-openfunction
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.11.3
subjects:
- kind: ServiceAccount
  name: dapr-operator
  namespace: dapr-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: dapr-operator-admin
---
# Source: openfunction/charts/dapr/charts/dapr_rbac/templates/placement.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: dapr-system
  name: dapr-placement
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: my-openfunction
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.11.3
subjects:
- kind: ServiceAccount
  name: dapr-placement
  namespace: dapr-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: dapr-placement
---
# Source: openfunction/charts/dapr/charts/dapr_rbac/templates/sentry.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: dapr-system
  name: dapr-sentry
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: my-openfunction
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.11.3
subjects:
- kind: ServiceAccount
  name: dapr-sentry
  namespace: dapr-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: dapr-sentry
---
# Source: openfunction/charts/keda/templates/manager/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  namespace: keda
  labels:
    app.kubernetes.io/name: keda-operator    
    helm.sh/chart: keda-2.11.2
    app.kubernetes.io/component: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-openfunction
    app.kubernetes.io/part-of: keda-operator
    app.kubernetes.io/version: 2.11.2
  name: keda-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: keda-operator
subjects:
- kind: ServiceAccount
  name: keda-operator
  namespace: keda
---
# Source: openfunction/charts/keda/templates/metrics-server/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  namespace: keda
  labels:
    app.kubernetes.io/name: keda-operator-system-auth-delegator    
    helm.sh/chart: keda-2.11.2
    app.kubernetes.io/component: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-openfunction
    app.kubernetes.io/part-of: keda-operator
    app.kubernetes.io/version: 2.11.2
  name: keda-operator-system-auth-delegator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:auth-delegator
subjects:
- kind: ServiceAccount
  name: keda-operator
  namespace: keda
---
# Source: openfunction/charts/keda/templates/metrics-server/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  namespace: keda
  labels:
    app.kubernetes.io/name: keda-operator-hpa-controller-external-metrics    
    helm.sh/chart: keda-2.11.2
    app.kubernetes.io/component: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-openfunction
    app.kubernetes.io/part-of: keda-operator
    app.kubernetes.io/version: 2.11.2
  name: keda-operator-hpa-controller-external-metrics
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: keda-operator-external-metrics-reader
subjects:
- kind: ServiceAccount
  name: horizontal-pod-autoscaler
  namespace: kube-system
---
# Source: openfunction/charts/knative-serving/templates/controller/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  namespace: knative-serving
  name: knative-serving-controller-addressable-resolver
  labels:
    app.kubernetes.io/component: controller
    serving.knative.dev/release: v1.3.2
    helm.sh/chart: knative-serving-1.3.2
    app.kubernetes.io/instance: my-openfunction
    app.kubernetes.io/version: "1.3.2"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: 'knative-serving-aggregated-addressable-resolver'
subjects:
  - kind: ServiceAccount
    name: 'controller'
    namespace: 'knative-serving'
---
# Source: openfunction/charts/knative-serving/templates/controller/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  namespace: knative-serving
  name: knative-serving-controller-admin
  labels:
    app.kubernetes.io/component: controller
    serving.knative.dev/release: v1.3.2
    helm.sh/chart: knative-serving-1.3.2
    app.kubernetes.io/instance: my-openfunction
    app.kubernetes.io/version: "1.3.2"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: 'knative-serving-admin'
subjects:
  - kind: ServiceAccount
    name: 'controller'
    namespace: 'knative-serving'
---
# Source: openfunction/charts/shipwright-build/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  namespace: shipwright-build
  name: shipwright-build-controller
  labels:
    helm.sh/chart: shipwright-build-0.10.0
    app.kubernetes.io/name: shipwright-build
    app.kubernetes.io/instance: my-openfunction
    app.kubernetes.io/part-of: shipwright-build
    app.kubernetes.io/version: "v0.10.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: 'shipwright-build-controller'
subjects:
- kind: ServiceAccount
  name: 'shipwright-build-controller'
  namespace: 'shipwright-build'
---
# Source: openfunction/charts/tekton-pipelines/templates/controller/cluster-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  namespace: tekton-pipelines
  name: tekton-pipelines-controller-cluster-access
  labels:
    app.kubernetes.io/component: controller
    helm.sh/chart: tekton-pipelines-0.37.2
    app.kubernetes.io/name: tekton-pipelines
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
    app.kubernetes.io/version: "v0.37.2"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: 'tekton-pipelines-controller-cluster-access'
subjects:
- kind: ServiceAccount
  name: 'tekton-pipelines-controller'
  namespace: 'tekton-pipelines'
---
# Source: openfunction/charts/tekton-pipelines/templates/controller/cluster-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  namespace: tekton-pipelines
  name: tekton-pipelines-controller-tenant-access
  labels:
    app.kubernetes.io/component: controller
    helm.sh/chart: tekton-pipelines-0.37.2
    app.kubernetes.io/name: tekton-pipelines
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
    app.kubernetes.io/version: "v0.37.2"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: 'tekton-pipelines-controller-tenant-access'
subjects:
- kind: ServiceAccount
  name: 'tekton-pipelines-controller'
  namespace: 'tekton-pipelines'
---
# Source: openfunction/charts/tekton-pipelines/templates/webhook/cluster-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  namespace: tekton-pipelines
  name: tekton-pipelines-webhook-cluster-access
  labels:
    app.kubernetes.io/component: webhook
    helm.sh/chart: tekton-pipelines-0.37.2
    app.kubernetes.io/name: tekton-pipelines
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
    app.kubernetes.io/version: "v0.37.2"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: 'tekton-pipelines-webhook-cluster-access'
subjects:
- kind: ServiceAccount
  name: 'tekton-pipelines-webhook'
  namespace: 'tekton-pipelines'
---
# Source: openfunction/templates/manager-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-openfunction-manager-rolebinding
  labels:
    helm.sh/chart: openfunction-0.7.0
    app.kubernetes.io/name: openfunction
    app.kubernetes.io/instance: my-openfunction
    app.kubernetes.io/version: "v1.2.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: 'my-openfunction-manager-role'
subjects:
  - kind: ServiceAccount
    name: 'my-openfunction-controller-manager'
    namespace: 'default'
---
# Source: openfunction/templates/proxy-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-openfunction-proxy-rolebinding
  labels:
    helm.sh/chart: openfunction-0.7.0
    app.kubernetes.io/name: openfunction
    app.kubernetes.io/instance: my-openfunction
    app.kubernetes.io/version: "v1.2.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: 'my-openfunction-proxy-role'
subjects:
- kind: ServiceAccount
  name: 'my-openfunction-controller-manager'
  namespace: 'default'
---
# Source: openfunction/charts/contour/templates/contour/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: contour-contour
  namespace: "projectcontour"
  labels:
    app.kubernetes.io/name: contour
    helm.sh/chart: contour-10.2.2
    app.kubernetes.io/instance: my-openfunction
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - get
      - update
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - create
      - get
      - update
---
# Source: openfunction/charts/dapr/charts/dapr_rbac/templates/injector.yaml
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: dapr-system
  name: dapr-injector
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: my-openfunction
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.11.3
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get"]
    resourceNames: ["dapr-trust-bundle"]
---
# Source: openfunction/charts/dapr/charts/dapr_rbac/templates/operator.yaml
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: dapr-system
  name: dapr-operator
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: my-openfunction
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.11.3
rules:
  - apiGroups: ["coordination.k8s.io"]
    resources: ["leases"]
    verbs: ["get", "list", "watch", "update", "create"]
    resourceNames: ["operator.dapr.io", "webhooks.dapr.io"]
  - apiGroups: [""]
    resources: ["configmaps"]
    verbs: ["get", "list", "watch", "update", "create"]
    resourceNames: ["operator.dapr.io", "webhooks.dapr.io"]
# We cannot use resourceNames for create because Kubernetes doesn't nessarily
# know resource names at authorization time.
  - apiGroups: ["coordination.k8s.io"]
    resources: ["leases"]
    verbs: ["create"]
  - apiGroups: [""]
    resources: ["configmaps", "events"]
    verbs: ["create"]
---
# Source: openfunction/charts/dapr/charts/dapr_rbac/templates/secret-reader.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: secret-reader
  namespace: default
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: my-openfunction
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.11.3
rules:
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get"]
---
# Source: openfunction/charts/dapr/charts/dapr_rbac/templates/sentry.yaml
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: dapr-system
  name: dapr-sentry
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: my-openfunction
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.11.3
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "update"]
    resourceNames: ["dapr-trust-bundle"]
---
# Source: openfunction/charts/keda/templates/manager/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: keda
  labels:
    app.kubernetes.io/name: keda-operator    
    helm.sh/chart: keda-2.11.2
    app.kubernetes.io/component: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-openfunction
    app.kubernetes.io/part-of: keda-operator
    app.kubernetes.io/version: 2.11.2
  name: keda-operator
  namespace: keda
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: openfunction/charts/shipwright-build/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: shipwright-build
  name: shipwright-build-controller
  labels:
    helm.sh/chart: shipwright-build-0.10.0
    app.kubernetes.io/name: shipwright-build
    app.kubernetes.io/instance: my-openfunction
    app.kubernetes.io/part-of: shipwright-build
    app.kubernetes.io/version: "v0.10.0"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - create
  - update
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
---
# Source: openfunction/charts/tekton-pipelines/templates/controller/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: tekton-pipelines
  name: tekton-pipelines-controller
  labels:
    app.kubernetes.io/component: controller
    helm.sh/chart: tekton-pipelines-0.37.2
    app.kubernetes.io/name: tekton-pipelines
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
    app.kubernetes.io/version: "v0.37.2"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resourceNames:
  - config-logging
  - config-observability
  - config-artifact-bucket
  - config-artifact-pvc
  - feature-flags
  - config-leader-election
  - config-registry-cert
  resources:
  - configmaps
  verbs:
  - get
- apiGroups:
  - policy
  resourceNames:
  - tekton-pipelines
  resources:
  - podsecuritypolicies
  verbs:
  - use
---
# Source: openfunction/charts/tekton-pipelines/templates/info-role-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: tekton-pipelines
  name: tekton-pipelines-info
  labels:
    helm.sh/chart: tekton-pipelines-0.37.2
    app.kubernetes.io/name: tekton-pipelines
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
    app.kubernetes.io/version: "v0.37.2"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - ""
  resourceNames:
  - pipelines-info
  resources:
  - configmaps
  verbs:
  - get
---
# Source: openfunction/charts/tekton-pipelines/templates/leader-election-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: tekton-pipelines
  name: tekton-pipelines-leader-election
  labels:
    helm.sh/chart: tekton-pipelines-0.37.2
    app.kubernetes.io/name: tekton-pipelines
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
    app.kubernetes.io/version: "v0.37.2"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - create
  - update
  - delete
  - patch
  - watch
---
# Source: openfunction/charts/tekton-pipelines/templates/webhook/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: tekton-pipelines
  name: tekton-pipelines-webhook
  labels:
    app.kubernetes.io/component: webhook
    helm.sh/chart: tekton-pipelines-0.37.2
    app.kubernetes.io/name: tekton-pipelines
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
    app.kubernetes.io/version: "v0.37.2"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resourceNames:
  - config-logging
  - config-observability
  - config-leader-election
  - feature-flags
  resources:
  - configmaps
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resourceNames:
  - webhook-certs
  resources:
  - secrets
  verbs:
  - get
  - update
- apiGroups:
  - policy
  resourceNames:
  - tekton-pipelines
  resources:
  - podsecuritypolicies
  verbs:
  - use
---
# Source: openfunction/templates/leader-election-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: my-openfunction-leader-election-role
  labels:
    helm.sh/chart: openfunction-0.7.0
    app.kubernetes.io/name: openfunction
    app.kubernetes.io/instance: my-openfunction
    app.kubernetes.io/version: "v1.2.0"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
# Source: openfunction/charts/contour/templates/contour/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: contour-contour-role
  namespace: "projectcontour"
  labels:
    app.kubernetes.io/name: contour
    helm.sh/chart: contour-10.2.2
    app.kubernetes.io/instance: my-openfunction
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: contour-contour
subjects:
  - kind: ServiceAccount
    name: contour-contour
    namespace: "projectcontour"
---
# Source: openfunction/charts/dapr/charts/dapr_rbac/templates/injector.yaml
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: dapr-system
  name: dapr-injector
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: my-openfunction
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.11.3
subjects:
- kind: ServiceAccount
  name: dapr-injector
  namespace: dapr-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: dapr-injector
---
# Source: openfunction/charts/dapr/charts/dapr_rbac/templates/operator.yaml
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: dapr-system
  name: dapr-operator
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: my-openfunction
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.11.3
subjects:
- kind: ServiceAccount
  name: dapr-operator
  namespace: dapr-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: dapr-operator
---
# Source: openfunction/charts/dapr/charts/dapr_rbac/templates/secret-reader.yaml
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: dapr-secret-reader
  namespace: default
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: my-openfunction
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.11.3
subjects:
- kind: ServiceAccount
  name: default
roleRef:
  kind: Role
  name: secret-reader
  apiGroup: rbac.authorization.k8s.io
---
# Source: openfunction/charts/dapr/charts/dapr_rbac/templates/sentry.yaml
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: dapr-system
  name: dapr-sentry
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: my-openfunction
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.11.3
subjects:
- kind: ServiceAccount
  name: dapr-sentry
  namespace: dapr-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: dapr-sentry
---
# Source: openfunction/charts/keda/templates/manager/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  namespace: keda
  labels:
    app.kubernetes.io/name: keda-operator    
    helm.sh/chart: keda-2.11.2
    app.kubernetes.io/component: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-openfunction
    app.kubernetes.io/part-of: keda-operator
    app.kubernetes.io/version: 2.11.2
  name: keda-operator
  namespace: keda
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: keda-operator
subjects:
- kind: ServiceAccount
  name: keda-operator
  namespace: keda
---
# Source: openfunction/charts/keda/templates/metrics-server/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  namespace: keda
  labels:
    app.kubernetes.io/name: keda-operator-auth-reader    
    helm.sh/chart: keda-2.11.2
    app.kubernetes.io/component: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-openfunction
    app.kubernetes.io/part-of: keda-operator
    app.kubernetes.io/version: 2.11.2
  name: keda-operator-auth-reader
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: extension-apiserver-authentication-reader
subjects:
- kind: ServiceAccount
  name: keda-operator
  namespace: keda
---
# Source: openfunction/charts/shipwright-build/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  namespace: shipwright-build
  name: shipwright-build-controller
  labels:
    helm.sh/chart: shipwright-build-0.10.0
    app.kubernetes.io/name: shipwright-build
    app.kubernetes.io/instance: my-openfunction
    app.kubernetes.io/part-of: shipwright-build
    app.kubernetes.io/version: "v0.10.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: 'shipwright-build-controller'
subjects:
- kind: ServiceAccount
  name: 'shipwright-build-controller'
  namespace: 'shipwright-build'
---
# Source: openfunction/charts/tekton-pipelines/templates/controller/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  namespace: tekton-pipelines
  name: tekton-pipelines-controller
  labels:
    app.kubernetes.io/component: controller
    helm.sh/chart: tekton-pipelines-0.37.2
    app.kubernetes.io/name: tekton-pipelines
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
    app.kubernetes.io/version: "v0.37.2"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: 'tekton-pipelines-controller'
subjects:
- kind: ServiceAccount
  name: 'tekton-pipelines-controller'
  namespace: 'tekton-pipelines'
---
# Source: openfunction/charts/tekton-pipelines/templates/controller/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  namespace: tekton-pipelines
  name: tekton-pipelines-controller-leaderelection
  labels:
    app.kubernetes.io/component: controller
    helm.sh/chart: tekton-pipelines-0.37.2
    app.kubernetes.io/name: tekton-pipelines
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
    app.kubernetes.io/version: "v0.37.2"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: 'tekton-pipelines-leader-election'
subjects:
- kind: ServiceAccount
  name: 'tekton-pipelines-controller'
  namespace: 'tekton-pipelines'
---
# Source: openfunction/charts/tekton-pipelines/templates/info-role-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  namespace: tekton-pipelines
  name: tekton-pipelines-info
  labels:
    helm.sh/chart: tekton-pipelines-0.37.2
    app.kubernetes.io/name: tekton-pipelines
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
    app.kubernetes.io/version: "v0.37.2"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: 'tekton-pipelines-info'
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: Group
  name: system:authenticated
  namespace: 'tekton-pipelines'
---
# Source: openfunction/charts/tekton-pipelines/templates/webhook/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  namespace: tekton-pipelines
  name: tekton-pipelines-webhook
  labels:
    app.kubernetes.io/component: webhook
    helm.sh/chart: tekton-pipelines-0.37.2
    app.kubernetes.io/name: tekton-pipelines
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
    app.kubernetes.io/version: "v0.37.2"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: 'tekton-pipelines-webhook'
subjects:
- kind: ServiceAccount
  name: 'tekton-pipelines-webhook'
  namespace: 'tekton-pipelines'
---
# Source: openfunction/charts/tekton-pipelines/templates/webhook/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  namespace: tekton-pipelines
  name: tekton-pipelines-webhook-leaderelection
  labels:
    app.kubernetes.io/component: webhook
    helm.sh/chart: tekton-pipelines-0.37.2
    app.kubernetes.io/name: tekton-pipelines
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
    app.kubernetes.io/version: "v0.37.2"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: 'tekton-pipelines-leader-election'
subjects:
- kind: ServiceAccount
  name: 'tekton-pipelines-webhook'
  namespace: 'tekton-pipelines'
---
# Source: openfunction/templates/leader-election-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: my-openfunction-leader-election-rolebinding
  labels:
    helm.sh/chart: openfunction-0.7.0
    app.kubernetes.io/name: openfunction
    app.kubernetes.io/instance: my-openfunction
    app.kubernetes.io/version: "v1.2.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: 'my-openfunction-leader-election-role'
subjects:
- kind: ServiceAccount
  name: 'my-openfunction-controller-manager'
  namespace: 'default'
---
# Source: openfunction/charts/contour/templates/contour/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: contour
  namespace: "projectcontour"
  labels:
    app.kubernetes.io/name: contour
    helm.sh/chart: contour-10.2.2
    app.kubernetes.io/instance: my-openfunction
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: contour
  annotations:
spec:
  type: ClusterIP
  sessionAffinity: None
  ports:
    - port: 8001
      name: tcp-xds
      protocol: TCP
      targetPort: xds
      nodePort: null
  selector:
    app.kubernetes.io/name: contour
    app.kubernetes.io/instance: my-openfunction
    app.kubernetes.io/component: contour
---
# Source: openfunction/charts/contour/templates/envoy/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: contour-envoy
  namespace: "projectcontour"
  labels:
    app.kubernetes.io/name: contour
    helm.sh/chart: contour-10.2.2
    app.kubernetes.io/instance: my-openfunction
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: envoy
  annotations:
    # This annotation puts the AWS ELB into "TCP" mode so that it does not
    # do HTTP negotiation for HTTPS connections at the ELB edge.
    # The downside of this is the remote IP address of all connections will
    # appear to be the internal address of the ELB. See docs/proxy-proto.md
    # for information about enabling the PROXY protocol on the ELB to recover
    # the original remote IP address.
    # We don't set this for nlb, per the contour docs.
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: tcp
spec:
  externalTrafficPolicy: "Local"
  sessionAffinity: None
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: http
    - name: https
      port: 443
      protocol: TCP
      targetPort: https
  selector:
    app.kubernetes.io/name: contour
    app.kubernetes.io/instance: my-openfunction
    app.kubernetes.io/component: envoy
  type: LoadBalancer
---
# Source: openfunction/charts/dapr/charts/dapr_operator/templates/dapr_operator_service.yaml
kind: Service
apiVersion: v1
metadata:
  namespace: dapr-system
  name: dapr-api
  labels:
    app.kubernetes.io/component: operator
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: my-openfunction
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.11.3
spec:
  selector:
    app: dapr-operator
  ports:
  - protocol: TCP
    port: 80 
    targetPort: 6500
---
# Source: openfunction/charts/dapr/charts/dapr_operator/templates/dapr_operator_service.yaml
apiVersion: v1
kind: Service
metadata:
  namespace: dapr-system
  name: dapr-webhook
  labels:
    app.kubernetes.io/component: operator
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: my-openfunction
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.11.3
spec:
  ports:
  - port: 443
    targetPort: 19443
    protocol: TCP
  selector:
    app: dapr-operator
---
# Source: openfunction/charts/dapr/charts/dapr_placement/templates/dapr_placement_service.yaml
kind: Service
apiVersion: v1
metadata:
  namespace: dapr-system
  name: dapr-placement-server
  labels:
    app: dapr-placement-server
    app.kubernetes.io/component: placement
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: my-openfunction
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.11.3
spec:
  selector:
    app: dapr-placement-server
  # placement must be able to resolve pod address to join initial cluster peers
  # before POD is ready
  publishNotReadyAddresses: true
  ports:
  - name: api
    port: 50005
  - name: raft-node
    port: 8201
  clusterIP: None
---
# Source: openfunction/charts/dapr/charts/dapr_sentry/templates/dapr_sentry_service.yaml
kind: Service
apiVersion: v1
metadata:
  namespace: dapr-system
  name: dapr-sentry
  labels:
    app.kubernetes.io/component: sentry
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: my-openfunction
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.11.3
spec:
  selector:
    app: dapr-sentry
  ports:
  - protocol: TCP
    port: 80 
    targetPort: 50001
---
# Source: openfunction/charts/dapr/charts/dapr_sidecar_injector/templates/dapr_sidecar_injector_service.yaml
apiVersion: v1
kind: Service
metadata:
  namespace: dapr-system
  name: dapr-sidecar-injector
  labels:
    app.kubernetes.io/component: sidecar-injector
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: my-openfunction
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.11.3
spec:
  type: ClusterIP
  ports:
  - port: 443
    targetPort: https
    protocol: TCP
    name: https
  selector:
    app: dapr-sidecar-injector
---
# Source: openfunction/charts/keda/templates/manager/service.yaml
apiVersion: v1
kind: Service
metadata:
  namespace: keda
  labels:
    app.kubernetes.io/name: keda-operator    
    helm.sh/chart: keda-2.11.2
    app.kubernetes.io/component: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-openfunction
    app.kubernetes.io/part-of: keda-operator
    app.kubernetes.io/version: 2.11.2
  name: keda-operator
  namespace: keda
spec:
  ports:
  - name: metricsservice
    port: 9666
    targetPort: 9666
  selector:
    app: keda-operator
---
# Source: openfunction/charts/keda/templates/metrics-server/service.yaml
apiVersion: v1
kind: Service
metadata:
  namespace: keda
  labels:
    app.kubernetes.io/name: keda-operator-metrics-apiserver
    app: keda-operator-metrics-apiserver    
    helm.sh/chart: keda-2.11.2
    app.kubernetes.io/component: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-openfunction
    app.kubernetes.io/part-of: keda-operator
    app.kubernetes.io/version: 2.11.2
  name: keda-operator-metrics-apiserver
  namespace: keda
spec:
  ports:
  - name: https
    port: 443
    targetPort: 6443
    protocol: TCP
  - name: metrics
    port: 8080
    targetPort: 8080
    protocol: TCP
  selector:
    app: keda-operator-metrics-apiserver
---
# Source: openfunction/charts/keda/templates/webhooks/service.yaml
apiVersion: v1
kind: Service
metadata:
  namespace: keda
  labels:
    app.kubernetes.io/name: keda-admission-webhooks    
    helm.sh/chart: keda-2.11.2
    app.kubernetes.io/component: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-openfunction
    app.kubernetes.io/part-of: keda-operator
    app.kubernetes.io/version: 2.11.2
  name: keda-admission-webhooks
  namespace: keda
spec:
  ports:
  - name: http
    port: 443
    protocol: TCP
    targetPort: 9443
  selector:
    app: keda-admission-webhooks
---
# Source: openfunction/charts/knative-serving/templates/activator/service.yaml
apiVersion: v1
kind: Service
metadata:
  namespace: knative-serving
  name: activator-service
  labels:
    app: activator
    app.kubernetes.io/component: activator
    serving.knative.dev/release: v1.3.2
    helm.sh/chart: knative-serving-1.3.2
    app.kubernetes.io/instance: my-openfunction
    app.kubernetes.io/version: "1.3.2"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  selector:
    app: activator
    app.kubernetes.io/instance: my-openfunction
  ports:
  - name: http-metrics
    port: 9090
    targetPort: 9090
  - name: http-profiling
    port: 8008
    targetPort: 8008
  - name: http
    port: 80
    targetPort: 8012
  - name: http2
    port: 81
    targetPort: 8013
---
# Source: openfunction/charts/knative-serving/templates/autoscaler/service.yaml
apiVersion: v1
kind: Service
metadata:
  namespace: knative-serving
  name: autoscaler
  labels:
    app: autoscaler
    app.kubernetes.io/component: autoscaler
    serving.knative.dev/release: v1.3.2
    helm.sh/chart: knative-serving-1.3.2
    app.kubernetes.io/instance: my-openfunction
    app.kubernetes.io/version: "1.3.2"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  selector:
    app: autoscaler
    app.kubernetes.io/instance: my-openfunction
  ports:
  - name: http-metrics
    port: 9090
    targetPort: 9090
  - name: http-profiling
    port: 8008
    targetPort: 8008
  - name: http
    port: 8080
    targetPort: 8080
---
# Source: openfunction/charts/knative-serving/templates/controller/service.yaml
apiVersion: v1
kind: Service
metadata:
  namespace: knative-serving
  name: controller
  labels:
    app: controller
    app.kubernetes.io/component: controller
    serving.knative.dev/release: v1.3.2
    helm.sh/chart: knative-serving-1.3.2
    app.kubernetes.io/instance: my-openfunction
    app.kubernetes.io/version: "1.3.2"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  selector:
    app: controller
    app.kubernetes.io/instance: my-openfunction
  ports:
  - name: http-metrics
    port: 9090
    targetPort: 9090
  - name: http-profiling
    port: 8008
    targetPort: 8008
---
# Source: openfunction/charts/knative-serving/templates/default-domain/service.yaml
apiVersion: v1
kind: Service
metadata:
  namespace: knative-serving
  name: default-domain-service
  labels:
    app: default-domain
    app.kubernetes.io/component: default-domain-job
    serving.knative.dev/release: v1.3.2
    helm.sh/chart: knative-serving-1.3.2
    app.kubernetes.io/instance: my-openfunction
    app.kubernetes.io/version: "1.3.2"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  selector:
    app: default-domain
    app.kubernetes.io/instance: my-openfunction
  ports:
  - name: http
    port: 80
    targetPort: 8080
---
# Source: openfunction/charts/knative-serving/templates/webhook/domainmapping-webhook-service.yaml
apiVersion: v1
kind: Service
metadata:
  namespace: knative-serving
  name: domainmapping-webhook
  labels:
    app.kubernetes.io/component: domain-mapping
    role: domainmapping-webhook
    serving.knative.dev/release: v1.3.2
    helm.sh/chart: knative-serving-1.3.2
    app.kubernetes.io/instance: my-openfunction
    app.kubernetes.io/version: "1.3.2"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  selector:
    role: domainmapping-webhook
    app.kubernetes.io/instance: my-openfunction
  ports:
  - name: http-metrics
    port: 9090
    targetPort: 9090
  - name: http-profiling
    port: 8008
    targetPort: 8008
  - name: https-webhook
    port: 443
    targetPort: 8443
---
# Source: openfunction/charts/knative-serving/templates/webhook/service.yaml
apiVersion: v1
kind: Service
metadata:
  namespace: knative-serving
  name: webhook
  labels:
    app.kubernetes.io/component: webhook
    role: webhook
    serving.knative.dev/release: v1.3.2
    helm.sh/chart: knative-serving-1.3.2
    app.kubernetes.io/instance: my-openfunction
    app.kubernetes.io/version: "1.3.2"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  selector:
    role: webhook
    app.kubernetes.io/instance: my-openfunction
  ports:
  - name: http-metrics
    port: 9090
    targetPort: 9090
  - name: http-profiling
    port: 8008
    targetPort: 8008
  - name: https-webhook
    port: 443
    targetPort: 8443
---
# Source: openfunction/charts/tekton-pipelines/templates/controller/service.yaml
apiVersion: v1
kind: Service
metadata:
  namespace: tekton-pipelines
  name: tekton-pipelines-controller
  labels:
    app: tekton-pipelines-controller
    app.kubernetes.io/component: controller
    pipeline.tekton.dev/release: v0.37.2
    version: v0.37.2
    helm.sh/chart: tekton-pipelines-0.37.2
    app.kubernetes.io/name: tekton-pipelines
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
    app.kubernetes.io/version: "v0.37.2"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  selector:
    app.kubernetes.io/component: controller
    app.kubernetes.io/name: tekton-pipelines
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
  ports:
  - name: http-metrics
    port: 9090
    protocol: TCP
    targetPort: 9090
  - name: http-profiling
    port: 8008
    targetPort: 8008
  - name: probes
    port: 8080
    targetPort: 0
---
# Source: openfunction/charts/tekton-pipelines/templates/webhook/service.yaml
apiVersion: v1
kind: Service
metadata:
  namespace: tekton-pipelines
  name: tekton-pipelines-webhook
  labels:
    app: tekton-pipelines-webhook
    app.kubernetes.io/component: webhook
    pipeline.tekton.dev/release: v0.37.2
    version: v0.37.2
    helm.sh/chart: tekton-pipelines-0.37.2
    app.kubernetes.io/name: tekton-pipelines
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
    app.kubernetes.io/version: "v0.37.2"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  selector:
    app.kubernetes.io/component: webhook
    app.kubernetes.io/name: tekton-pipelines
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
  ports:
  - name: http-metrics
    port: 9090
    targetPort: 9090
  - name: http-profiling
    port: 8008
    targetPort: 8008
  - name: https-webhook
    port: 443
    targetPort: 8443
  - name: probes
    port: 8080
    targetPort: 0
---
# Source: openfunction/templates/controller/metrics-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-openfunction-controller-manager-metrics-service
  labels:
    control-plane: controller-manager
    helm.sh/chart: openfunction-0.7.0
    app.kubernetes.io/name: openfunction
    app.kubernetes.io/instance: my-openfunction
    app.kubernetes.io/version: "v1.2.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  selector:
    control-plane: controller-manager
    app.kubernetes.io/name: openfunction
    app.kubernetes.io/instance: my-openfunction
  ports:
  - name: https
    port: 8443
    targetPort: https
---
# Source: openfunction/templates/webhook/webhook-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-openfunction-webhook-service
  labels:
    helm.sh/chart: openfunction-0.7.0
    app.kubernetes.io/name: openfunction
    app.kubernetes.io/instance: my-openfunction
    app.kubernetes.io/version: "v1.2.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  selector:
    control-plane: controller-manager
    app.kubernetes.io/name: openfunction
    app.kubernetes.io/instance: my-openfunction
  ports:
  - port: 443
    targetPort: 9443
---
# Source: openfunction/charts/contour/templates/envoy/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: contour-envoy
  namespace: "projectcontour"
  labels:
    app.kubernetes.io/name: contour
    helm.sh/chart: contour-10.2.2
    app.kubernetes.io/instance: my-openfunction
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: envoy
spec:
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: contour
      app.kubernetes.io/instance: my-openfunction
      app.kubernetes.io/component: envoy
  template:
    metadata:
      labels:
        app.kubernetes.io/name: contour
        helm.sh/chart: contour-10.2.2
        app.kubernetes.io/instance: my-openfunction
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: envoy
    spec:
      
      affinity:
        podAffinity:
          
        podAntiAffinity:
          
        nodeAffinity:
          
      terminationGracePeriodSeconds: 300
      hostNetwork: false
      dnsPolicy: ClusterFirst
      containers:
        - command:
            - contour
          args:
            - envoy
            - shutdown-manager
          image: docker.io/bitnami/contour:1.23.3-debian-11-r0
          imagePullPolicy: IfNotPresent
          lifecycle:
            preStop:
              exec:
                command:
                  - contour
                  - envoy
                  - shutdown
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8090
            initialDelaySeconds: 120
            periodSeconds: 20
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          name: shutdown-manager
          resources:
            limits: {}
            requests: {}
          volumeMounts:
            - name: envoy-admin
              mountPath: /admin
        - name: envoy
          command:
            - envoy
          args:
            - -c
            - /config/envoy.json
            - --service-cluster $(CONTOUR_NAMESPACE)
            - --service-node $(ENVOY_POD_NAME)
            - --log-level info
          image: docker.io/bitnami/envoy:1.24.2-debian-11-r0
          imagePullPolicy: IfNotPresent
          securityContext:
            runAsUser: 1001
          env:
            - name: CONTOUR_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: ENVOY_POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
          ports:
            - containerPort: 8080
              hostPort: 80
              name: http
              protocol: TCP
            - containerPort: 8443
              hostPort: 443
              name: https
              protocol: TCP
            - containerPort: 8002
              name: metrics
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /ready
              port: 8002
            initialDelaySeconds: 10
            periodSeconds: 3
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /ready
              port: 8002
            initialDelaySeconds: 120
            periodSeconds: 20
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          resources: 
            limits: {}
            requests: {}
          volumeMounts:
            - name: envoy-config
              mountPath: /config
            - name: envoycert
              mountPath: /certs
            - name: envoy-admin
              mountPath: /admin
          lifecycle:
            preStop:
              httpGet:
                path: /shutdown
                port: 8090
                scheme: HTTP
      initContainers:
        - command:
            - contour
          args:
            - bootstrap
            - /config/envoy.json
            - --xds-address=contour
            - --xds-port=8001
            - --resources-dir=/config/resources
            - --envoy-cafile=/certs/ca.crt
            - --envoy-cert-file=/certs/tls.crt
            - --envoy-key-file=/certs/tls.key
          image: docker.io/bitnami/contour:1.23.3-debian-11-r0
          imagePullPolicy: IfNotPresent
          name: envoy-initconfig
          resources: 
            limits: {}
            requests: {}
          volumeMounts:
            - name: envoy-config
              mountPath: /config
            - name: envoycert
              mountPath: /certs
              readOnly: true
            - name: envoy-admin
              mountPath: /admin
          env:
            - name: CONTOUR_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
      automountServiceAccountToken: false
      serviceAccountName: contour-envoy
      volumes:
        - name: envoy-admin
          emptyDir: {}
        - name: envoy-config
          emptyDir: {}
        - name: envoycert
          secret:
            secretName: envoycert
      restartPolicy: Always
---
# Source: openfunction/charts/contour/templates/contour/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: contour-contour
  namespace: "projectcontour"
  labels:
    app.kubernetes.io/name: contour
    helm.sh/chart: contour-10.2.2
    app.kubernetes.io/instance: my-openfunction
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: contour
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: contour
      app.kubernetes.io/instance: my-openfunction
      app.kubernetes.io/component: contour
  template:
    metadata:
      annotations:
        checksum/config: 44157415b2be6fb2c972770fff7f8c0bfd36cfe35397c425a511bfc0aa1f7e6e
      labels:
        app.kubernetes.io/name: contour
        helm.sh/chart: contour-10.2.2
        app.kubernetes.io/instance: my-openfunction
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: contour
    spec:
      
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: contour
                    app.kubernetes.io/instance: my-openfunction
                    app.kubernetes.io/component: contour
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      containers:
        - name: contour
          command:
            - contour
          args:
            - serve
            - --incluster
            - --xds-address=0.0.0.0
            - --xds-port=8001
            - --http-port=8000
            - --envoy-service-http-port=8080
            - --envoy-service-https-port=8443
            - --contour-cafile=/certs/ca.crt
            - --contour-cert-file=/certs/tls.crt
            - --contour-key-file=/certs/tls.key
            - --config-path=/config/contour.yaml
            - --envoy-service-namespace=default
            - --envoy-service-name=contour-envoy
            - --leader-election-resource-name=projectcontour
            - --kubernetes-debug=0
            - --ingress-class-name=contour
          image: docker.io/bitnami/contour:1.23.3-debian-11-r0
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8001
              name: xds
              protocol: TCP
            - containerPort: 8000
              name: metrics
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8000
            initialDelaySeconds: 120
            periodSeconds: 20
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          readinessProbe:
            httpGet:
              path: /healthz
              port: 8000
            initialDelaySeconds: 15
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          resources: 
            limits: {}
            requests: {}
          volumeMounts:
            - name: contourcert
              mountPath: /certs
              readOnly: true
            - name: contour-config
              mountPath: /config
              readOnly: true
          env:
            - name: CONTOUR_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: BITNAMI_DEBUG
              value: "false"
          securityContext:
            runAsNonRoot: true
            runAsUser: 1001
      dnsPolicy: ClusterFirst
      serviceAccountName: contour-contour
      securityContext:
        fsGroup: 1001
      volumes:
        - name: contourcert
          secret:
            secretName: contourcert
        - name: contour-config
          configMap:
            name: contour
            defaultMode: 0644
            items:
              - key: contour.yaml
                path: contour.yaml
---
# Source: openfunction/charts/dapr/charts/dapr_operator/templates/dapr_operator_deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: dapr-system
  name: dapr-operator
  labels:
    app: dapr-operator
    app.kubernetes.io/component: operator
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: my-openfunction
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.11.3
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dapr-operator
  template:
    metadata:
      labels:
        app: dapr-operator
        app.kubernetes.io/component: operator
        app.kubernetes.io/managed-by: helm
        app.kubernetes.io/name: my-openfunction
        app.kubernetes.io/part-of: dapr
        app.kubernetes.io/version: 1.11.3
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/"
    spec:
      containers:
      - name: dapr-operator
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 3
          periodSeconds: 3
          failureThreshold: 5
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 3
          periodSeconds: 3
          failureThreshold: 5
        image: "docker.io/daprio/operator:1.11.3"
        imagePullPolicy: IfNotPresent
        securityContext:
          runAsNonRoot: true
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        ports:
        - containerPort: 6500
        - name: metrics
          containerPort: 9090
          protocol: TCP
        resources:
          {}
        volumeMounts:
          - name: credentials
            mountPath: /var/run/dapr/credentials
            readOnly: true
          - name: webhook-creds
            mountPath: /tmp/k8s-webhook-server/serving-certs
            readOnly: true
        command:
        - "/operator"
        args:
        - "--watch-interval"
        - "0"
        - "--max-pod-restarts-per-minute"
        - "20"
        - "--log-level"
        - "info"
        - "--enable-metrics"
        - "--metrics-port"
        - "9090"
      serviceAccountName: dapr-operator
      volumes:
        - name: credentials
          secret:
            secretName: dapr-trust-bundle
        - name: webhook-creds
          secret:
            secretName: dapr-webhook-cert
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
             nodeSelectorTerms:
                - matchExpressions:
                  - key: kubernetes.io/os
                    operator: In
                    values:
                    - linux
---
# Source: openfunction/charts/dapr/charts/dapr_sentry/templates/dapr_sentry_deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: dapr-system
  name: dapr-sentry
  labels:
    app: dapr-sentry
    app.kubernetes.io/component: sentry
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: my-openfunction
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.11.3
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dapr-sentry
  template:
    metadata:
      labels:
        app: dapr-sentry
        app.kubernetes.io/component: sentry
        app.kubernetes.io/managed-by: helm
        app.kubernetes.io/name: my-openfunction
        app.kubernetes.io/part-of: dapr
        app.kubernetes.io/version: 1.11.3
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/"
    spec:
      containers:
      - name: dapr-sentry
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 3
          periodSeconds: 3
          failureThreshold: 5
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 3
          periodSeconds: 3
          failureThreshold: 5
        image: "docker.io/daprio/sentry:1.11.3"
        imagePullPolicy: IfNotPresent
        securityContext:
          runAsNonRoot: true
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        ports:
        - containerPort: 50001
        - name: metrics
          containerPort: 9090
          protocol: TCP
        resources:
          {}
        volumeMounts:
          - name: credentials
            mountPath: /var/run/dapr/credentials
            readOnly: true
        command:
        - "/sentry"
        args:
        - "--log-level"
        - info
        - "--enable-metrics"
        - "--metrics-port"
        - "9090"
        - "--trust-domain"
        - cluster.local
      serviceAccountName: dapr-sentry
      volumes:
        - name: credentials
          secret:
            secretName: dapr-trust-bundle
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
             nodeSelectorTerms:
                - matchExpressions:
                  - key: kubernetes.io/os
                    operator: In
                    values:
                    - linux
---
# Source: openfunction/charts/dapr/charts/dapr_sidecar_injector/templates/dapr_sidecar_injector_deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: dapr-system
  name: dapr-sidecar-injector
  labels:
    app: dapr-sidecar-injector
    app.kubernetes.io/component: sidecar-injector
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: my-openfunction
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.11.3
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dapr-sidecar-injector
  template:
    metadata:
      labels:
        app: dapr-sidecar-injector
        app.kubernetes.io/component: sidecar-injector
        app.kubernetes.io/managed-by: helm
        app.kubernetes.io/name: my-openfunction
        app.kubernetes.io/part-of: dapr
        app.kubernetes.io/version: 1.11.3
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/"
    spec:
      serviceAccountName: dapr-injector
      containers:
      - name: dapr-sidecar-injector
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 3
          periodSeconds: 3
          failureThreshold: 5
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 3
          periodSeconds: 3
          failureThreshold: 5
        image: "docker.io/daprio/injector:1.11.3"
        imagePullPolicy: IfNotPresent
        securityContext:
          runAsNonRoot: true
        command:
        - "/injector"
        args:
        - "--log-level"
        - info
        - "--enable-metrics"
        - "--metrics-port"
        - "9090"
        - "--healthz-port"
        - "8080"
        env:
        - name: TLS_CERT_FILE
          value: /dapr/cert/tls.crt
        - name: TLS_KEY_FILE
          value: /dapr/cert/tls.key
        - name: KUBE_CLUSTER_DOMAIN
          value: "cluster.local"
        - name: SIDECAR_IMAGE
          value: "docker.io/daprio/daprd:1.11.3"
        - name: SIDECAR_IMAGE_PULL_POLICY
          value: "IfNotPresent"
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: IGNORE_ENTRYPOINT_TOLERATIONS
          value: "[{\"effect\":\"NoSchedule\",\"key\":\"alibabacloud.com/eci\"},{\"effect\":\"NoSchedule\",\"key\":\"azure.com/aci\"},{\"effect\":\"NoSchedule\",\"key\":\"aws\"},{\"effect\":\"NoSchedule\",\"key\":\"huawei.com/cci\"}]"
        - name: SIDECAR_RUN_AS_NON_ROOT
          value: "true"
        - name: SIDECAR_DROP_ALL_CAPABILITIES
          value: "false"
        - name: SIDECAR_READ_ONLY_ROOT_FILESYSTEM
          value: "true"
        ports:
        - name: https
          containerPort: 4000
          protocol: TCP
        - name: metrics
          containerPort: 9090
          protocol: TCP
        resources:
          {}
        volumeMounts:
        - name: cert
          mountPath: /dapr/cert
          readOnly: true
      volumes:
      - name: cert
        secret:
          secretName: dapr-sidecar-injector-cert
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
             nodeSelectorTerms:
                - matchExpressions:
                  - key: kubernetes.io/os
                    operator: In
                    values:
                    - linux
---
# Source: openfunction/charts/keda/templates/manager/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: keda-operator
  namespace: keda
  labels:
    app: keda-operator
    name: keda-operator
    app.kubernetes.io/name: keda-operator    
    helm.sh/chart: keda-2.11.2
    app.kubernetes.io/component: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-openfunction
    app.kubernetes.io/part-of: keda-operator
    app.kubernetes.io/version: 2.11.2
spec:
  replicas: 1
  selector:
    matchLabels:
      app: keda-operator
  template:
    metadata:
      labels:
        app: keda-operator
        name: keda-operator
        app.kubernetes.io/name: keda-operator        
        helm.sh/chart: keda-2.11.2
        app.kubernetes.io/component: operator
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/instance: my-openfunction
        app.kubernetes.io/part-of: keda-operator
        app.kubernetes.io/version: 2.11.2
    spec:
      serviceAccountName: keda-operator
      automountServiceAccountToken: true
      securityContext:
        runAsNonRoot: true
      containers:
        - name: keda-operator
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            seccompProfile:
              type: RuntimeDefault
          image: "openfunction/keda:2.11.2"
          command:
          - "/keda"
          args:
          - --leader-elect
          - "--zap-log-level=info"
          - "--zap-encoder=console"
          - "--zap-time-encoding=rfc3339"
          - "--cert-dir=/certs"
          - "--enable-cert-rotation=true"          
          - "--cert-secret-name=kedaorg-certs"
          - "--operator-service-name=keda-operator"
          - "--metrics-server-service-name=keda-operator-metrics-apiserver"
          - "--webhooks-service-name=keda-admission-webhooks"
          imagePullPolicy: Always
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8081
            initialDelaySeconds: 25
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8081
            initialDelaySeconds: 20
          ports:
          - containerPort: 8080
            name: http
            protocol: TCP
          env:
            - name: WATCH_NAMESPACE
              value: ""
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: OPERATOR_NAME
              value: keda-operator
            - name: KEDA_HTTP_DEFAULT_TIMEOUT
              value: "3000"
            - name: KEDA_HTTP_MIN_TLS_VERSION
              value: TLS12
          volumeMounts:         
          - mountPath: /certs
            name: certificates
            readOnly: true
          resources:
            limits:
              cpu: 1
              memory: 1000Mi
            requests:
              cpu: 100m
              memory: 100Mi
      volumes:
      - name: certificates
        secret:
          defaultMode: 420
          secretName: kedaorg-certs
          optional: true
      nodeSelector:
        kubernetes.io/os: linux
---
# Source: openfunction/charts/keda/templates/metrics-server/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: keda-operator-metrics-apiserver
  namespace: keda
  labels:
    app: keda-operator-metrics-apiserver
    app.kubernetes.io/name: keda-operator-metrics-apiserver    
    helm.sh/chart: keda-2.11.2
    app.kubernetes.io/component: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-openfunction
    app.kubernetes.io/part-of: keda-operator
    app.kubernetes.io/version: 2.11.2
spec:
  replicas: 1
  selector:
    matchLabels:
      app: keda-operator-metrics-apiserver
  template:
    metadata:
      labels:
        app: keda-operator-metrics-apiserver
        app.kubernetes.io/name: keda-operator-metrics-apiserver        
        helm.sh/chart: keda-2.11.2
        app.kubernetes.io/component: operator
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/instance: my-openfunction
        app.kubernetes.io/part-of: keda-operator
        app.kubernetes.io/version: 2.11.2
    spec:
      serviceAccountName: keda-operator
      automountServiceAccountToken: true
      securityContext:
        runAsNonRoot: true
      containers:
        - name: keda-operator-metrics-apiserver
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            seccompProfile:
              type: RuntimeDefault
          image: "openfunction/keda-metrics-apiserver:2.11.2"
          imagePullPolicy: Always
          livenessProbe:
            httpGet:
              path: /healthz
              port: 6443
              scheme: HTTPS
            initialDelaySeconds: 5
          readinessProbe:
            httpGet:
              path: /readyz
              port: 6443
              scheme: HTTPS
            initialDelaySeconds: 5
          env:
            - name: WATCH_NAMESPACE
              value: ""
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: KEDA_HTTP_DEFAULT_TIMEOUT
              value: "3000"
            - name: KEDA_HTTP_MIN_TLS_VERSION
              value: TLS12
          args:
          - /usr/local/bin/keda-adapter
          - --port=8080
          - --secure-port=6443
          - --logtostderr=true
          - --metrics-service-address=keda-operator.keda.svc.cluster.local:9666
          - --client-ca-file=/certs/ca.crt
          - --tls-cert-file=/certs/tls.crt
          - --tls-private-key-file=/certs/tls.key
          - --cert-dir=/certs
          - --v=0
          ports:
            - containerPort: 6443
              name: https
              protocol: TCP
            - containerPort: 8080
              name: metrics
              protocol: TCP
          volumeMounts:
          - mountPath: /certs
            name: certificates
            readOnly: true
          resources:
            limits:
              cpu: 1
              memory: 1000Mi
            requests:
              cpu: 100m
              memory: 100Mi
      volumes:
      - name: certificates
        secret:
          defaultMode: 420
          secretName: kedaorg-certs
      dnsPolicy: ClusterFirst
      hostNetwork: false
      nodeSelector:
        kubernetes.io/os: linux
---
# Source: openfunction/charts/keda/templates/webhooks/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: keda-admission-webhooks
  namespace: keda
  labels:
    app: keda-admission-webhooks
    name: keda-admission-webhooks
    app.kubernetes.io/name: keda-admission-webhooks    
    helm.sh/chart: keda-2.11.2
    app.kubernetes.io/component: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-openfunction
    app.kubernetes.io/part-of: keda-operator
    app.kubernetes.io/version: 2.11.2
spec:
  replicas: 1
  selector:
    matchLabels:
      app: keda-admission-webhooks
  template:
    metadata:
      labels:
        app: keda-admission-webhooks
        name: keda-admission-webhooks
        app.kubernetes.io/name: keda-admission-webhooks        
        helm.sh/chart: keda-2.11.2
        app.kubernetes.io/component: operator
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/instance: my-openfunction
        app.kubernetes.io/part-of: keda-operator
        app.kubernetes.io/version: 2.11.2
    spec:
      serviceAccountName: keda-operator
      automountServiceAccountToken: true
      securityContext:
        runAsNonRoot: true
      containers:
        - name: keda-admission-webhooks
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            seccompProfile:
              type: RuntimeDefault
          image: "openfunction/keda-admission-webhooks:2.11.2"
          command:
          - /keda-admission-webhooks
          args:
          - "--zap-log-level=info"
          - "--zap-encoder=console"
          - "--zap-time-encoding=rfc3339"
          - "--cert-dir=/certs"
          - "--health-probe-bind-address=:8081"
          - --metrics-bind-address=:8080
          imagePullPolicy: Always
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8081
            initialDelaySeconds: 25
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8081
            initialDelaySeconds: 20
          ports:
          - containerPort: 9443
            name: http
            protocol: TCP
          env:
            - name: WATCH_NAMESPACE
              value: ""
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          volumeMounts:
          - mountPath: /certs
            name: certificates
            readOnly: true
          resources:
            limits:
              cpu: 50m
              memory: 100Mi
            requests:
              cpu: 10m
              memory: 10Mi
      volumes:
      - name: certificates
        secret:
          defaultMode: 420
          secretName: kedaorg-certs
      hostNetwork: false
      nodeSelector:
        kubernetes.io/os: linux
---
# Source: openfunction/charts/knative-serving/templates/activator/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: knative-serving
  name: activator
  labels:
    app.kubernetes.io/component: activator
    serving.knative.dev/release: v1.3.2
    helm.sh/chart: knative-serving-1.3.2
    app.kubernetes.io/instance: my-openfunction
    app.kubernetes.io/version: "1.3.2"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app: activator
      role: activator
      app.kubernetes.io/instance: my-openfunction
  template:
    metadata:
      labels:
        app: activator
        app.kubernetes.io/component: activator
        role: activator
        serving.knative.dev/release: v1.3.2
        app.kubernetes.io/instance: my-openfunction
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "false"
    spec:
      containers:
      - env:
        - name: GOGC
          value: "500"
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: SYSTEM_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: CONFIG_LOGGING_NAME
          value: config-logging
        - name: CONFIG_OBSERVABILITY_NAME
          value: config-observability
        - name: METRICS_DOMAIN
          value: knative.dev/internal/serving
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: cluster.local
        image: openfunction/knative.dev-serving-cmd-activator:v1.3.2
        livenessProbe:
          failureThreshold: 12
          httpGet:
            httpHeaders:
            - name: k-kubelet-probe
              value: activator
            port: 8012
          initialDelaySeconds: 15
          periodSeconds: 10
        name: activator
        ports:
        - containerPort: 9090
          name: metrics
        - containerPort: 8008
          name: profiling
        - containerPort: 8012
          name: http1
        - containerPort: 8013
          name: h2c
        readinessProbe:
          failureThreshold: 5
          httpGet:
            httpHeaders:
            - name: k-kubelet-probe
              value: activator
            port: 8012
          periodSeconds: 5
        resources:
            limits:
              cpu: "1"
              memory: 600Mi
            requests:
              cpu: 300m
              memory: 60Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - all
          readOnlyRootFilesystem: true
          runAsNonRoot: true
      serviceAccountName: controller
      terminationGracePeriodSeconds: 600
---
# Source: openfunction/charts/knative-serving/templates/autoscaler/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: knative-serving
  name: autoscaler
  labels:
    app.kubernetes.io/component: autoscaler
    serving.knative.dev/release: v1.3.2
    helm.sh/chart: knative-serving-1.3.2
    app.kubernetes.io/instance: my-openfunction
    app.kubernetes.io/version: "1.3.2"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: autoscaler
      app.kubernetes.io/instance: my-openfunction
  template:
    metadata:
      labels:
        app: autoscaler
        app.kubernetes.io/component: autoscaler
        serving.knative.dev/release: v1.3.2
        app.kubernetes.io/instance: my-openfunction
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "false"
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app: autoscaler
              topologyKey: kubernetes.io/hostname
            weight: 100
      containers:
      - env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: SYSTEM_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: CONFIG_LOGGING_NAME
          value: config-logging
        - name: CONFIG_OBSERVABILITY_NAME
          value: config-observability
        - name: METRICS_DOMAIN
          value: knative.dev/serving
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: cluster.local
        image: openfunction/knative.dev-serving-cmd-autoscaler:v1.3.2
        livenessProbe:
          failureThreshold: 6
          httpGet:
            httpHeaders:
            - name: k-kubelet-probe
              value: autoscaler
            port: 8080
        name: autoscaler
        ports:
        - containerPort: 9090
          name: metrics
        - containerPort: 8008
          name: profiling
        - containerPort: 8080
          name: websocket
        readinessProbe:
          httpGet:
            httpHeaders:
            - name: k-kubelet-probe
              value: autoscaler
            port: 8080
        resources:
            limits:
              cpu: "1"
              memory: 1000Mi
            requests:
              cpu: 100m
              memory: 100Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - all
          readOnlyRootFilesystem: true
          runAsNonRoot: true
      serviceAccountName: controller
---
# Source: openfunction/charts/knative-serving/templates/contour/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: knative-serving
  name: net-contour-controller
  labels:
    networking.knative.dev/ingress-provider: contour
    helm.sh/chart: knative-serving-1.3.2
    app.kubernetes.io/instance: my-openfunction
    app.kubernetes.io/version: "1.3.2"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: net-contour-controller
      app.kubernetes.io/instance: my-openfunction
  template:
    metadata:
      labels:
        app: net-contour-controller
        app.kubernetes.io/component: net-contour
        app.kubernetes.io/instance: my-openfunction
    spec:
      containers:
      - env:
        - name: SYSTEM_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: CONFIG_LOGGING_NAME
          value: config-logging
        - name: CONFIG_OBSERVABILITY_NAME
          value: config-observability
        - name: METRICS_DOMAIN
          value: knative.dev/net-contour
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: cluster.local
        image: openfunction/knative.dev-net-contour-cmd-controller:v1.3.0
        name: controller
        ports:
        - containerPort: 9090
          name: metrics
        - containerPort: 8008
          name: profiling
        resources:
            limits:
              cpu: 400m
              memory: 400Mi
            requests:
              cpu: 40m
              memory: 40Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - all
          readOnlyRootFilesystem: true
          runAsNonRoot: true
      serviceAccountName: controller
---
# Source: openfunction/charts/knative-serving/templates/controller/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: knative-serving
  name: controller
  labels:
    app.kubernetes.io/component: controller
    serving.knative.dev/release: v1.3.2
    helm.sh/chart: knative-serving-1.3.2
    app.kubernetes.io/instance: my-openfunction
    app.kubernetes.io/version: "1.3.2"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app: controller
      app.kubernetes.io/instance: my-openfunction
  template:
    metadata:
      labels:
        app: controller
        app.kubernetes.io/component: controller
        serving.knative.dev/release: v1.3.2
        app.kubernetes.io/instance: my-openfunction
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app: controller
              topologyKey: kubernetes.io/hostname
            weight: 100
      containers:
      - env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SYSTEM_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: CONFIG_LOGGING_NAME
          value: config-logging
        - name: CONFIG_OBSERVABILITY_NAME
          value: config-observability
        - name: METRICS_DOMAIN
          value: knative.dev/internal/serving
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: cluster.local
        image: openfunction/knative.dev-serving-cmd-controller:v1.3.2
        name: controller
        ports:
        - containerPort: 9090
          name: metrics
        - containerPort: 8008
          name: profiling
        resources:
            limits:
              cpu: "1"
              memory: 1000Mi
            requests:
              cpu: 100m
              memory: 100Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - all
          readOnlyRootFilesystem: true
          runAsNonRoot: true
      serviceAccountName: controller
---
# Source: openfunction/charts/knative-serving/templates/domain-mapping/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: knative-serving
  name: domain-mapping
  labels:
    app.kubernetes.io/component: domain-mapping
    serving.knative.dev/release: v1.3.2
    helm.sh/chart: knative-serving-1.3.2
    app.kubernetes.io/instance: my-openfunction
    app.kubernetes.io/version: "1.3.2"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app: domain-mapping
      app.kubernetes.io/instance: my-openfunction
  template:
    metadata:
      labels:
        app: domain-mapping
        app.kubernetes.io/component: domain-mapping
        serving.knative.dev/release: v1.3.2
        app.kubernetes.io/instance: my-openfunction
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app: domain-mapping
              topologyKey: kubernetes.io/hostname
            weight: 100
      containers:
      - env:
        - name: SYSTEM_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: CONFIG_LOGGING_NAME
          value: config-logging
        - name: CONFIG_OBSERVABILITY_NAME
          value: config-observability
        - name: METRICS_DOMAIN
          value: knative.dev/serving
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: cluster.local
        image: openfunction/knative.dev-serving-cmd-domain-mapping:v1.3.2
        name: domain-mapping
        ports:
        - containerPort: 9090
          name: metrics
        - containerPort: 8008
          name: profiling
        resources:
            limits:
              cpu: 300m
              memory: 400Mi
            requests:
              cpu: 30m
              memory: 40Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - all
          readOnlyRootFilesystem: true
          runAsNonRoot: true
      serviceAccountName: controller
---
# Source: openfunction/charts/knative-serving/templates/webhook/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: knative-serving
  name: domainmapping-webhook
  labels:
    app.kubernetes.io/component: domain-mapping
    serving.knative.dev/release: v1.3.2
    helm.sh/chart: knative-serving-1.3.2
    app.kubernetes.io/instance: my-openfunction
    app.kubernetes.io/version: "1.3.2"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app: domainmapping-webhook
      role: domainmapping-webhook
      app.kubernetes.io/instance: my-openfunction
  template:
    metadata:
      labels:
        app: domainmapping-webhook
        app.kubernetes.io/component: domain-mapping
        role: domainmapping-webhook
        serving.knative.dev/release: v1.3.2
        app.kubernetes.io/instance: my-openfunction
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "false"
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app: domainmapping-webhook
              topologyKey: kubernetes.io/hostname
            weight: 100
      containers:
      - env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SYSTEM_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: CONFIG_LOGGING_NAME
          value: config-logging
        - name: CONFIG_OBSERVABILITY_NAME
          value: config-observability
        - name: WEBHOOK_PORT
          value: "8443"
        - name: METRICS_DOMAIN
          value: knative.dev/serving
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: cluster.local
        image: openfunction/knative.dev-serving-cmd-domain-mapping-webhook:v1.3.2
        livenessProbe:
          failureThreshold: 6
          httpGet:
            httpHeaders:
            - name: k-kubelet-probe
              value: webhook
            port: 8443
            scheme: HTTPS
          initialDelaySeconds: 20
          periodSeconds: 1
        name: domainmapping-webhook
        ports:
        - containerPort: 9090
          name: metrics
        - containerPort: 8008
          name: profiling
        - containerPort: 8443
          name: https-webhook
        readinessProbe:
          httpGet:
            httpHeaders:
            - name: k-kubelet-probe
              value: webhook
            port: 8443
            scheme: HTTPS
          periodSeconds: 1
        resources:
            limits:
              cpu: 500m
              memory: 500Mi
            requests:
              cpu: 100m
              memory: 100Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - all
          readOnlyRootFilesystem: true
          runAsNonRoot: true
      serviceAccountName: controller
      terminationGracePeriodSeconds: 300
---
# Source: openfunction/charts/knative-serving/templates/webhook/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: knative-serving
  name: webhook
  labels:
    app.kubernetes.io/component: webhook
    serving.knative.dev/release: v1.3.2
    helm.sh/chart: knative-serving-1.3.2
    app.kubernetes.io/instance: my-openfunction
    app.kubernetes.io/version: "1.3.2"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app: webhook
      role: webhook
      app.kubernetes.io/instance: my-openfunction
  template:
    metadata:
      labels:
        app: webhook
        app.kubernetes.io/component: webhook
        role: webhook
        serving.knative.dev/release: v1.3.2
        app.kubernetes.io/instance: my-openfunction
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "false"
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app: webhook
              topologyKey: kubernetes.io/hostname
            weight: 100
      containers:
      - env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SYSTEM_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: CONFIG_LOGGING_NAME
          value: config-logging
        - name: CONFIG_OBSERVABILITY_NAME
          value: config-observability
        - name: WEBHOOK_NAME
          value: webhook
        - name: WEBHOOK_PORT
          value: "8443"
        - name: METRICS_DOMAIN
          value: knative.dev/internal/serving
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: cluster.local
        image: openfunction/knative.dev-serving-cmd-webhook:v1.3.2
        livenessProbe:
          failureThreshold: 6
          httpGet:
            httpHeaders:
            - name: k-kubelet-probe
              value: webhook
            port: 8443
            scheme: HTTPS
          initialDelaySeconds: 20
          periodSeconds: 1
        name: webhook
        ports:
        - containerPort: 9090
          name: metrics
        - containerPort: 8008
          name: profiling
        - containerPort: 8443
          name: https-webhook
        readinessProbe:
          httpGet:
            httpHeaders:
            - name: k-kubelet-probe
              value: webhook
            port: 8443
            scheme: HTTPS
          periodSeconds: 1
        resources:
            limits:
              cpu: 500m
              memory: 500Mi
            requests:
              cpu: 100m
              memory: 100Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - all
          readOnlyRootFilesystem: true
          runAsNonRoot: true
      serviceAccountName: controller
      terminationGracePeriodSeconds: 300
---
# Source: openfunction/charts/shipwright-build/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: shipwright-build
  name: shipwright-build-controller
  labels:
    helm.sh/chart: shipwright-build-0.10.0
    app.kubernetes.io/name: shipwright-build
    app.kubernetes.io/instance: my-openfunction
    app.kubernetes.io/part-of: shipwright-build
    app.kubernetes.io/version: "v0.10.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      name: shipwright-build
      app.kubernetes.io/name: shipwright-build
      app.kubernetes.io/instance: my-openfunction
      app.kubernetes.io/part-of: shipwright-build
  template:
    metadata:
      labels:
        name: shipwright-build
        app.kubernetes.io/name: shipwright-build
        app.kubernetes.io/instance: my-openfunction
        app.kubernetes.io/part-of: shipwright-build
    spec:
      containers:
        - env:
            - name: WATCH_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: BUILD_CONTROLLER_LEADER_ELECTION_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: CONTROLLER_NAME
              value: shipwright-build
            - name: GIT_ENABLE_REWRITE_RULE
              value: "false"
            - name: GIT_CONTAINER_IMAGE
              value: openfunction/shipwright-io-build-git:v0.10.0
            - name: MUTATE_IMAGE_CONTAINER_IMAGE
              value: openfunction/shipwright-mutate-image:v0.10.0
            - name: BUNDLE_CONTAINER_IMAGE
              value: openfunction/shipwright-bundle:v0.10.0
            - name: WAITER_CONTAINER_IMAGE
              value: openfunction/shipwright-waiter:v0.10.0
            - name: KUBERNETES_CLUSTER_DOMAIN
              value: cluster.local
          image: openfunction/shipwright-shipwright-build-controller:v0.10.0
          livenessProbe:
            httpGet:
              path: /metrics
              port: metrics-port
            initialDelaySeconds: 5
            periodSeconds: 10
          name: shipwright-build
          ports:
            - containerPort: 8383
              name: metrics-port
          readinessProbe:
            httpGet:
              path: /metrics
              port: metrics-port
            initialDelaySeconds: 5
            periodSeconds: 10
          resources: {}
      serviceAccountName: shipwright-build-controller
---
# Source: openfunction/charts/tekton-pipelines/templates/controller/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: tekton-pipelines
  name: tekton-pipelines-controller
  labels:
    app.kubernetes.io/component: controller
    pipeline.tekton.dev/release: v0.37.2
    version: v0.37.2
    helm.sh/chart: tekton-pipelines-0.37.2
    app.kubernetes.io/name: tekton-pipelines
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
    app.kubernetes.io/version: "v0.37.2"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: controller
      app.kubernetes.io/name: tekton-pipelines
      app.kubernetes.io/instance: default
      app.kubernetes.io/part-of: tekton-pipelines
  template:
    metadata:
      labels:
        app: tekton-pipelines-controller
        app.kubernetes.io/component: controller
        pipeline.tekton.dev/release: v0.37.2
        version: v0.37.2
        app.kubernetes.io/name: tekton-pipelines
        app.kubernetes.io/instance: default
        app.kubernetes.io/part-of: tekton-pipelines
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/os
                operator: NotIn
                values:
                - windows
      containers:
        - args:
          - -kubeconfig-writer-image
          - openfunction/tektoncd-pipeline-cmd-kubeconfigwriter:v0.37.2
          - -git-image
          - openfunction/tektoncd-pipeline-cmd-git-init:v0.37.2
          - -entrypoint-image
          - openfunction/tektoncd-pipeline-cmd-entrypoint:v0.37.2
          - -nop-image
          - openfunction/tektoncd-pipeline-cmd-nop:v0.37.2
          - -imagedigest-exporter-image
          - openfunction/tektoncd-pipeline-cmd-imagedigestexporter:v0.37.2
          - -pr-image
          - openfunction/tektoncd-pipeline-cmd-pullrequest-init:v0.37.2
          - -workingdirinit-image
          - openfunction/tektoncd-pipeline-cmd-workingdirinit:v0.37.2
          - -gsutil-image
          - openfunction/cloudsdktool-cloud-sdk@sha256:27b2c22bf259d9bc1a291e99c63791ba0c27a04d2db0a43241ba0f1f20f4067f
          - -shell-image
          - openfunction/distroless-base@sha256:b16b57be9160a122ef048333c68ba205ae4fe1a7b7cc6a5b289956292ebf45cc
          - -shell-image-win
          - mcr.microsoft.com/powershell:nanoserver@sha256:b6d5ff841b78bdf2dfed7550000fd4f3437385b8fa686ec0f010be24777654d6
          env:
            - name: SYSTEM_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: CONFIG_DEFAULTS_NAME
              value: config-defaults
            - name: CONFIG_LOGGING_NAME
              value: config-logging
            - name: CONFIG_OBSERVABILITY_NAME
              value: config-observability
            - name: CONFIG_ARTIFACT_BUCKET_NAME
              value: config-artifact-bucket
            - name: CONFIG_ARTIFACT_PVC_NAME
              value: config-artifact-pvc
            - name: CONFIG_FEATURE_FLAGS_NAME
              value: feature-flags
            - name: CONFIG_LEADERELECTION_NAME
              value: config-leader-election
            - name: SSL_CERT_FILE
              value: /etc/config-registry-cert/cert
            - name: SSL_CERT_DIR
              value: /etc/ssl/certs
            - name: METRICS_DOMAIN
              value: tekton.dev/pipeline
            - name: KUBERNETES_CLUSTER_DOMAIN
              value: cluster.local
          image: openfunction/tektoncd-pipeline-cmd-controller:v0.37.2
          livenessProbe:
            httpGet:
              path: /health
              port: probes
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
          name: tekton-pipelines-controller
          ports:
            - containerPort: 9090
              name: metrics
            - containerPort: 8008
              name: profiling
            - containerPort: 8080
              name: probes
          readinessProbe:
            httpGet:
              path: /readiness
              port: probes
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - all
            runAsGroup: 65532
            runAsUser: 65532
          volumeMounts:
            - mountPath: /etc/config-logging
              name: config-logging
            - mountPath: /etc/config-registry-cert
              name: config-registry-cert
      serviceAccountName: tekton-pipelines-controller
      volumes:
        - configMap:
            name: config-logging
          name: config-logging
        - configMap:
            name: config-registry-cert
          name: config-registry-cert
---
# Source: openfunction/charts/tekton-pipelines/templates/webhook/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: tekton-pipelines
  name: tekton-pipelines-webhook
  labels:
    app.kubernetes.io/component: webhook
    pipeline.tekton.dev/release: v0.37.2
    version: v0.37.2
    helm.sh/chart: tekton-pipelines-0.37.2
    app.kubernetes.io/name: tekton-pipelines
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
    app.kubernetes.io/version: "v0.37.2"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: webhook
      app.kubernetes.io/name: tekton-pipelines
      app.kubernetes.io/instance: default
      app.kubernetes.io/part-of: tekton-pipelines
  template:
    metadata:
      labels:
        app: tekton-pipelines-webhook
        app.kubernetes.io/component: webhook
        pipeline.tekton.dev/release: v0.37.2
        version: v0.37.2
        app.kubernetes.io/name: tekton-pipelines
        app.kubernetes.io/instance: default
        app.kubernetes.io/part-of: tekton-pipelines
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/os
                operator: NotIn
                values:
                - windows
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/component: webhook
                  app.kubernetes.io/instance: default
                  app.kubernetes.io/name: webhook
                  app.kubernetes.io/part-of: tekton-pipelines
              topologyKey: kubernetes.io/hostname
            weight: 100
      containers:
      - env:
        - name: SYSTEM_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: CONFIG_LOGGING_NAME
          value: config-logging
        - name: CONFIG_OBSERVABILITY_NAME
          value: config-observability
        - name: CONFIG_LEADERELECTION_NAME
          value: config-leader-election
        - name: CONFIG_FEATURE_FLAGS_NAME
          value: feature-flags
        - name: WEBHOOK_SERVICE_NAME
          value: tekton-pipelines-webhook
        - name: WEBHOOK_SECRET_NAME
          value: webhook-certs
        - name: METRICS_DOMAIN
          value: tekton.dev/pipeline
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: cluster.local
        image: openfunction/tektoncd-pipeline-cmd-webhook:v0.37.2
        livenessProbe:
          httpGet:
            path: /health
            port: probes
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
        name: webhook
        ports:
        - containerPort: 9090
          name: metrics
        - containerPort: 8008
          name: profiling
        - containerPort: 8443
          name: https-webhook
        - containerPort: 8080
          name: probes
        readinessProbe:
          httpGet:
            path: /readiness
            port: probes
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
        resources:
            limits:
              cpu: 500m
              memory: 500Mi
            requests:
              cpu: 100m
              memory: 100Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - all
          runAsGroup: 65532
          runAsUser: 65532
      serviceAccountName: tekton-pipelines-webhook
---
# Source: openfunction/templates/controller/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-openfunction-controller-manager
  labels:
    control-plane: controller-manager
    helm.sh/chart: openfunction-0.7.0
    app.kubernetes.io/name: openfunction
    app.kubernetes.io/instance: my-openfunction
    app.kubernetes.io/version: "v1.2.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
      app.kubernetes.io/name: openfunction
      app.kubernetes.io/instance: my-openfunction
  template:
    metadata:
      labels:
        control-plane: controller-manager
        app.kubernetes.io/name: openfunction
        app.kubernetes.io/instance: my-openfunction
    spec:
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        - --leader-elect
        command:
        - /openfunction
        env:
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: cluster.local
        image: openfunction/openfunction:v1.2.0
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: openfunction
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 100m
            memory: 20Mi
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=10
        env:
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: cluster.local
        image: openfunction/kube-rbac-proxy:v0.8.0
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
        resources: {}
      securityContext:
        runAsNonRoot: true
      serviceAccountName: my-openfunction-controller-manager
      terminationGracePeriodSeconds: 10
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: webhook-server-cert
---
# Source: openfunction/charts/knative-serving/templates/activator/hpa.yaml
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  namespace: knative-serving
  name: activator
  labels:
    app.kubernetes.io/component: activator
    serving.knative.dev/release: v1.3.2
    helm.sh/chart: knative-serving-1.3.2
    app.kubernetes.io/instance: my-openfunction
    app.kubernetes.io/version: "1.3.2"
    app.kubernetes.io/managed-by: Helm
spec:
  maxReplicas: 20
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 100
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: activator
---
# Source: openfunction/charts/knative-serving/templates/webhook/hpa.yaml
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  namespace: knative-serving
  name: webhook
  labels:
    app.kubernetes.io/component: webhook
    serving.knative.dev/release: v1.3.2
    helm.sh/chart: knative-serving-1.3.2
    app.kubernetes.io/instance: my-openfunction
    app.kubernetes.io/version: "1.3.2"
    app.kubernetes.io/managed-by: Helm
spec:
  maxReplicas: 5
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 100
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: webhook
---
# Source: openfunction/charts/tekton-pipelines/templates/webhook/hpa.yaml
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  namespace: tekton-pipelines
  name: tekton-pipelines-webhook
  labels:
    app.kubernetes.io/component: webhook
    pipeline.tekton.dev/release: v0.37.2
    version: v0.37.2
    helm.sh/chart: tekton-pipelines-0.37.2
    app.kubernetes.io/name: tekton-pipelines
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
    app.kubernetes.io/version: "v0.37.2"
    app.kubernetes.io/managed-by: Helm
spec:
  maxReplicas: 5
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 100
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: tekton-pipelines-webhook
---
# Source: openfunction/charts/dapr/charts/dapr_placement/templates/dapr_placement_statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  namespace: dapr-system
  name: dapr-placement-server
  labels:
    app: dapr-placement-server
    app.kubernetes.io/component: placement
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: my-openfunction
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.11.3
spec:
  replicas: 1
  serviceName: dapr-placement-server
  podManagementPolicy: Parallel
  selector:
    matchLabels:
      app: dapr-placement-server
  template:
    metadata:
      labels:
        app: dapr-placement-server
        app.kubernetes.io/component: placement
        app.kubernetes.io/managed-by: helm
        app.kubernetes.io/name: my-openfunction
        app.kubernetes.io/part-of: dapr
        app.kubernetes.io/version: 1.11.3
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/"
    spec:
      containers:
      - name: dapr-placement-server
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 3
          failureThreshold: 5
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 3
          periodSeconds: 3
          failureThreshold: 5
        image: "docker.io/daprio/placement:1.11.3"
        imagePullPolicy: IfNotPresent
        resources:
          {}
        volumeMounts:
          - name: credentials
            mountPath: /var/run/dapr/credentials
            readOnly: true
        ports:
          - containerPort: 50005
            name: api
          - containerPort: 8201
            name: raft-node
          - name: metrics
            containerPort: 9090
            protocol: TCP
        command:
        - "/placement"
        args:
        - "--log-level"
        - info
        - "--enable-metrics"
        - "--replicationFactor"
        - "100"
        - "--metrics-port"
        - "9090"
        - "--tls-enabled"
        securityContext:
          runAsUser: 0
        env:
          - name: PLACEMENT_ID
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
      serviceAccountName: dapr-placement
      volumes:
        - name: credentials
          secret:
            secretName: dapr-trust-bundle
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
             nodeSelectorTerms:
                - matchExpressions:
                  - key: kubernetes.io/os
                    operator: In
                    values:
                    - linux
---
# Source: openfunction/charts/knative-serving/templates/default-domain/default-domain.yaml
apiVersion: batch/v1
kind: Job
metadata:
  namespace: knative-serving
  name: default-domain
  labels:
    app: default-domain
    app.kubernetes.io/component: default-domain-job
    serving.knative.dev/release: v1.3.2
    helm.sh/chart: knative-serving-1.3.2
    app.kubernetes.io/instance: my-openfunction
    app.kubernetes.io/version: "1.3.2"
    app.kubernetes.io/managed-by: Helm
spec:
  backoffLimit: 10
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
      labels:
        app: default-domain
        app.kubernetes.io/component: default-domain-job
        app.kubernetes.io/name: knative-serving
        app.kubernetes.io/version: 1.3.2
    spec:
      containers:
      - args:
        - -magic-dns=sslip.io
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SYSTEM_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: openfunction/knative.dev-serving-cmd-default-domain:v1.3.2
        livenessProbe:
          failureThreshold: 6
          httpGet:
            port: 8080
        name: default-domain
        ports:
        - containerPort: 8080
          name: http
        readinessProbe:
          httpGet:
            port: 8080
        resources:
          limits:
            cpu: 1000m
            memory: 1000Mi
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
      restartPolicy: OnFailure
      serviceAccountName: controller
---
# Source: openfunction/charts/contour/templates/contour/ingressclass.yaml
apiVersion: networking.k8s.io/v1
kind: IngressClass
metadata:
  name: contour
  annotations:
    ingressclass.kubernetes.io/is-default-class: "true"
  labels:
    app.kubernetes.io/name: contour
    helm.sh/chart: contour-10.2.2
    app.kubernetes.io/instance: my-openfunction
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: contour
spec:
  controller: projectcontour.io/projectcontour/contour-contour
---
# Source: openfunction/charts/keda/templates/metrics-server/apiservice.yaml
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  namespace: keda
  labels:
    app.kubernetes.io/name: v1beta1.external.metrics.k8s.io    
    helm.sh/chart: keda-2.11.2
    app.kubernetes.io/component: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-openfunction
    app.kubernetes.io/part-of: keda-operator
    app.kubernetes.io/version: 2.11.2
  name: v1beta1.external.metrics.k8s.io
spec:
  service:
    name: keda-operator-metrics-apiserver
    namespace: keda
    port: 443
  group: external.metrics.k8s.io
  version: v1beta1
  groupPriorityMinimum: 100
  versionPriority: 100
---
# Source: openfunction/templates/build-strategies/buildah.yaml
apiVersion: shipwright.io/v1alpha1
kind: ClusterBuildStrategy
metadata:
  name: buildah
spec:
  buildSteps:
    - name: build-and-push
      image: $(params.BUILDER_IMAGE)
      workingDir: $(params.shp-source-root)
      securityContext:
        privileged: true
      command:
        - /bin/bash
      args:
        - -c
        - |
          set -euo pipefail

          # Parse parameters
          context=
          dockerfile=
          image=
          buildArgs=()
          inBuildArgs=false
          registriesBlock=""
          inRegistriesBlock=false
          registriesInsecure=""
          inRegistriesInsecure=false
          registriesSearch=""
          inRegistriesSearch=false
          tlsVerify=true
          while [[ $# -gt 0 ]]; do
            arg="$1"
            shift

            if [ "${arg}" == "--context" ]; then
              inBuildArgs=false
              inRegistriesBlock=false
              inRegistriesInsecure=false
              inRegistriesSearch=false
              context="$1"
              shift
            elif [ "${arg}" == "--dockerfile" ]; then
              inBuildArgs=false
              inRegistriesBlock=false
              inRegistriesInsecure=false
              inRegistriesSearch=false
              dockerfile="$1"
              shift
            elif [ "${arg}" == "--image" ]; then
              inBuildArgs=false
              inRegistriesBlock=false
              inRegistriesInsecure=false
              inRegistriesSearch=false
              image="$1"
              shift
            elif [ "${arg}" == "--build-args" ]; then
              inBuildArgs=true
              inRegistriesBlock=false
              inRegistriesInsecure=false
              inRegistriesSearch=false
            elif [ "${arg}" == "--registries-block" ]; then
              inRegistriesBlock=true
              inBuildArgs=false
              inRegistriesInsecure=false
              inRegistriesSearch=false
            elif [ "${arg}" == "--registries-insecure" ]; then
              inRegistriesInsecure=true
              inBuildArgs=false
              inRegistriesBlock=false
              inRegistriesSearch=false
            elif [ "${arg}" == "--registries-search" ]; then
              inRegistriesSearch=true
              inBuildArgs=false
              inRegistriesBlock=false
              inRegistriesInsecure=false
            elif [ "${inBuildArgs}" == "true" ]; then
              buildArgs+=("--build-arg" "${arg}")
            elif [ "${inRegistriesBlock}" == "true" ]; then
              registriesBlock="${registriesBlock}'${arg}', "
            elif [ "${inRegistriesInsecure}" == "true" ]; then
              registriesInsecure="${registriesInsecure}'${arg}', "

              # This assumes that the image is passed before the insecure registries which is fair in this context
              if [[ ${image} == ${arg}/* ]]; then
                tlsVerify=false
              fi
            elif [ "${inRegistriesSearch}" == "true" ]; then
              registriesSearch="${registriesSearch}'${arg}', "
            else
              echo "Invalid usage"
              exit 1
            fi
          done

          # Verify the existence of the context directory
          if [ ! -d "${context}" ]; then
            echo -e "The context directory '${context}' does not exist."
            echo -n "ContextDirNotFound" > '$(results.shp-error-reason.path)'
            echo -n "The context directory '${context}' does not exist." > '$(results.shp-error-message.path)'
            exit 1
          fi
          cd "${context}"

          # Verify the existence of the Dockerfile
          if [ ! -f "${dockerfile}" ]; then
            echo -e "The Dockerfile '${dockerfile}' does not exist."
            echo -n "DockerfileNotFound" > '$(results.shp-error-reason.path)'
            echo -n "The Dockerfile '${dockerfile}' does not exist." > '$(results.shp-error-message.path)'
            exit 1
          fi

          echo "[INFO] Creating registries config file..."
          if [ "${registriesSearch}" != "" ]; then
            cat <<EOF >>/tmp/registries.conf
          [registries.search]
          registries = [${registriesSearch::-2}]

          EOF
          fi
          if [ "${registriesInsecure}" != "" ]; then
            cat <<EOF >>/tmp/registries.conf
          [registries.insecure]
          registries = [${registriesInsecure::-2}]

          EOF
          fi
          if [ "${registriesBlock}" != "" ]; then
            cat <<EOF >>/tmp/registries.conf
          [registries.block]
          registries = [${registriesBlock::-2}]

          EOF
          fi

          # Building the image
          echo "[INFO] Building image ${image}"
          buildah bud "${buildArgs[@]}" \
            --registries-conf=/tmp/registries.conf \
            --tag="${image}" \
            --file="${dockerfile}" \
            .

          # Push the image
          echo "[INFO] Pushing image ${image}"
          buildah push \
            --digestfile='$(results.shp-image-digest.path)' \
            --tls-verify="${tlsVerify}" \
            "${image}" \
            "docker://${image}"
        # That's the separator between the shell script and its args
        - --
        - --context
        - $(params.shp-source-context)
        - --dockerfile
        - $(build.dockerfile)
        - --image
        - $(params.shp-output-image)
        - --build-args
        - $(params.build-args[*])
        - --registries-block
        - $(params.registries-block[*])
        - --registries-insecure
        - $(params.registries-insecure[*])
        - --registries-search
        - $(params.registries-search[*])
      resources:
        limits:
          cpu: "1"
          memory: 2Gi
        requests:
          cpu: 250m
          memory: 65Mi
  parameters:
    - name: build-args
      description: "The values for the args in the Dockerfile. Values must be in the format KEY=VALUE."
      type: array
      defaults: []
    - name: registries-block
      description: The registries that need to block pull access.
      type: array
      defaults: []
    - name: registries-insecure
      description: The fully-qualified name of insecure registries. An insecure registry is one that does not have a valid SSL certificate or only supports HTTP.
      type: array
      defaults: []
    - name: registries-search
      description: The registries for searching short name images such as `golang:latest`.
      type: array
      defaults:
        - docker.io
        - quay.io
---
# Source: openfunction/templates/build-strategies/kaniko.yaml
apiVersion: shipwright.io/v1alpha1
kind: ClusterBuildStrategy
metadata:
  name: kaniko
spec:
  volumes:
    - name: layout
      emptyDir: {}
  buildSteps:
    - name: build-and-push
      image: $(params.BUILDER_IMAGE)
      workingDir: $(params.shp-source-root)
      securityContext:
        runAsUser: 0
        capabilities:
          add:
            - CHOWN
            - DAC_OVERRIDE
            - FOWNER
            - SETGID
            - SETUID
            - SETFCAP
            - KILL
      env:
        - name: HOME
          value: /tekton/home
        - name: DOCKER_CONFIG
          value: /tekton/home/.docker
        - name: AWS_ACCESS_KEY_ID
          value: NOT_SET
        - name: AWS_SECRET_KEY
          value: NOT_SET
      command:
        - /kaniko/executor
      args:
        - --skip-tls-verify=true
        - --dockerfile=$(build.dockerfile)
        - --context=$(params.shp-source-context)
        - --destination=$(params.shp-output-image)
        - --oci-layout-path=/kaniko/oci-image-layout
        - --snapshotMode=redo
        - --push-retry=3
      resources:
        limits:
          cpu: 500m
          memory: 1Gi
        requests:
          cpu: 250m
          memory: 65Mi
      volumeMounts:
        - name: layout
          mountPath: /kaniko/oci-image-layout
    - name: results
      image: registry.access.redhat.com/ubi8/ubi-minimal
      command:
        - /bin/bash
      args:
        - -c
        - |
          set -euo pipefail

          # Store the image digest
          grep digest /kaniko/oci-image-layout/index.json | sed -E 's/.*sha256([^"]*).*/sha256\1/' | tr -d '\n' > "$(results.shp-image-digest.path)"

          # Store the image size
          du -b -c /kaniko/oci-image-layout/blobs/sha256/* | tail -1 | sed 's/\s*total//' | tr -d '\n' > "$(results.shp-image-size.path)"
      resources:
        limits:
          cpu: 100m
          memory: 128Mi
        requests:
          cpu: 100m
          memory: 128Mi
      volumeMounts:
        - name: layout
          mountPath: /kaniko/oci-image-layout
---
# Source: openfunction/templates/build-strategies/ko.yaml
apiVersion: shipwright.io/v1alpha1
kind: ClusterBuildStrategy
metadata:
  name: ko
spec:
  parameters:
    - name: go-flags
      description: "Value for the GOFLAGS environment variable."
      default: ""
    - name: go-version
      description: "Version of Go, must match a tag from https://hub.docker.com/_/golang?tab=tags"
      default: "1.18"
    - name: ko-version
      description: "Version of ko, must be either 'latest', or a release name from https://github.com/google/ko/releases"
      default: latest
    - name: package-directory
      description: "The directory inside the context directory containing the main package."
      default: "."
    - name: target-platform
      description: "Target platform to be built. For example: 'linux/arm64'. Multiple platforms can be provided separated by comma, for example: 'linux/arm64,linux/amd64'. The value 'all' will build all platforms supported by the base image. The value 'current' will build the platform on which the build runs."
      default: current
  volumes:
    - name: gocache
      description: "Volume to contain the GOCACHE. Can be set to a persistent volume to optimize compilation performance for rebuilds."
      overridable: true
      emptyDir: {}
  buildSteps:
    - name: prepare
      image: $(params.BUILDER_IMAGE)
      imagePullPolicy: Always
      securityContext:
        runAsUser: 0
        capabilities:
          add:
            - CHOWN
      command:
        - chown
      args:
        - -R
        - "1000:1000"
        - /tekton/home
      resources:
        limits:
          cpu: 100m
          memory: 128Mi
        requests:
          cpu: 100m
          memory: 128Mi
    - name: build-and-push
      image: golang:$(params.go-version)
      imagePullPolicy: Always
      workingDir: $(params.shp-source-root)
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
      volumeMounts:
        - mountPath: /gocache
          name: gocache
          readOnly: false
      env:
        - name: DOCKER_CONFIG
          value: /tekton/home/.docker
        - name: HOME
          value: /tekton/home
        - name: GOFLAGS
          value: $(params.go-flags)
        - name: GOCACHE
          value: /gocache
        - name: PARAM_OUTPUT_IMAGE
          value: $(params.shp-output-image)
        - name: PARAM_SOURCE_CONTEXT
          value: $(params.shp-source-context)
        - name: PARAM_TARGET_PLATFORM
          value: $(params.target-platform)
        - name: PARAM_PACKAGE_DIRECTORY
          value: $(params.package-directory)
        - name: PARAM_KO_VERSION
          value: $(params.ko-version)
      command:
        - /bin/bash
      args:
        - -c
        - |
          set -euo pipefail

          # Parse image URL to extract repository and tag, must work with
          # - a URL without a tag and a port: registry/image
          # - a URL without a tag but a port: registry:port/image
          # - a URL with a tag but without a port: registry/image:tag
          # - a URL with both a tag and a port: registry:port/image:tag

          REPO=
          TAG=

          IFS=':' read -ra PARTS <<< "${PARAM_OUTPUT_IMAGE}"
          for PART in "${PARTS[@]}"; do
            if [ "${REPO}" == "" ]; then
              REPO="${PART}"
          	elif [[ "${PART}" == *"/"* ]]; then
              REPO="${REPO}:${PART}"
            elif [ "${TAG}" == "" ]; then
              TAG="${PART}"
            else
              REPO="${REPO}:${TAG}"
              TAG="${PART}"
            fi
          done

          # Determine the ko version
          KO_VERSION="${PARAM_KO_VERSION}"
          if [ "${KO_VERSION}" == "latest" ]; then
            KO_VERSION=$(curl --silent -L "https://api.github.com/repos/google/ko/releases/latest" | grep '"tag_name":' | sed -E 's/.*"([^"]+)".*/\1/')
          fi

          # Create one variable with v-suffix and one without as we need both for the download URL
          if [[ ${KO_VERSION} = v* ]]; then
            KO_VERSION_WITH_V=${KO_VERSION}
            KO_VERSION_WITHOUT_V=${KO_VERSION:1}
          else
            KO_VERSION_WITH_V=v${KO_VERSION}
            KO_VERSION_WITHOUT_V=${KO_VERSION}
          fi

          # Download ko to the temp directory
          curl -f -s -L "https://github.com/google/ko/releases/download/${KO_VERSION_WITH_V}/ko_${KO_VERSION_WITHOUT_V}_$(uname)_$(uname -m | sed 's/aarch64/arm64/').tar.gz" | tar xzf - -C /tmp ko

          # Determine the platform
          PLATFORM="${PARAM_TARGET_PLATFORM}"
          if [ "${PLATFORM}" == "current" ]; then
            PLATFORM="$(uname | tr '[:upper:]' '[:lower:]')/$(uname -m | sed -e 's/x86_64/amd64/' -e 's/aarch64/arm64/')"
          fi

          # Print version information
          go version
          echo "ko version $(/tmp/ko version)"

          # Run ko

          export GOROOT="$(go env GOROOT)"
          export KO_DOCKER_REPO="${REPO}"

          pushd "${PARAM_SOURCE_CONTEXT}" > /dev/null
            if [ "${TAG}" == "" ]; then
              /tmp/ko publish "${PARAM_PACKAGE_DIRECTORY}" --bare --oci-layout-path=/tmp/layout --platform="${PLATFORM}"
            else
              /tmp/ko publish "${PARAM_PACKAGE_DIRECTORY}" --bare --oci-layout-path=/tmp/layout --platform="${PLATFORM}" --tags="${TAG}"
            fi
          popd > /dev/null

          # Store the image digest
          grep digest /tmp/layout/index.json | sed -E 's/.*sha256([^"]*).*/sha256\1/' | tr -d '\n' > '$(results.shp-image-digest.path)'

          # Store the image size
          du -b -c /tmp/layout/blobs/sha256/* | tail -1 | sed 's/\s*total//' | tr -d '\n' > '$(results.shp-image-size.path)'
      resources:
        limits:
          cpu: 500m
          memory: 1Gi
        requests:
          cpu: 250m
          memory: 65Mi
---
# Source: openfunction/templates/build-strategies/openfunction.yaml
apiVersion: shipwright.io/v1alpha1
kind: ClusterBuildStrategy
metadata:
  name: openfunction
  labels:
    helm.sh/chart: openfunction-0.7.0
    app.kubernetes.io/name: openfunction
    app.kubernetes.io/instance: my-openfunction
    app.kubernetes.io/version: "v1.2.0"
    app.kubernetes.io/managed-by: Helm
spec:
  volumes:
    - emptyDir: { }
      name: cache
    - emptyDir: { }
      name: layers-dir
    - emptyDir: { }
      name: $(params.PLATFORM_DIR)
  buildSteps:
  - args:
    - -c
    - |
      #!/usr/bin/env bash
      set -e

      for path in "/cache" "/tekton/home" "/layers" "/workspace/source"; do
        echo "> Setting permissions on '$path'..."
        chown -R "$(params.USER_ID):$(params.GROUP_ID)" "$path"
      done

      echo "> Processing any environment variables..."
      ENV_DIR="/platform/env"

      echo "--> Creating 'env' directory: $ENV_DIR"
      mkdir -p "$ENV_DIR"

      envs=(`echo $(params.ENV_VARS) | tr '#' ' '`)

      for env in "${envs[@]}"; do
          IFS='=' read -r key value string <<< "$env"
          if [[ "$key" != "" && "$value" != "" ]]; then
              path="${ENV_DIR}/${key}"
              echo "--> Writing ${path}..."
              echo -n "$value" > "$path"
          fi
      done
    command:
    - /usr/local/bin/bash
    image: $(params.BASH_IMAGE)
    name: prepare
    securityContext:
      privileged: true
    volumeMounts:
    - mountPath: /cache
      name: cache
    - mountPath: /layers
      name: layers-dir
    - mountPath: /platform
      name: $(params.PLATFORM_DIR)
  - args:
    - -app=/workspace/source/$(params.CONTEXT_DIR)
    - -cache-dir=/cache
    - -cache-image=$(params.CACHE_IMAGE)
    - -uid=$(params.USER_ID)
    - -gid=$(params.GROUP_ID)
    - -layers=/layers
    - -platform=/platform
    - -report=/layers/report.toml
    - -process-type=$(params.PROCESS_TYPE)
    - -skip-restore=$(params.SKIP_RESTORE)
    - -previous-image=$(params.shp-output-image)
    - -run-image=$(params.RUN_IMAGE)
    - $(params.shp-output-image)
    command:
    - /cnb/lifecycle/creator
    image: $(params.BUILDER_IMAGE)
    imagePullPolicy: Always
    name: create
    securityContext:
      runAsGroup: 1000
      runAsUser: 1000
    volumeMounts:
    - mountPath: /cache
      name: cache
    - mountPath: /layers
      name: layers-dir
    - mountPath: /platform
      name: $(params.PLATFORM_DIR)
  - args:
    - -c
    - |
      #!/usr/bin/env bash
      set -e
      cat /layers/report.toml | grep "digest" | cut -d'"' -f2 | cut -d'"' -f2 | tr -d '\n' | tee $(results.shp-image-digest.path)
    command:
    - /bin/sh
    image: $(params.BASH_IMAGE)
    name: results
    volumeMounts:
    - mountPath: /layers
      name: layers-dir
  parameters:
  - default: web
    description: The default process type to set on the image.
    name: PROCESS_TYPE
  - default: ""
    description: Reference to a run image to use.
    name: RUN_IMAGE
  - default: ""
    description: The name of the persistent app cache image (if no cache workspace
      is provided).
    name: CACHE_IMAGE
  - default: "false"
    description: Do not write layer metadata or restore cached layers.
    name: SKIP_RESTORE
  - default: "1000"
    description: The user ID of the builder image user.
    name: USER_ID
  - default: "1000"
    description: The group ID of the builder image user.
    name: GROUP_ID
  - default: empty-dir
    description: The name of the platform directory.
    name: PLATFORM_DIR
  - default: ""
    description: Environment variables to set during _build-time_. The formate is
      `key1=value1,key2=value2`.
    name: ENV_VARS
  - default: "docker.io/library/bash:5.1.4"
    description: The bash image.
    name: BASH_IMAGE
---
# Source: openfunction/templates/build-strategies/wasmedge.yaml
apiVersion: shipwright.io/v1alpha1
kind: ClusterBuildStrategy
metadata:
  name: wasmedge
spec:
  buildSteps:
    - args:
        - -c
        - |
          set -euo pipefail

          # Parse parameters
          context=
          dockerfile=
          image=
          buildArgs=()
          inBuildArgs=false
          registriesBlock=""
          inRegistriesBlock=false
          registriesInsecure=""
          inRegistriesInsecure=false
          registriesSearch=""
          inRegistriesSearch=false
          tlsVerify=true
          while [[ $# -gt 0 ]]; do
            arg="$1"
            shift

            if [ "${arg}" == "--context" ]; then
              inBuildArgs=false
              inRegistriesBlock=false
              inRegistriesInsecure=false
              inRegistriesSearch=false
              context="$1"
              shift
            elif [ "${arg}" == "--dockerfile" ]; then
              inBuildArgs=false
              inRegistriesBlock=false
              inRegistriesInsecure=false
              inRegistriesSearch=false
              dockerfile="$1"
              shift
            elif [ "${arg}" == "--image" ]; then
              inBuildArgs=false
              inRegistriesBlock=false
              inRegistriesInsecure=false
              inRegistriesSearch=false
              image="$1"
              shift
            elif [ "${arg}" == "--build-args" ]; then
              inBuildArgs=true
              inRegistriesBlock=false
              inRegistriesInsecure=false
              inRegistriesSearch=false
            elif [ "${arg}" == "--registries-block" ]; then
              inRegistriesBlock=true
              inBuildArgs=false
              inRegistriesInsecure=false
              inRegistriesSearch=false
            elif [ "${arg}" == "--registries-insecure" ]; then
              inRegistriesInsecure=true
              inBuildArgs=false
              inRegistriesBlock=false
              inRegistriesSearch=false
            elif [ "${arg}" == "--registries-search" ]; then
              inRegistriesSearch=true
              inBuildArgs=false
              inRegistriesBlock=false
              inRegistriesInsecure=false
            elif [ "${inBuildArgs}" == "true" ]; then
              buildArgs+=("--build-arg" "${arg}")
            elif [ "${inRegistriesBlock}" == "true" ]; then
              registriesBlock="${registriesBlock}'${arg}', "
            elif [ "${inRegistriesInsecure}" == "true" ]; then
              registriesInsecure="${registriesInsecure}'${arg}', "

              # This assumes that the image is passed before the insecure registries which is fair in this context
              if [[ ${image} == ${arg}/* ]]; then
                tlsVerify=false
              fi
            elif [ "${inRegistriesSearch}" == "true" ]; then
              registriesSearch="${registriesSearch}'${arg}', "
            else
              echo "Invalid usage"
              exit 1
            fi
          done

          # Verify the existence of the context directory
          if [ ! -d "${context}" ]; then
            echo -e "The context directory '${context}' does not exist."
            echo -n "ContextDirNotFound" > '$(results.shp-error-reason.path)'
            echo -n "The context directory '${context}' does not exist." > '$(results.shp-error-message.path)'
            exit 1
          fi
          cd "${context}"

          # Verify the existence of the Dockerfile
          if [ ! -f "${dockerfile}" ]; then
            echo -e "The Dockerfile '${dockerfile}' does not exist."
            echo -n "DockerfileNotFound" > '$(results.shp-error-reason.path)'
            echo -n "The Dockerfile '${dockerfile}' does not exist." > '$(results.shp-error-message.path)'
            exit 1
          fi

          echo "[INFO] Creating registries config file..."
          if [ "${registriesSearch}" != "" ]; then
            cat <<EOF >>/tmp/registries.conf
          [registries.search]
          registries = [${registriesSearch::-2}]

          EOF
          fi
          if [ "${registriesInsecure}" != "" ]; then
            cat <<EOF >>/tmp/registries.conf
          [registries.insecure]
          registries = [${registriesInsecure::-2}]

          EOF
          fi
          if [ "${registriesBlock}" != "" ]; then
            cat <<EOF >>/tmp/registries.conf
          [registries.block]
          registries = [${registriesBlock::-2}]

          EOF
          fi

          # Building the image
          echo "[INFO] Building image ${image}"
          buildah bud "${buildArgs[@]}" \
            --registries-conf=/tmp/registries.conf \
            --tag="${image}" \
            --file="${dockerfile}" \
            .

          # Push the image
          echo "[INFO] Pushing image ${image}"
          buildah push \
            --digestfile='$(results.shp-image-digest.path)' \
            --tls-verify="${tlsVerify}" \
            "${image}" \
            "docker://${image}"
        - --
        - --context
        - $(params.shp-source-context)
        - --dockerfile
        - $(build.dockerfile)
        - --image
        - $(params.shp-output-image)
        - --build-args
        - $(params.build-args[*])
        - --registries-block
        - $(params.registries-block[*])
        - --registries-insecure
        - $(params.registries-insecure[*])
        - --registries-search
        - $(params.registries-search[*])
      command:
        - /bin/bash
      image: quay.io/containers/buildah:v1.28.0
      name: build-and-push
      resources:
        limits:
          cpu: "1"
          memory: 2Gi
        requests:
          cpu: 250m
          memory: 65Mi
      securityContext:
        privileged: true
      workingDir: $(params.shp-source-root)
  parameters:
    - defaults:
        - annotation=module.wasm.image/variant=compat-smart
      description: The values for the args in the Dockerfile. Values must be in the
        format KEY=VALUE.
      name: build-args
      type: array
    - defaults: []
      description: The registries that need to block pull access.
      name: registries-block
      type: array
    - defaults: []
      description: The fully-qualified name of insecure registries. An insecure registry
        is one that does not have a valid SSL certificate or only supports HTTP.
      name: registries-insecure
      type: array
    - defaults:
        - docker.io
        - quay.io
      description: The registries for searching short name images such as `golang:latest`.
      name: registries-search
      type: array
    - default: ""
      description: Environment variables to set during _build-time_. The formate is
        `key1=value1,key2=value2`.
      name: ENV_VARS
---
# Source: openfunction/charts/dapr/charts/dapr_config/templates/dapr_default_config.yaml
apiVersion: dapr.io/v1alpha1
kind: Configuration
metadata:
  namespace: dapr-system
  name: daprsystem
  labels:
    app.kubernetes.io/component: config
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: my-openfunction
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.11.3
spec:
  mtls:
    enabled: true
    workloadCertTTL: 24h
    allowedClockSkew: 15m
---
# Source: openfunction/templates/gateway/gateway.yaml
apiVersion: gateway.networking.k8s.io/v1alpha2
kind: Gateway
metadata:
  name: contour
  namespace: projectcontour
  labels:
    helm.sh/chart: openfunction-0.7.0
    app.kubernetes.io/name: openfunction
    app.kubernetes.io/instance: my-openfunction
    app.kubernetes.io/version: "v1.2.0"
    app.kubernetes.io/managed-by: Helm
spec:
  gatewayClassName: contour
  listeners:
    - name: http
      hostname: '*.example.com'
      protocol: HTTP
      port: 80
      allowedRoutes:
        namespaces:
          from: All
---
# Source: openfunction/templates/gateway/openfunction-gateway.yaml
apiVersion: networking.openfunction.io/v1alpha1
kind: Gateway
metadata:
  name: openfunction
  labels:
    helm.sh/chart: openfunction-0.7.0
    app.kubernetes.io/name: openfunction
    app.kubernetes.io/instance: my-openfunction
    app.kubernetes.io/version: "v1.2.0"
    app.kubernetes.io/managed-by: Helm
spec:
  domain: ofn.io
  clusterDomain: cluster.local
  hostTemplate: "{{.Name}}.{{.Namespace}}.{{.Domain}}"
  pathTemplate: "{{.Namespace}}/{{.Name}}"
  httpRouteLabelKey: "app.kubernetes.io/managed-by"
  gatewayRef:
    name: contour
    namespace: projectcontour
  gatewaySpec:
    listeners:
      - name: ofn-http-internal
        hostname: "*.cluster.local"
        protocol: HTTP
        port: 80
        allowedRoutes:
          namespaces:
            from: All
      - name: ofn-http-external
        hostname: "*.ofn.io"
        protocol: HTTP
        port: 80
        allowedRoutes:
          namespaces:
            from: All
---
# Source: openfunction/templates/gateway/gateway-class.yaml
apiVersion: gateway.networking.k8s.io/v1alpha2
kind: GatewayClass
metadata:
  name: contour
  labels:
    helm.sh/chart: openfunction-0.7.0
    app.kubernetes.io/name: openfunction
    app.kubernetes.io/instance: my-openfunction
    app.kubernetes.io/version: "v1.2.0"
    app.kubernetes.io/managed-by: Helm
spec:
  controllerName: projectcontour.io/projectcontour/contour
---
# Source: openfunction/charts/knative-serving/templates/queue-proxy.yaml
apiVersion: caching.internal.knative.dev/v1alpha1
kind: Image
metadata:
  namespace: knative-serving
  name: queue-proxy
  labels:
    app.kubernetes.io/component: queue-proxy
    serving.knative.dev/release: v1.3.2
    helm.sh/chart: knative-serving-1.3.2
    app.kubernetes.io/instance: my-openfunction
    app.kubernetes.io/version: "1.3.2"
    app.kubernetes.io/managed-by: Helm
spec:
  image: openfunction/knative.dev-serving-cmd-queue:v1.3.2
---
# Source: openfunction/charts/dapr/charts/dapr_sidecar_injector/templates/dapr_sidecar_injector_webhook_config.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  namespace: dapr-system
  name: dapr-sidecar-injector
  labels:
    app: dapr-sidecar-injector
    app.kubernetes.io/component: sidecar-injector
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: my-openfunction
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.11.3
webhooks:
- name: sidecar-injector.dapr.io
  reinvocationPolicy: IfNeeded
  clientConfig:
    service:
      namespace: dapr-system
      name: dapr-sidecar-injector
      path: "/mutate"
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNakNDQWhxZ0F3SUJBZ0lSQUk0UUpPZ0llRmpnSDBYUmJ3UkhuZm93RFFZSktvWklodmNOQVFFTEJRQXcKSXpFaE1COEdBMVVFQXhNWVpHRndjaTF6YVdSbFkyRnlMV2x1YW1WamRHOXlMV05oTUI0WERUSTBNRGt4TmpFdwpNamMwTTFvWERUTTBNRGt4TkRFd01qYzBNMW93SXpFaE1COEdBMVVFQXhNWVpHRndjaTF6YVdSbFkyRnlMV2x1CmFtVmpkRzl5TFdOaE1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBNzBia01KeGEKUU94eFExNGNJbXM4SEtSdDNIUjJRZ1QvZEhYM29pTmFKVkRJVXVYZW9JS3JhSGlMV1EzbU5QWll0V24wU053QQpmclhJdC9nSCs0cHR0SUNScWZwL0R6UEFyZDRkbnJwenF0ZUd5djRFaFpCMXpjU0ZrM0RSUWxSV2V4K054N2xvCnVmbys4OVNBZmhpTHFZLytwWmU0K2szVUs0a1M1Yy9WaUh6RlcxT0I5eGwxK0V5QkdhcHpoYjdFb21YOVR4dHYKOFhlKzQxa3pGdnFlWHViNC9MMVVSSXU3QkJzaFd6UW9mQXNqYUdVd3p1OFhyaEw5TDFUUmtRR0VsTExjbmZLWQp2OG5zUEw1QWZsNGxVV0Y0dFROcUZ4bDRVRDA5WXl1bFVMTytCdHRwR2RLYWlNSmpSakVaUUl0Q2dqU0hCQlM0Cmd2T3hSUUI1TU8vbTRRSURBUUFCbzJFd1h6QU9CZ05WSFE4QkFmOEVCQU1DQXFRd0hRWURWUjBsQkJZd0ZBWUkKS3dZQkJRVUhBd0VHQ0NzR0FRVUZCd01DTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkxhawpYTkhkQmdXeW1iZ2UzeGdzd1RhVHFNL1FNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUJXM2dBREVvajFuVmwxCkN5OHJYbXVQSmV5SDdlWXk0clQ3aUtVaDgybnhOYUcyNFl4ZmNtTzczZXNQL2NKem5GRE8rU0VJK3lpTjdvRHUKSHV3cjJnamRPbmtpNUk5M3hvWS80dllrTXl0L0Z6anNGU2RubndjeExDaFdiN3VicDVFeDVOSHFuVVArTklUZQpBM041aEMwWk9TWE13SFRRT2d6VzhwMkV0cDdQSFROUHlmYkE0RG5sOVdzWUcwYitSbEdxaHNVd3hrdk0vcyttCmlGdytlaFNsKy8zU0ljR1JPTFNCZ3VNZWprbWFiUldzYVQwYmFleHFQY1hiOHFlZE5acWU4RmtEckRiYW4zdXcKYjRSNGtSc0QrelNqSzlUaDBmUmI0YzEyNFBwTGsvYmk5UnZwZHBkT0hCVDJUMWxWOERqczNKVHE3N2xBL01BbQpQR081YlhBZQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  rules:
  - apiGroups:
    - ""
    apiVersions:
    - v1
    resources:
    - pods
    operations:
    - CREATE
  failurePolicy: Ignore
  sideEffects: None
  admissionReviewVersions: ["v1", "v1beta1"]
---
# Source: openfunction/charts/knative-serving/templates/webhook/domainmapping-mutating-webhook.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  namespace: knative-serving
  name: webhook.domainmapping.serving.knative.dev
  labels:
    helm.sh/chart: knative-serving-1.3.2
    app.kubernetes.io/instance: my-openfunction
    app.kubernetes.io/version: "1.3.2"
    app.kubernetes.io/managed-by: Helm
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: domainmapping-webhook
      namespace: 'knative-serving'
  failurePolicy: Fail
  name: webhook.domainmapping.serving.knative.dev
  rules:
  - apiGroups:
    - serving.knative.dev
    apiVersions:
    - v1alpha1
    - v1beta1
    operations:
    - CREATE
    - UPDATE
    resources:
    - domainmappings
    scope: '*'
  sideEffects: None
  timeoutSeconds: 10
---
# Source: openfunction/charts/knative-serving/templates/webhook/mutating-webhook.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  namespace: knative-serving
  name: webhook.serving.knative.dev
  labels:
    helm.sh/chart: knative-serving-1.3.2
    app.kubernetes.io/instance: my-openfunction
    app.kubernetes.io/version: "1.3.2"
    app.kubernetes.io/managed-by: Helm
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: webhook
      namespace: 'knative-serving'
  failurePolicy: Fail
  name: webhook.serving.knative.dev
  rules:
  - apiGroups:
    - autoscaling.internal.knative.dev
    - networking.internal.knative.dev
    - serving.knative.dev
    apiVersions:
    - '*'
    operations:
    - CREATE
    - UPDATE
    resources:
    - metrics
    - podautoscalers
    - certificates
    - ingresses
    - serverlessservices
    - configurations
    - revisions
    - routes
    - services
    scope: '*'
  sideEffects: None
  timeoutSeconds: 10
---
# Source: openfunction/charts/tekton-pipelines/templates/webhook/mutating-webhook-configuration.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  namespace: tekton-pipelines
  name: webhook.pipeline.tekton.dev
  labels:
    helm.sh/chart: tekton-pipelines-0.37.2
    app.kubernetes.io/name: tekton-pipelines
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
    app.kubernetes.io/version: "v0.37.2"
    app.kubernetes.io/managed-by: Helm
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: 'tekton-pipelines-webhook'
      namespace: 'tekton-pipelines'
  failurePolicy: Fail
  name: webhook.pipeline.tekton.dev
  sideEffects: None
---
# Source: openfunction/templates/webhook/mutating-webhook.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: my-openfunction-mutating-webhook-configuration
  labels:
    helm.sh/chart: openfunction-0.7.0
    app.kubernetes.io/name: openfunction
    app.kubernetes.io/instance: my-openfunction
    app.kubernetes.io/version: "v1.2.0"
    app.kubernetes.io/managed-by: Helm
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUROVENDQWgyZ0F3SUJBZ0lVUWNCUGt6MC90OTZ2dzJZV2F0S1JqRWZwaFJrd0RRWUpLb1pJaHZjTkFRRUwKQlFBd0tqRW9NQ1lHQTFVRUF3d2ZZMkV0YjNCbGJtWjFibU4wYVc5dUxYZGxZbWh2YjJzdGMyVnlkbWxqWlRBZQpGdzB5TWpBME1EY3dNelV3TURaYUZ3MHpNakEwTURRd016VXdNRFphTUNveEtEQW1CZ05WQkFNTUgyTmhMVzl3ClpXNW1kVzVqZEdsdmJpMTNaV0pvYjI5ckxYTmxjblpwWTJVd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUIKRHdBd2dnRUtBb0lCQVFEVXpZK1hZSmoxdS9sNmZvR1NiWEhaUDNhZklZN1lFRi9ZUk9sQ1V0Q2VBZ25CSDE4NwpqUk1hUVlTWmxMQTBBNEUxR0ZONzVqUU5KV3k5MVJkZmsxN1Z3RFlSa2lpUmg4bjNJbHpsbHQrQ3JKdWJsUHJmCkRFUVZuUkNTRW1Udnc5WmIvWkpXSXloRTNmN0dhckY4S3R3VVZXazNzTzB2Mk0wWXVvdGQxdjdUV3JmS0FBaUgKQjhNS0E2VTN6M0gyOSs0M1NkN1I5SW8vQzhuSFVHMkUrMDk5R3lhcnhRNUVkb2hkTkVCc05jbGprS0ZkNDRkKwpTdzRSVG56MFhIS1JILy9TM0hQMmUvd1ptRTBkb2E0N2VXdlVBay8waUxtMnY3Wk1CWUF2TmFDamVOd3BNNjJmCmpBVnd2YVBid0lIRGZBZHdRaU42bHhrbThIWHlsV0xEZDVnTEFnTUJBQUdqVXpCUk1CMEdBMVVkRGdRV0JCVEYKL0VFcGdsVGJOZ1VTYnhTS2c1bk1kMzMyZ3pBZkJnTlZIU01FR0RBV2dCVEYvRUVwZ2xUYk5nVVNieFNLZzVuTQpkMzMyZ3pBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFCWTN5MWI0MC9sCm03bVJrek91YnRFSnNYWWUzYTFSYkx0eE4vNnQzOG1kNnlneWxVVzZ5WWxJTHBYdjc1ZlFIR3Z2cUhMREdJdmMKOG5VVCsrNUgrUHExaHZxeVV3azFUby9NODE2NkNDMHB2UVNERERMMkNYUzl5TWtrL25tQXBTV2l5aVhRT0cxRApyWEdSMk9BZFlYcFdaNHlzZFRqSGNCY2V1Z3Y0ZzJGOWtXSXJ1eDBCeExGdzE4YjVqSGI1dTltK1VnMDZZMTd6ClNxbWhza0dYajVLWTkwWXAwZUpnUHBWRjNPSzhIWGRYbVlTcjdjOXp4bWc1NGR4K0QxcnMveUc1SjJBN1NTU3gKM1BnL05zbXZvY2QzdFp3K1ZyUnkycC9GbXZ4aUdQOHM0MFBQMTVjdkZMcnM0REVZRFVtekxXNmtqVW9aK041bgpiZFFGM24rZ045ZnkKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    service:
      name: 'my-openfunction-webhook-service'
      namespace: 'default'
      path: /mutate-core-openfunction-io-v1beta2-function
  failurePolicy: Fail
  name: mfunctions.of.io
  rules:
  - apiGroups:
    - core.openfunction.io
    apiVersions:
    - v1beta2
    operations:
    - CREATE
    - UPDATE
    resources:
    - functions
  sideEffects: None
- admissionReviewVersions:
  - v1
  clientConfig:
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUROVENDQWgyZ0F3SUJBZ0lVUWNCUGt6MC90OTZ2dzJZV2F0S1JqRWZwaFJrd0RRWUpLb1pJaHZjTkFRRUwKQlFBd0tqRW9NQ1lHQTFVRUF3d2ZZMkV0YjNCbGJtWjFibU4wYVc5dUxYZGxZbWh2YjJzdGMyVnlkbWxqWlRBZQpGdzB5TWpBME1EY3dNelV3TURaYUZ3MHpNakEwTURRd016VXdNRFphTUNveEtEQW1CZ05WQkFNTUgyTmhMVzl3ClpXNW1kVzVqZEdsdmJpMTNaV0pvYjI5ckxYTmxjblpwWTJVd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUIKRHdBd2dnRUtBb0lCQVFEVXpZK1hZSmoxdS9sNmZvR1NiWEhaUDNhZklZN1lFRi9ZUk9sQ1V0Q2VBZ25CSDE4NwpqUk1hUVlTWmxMQTBBNEUxR0ZONzVqUU5KV3k5MVJkZmsxN1Z3RFlSa2lpUmg4bjNJbHpsbHQrQ3JKdWJsUHJmCkRFUVZuUkNTRW1Udnc5WmIvWkpXSXloRTNmN0dhckY4S3R3VVZXazNzTzB2Mk0wWXVvdGQxdjdUV3JmS0FBaUgKQjhNS0E2VTN6M0gyOSs0M1NkN1I5SW8vQzhuSFVHMkUrMDk5R3lhcnhRNUVkb2hkTkVCc05jbGprS0ZkNDRkKwpTdzRSVG56MFhIS1JILy9TM0hQMmUvd1ptRTBkb2E0N2VXdlVBay8waUxtMnY3Wk1CWUF2TmFDamVOd3BNNjJmCmpBVnd2YVBid0lIRGZBZHdRaU42bHhrbThIWHlsV0xEZDVnTEFnTUJBQUdqVXpCUk1CMEdBMVVkRGdRV0JCVEYKL0VFcGdsVGJOZ1VTYnhTS2c1bk1kMzMyZ3pBZkJnTlZIU01FR0RBV2dCVEYvRUVwZ2xUYk5nVVNieFNLZzVuTQpkMzMyZ3pBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFCWTN5MWI0MC9sCm03bVJrek91YnRFSnNYWWUzYTFSYkx0eE4vNnQzOG1kNnlneWxVVzZ5WWxJTHBYdjc1ZlFIR3Z2cUhMREdJdmMKOG5VVCsrNUgrUHExaHZxeVV3azFUby9NODE2NkNDMHB2UVNERERMMkNYUzl5TWtrL25tQXBTV2l5aVhRT0cxRApyWEdSMk9BZFlYcFdaNHlzZFRqSGNCY2V1Z3Y0ZzJGOWtXSXJ1eDBCeExGdzE4YjVqSGI1dTltK1VnMDZZMTd6ClNxbWhza0dYajVLWTkwWXAwZUpnUHBWRjNPSzhIWGRYbVlTcjdjOXp4bWc1NGR4K0QxcnMveUc1SjJBN1NTU3gKM1BnL05zbXZvY2QzdFp3K1ZyUnkycC9GbXZ4aUdQOHM0MFBQMTVjdkZMcnM0REVZRFVtekxXNmtqVW9aK041bgpiZFFGM24rZ045ZnkKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    service:
      name: 'my-openfunction-webhook-service'
      namespace: 'default'
      path: /mutate-core-openfunction-io-v1beta2-serving
  failurePolicy: Fail
  name: mservings.of.io
  rules:
  - apiGroups:
    - core.openfunction.io
    apiVersions:
    - v1beta2
    operations:
    - CREATE
    - UPDATE
    resources:
    - servings
  sideEffects: None
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUROVENDQWgyZ0F3SUJBZ0lVUWNCUGt6MC90OTZ2dzJZV2F0S1JqRWZwaFJrd0RRWUpLb1pJaHZjTkFRRUwKQlFBd0tqRW9NQ1lHQTFVRUF3d2ZZMkV0YjNCbGJtWjFibU4wYVc5dUxYZGxZbWh2YjJzdGMyVnlkbWxqWlRBZQpGdzB5TWpBME1EY3dNelV3TURaYUZ3MHpNakEwTURRd016VXdNRFphTUNveEtEQW1CZ05WQkFNTUgyTmhMVzl3ClpXNW1kVzVqZEdsdmJpMTNaV0pvYjI5ckxYTmxjblpwWTJVd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUIKRHdBd2dnRUtBb0lCQVFEVXpZK1hZSmoxdS9sNmZvR1NiWEhaUDNhZklZN1lFRi9ZUk9sQ1V0Q2VBZ25CSDE4NwpqUk1hUVlTWmxMQTBBNEUxR0ZONzVqUU5KV3k5MVJkZmsxN1Z3RFlSa2lpUmg4bjNJbHpsbHQrQ3JKdWJsUHJmCkRFUVZuUkNTRW1Udnc5WmIvWkpXSXloRTNmN0dhckY4S3R3VVZXazNzTzB2Mk0wWXVvdGQxdjdUV3JmS0FBaUgKQjhNS0E2VTN6M0gyOSs0M1NkN1I5SW8vQzhuSFVHMkUrMDk5R3lhcnhRNUVkb2hkTkVCc05jbGprS0ZkNDRkKwpTdzRSVG56MFhIS1JILy9TM0hQMmUvd1ptRTBkb2E0N2VXdlVBay8waUxtMnY3Wk1CWUF2TmFDamVOd3BNNjJmCmpBVnd2YVBid0lIRGZBZHdRaU42bHhrbThIWHlsV0xEZDVnTEFnTUJBQUdqVXpCUk1CMEdBMVVkRGdRV0JCVEYKL0VFcGdsVGJOZ1VTYnhTS2c1bk1kMzMyZ3pBZkJnTlZIU01FR0RBV2dCVEYvRUVwZ2xUYk5nVVNieFNLZzVuTQpkMzMyZ3pBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFCWTN5MWI0MC9sCm03bVJrek91YnRFSnNYWWUzYTFSYkx0eE4vNnQzOG1kNnlneWxVVzZ5WWxJTHBYdjc1ZlFIR3Z2cUhMREdJdmMKOG5VVCsrNUgrUHExaHZxeVV3azFUby9NODE2NkNDMHB2UVNERERMMkNYUzl5TWtrL25tQXBTV2l5aVhRT0cxRApyWEdSMk9BZFlYcFdaNHlzZFRqSGNCY2V1Z3Y0ZzJGOWtXSXJ1eDBCeExGdzE4YjVqSGI1dTltK1VnMDZZMTd6ClNxbWhza0dYajVLWTkwWXAwZUpnUHBWRjNPSzhIWGRYbVlTcjdjOXp4bWc1NGR4K0QxcnMveUc1SjJBN1NTU3gKM1BnL05zbXZvY2QzdFp3K1ZyUnkycC9GbXZ4aUdQOHM0MFBQMTVjdkZMcnM0REVZRFVtekxXNmtqVW9aK041bgpiZFFGM24rZ045ZnkKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    service:
      name: 'my-openfunction-webhook-service'
      namespace: 'default'
      path: /mutate-networking-openfunction-io-v1alpha1-gateway
  failurePolicy: Fail
  name: mgateway.of.io
  rules:
  - apiGroups:
    - networking.openfunction.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - gateways
  sideEffects: None
---
# Source: openfunction/templates/runtime-class.yaml
apiVersion: node.k8s.io/v1
kind: RuntimeClass
metadata:
  name: "openfunction-crun"
  labels:
    helm.sh/chart: openfunction-0.7.0
    app.kubernetes.io/name: openfunction
    app.kubernetes.io/instance: my-openfunction
    app.kubernetes.io/version: "v1.2.0"
    app.kubernetes.io/managed-by: Helm
handler: "crun"
---
# Source: openfunction/charts/keda/templates/webhooks/validatingconfiguration.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  namespace: keda
  labels:
    app.kubernetes.io/name: keda-admission-webhooks    
    helm.sh/chart: keda-2.11.2
    app.kubernetes.io/component: operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-openfunction
    app.kubernetes.io/part-of: keda-operator
    app.kubernetes.io/version: 2.11.2
  name: keda-admission
  namespace: keda
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: keda-admission-webhooks
      namespace: keda
      path: /validate-keda-sh-v1alpha1-scaledobject
  failurePolicy: Ignore
  matchPolicy: Equivalent
  name: vscaledobject.kb.io
  namespaceSelector: {}
  objectSelector: {}
  rules:
  - apiGroups:
    - keda.sh
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - scaledobjects
  sideEffects: None
  timeoutSeconds: 10
---
# Source: openfunction/charts/knative-serving/templates/webhook/config-validating-webhook.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  namespace: knative-serving
  name: config.webhook.serving.knative.dev
  labels:
    helm.sh/chart: knative-serving-1.3.2
    app.kubernetes.io/instance: my-openfunction
    app.kubernetes.io/version: "1.3.2"
    app.kubernetes.io/managed-by: Helm
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: webhook
      namespace: 'knative-serving'
  failurePolicy: Fail
  name: config.webhook.serving.knative.dev
  objectSelector:
    matchExpressions:
    - key: app.kubernetes.io/name
      operator: In
      values:
      - knative-serving
    - key: app.kubernetes.io/component
      operator: In
      values:
      - autoscaler
      - controller
      - logging
      - networking
      - observability
      - tracing
  sideEffects: None
  timeoutSeconds: 10
---
# Source: openfunction/charts/knative-serving/templates/webhook/domainmapping-validating-webhook.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  namespace: knative-serving
  name: validation.webhook.domainmapping.serving.knative.dev
  labels:
    helm.sh/chart: knative-serving-1.3.2
    app.kubernetes.io/instance: my-openfunction
    app.kubernetes.io/version: "1.3.2"
    app.kubernetes.io/managed-by: Helm
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: domainmapping-webhook
      namespace: 'knative-serving'
  failurePolicy: Fail
  name: validation.webhook.domainmapping.serving.knative.dev
  rules:
  - apiGroups:
    - serving.knative.dev
    apiVersions:
    - v1alpha1
    - v1beta1
    operations:
    - CREATE
    - UPDATE
    - DELETE
    resources:
    - domainmappings
    scope: '*'
  sideEffects: None
  timeoutSeconds: 10
---
# Source: openfunction/charts/knative-serving/templates/webhook/validating-webhook.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  namespace: knative-serving
  name: validation.webhook.serving.knative.dev
  labels:
    helm.sh/chart: knative-serving-1.3.2
    app.kubernetes.io/instance: my-openfunction
    app.kubernetes.io/version: "1.3.2"
    app.kubernetes.io/managed-by: Helm
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: webhook
      namespace: 'knative-serving'
  failurePolicy: Fail
  name: validation.webhook.serving.knative.dev
  rules:
  - apiGroups:
    - autoscaling.internal.knative.dev
    - networking.internal.knative.dev
    - serving.knative.dev
    apiVersions:
    - '*'
    operations:
    - CREATE
    - UPDATE
    - DELETE
    resources:
    - metrics
    - podautoscalers
    - certificates
    - ingresses
    - serverlessservices
    - configurations
    - revisions
    - routes
    - services
    scope: '*'
  sideEffects: None
  timeoutSeconds: 10
---
# Source: openfunction/charts/tekton-pipelines/templates/webhook/validating-webhook-configuration.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  namespace: tekton-pipelines
  name: validation.webhook.pipeline.tekton.dev
  labels:
    helm.sh/chart: tekton-pipelines-0.37.2
    app.kubernetes.io/name: tekton-pipelines
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
    app.kubernetes.io/version: "v0.37.2"
    app.kubernetes.io/managed-by: Helm
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: 'tekton-pipelines-webhook'
      namespace: 'tekton-pipelines'
  failurePolicy: Fail
  name: validation.webhook.pipeline.tekton.dev
  sideEffects: None
---
# Source: openfunction/charts/tekton-pipelines/templates/webhook/validating-webhook-configuration.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  namespace: tekton-pipelines
  name: config.webhook.pipeline.tekton.dev
  labels:
    helm.sh/chart: tekton-pipelines-0.37.2
    app.kubernetes.io/name: tekton-pipelines
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
    app.kubernetes.io/version: "v0.37.2"
    app.kubernetes.io/managed-by: Helm
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: 'tekton-pipelines-webhook'
      namespace: 'tekton-pipelines'
  failurePolicy: Fail
  name: config.webhook.pipeline.tekton.dev
  objectSelector:
    matchLabels:
      app.kubernetes.io/part-of: tekton-pipelines
  sideEffects: None
---
# Source: openfunction/templates/webhook/validating-webhook.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: my-openfunction-validating-webhook-configuration
  labels:
    helm.sh/chart: openfunction-0.7.0
    app.kubernetes.io/name: openfunction
    app.kubernetes.io/instance: my-openfunction
    app.kubernetes.io/version: "v1.2.0"
    app.kubernetes.io/managed-by: Helm
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUROVENDQWgyZ0F3SUJBZ0lVUWNCUGt6MC90OTZ2dzJZV2F0S1JqRWZwaFJrd0RRWUpLb1pJaHZjTkFRRUwKQlFBd0tqRW9NQ1lHQTFVRUF3d2ZZMkV0YjNCbGJtWjFibU4wYVc5dUxYZGxZbWh2YjJzdGMyVnlkbWxqWlRBZQpGdzB5TWpBME1EY3dNelV3TURaYUZ3MHpNakEwTURRd016VXdNRFphTUNveEtEQW1CZ05WQkFNTUgyTmhMVzl3ClpXNW1kVzVqZEdsdmJpMTNaV0pvYjI5ckxYTmxjblpwWTJVd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUIKRHdBd2dnRUtBb0lCQVFEVXpZK1hZSmoxdS9sNmZvR1NiWEhaUDNhZklZN1lFRi9ZUk9sQ1V0Q2VBZ25CSDE4NwpqUk1hUVlTWmxMQTBBNEUxR0ZONzVqUU5KV3k5MVJkZmsxN1Z3RFlSa2lpUmg4bjNJbHpsbHQrQ3JKdWJsUHJmCkRFUVZuUkNTRW1Udnc5WmIvWkpXSXloRTNmN0dhckY4S3R3VVZXazNzTzB2Mk0wWXVvdGQxdjdUV3JmS0FBaUgKQjhNS0E2VTN6M0gyOSs0M1NkN1I5SW8vQzhuSFVHMkUrMDk5R3lhcnhRNUVkb2hkTkVCc05jbGprS0ZkNDRkKwpTdzRSVG56MFhIS1JILy9TM0hQMmUvd1ptRTBkb2E0N2VXdlVBay8waUxtMnY3Wk1CWUF2TmFDamVOd3BNNjJmCmpBVnd2YVBid0lIRGZBZHdRaU42bHhrbThIWHlsV0xEZDVnTEFnTUJBQUdqVXpCUk1CMEdBMVVkRGdRV0JCVEYKL0VFcGdsVGJOZ1VTYnhTS2c1bk1kMzMyZ3pBZkJnTlZIU01FR0RBV2dCVEYvRUVwZ2xUYk5nVVNieFNLZzVuTQpkMzMyZ3pBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFCWTN5MWI0MC9sCm03bVJrek91YnRFSnNYWWUzYTFSYkx0eE4vNnQzOG1kNnlneWxVVzZ5WWxJTHBYdjc1ZlFIR3Z2cUhMREdJdmMKOG5VVCsrNUgrUHExaHZxeVV3azFUby9NODE2NkNDMHB2UVNERERMMkNYUzl5TWtrL25tQXBTV2l5aVhRT0cxRApyWEdSMk9BZFlYcFdaNHlzZFRqSGNCY2V1Z3Y0ZzJGOWtXSXJ1eDBCeExGdzE4YjVqSGI1dTltK1VnMDZZMTd6ClNxbWhza0dYajVLWTkwWXAwZUpnUHBWRjNPSzhIWGRYbVlTcjdjOXp4bWc1NGR4K0QxcnMveUc1SjJBN1NTU3gKM1BnL05zbXZvY2QzdFp3K1ZyUnkycC9GbXZ4aUdQOHM0MFBQMTVjdkZMcnM0REVZRFVtekxXNmtqVW9aK041bgpiZFFGM24rZ045ZnkKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    service:
      name: 'my-openfunction-webhook-service'
      namespace: 'default'
      path: /validate-core-openfunction-io-v1beta2-function
  failurePolicy: Fail
  name: vfunctions.of.io
  rules:
  - apiGroups:
    - core.openfunction.io
    apiVersions:
    - v1beta2
    operations:
    - CREATE
    - UPDATE
    resources:
    - functions
  sideEffects: None
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUROVENDQWgyZ0F3SUJBZ0lVUWNCUGt6MC90OTZ2dzJZV2F0S1JqRWZwaFJrd0RRWUpLb1pJaHZjTkFRRUwKQlFBd0tqRW9NQ1lHQTFVRUF3d2ZZMkV0YjNCbGJtWjFibU4wYVc5dUxYZGxZbWh2YjJzdGMyVnlkbWxqWlRBZQpGdzB5TWpBME1EY3dNelV3TURaYUZ3MHpNakEwTURRd016VXdNRFphTUNveEtEQW1CZ05WQkFNTUgyTmhMVzl3ClpXNW1kVzVqZEdsdmJpMTNaV0pvYjI5ckxYTmxjblpwWTJVd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUIKRHdBd2dnRUtBb0lCQVFEVXpZK1hZSmoxdS9sNmZvR1NiWEhaUDNhZklZN1lFRi9ZUk9sQ1V0Q2VBZ25CSDE4NwpqUk1hUVlTWmxMQTBBNEUxR0ZONzVqUU5KV3k5MVJkZmsxN1Z3RFlSa2lpUmg4bjNJbHpsbHQrQ3JKdWJsUHJmCkRFUVZuUkNTRW1Udnc5WmIvWkpXSXloRTNmN0dhckY4S3R3VVZXazNzTzB2Mk0wWXVvdGQxdjdUV3JmS0FBaUgKQjhNS0E2VTN6M0gyOSs0M1NkN1I5SW8vQzhuSFVHMkUrMDk5R3lhcnhRNUVkb2hkTkVCc05jbGprS0ZkNDRkKwpTdzRSVG56MFhIS1JILy9TM0hQMmUvd1ptRTBkb2E0N2VXdlVBay8waUxtMnY3Wk1CWUF2TmFDamVOd3BNNjJmCmpBVnd2YVBid0lIRGZBZHdRaU42bHhrbThIWHlsV0xEZDVnTEFnTUJBQUdqVXpCUk1CMEdBMVVkRGdRV0JCVEYKL0VFcGdsVGJOZ1VTYnhTS2c1bk1kMzMyZ3pBZkJnTlZIU01FR0RBV2dCVEYvRUVwZ2xUYk5nVVNieFNLZzVuTQpkMzMyZ3pBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFCWTN5MWI0MC9sCm03bVJrek91YnRFSnNYWWUzYTFSYkx0eE4vNnQzOG1kNnlneWxVVzZ5WWxJTHBYdjc1ZlFIR3Z2cUhMREdJdmMKOG5VVCsrNUgrUHExaHZxeVV3azFUby9NODE2NkNDMHB2UVNERERMMkNYUzl5TWtrL25tQXBTV2l5aVhRT0cxRApyWEdSMk9BZFlYcFdaNHlzZFRqSGNCY2V1Z3Y0ZzJGOWtXSXJ1eDBCeExGdzE4YjVqSGI1dTltK1VnMDZZMTd6ClNxbWhza0dYajVLWTkwWXAwZUpnUHBWRjNPSzhIWGRYbVlTcjdjOXp4bWc1NGR4K0QxcnMveUc1SjJBN1NTU3gKM1BnL05zbXZvY2QzdFp3K1ZyUnkycC9GbXZ4aUdQOHM0MFBQMTVjdkZMcnM0REVZRFVtekxXNmtqVW9aK041bgpiZFFGM24rZ045ZnkKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    service:
      name: 'my-openfunction-webhook-service'
      namespace: 'default'
      path: /validate-networking-openfunction-io-v1alpha1-gateway
  failurePolicy: Fail
  name: vgateway.of.io
  rules:
  - apiGroups:
    - networking.openfunction.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - gateways
  sideEffects: None
---
# Source: openfunction/templates/namespaces.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: projectcontour
  annotations:
    "helm.sh/hook": "pre-install"
    "helm.sh/hook-weight": "-5"
    "helm.sh/resource-policy": keep
---
# Source: openfunction/charts/contour/templates/certgen/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: contour-contour-certgen
  namespace: "projectcontour"
  labels:
    app.kubernetes.io/name: contour
    helm.sh/chart: contour-10.2.2
    app.kubernetes.io/instance: my-openfunction
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: contour-certgen
  annotations:
    "helm.sh/hook": "pre-install,pre-upgrade"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
automountServiceAccountToken: true
---
# Source: openfunction/templates/hook/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ns-edit
  namespace: openfunction
  annotations:
    "helm.sh/hook": post-delete
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
---
# Source: openfunction/templates/hook/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: gateway-edit
  namespace: openfunction
  annotations:
    "helm.sh/hook": pre-delete
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
---
# Source: openfunction/templates/hook/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: ns-edit
  annotations:
    "helm.sh/hook": post-delete
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
rules:
- apiGroups: [""]
  resources: ["namespaces"]
  verbs: ["get", "watch", "list", "delete", "update", "patch"]
---
# Source: openfunction/templates/hook/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: gateway-edit
  annotations:
    "helm.sh/hook": pre-delete
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
rules:
  - apiGroups: ["networking.openfunction.io"]
    resources: ["gateways"]
    verbs: ["get", "watch", "list", "delete", "update", "patch"]
---
# Source: openfunction/templates/hook/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: edit-ns
  annotations:
    "helm.sh/hook": post-delete
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ns-edit
subjects:
- kind: ServiceAccount
  name: ns-edit
  namespace: openfunction
---
# Source: openfunction/templates/hook/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: edit-gateway
  annotations:
    "helm.sh/hook": pre-delete
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: gateway-edit
subjects:
  - kind: ServiceAccount
    name: gateway-edit
    namespace: openfunction
---
# Source: openfunction/charts/contour/templates/certgen/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: contour-contour-certgen
  namespace: "projectcontour"
  annotations:
    "helm.sh/hook": "pre-install,pre-upgrade"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
  labels:
    app.kubernetes.io/name: contour
    helm.sh/chart: contour-10.2.2
    app.kubernetes.io/instance: my-openfunction
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: contour-certgen
rules:
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - create
      - update
---
# Source: openfunction/charts/contour/templates/certgen/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: contour-contour-certgen
  namespace: "projectcontour"
  annotations:
    "helm.sh/hook": "pre-install,pre-upgrade"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
  labels:
    app.kubernetes.io/name: contour
    helm.sh/chart: contour-10.2.2
    app.kubernetes.io/instance: my-openfunction
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: contour-certgen
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: contour-contour-certgen
subjects:
  - kind: ServiceAccount
    name: contour-contour-certgen
---
# Source: openfunction/charts/contour/templates/certgen/job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: contour-contour-certgen
  namespace: "projectcontour"
  annotations:
    "helm.sh/hook": "pre-install,pre-upgrade"
    "helm.sh/hook-weight": "1"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
  labels:
    app.kubernetes.io/name: contour
    helm.sh/chart: contour-10.2.2
    app.kubernetes.io/instance: my-openfunction
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: contour-certgen
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/name: contour
        helm.sh/chart: contour-10.2.2
        app.kubernetes.io/instance: my-openfunction
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: contour-certgen
    spec:
      
      securityContext:
        fsGroup: 1001
      containers:
        - name: contour
          image: docker.io/bitnami/contour:1.23.3-debian-11-r0
          imagePullPolicy: IfNotPresent
          command:
            - contour
          args:
            - certgen
            - --kube
            - --incluster
            - --overwrite
            - --secrets-format=compact
            - --namespace=$(CONTOUR_NAMESPACE)
            - --certificate-lifetime=365
          env:
            - name: CONTOUR_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          securityContext:
            runAsNonRoot: true
            runAsUser: 1001
          resources: 
            limits: {}
            requests: {}
      restartPolicy: Never
      serviceAccountName: contour-contour-certgen
  parallelism: 1
  completions: 1
  backoffLimit: 1
---
# Source: openfunction/templates/hook/job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: delete-gateway
  namespace: openfunction
  annotations:
    "helm.sh/hook": pre-delete
    "helm.sh/hook-weight": "5"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-failed,hook-succeeded
spec:
  backoffLimit: 1
  template:
    spec:
      containers:
      - name: kubectl
        image: bitnami/kubectl:1.22
        command:
        - kubectl
        - delete
        - gateways.networking.openfunction.io
        - openfunction
        - --wait=false
        - --ignore-not-found=true
      restartPolicy: Never
      serviceAccountName: gateway-edit
---
# Source: openfunction/templates/hook/job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: delete-ns
  namespace: openfunction
  annotations:
    "helm.sh/hook": post-delete
    "helm.sh/hook-weight": "5"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-failed,hook-succeeded
spec:
  backoffLimit: 1
  template:
    spec:
      containers:
      - name: kubectl
        image: bitnami/kubectl:1.22
        command:
        - kubectl
        - delete
        - ns
        - projectcontour
        - --wait=false
        - --ignore-not-found=true
      restartPolicy: Never
      serviceAccountName: ns-edit
