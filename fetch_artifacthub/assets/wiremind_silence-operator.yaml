---
# Source: silence-operator/templates/network-policy.yaml
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: my-silence-operator
  namespace: default
  labels:
    helm.sh/chart: silence-operator-0.0.6
    app.kubernetes.io/name: silence-operator
    app.kubernetes.io/instance: my-silence-operator
    app.kubernetes.io/version: "0.7.0-7cce53575d94f59a6b5ae7f0a89617117cfc204c"
    app.kubernetes.io/managed-by: Helm
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: silence-operator
      app.kubernetes.io/instance: my-silence-operator
  ingress:
  - ports:
    - port: 8000
      protocol: TCP
  egress:
  - {}
  policyTypes:
  - Egress
  - Ingress
---
# Source: silence-operator/templates/service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-silence-operator
  namespace: default
  labels:
    helm.sh/chart: silence-operator-0.0.6
    app.kubernetes.io/name: silence-operator
    app.kubernetes.io/instance: my-silence-operator
    app.kubernetes.io/version: "0.7.0-7cce53575d94f59a6b5ae7f0a89617117cfc204c"
    app.kubernetes.io/managed-by: Helm
---
# Source: silence-operator/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-silence-operator
  namespace: default
  labels:
    helm.sh/chart: silence-operator-0.0.6
    app.kubernetes.io/name: silence-operator
    app.kubernetes.io/instance: my-silence-operator
    app.kubernetes.io/version: "0.7.0-7cce53575d94f59a6b5ae7f0a89617117cfc204c"
    app.kubernetes.io/managed-by: Helm
data:
  config.yml: |
    server:
      enable:
        debug:
          server: false
      listen:
        address: "http://0.0.0.0:8000"
    service:
      alertmanager:
        address: "http://alertmanager-operated.monitoring:9093"
      kubernetes:
        address: ""
        inCluster: true
        tls:
          caFile: ""
          crtFile: ""
          keyFile: ""
---
# Source: silence-operator/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-silence-operator
  namespace: default
  labels:
    helm.sh/chart: silence-operator-0.0.6
    app.kubernetes.io/name: silence-operator
    app.kubernetes.io/instance: my-silence-operator
    app.kubernetes.io/version: "0.7.0-7cce53575d94f59a6b5ae7f0a89617117cfc204c"
    app.kubernetes.io/managed-by: Helm
  annotations:
    prometheus.io/scrape: "true"
spec:
  ports:
  - port: 8000
    targetPort: 8000
  selector:
    app.kubernetes.io/name: silence-operator
    app.kubernetes.io/instance: my-silence-operator
---
# Source: silence-operator/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-silence-operator
  namespace: default
  labels:
    helm.sh/chart: silence-operator-0.0.6
    app.kubernetes.io/name: silence-operator
    app.kubernetes.io/instance: my-silence-operator
    app.kubernetes.io/version: "0.7.0-7cce53575d94f59a6b5ae7f0a89617117cfc204c"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: silence-operator
      app.kubernetes.io/instance: my-silence-operator
  strategy:
    rollingUpdate: {}
    type: RollingUpdate
  template:
    metadata:
      labels:
        helm.sh/chart: silence-operator-0.0.6
        app.kubernetes.io/name: silence-operator
        app.kubernetes.io/instance: my-silence-operator
        app.kubernetes.io/version: "0.7.0-7cce53575d94f59a6b5ae7f0a89617117cfc204c"
        app.kubernetes.io/managed-by: Helm
      annotations:
        releaseRevision: "1"
    spec:
      securityContext:
        fsGroup: 1000
      volumes:
      - name: my-silence-operator-configmap
        configMap:
          name: my-silence-operator
          items:
          - key: config.yml
            path: config.yml
      serviceAccountName: my-silence-operator
      containers:
      - name: my-silence-operator
        image: "giantswarm/silence-operator:0.7.0-7cce53575d94f59a6b5ae7f0a89617117cfc204c"
        imagePullPolicy: "IfNotPresent"
        args:
        - daemon
        - --config.dirs=/var/run/silence-operator/configmap/
        - --config.files=config
        volumeMounts:
        - name: my-silence-operator-configmap
          mountPath: /var/run/silence-operator/configmap/
        ports:
          - name: server
            containerPort: 8000
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8000
          initialDelaySeconds: 20
          periodSeconds: 5
          # One second longer than command timeout should prevent generation of zombie processes.
          timeoutSeconds: 6
          successThreshold: 1
          failureThreshold: 5
        resources:
          limits: {}
          requests:
            cpu: 100m
            memory: 220Mi
        securityContext:
          runAsGroup: 1000
          runAsUser: 1000
