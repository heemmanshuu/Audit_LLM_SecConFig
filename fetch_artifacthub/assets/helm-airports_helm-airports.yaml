---
# Source: helm-airports/charts/airports-api/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: sa-airports-api
  namespace: default
type: kubernetes.io/basic-auth
stringData:
  url: jdbc:postgresql://postgres:5432/db_airports
  username: postgres
  password: postgres
---
# Source: helm-airports/charts/airports-postgres/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: secret-auth
type: kubernetes.io/basic-auth
stringData:
  database: db_airports
  username: postgres
  password: postgres
---
# Source: helm-airports/charts/airports-postgres/templates/configMap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-config
  labels:
    app: postgres
data:
  developer1_email: dan.iacob.ext@siemens.com
  developer2_email: elena.dascalu.ext@siemens.com
---
# Source: helm-airports/charts/airports-postgres/templates/persistentVolume.yaml
kind: PersistentVolume
apiVersion: v1
metadata:
  name: postgres-pv-volume
  labels:
    type: local
    app: postgres
spec:
  storageClassName: manual
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteMany
  hostPath:
    path: /mnt/data
---
# Source: helm-airports/charts/airports-postgres/templates/persistentVolume.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: postgres-pv-claim
  labels:
    app: postgres
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 5Gi
---
# Source: helm-airports/charts/airports-api/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: airports-api
  namespace: default
  labels:
    app: airports-api
spec:
  ports:
    - name: client
      port: 8080
      targetPort: 8080
  selector:
    app: airports-api
---
# Source: helm-airports/charts/airports-consumer/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: airports-consumer
  labels:
    app: airports-consumer
spec:
  ports:
   - port: 8082
  selector:
   app: airports-consumer
---
# Source: helm-airports/charts/airports-frontend/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: airports-frontend
  labels:
    app: airports-frontend
spec:
  type: LoadBalancer
  ports:
   - name: frontend
     port: 4200
     targetPort: 4200
  selector:
   app: airports-frontend
---
# Source: helm-airports/charts/airports-kafka/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: zookeeper
  labels:
    app: zookeeper
spec:
  ports:
  - name: client
    port: 2181
    protocol: TCP
  - name: follower
    port: 2888
    protocol: TCP
  - name: leader
    port: 3888
    protocol: TCP
  selector:
    app: zookeeper
---
# Source: helm-airports/charts/airports-kafka/templates/service.yaml
apiVersion: v1 
kind: Service 
metadata:  
  labels:  
    app: kafka 
  name: kafka 
spec:  
  ports:
    - name: kafka  
      port: 9092 
      targetPort: 9092
      protocol: TCP
    - name: zookeeper 
      port: 2181 
      targetPort: 2181
      protocol: TCP
  selector:  
    app: kafka
---
# Source: helm-airports/charts/airports-postgres/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: postgres
  labels:
    app: postgres
spec:
  ports:
   - port: 5432
  selector:
   app: postgres
---
# Source: helm-airports/charts/airports-producer/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: airports-producer
  labels:
    app: airports-producer
spec:
  ports:
   - port: 8081
  selector:
   app: airports-producer
---
# Source: helm-airports/charts/airports-kafka/templates/deployment.yaml
apiVersion: v1 
kind: ReplicationController 
metadata:  
  labels:  
    app: kafka 
  name: kafka  
spec:  
  replicas: 1
  selector:  
    app: kafka   
  template:  
    metadata:  
      labels:  
        app: kafka  
    spec:
      containers:
      - name: kafka 
        image: wurstmeister/kafka
        readinessProbe:
          tcpSocket:
            port: 9092
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          tcpSocket:
            port: 9092
          initialDelaySeconds: 15
          periodSeconds: 20
        ports:
        - containerPort: 9092
        env:
        - name: KAFKA_ZOOKEEPER_CONNECT
          value: "zookeeper:2181"
        - name: KAFKA_ADVERTISED_HOST_NAME
          value: "localhost"
        - name: KAFKA_ADVERTISED_PORT
          value: "9092"
        - name: KAFKA_PORT
          value: "9092"
---
# Source: helm-airports/charts/airports-api/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: airports-api
  namespace: default
spec:
  selector:
    matchLabels:
      app: airports-api
  replicas: 1
  template:
    metadata:
      labels:
        app: airports-api
    spec:
      containers:
        - name: airports-api
          image: dina1993/airports-api
          livenessProbe:
            httpGet:
              path: /actuator/health/liveness
              port: 8080
            initialDelaySeconds: 3
            periodSeconds: 3
          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              port: 8080
            initialDelaySeconds: 3
            periodSeconds: 3
          ports:
            - containerPort: 8080
          env:
            - name: SPRING_DATASOURCE_URL
              valueFrom:
                secretKeyRef:
                  name: sa-airports-api
                  key: url
            - name: SPRING_DATASOURCE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: sa-airports-api
                  key: username
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: sa-airports-api
                  key: password
---
# Source: helm-airports/charts/airports-consumer/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: airports-consumer
spec:
  selector:
    matchLabels:
      app: airports-consumer
  replicas: 1
  template:
    metadata:
      labels:
        app: airports-consumer
    spec:
      containers:
        - name: airports-consumer
          image: dina1993/airports-consumer
          readinessProbe:
            tcpSocket:
              port: 8082
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            tcpSocket:
              port: 8082
            initialDelaySeconds: 15
            periodSeconds: 20
          ports: 
            - containerPort: 8082
          env:
            - name: SPRING_DATASOURCE_URL
              valueFrom:
                secretKeyRef:
                  name: sa-airports-api
                  key: url
            - name: SPRING_DATASOURCE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: sa-airports-api
                  key: username
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: sa-airports-api
                  key: password
            - name: KAFKA_PROPERTIES_SERVER_ENDPOINT
              value: kafka:9092
            - name: KAFKA_PROPERTIES_TOPIC_NAME
              value: location1
            - name: KAFKA_PROPERTIES_GROUP_ID
              value: consumer-1
---
# Source: helm-airports/charts/airports-frontend/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: airports-frontend
spec:
  selector:
    matchLabels:
      app: airports-frontend
  replicas: 1
  template:
    metadata:
      labels:
        app: airports-frontend
    spec:
      containers:
        - name: airports-frontend
          image: daniacobext/airports-frontend:latest
          livenessProbe:
            tcpSocket:
              port: 4200         
            initialDelaySeconds: 5  
            periodSeconds: 20        
          readinessProbe:
            httpGet:
              path: /locations              
              port: 4200   
            initialDelaySeconds: 15
            periodSeconds: 10
            failureThreshold: 3 
          ports:
            - containerPort: 4200
---
# Source: helm-airports/charts/airports-kafka/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:  
  labels:  
    app: zookeeper
  name: zookeeper
spec:
  replicas: 1
  selector:
    matchLabels:
      app: zookeeper
  template:
    metadata:
      labels:
        app: zookeeper
    spec:
      containers:
      - name: zookeeper
        image: bitnami/zookeeper
        readinessProbe:
          tcpSocket:
            port: 2181
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          tcpSocket:
            port: 2181
          initialDelaySeconds: 15
          periodSeconds: 20
        ports:
        - containerPort: 2181
        env:
        - name: ZOOKEEPER_ID
          value: "1"
        - name: ALLOW_ANONYMOUS_LOGIN
          value: "true"
        - name: ZOOKEEPER_SERVER_1
          value: "zookeeper"
---
# Source: helm-airports/charts/airports-postgres/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgis/postgis
          readinessProbe:
            exec:
              command: ["psql", "-Upostgres", "-ddb_airports", "-c", "SELECT 1"]
            initialDelaySeconds: 10
            timeoutSeconds: 10
          livenessProbe:
            exec:
              command: ["psql", "-Upostgres", "-ddb_airports", "-c", "SELECT 1"]
            initialDelaySeconds: 30
            timeoutSeconds: 10
          env:
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: secret-auth
                  key: database
            - name: POSTGRES_USERNAME
              valueFrom:
                secretKeyRef:
                  name: secret-auth
                  key: username
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: secret-auth
                  key: password
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 5432
          envFrom:
            - configMapRef:
                name: postgres-config
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgredb
      volumes:
        - name: postgredb
          persistentVolumeClaim:
            claimName: postgres-pv-claim
---
# Source: helm-airports/charts/airports-producer/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: airports-producer
spec:
  selector:
    matchLabels:
      app: airports-producer
  replicas: 1
  template:
    metadata:
      labels:
        app: airports-producer
    spec:
      containers:
        - name: airports-producer
          image: dina1993/airports-producer
          readinessProbe:
            tcpSocket:
              port: 8081
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            tcpSocket:
              port: 8081
            initialDelaySeconds: 15
            periodSeconds: 20
          ports:
            - containerPort: 8081
          env:
            - name: SPRING_DATASOURCE_URL
              valueFrom:
                secretKeyRef:
                  name: sa-airports-api
                  key: url
            - name: SPRING_DATASOURCE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: sa-airports-api
                  key: username
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: sa-airports-api
                  key: password
            - name: KAFKA_PROPERTIES_SERVER_ENDPOINT
              value: kafka:9092
            - name: KAFKA_PROPERTIES_TOPIC_NAME
              value: location1
            - name: KAFKA_PROPERTIES_GROUP_ID
              value: consumer-1
