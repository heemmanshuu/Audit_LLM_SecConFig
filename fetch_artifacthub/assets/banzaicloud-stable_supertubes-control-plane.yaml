---
# Source: supertubes-control-plane/templates/supertubes-rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-supertubes-control-plane
  namespace: "default"
  labels:
  
    helm.sh/chart: supertubes-control-plane-1.1.0
    app.kubernetes.io/name: supertubes-control-plane
    app.kubernetes.io/instance: my-supertubes-control-plane
    app.kubernetes.io/component: operator
    app.kubernetes.io/version: "v1.1.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: supertubes-control-plane/templates/supertubes-webhooks.yaml
apiVersion: v1
kind: Secret
metadata:
  name: supertubes-manifest-controller-serving-cert
  namespace: default
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURuakNDQW9hZ0F3SUJBZ0lRUmZOWmNvR0J6S05hMlhjeXNsamJWVEFOQmdrcWhraUc5dzBCQVFzRkFEQVYKTVJNd0VRWURWUVFERXdwemRtTXRZMkYwTFdOaE1CNFhEVEkwTURreE5qRXdNakkxTmxvWERUSTFNRGt4TmpFdwpNakkxTmxvd01qRXdNQzRHQTFVRUF4TW5iWGt0YzNWd1pYSjBkV0psY3kxamIyNTBjbTlzTFhCc1lXNWxMbVJsClptRjFiSFF1YzNaak1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBbzhVU0lMajYKQ0doN2NOYUU1Q1VsSndLalA0M1Y3bUt2Vkl4dU5jMkR6bjA4OWdrRmNBeHFleWdkcFQwL29QWjJjeGtvTno3dgpUb1V2NTd2ZXV5cXdhcDJRYzRHUG1seDFsSGd4aENKZVBBYi94YkxRMlBHYS85cFBkOTZiM1dWQ1BTZW16Q1ErCklMNVRVVlk1dzBtdG11b2xaR0FqQTlnL3ZZSG9xZ2VFQTQ1MmpsUk5pd2FFUWZKdGpCNnRTNlNDaVJoam1iZU8KVEdyVzhNQVBLcHR0ZjZjTjJCODBhWndkaWRySXJDOFYwejFEaisvZ01zVXhRUUh0cHMvQy9BOElsZThJMlp5aAo4M0Y3T2N4WmUxSEJKS0dDR1VIY1VJZ3VLc013VHFFWWtKV1FWRElqdkF4MXUvSE9tR0wyeGpSekYzM1VjdG00CkJPMytZY1hybUx5NDZRSURBUUFCbzRITU1JSEpNQTRHQTFVZER3RUIvd1FFQXdJRm9EQWRCZ05WSFNVRUZqQVUKQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXdBREFmQmdOVkhTTUVHREFXZ0JURwo0NHRtWVEyMkxWOEJJdzBnVGQyTlRJbVl5VEJwQmdOVkhSRUVZakJnZ2pWdGVTMXpkWEJsY25SMVltVnpMV052CmJuUnliMnd0Y0d4aGJtVXVaR1ZtWVhWc2RDNXpkbU11WTJ4MWMzUmxjaTVzYjJOaGJJSW5iWGt0YzNWd1pYSjAKZFdKbGN5MWpiMjUwY205c0xYQnNZVzVsTG1SbFptRjFiSFF1YzNaak1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQgpBUUEvekhhbHErRXVGcXJ5c1ZNR3lNVVMwR3hHb0pzYkl1bmxWOEFEMnBYaElSdmVkTzlPZTNHeGFQNENQMnZPCkNRZjdJaWd4RHp0cjF2Y0tTdzJjcGsxZnJEYUh6b1NyeWdab0ZndVF1aHRraXlMeEZiVUFCTmJ1d2hSUUZYd04KVmxKalV3RFBsb1BFblN6WXl0WnFKT2c2WG5CK3Rsc1I4eUdWUjdkeFhBYW9sV2xYcERNTHdEN1M5TVRRenUxSgpZWEswbDc2SnFuN1lJbXlWVFhlZXFmUGgydDlCb3F0Q2hjcVRuald5SWxMTWJDUmU4RVYxcVVxTUppUGtyK3VrClNkNVRFVDVLc0FxbU9lOVBWcmJYNTJMMVhqV0FMckFVeWNaZ2tkMDJGNDBLMjF6cjRlWVdGUzA4RDBneUF1OUsKUXdaUklFaUQ1Ukd5aTBOQlVISU5KQ2RXCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBbzhVU0lMajZDR2g3Y05hRTVDVWxKd0tqUDQzVjdtS3ZWSXh1TmMyRHpuMDg5Z2tGCmNBeHFleWdkcFQwL29QWjJjeGtvTno3dlRvVXY1N3ZldXlxd2FwMlFjNEdQbWx4MWxIZ3hoQ0plUEFiL3hiTFEKMlBHYS85cFBkOTZiM1dWQ1BTZW16Q1ErSUw1VFVWWTV3MG10bXVvbFpHQWpBOWcvdllIb3FnZUVBNDUyamxSTgppd2FFUWZKdGpCNnRTNlNDaVJoam1iZU9UR3JXOE1BUEtwdHRmNmNOMkI4MGFad2RpZHJJckM4VjB6MURqKy9nCk1zVXhRUUh0cHMvQy9BOElsZThJMlp5aDgzRjdPY3haZTFIQkpLR0NHVUhjVUlndUtzTXdUcUVZa0pXUVZESWoKdkF4MXUvSE9tR0wyeGpSekYzM1VjdG00Qk8zK1ljWHJtTHk0NlFJREFRQUJBb0lCQURqYUxndmNDemltQk14TQpQRC96UVMyRXRlVlhPTUFUMUNmMnhEKzdRNW1JVW9SYTUxOVpnQkdYQUl1ZmNwcFBWUmxwejFNMmJ0OEVUM2dUCitTTmlrM0cvbHlqeC9rY285OHg5MlRxMHI2QUpFZnV3c3QzTktmRE4rYTUwUWdtZW9Gc1lpOGZzZ1FEZThZK1gKN2wrRUVWZHBGMmY4RTh1KzQ0bkhNbHpzVlFEaWdxaUIyaDVPZmRRdjBFSS9SZWhra1BHd083eWpod0NCQ0NKSgpjdFBKdUxYRXJIaDNxSHlLaUVmSlB6TG1zSy9HMTdiK3VRNDVyQ2dodUJLQUVYaHNoYzVsU0tRWkFFeStRcWc3Ck5lb3hyeEthcGEreFNPUnFteTZxNWhEVnBJZXliQW5abUprOXNxMTRFR1pvVnZST2lvaEdBTTYzQzNhMGRWSGkKd3RnWTk0RUNnWUVBMWorK3RKZy9hbVJaZ3FHRWlDcERXMXBBR2RsNUFZUGIxbHJTNmNWSG5WVFZkQU1NN0w2cQp1RHQ3djNpcDFXdjV3TzNBVExoelNoZ0F6ODFKQ2I5U21TaUVyS3ZFRko3ZnBra2JTeEwzZEhJSWtUWTdwczVHCms4ZmtGaUQyVkpQYXZJSjJYa1E3U2QzWjBVaFl0ak1PY2VvUWFCSCt4ZVhBK0hDMHhrMHlVSGtDZ1lFQXc2OFIKRXBnOE9XWG1YNFhYN2U0N2tSWVpZNHJrK1l3ZlUrZXR2UVJxdExUTkFkNTZFajFrREFRVDh5Z0xZaENhcWlvZQpqK1p5SmNyYnNIYlBCUWJpQStQNnZNQzhvWG1KeXc0aEJwcnloMEJKK0NuSFc4MjRNZkNSK0pmcUFxaVFRSHF0CnpXRlU3TVk0Sm1ESlROZiswM2tQSGdnMk1EUUoxazZZUkFtdTcvRUNnWUVBdGMySnlqMlhNblRNNytpWFNlUnoKRzhYTnR5R3ZhUFczU29Idmo2ZDBTYkYvSDk2bXpRNU9WOTlCOXd3eE1ZVmFmYmhDQWRoVEhJQ1p6N3ZuU25vcgpZUVBjOFprZjNrK2lnTHh3aUpnam01QlliTUNVaGN0c1lHS3l6WVJUQXhvajl1ck4vdGZ2WjVMMkRuMVJxZXBSClM2RFBJMENCN1BRMWQ1eE1DaW5mbENFQ2dZRUF0SE0xU0ROd25mR1UvcE43YXVMY3RVOXV2RGV5TFZtRTdpZmcKTkVUbGJaeW96RWR2eEhBdVdWSk5YMWFYSUtoMUorUk5hSisydFprYSsrQ2p5VnZ1Z20zeW82c01oODkvUE92YgprcTdDWmV6b0NWdmxob2Z2aXNYd3BoRFk3L2luaFg1YjFlQWlvM0dyQitFSzRMenlOZXNXQUxqTDE2bTFSSllYCm5lNWNEdEVDZ1lFQW5zUHgyUWcyeVF6bUJiQ0VnQ2hZTzg4SFdnNkxlLzFIcXg3Zmw1MExVbGdPSXBSazNkTFAKSUR6M3MwaTB0L1JsWG1CbEVsMDYwWmlqWkZLSmQwWG91SkJDbllKclQxYlVJeVlEQzVmZU5EcVkxYXlhSXNLNQpocitVMktQVmNmOHEva3JmR2RndzVuQTQ1aVp3RExjSlRWZS9rSzliREd3TmF2WEx6QkRSd1pRPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGVENDQWYyZ0F3SUJBZ0lRZnBVQkpqVEVXaUdoV0IwbUx3YUxVVEFOQmdrcWhraUc5dzBCQVFzRkFEQVYKTVJNd0VRWURWUVFERXdwemRtTXRZMkYwTFdOaE1CNFhEVEkwTURreE5qRXdNakkxTmxvWERUTTBNRGt4TkRFdwpNakkxTmxvd0ZURVRNQkVHQTFVRUF4TUtjM1pqTFdOaGRDMWpZVENDQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFECmdnRVBBRENDQVFvQ2dnRUJBTmU2K3FJODNFbzIxbFJKc1k2dDZpOGxCNm9waEhVd1dmRkRycXpFbWNBakpmcnMKWFd2QmhTV3FYUlFFTzUycTVJZmNHK2YwWHZsVTlaazBic3FadnNzK0xlc0VuSnNtQTBqU0dYSGY5RnpnVG00SgpEa3AwVktNdFFEcXNBZ2Jrajd1clo0eitESnoyVS90Zm1paGxRdWJ6R2ZaUHBnc3lPdzN3NFBaTlBOVlZibUNpCkRaVHl4NFp6dnJjbUJnL2l5SzJJN2JzNVd4Ukh2Z3VONHZuRWdxbkwwWGtOSXFaNEpaQW9SVzR6Q3VhdzVMejMKMmdCSUtTMFN4RFgwQzNLa0xHcHNqQnZOK3VTN0FvZGZkUnZ2T3dhVTBmZmhBN2Q0R2kvekZVOFJKTTFvUXlwbwp4eWwxQUVMMGgyWkRuUUFRUTIyNkhvelBWZVpPcUdiekw0c1Y2enNDQXdFQUFhTmhNRjh3RGdZRFZSMFBBUUgvCkJBUURBZ0trTUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndNQkJnZ3JCZ0VGQlFjREFqQVBCZ05WSFJNQkFmOEUKQlRBREFRSC9NQjBHQTFVZERnUVdCQlRHNDR0bVlRMjJMVjhCSXcwZ1RkMk5USW1ZeVRBTkJna3Foa2lHOXcwQgpBUXNGQUFPQ0FRRUExVGN6VFJ1MDZIMEdVSlNhanhqekU3V1NQei9xR3BOa1VSc0tFcS90cGdtUENsRjMvOXRqClpBVG1YM3krWDl4ek44Wms4YmJWaVVQb0JRRndsUXpzekFhdGd2WHJmTWM0UTRIRVc3MlJSVXJXOXgzOVNyV1YKVEEvcERIY1QvbFlqaVU4aWNKYVlmajlGd1pUYnNRRDYxS2hPaDh2TWtob0NKSGgwa1BvYlptc0N3V3dVY3duZgpneVpSUEdYSDM0SXVBQURHMWEvMTN5V3h2TmhTK05BVk9wcGMyZnN2QlhPdC8xTnFQSC9oOHlRTEorWW1Zb0RjCnpvMkdFUUZaSk04L0tIWlFKVWlKb1duSVJEQWNZWGlabWNnaHpXaDNuRFJCSW9hRkNTeWVWUjF0UFBGTTVlSTgKb00rVzdwMEo4YVM2UWo4a29BbDJ1cTQ4VExTNitMSlNzQT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
---
# Source: supertubes-control-plane/templates/supertubes-crd.yaml
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.5
  creationTimestamp: null
  name: applicationmanifests.supertubes.banzaicloud.io
spec:
  group: supertubes.banzaicloud.io
  names:
    kind: ApplicationManifest
    listKind: ApplicationManifestList
    plural: applicationmanifests
    singular: applicationmanifest
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: ApplicationManifest is the Schema for the applicationmanifests
        API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: ApplicationManifestSpec defines the desired state of ApplicationManifest
          properties:
            istioOperator:
              properties:
                createDefaultMesh:
                  type: boolean
                enabled:
                  type: boolean
                namespace:
                  type: string
                valuesOverride:
                  type: string
              required:
                - enabled
                - namespace
              type: object
            kafkaMinion:
              properties:
                enabled:
                  type: boolean
                valuesOverride:
                  type: string
              type: object
            kafkaOperator:
              properties:
                enabled:
                  type: boolean
                namespace:
                  type: string
                valuesOverride:
                  type: string
              required:
                - enabled
                - namespace
              type: object
            monitoring:
              properties:
                grafanaDashboards:
                  properties:
                    enabled:
                      type: boolean
                    label:
                      type: string
                  type: object
                prometheusOperator:
                  properties:
                    enabled:
                      type: boolean
                    namespace:
                      type: string
                    valuesOverride:
                      type: string
                  required:
                    - enabled
                    - namespace
                  type: object
              type: object
            supertubes:
              properties:
                enabled:
                  type: boolean
                namespace:
                  type: string
                valuesOverride:
                  type: string
              required:
                - enabled
                - namespace
              type: object
            zookeeperOperator:
              properties:
                createDefaultCluster:
                  type: boolean
                enabled:
                  type: boolean
                namespace:
                  type: string
                valuesoverride:
                  type: string
              required:
                - enabled
                - namespace
              type: object
          type: object
        status:
          description: ApplicationManifestStatus defines the observed state of ApplicationManifest
          properties:
            components:
              properties:
                istioOperator:
                  properties:
                    meshStatus:
                      type: string
                    meshStatusMessage:
                      type: string
                    message:
                      type: string
                    status:
                      type: string
                  type: object
                kafkaOperator:
                  properties:
                    message:
                      type: string
                    status:
                      type: string
                  type: object
                monitoring:
                  properties:
                    message:
                      type: string
                    status:
                      type: string
                  type: object
                supertubes:
                  properties:
                    message:
                      type: string
                    status:
                      type: string
                  type: object
                zookeeperOperator:
                  properties:
                    clusterStatus:
                      type: string
                    clusterStatusMessage:
                      type: string
                    message:
                      type: string
                    status:
                      type: string
                  type: object
              type: object
            status:
              type: string
          type: object
      type: object
  version: v1beta1
  versions:
    - name: v1beta1
      served: true
      storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: supertubes-control-plane/templates/supertubes-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-supertubes-control-plane-manifest-manager-role
rules:
  - apiGroups:
      - '*'
    resources:
      - '*'
    verbs:
      - '*'
  - nonResourceURLs:
      - '*'
    verbs:
      - '*'
---
# Source: supertubes-control-plane/templates/supertubes-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-supertubes-control-plane-manifest-proxy-role
rules:
  - apiGroups:
      - authentication.k8s.io
    resources:
      - tokenreviews
    verbs:
      - create
  - apiGroups:
      - authorization.k8s.io
    resources:
      - subjectaccessreviews
    verbs:
      - create
---
# Source: supertubes-control-plane/templates/supertubes-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: my-supertubes-control-plane-manifest-metrics-reader
rules:
  - nonResourceURLs:
      - /metrics
    verbs:
      - get
---
# Source: supertubes-control-plane/templates/supertubes-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-supertubes-control-plane-manifest-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-supertubes-control-plane-manifest-manager-role
subjects:
  - kind: ServiceAccount
    name: my-supertubes-control-plane
    namespace: "default"
---
# Source: supertubes-control-plane/templates/supertubes-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-supertubes-control-plane-manifest-proxy-rolebinding
  labels:
  
    helm.sh/chart: supertubes-control-plane-1.1.0
    app.kubernetes.io/name: supertubes-control-plane
    app.kubernetes.io/instance: my-supertubes-control-plane
    app.kubernetes.io/component: operator
    app.kubernetes.io/version: "v1.1.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-supertubes-control-plane-manifest-proxy-role
subjects:
  - kind: ServiceAccount
    name: my-supertubes-control-plane
    namespace: "default"
---
# Source: supertubes-control-plane/templates/supertubes-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: my-supertubes-control-plane-manifest-leader-election-role
  namespace: "default"
  labels:
  
    helm.sh/chart: supertubes-control-plane-1.1.0
    app.kubernetes.io/name: supertubes-control-plane
    app.kubernetes.io/instance: my-supertubes-control-plane
    app.kubernetes.io/component: operator
    app.kubernetes.io/version: "v1.1.0"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - ""
    resources:
      - configmaps/status
    verbs:
      - get
      - update
      - patch
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
---
# Source: supertubes-control-plane/templates/supertubes-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: my-supertubes-control-plane-manifest-leader-election-rolebinding
  namespace: "default"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: my-supertubes-control-plane-manifest-leader-election-role
subjects:
  - kind: ServiceAccount
    name: my-supertubes-control-plane
    namespace: "default"
---
# Source: supertubes-control-plane/templates/supertubes-service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    helm.sh/chart: supertubes-control-plane-1.1.0
    app.kubernetes.io/name: supertubes-control-plane
    app.kubernetes.io/instance: my-supertubes-control-plane
    app.kubernetes.io/component: operator
    app.kubernetes.io/version: "v1.1.0"
    app.kubernetes.io/managed-by: Helm
  name: my-supertubes-control-plane
  namespace: "default"
spec:
  ports:
    - name: https
      port: 8443
      targetPort: https
    - name: webhook-server
      port: 443
      targetPort: webhook-server
  selector:
    app: supertubes-control-plane
    app.kubernetes.io/name: supertubes-control-plane
    app.kubernetes.io/instance: my-supertubes-control-plane
    app.kubernetes.io/component: operator
---
# Source: supertubes-control-plane/templates/supertubes-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-supertubes-control-plane
  namespace: default
  labels:
    helm.sh/chart: supertubes-control-plane-1.1.0
    app.kubernetes.io/name: supertubes-control-plane
    app.kubernetes.io/instance: my-supertubes-control-plane
    app.kubernetes.io/component: operator
    app.kubernetes.io/version: "v1.1.0"
    app.kubernetes.io/managed-by: Helm
    control-plane: manifest-controller-manager
spec:
  replicas: 1
  selector:
    matchLabels:
      app: supertubes-control-plane
      app.kubernetes.io/name: supertubes-control-plane
      app.kubernetes.io/instance: my-supertubes-control-plane
      app.kubernetes.io/component: operator
  template:
    metadata:
      labels:
        app: supertubes-control-plane
        helm.sh/chart: supertubes-control-plane-1.1.0
        app.kubernetes.io/name: supertubes-control-plane
        app.kubernetes.io/instance: my-supertubes-control-plane
        app.kubernetes.io/component: operator
        app.kubernetes.io/version: "v1.1.0"
        app.kubernetes.io/managed-by: Helm
    spec:
      serviceAccountName: my-supertubes-control-plane
      volumes:
        - name: serving-cert
          secret:
            secretName: supertubes-manifest-controller-serving-cert
      containers:
        - args:
            - --secure-listen-address=0.0.0.0:8443
            - --upstream=http://127.0.0.1:8080/
            - --logtostderr=true
            - --v=10
          image: "gcr.io/kubebuilder/kube-rbac-proxy:v0.5.0"
          name: rbac-proxy
          ports:
            - containerPort: 8443
              name: https
        - args:
            - --metrics-addr=127.0.0.1:8080
            - --enable-leader-election
            - --leader-election-namespace=
            - --zap-devel=false
            - --zap-encoder=console
            - --zap-log-level=info
          command:
            - /manager
          image: "ghcr.io/banzaicloud/supertubes-control-plane:v1.1.0"
          imagePullPolicy: IfNotPresent
          name: manager
          ports:
            - containerPort: 8080
              name: metrics
              protocol: TCP
            - containerPort: 9001
              name: alerts
              protocol: TCP
            - containerPort: 9443
              name: webhook-server
              protocol: TCP
          volumeMounts:
            - mountPath: /tmp/k8s-webhook-server/serving-certs
              name: serving-cert
              readOnly: true
          resources:
            limits:
              cpu: 200m
              memory: 256Mi
            requests:
              cpu: 100m
              memory: 128Mi
      terminationGracePeriodSeconds: 10
---
# Source: supertubes-control-plane/templates/supertubes-webhooks.yaml
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingWebhookConfiguration
metadata:
  name: my-supertubes-control-plane
  namespace: default
webhooks:
- name: singleton-vapplicationmanifest.my-supertubes-control-plane.admission.banzaicloud.io
  clientConfig:
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGVENDQWYyZ0F3SUJBZ0lRZnBVQkpqVEVXaUdoV0IwbUx3YUxVVEFOQmdrcWhraUc5dzBCQVFzRkFEQVYKTVJNd0VRWURWUVFERXdwemRtTXRZMkYwTFdOaE1CNFhEVEkwTURreE5qRXdNakkxTmxvWERUTTBNRGt4TkRFdwpNakkxTmxvd0ZURVRNQkVHQTFVRUF4TUtjM1pqTFdOaGRDMWpZVENDQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFECmdnRVBBRENDQVFvQ2dnRUJBTmU2K3FJODNFbzIxbFJKc1k2dDZpOGxCNm9waEhVd1dmRkRycXpFbWNBakpmcnMKWFd2QmhTV3FYUlFFTzUycTVJZmNHK2YwWHZsVTlaazBic3FadnNzK0xlc0VuSnNtQTBqU0dYSGY5RnpnVG00SgpEa3AwVktNdFFEcXNBZ2Jrajd1clo0eitESnoyVS90Zm1paGxRdWJ6R2ZaUHBnc3lPdzN3NFBaTlBOVlZibUNpCkRaVHl4NFp6dnJjbUJnL2l5SzJJN2JzNVd4Ukh2Z3VONHZuRWdxbkwwWGtOSXFaNEpaQW9SVzR6Q3VhdzVMejMKMmdCSUtTMFN4RFgwQzNLa0xHcHNqQnZOK3VTN0FvZGZkUnZ2T3dhVTBmZmhBN2Q0R2kvekZVOFJKTTFvUXlwbwp4eWwxQUVMMGgyWkRuUUFRUTIyNkhvelBWZVpPcUdiekw0c1Y2enNDQXdFQUFhTmhNRjh3RGdZRFZSMFBBUUgvCkJBUURBZ0trTUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndNQkJnZ3JCZ0VGQlFjREFqQVBCZ05WSFJNQkFmOEUKQlRBREFRSC9NQjBHQTFVZERnUVdCQlRHNDR0bVlRMjJMVjhCSXcwZ1RkMk5USW1ZeVRBTkJna3Foa2lHOXcwQgpBUXNGQUFPQ0FRRUExVGN6VFJ1MDZIMEdVSlNhanhqekU3V1NQei9xR3BOa1VSc0tFcS90cGdtUENsRjMvOXRqClpBVG1YM3krWDl4ek44Wms4YmJWaVVQb0JRRndsUXpzekFhdGd2WHJmTWM0UTRIRVc3MlJSVXJXOXgzOVNyV1YKVEEvcERIY1QvbFlqaVU4aWNKYVlmajlGd1pUYnNRRDYxS2hPaDh2TWtob0NKSGgwa1BvYlptc0N3V3dVY3duZgpneVpSUEdYSDM0SXVBQURHMWEvMTN5V3h2TmhTK05BVk9wcGMyZnN2QlhPdC8xTnFQSC9oOHlRTEorWW1Zb0RjCnpvMkdFUUZaSk04L0tIWlFKVWlKb1duSVJEQWNZWGlabWNnaHpXaDNuRFJCSW9hRkNTeWVWUjF0UFBGTTVlSTgKb00rVzdwMEo4YVM2UWo4a29BbDJ1cTQ4VExTNitMSlNzQT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
    service:
      name: my-supertubes-control-plane
      namespace: default
      path: /singleton-validate-supertubes-banzaicloud-io-v1beta1-applicationmanifest
  failurePolicy: Fail
  rules:
  - apiGroups:
    - supertubes.banzaicloud.io
    apiVersions:
    - v1beta1
    operations:
    - CREATE
    resources:
    - applicationmanifests
