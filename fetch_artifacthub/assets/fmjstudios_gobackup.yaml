---
# Source: gobackup/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-gobackup
  namespace: default
  labels:
    helm.sh/chart: gobackup-0.2.1
    app.kubernetes.io/name: gobackup
    app.kubernetes.io/instance: my-gobackup
    app.kubernetes.io/version: "2.11.2"
    app.kubernetes.io/managed-by: Helm
automountServiceAccountToken: false
---
# Source: gobackup/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-gobackup-web-credentials
  namespace: default
  labels:
    app.kubernetes.io/component: gobackup
    helm.sh/chart: gobackup-0.2.1
    app.kubernetes.io/name: gobackup
    app.kubernetes.io/instance: my-gobackup
    app.kubernetes.io/version: "2.11.2"
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  username: ""
  password: ""
---
# Source: gobackup/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-gobackup
  namespace: default
  labels:
    app.kubernetes.io/component: gobackup
    helm.sh/chart: gobackup-0.2.1
    app.kubernetes.io/name: gobackup
    app.kubernetes.io/instance: my-gobackup
    app.kubernetes.io/version: "2.11.2"
    app.kubernetes.io/managed-by: Helm
data:
  gobackup.yml: |
    web:
      port: 2703
      host: 0.0.0.0
    models:
      default:
        description: Default GoBackup model
        default_storage: default
---
# Source: gobackup/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: my-gobackup
  namespace: default
  labels:
    helm.sh/chart: gobackup-0.2.1
    app.kubernetes.io/name: gobackup
    app.kubernetes.io/instance: my-gobackup
    app.kubernetes.io/version: "2.11.2"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: gobackup
rules:
  - apiGroups: [""]
    resources: ["configmaps"]
    verbs: ["get"]
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get"]
---
# Source: gobackup/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: my-gobackup
  namespace: default
  labels:
    helm.sh/chart: gobackup-0.2.1
    app.kubernetes.io/name: gobackup
    app.kubernetes.io/instance: my-gobackup
    app.kubernetes.io/version: "2.11.2"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: gobackup
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: my-gobackup
subjects:
  - kind: ServiceAccount
    name: my-gobackup
    namespace: default
---
# Source: gobackup/templates/svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-gobackup
  namespace: default
  labels:
    helm.sh/chart: gobackup-0.2.1
    app.kubernetes.io/name: gobackup
    app.kubernetes.io/instance: my-gobackup
    app.kubernetes.io/version: "2.11.2"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  selector:
    app.kubernetes.io/name: gobackup
    app.kubernetes.io/instance: my-gobackup
  internalTrafficPolicy: Cluster
  sessionAffinity: None
  ports:
    - port: 8273
      targetPort: 2703
      protocol: TCP
      name: http
---
# Source: gobackup/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-gobackup
  namespace: default
  labels:
    helm.sh/chart: gobackup-0.2.1
    app.kubernetes.io/name: gobackup
    app.kubernetes.io/instance: my-gobackup
    app.kubernetes.io/version: "2.11.2"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: gobackup
      app.kubernetes.io/instance: my-gobackup
  template:
    metadata:
      labels:
        app.kubernetes.io/name: gobackup
        app.kubernetes.io/instance: my-gobackup
    spec:
      serviceAccountName: my-gobackup
      automountServiceAccountToken: false
      containers:
        - name: gobackup
          image: "docker.io/huacnlee/gobackup:v2.11.2"
          imagePullPolicy: IfNotPresent
          env:
          ports:
            - name: http
              containerPort: 2703
              protocol: TCP
          volumeMounts:
            - name: my-gobackup-config
              mountPath: /etc/gobackup
      volumes:
        - name: my-gobackup-config
          configMap:
            name: my-gobackup
