---
# Source: reportportal/templates/reportportal-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
    name: reportportal
    namespace: default
---
# Source: reportportal/templates/reportportal-serviceaccount.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
    name: my-reportportal-service-reader
    namespace: default
rules:
    - apiGroups:
        - ""
      resources: ["pods","services"]
      verbs: ["get", "list", "watch"]
---
# Source: reportportal/templates/reportportal-serviceaccount.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
    name: my-reportportal-user-binding
    namespace: default
roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: my-reportportal-service-reader
subjects:
    - kind: ServiceAccount
      name: reportportal
      namespace: default
---
# Source: reportportal/templates/analyzer-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-reportportal-analyzer
  labels:     
    heritage: "Helm"
    release: "my-reportportal"
    chart: reportportal-5.7.2
    app: "reportportal"
spec:
  ports:
  - name: headless
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    component: my-reportportal-analyzer
  type: ClusterIP
---
# Source: reportportal/templates/analyzertrain-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-reportportal-analyzer-train
  labels:     
    heritage: "Helm"
    release: "my-reportportal"
    chart: reportportal-5.7.2
    app: "reportportal"
spec:
  ports:
  - name: headless
    port: 5000
    protocol: TCP
    targetPort: 5000
  selector:
    component: my-reportportal-analyzer-train
  type: ClusterIP
---
# Source: reportportal/templates/api-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-reportportal-api
  labels:     
    heritage: "Helm"
    release: "my-reportportal"
    chart: reportportal-5.7.2
    app: "reportportal"
  annotations:
    service: api
    infoEndpoint: /info
spec:
  ports:
  - name: headless
    port: 8585
    protocol: TCP
    targetPort: 8585
  selector:
    component: my-reportportal-api
  type: ClusterIP
---
# Source: reportportal/templates/index-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-reportportal-index
  labels:     
    heritage: "Helm"
    release: "my-reportportal"
    chart: reportportal-5.7.2
    app: "reportportal"
  annotations:
    service: index
    infoEndpoint: /info
spec:
  ports:
  - name: headless
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    component: my-reportportal-index
  type: ClusterIP
---
# Source: reportportal/templates/jobs-services.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-reportportal-jobs
  labels:     
    heritage: "Helm"
    release: "my-reportportal"
    chart: reportportal-5.7.2
    app: "reportportal"
  annotations:
    service: jobs
    infoEndpoint: /info
spec:
  ports:
  - name: headless
    port: 8686
    protocol: TCP
    targetPort: 8686
  selector:
    component: my-reportportal-jobs
  type: ClusterIP
---
# Source: reportportal/templates/metrics-gatherer-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-reportportal-metrics-gatherer
  labels:     
    heritage: "Helm"
    release: "my-reportportal"
    chart: reportportal-5.7.2
    app: "reportportal"
  annotations:
    service: metrics-gatherer
    infoEndpoint: /info
spec:
  ports:
  - name: headless
    port: 8585
    protocol: TCP
    targetPort: 8585
  selector:
    component: my-reportportal-metrics-gatherer
  type: ClusterIP
---
# Source: reportportal/templates/uat-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-reportportal-uat
  labels:     
    heritage: "Helm"
    release: "my-reportportal"
    chart: reportportal-5.7.2
    app: "reportportal"
  annotations:
    service: uat
    infoEndpoint: /info
spec:
  ports:
  - name: headless
    port: 9999
    protocol: TCP
    targetPort: 9999
  selector:
    component: my-reportportal-uat
  type: ClusterIP
---
# Source: reportportal/templates/ui-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-reportportal-ui
  labels:     
    heritage: "Helm"
    release: "my-reportportal"
    chart: reportportal-5.7.2
    app: "reportportal"
  annotations:
    service: ui
    infoEndpoint: /info
spec:
  ports:
  - name: headless
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    component: my-reportportal-ui
  type: ClusterIP
---
# Source: reportportal/templates/api-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-reportportal-api
  labels:     
    heritage: "Helm"
    release: "my-reportportal"
    chart: reportportal-5.7.2
    app: "reportportal"
spec:
  replicas: 1
  selector:
    matchLabels:
      component: my-reportportal-api
  template:
    metadata:
      labels:
        component: my-reportportal-api
      annotations:
    spec:
      initContainers:
      containers:
      - env:
        - name: LOGGING_LEVEL_ORG_HIBERNATE_SQL
          value: "info"
        - name: RP_REQUESTLOGGING
          value: "false"
        - name: RP_AMQP_QUEUES
          value: "10"
        - name: RP_AMQP_QUEUESPERPOD
          value: "10"
        - name: JAVA_OPTS
          value: "-Djava.security.egd=file:/dev/./urandom -XX:+UseG1GC -XX:MinRAMPercentage=60.0 -XX:InitiatingHeapOccupancyPercent=70 -XX:MaxRAMPercentage=90.0 -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/tmp"
        - name: RP_AMQP_HOST
          value: "<rabbitmq-release-name>-rabbitmq.default.svc.cluster.local"
        - name: RP_AMQP_PORT
          value: "5672"
        - name: RP_AMQP_ANALYZER-VHOST
          value: "analyzer"
        - name: RP_AMQP_USER
          value: "rabbitmq"
        - name: RP_AMQP_PASS
          value: ""
        - name: RP_AMQP_APIPORT
          value: "15672"
        - name: RP_AMQP_APIUSER
          value: "rabbitmq"
        - name: RP_AMQP_APIPASS
          value: ""
        - name: RP_DB_HOST
          value: "<postgresql-release-name>-postgresql.default.svc.cluster.local"
        - name: RP_DB_PORT
          value: "5432"
        - name: RP_DB_NAME
          value: "reportportal"
        - name: RP_DB_USER
          value: "rpuser"
        - name: RP_DB_PASS
          value: ""
        - name: RP_BINARYSTORE_TYPE
          value: "minio"
        - name: RP_BINARYSTORE_MINIO_ENDPOINT
          value: "http://<minio-release-name>-minio.default.svc.cluster.local:9000"
        - name: RP_BINARYSTORE_MINIO_ACCESSKEY
          value: "<minio-accesskey>"
        - name: RP_BINARYSTORE_MINIO_SECRETKEY
          value: "<minio-secretkey>"
        - name: MANAGEMENT_HEALTH_ELASTICSEARCH_ENABLED
          value: "false"
        image: "reportportal/service-api:5.7.2"
        name: api
        ports:
        - containerPort: 8585
          protocol: TCP
        resources:
          requests:
            cpu: 500m
            memory: 1024Mi
          limits:
            cpu: 1000m
            memory: 2048Mi
        readinessProbe:
          httpGet:
            path: "/health"
            port: 8585
          initialDelaySeconds: 30
          periodSeconds: 20
          timeoutSeconds: 3
          failureThreshold: 20
      securityContext:        {}
      serviceAccountName:
---
# Source: reportportal/templates/index-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-reportportal-index
  labels:     
    heritage: "Helm"
    release: "my-reportportal"
    chart: reportportal-5.7.2
    app: "reportportal"
spec:
  replicas: 1
  selector:
    matchLabels:
      component: my-reportportal-index
  template:
    metadata:
      labels:
        component: my-reportportal-index
      annotations:
    spec:
      initContainers:
      serviceAccountName: reportportal
      containers:
      - env:
        - name: K8S_MODE
          value: "true"
        ### Added for Skaffold local dev environment support
        
        image: "reportportal/service-index:5.0.11"
        
        name: index
        ports:
        - containerPort: 8080
          protocol: TCP
        readinessProbe:
          httpGet:
            path: "/health"
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 3
        resources:
          requests:
            cpu: 150m
            memory: 128Mi
          limits:
            cpu: 200m
            memory: 256Mi
      securityContext:
        {}
---
# Source: reportportal/templates/jobs-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-reportportal-jobs
  labels:     
    heritage: "Helm"
    release: "my-reportportal"
    chart: reportportal-5.7.2
    app: "reportportal"
spec:
  replicas: 1
  selector:
    matchLabels:
      component: my-reportportal-jobs
  template:
    metadata:
      labels:
        component: my-reportportal-jobs
      annotations:
    spec:
      initContainers:
      containers:
      - env:
        - name: RP_ENVIRONMENT_VARIABLE_CLEAN_ATTACHMENT_CRON
          value: "0 0 */24 * * *"
        - name: RP_ENVIRONMENT_VARIABLE_CLEAN_LOG_CRON
          value: "0 0 */24 * * *"
        - name: RP_ENVIRONMENT_VARIABLE_CLEAN_LAUNCH_CRON
          value: "0 0 */24 * * *"
        - name: RP_ENVIRONMENT_VARIABLE_CLEAN_STORAGE_CRON
          value: "0 0 */24 * * *"
        - name: RP_ENVIRONMENT_VARIABLE_STORAGE_PROJECT_CRON
          value: "0 */5 * * * *"
        - name: RP_ENVIRONMENT_VARIABLE_CLEAN_STORAGE_CHUNKSIZE
          value: "1000"
        - name: RP_AMQP_HOST
          value: "<rabbitmq-release-name>-rabbitmq.default.svc.cluster.local"
        - name: RP_AMQP_PORT
          value: "5672"
        - name: RP_AMQP_ANALYZER-VHOST
          value: "analyzer"
        - name: RP_AMQP_USER
          value: "rabbitmq"
        - name: RP_AMQP_PASS
        
          value: ""
        
        - name: RP_AMQP_APIPORT
          value: "15672"
        - name: RP_AMQP_APIUSER
          value: "rabbitmq"
        - name: RP_AMQP_APIPASS
        
          value: ""
        
        - name: RP_DB_HOST
          value: "<postgresql-release-name>-postgresql.default.svc.cluster.local"
        - name: RP_DB_PORT
          value: "5432"
        - name: RP_DB_NAME
          value: "reportportal"
        - name: RP_DB_USER
          value: "rpuser"
        - name: RP_DB_PASS
          value: ""
        
        
        - name: DATASTORE_TYPE
          value: "minio"
        - name: DATASTORE_MINIO_ENDPOINT
          value: "http://<minio-release-name>-minio.default.svc.cluster.local:9000"
        - name: DATASTORE_MINIO_ACCESSKEY
          value: "<minio-accesskey>"
        - name: DATASTORE_MINIO_SECRETKEY
          value: "<minio-secretkey>"
       
        - name: RP_PROCESSING_LOG_MAXBATCHSIZE
          value: "2000"
        - name: RP_PROCESSING_LOG_MAXBATCHTIMEOUT
          value: "6000"
        - name: RP_AMQP_MAXLOGCONSUMER
          value: "1"
        image: "reportportal/service-jobs:5.7.2"
        name: jobs
        ports:
        - containerPort: 8686
          protocol: TCP
        resources:
          requests:
            cpu: 100m
            memory: 248Mi
          limits:
            cpu: 100m
            memory: 372Mi
      securityContext:
        {}
      serviceAccountName:
---
# Source: reportportal/templates/metrics-gatherer-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-reportportal-metrics-gatherer
  labels:     
    heritage: "Helm"
    release: "my-reportportal"
    chart: reportportal-5.7.2
    app: "reportportal"
spec:
  replicas: 1
  selector:
    matchLabels:
      component: my-reportportal-metrics-gatherer
  template:
    metadata:
      labels:
        component: my-reportportal-metrics-gatherer
      annotations:
    spec:
      initContainers:
      containers:
      - env:
        - name: RP_AMQP_PASS
        
          value: ""
        
        - name: AMQP_URL
          value: "amqp://rabbitmq:$(RP_AMQP_PASS)@<rabbitmq-release-name>-rabbitmq.default.svc.cluster.local:5672/"
        - name: AMQP_VIRTUAL_HOST
          value: "analyzer"
        - name: LOGGING_LEVEL
          value: "debug"
        - name: ES_HOST
          value: "http://elasticsearch-master.default.svc.cluster.local:9200"
        - name: ES_USER
          value: "elastic"
        - name: ES_PASSWORD
          value: ""
        - name: POSTGRES_HOST
          value: "<postgresql-release-name>-postgresql.default.svc.cluster.local"
        - name: POSTGRES_PORT
          value: "5432"
        - name: POSTGRES_DB
          value: "reportportal"
        - name: POSTGRES_USER
          value: "rpuser"
        - name: POSTGRES_PASSWORD
          value: ""
        - name: ALLOWED_START_TIME
          value: "22:00"
        - name: ALLOWED_END_TIME
          value: "08:00"
        - name: MAX_DAYS_STORE
          value: "500"
        - name: TZ
          value: "Europe/Minsk"
        image: "reportportal/service-metrics-gatherer:1.1.20"
        name: metrics-gatherer
        ports:
        - containerPort: 3000
          protocol: TCP
        resources:
          requests:
            cpu: 8m
            memory: 128Mi
          limits:
            cpu: 16m
            memory: 256Mi
      securityContext:
        {}
      serviceAccountName:
---
# Source: reportportal/templates/uat-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-reportportal-uat
  labels:     
    heritage: "Helm"
    release: "my-reportportal"
    chart: reportportal-5.7.2
    app: "reportportal"
spec:
  replicas: 1
  selector:
    matchLabels:
      component: my-reportportal-uat
  template:
    metadata:
      labels:
        component: my-reportportal-uat
      annotations:
    spec:
      initContainers:
      containers:
      - env:
        
        - name: JAVA_OPTS
          value: "-Djava.security.egd=file:/dev/./urandom -XX:MinRAMPercentage=60.0 -XX:MaxRAMPercentage=90.0"
        
        - name: RP_SESSION_LIVE
          value: "86400"
        - name: RP_DB_HOST
          value: "<postgresql-release-name>-postgresql.default.svc.cluster.local"
        - name: RP_DB_PORT
          value: "5432"
        - name: RP_DB_NAME
          value: "reportportal"
        - name: RP_DB_USER
          value: "rpuser"
        - name: RP_DB_PASS
        
          value: ""
        
        
        - name: RP_BINARYSTORE_TYPE
          value: "minio"
        - name: RP_BINARYSTORE_MINIO_ENDPOINT
          value: "http://<minio-release-name>-minio.default.svc.cluster.local:9000"
        
        
        - name: RP_BINARYSTORE_MINIO_ACCESSKEY
          value: "<minio-accesskey>"
        - name: RP_BINARYSTORE_MINIO_SECRETKEY
          value: "<minio-secretkey>"
        
        
        
        
        
        name: uat
        image: "reportportal/service-authorization:5.7.0"
        ports:
        - containerPort: 9999
          protocol: TCP
        resources:
          requests:
            cpu: 100m
            memory: 512Mi
          limits:
            cpu: 500m
            memory: 2048Mi
        readinessProbe:
          httpGet:
            path: "/health"
            port: 9999
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 5
        volumeMounts:
      securityContext:
        {}
      serviceAccountName: 
      tolerations:
      volumes:
---
# Source: reportportal/templates/ui-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-reportportal-ui
  labels:     
    heritage: "Helm"
    release: "my-reportportal"
    chart: reportportal-5.7.2
    app: "reportportal"
spec:
  replicas: 1
  selector:
    matchLabels:
      component: my-reportportal-ui
  template:
    metadata:
      labels:
        component: my-reportportal-ui
      annotations:
    spec:
      initContainers:
      containers:
      - env:
        - name: RP_SERVER_PORT
          value: "8080"
        image: "reportportal/service-ui:5.7.2"
        name: ui
        ports:
        - containerPort: 8080
          protocol: TCP
        resources:
          requests:
            cpu: 100m
            memory: 64Mi
          limits:
            cpu: 200m
            memory: 128Mi
        readinessProbe:
          httpGet:
            path: "/health"
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 3
      securityContext:
        {}
      serviceAccountName:
---
# Source: reportportal/templates/analyzer-statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: my-reportportal-analyzer
  labels:     
    heritage: "Helm"
    release: "my-reportportal"
    chart: reportportal-5.7.2
    app: "reportportal"
spec:
  replicas: 1
  selector:
    matchLabels:
      component: my-reportportal-analyzer
  serviceName: my-reportportal-analyzer
  template:
    metadata:
      labels:
        component: my-reportportal-analyzer
      annotations:
    spec:
      initContainers:
      containers:
      - env:
      
        - name: ANALYZER_BINARYSTORE_TYPE
          value: "minio"
        - name: MINIO_SHORT_HOST
          value: "<minio-release-name>-minio.default.svc.cluster.local:9000"
        
        - name: MINIO_ACCESS_KEY
          value: "<minio-accesskey>"
        - name: MINIO_SECRET_KEY
          value: "<minio-secretkey>"
       
       
        - name: RP_AMQP_PASS
        
          value: ""
        
        - name: AMQP_URL
          value: "amqp://rabbitmq:$(RP_AMQP_PASS)@<rabbitmq-release-name>-rabbitmq.default.svc.cluster.local:5672/"
        - name: AMQP_EXCHANGE_NAME
          value: "analyzer-default"
        - name: AMQP_VIRTUAL_HOST
          value: "analyzer"
        - name: ES_HOSTS
          value: "http://elasticsearch-master.default.svc.cluster.local:9200"
        - name: ES_USER
          value: "elastic"
        - name: ES_PASSWORD
          value: ""
        - name: UWSGI_WORKERS
          value: "2"
        image: "reportportal/service-auto-analyzer:5.7.2"
        name: analyzer
        ports:
        - containerPort: 8080
          protocol: TCP
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits:
            cpu: 100m
            memory: 512Mi
      securityContext:
        {}
      serviceAccountName:
---
# Source: reportportal/templates/analyzertrain-statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: my-reportportal-analyzer-train
  labels:     
    heritage: "Helm"
    release: "my-reportportal"
    chart: reportportal-5.7.2
    app: "reportportal"
spec:
  replicas: 1
  selector:
    matchLabels:
      component: my-reportportal-analyzer-train
  serviceName: my-reportportal-analyzertrain
  template:
    metadata:
      labels:
        component: my-reportportal-analyzer-train
      annotations:
    spec:
      initContainers:
      containers:
      - env:
        - name: INSTANCE_TASK_TYPE
          value: "train"
        - name: UWSGI_WORKERS
          value: "1"
        
        - name: ANALYZER_BINARYSTORE_TYPE
          value: "minio"
        - name: MINIO_SHORT_HOST
          value: "<minio-release-name>-minio.default.svc.cluster.local:9000"
        
        - name: MINIO_ACCESS_KEY
          value: "<minio-accesskey>"
        - name: MINIO_SECRET_KEY
          value: "<minio-secretkey>"
       
       
        - name: RP_AMQP_PASS
        
          value: ""
        
        - name: AMQP_URL
          value: "amqp://rabbitmq:$(RP_AMQP_PASS)@<rabbitmq-release-name>-rabbitmq.default.svc.cluster.local:5672/"
        - name: AMQP_EXCHANGE_NAME
          value: "analyzer-default"
        - name: AMQP_VIRTUAL_HOST
          value: "analyzer"
        - name: ES_HOSTS
          value: "http://elasticsearch-master.default.svc.cluster.local:9200"
        - name: ES_USER
          value: "elastic"
        - name: ES_PASSWORD
          value: ""
        image: "reportportal/service-auto-analyzer:5.7.2"
        name: analyzer
        ports:
        - containerPort: 5000
          protocol: TCP
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits:
            cpu: 200m
            memory: 512Mi
      securityContext:
        {}
      serviceAccountName:
---
# Source: reportportal/templates/gateway-ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: my-reportportal-gateway-ingress
  labels:     
    heritage: "Helm"
    release: "my-reportportal"
    chart: reportportal-5.7.2
    app: "reportportal"
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/proxy-body-size: "128m"
    nginx.ingress.kubernetes.io/proxy-buffer-size: "512k"
    nginx.ingress.kubernetes.io/proxy-buffers-number: "4"
    nginx.ingress.kubernetes.io/proxy-busy-buffers-size: "512k"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "8000"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "4000"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "4000"
    nginx.ingress.kubernetes.io/rewrite-target: "/$2"
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/x-forwarded-prefix: "/$1"
spec:
  rules:

  - http:
      paths:
      - path: /()?(.*)
        pathType: Prefix
        backend:
          service:
            name: my-reportportal-index
            port:
              name: headless
      - path: /(ui)/?(.*)
        pathType: Prefix
        backend:
          service:
            name: my-reportportal-ui
            port:
              name: headless
      - path: /(uat)/?(.*)
        pathType: Prefix
        backend:
          service:
            name: my-reportportal-uat
            port:
              name: headless
      - path: /(api)/?(.*)
        pathType: Prefix
        backend:
          service:
            name: my-reportportal-api
            port:
              name: headless

status:
  loadBalancer: {}
---
# Source: reportportal/templates/migrations-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: my-reportportal-migrations
  labels:     
    heritage: "Helm"
    release: "my-reportportal"
    chart: reportportal-5.7.2
    app: "reportportal"
  annotations:
    helm.sh/hook: "pre-install,pre-upgrade"
    helm.sh/hook-delete-policy: "before-hook-creation,hook-succeeded"
spec:
  template:
    metadata:
      labels:
        component: my-reportportal-migrations
      annotations:
    spec:
      restartPolicy: Never
      containers:
      - env:
        - name: POSTGRES_SSLMODE
          value: "disable"
        - name: POSTGRES_SERVER
          value: "<postgresql-release-name>-postgresql.default.svc.cluster.local"
        - name: POSTGRES_DB
          value: "reportportal"
        - name: POSTGRES_PORT
          value: "5432"
        - name: POSTGRES_USER
          value: "rpuser"
        - name: POSTGRES_PASSWORD
        
          value: ""
        
        image: "reportportal/migrations:5.7.0"
        name: migrations
        resources:
          requests:
            cpu: 100m
            memory: 64Mi
          limits:
            cpu: 100m
            memory: 128Mi
      securityContext:
        {}
      serviceAccountName:
