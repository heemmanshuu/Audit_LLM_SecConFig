---
# Source: kong/templates/service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-kong-kong
  namespace: default
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.41.1
    app.kubernetes.io/instance: "my-kong"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "3.6"
---
# Source: kong/templates/admission-webhook.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-kong-kong-validation-webhook-ca-keypair
  namespace:  default
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.41.1
    app.kubernetes.io/instance: "my-kong"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "3.6"
type: kubernetes.io/tls
data:
    tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKRENDQWd5Z0F3SUJBZ0lSQUpTWlYxdEF0d255ME90cVhCM2lqOFF3RFFZSktvWklodmNOQVFFTEJRQXcKSERFYU1CZ0dBMVVFQXhNUmEyOXVaeTFoWkcxcGMzTnBiMjR0WTJFd0hoY05NalF3T1RFMk1EZ3hNVEE0V2hjTgpNelF3T1RFME1EZ3hNVEE0V2pBY01Sb3dHQVlEVlFRREV4RnJiMjVuTFdGa2JXbHpjMmx2YmkxallUQ0NBU0l3CkRRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFMM3JTczdJK1VqVHdRTEQzODkrZnVxY0YyQW8KRVR1WUlTKy82RFU5dzRONDJNRmgzR2lPTFJPVTF4TmlpQm13WDFhVTdOUXRpVmY3NzlwbFNWSlMrRjdwb1d3OApib2Uramx5eUNQcDJFOHVQbVZ3N04rTTN5UTN3TklPT2VLdlh5RnYrU2JoZ2FkR0l0bVhtKytjWittdXZvRUhBCmhndnBFZHNjMkFFWVNyMHRySDZ5dWlLY0dJWmtkSHllaHQ1WGFXWU1TWTlIcXhlMFg4NWYxdnlWcUZRUCthRzQKd2g3eUc4cjc4Rnh3MmNNVnI3dFV2NTQ2UkpabnBabmJKcGlEbGQ1MzdPWEpYdkVqSzByNzFaRFpML0J0SlFCdAp3QVI4c0tRbjRJSWRiRERmZkpzYXp3UDZRSk5ZdllCTmdUeGpMeUtvbFQ0ZFRLQ0FiUUwxMFQ5MVRIRUNBd0VBCkFhTmhNRjh3RGdZRFZSMFBBUUgvQkFRREFnS2tNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01CMEdBMVVkRGdRV0JCUkFua1JBeU1NRU1HdERZamwzelp6UwpNNXJRNnpBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQWk0Uk1SQm5MaHczMlFSZWd4VG5zcnFxOG9TampZTEFVCm9kT1ZCMHpIQ3NSTnBQN2NibnZoU3RtSGlPVVBidGpDb1AvSHZ2M0JYUW1LTkwyU3cvMGZ6N2R4S2RKdVhIRm8KaHhCN0JEbS93YS9vVmd5MFBhNm5sZ0sweWVva3NDeU5oME8ydU9kZ3d0MXpGV2tFUkZDQXRJSW5Va3R1aS9sbQp3WDhjbUpmV0NGVDR3NVJqbXJFeFdhQ2pXb0ZyUDhCa0pQaFU5U0dqK2o4MnltY2hyVUFoSHg3bXFNakM2eWR6CnZWelE5WGUwV1BqVFlQNlpkaG80WFk3d1ozS3hxa3k4THhGL3c4b1dwN0R0bXpJMVpnYXpoVk95MlNiS21FdEgKV1MwY0FQSSthb0pYYWtJY2h4REdiak9ub0xoNnljQ2xJV1c3VlpQd0NGQmhPRWFNaWZ4WG5BPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdmV0S3pzajVTTlBCQXNQZnozNSs2cHdYWUNnUk81Z2hMNy9vTlQzRGczall3V0hjCmFJNHRFNVRYRTJLSUdiQmZWcFRzMUMySlYvdnYybVZKVWxMNFh1bWhiRHh1aDc2T1hMSUkrbllUeTQrWlhEczMKNHpmSkRmQTBnNDU0cTlmSVcvNUp1R0JwMFlpMlplYjc1eG42YTYrZ1FjQ0dDK2tSMnh6WUFSaEt2UzJzZnJLNgpJcHdZaG1SMGZKNkczbGRwWmd4SmowZXJGN1JmemwvVy9KV29WQS81b2JqQ0h2SWJ5dnZ3WEhEWnd4V3Z1MVMvCm5qcEVsbWVsbWRzbW1JT1YzbmZzNWNsZThTTXJTdnZWa05rdjhHMGxBRzNBQkh5d3BDZmdnaDFzTU45OG14clAKQS9wQWsxaTlnRTJCUEdNdklxaVZQaDFNb0lCdEF2WFJQM1ZNY1FJREFRQUJBb0lCQUFxWVBhd2JlZ3llQTM1cgovdWhNWGpnb1RRV0lOcTNrWnJXTE55RUJPUTcwaHVNQzJwRGFuWmtpREgyQVdhZFZOM3hWQW9FenFSM0hhREgrCnhJQmJNSS9hNks1cEVLRng5KzhqMzJ4WmVmRTVLWTBEb0xLRVFpc000MkVUYVpmc2liallEclRDYkNUTVE2Q2IKcWlIU1NTNEl0aC8wNVlWMGt4SnVJWDZ1SkQwNVhuSGgzZU1UZzR2VWxxQnAweVZjYVdJRUFlN2hRZExOY2UvVApoVUo1M0J2UmI2WXBHQkQ1UXFXVWlranZUcjNwMGFybEJtN0xYWUZZRGgzOElFTG5PMTdsNXBSQ2htcmxHUDRyCmdLWHZkcDZYa3lnYWJEbFJ6TzZqZGxXalA0MEJRTGFkaGJRY2hCRXZ0akJqZjlJcFR6S1Q3b3RqOTFha2w4anUKZ3UxV2E0RUNnWUVBNG04aWIvODllN3Yva05NVDlhZTBVVkR6YTdjdXcyVmFDcVlFdU1tMzUzTTArQ2VJQkxCQQpBM05GUE9mc2dncE91TldQZUgrRGZ5VHNyQ1NLTCtvdEhYc2NsQXRnbEZTU1lJOFpxMm1hNG5WWkxHR0dEaTNwCnBJZ2RYVFIrYUJtT29tK01hMGVJT2F4bGk5WWNFOE5ZMy9VNjQvZGU5RFY1eGZFZGNkTUs4Z1VDZ1lFQTFyZVkKSmZEYkVWcFpnNFdva1VVN2pMVjlhKzBwR2RRRHU5eFpwRGlIbGVoUFI0Y0Z1d3dERVNROENEZm9FNU0weWNEagovcGNHazBJSlMvRDFON3F5ZGJmYXJ2Z0ZjL2NSWENhUDV0VGp5NmdFdVZmdXJJalpNUXpqZ3pubmViWEtBb01SCkt3dEdVaUJpSndPejd3bDhmV1pZNHkzcmgwcENzNUVmemhHU29IMENnWUVBb0g2Tk5qei80MWdaaVJsVHFHYzYKRS9rQTBIU0NuTlNWd2I1eTBsZUlGbkUrTmpZdTNzUGVXNU8wbTdyM2xDU2lMN2lQZktWRkd6V2MyMWI2NjROYwpmdXpvRUxjUHVaTklQVkN3clNLcE9hSmJsbTE1aTB0WHM5c1dsUjNFQ3gweVVFZ29pMUdrYU55ZERVU3htZ0I0CldpV0RuRm1WNEJxWE9ZbnhpT0JCZmRFQ2dZQjY3NFZDZStQQnpMd2hySjQyQnJDd3dKejk5VHlxR0JUSE04TnoKWGhaclF5WlpLcnFpUEo5bzZoa2hEM2xsODh1dWxDMDE4QnlJcGErUzluUkFJem5ZWXBybndRUEdRTGlFeldObwo0NDFGWm43RjY4MndwVzNOUXJia3hIdCsyUkcvWEhHdzluU2R3d0xQbWJRazhZYUFlZC84dXFiMndCTHVvdkhWCjE0UGZOUUtCZ0N6VjNPcWxPS1RBUSt5cm94S3hyM2crUGx0eDdWeTdPY0JidHUrUFBVUTR5UGt0MDlkaTJUam4KWW1XOVZvSEp4ekdOcTEzcFlWN2U4ODhOVGx6YUl2VUlXVEtUb3RHVFBzS0J3KytiUEM5VEJwZ3pONnNIY3JHVwprQXBNRy85N0hJY3BUbjlSNWQ0d0ZUbHRidmppM25BV0Y5OHRnZmw1MVBFUjBPdFg3YmUyCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: kong/templates/admission-webhook.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-kong-kong-validation-webhook-keypair
  namespace:  default
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.41.1
    app.kubernetes.io/instance: "my-kong"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "3.6"
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURkekNDQWwrZ0F3SUJBZ0lSQU1UMlplY291T2VGMkovN3ZDZko1QjR3RFFZSktvWklodmNOQVFFTEJRQXcKSERFYU1CZ0dBMVVFQXhNUmEyOXVaeTFoWkcxcGMzTnBiMjR0WTJFd0hoY05NalF3T1RFMk1EZ3hNVEE0V2hjTgpNelF3T1RFME1EZ3hNVEE0V2pBMk1UUXdNZ1lEVlFRREV5dHRlUzFyYjI1bkxXdHZibWN0ZG1Gc2FXUmhkR2x2CmJpMTNaV0pvYjI5ckxtUmxabUYxYkhRdWMzWmpNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUIKQ2dLQ0FRRUF2OHBvRmYwSlFiQkErZ3ViUWV0MGY1SkNIbHNSdllJK2tLL0xRTjlCMFdwLzk3WENaMkNUQUFrcQpTTTR4Umd3OWsyTHBVQ3pJYjh2YzFRbExHV0VCV3ZPL0hCeDhOQ0NBQUU2R2NGVWk4cnpaczZFK01EOUpKV0tkCmhDTWFXUEZVQlJnL3I4elJqV3c3TE5KcmxXUERsT3hmTUkybEgxR0Z0cWJJbTFVR2h4TzF1Zk5hSWQ1UkJhVjQKSENzSXZJSEVWOE80TjBMSWFteWRiOUtPNjJURXoyd1Q4VFdNaUJoZCthUVhLcW9NTWRNczBNQUpyNEpxSDM2SQp6YkJvdWhXSGh4RkhKYSsxZWRQTERXb01Yc1N6U3Vsb3ZkUFEvSVpoN3Y1OC9JVmFMZzE4WDBhdVQ1RDFLVFdSCnpGSCtqQzR4a3VGeW0vYnZhLzlSVm9aSE9jUTYyUUlEQVFBQm80R1pNSUdXTUE0R0ExVWREd0VCL3dRRUF3SUYKb0RBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZgpCZ05WSFNNRUdEQVdnQlJBbmtSQXlNTUVNR3REWWpsM3paelNNNXJRNnpBMkJnTlZIUkVFTHpBdGdpdHRlUzFyCmIyNW5MV3R2Ym1jdGRtRnNhV1JoZEdsdmJpMTNaV0pvYjI5ckxtUmxabUYxYkhRdWMzWmpNQTBHQ1NxR1NJYjMKRFFFQkN3VUFBNElCQVFDYjU0VkwzMnNGNFQ0d1JwOFE0Ukx2M0RkdENqS0dyZFR0SHUxbW5mQjRUajlGMEFINgovNWRQRno4ZFRwL2ZwR2VxNWhMTFhMcEtFbkxBZkVMNnFQU0ZERGE4amdPTWNZZ1ZKaC9qMmZWUjM4VnRieHo4CkwwN0xUTDFEdUpabVNqS3I0L3k0QmVTMlhlK0hxci9JRFVrck1FTjM4TTVwQTVsUE1BSXBvSzd4dThBUHJ2M3oKM2NjclI1RVJwcHZBbVFMKzNTMURmRnphZkl4TFo1bEVGSXU2QUJYL3A3OGFMSnpJb2t5ZlhwV2FhMlQrQXBxbApsNFNTZXpPOGRQSzJ6QTJyYUc5d0dYVTFBYTQxem9kZ25uNnVVSlQ4UW5VVHpFY2Q1Sk1mbVhHVk02V2YzVVczCjJqSWhGcVdqeG9MRjRNek5KQnZ6MklYYjAwVzlyL1NjNEwxQgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdjhwb0ZmMEpRYkJBK2d1YlFldDBmNUpDSGxzUnZZSStrSy9MUU45QjBXcC85N1hDCloyQ1RBQWtxU000eFJndzlrMkxwVUN6SWI4dmMxUWxMR1dFQld2Ty9IQng4TkNDQUFFNkdjRlVpOHJ6WnM2RSsKTUQ5SkpXS2RoQ01hV1BGVUJSZy9yOHpSald3N0xOSnJsV1BEbE94Zk1JMmxIMUdGdHFiSW0xVUdoeE8xdWZOYQpJZDVSQmFWNEhDc0l2SUhFVjhPNE4wTElhbXlkYjlLTzYyVEV6MndUOFRXTWlCaGQrYVFYS3FvTU1kTXMwTUFKCnI0SnFIMzZJemJCb3VoV0hoeEZISmErMWVkUExEV29NWHNTelN1bG92ZFBRL0laaDd2NTgvSVZhTGcxOFgwYXUKVDVEMUtUV1J6RkgrakM0eGt1RnltL2J2YS85UlZvWkhPY1E2MlFJREFRQUJBb0lCQUJRdkIrOHdkdlhyeDVySQo5K2pqRDVxUldOWDYvWTMxRkFLRURaN2hIL3NhK3lhbGdUVUI2OVo0SUhRVEJ3cDVKVTNLZmdWTEFUa0t1azNOCk1aTVZLMkJZQUlmRDA2cGt0VFBURDhEb3BNbm81L3hJZnRQekJRNmpKektOd3lzVEVxV0tuTUV5aStjWE9jOEkKd2Z1eHlSWjJIYnB0WGJCREV4QmEwd2ZOMWVjSEZBdHh5OE1UVmdkRUdoTGRTSDZOdFp3V1RldmwvMGU2dXhQSgpWV2VhbkRPYVpVRkNXSFNaaVR5eFFmRGFzTENVSjVFUng4dW5lNENRcEN6ejZpdkd2K0dJSmFkcEpWRDg2bUxvCnFlTmF3cUxMOFMxUEVWVE9ITUFuTnRjeTFxbjYzNTlhY3dRS2dQT1QwUzdwdXpYS3UxVy94aU5RWnB4MXh2NFYKb1BQcjZHVUNnWUVBeGMzN1hoZnRUU0xmR3BTblNoREpjdzEvalVLZC82NnNUSXJoaE1LL1NUQTVPRzltZ2dKWgowYi9YeTQzWWt6N3lOOFF4d3JvQW9VM1VuTW85NWJoUUxXVUkxeE9PMWIyVDlyd09KTklpN2MweGdkSHVFaUpoCnFzakpGQjQ1M05oLy83bVNjSDlPUUx1NmJXd04xdjdNdW96clI5QzBEbjJVbnpwcFFEUlZ3UHNDZ1lFQStEZDQKeGw4ZmFJYkJhb1dTUHBXRUg4aGxJTDJqY1BYZ2dRM0JjcVdvYkNMTG80SnEzdzlOYTE1RUtXTFJNVVBEaElBTgpoWExxdjBjc050dUs1TFk5VkM4RjZDbWhtNTZlOHFZK3ZOT0tJTDRZanFXRGJ6UFhGUGtBTHVtWExXMUFPUXc0ClhjcHA4RGlZMkZVRjFGb3luaW9jTGdVYmlXbkgvaGc2NTl2d2N6c0NnWUJ3VDR0SkdyYlBWRnh2QURhWU5EM2QKaUsyQ3JHOS9qRk1pUnJ6VG42dnl4MkhGN0dLOHNNOEU3RE4velROS0w3UmgrNUR4YXFFTzlWMGlCU2J0OXgvMwpGbVhWa0xKS0pCRU9TQ3FUdDRqRGt2MW9JNlZVUUpkSjNDVm51ZDNLeWxhckFWZm5iakVsU2pJSkRSQXlvWXZtCjVEcDNGVVlXOEREaDA4Mk0rZW95M3dLQmdRRHdUZ1FIU1NCSE9lOFhDYW5FSFV5RTJLWFBSTWx2R3h2MjFUSnIKcENXaVN5Mkxaei9BSkRoM3NoT2JYYWZaWWhsdnRlbGhRUmd6aHR3dlgremY3KzhBQ1daV2xiZDN5ZUZvV2JwegpaUGxkS2F6c3JTREtFQTR5cDc2ZHJGaElDblVheGRIc080TEVwb2FUS2YweTBRQWdUL1JvT1ZtbmQxbS9qZ1c1Cll4MHU4UUtCZ1FDaVUxWVlwclU2OXZNMEZ4b3lvZzZNNGowbEQramFkUXBwT0J2N3VSTjBEL0t2VVdHV0FCcngKdXhUNTZ3aGtZZUNDWGp4ZUNrZCt4QVh6OG9TSWRmUFN4Ty9TN1hxZ3F5TmlZVVRVTGY2YUJBeGMyN0JjYW9pbgorZ3A5akIwcEJrR082aHZwcWsrd2gzT0w3Z2V2VW9XLzk5aFpUK0VyNGpGY0pES2EzWEpkYUE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: kong/templates/controller-rbac-resources.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.41.1
    app.kubernetes.io/instance: "my-kong"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "3.6"
  name: my-kong-kong
rules:

- apiGroups:
  - configuration.konghq.com
  resources:
  - kongcustomentities
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongcustomentities/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongupstreampolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongupstreampolicies/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongconsumergroups
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongconsumergroups/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - ingressclassparameterses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongconsumers
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongconsumers/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongingresses/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongplugins
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongplugins/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - tcpingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - tcpingresses/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - udpingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - udpingresses/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - extensions
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - extensions
  resources:
  - ingresses/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch

- apiGroups:
  - configuration.konghq.com
  resources:
  - konglicenses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - konglicenses/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongvaults
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongvaults/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongclusterplugins
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongclusterplugins/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingressclasses
  verbs:
  - get
  - list
  - watch
---
# Source: kong/templates/controller-rbac-resources.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-kong-kong
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.41.1
    app.kubernetes.io/instance: "my-kong"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "3.6"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-kong-kong
subjects:
  - kind: ServiceAccount
    name: my-kong-kong
    namespace: default
---
# Source: kong/templates/controller-rbac-resources.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: my-kong-kong
  namespace: default
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.41.1
    app.kubernetes.io/instance: "my-kong"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "3.6"
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
      - pods
      - secrets
      - namespaces
    verbs:
      - get
  - apiGroups:
      - ""
    resources:
      - configmaps
    resourceNames:
      # Defaults to "<election-id>-<ingress-class>"
      # Here: "<kong-ingress-controller-leader-nginx>-<nginx>"
      # This has to be adapted if you change either parameter
      # when launching the nginx-ingress-controller.
      - "kong-ingress-controller-leader-kong-kong"
    verbs:
      - get
      - update
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - create
  # Begin KIC 2.x leader permissions
  - apiGroups:
      - ""
      - coordination.k8s.io
    resources:
      - configmaps
      - leases
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
  - apiGroups:
      - ""
    resources:
      - services
    verbs:
      - get
---
# Source: kong/templates/controller-rbac-resources.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: my-kong-kong
  namespace: default
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.41.1
    app.kubernetes.io/instance: "my-kong"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "3.6"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: my-kong-kong
subjects:
  - kind: ServiceAccount
    name: my-kong-kong
    namespace: default
---
# Source: kong/templates/admission-webhook.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-kong-kong-validation-webhook
  namespace: default
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.41.1
    app.kubernetes.io/instance: "my-kong"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "3.6"
spec:
  ports:
  - name: webhook
    port: 443
    protocol: TCP
    targetPort: webhook
  selector:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.41.1
    app.kubernetes.io/instance: "my-kong"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "3.6"
    app.kubernetes.io/component: app
---
# Source: kong/templates/service-kong-manager.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-kong-kong-manager
  namespace: default
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.41.1
    app.kubernetes.io/instance: "my-kong"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "3.6"
spec:
  type: NodePort
  ports:
  - name: kong-manager
    port: 8002
    targetPort: 8002
    protocol: TCP
  - name: kong-manager-tls
    port: 8445
    targetPort: 8445
    protocol: TCP
  selector:
    app.kubernetes.io/name: kong
    app.kubernetes.io/component: app
    app.kubernetes.io/instance: "my-kong"
---
# Source: kong/templates/service-kong-proxy.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-kong-kong-proxy
  namespace: default
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.41.1
    app.kubernetes.io/instance: "my-kong"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "3.6"
    enable-metrics: "true"
spec:
  type: LoadBalancer
  ports:
  - name: kong-proxy
    port: 80
    targetPort: 8000
    protocol: TCP
  - name: kong-proxy-tls
    port: 443
    targetPort: 8443
    protocol: TCP
  selector:
    app.kubernetes.io/name: kong
    app.kubernetes.io/component: app
    app.kubernetes.io/instance: "my-kong"
---
# Source: kong/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-kong-kong
  namespace:  default
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.41.1
    app.kubernetes.io/instance: "my-kong"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "3.6"
    app.kubernetes.io/component: app
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: kong
      app.kubernetes.io/component: app
      app.kubernetes.io/instance: "my-kong"

  template:
    metadata:
      annotations:
        kuma.io/service-account-token-volume: my-kong-kong-token
        kuma.io/gateway: "enabled"
        traffic.sidecar.istio.io/includeInboundPorts: ""
      labels:
        app.kubernetes.io/name: kong
        helm.sh/chart: kong-2.41.1
        app.kubernetes.io/instance: "my-kong"
        app.kubernetes.io/managed-by: "Helm"
        app.kubernetes.io/version: "3.6"
        app.kubernetes.io/component: app
        app: my-kong-kong
        version: "3.6"
    spec:
      serviceAccountName: my-kong-kong
      automountServiceAccountToken: false
      
      initContainers:
      - name: clear-stale-pid
        image: kong:3.6
        imagePullPolicy: IfNotPresent
        securityContext:
        
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        resources:
          {}
        command:
        - "rm"
        - "-vrf"
        - "$KONG_PREFIX/pids"
        env:
         
        
        
        - name: KONG_ADMIN_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_ADMIN_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ADMIN_GUI_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_ADMIN_GUI_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ADMIN_LISTEN
          value: "127.0.0.1:8444 http2 ssl, [::1]:8444 http2 ssl"
        - name: KONG_CLUSTER_LISTEN
          value: "off"
        - name: KONG_DATABASE
          value: "off"
        - name: KONG_KIC
          value: "on"
        - name: KONG_LUA_PACKAGE_PATH
          value: "/opt/?.lua;/opt/?/init.lua;;"
        - name: KONG_NGINX_WORKER_PROCESSES
          value: "2"
        - name: KONG_PORTAL_API_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_PORTAL_API_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_PORT_MAPS
          value: "80:8000, 443:8443"
        - name: KONG_PREFIX
          value: "/kong_prefix/"
        - name: KONG_PROXY_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_PROXY_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_PROXY_LISTEN
          value: "0.0.0.0:8000, [::]:8000, 0.0.0.0:8443 http2 ssl, [::]:8443 http2 ssl"
        - name: KONG_PROXY_STREAM_ACCESS_LOG
          value: "/dev/stdout basic"
        - name: KONG_PROXY_STREAM_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ROUTER_FLAVOR
          value: "traditional"
        - name: KONG_STATUS_ACCESS_LOG
          value: "off"
        - name: KONG_STATUS_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_STATUS_LISTEN
          value: "0.0.0.0:8100, [::]:8100"
        - name: KONG_STREAM_LISTEN
          value: "off"
        
        volumeMounts:
        - name: my-kong-kong-prefix-dir
          mountPath: /kong_prefix/
        - name: my-kong-kong-tmp
          mountPath: /tmp
      containers:
      - name: ingress-controller
        securityContext:
      
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        args:
        
        ports:
        - name: webhook
          containerPort: 8080
          protocol: TCP
        - name: cmetrics
          containerPort: 10255
          protocol: TCP
        - name: cstatus
          containerPort: 10254
          protocol: TCP
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace  
        
        
        
        
        
        
        - name: CONTROLLER_ADMISSION_WEBHOOK_LISTEN
          value: "0.0.0.0:8080"
        - name: CONTROLLER_ELECTION_ID
          value: "kong-ingress-controller-leader-kong"
        - name: CONTROLLER_INGRESS_CLASS
          value: "kong"
        - name: CONTROLLER_KONG_ADMIN_TLS_SKIP_VERIFY
          value: "true"
        - name: CONTROLLER_KONG_ADMIN_URL
          value: "https://localhost:8444"
        - name: CONTROLLER_PUBLISH_SERVICE
          value: "default/my-kong-kong-proxy"
        
        image: kong/kubernetes-ingress-controller:3.3
        imagePullPolicy: IfNotPresent
      
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /readyz
            port: 10254
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 10254
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        resources:
          {}
        volumeMounts:
        - name: webhook-cert
          mountPath: /admission-webhook
          readOnly: true
        - name: my-kong-kong-token
          mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          readOnly: true
        
        
      
      - name: "proxy"
        image: kong:3.6
        imagePullPolicy: IfNotPresent
        securityContext:
        
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        env:
         
        
        
        - name: KONG_ADMIN_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_ADMIN_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ADMIN_GUI_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_ADMIN_GUI_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ADMIN_LISTEN
          value: "127.0.0.1:8444 http2 ssl, [::1]:8444 http2 ssl"
        - name: KONG_CLUSTER_LISTEN
          value: "off"
        - name: KONG_DATABASE
          value: "off"
        - name: KONG_KIC
          value: "on"
        - name: KONG_LUA_PACKAGE_PATH
          value: "/opt/?.lua;/opt/?/init.lua;;"
        - name: KONG_NGINX_WORKER_PROCESSES
          value: "2"
        - name: KONG_PORTAL_API_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_PORTAL_API_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_PORT_MAPS
          value: "80:8000, 443:8443"
        - name: KONG_PREFIX
          value: "/kong_prefix/"
        - name: KONG_PROXY_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_PROXY_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_PROXY_LISTEN
          value: "0.0.0.0:8000, [::]:8000, 0.0.0.0:8443 http2 ssl, [::]:8443 http2 ssl"
        - name: KONG_PROXY_STREAM_ACCESS_LOG
          value: "/dev/stdout basic"
        - name: KONG_PROXY_STREAM_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ROUTER_FLAVOR
          value: "traditional"
        - name: KONG_STATUS_ACCESS_LOG
          value: "off"
        - name: KONG_STATUS_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_STATUS_LISTEN
          value: "0.0.0.0:8100, [::]:8100"
        - name: KONG_STREAM_LISTEN
          value: "off"
        - name: KONG_NGINX_DAEMON
          value: "off"
        
        lifecycle:
          preStop:
            exec:
              command:
              - kong
              - quit
              - --wait=15
        ports:
        - name: proxy
          containerPort: 8000
          protocol: TCP
        - name: proxy-tls
          containerPort: 8443
          protocol: TCP
        - name: status
          containerPort: 8100
          protocol: TCP
        volumeMounts:
          - name: my-kong-kong-prefix-dir
            mountPath: /kong_prefix/
          - name: my-kong-kong-tmp
            mountPath: /tmp
          
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /status/ready
            port: status
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /status
            port: status
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        resources:
          {} 
      securityContext:
        {}
      terminationGracePeriodSeconds: 30
      volumes:
        - name: my-kong-kong-prefix-dir
          emptyDir:
            sizeLimit: 256Mi
        - name: my-kong-kong-tmp
          emptyDir:
            sizeLimit: 1Gi
        - name: my-kong-kong-token
          projected:
            sources:
            - serviceAccountToken:
                expirationSeconds: 3607
                path: token
            - configMap:
                items:
                - key: ca.crt
                  path: ca.crt
                name: kube-root-ca.crt
            - downwardAPI:
                items:
                - fieldRef:
                    apiVersion: v1
                    fieldPath: metadata.namespace
                  path: namespace
        - name: webhook-cert
          secret:
            secretName: my-kong-kong-validation-webhook-keypair
---
# Source: kong/templates/admission-webhook.yaml
kind: ValidatingWebhookConfiguration
apiVersion: admissionregistration.k8s.io/v1
metadata:
  name: my-kong-kong-validations
  namespace: default
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.41.1
    app.kubernetes.io/instance: "my-kong"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "3.6"
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKRENDQWd5Z0F3SUJBZ0lSQUpTWlYxdEF0d255ME90cVhCM2lqOFF3RFFZSktvWklodmNOQVFFTEJRQXcKSERFYU1CZ0dBMVVFQXhNUmEyOXVaeTFoWkcxcGMzTnBiMjR0WTJFd0hoY05NalF3T1RFMk1EZ3hNVEE0V2hjTgpNelF3T1RFME1EZ3hNVEE0V2pBY01Sb3dHQVlEVlFRREV4RnJiMjVuTFdGa2JXbHpjMmx2YmkxallUQ0NBU0l3CkRRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFMM3JTczdJK1VqVHdRTEQzODkrZnVxY0YyQW8KRVR1WUlTKy82RFU5dzRONDJNRmgzR2lPTFJPVTF4TmlpQm13WDFhVTdOUXRpVmY3NzlwbFNWSlMrRjdwb1d3OApib2Uramx5eUNQcDJFOHVQbVZ3N04rTTN5UTN3TklPT2VLdlh5RnYrU2JoZ2FkR0l0bVhtKytjWittdXZvRUhBCmhndnBFZHNjMkFFWVNyMHRySDZ5dWlLY0dJWmtkSHllaHQ1WGFXWU1TWTlIcXhlMFg4NWYxdnlWcUZRUCthRzQKd2g3eUc4cjc4Rnh3MmNNVnI3dFV2NTQ2UkpabnBabmJKcGlEbGQ1MzdPWEpYdkVqSzByNzFaRFpML0J0SlFCdAp3QVI4c0tRbjRJSWRiRERmZkpzYXp3UDZRSk5ZdllCTmdUeGpMeUtvbFQ0ZFRLQ0FiUUwxMFQ5MVRIRUNBd0VBCkFhTmhNRjh3RGdZRFZSMFBBUUgvQkFRREFnS2tNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01CMEdBMVVkRGdRV0JCUkFua1JBeU1NRU1HdERZamwzelp6UwpNNXJRNnpBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQWk0Uk1SQm5MaHczMlFSZWd4VG5zcnFxOG9TampZTEFVCm9kT1ZCMHpIQ3NSTnBQN2NibnZoU3RtSGlPVVBidGpDb1AvSHZ2M0JYUW1LTkwyU3cvMGZ6N2R4S2RKdVhIRm8KaHhCN0JEbS93YS9vVmd5MFBhNm5sZ0sweWVva3NDeU5oME8ydU9kZ3d0MXpGV2tFUkZDQXRJSW5Va3R1aS9sbQp3WDhjbUpmV0NGVDR3NVJqbXJFeFdhQ2pXb0ZyUDhCa0pQaFU5U0dqK2o4MnltY2hyVUFoSHg3bXFNakM2eWR6CnZWelE5WGUwV1BqVFlQNlpkaG80WFk3d1ozS3hxa3k4THhGL3c4b1dwN0R0bXpJMVpnYXpoVk95MlNiS21FdEgKV1MwY0FQSSthb0pYYWtJY2h4REdiak9ub0xoNnljQ2xJV1c3VlpQd0NGQmhPRWFNaWZ4WG5BPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    service:
      name: my-kong-kong-validation-webhook
      namespace: default
  failurePolicy: Ignore
  matchPolicy: Equivalent
  name: secrets.credentials.validation.ingress-controller.konghq.com
  objectSelector:
    matchExpressions:
    - key: "konghq.com/credential"
      operator: "Exists"
  rules:
  - apiGroups:
    - ""
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - secrets
  sideEffects: None
- admissionReviewVersions:
  - v1
  clientConfig:
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKRENDQWd5Z0F3SUJBZ0lSQUpTWlYxdEF0d255ME90cVhCM2lqOFF3RFFZSktvWklodmNOQVFFTEJRQXcKSERFYU1CZ0dBMVVFQXhNUmEyOXVaeTFoWkcxcGMzTnBiMjR0WTJFd0hoY05NalF3T1RFMk1EZ3hNVEE0V2hjTgpNelF3T1RFME1EZ3hNVEE0V2pBY01Sb3dHQVlEVlFRREV4RnJiMjVuTFdGa2JXbHpjMmx2YmkxallUQ0NBU0l3CkRRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFMM3JTczdJK1VqVHdRTEQzODkrZnVxY0YyQW8KRVR1WUlTKy82RFU5dzRONDJNRmgzR2lPTFJPVTF4TmlpQm13WDFhVTdOUXRpVmY3NzlwbFNWSlMrRjdwb1d3OApib2Uramx5eUNQcDJFOHVQbVZ3N04rTTN5UTN3TklPT2VLdlh5RnYrU2JoZ2FkR0l0bVhtKytjWittdXZvRUhBCmhndnBFZHNjMkFFWVNyMHRySDZ5dWlLY0dJWmtkSHllaHQ1WGFXWU1TWTlIcXhlMFg4NWYxdnlWcUZRUCthRzQKd2g3eUc4cjc4Rnh3MmNNVnI3dFV2NTQ2UkpabnBabmJKcGlEbGQ1MzdPWEpYdkVqSzByNzFaRFpML0J0SlFCdAp3QVI4c0tRbjRJSWRiRERmZkpzYXp3UDZRSk5ZdllCTmdUeGpMeUtvbFQ0ZFRLQ0FiUUwxMFQ5MVRIRUNBd0VBCkFhTmhNRjh3RGdZRFZSMFBBUUgvQkFRREFnS2tNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01CMEdBMVVkRGdRV0JCUkFua1JBeU1NRU1HdERZamwzelp6UwpNNXJRNnpBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQWk0Uk1SQm5MaHczMlFSZWd4VG5zcnFxOG9TampZTEFVCm9kT1ZCMHpIQ3NSTnBQN2NibnZoU3RtSGlPVVBidGpDb1AvSHZ2M0JYUW1LTkwyU3cvMGZ6N2R4S2RKdVhIRm8KaHhCN0JEbS93YS9vVmd5MFBhNm5sZ0sweWVva3NDeU5oME8ydU9kZ3d0MXpGV2tFUkZDQXRJSW5Va3R1aS9sbQp3WDhjbUpmV0NGVDR3NVJqbXJFeFdhQ2pXb0ZyUDhCa0pQaFU5U0dqK2o4MnltY2hyVUFoSHg3bXFNakM2eWR6CnZWelE5WGUwV1BqVFlQNlpkaG80WFk3d1ozS3hxa3k4THhGL3c4b1dwN0R0bXpJMVpnYXpoVk95MlNiS21FdEgKV1MwY0FQSSthb0pYYWtJY2h4REdiak9ub0xoNnljQ2xJV1c3VlpQd0NGQmhPRWFNaWZ4WG5BPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    service:
      name: my-kong-kong-validation-webhook
      namespace: default
  failurePolicy: Ignore
  matchPolicy: Equivalent
  name: secrets.plugins.validation.ingress-controller.konghq.com
  objectSelector:
    matchExpressions:
    - key: owner
      operator: NotIn
      values:
      - helm
  rules:
  - apiGroups:
    - ""
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - secrets
  sideEffects: None
- name: validations.kong.konghq.com
  objectSelector:
    matchExpressions:
    - key: owner
      operator: NotIn
      values:
      - helm
  failurePolicy: Ignore
  sideEffects: None
  admissionReviewVersions: ["v1beta1"]
  rules:
  - apiGroups:
    - configuration.konghq.com
    apiVersions:
    - '*'
    operations:
    - CREATE
    - UPDATE
    resources:
    - kongconsumers
    - kongplugins
    - kongclusterplugins
    - kongingresses
  - apiGroups:
    - ''
    apiVersions:
    - 'v1'
    operations:
    - CREATE
    - UPDATE
    resources:
    - services
  - apiGroups:
    - networking.k8s.io
    apiVersions:
      - 'v1'
    operations:
    - CREATE
    - UPDATE
    resources:
    - ingresses
  - apiGroups:
    - gateway.networking.k8s.io
    apiVersions:
    - 'v1alpha2'
    - 'v1beta1'
    - 'v1'
    operations:
    - CREATE
    - UPDATE
    resources:
    - gateways
    - httproutes
  clientConfig:
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKRENDQWd5Z0F3SUJBZ0lSQUpTWlYxdEF0d255ME90cVhCM2lqOFF3RFFZSktvWklodmNOQVFFTEJRQXcKSERFYU1CZ0dBMVVFQXhNUmEyOXVaeTFoWkcxcGMzTnBiMjR0WTJFd0hoY05NalF3T1RFMk1EZ3hNVEE0V2hjTgpNelF3T1RFME1EZ3hNVEE0V2pBY01Sb3dHQVlEVlFRREV4RnJiMjVuTFdGa2JXbHpjMmx2YmkxallUQ0NBU0l3CkRRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFMM3JTczdJK1VqVHdRTEQzODkrZnVxY0YyQW8KRVR1WUlTKy82RFU5dzRONDJNRmgzR2lPTFJPVTF4TmlpQm13WDFhVTdOUXRpVmY3NzlwbFNWSlMrRjdwb1d3OApib2Uramx5eUNQcDJFOHVQbVZ3N04rTTN5UTN3TklPT2VLdlh5RnYrU2JoZ2FkR0l0bVhtKytjWittdXZvRUhBCmhndnBFZHNjMkFFWVNyMHRySDZ5dWlLY0dJWmtkSHllaHQ1WGFXWU1TWTlIcXhlMFg4NWYxdnlWcUZRUCthRzQKd2g3eUc4cjc4Rnh3MmNNVnI3dFV2NTQ2UkpabnBabmJKcGlEbGQ1MzdPWEpYdkVqSzByNzFaRFpML0J0SlFCdAp3QVI4c0tRbjRJSWRiRERmZkpzYXp3UDZRSk5ZdllCTmdUeGpMeUtvbFQ0ZFRLQ0FiUUwxMFQ5MVRIRUNBd0VBCkFhTmhNRjh3RGdZRFZSMFBBUUgvQkFRREFnS2tNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01CMEdBMVVkRGdRV0JCUkFua1JBeU1NRU1HdERZamwzelp6UwpNNXJRNnpBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQWk0Uk1SQm5MaHczMlFSZWd4VG5zcnFxOG9TampZTEFVCm9kT1ZCMHpIQ3NSTnBQN2NibnZoU3RtSGlPVVBidGpDb1AvSHZ2M0JYUW1LTkwyU3cvMGZ6N2R4S2RKdVhIRm8KaHhCN0JEbS93YS9vVmd5MFBhNm5sZ0sweWVva3NDeU5oME8ydU9kZ3d0MXpGV2tFUkZDQXRJSW5Va3R1aS9sbQp3WDhjbUpmV0NGVDR3NVJqbXJFeFdhQ2pXb0ZyUDhCa0pQaFU5U0dqK2o4MnltY2hyVUFoSHg3bXFNakM2eWR6CnZWelE5WGUwV1BqVFlQNlpkaG80WFk3d1ozS3hxa3k4THhGL3c4b1dwN0R0bXpJMVpnYXpoVk95MlNiS21FdEgKV1MwY0FQSSthb0pYYWtJY2h4REdiak9ub0xoNnljQ2xJV1c3VlpQd0NGQmhPRWFNaWZ4WG5BPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    service:
      name: my-kong-kong-validation-webhook
      namespace: default
